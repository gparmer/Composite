0x0 
0x0 _ZGTtnam
0x0 __strcat_chk
0x0 mkstemps
0x0 getenv
0x0 dl_iterate_phdr
0x0 __snprintf_chk
0x0 free
0x0 putchar
0x0 strcasecmp
0x0 __vfprintf_chk
0x0 __libc_start_main
0x0 strverscmp
0x0 abort
0x0 __errno_location
0x0 unlink
0x0 strncpy
0x0 remove
0x0 strncmp
0x0 _exit
0x0 strcpy
0x0 __read_chk
0x0 puts
0x0 ferror
0x0 isatty
0x0 fread
0x0 readlink
0x0 fcntl
0x0 setenv
0x0 write
0x0 getpid
0x0 textdomain
0x0 _ITM_RU1
0x0 fclose
0x0 bindtextdomain
0x0 strlen
0x0 __stack_chk_fail
0x0 mmap
0x0 system
0x0 gettext
0x0 dup2
0x0 strchr
0x0 snprintf
0x0 strrchr
0x0 gettimeofday
0x0 _ITM_addUserCommitAction
0x0 fileno_unlocked
0x0 fputs
0x0 _ITM_memcpyRtWn
0x0 memset
0x0 ioctl
0x0 __pthread_key_create
0x0 strnlen
0x0 fgetc
0x0 close
0x0 __realpath_chk
0x0 pipe
0x0 fputc
0x0 memchr
0x0 read
0x0 lstat
0x0 memcmp
0x0 sbrk
0x0 fgets
0x0 __tls_get_addr
0x0 strtoull
0x0 calloc
0x0 putenv
0x0 strcmp
0x0 putc
0x0 signal
0x0 __libc_single_threaded
0x0 syscall
0x0 ftell
0x0 feof
0x0 __gmon_start__
0x0 stat
0x0 strtol
0x0 memcpy
0x0 kill
0x0 time
0x0 pthread_mutex_unlock
0x0 malloc
0x0 fflush
0x0 __fsetlocking
0x0 nl_langinfo
0x0 __isoc99_sscanf
0x0 fseek
0x0 setrlimit
0x0 strsignal
0x0 realloc
0x0 fdopen
0x0 munmap
0x0 setlocale
0x0 _ITM_RU8
0x0 __printf_chk
0x0 wait4
0x0 memmove
0x0 waitpid
0x0 open
0x0 access
0x0 fopen
0x0 _ITM_memcpyRnWt
0x0 strtok
0x0 vfork
0x0 strtoul
0x0 execvp
0x0 __cxa_atexit
0x0 strcat
0x0 getpagesize
0x0 pipe2
0x0 exit
0x0 fwrite
0x0 __fprintf_chk
0x0 getrlimit
0x0 strdup
0x0 strerror
0x0 _ZGTtdlPv
0x0 sleep
0x0 fstat
0x0 pthread_once
0x0 execv
0x0 strstr
0x0 __vsprintf_chk
0x0 pthread_mutex_lock
0x0 __ctype_b_loc
0x0 __sprintf_chk
0x4e24e8 obstack_alloc_failed_handler
0x4316f0 _obstack_newchunk
0x4e3060 stdout
0x42b2dd _obstack_begin_1
0x42b300 _obstack_allocated_p
0x4e3080 environ
0x4e3070 stdin
0x42d700 _obstack_begin
0x42b327 _obstack_memory_used
0x4e3080 __environ
0x4e30a0 stderr
0x42dd40 _obstack_free
0x403f70:	xor	r13d, r13d
0x403f73:	jmp	0x432274
0x403f78:	xor	r13d, r13d
0x403f7b:	jmp	0x43224c
0x403f80:	xor	r13d, r13d
0x403f83:	jmp	0x43224c
0x403f88:	xor	r13d, r13d
0x403f8b:	xor	r14d, r14d
0x403f8e:	jmp	0x43224c
0x403f93:	call	0x403eb0
0x403f98:	mov	rbx, rax
0x403f9b:	jmp	0x4320ac
0x403fa0:	mov	edi, 0x45b519
0x403fa5:	call	0x403800
0x403faa:	test	rax, rax
0x403fad:	je	0x43208e
0x403fb3:	mov	rdi, rax
0x403fb6:	mov	qword ptr [rbp - 0xd8], rax
0x403fbd:	call	0x4039e0
0x403fc2:	mov	ecx, 2
0x403fc7:	mov	rdi, r12
0x403fca:	test	rax, rax
0x403fcd:	lea	r15, [rax + 1]
0x403fd1:	cmove	r15, rcx
0x403fd5:	call	0x4039e0
0x403fda:	mov	rsi, qword ptr [rbp - 0xd8]
0x403fe1:	add	rax, r15
0x403fe4:	lea	rdi, [rax + 1]
0x403fe8:	cmp	rdi, 0xfbf
0x403fef:	ja	0x404087
0x403ff5:	add	rax, 0x18
0x403ff9:	mov	r8, rsp
0x403ffc:	mov	rdi, rax
0x403fff:	and	rax, 0xfffffffffffff000
0x404005:	and	rdi, 0xfffffffffffffff0
0x404009:	sub	r8, rax
0x40400c:	cmp	rsp, r8
0x40400f:	je	0x4040bf
0x404015:	sub	rsp, 0x1000
0x40401c:	or	qword ptr [rsp + 0xff8], 0
0x404025:	jmp	0x40400c
0x404027:	xor	r13d, r13d
0x40402a:	xor	r14d, r14d
0x40402d:	xor	r12d, r12d
0x404030:	mov	qword ptr [rbp - 0xf0], 0
0x40403b:	jmp	0x43224c
0x404040:	xor	r15d, r15d
0x404043:	mov	r14d, r15d
0x404046:	cmp	dword ptr [rbp - 0xe8], r15d
0x40404d:	jle	0x40406b
0x40404f:	mov	r9, qword ptr [rbp - 0xf0]
0x404056:	mov	rdi, qword ptr [r12 + r15*8]
0x40405a:	mov	rsi, qword ptr [r9 + r15*8]
0x40405e:	add	r15, 1
0x404062:	call	0x403be0
0x404067:	test	eax, eax
0x404069:	je	0x404043
0x40406b:	cmp	dword ptr [rbp - 0xe8], r14d
0x404072:	je	0x40407c
0x404074:	test	ebx, ebx
0x404076:	jg	0x43211c
0x40407c:	xor	r13d, r13d
0x40407f:	xor	r14d, r14d
0x404082:	jmp	0x43224c
0x404087:	mov	qword ptr [rbp - 0xd8], rsi
0x40408e:	call	0x403ca0
0x404093:	mov	rsi, qword ptr [rbp - 0xd8]
0x40409a:	mov	qword ptr [rbp - 0x100], rax
0x4040a1:	mov	r15, rax
0x4040a4:	mov	rcx, rsi
0x4040a7:	movzx	r9d, byte ptr [rcx]
0x4040ab:	cmp	r9b, 0x3a
0x4040af:	je	0x4040ea
0x4040b1:	lea	rdi, [rcx + 1]
0x4040b5:	test	r9b, r9b
0x4040b8:	je	0x4040ea
0x4040ba:	mov	rcx, rdi
0x4040bd:	jmp	0x4040a7
0x4040bf:	mov	rdx, rdi
0x4040c2:	and	edx, 0xfff
0x4040c8:	sub	rsp, rdx
0x4040cb:	test	rdx, rdx
0x4040ce:	jne	0x40417f
0x4040d4:	mov	qword ptr [rbp - 0x100], 0
0x4040df:	lea	r15, [rsp + 0xf]
0x4040e4:	and	r15, 0xfffffffffffffff0
0x4040e8:	jmp	0x4040a4
0x4040ea:	cmp	rsi, rcx
0x4040ed:	je	0x40416c
0x4040ef:	mov	rdx, rcx
0x4040f2:	mov	rdi, r15
0x4040f5:	mov	qword ptr [rbp - 0xe0], rcx
0x4040fc:	sub	rdx, rsi
0x4040ff:	mov	qword ptr [rbp - 0xd8], rdx
0x404106:	call	0x403c60
0x40410b:	mov	rcx, qword ptr [rbp - 0xe0]
0x404112:	mov	r10, qword ptr [rbp - 0xd8]
0x404119:	cmp	byte ptr [rcx - 1], 0x2f
0x40411d:	lea	r11, [r15 + r10]
0x404121:	je	0x404179
0x404123:	mov	byte ptr [r11], 0x2f
0x404127:	mov	byte ptr [r15 + r10 + 1], 0
0x40412d:	mov	rsi, r12
0x404130:	mov	rdi, r15
0x404133:	mov	qword ptr [rbp - 0xd8], rcx
0x40413a:	call	0x403e40
0x40413f:	mov	esi, 1
0x404144:	mov	rdi, r15
0x404147:	call	0x403dc0
0x40414c:	mov	rsi, qword ptr [rbp - 0xd8]
0x404153:	test	eax, eax
0x404155:	je	0x40418a
0x404157:	cmp	byte ptr [rsi], 0
0x40415a:	je	0x432099
0x404160:	lea	rdi, [rsi + 1]
0x404164:	mov	rsi, rdi
0x404167:	jmp	0x4040ba
0x40416c:	mov	word ptr [r15], 0x2f2e
0x404172:	mov	byte ptr [r15 + 2], 0
0x404177:	jmp	0x40412d
0x404179:	mov	byte ptr [r11], 0
0x40417d:	jmp	0x40412d
0x40417f:	or	qword ptr [rsp + rdx - 8], 0
0x404185:	jmp	0x4040d4
0x40418a:	lea	rsi, [rbp - 0xc0]
0x404191:	mov	rdi, r15
0x404194:	call	0x403c40
0x404199:	mov	rsi, qword ptr [rbp - 0xd8]
0x4041a0:	test	eax, eax
0x4041a2:	js	0x404157
0x4041a4:	mov	eax, dword ptr [rbp - 0xa8]
0x4041aa:	and	eax, 0xf000
0x4041af:	cmp	eax, 0x8000
0x4041b4:	jne	0x404157
0x4041b6:	mov	r12, r15
0x4041b9:	jmp	0x432099
0x4041be:	push	rax
0x4041bf:	mov	edx, 0x45b004
0x4041c4:	mov	esi, 0x63
0x4041c9:	mov	edi, 0x45b022
0x4041ce:	call	0x415bba
0x4041d3:	mov	ebp, 1
0x4041d8:	mov	ebx, 1
0x4041dd:	imul	rbx, rbp
0x4041e1:	mov	rdi, rbx
0x4041e4:	call	0x42c22d
0x4041e9:	mov	rdi, r14
0x4041ec:	mov	qword ptr [rsp + 8], rcx
0x4041f1:	mov	qword ptr [r14 + rdx], 0
0x4041f9:	call	0x432570
0x4041fe:	mov	rax, qword ptr [rsp + 8]
0x404203:	jmp	0x43255a
0x404208:	add	rbx, 1
0x40420c:	jmp	0x4324b3
0x404211:	xor	eax, eax
0x404213:	jmp	0x43255a
0x404218:	mov	rdi, r14
0x40421b:	mov	qword ptr [rsp + 8], r11
0x404220:	call	0x432570
0x404225:	mov	rax, qword ptr [rsp + 8]
0x40422a:	jmp	0x43255a
0x40422f:	ret	
0x404230:	mov	qword ptr [rsp + 8], rdx
0x404235:	mov	rdi, qword ptr [rbx + 0x48]
0x404239:	call	rax
0x40423b:	mov	rdx, qword ptr [rsp + 8]
0x404240:	jmp	0x42d859
0x404245:	mov	qword ptr [rsp + 8], rdx
0x40424a:	call	qword ptr [rip + 0xde298]
0x404250:	mov	r11, qword ptr [rsp + 8]
0x404255:	mov	qword ptr [rbx + 8], 0
0x40425d:	lea	r12, [r11 + 0xf]
0x404261:	and	r12, r13
0x404264:	mov	qword ptr [rbx + 0x10], r12
0x404268:	mov	qword ptr [rbx + 0x18], r12
0x40426c:	mov	rbx, qword ptr [rbx]
0x40426f:	mov	qword ptr [0], rbx
0x404277:	ud2	
0x404279:	call	0x4039e0
0x40427e:	mov	rdi, qword ptr [r13]
0x404282:	add	r14, rax
0x404285:	test	rdi, rdi
0x404288:	je	0x42d99d
0x40428e:	call	0x4039e0
0x404293:	mov	rdi, qword ptr [r13 + 8]
0x404297:	add	r14, rax
0x40429a:	test	rdi, rdi
0x40429d:	je	0x42d99d
0x4042a3:	call	0x4039e0
0x4042a8:	mov	rdi, qword ptr [r13 + 0x10]
0x4042ac:	add	r14, rax
0x4042af:	test	rdi, rdi
0x4042b2:	je	0x42d99d
0x4042b8:	call	0x4039e0
0x4042bd:	mov	rdi, qword ptr [r13 + 0x18]
0x4042c1:	add	rbx, 0x28
0x4042c5:	mov	qword ptr [rsp + 8], rbx
0x4042ca:	add	r14, rax
0x4042cd:	test	rdi, rdi
0x4042d0:	je	0x42d99d
0x4042d6:	call	0x4039e0
0x4042db:	mov	r8, rbx
0x4042de:	add	rbx, 8
0x4042e2:	mov	rdi, qword ptr [r8]
0x4042e5:	mov	qword ptr [rsp + 8], rbx
0x4042ea:	add	r14, rax
0x4042ed:	test	rdi, rdi
0x4042f0:	jne	0x4042d6
0x4042f2:	jmp	0x42d99d
0x4042f7:	mov	r14d, 1
0x4042fd:	mov	rdi, r14
0x404300:	call	0x42c22d
0x404305:	mov	rdi, r14
0x404308:	call	0x4039e0
0x40430d:	mov	rsi, r14
0x404310:	mov	rdi, rbx
0x404313:	mov	rdx, rax
0x404316:	mov	r12, rax
0x404319:	call	0x403c60
0x40431e:	mov	rbp, qword ptr [rsp + 8]
0x404323:	add	rbx, r12
0x404326:	mov	r14, qword ptr [rbp]
0x40432a:	lea	rsi, [rbp + 8]
0x40432e:	mov	qword ptr [rsp + 8], rsi
0x404333:	test	r14, r14
0x404336:	je	0x42da5f
0x40433c:	mov	rdi, r14
0x40433f:	call	0x4039e0
0x404344:	mov	rdi, rbx
0x404347:	mov	rsi, r14
0x40434a:	mov	rdx, rax
0x40434d:	mov	r12, rax
0x404350:	call	0x403c60
0x404355:	mov	r14, qword ptr [rbp + 8]
0x404359:	lea	rdi, [rbp + 0x10]
0x40435d:	add	rbx, r12
0x404360:	mov	qword ptr [rsp + 8], rdi
0x404365:	test	r14, r14
0x404368:	je	0x42da5f
0x40436e:	mov	rdi, r14
0x404371:	call	0x4039e0
0x404376:	mov	rsi, r14
0x404379:	mov	rdi, rbx
0x40437c:	mov	rdx, rax
0x40437f:	mov	r12, rax
0x404382:	call	0x403c60
0x404387:	mov	r14, qword ptr [rbp + 0x10]
0x40438b:	lea	r8, [rbp + 0x18]
0x40438f:	add	rbx, r12
0x404392:	mov	qword ptr [rsp + 8], r8
0x404397:	test	r14, r14
0x40439a:	je	0x42da5f
0x4043a0:	mov	rdi, r14
0x4043a3:	call	0x4039e0
0x4043a8:	mov	rdi, rbx
0x4043ab:	mov	rsi, r14
0x4043ae:	mov	rdx, rax
0x4043b1:	mov	r12, rax
0x4043b4:	call	0x403c60
0x4043b9:	lea	r9, [rbp + 0x20]
0x4043bd:	mov	rbp, qword ptr [rbp + 0x18]
0x4043c1:	add	rbx, r12
0x4043c4:	mov	qword ptr [rsp + 8], r9
0x4043c9:	test	rbp, rbp
0x4043cc:	je	0x42da5f
0x4043d2:	mov	rdi, rbp
0x4043d5:	call	0x4039e0
0x4043da:	mov	rsi, rbp
0x4043dd:	mov	rdi, rbx
0x4043e0:	mov	rdx, rax
0x4043e3:	mov	r14, rax
0x4043e6:	call	0x403c60
0x4043eb:	mov	r10, qword ptr [rsp + 8]
0x4043f0:	add	rbx, r14
0x4043f3:	mov	rbp, qword ptr [r10]
0x4043f6:	lea	r11, [r10 + 8]
0x4043fa:	mov	qword ptr [rsp + 8], r11
0x4043ff:	test	rbp, rbp
0x404402:	jne	0x4043d2
0x404404:	jmp	0x42da5f
0x404409:	mov	rdi, rbp
0x40440c:	call	0x42c22d
0x404411:	cmp	dword ptr [rdi + 0x24], 1
0x404415:	jbe	0x4325f5
0x40441b:	mov	rdi, qword ptr [rdi + 0x10]
0x40441f:	test	rdi, rdi
0x404422:	je	0x40443e
0x404424:	call	0x4039e0
0x404429:	mov	edx, ebp
0x40442b:	sub	edx, eax
0x40442d:	cmp	edx, 0x1f
0x404430:	jg	0x4325f5
0x404436:	add	ebp, 0x20
0x404439:	jmp	0x4325f5
0x40443e:	xor	eax, eax
0x404440:	jmp	0x404429
0x404442:	mov	rdi, r12
0x404445:	call	0x42c22d
0x40444a:	mov	qword ptr [rsp + 0x20], 0x45b25d
0x404453:	mov	rax, qword ptr [rsp + 0x70]
0x404458:	mov	dword ptr [rax], 0
0x40445e:	mov	rax, qword ptr [rsp + 0x20]
0x404463:	add	rsp, 0x38
0x404467:	pop	rbx
0x404468:	pop	rbp
0x404469:	pop	r12
0x40446b:	pop	r13
0x40446d:	pop	r14
0x40446f:	pop	r15
0x404471:	ret	
0x404472:	mov	dword ptr [rsp + 8], r9d
0x404477:	call	0x403890
0x40447c:	mov	r9d, dword ptr [rsp + 8]
0x404481:	mov	edi, 0x45b212
0x404486:	mov	ebx, dword ptr [rax]
0x404488:	mov	rsi, qword ptr [rsp + 0x70]
0x40448d:	mov	qword ptr [rsp + 0x20], rdi
0x404492:	mov	dword ptr [rsi], ebx
0x404494:	or	ebx, 0xffffffff
0x404497:	test	r9d, r9d
0x40449a:	je	0x40445e
0x40449c:	mov	r13, qword ptr [rbp + 0x80]
0x4044a3:	mov	esi, r9d
0x4044a6:	mov	rdi, rbp
0x4044a9:	call	qword ptr [r13 + 0x18]
0x4044ad:	test	r14d, r14d
0x4044b0:	js	0x4044ca
0x4044b2:	cmp	r14d, 1
0x4044b6:	je	0x4044ca
0x4044b8:	mov	r12, qword ptr [rbp + 0x80]
0x4044bf:	mov	esi, r14d
0x4044c2:	mov	rdi, rbp
0x4044c5:	call	qword ptr [r12 + 0x18]
0x4044ca:	test	ebx, ebx
0x4044cc:	js	0x40445e
0x4044ce:	cmp	ebx, 2
0x4044d1:	je	0x40445e
0x4044d3:	mov	r14, qword ptr [rbp + 0x80]
0x4044da:	mov	esi, ebx
0x4044dc:	mov	rdi, rbp
0x4044df:	call	qword ptr [r14 + 0x18]
0x4044e3:	jmp	0x40445e
0x4044e8:	mov	ebx, 1
0x4044ed:	jmp	0x4355f7
0x4044f2:	mov	rcx, qword ptr [rsp + 0x70]
0x4044f7:	xor	esi, esi
0x4044f9:	lea	rdx, [rsp + 0x20]
0x4044fe:	mov	rdi, rbp
0x404501:	mov	qword ptr [rsp + 0x10], r8
0x404506:	mov	qword ptr [rsp + 8], r10
0x40450b:	call	0x42b34a
0x404510:	test	eax, eax
0x404512:	je	0x40445e
0x404518:	mov	rbx, qword ptr [rbp + 0x80]
0x40451f:	xor	edx, edx
0x404521:	mov	rsi, qword ptr [rbp + 0x20]
0x404525:	mov	rdi, rbp
0x404528:	call	qword ptr [rbx]
0x40452a:	mov	r10, qword ptr [rsp + 8]
0x40452f:	mov	r8, qword ptr [rsp + 0x10]
0x404534:	test	eax, eax
0x404536:	mov	r9d, eax
0x404539:	js	0x404587
0x40453b:	cmp	dword ptr [rbp + 0x28], 0
0x40453f:	jne	0x4045a4
0x404541:	mov	qword ptr [rbp + 0x20], 0
0x404549:	jmp	0x4354b6
0x40454e:	mov	qword ptr [rsp + 0x10], r8
0x404553:	mov	qword ptr [rsp + 8], rcx
0x404558:	call	0x4039c0
0x40455d:	mov	r10, qword ptr [rsp + 8]
0x404562:	mov	r8, qword ptr [rsp + 0x10]
0x404567:	add	eax, 1
0x40456a:	je	0x404579
0x40456c:	mov	qword ptr [rbp + 0x58], 0
0x404574:	jmp	0x43549e
0x404579:	mov	qword ptr [rsp + 0x20], 0x45b22d
0x404582:	jmp	0x40445e
0x404587:	call	0x403890
0x40458c:	mov	r11, qword ptr [rsp + 0x70]
0x404591:	mov	qword ptr [rsp + 0x20], 0x45b249
0x40459a:	mov	ebp, dword ptr [rax]
0x40459c:	mov	dword ptr [r11], ebp
0x40459f:	jmp	0x40445e
0x4045a4:	mov	rdi, qword ptr [rbp + 0x20]
0x4045a8:	mov	qword ptr [rsp + 0x18], r8
0x4045ad:	mov	qword ptr [rsp + 0x10], r10
0x4045b2:	mov	dword ptr [rsp + 8], eax
0x4045b6:	call	0x403830
0x4045bb:	mov	r8, qword ptr [rsp + 0x18]
0x4045c0:	mov	r10, qword ptr [rsp + 0x10]
0x4045c5:	mov	dword ptr [rbp + 0x28], 0
0x4045cc:	mov	r9d, dword ptr [rsp + 8]
0x4045d1:	jmp	0x404541
0x4045d6:	mov	rdi, r14
0x4045d9:	call	0x4039e0
0x4045de:	mov	r9d, dword ptr [rsp + 8]
0x4045e3:	mov	rcx, qword ptr [rsp + 0x10]
0x4045e8:	cmp	eax, 5
0x4045eb:	jle	0x404610
0x4045ed:	cdqe	
0x4045ef:	mov	esi, 0x45b277
0x4045f4:	lea	rdi, [r14 + rax - 6]
0x4045f9:	call	0x403be0
0x4045fe:	mov	r9d, dword ptr [rsp + 8]
0x404603:	mov	rcx, qword ptr [rsp + 0x10]
0x404608:	test	eax, eax
0x40460a:	je	0x4046a9
0x404610:	mov	esi, 0x45b277
0x404615:	mov	rdi, r14
0x404618:	xor	edx, edx
0x40461a:	xor	eax, eax
0x40461c:	mov	qword ptr [rsp + 0x10], rcx
0x404621:	mov	dword ptr [rsp + 8], r9d
0x404626:	call	0x42d870
0x40462b:	mov	rsi, qword ptr [rsp + 0x10]
0x404630:	mov	edi, dword ptr [rsp + 8]
0x404634:	mov	r11, rax
0x404637:	mov	qword ptr [rsp + 0x18], rsi
0x40463c:	xor	esi, esi
0x40463e:	mov	dword ptr [rsp + 0x10], edi
0x404642:	mov	rdi, r11
0x404645:	mov	qword ptr [rsp + 8], r11
0x40464a:	call	0x4037f0
0x40464f:	mov	rdx, qword ptr [rsp + 8]
0x404654:	mov	r10, qword ptr [rsp + 0x18]
0x404659:	test	eax, eax
0x40465b:	mov	edi, eax
0x40465d:	mov	eax, dword ptr [rsp + 0x10]
0x404661:	js	0x40468a
0x404663:	mov	qword ptr [rsp + 0x10], r10
0x404668:	mov	qword ptr [rsp + 0x18], rdx
0x40466d:	mov	dword ptr [rsp + 8], eax
0x404671:	call	0x403b00
0x404676:	mov	r9d, dword ptr [rsp + 8]
0x40467b:	mov	r10, qword ptr [rsp + 0x10]
0x404680:	mov	r8, qword ptr [rsp + 0x18]
0x404685:	jmp	0x43559c
0x40468a:	mov	rdi, rdx
0x40468d:	mov	dword ptr [rsp + 8], eax
0x404691:	call	0x403830
0x404696:	mov	r9d, dword ptr [rsp + 8]
0x40469b:	mov	edi, 0x464e30
0x4046a0:	or	r14d, 0xffffffff
0x4046a4:	jmp	0x404488
0x4046a9:	mov	rdi, r14
0x4046ac:	call	0x42db40
0x4046b1:	mov	edi, dword ptr [rsp + 8]
0x4046b5:	mov	rsi, qword ptr [rsp + 0x10]
0x4046ba:	mov	r11, rax
0x4046bd:	jmp	0x404637
0x4046c2:	test	al, 4
0x4046c4:	jne	0x40476a
0x4046ca:	mov	eax, dword ptr [rbp + 0x70]
0x4046cd:	mov	rdi, qword ptr [rbp + 0x78]
0x4046d1:	mov	qword ptr [rsp + 8], r8
0x4046d6:	mov	qword ptr [rsp + 0x18], r10
0x4046db:	add	eax, 1
0x4046de:	mov	dword ptr [rsp + 0x10], r9d
0x4046e3:	mov	dword ptr [rbp + 0x70], eax
0x4046e6:	cdqe	
0x4046e8:	lea	rsi, [rax*8]
0x4046f0:	call	0x42db80
0x4046f5:	mov	rdi, qword ptr [rsp + 8]
0x4046fa:	mov	qword ptr [rbp + 0x78], rax
0x4046fe:	call	0x42db40
0x404703:	mov	r14, qword ptr [rsp + 8]
0x404708:	mov	r9d, dword ptr [rsp + 0x10]
0x40470d:	mov	r10, qword ptr [rsp + 0x18]
0x404712:	mov	r8, rax
0x404715:	jmp	0x4355e7
0x40471a:	mov	qword ptr [rsp + 0x18], r8
0x40471f:	xor	edx, edx
0x404721:	lea	rsi, [rsp + 0x28]
0x404726:	mov	rdi, rbp
0x404729:	mov	rbx, qword ptr [rbp + 0x80]
0x404730:	mov	qword ptr [rsp + 0x10], r10
0x404735:	mov	dword ptr [rsp + 8], r9d
0x40473a:	call	qword ptr [rbx + 0x28]
0x40473d:	mov	r9d, dword ptr [rsp + 8]
0x404742:	mov	r10, qword ptr [rsp + 0x10]
0x404747:	test	eax, eax
0x404749:	mov	r8, qword ptr [rsp + 0x18]
0x40474e:	js	0x40476f
0x404750:	mov	edx, dword ptr [rsp + 0x28]
0x404754:	mov	r14d, dword ptr [rsp + 0x2c]
0x404759:	mov	dword ptr [rbp + 0x18], edx
0x40475c:	test	r14d, r14d
0x40475f:	jns	0x4354d3
0x404765:	jmp	0x4355fe
0x40476a:	jmp	0x4355f7
0x40476f:	call	0x403890
0x404774:	or	r14d, 0xffffffff
0x404778:	mov	r9d, dword ptr [rsp + 8]
0x40477d:	mov	edi, 0x45cb31
0x404782:	mov	ebx, dword ptr [rax]
0x404784:	jmp	0x404488
0x404789:	mov	ecx, r12d
0x40478c:	mov	qword ptr [rsp + 0x18], r10
0x404791:	xor	edx, edx
0x404793:	mov	rsi, r13
0x404796:	shr	ecx, 9
0x404799:	mov	dword ptr [rsp + 0x10], r8d
0x40479e:	mov	rdi, rbp
0x4047a1:	mov	dword ptr [rsp + 8], r9d
0x4047a6:	and	ecx, 1
0x4047a9:	call	qword ptr [rax + 8]
0x4047ac:	mov	r9d, dword ptr [rsp + 8]
0x4047b1:	mov	r8d, dword ptr [rsp + 0x10]
0x4047b6:	test	eax, eax
0x4047b8:	mov	r10, qword ptr [rsp + 0x18]
0x4047bd:	mov	ebx, eax
0x4047bf:	jns	0x4354f6
0x4047c5:	call	0x403890
0x4047ca:	mov	rdx, qword ptr [rsp + 0x70]
0x4047cf:	mov	qword ptr [rsp + 0x20], 0x45b27e
0x4047d8:	mov	r9d, dword ptr [rax]
0x4047db:	mov	dword ptr [rdx], r9d
0x4047de:	mov	r9d, dword ptr [rsp + 8]
0x4047e3:	jmp	0x435543
0x4047e8:	mov	r15, qword ptr [rsp + 0x70]
0x4047ed:	or	ebx, 0xffffffff
0x4047f0:	mov	qword ptr [rsp + 0x20], 0x464e50
0x4047f9:	mov	dword ptr [r15], 0
0x404800:	jmp	0x435543
0x404805:	mov	dword ptr [rbp + 0x18], 0xffffffff
0x40480c:	jmp	0x4355fe
0x404811:	cmp	r12d, -1
0x404815:	je	0x404ae2
0x40481b:	mov	qword ptr [rsp + 0x60], 0
0x404824:	mov	rsi, qword ptr [rsp + 0x40]
0x404829:	mov	edi, dword ptr [rsp + 0x3c]
0x40482d:	mov	qword ptr [rip + 0xde84c], rsi
0x404834:	test	edi, edi
0x404836:	jne	0x4048d8
0x40483c:	cmp	qword ptr [rsp + 0x60], 0
0x404842:	jne	0x40484f
0x404844:	cmp	dword ptr [rsp + 0x2c], 0
0x404849:	jne	0x40490b
0x40484f:	cmp	qword ptr [rsp + 0x60], 0
0x404855:	jne	0x404865
0x404857:	cmp	dword ptr [rsp + 0x90], 1
0x40485f:	jne	0x404937
0x404865:	cmp	qword ptr [rsp + 0x60], 0
0x40486b:	jne	0x40488b
0x40486d:	cmp	dword ptr [rsp + 0x98], 2
0x404875:	je	0x40488b
0x404877:	mov	edi, dword ptr [rsp + 0x98]
0x40487e:	call	0x403b00
0x404883:	test	eax, eax
0x404885:	js	0x404989
0x40488b:	mov	r11, qword ptr [rsp + 0x60]
0x404890:	test	r11, r11
0x404893:	jne	0x404967
0x404899:	add	rsp, 0x78
0x40489d:	mov	eax, r12d
0x4048a0:	pop	rbx
0x4048a1:	pop	r12
0x4048a3:	ret	
0x4048a4:	mov	edi, dword ptr [rsp + 0x98]
0x4048ab:	mov	esi, 2
0x4048b0:	call	0x403a30
0x4048b5:	test	eax, eax
0x4048b7:	jns	0x404a80
0x4048bd:	mov	qword ptr [rsp + 0x50], 0x45b294
0x4048c6:	call	0x403890
0x4048cb:	mov	r8d, dword ptr [rax]
0x4048ce:	mov	dword ptr [rsp + 0x58], r8d
0x4048d3:	jmp	0x4357ed
0x4048d8:	mov	edi, dword ptr [rsp + 0x4c]
0x4048dc:	call	0x403b00
0x4048e1:	mov	edi, dword ptr [rsp + 0x48]
0x4048e5:	mov	edx, 0x10
0x4048ea:	lea	rsi, [rsp + 0x60]
0x4048ef:	call	0x403b50
0x4048f4:	test	rax, rax
0x4048f7:	js	0x404aad
0x4048fd:	mov	edi, dword ptr [rsp + 0x48]
0x404901:	call	0x403b00
0x404906:	jmp	0x40483c
0x40490b:	mov	edi, dword ptr [rsp + 0x2c]
0x40490f:	call	0x403b00
0x404914:	test	eax, eax
0x404916:	jns	0x40484f
0x40491c:	mov	qword ptr [rsp + 0x60], 0x45cfc2
0x404925:	call	0x403890
0x40492a:	mov	r8d, dword ptr [rax]
0x40492d:	mov	dword ptr [rsp + 0x68], r8d
0x404932:	jmp	0x40488b
0x404937:	mov	edi, dword ptr [rsp + 0x90]
0x40493e:	call	0x403b00
0x404943:	test	eax, eax
0x404945:	jns	0x404865
0x40494b:	mov	qword ptr [rsp + 0x60], 0x45cfc2
0x404954:	call	0x403890
0x404959:	mov	r11d, 0x45cfc2
0x40495f:	mov	r9d, dword ptr [rax]
0x404962:	mov	dword ptr [rsp + 0x68], r9d
0x404967:	mov	eax, dword ptr [rsp + 0x68]
0x40496b:	mov	rdx, qword ptr [rsp + 0xb0]
0x404973:	or	r12d, 0xffffffff
0x404977:	mov	rcx, qword ptr [rsp + 0xa8]
0x40497f:	mov	dword ptr [rdx], eax
0x404981:	mov	qword ptr [rcx], r11
0x404984:	jmp	0x404899
0x404989:	call	0x403890
0x40498e:	mov	r11d, 0x45cfc2
0x404994:	mov	r10d, dword ptr [rax]
0x404997:	mov	dword ptr [rsp + 0x68], r10d
0x40499c:	jmp	0x404967
0x40499e:	mov	esi, 2
0x4049a3:	mov	edi, 1
0x4049a8:	call	0x403a30
0x4049ad:	test	eax, eax
0x4049af:	js	0x404a02
0x4049b1:	cmp	qword ptr [rsp + 0x50], 0
0x4049b7:	je	0x4357af
0x4049bd:	jmp	0x4357ed
0x4049c2:	mov	r10, qword ptr [rsp + 8]
0x4049c7:	mov	qword ptr [rip + 0xde6b2], r10
0x4049ce:	jmp	0x4357bb
0x4049d3:	mov	edi, dword ptr [rsp + 0xa0]
0x4049da:	call	0x403b00
0x4049df:	test	eax, eax
0x4049e1:	jns	0x43579c
0x4049e7:	mov	qword ptr [rsp + 0x50], 0x45cfc2
0x4049f0:	call	0x403890
0x4049f5:	mov	r9d, dword ptr [rax]
0x4049f8:	mov	dword ptr [rsp + 0x58], r9d
0x4049fd:	jmp	0x4357ed
0x404a02:	mov	qword ptr [rsp + 0x50], 0x45b294
0x404a0b:	call	0x403890
0x404a10:	mov	eax, dword ptr [rax]
0x404a12:	mov	dword ptr [rsp + 0x58], eax
0x404a16:	jmp	0x4357ed
0x404a1b:	mov	edi, dword ptr [rsp + 0x38]
0x404a1f:	call	0x403ee0
0x404a24:	mov	r11d, dword ptr [rsp + 0x38]
0x404a29:	add	r11d, r11d
0x404a2c:	mov	dword ptr [rsp + 0x38], r11d
0x404a31:	mov	ebx, dword ptr [rsp + 0x34]
0x404a35:	add	ebx, 1
0x404a38:	mov	dword ptr [rsp + 0x34], ebx
0x404a3c:	jmp	0x435704
0x404a41:	mov	qword ptr [rsp + 0x50], 0x45cfc2
0x404a4a:	call	0x403890
0x404a4f:	mov	ecx, dword ptr [rax]
0x404a51:	mov	dword ptr [rsp + 0x58], ecx
0x404a55:	jmp	0x43579c
0x404a5a:	mov	qword ptr [rsp + 0x50], 0x45b294
0x404a63:	call	0x403890
0x404a68:	mov	esi, dword ptr [rax]
0x404a6a:	mov	dword ptr [rsp + 0x58], esi
0x404a6e:	jmp	0x43579c
0x404a73:	mov	dword ptr [rsp + 0x3c], 0
0x404a7b:	jmp	0x4356d4
0x404a80:	mov	edi, dword ptr [rsp + 0x98]
0x404a87:	call	0x403b00
0x404a8c:	test	eax, eax
0x404a8e:	jns	0x435786
0x404a94:	mov	qword ptr [rsp + 0x50], 0x45cfc2
0x404a9d:	call	0x403890
0x404aa2:	mov	edi, dword ptr [rax]
0x404aa4:	mov	dword ptr [rsp + 0x58], edi
0x404aa8:	jmp	0x4357ed
0x404aad:	mov	qword ptr [rsp + 0x60], 0
0x404ab6:	jmp	0x4048fd
0x404abb:	mov	edi, dword ptr [rsp + 0x4c]
0x404abf:	mov	edx, 0x10
0x404ac4:	lea	rsi, [rsp + 0x50]
0x404ac9:	call	0x403980
0x404ace:	cmp	rax, 0x10
0x404ad2:	jne	0x4357f9
0x404ad8:	jmp	0x4358ea
0x404add:	call	0x4038e0
0x404ae2:	mov	edi, dword ptr [rsp + 0x3c]
0x404ae6:	test	edi, edi
0x404ae8:	je	0x404afc
0x404aea:	mov	edi, dword ptr [rsp + 0x48]
0x404aee:	call	0x403b00
0x404af3:	mov	edi, dword ptr [rsp + 0x4c]
0x404af7:	call	0x403b00
0x404afc:	call	0x403890
0x404b01:	mov	r9, qword ptr [rsp + 0xb0]
0x404b09:	mov	r10, qword ptr [rsp + 0xa8]
0x404b11:	mov	r8d, dword ptr [rax]
0x404b14:	mov	dword ptr [r9], r8d
0x404b17:	mov	qword ptr [r10], 0x45b28e
0x404b1e:	jmp	0x404899
0x404b23:	mov	edi, dword ptr [rsp + 0x2c]
0x404b27:	xor	esi, esi
0x404b29:	call	0x403a30
0x404b2e:	test	eax, eax
0x404b30:	jns	0x404b4b
0x404b32:	mov	qword ptr [rsp + 0x50], 0x45b294
0x404b3b:	call	0x403890
0x404b40:	mov	edx, dword ptr [rax]
0x404b42:	mov	dword ptr [rsp + 0x58], edx
0x404b46:	jmp	0x435786
0x404b4b:	mov	edi, dword ptr [rsp + 0x2c]
0x404b4f:	call	0x403b00
0x404b54:	test	eax, eax
0x404b56:	jns	0x43575a
0x404b5c:	mov	qword ptr [rsp + 0x50], 0x45cfc2
0x404b65:	call	0x403890
0x404b6a:	mov	eax, dword ptr [rax]
0x404b6c:	mov	dword ptr [rsp + 0x58], eax
0x404b70:	jmp	0x435786
0x404b75:	mov	rdi, rbp
0x404b78:	call	0x42c22d
0x404b7d:	lea	eax, [rsi - 1]
0x404b80:	test	eax, eax
0x404b82:	jle	0x4359a2
0x404b88:	jmp	0x4359a7
0x404b8d:	call	0x415b52
0x404b92:	sub	eax, 1
0x404b95:	jmp	0x404b80
0x404b97:	mov	r8d, r14d
0x404b9a:	xor	ecx, ecx
0x404b9c:	mov	esi, 0x4cd8a3
0x404ba1:	mov	edi, 0x45b312
0x404ba6:	lea	rbx, [r13 + r8*8]
0x404bab:	xor	eax, eax
0x404bad:	mov	rdx, qword ptr [rbx]
0x404bb0:	call	0x4367b0
0x404bb5:	mov	qword ptr [rbx], rax
0x404bb8:	mov	ebx, r14d
0x404bbb:	jmp	0x435ace
0x404bc0:	lea	r9d, [rbx - 1]
0x404bc4:	lea	r13, [r12 + 0x58]
0x404bc9:	add	ebx, 1
0x404bcc:	imul	rdx, r9, 0x58
0x404bd0:	lea	rdi, [r12 + 0xb0]
0x404bd8:	mov	rsi, r13
0x404bdb:	call	0x403d90
0x404be0:	mov	r10d, r14d
0x404be3:	mov	ecx, 0x16
0x404be8:	mov	rdi, r13
0x404beb:	imul	rsi, r10, 0x58
0x404bef:	add	rsi, rbp
0x404bf2:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x404bf4:	jmp	0x435c55
0x404bf9:	mov	edx, 0x45b335
0x404bfe:	mov	esi, 0x443
0x404c03:	mov	edi, 0x45b343
0x404c08:	call	0x415bba
0x404c0d:	mov	r14d, r11d
0x404c10:	lea	r8d, [r11 + 1]
0x404c14:	jmp	0x435b4e
0x404c19:	lea	r8d, [r11 + 1]
0x404c1d:	jmp	0x435b38
0x404c22:	movdqa	xmm2, xmmword ptr [rsp + 0x30]
0x404c28:	movdqa	xmm3, xmmword ptr [rsp + 0x20]
0x404c2e:	mov	dword ptr [rsp + 0x44], eax
0x404c32:	add	dword ptr [rsp + 0x40], 4
0x404c37:	movsxd	rax, dword ptr [rsp + 0x40]
0x404c3c:	mov	rdi, qword ptr [rsp + 8]
0x404c41:	mov	qword ptr [rsp + 0x48], r10
0x404c46:	imul	rsi, rax, 0x58
0x404c4a:	movaps	xmmword ptr [rsp + 0x50], xmm2
0x404c4f:	mov	qword ptr [rsp + 0x70], 0x464eb0
0x404c58:	movaps	xmmword ptr [rsp + 0x60], xmm3
0x404c5d:	call	0x42db80
0x404c62:	mov	rsi, qword ptr [rsp + 0x48]
0x404c67:	mov	edx, dword ptr [rsp + 0x44]
0x404c6b:	mov	qword ptr [rsp + 8], rax
0x404c70:	imul	rcx, rsi, 0x58
0x404c74:	mov	rdi, qword ptr [rsp + 8]
0x404c79:	movsxd	r11, edx
0x404c7c:	mov	dword ptr [rsp + 0x44], edx
0x404c80:	mov	r15d, ebp
0x404c83:	lea	rsi, [rdi + rcx]
0x404c87:	lea	rdi, [rsp + r11*8 + 0x50]
0x404c8c:	call	0x435d00
0x404c91:	mov	edx, dword ptr [rsp + 0x44]
0x404c95:	add	edx, eax
0x404c97:	cmp	edx, 4
0x404c9a:	jg	0x404ca3
0x404c9c:	mov	esi, ebp
0x404c9e:	add	ebp, 1
0x404ca1:	jmp	0x404c70
0x404ca3:	mov	eax, 1
0x404ca8:	jmp	0x435b03
0x404cad:	or	dword ptr [rsp + 0x10], 2
0x404cb2:	xor	r14d, r14d
0x404cb5:	jmp	0x4360ae
0x404cba:	mov	r10, qword ptr [r13 + 8]
0x404cbe:	mov	byte ptr [rsp + 0x38], dil
0x404cc3:	test	r10, r10
0x404cc6:	mov	qword ptr [rsp + 0x28], r10
0x404ccb:	je	0x4362fb
0x404cd1:	mov	rdi, r9
0x404cd4:	mov	qword ptr [rsp + 0x20], rcx
0x404cd9:	mov	qword ptr [rsp + 0x18], r8
0x404cde:	mov	qword ptr [rsp + 0x10], r9
0x404ce3:	call	0x4039e0
0x404ce8:	mov	rsi, qword ptr [rsp + 0x10]
0x404ced:	mov	rdi, qword ptr [rsp + 0x28]
0x404cf2:	mov	rdx, rax
0x404cf5:	mov	rbx, rax
0x404cf8:	call	0x4038d0
0x404cfd:	mov	r8, qword ptr [rsp + 0x18]
0x404d02:	mov	rcx, qword ptr [rsp + 0x20]
0x404d07:	test	eax, eax
0x404d09:	jne	0x4362fb
0x404d0f:	movzx	eax, byte ptr [rsp + 0x38]
0x404d14:	jmp	0x436240
0x404d19:	mov	edx, 0x45b35f
0x404d1e:	mov	esi, 0x342
0x404d23:	mov	edi, 0x45b343
0x404d28:	call	0x415bba
0x404d2d:	mov	word ptr [rbp], 0x2222
0x404d33:	add	rbp, 2
0x404d37:	jmp	0x43603b
0x404d3c:	mov	edx, dword ptr [rsp + 8]
0x404d40:	xor	ebp, ebp
0x404d42:	lea	r10, [r13 + rdx*8]
0x404d47:	mov	rcx, qword ptr [r10 + rbp*8 + 8]
0x404d4c:	mov	r11d, ebp
0x404d4f:	lea	esi, [rbp + 1]
0x404d52:	test	rcx, rcx
0x404d55:	je	0x404d69
0x404d57:	mov	qword ptr [rbx + rbp*8 + 0x28], rcx
0x404d5c:	add	rbp, 1
0x404d60:	cmp	dword ptr [rsp + 0x18], ebp
0x404d64:	ja	0x404d47
0x404d66:	mov	r11d, esi
0x404d69:	add	r11d, 1
0x404d6d:	cmp	r11d, r12d
0x404d70:	jne	0x404d9e
0x404d72:	mov	rdi, qword ptr [rsp + 0x28]
0x404d77:	mov	qword ptr [rbx + 0x40], rdi
0x404d7b:	jmp	0x435f99
0x404d80:	mov	eax, 3
0x404d85:	jmp	0x436093
0x404d8a:	mov	edx, 0x45b35f
0x404d8f:	mov	esi, 0x344
0x404d94:	mov	edi, 0x45b343
0x404d99:	call	0x415bba
0x404d9e:	mov	edx, 0x45b35f
0x404da3:	mov	esi, 0x365
0x404da8:	mov	edi, 0x45b343
0x404dad:	call	0x415bba
0x404db2:	or	dword ptr [rsp + 0x10], 0x20
0x404db7:	mov	r8, qword ptr [rsp + 0x38]
0x404dbc:	mov	rbx, qword ptr [rsp + 0x30]
0x404dc1:	jmp	0x435ee7
0x404dc6:	xor	r8, 1
0x404dca:	jmp	0x436128
0x404dcf:	or	dword ptr [rsp + 0x10], 1
0x404dd4:	jmp	0x435e7b
0x404dd9:	cmp	qword ptr [rsp + 0x20], 0
0x404ddf:	jne	0x404e27
0x404de1:	mov	qword ptr [rsp + 0x20], rcx
0x404de6:	jmp	0x4361a1
0x404deb:	mov	edx, 0x45b35f
0x404df0:	mov	esi, 0x2e6
0x404df5:	mov	edi, 0x45b343
0x404dfa:	call	0x415bba
0x404dff:	test	r14, r14
0x404e02:	jne	0x43618d
0x404e08:	mov	r14d, 0x4c4893
0x404e0e:	jmp	0x43618d
0x404e13:	mov	edx, 0x45b35f
0x404e18:	mov	esi, 0x2c8
0x404e1d:	mov	edi, 0x45b343
0x404e22:	call	0x415bba
0x404e27:	mov	edx, 0x45b35f
0x404e2c:	mov	esi, 0x2ef
0x404e31:	mov	edi, 0x45b343
0x404e36:	call	0x415bba
0x404e3b:	mov	edx, 0x45b35f
0x404e40:	mov	esi, 0x2c7
0x404e45:	mov	edi, 0x45b343
0x404e4a:	call	0x415bba
0x404e4f:	mov	r12d, 0x40
0x404e55:	jmp	0x4365a4
0x404e5a:	cmp	byte ptr [rsi], 0
0x404e5d:	mov	ebp, 0x824
0x404e62:	je	0x4362fb
0x404e68:	jmp	0x436255
0x404e6d:	or	esi, 2
0x404e70:	movzx	esi, sil
0x404e74:	mov	dword ptr [rsp + 0x10], esi
0x404e78:	jmp	0x436355
0x404e7d:	or	byte ptr [rip + 0xe12ac], 2
0x404e84:	jmp	0x435fcd
0x404e89:	mov	rdi, r14
0x404e8c:	mov	qword ptr [rsp], r8
0x404e90:	call	0x4039e0
0x404e95:	mov	r9, qword ptr [rip + 0xe1264]
0x404e9c:	mov	r8, qword ptr [rsp]
0x404ea0:	lea	r10, [rax + 1]
0x404ea4:	mov	rdx, rax
0x404ea7:	mov	rsi, r9
0x404eaa:	sub	rsi, qword ptr [rip + 0xe1247]
0x404eb1:	cmp	r10, rsi
0x404eb4:	ja	0x404f5a
0x404eba:	mov	rcx, qword ptr [rip + 0xe122f]
0x404ec1:	add	r10, qword ptr [rip + 0xe1230]
0x404ec8:	mov	qword ptr [rsp], rcx
0x404ecc:	cmp	r10, rcx
0x404ecf:	je	0x404f8f
0x404ed5:	mov	rax, qword ptr [rip + 0xe1234]
0x404edc:	mov	rdi, r9
0x404edf:	sub	rdi, qword ptr [rip + 0xe1202]
0x404ee6:	add	r10, rax
0x404ee9:	not	rax
0x404eec:	and	r10, rax
0x404eef:	mov	r11, r10
0x404ef2:	sub	r11, qword ptr [rip + 0xe11ef]
0x404ef9:	cmp	r11, rdi
0x404efc:	cmovbe	r9, r10
0x404f00:	movq	xmm0, r9
0x404f05:	xor	r9d, r9d
0x404f08:	punpcklqdq	xmm0, xmm0
0x404f0c:	movaps	xmmword ptr [rip + 0xe11dd], xmm0
0x404f13:	cmp	rdx, r9
0x404f16:	je	0x4050b9
0x404f1c:	movzx	esi, byte ptr [r14 + r9]
0x404f21:	mov	rcx, qword ptr [rsp]
0x404f25:	movzx	r10d, byte ptr [rsi + 0x48b760]
0x404f2d:	mov	byte ptr [rcx + r9], r10b
0x404f31:	add	r9, 1
0x404f35:	jmp	0x404f13
0x404f37:	mov	rsi, r15
0x404f3a:	mov	edi, 0x4e60e0
0x404f3f:	call	0x4316f0
0x404f44:	mov	rax, qword ptr [rip + 0xe11b5]
0x404f4b:	jmp	0x435fb3
0x404f50:	or	dword ptr [rsp + 0x10], 4
0x404f55:	jmp	0x435eba
0x404f5a:	mov	rsi, r10
0x404f5d:	mov	edi, 0x4e60e0
0x404f62:	mov	qword ptr [rsp + 0x28], r8
0x404f67:	mov	qword ptr [rsp], r10
0x404f6b:	mov	qword ptr [rsp + 0x30], rax
0x404f70:	call	0x4316f0
0x404f75:	mov	r9, qword ptr [rip + 0xe1184]
0x404f7c:	mov	rdx, qword ptr [rsp + 0x30]
0x404f81:	mov	r8, qword ptr [rsp + 0x28]
0x404f86:	mov	r10, qword ptr [rsp]
0x404f8a:	jmp	0x404eba
0x404f8f:	or	byte ptr [rip + 0xe119a], 2
0x404f96:	jmp	0x404ed5
0x404f9b:	mov	edx, 0x45b35f
0x404fa0:	mov	esi, 0x32d
0x404fa5:	mov	edi, 0x45b343
0x404faa:	call	0x415bba
0x404faf:	imul	r14, rbp, 0x60
0x404fb3:	cmp	qword ptr [r14 + 0x48bac0], 0
0x404fbb:	lea	r11, [r14 + 0x48baa0]
0x404fc2:	jne	0x405137
0x404fc8:	mov	r14, qword ptr [r11 + 0x28]
0x404fcc:	mov	rbp, rdi
0x404fcf:	test	r14, r14
0x404fd2:	je	0x435e7b
0x404fd8:	mov	edx, 0x45b35f
0x404fdd:	mov	esi, 0x2ae
0x404fe2:	mov	edi, 0x45b343
0x404fe7:	call	0x415bba
0x404fec:	test	byte ptr [r15 + 0x40], 8
0x404ff1:	jne	0x4360f8
0x404ff7:	mov	edx, 0x45b35f
0x404ffc:	mov	esi, 0x2b7
0x405001:	mov	edi, 0x45b343
0x405006:	call	0x415bba
0x40500b:	or	dword ptr [rsp + 0x10], 0x10
0x405010:	jmp	0x435edc
0x405015:	movzx	r11d, byte ptr [rcx + 0x40]
0x40501a:	shr	r11b, 5
0x40501e:	xor	r11d, 1
0x405022:	and	r11d, 1
0x405026:	jmp	0x43614a
0x40502b:	imul	rax, rdi, 0x60
0x40502f:	cmp	byte ptr [rax + 0x48bae0], 0
0x405036:	jns	0x436131
0x40503c:	mov	edx, 0x45b35f
0x405041:	mov	esi, 0x2d4
0x405046:	mov	edi, 0x45b343
0x40504b:	call	0x415bba
0x405050:	mov	edx, 0x45b35f
0x405055:	mov	esi, 0x334
0x40505a:	mov	edi, 0x45b343
0x40505f:	call	0x415bba
0x405064:	mov	rdi, qword ptr [rsp + 0x48]
0x405069:	mov	qword ptr [rsp], rdi
0x40506d:	jmp	0x436421
0x405072:	imul	r9, rdi, 0x60
0x405076:	movzx	ebp, byte ptr [r9 + 0x48bae0]
0x40507e:	shr	bpl, 1
0x405081:	and	ebp, 3
0x405084:	add	ebp, 1
0x405087:	cmp	ebp, dword ptr [rsp + 0x18]
0x40508b:	je	0x43616c
0x405091:	mov	edx, 0x45b35f
0x405096:	mov	esi, 0x2dd
0x40509b:	mov	edi, 0x45b343
0x4050a0:	call	0x415bba
0x4050a5:	mov	edx, 0x45b35f
0x4050aa:	mov	esi, 0x2e9
0x4050af:	mov	edi, 0x45b343
0x4050b4:	call	0x415bba
0x4050b9:	mov	r14, qword ptr [rsp]
0x4050bd:	mov	byte ptr [r14 + rdx], 0
0x4050c2:	test	r14, r14
0x4050c5:	je	0x435ee7
0x4050cb:	movzx	eax, byte ptr [r15 + 0x41]
0x4050d0:	jmp	0x435ed4
0x4050d5:	mov	edx, 0x45b35f
0x4050da:	mov	esi, 0x2c9
0x4050df:	mov	edi, 0x45b343
0x4050e4:	call	0x415bba
0x4050e9:	mov	edx, 0x45b35f
0x4050ee:	mov	esi, 0x2be
0x4050f3:	mov	edi, 0x45b343
0x4050f8:	call	0x415bba
0x4050fd:	mov	edx, 0x45b35f
0x405102:	mov	esi, 0x2bd
0x405107:	mov	edi, 0x45b343
0x40510c:	call	0x415bba
0x405111:	mov	edx, 0x45b35f
0x405116:	mov	esi, 0x2bc
0x40511b:	mov	edi, 0x45b343
0x405120:	call	0x415bba
0x405125:	or	dword ptr [rsp + 0x10], 8
0x40512a:	jmp	0x436490
0x40512f:	xor	r8d, r8d
0x405132:	jmp	0x436490
0x405137:	mov	edx, 0x45b35f
0x40513c:	mov	esi, 0x2ad
0x405141:	mov	edi, 0x45b343
0x405146:	call	0x415bba
0x40514b:	lea	rbp, [r12 + 1]
0x405150:	mov	rdi, r13
0x405153:	mov	r14d, 0x824
0x405159:	add	r12, 2
0x40515d:	call	0x4039e0
0x405162:	imul	rbx, rbp, 0x60
0x405166:	mov	rdx, rbp
0x405169:	mov	qword ptr [rsp], rax
0x40516d:	add	rbx, 0x48baa0
0x405174:	cmp	rdx, 0x822
0x40517b:	ja	0x40523e
0x405181:	imul	r11, rdx, 0x60
0x405185:	mov	qword ptr [rsp + 0x18], rdx
0x40518a:	mov	rdx, qword ptr [rsp]
0x40518e:	mov	rcx, qword ptr [r11 + 0x48baa0]
0x405195:	mov	qword ptr [rsp + 0x10], r11
0x40519a:	lea	rdi, [rcx + 1]
0x40519e:	mov	rsi, rdi
0x4051a1:	mov	qword ptr [rsp + 8], rdi
0x4051a6:	mov	rdi, r13
0x4051a9:	call	0x4038d0
0x4051ae:	mov	r8, qword ptr [rsp + 8]
0x4051b3:	mov	rsi, qword ptr [rsp + 0x10]
0x4051b8:	test	eax, eax
0x4051ba:	mov	rdx, qword ptr [rsp + 0x18]
0x4051bf:	jne	0x405246
0x4051c5:	cmp	rdx, rbp
0x4051c8:	je	0x40524e
0x4051ce:	cmp	r12, rdx
0x4051d1:	jne	0x42dcdf
0x4051d7:	cmp	r14, rbp
0x4051da:	jne	0x42dcdf
0x4051e0:	test	byte ptr [rsi + 0x48bade], 0x40
0x4051e7:	je	0x42dcdf
0x4051ed:	movzx	r9d, byte ptr [rbx + 0x34]
0x4051f2:	movzx	r10d, byte ptr [rsi + 0x48bad4]
0x4051fa:	mov	qword ptr [rsp + 8], rdx
0x4051ff:	mov	eax, r9d
0x405202:	add	r9d, 1
0x405206:	cmp	r10d, r9d
0x405209:	jne	0x42dcdf
0x40520f:	mov	r11, qword ptr [rbx]
0x405212:	movzx	edx, al
0x405215:	mov	rdi, r8
0x405218:	lea	rsi, [r11 + 1]
0x40521c:	call	0x4038d0
0x405221:	mov	rdx, qword ptr [rsp + 8]
0x405226:	test	eax, eax
0x405228:	jne	0x40526f
0x40522a:	add	rdx, 1
0x40522e:	jmp	0x405174
0x405233:	mov	r15d, 0x824
0x405239:	jmp	0x42dcdf
0x40523e:	mov	r15, r14
0x405241:	jmp	0x42dcdf
0x405246:	mov	r15, r14
0x405249:	jmp	0x42dcdf
0x40524e:	test	byte ptr [rsi + 0x48bade], 0x40
0x405255:	jne	0x40525c
0x405257:	mov	r14, rdx
0x40525a:	jmp	0x40522a
0x40525c:	cmp	r12, rdx
0x40525f:	jne	0x42dcdf
0x405265:	cmp	r14, rdx
0x405268:	je	0x4051ed
0x40526a:	jmp	0x42dcdf
0x40526f:	jmp	0x42dcdf
0x405274:	and	esi, 0xffcfffff
0x40527a:	setne	al
0x40527d:	ret	
0x40527e:	mov	edx, 0x45b37e
0x405283:	mov	esi, 0x19d
0x405288:	mov	edi, 0x45b343
0x40528d:	call	0x415bba
0x405292:	or	byte ptr [rip + 0xe0e97], 2
0x405299:	jmp	0x436745
0x40529e:	mov	byte ptr [rsp + 0xf], dil
0x4052a3:	mov	rsi, r14
0x4052a6:	mov	edi, 0x4e60e0
0x4052ab:	call	0x4316f0
0x4052b0:	mov	r9, qword ptr [rip + 0xe0e49]
0x4052b7:	movzx	ecx, byte ptr [rsp + 0xf]
0x4052bc:	jmp	0x43672e
0x4052c1:	mov	rsi, r12
0x4052c4:	mov	edi, 0x4e60e0
0x4052c9:	call	0x4316f0
0x4052ce:	mov	rsi, qword ptr [rip + 0xe0e2b]
0x4052d5:	jmp	0x436898
0x4052da:	or	byte ptr [rip + 0xe0e4f], 2
0x4052e1:	jmp	0x4368af
0x4052e6:	mov	r13d, 0x4cd754
0x4052ec:	jmp	0x436a27
0x4052f1:	call	0x403880
0x4052f6:	call	0x403890
0x4052fb:	mov	edi, dword ptr [rax]
0x4052fd:	call	0x403ec0
0x405302:	mov	rdi, qword ptr [rip + 0xddd97]
0x405309:	mov	rcx, r15
0x40530c:	mov	edx, 0x464ee0
0x405311:	mov	r8, rax
0x405314:	mov	esi, 1
0x405319:	xor	eax, eax
0x40531b:	call	0x403e90
0x405320:	call	0x403880
0x405325:	test	r14b, r14b
0x405328:	je	0x405366
0x40532a:	mov	esi, 0x45b3ad
0x40532f:	mov	rdi, r15
0x405332:	call	0x403be0
0x405337:	test	eax, eax
0x405339:	jne	0x40539e
0x40533b:	mov	edx, 0x3e8
0x405340:	imul	rdx, rbp
0x405344:	cmp	rbp, rdx
0x405347:	mov	rbp, 0xffffffffffffffff
0x40534e:	cmovbe	rbp, rdx
0x405352:	jmp	0x436b9e
0x405357:	mov	dword ptr [rbx], 0x16
0x40535d:	or	rax, 0xffffffffffffffff
0x405361:	jmp	0x436ba1
0x405366:	mov	dword ptr [r13], 0
0x40536e:	xor	edx, edx
0x405370:	lea	rsi, [rsp + 8]
0x405375:	mov	rdi, r12
0x405378:	call	0x403bb0
0x40537d:	mov	rcx, qword ptr [rsp + 8]
0x405382:	cmp	byte ptr [rcx], 0
0x405385:	je	0x436ba1
0x40538b:	mov	esi, dword ptr [r13]
0x40538f:	test	esi, esi
0x405391:	je	0x4053b6
0x405393:	mov	dword ptr [rbx], esi
0x405395:	or	rax, 0xffffffffffffffff
0x405399:	jmp	0x436ba1
0x40539e:	mov	esi, 0x45b3b0
0x4053a3:	mov	rdi, r15
0x4053a6:	call	0x403850
0x4053ab:	test	eax, eax
0x4053ad:	jne	0x4053c5
0x4053af:	mov	edx, 0x400
0x4053b4:	jmp	0x405340
0x4053b6:	mov	dword ptr [rbx], 0x16
0x4053bc:	or	rax, 0xffffffffffffffff
0x4053c0:	jmp	0x436ba1
0x4053c5:	mov	esi, 0x45b3b4
0x4053ca:	mov	rdi, r15
0x4053cd:	call	0x403be0
0x4053d2:	test	eax, eax
0x4053d4:	je	0x4053af
0x4053d6:	mov	esi, 0x45b3b7
0x4053db:	mov	rdi, r15
0x4053de:	call	0x403be0
0x4053e3:	test	eax, eax
0x4053e5:	jne	0x4053f1
0x4053e7:	mov	edx, 0xf4240
0x4053ec:	jmp	0x405340
0x4053f1:	mov	esi, 0x45b3ba
0x4053f6:	mov	rdi, r15
0x4053f9:	call	0x403850
0x4053fe:	test	eax, eax
0x405400:	jne	0x40540c
0x405402:	mov	edx, 0x100000
0x405407:	jmp	0x405340
0x40540c:	mov	esi, 0x45b3be
0x405411:	mov	rdi, r15
0x405414:	call	0x403850
0x405419:	test	eax, eax
0x40541b:	jne	0x405427
0x40541d:	mov	edx, 0x3b9aca00
0x405422:	jmp	0x405340
0x405427:	mov	esi, 0x45b3c1
0x40542c:	mov	rdi, r15
0x40542f:	call	0x403850
0x405434:	test	eax, eax
0x405436:	jne	0x405442
0x405438:	mov	edx, 0x40000000
0x40543d:	jmp	0x405340
0x405442:	mov	esi, 0x45b3c5
0x405447:	mov	rdi, r15
0x40544a:	call	0x403850
0x40544f:	test	eax, eax
0x405451:	jne	0x405461
0x405453:	mov	edx, 0xe8d4a51
0x405458:	shl	rdx, 0xc
0x40545c:	jmp	0x405340
0x405461:	mov	esi, 0x45b3c8
0x405466:	mov	rdi, r15
0x405469:	call	0x403850
0x40546e:	test	eax, eax
0x405470:	jne	0x405480
0x405472:	mov	edx, 1
0x405477:	shl	rdx, 0x28
0x40547b:	jmp	0x405340
0x405480:	mov	esi, 0x45b3cc
0x405485:	mov	rdi, r15
0x405488:	call	0x403850
0x40548d:	test	eax, eax
0x40548f:	jne	0x4054a0
0x405491:	movabs	rdx, 0x38d7ea4c68000
0x40549b:	jmp	0x405340
0x4054a0:	mov	esi, 0x45b3cf
0x4054a5:	mov	rdi, r15
0x4054a8:	call	0x403850
0x4054ad:	test	eax, eax
0x4054af:	jne	0x4054bf
0x4054b1:	mov	edx, 1
0x4054b6:	shl	rdx, 0x32
0x4054ba:	jmp	0x405340
0x4054bf:	mov	esi, 0x45b3d3
0x4054c4:	mov	rdi, r15
0x4054c7:	call	0x403850
0x4054cc:	test	eax, eax
0x4054ce:	jne	0x4054df
0x4054d0:	movabs	rdx, 0xde0b6b3a7640000
0x4054da:	jmp	0x405340
0x4054df:	mov	esi, 0x45dd14
0x4054e4:	mov	rdi, r15
0x4054e7:	call	0x403850
0x4054ec:	mov	edx, 1
0x4054f1:	shl	rdx, 0x3c
0x4054f5:	test	eax, eax
0x4054f7:	je	0x405340
0x4054fd:	mov	dword ptr [rbx], 0x16
0x405503:	or	rax, 0xffffffffffffffff
0x405507:	jmp	0x436ba1
0x40550c:	xor	eax, eax
0x40550e:	jmp	0x436c2d
0x405513:	test	ecx, ecx
0x405515:	je	0x405521
0x405517:	mov	eax, 1
0x40551c:	jmp	0x436c2d
0x405521:	test	al, 2
0x405523:	jne	0x436bdb
0x405529:	mov	eax, 1
0x40552e:	jmp	0x436c2d
0x405533:	call	0x403880
0x405538:	mov	r8, qword ptr [rbx + 0x48]
0x40553c:	mov	rsi, rdi
0x40553f:	mov	rdi, r8
0x405542:	call	rdx
0x405544:	mov	rdi, r12
0x405547:	jmp	0x42ddb1
0x40554c:	cmp	esi, 2
0x40554f:	je	0x436c90
0x405555:	jg	0x405560
0x405557:	test	esi, esi
0x405559:	je	0x40557e
0x40555b:	sub	esi, 1
0x40555e:	je	0x405585
0x405560:	mov	edx, 0x45b3d6
0x405565:	mov	esi, 0xef
0x40556a:	mov	edi, 0x464f08
0x40556f:	call	0x415bba
0x405574:	call	0x41b095
0x405579:	jmp	0x436c9d
0x40557e:	xor	eax, eax
0x405580:	jmp	0x436c9d
0x405585:	call	0x41b095
0x40558a:	jmp	0x436c9d
0x40558f:	xor	eax, eax
0x405591:	jmp	0x436ce8
0x405596:	xor	eax, eax
0x405598:	jmp	0x436ce8
0x40559d:	cmp	esi, 2
0x4055a0:	je	0x436d03
0x4055a6:	jg	0x4055b9
0x4055a8:	test	esi, esi
0x4055aa:	je	0x405673
0x4055b0:	sub	esi, 1
0x4055b3:	je	0x40567a
0x4055b9:	mov	edx, 0x45b430
0x4055be:	mov	esi, 0x15a
0x4055c3:	mov	edi, 0x464f08
0x4055c8:	call	0x415bba
0x4055cd:	mov	edi, 0x45b3e9
0x4055d2:	call	0x403800
0x4055d7:	mov	rbp, rax
0x4055da:	test	rax, rax
0x4055dd:	je	0x405609
0x4055df:	mov	esi, 0x45b3f3
0x4055e4:	mov	rdi, rax
0x4055e7:	call	0x403be0
0x4055ec:	test	eax, eax
0x4055ee:	je	0x436d10
0x4055f4:	mov	esi, 0x45b402
0x4055f9:	mov	rdi, rbp
0x4055fc:	call	0x403be0
0x405601:	test	eax, eax
0x405603:	je	0x436d10
0x405609:	mov	edi, 0x45b411
0x40560e:	call	0x403800
0x405613:	test	rax, rax
0x405616:	je	0x405622
0x405618:	call	0x41b1c6
0x40561d:	jmp	0x436d12
0x405622:	mov	edi, 0x45b41a
0x405627:	call	0x403800
0x40562c:	test	rax, rax
0x40562f:	jne	0x405618
0x405631:	mov	edi, 0x45b3ee
0x405636:	call	0x403800
0x40563b:	mov	r12, rax
0x40563e:	test	rbp, rbp
0x405641:	jne	0x405618
0x405643:	test	rax, rax
0x405646:	je	0x405618
0x405648:	mov	esi, 0x45b424
0x40564d:	mov	rdi, rax
0x405650:	call	0x403be0
0x405655:	test	eax, eax
0x405657:	je	0x436d10
0x40565d:	mov	esi, 0x45b42a
0x405662:	mov	rdi, r12
0x405665:	call	0x403be0
0x40566a:	test	eax, eax
0x40566c:	jne	0x405618
0x40566e:	jmp	0x436d10
0x405673:	xor	eax, eax
0x405675:	jmp	0x436d12
0x40567a:	call	0x41b1c6
0x40567f:	jmp	0x436d12
0x405684:	mov	r13d, dword ptr [rbp + 4]
0x405688:	mov	qword ptr [rbx], 0
0x40568f:	xor	edi, edi
0x405691:	add	esi, r13d
0x405694:	call	0x436e30
0x405699:	xor	edi, edi
0x40569b:	mov	r8d, eax
0x40569e:	mov	r12d, eax
0x4056a1:	lea	rsi, [r8*8 + 8]
0x4056a9:	and	r12d, 0x7fffffff
0x4056b0:	call	0x42db80
0x4056b5:	mov	r10d, r13d
0x4056b8:	xor	r9d, r9d
0x4056bb:	mov	qword ptr [rbx], rax
0x4056be:	mov	dword ptr [rax], r12d
0x4056c1:	cmp	r10, r9
0x4056c4:	je	0x4056d6
0x4056c6:	mov	r11, qword ptr [rbp + r9*8 + 8]
0x4056cb:	mov	qword ptr [rax + r9*8 + 8], r11
0x4056d0:	add	r9, 1
0x4056d4:	jmp	0x4056c1
0x4056d6:	mov	dword ptr [rax + 4], r13d
0x4056da:	jmp	0x436d9b
0x4056df:	nop	
0x4056e0:	mov	esi, dword ptr [rdi + 4]
0x4056e3:	jmp	0x436e72
0x4056e8:	mov	edx, 4
0x4056ed:	jmp	0x436e61
0x4056f2:	push	rax
0x4056f3:	mov	edx, 0x45b445
0x4056f8:	mov	esi, 0xa3
0x4056fd:	mov	edi, 0x45b45c
0x405702:	call	0x415bba
0x405707:	nop	
0x405708:	call	0x41315b
0x40570d:	jmp	0x436f8d
0x405712:	xor	edx, edx
0x405714:	mov	esi, 1
0x405719:	mov	rdi, r13
0x40571c:	call	0x439ab0
0x405721:	jmp	0x43701f
0x405726:	xor	r9d, r9d
0x405729:	xor	r8d, r8d
0x40572c:	mov	ecx, 1
0x405731:	mov	edx, 0x45b496
0x405736:	mov	edi, 0x4e24d0
0x40573b:	call	0x438670
0x405740:	jmp	0x437090
0x405745:	cmp	dword ptr [rip + 0xdf410], 0
0x40574c:	jne	0x4370a0
0x405752:	xor	esi, esi
0x405754:	call	0x43a440
0x405759:	test	eax, eax
0x40575b:	jne	0x4370a0
0x405761:	mov	r11, qword ptr [rip + 0xddb60]
0x405768:	test	r11, r11
0x40576b:	je	0x4370a0
0x405771:	cmp	dword ptr [r11 + 4], 1
0x405776:	ja	0x405979
0x40577c:	jne	0x4370a0
0x405782:	mov	rdi, qword ptr [r11 + 8]
0x405786:	call	0x42db40
0x40578b:	mov	qword ptr [rip + 0xdf24e], rax
0x405792:	jmp	0x4370a0
0x405797:	mov	r15, qword ptr [rip + 0xdf162]
0x40579e:	sub	r15, qword ptr [rip + 0xdf153]
0x4057a5:	cmp	r15, 0xf
0x4057a9:	jbe	0x40594a
0x4057af:	mov	r8, qword ptr [rip + 0xdf142]
0x4057b6:	movdqa	xmm0, xmmword ptr [rip + 0xb8be2]
0x4057be:	movups	xmmword ptr [r8], xmm0
0x4057c2:	mov	rdx, qword ptr [rip + 0xdf12f]
0x4057c9:	mov	rdi, qword ptr [rip + 0xdcc88]
0x4057d0:	lea	r12, [rdx + 0x10]
0x4057d4:	mov	qword ptr [rip + 0xdf11d], r12
0x4057db:	call	0x4039e0
0x4057e0:	mov	rdi, qword ptr [rip + 0xdf119]
0x4057e7:	lea	rsi, [rax + 1]
0x4057eb:	mov	rbx, rax
0x4057ee:	sub	rdi, r12
0x4057f1:	cmp	rdi, rsi
0x4057f4:	jb	0x40595e
0x4057fa:	mov	rsi, qword ptr [rip + 0xdcc57]
0x405801:	mov	rdi, qword ptr [rip + 0xdf0f0]
0x405808:	mov	rdx, rbx
0x40580b:	call	0x403c60
0x405810:	add	rbx, qword ptr [rip + 0xdf0e1]
0x405817:	lea	r9, [rbx + 1]
0x40581b:	mov	qword ptr [rip + 0xdf0d6], r9
0x405822:	mov	byte ptr [rbx], 0
0x405825:	mov	rsi, qword ptr [rip + 0xdf0c4]
0x40582c:	mov	r10, qword ptr [rip + 0xdf0c5]
0x405833:	cmp	rsi, r10
0x405836:	je	0x40596d
0x40583c:	mov	r13, qword ptr [rip + 0xdf0cd]
0x405843:	mov	r14, qword ptr [rip + 0xdf0b6]
0x40584a:	mov	edi, 0x45bfd5
0x40584f:	add	r10, r13
0x405852:	not	r13
0x405855:	mov	rcx, r14
0x405858:	sub	rcx, qword ptr [rip + 0xdf089]
0x40585f:	and	r10, r13
0x405862:	mov	rax, r10
0x405865:	sub	rax, qword ptr [rip + 0xdf07c]
0x40586c:	cmp	rax, rcx
0x40586f:	cmovbe	r14, r10
0x405873:	xor	edx, edx
0x405875:	movq	xmm1, r14
0x40587a:	punpcklqdq	xmm1, xmm1
0x40587e:	movaps	xmmword ptr [rip + 0xdf06b], xmm1
0x405885:	call	0x439e20
0x40588a:	jmp	0x4370ae
0x40588f:	xor	esi, esi
0x405891:	call	0x43a440
0x405896:	test	eax, eax
0x405898:	jne	0x4370ce
0x40589e:	xor	edx, edx
0x4058a0:	xor	esi, esi
0x4058a2:	mov	edi, 0x4c6c55
0x4058a7:	call	0x43a4f0
0x4058ac:	mov	r15d, eax
0x4058af:	test	eax, eax
0x4058b1:	jne	0x4370ce
0x4058b7:	mov	r12, qword ptr [rip + 0xdda0a]
0x4058be:	test	r12, r12
0x4058c1:	je	0x43716c
0x4058c7:	cmp	dword ptr [r12 + 4], r15d
0x4058cc:	jbe	0x43716c
0x4058d2:	mov	r11d, r15d
0x4058d5:	mov	esi, 0x45b49a
0x4058da:	add	r15d, 1
0x4058de:	mov	rdi, qword ptr [r12 + r11*8 + 8]
0x4058e3:	call	0x43b660
0x4058e8:	jmp	0x4058b7
0x4058ea:	cmp	qword ptr [rip + 0xdf0f6], 0
0x4058f2:	je	0x43716c
0x4058f8:	jmp	0x4370df
0x4058fd:	cmp	dword ptr [rip + 0xdf258], 0
0x405904:	jne	0x4370be
0x40590a:	xor	esi, esi
0x40590c:	call	0x43a440
0x405911:	test	eax, eax
0x405913:	jne	0x4370be
0x405919:	mov	rsi, qword ptr [rip + 0xdd9a8]
0x405920:	test	rsi, rsi
0x405923:	je	0x4370be
0x405929:	cmp	dword ptr [rsi + 4], 1
0x40592d:	ja	0x40598a
0x40592f:	jne	0x4370be
0x405935:	mov	rdi, qword ptr [rsi + 8]
0x405939:	call	0x42db40
0x40593e:	mov	qword ptr [rip + 0xdf08b], rax
0x405945:	jmp	0x4370be
0x40594a:	mov	esi, 0x10
0x40594f:	mov	edi, 0x4e48e0
0x405954:	call	0x4316f0
0x405959:	jmp	0x4057af
0x40595e:	mov	edi, 0x4e48e0
0x405963:	call	0x4316f0
0x405968:	jmp	0x4057fa
0x40596d:	or	byte ptr [rip + 0xdefbc], 2
0x405974:	jmp	0x40583c
0x405979:	mov	edi, 0x464fb8
0x40597e:	xor	eax, eax
0x405980:	call	0x43dd90
0x405985:	jmp	0x4370a0
0x40598a:	mov	edi, 0x464ff8
0x40598f:	xor	eax, eax
0x405991:	call	0x43dd90
0x405996:	jmp	0x4370be
0x40599b:	mov	esi, 0x45b496
0x4059a0:	call	0x43b660
0x4059a5:	jmp	0x4370ef
0x4059aa:	mov	esi, 0x45b496
0x4059af:	call	0x43b660
0x4059b4:	jmp	0x4370ff
0x4059b9:	mov	edi, 0x45b059
0x4059be:	jmp	0x437123
0x4059c3:	mov	rsi, qword ptr [r15 + 8]
0x4059c7:	mov	edi, 0x4e24b0
0x4059cc:	mov	ecx, 1
0x4059d1:	mov	edx, 4
0x4059d6:	call	0x439620
0x4059db:	mov	rdi, rax
0x4059de:	test	rax, rax
0x4059e1:	je	0x405b42
0x4059e7:	mov	edx, 1
0x4059ec:	xor	esi, esi
0x4059ee:	call	0x439ab0
0x4059f3:	mov	r15, qword ptr [r15]
0x4059f6:	jmp	0x437173
0x4059fb:	cmp	dword ptr [rip + 0xe06c6], 0
0x405a02:	je	0x405a9b
0x405a08:	mov	r15d, dword ptr [rip + 0xdd88d]
0x405a0f:	mov	edi, 0x45b4b7
0x405a14:	neg	dword ptr [rip + 0xe0626]
0x405a1a:	mov	dword ptr [rip + 0xdd878], 0
0x405a24:	call	0x43a0b0
0x405a29:	cmp	dword ptr [rip + 0xe0698], 0
0x405a30:	mov	dword ptr [rip + 0xdd865], r15d
0x405a37:	jne	0x4371c1
0x405a3d:	mov	r11d, dword ptr [rip + 0xdefec]
0x405a44:	mov	r8d, dword ptr [rip + 0xe0785]
0x405a4b:	mov	r12, qword ptr [rip + 0xdefd6]
0x405a52:	mov	edx, dword ptr [rip + 0xe0788]
0x405a58:	mov	rbx, qword ptr [rip + 0xe0761]
0x405a5f:	neg	dword ptr [rip + 0xe05db]
0x405a65:	mov	dword ptr [rip + 0xe0778], r11d
0x405a6c:	mov	dword ptr [rip + 0xe0769], r8d
0x405a73:	mov	qword ptr [rip + 0xe074e], r12
0x405a7a:	mov	dword ptr [rip + 0xdefb0], edx
0x405a80:	mov	dword ptr [rip + 0xe074a], edx
0x405a86:	mov	qword ptr [rip + 0xdef9b], rbx
0x405a8d:	jmp	0x4371c1
0x405a92:	add	rcx, 1
0x405a96:	jmp	0x43725c
0x405a9b:	movsxd	rbx, dword ptr [rip + 0xe072e]
0x405aa2:	mov	edx, dword ptr [rip + 0xdef88]
0x405aa8:	mov	r13, qword ptr [rip + 0xdef79]
0x405aaf:	imul	r14, rbx, 0x18
0x405ab3:	mov	dword ptr [rip + 0xe072b], edx
0x405ab9:	mov	dword ptr [rip + 0xe071d], ebx
0x405abf:	mov	rdi, r14
0x405ac2:	call	0x42db10
0x405ac7:	mov	rsi, r13
0x405aca:	mov	rdx, r14
0x405acd:	mov	rdi, rax
0x405ad0:	call	0x403c60
0x405ad5:	mov	edi, 0x45b4b7
0x405ada:	mov	qword ptr [rip + 0xe06e7], rax
0x405ae1:	call	0x43a0b0
0x405ae6:	mov	edi, dword ptr [rip + 0xdef44]
0x405aec:	mov	r9d, dword ptr [rip + 0xe06dd]
0x405af3:	mov	r10, qword ptr [rip + 0xdef2e]
0x405afa:	mov	eax, dword ptr [rip + 0xe06e4]
0x405b00:	mov	ecx, dword ptr [rip + 0xe06d6]
0x405b06:	mov	rsi, qword ptr [rip + 0xe06bb]
0x405b0d:	mov	dword ptr [rip + 0xe06cd], edi
0x405b13:	mov	dword ptr [rip + 0xe06be], r9d
0x405b1a:	mov	qword ptr [rip + 0xe069f], r10
0x405b21:	mov	dword ptr [rip + 0xdef09], eax
0x405b27:	mov	dword ptr [rip + 0xe06a3], ecx
0x405b2d:	mov	qword ptr [rip + 0xdeef4], rsi
0x405b34:	jmp	0x405a08
0x405b39:	add	r12, 1
0x405b3d:	jmp	0x4372a9
0x405b42:	mov	rdi, qword ptr [r15 + 8]
0x405b46:	jmp	0x4059e7
0x405b4b:	mov	rsi, r14
0x405b4e:	mov	edi, 0x4e6140
0x405b53:	call	0x4316f0
0x405b58:	jmp	0x437328
0x405b5d:	mov	esi, 1
0x405b62:	mov	edi, 0x4e6140
0x405b67:	call	0x4316f0
0x405b6c:	jmp	0x437358
0x405b71:	or	byte ptr [rip + 0xe0618], 2
0x405b78:	jmp	0x43738e
0x405b7d:	lea	r12, [r15 + 1]
0x405b81:	jmp	0x43729e
0x405b86:	mov	r14d, 1
0x405b8c:	cmp	r15b, 0xa
0x405b90:	je	0x405bbf
0x405b92:	movzx	eax, byte ptr [rdi]
0x405b95:	cmp	al, 0x3b
0x405b97:	je	0x405bc8
0x405b99:	test	al, al
0x405b9b:	je	0x405bfe
0x405b9d:	lea	rbx, [rdi + 1]
0x405ba1:	test	r14d, r14d
0x405ba4:	jne	0x405bda
0x405ba6:	mov	rdi, rbx
0x405ba9:	jmp	0x405b92
0x405bab:	mov	rdi, rbx
0x405bae:	xor	edx, edx
0x405bb0:	xor	eax, eax
0x405bb2:	call	0x42d870
0x405bb7:	mov	rbx, rax
0x405bba:	jmp	0x437410
0x405bbf:	add	rdi, 1
0x405bc3:	jmp	0x4373ec
0x405bc8:	test	r14d, r14d
0x405bcb:	jne	0x437656
0x405bd1:	add	rdi, 1
0x405bd5:	jmp	0x4373ec
0x405bda:	mov	rbx, rdi
0x405bdd:	movzx	r9d, byte ptr [rbx]
0x405be1:	cmp	r9b, 0x20
0x405be5:	je	0x405cef
0x405beb:	cmp	r9b, 0x3b
0x405bef:	je	0x405cef
0x405bf5:	test	r9b, r9b
0x405bf8:	jne	0x405d3e
0x405bfe:	mov	rdx, qword ptr [rip + 0xdedb3]
0x405c05:	mov	esi, 0x465040
0x405c0a:	xor	edi, edi
0x405c0c:	xor	eax, eax
0x405c0e:	call	0x43f5d0
0x405c13:	add	rbx, 1
0x405c17:	jmp	0x437417
0x405c1c:	mov	rcx, qword ptr [rip + 0xded1d]
0x405c23:	mov	esi, 0x465068
0x405c28:	xor	edi, edi
0x405c2a:	xor	eax, eax
0x405c2c:	mov	rdx, qword ptr [rip + 0xded8d]
0x405c33:	call	0x43f5d0
0x405c38:	mov	r13, qword ptr [rbp - 0x40]
0x405c3c:	lea	edi, [r13 + 1]
0x405c40:	call	0x42db10
0x405c45:	mov	edx, r13d
0x405c48:	mov	rsi, rbx
0x405c4b:	mov	rdi, rax
0x405c4e:	mov	r12, rax
0x405c51:	mov	qword ptr [rbp - 0x38], rdx
0x405c55:	call	0x4038b0
0x405c5a:	mov	rsi, qword ptr [rbp - 0x38]
0x405c5e:	mov	rdi, r12
0x405c61:	mov	byte ptr [r12 + rsi], 0
0x405c66:	mov	esi, 0x3a
0x405c6b:	call	0x403a40
0x405c70:	test	rax, rax
0x405c73:	je	0x405c78
0x405c75:	mov	byte ptr [rax], 0
0x405c78:	mov	qword ptr [rip + 0xded79], r12
0x405c7f:	mov	dword ptr [rbp - 0x44], 0
0x405c86:	jmp	0x437531
0x405c8b:	mov	edi, 0x4cd754
0x405c90:	call	0x42db40
0x405c95:	mov	rdx, rax
0x405c98:	jmp	0x4375ea
0x405c9d:	mov	r15, qword ptr [rip + 0xded54]
0x405ca4:	mov	r13, qword ptr [rip + 0xded2d]
0x405cab:	test	r15, r15
0x405cae:	jne	0x405d29
0x405cb0:	test	r13, r13
0x405cb3:	je	0x437656
0x405cb9:	jmp	0x437641
0x405cbe:	add	rcx, 1
0x405cc2:	jmp	0x43757b
0x405cc7:	cmp	r8b, 0x3a
0x405ccb:	mov	r14, r12
0x405cce:	cmovne	r14, r15
0x405cd2:	jmp	0x4375b8
0x405cd7:	mov	rdi, r13
0x405cda:	call	0x403830
0x405cdf:	mov	qword ptr [rip + 0xdecee], 0
0x405cea:	jmp	0x437656
0x405cef:	cmp	al, 0x21
0x405cf1:	je	0x405d11
0x405cf3:	mov	esi, ebx
0x405cf5:	sub	esi, edi
0x405cf7:	call	0x43b7d0
0x405cfc:	mov	r14d, eax
0x405cff:	cmp	byte ptr [rbx], 0x20
0x405d02:	jne	0x405ba6
0x405d08:	add	rbx, 1
0x405d0c:	jmp	0x405ba6
0x405d11:	add	rdi, 1
0x405d15:	mov	esi, ebx
0x405d17:	xor	r14d, r14d
0x405d1a:	sub	esi, edi
0x405d1c:	call	0x43b7d0
0x405d21:	test	eax, eax
0x405d23:	sete	r14b
0x405d27:	jmp	0x405cff
0x405d29:	test	r13, r13
0x405d2c:	jne	0x437656
0x405d32:	mov	qword ptr [rip + 0xdec9f], r15
0x405d39:	jmp	0x437656
0x405d3e:	add	rbx, 1
0x405d42:	jmp	0x405bdd
0x405d47:	mov	edx, 0x45b541
0x405d4c:	mov	esi, 0x1508
0x405d51:	mov	edi, 0x45b1e2
0x405d56:	call	0x415bba
0x405d5b:	mov	rdi, r15
0x405d5e:	call	0x4039e0
0x405d63:	mov	r8, qword ptr [rbp - 0x90]
0x405d6a:	mov	qword ptr [rbp - 0x98], rax
0x405d71:	cmp	r8, rax
0x405d74:	jbe	0x405e49
0x405d7a:	sub	r8, rax
0x405d7d:	mov	rsi, r15
0x405d80:	mov	rdi, r8
0x405d83:	add	rdi, r14
0x405d86:	call	0x403be0
0x405d8b:	test	eax, eax
0x405d8d:	jne	0x405f79
0x405d93:	mov	rsi, qword ptr [rbp - 0x90]
0x405d9a:	mov	rdi, r14
0x405d9d:	sub	rsi, qword ptr [rbp - 0x98]
0x405da4:	call	0x439da0
0x405da9:	mov	r14, rax
0x405dac:	mov	r15, rax
0x405daf:	jmp	0x437eed
0x405db4:	mov	rdx, qword ptr [rip + 0xe02f5]
0x405dbb:	test	rdx, rdx
0x405dbe:	je	0x437d88
0x405dc4:	mov	esi, 0x465120
0x405dc9:	xor	edi, edi
0x405dcb:	xor	eax, eax
0x405dcd:	call	0x411cf7
0x405dd2:	mov	eax, dword ptr [rip + 0xe0268]
0x405dd8:	sub	eax, 2
0x405ddb:	cmp	eax, 1
0x405dde:	jbe	0x405f1c
0x405de4:	cmp	dword ptr [rip + 0xdec2d], 0
0x405deb:	je	0x4381d5
0x405df1:	jmp	0x437d9a
0x405df6:	cmp	dword ptr [rip + 0xdecc3], 0
0x405dfd:	jne	0x405e2c
0x405dff:	mov	dword ptr [rip + 0xdecb7], 2
0x405e09:	jmp	0x4379f6
0x405e0e:	test	r13, r13
0x405e11:	je	0x405e51
0x405e13:	cmp	byte ptr [r14], 0
0x405e17:	jne	0x405f81
0x405e1d:	mov	qword ptr [rbp - 0x88], r13
0x405e24:	mov	r13, r14
0x405e27:	jmp	0x437e90
0x405e2c:	mov	dword ptr [rip + 0xdec8a], 0
0x405e36:	jmp	0x4379f6
0x405e3b:	xor	r15d, r15d
0x405e3e:	mov	r14d, 0x45b67c
0x405e44:	jmp	0x437eed
0x405e49:	xor	r15d, r15d
0x405e4c:	jmp	0x437eed
0x405e51:	mov	r15, qword ptr [rip + 0xdd400]
0x405e58:	test	r15, r15
0x405e5b:	je	0x405e78
0x405e5d:	mov	rdi, r14
0x405e60:	call	0x4039e0
0x405e65:	mov	rdi, r15
0x405e68:	mov	r13, rax
0x405e6b:	call	0x4039e0
0x405e70:	sub	r13, rax
0x405e73:	mov	byte ptr [r14 + r13], 0
0x405e78:	mov	r15, qword ptr [rip + 0xdd3e9]
0x405e7f:	test	r15, r15
0x405e82:	je	0x405f8d
0x405e88:	mov	rsi, r14
0x405e8b:	xor	ecx, ecx
0x405e8d:	mov	edx, 0x4cd89a
0x405e92:	mov	rdi, r15
0x405e95:	xor	eax, eax
0x405e97:	call	0x42d870
0x405e9c:	mov	r14, rax
0x405e9f:	mov	rdi, r15
0x405ea2:	xor	r15d, r15d
0x405ea5:	call	0x403830
0x405eaa:	mov	rdi, qword ptr [rip + 0xdd3af]
0x405eb1:	call	0x403830
0x405eb6:	mov	rdi, qword ptr [rip + 0xdd39b]
0x405ebd:	call	0x403830
0x405ec2:	mov	qword ptr [rip + 0xdd39f], r14
0x405ec9:	mov	qword ptr [rip + 0xdd384], 0
0x405ed4:	mov	qword ptr [rip + 0xdd381], 0
0x405edf:	mov	byte ptr [rip + 0xdd36a], 1
0x405ee6:	jmp	0x437fd0
0x405eeb:	mov	byte ptr [rcx], 0x2f
0x405eee:	mov	byte ptr [r14 + r12 + 1], 0
0x405ef4:	jmp	0x43831d
0x405ef9:	xor	edx, edx
0x405efb:	mov	esi, 0x489e38
0x405f00:	mov	edi, 0x4cd754
0x405f05:	xor	eax, eax
0x405f07:	call	0x42d870
0x405f0c:	mov	rdi, r14
0x405f0f:	mov	rsi, rax
0x405f12:	call	0x4038f0
0x405f17:	jmp	0x43831d
0x405f1c:	mov	rsi, qword ptr [rip + 0xdd30d]
0x405f23:	xor	edx, edx
0x405f25:	mov	edi, 0x45b579
0x405f2a:	xor	eax, eax
0x405f2c:	call	0x42d870
0x405f31:	mov	r8d, 1
0x405f37:	xor	ecx, ecx
0x405f39:	xor	edx, edx
0x405f3b:	mov	rdi, rax
0x405f3e:	xor	esi, esi
0x405f40:	call	0x438ef0
0x405f45:	mov	dword ptr [rip + 0xe00f1], 1
0x405f4f:	jmp	0x405de4
0x405f54:	cmp	dword ptr [rip + 0xdeab5], 0
0x405f5b:	jne	0x438076
0x405f61:	test	r13, r13
0x405f64:	jne	0x405fa6
0x405f66:	mov	qword ptr [rbp - 0x88], 0
0x405f71:	mov	r13, r14
0x405f74:	jmp	0x437e90
0x405f79:	xor	r15d, r15d
0x405f7c:	jmp	0x437eed
0x405f81:	mov	r15, qword ptr [rip + 0xdd2d8]
0x405f88:	jmp	0x438086
0x405f8d:	mov	rdi, r14
0x405f90:	xor	edx, edx
0x405f92:	mov	esi, 0x4cd89a
0x405f97:	xor	eax, eax
0x405f99:	call	0x42d870
0x405f9e:	mov	r14, rax
0x405fa1:	jmp	0x405e9f
0x405fa6:	mov	r15, qword ptr [rip + 0xdd2b3]
0x405fad:	test	r14, r14
0x405fb0:	jne	0x405e13
0x405fb6:	jmp	0x405ee6
0x405fbb:	cmp	qword ptr [rip + 0xdd29d], 0
0x405fc3:	jne	0x437fa9
0x405fc9:	xor	r15d, r15d
0x405fcc:	jmp	0x437fd0
0x405fd1:	mov	qword ptr [rip + 0xdd270], r14
0x405fd8:	jmp	0x437f9b
0x405fdd:	mov	r14, qword ptr [rip + 0xdd284]
0x405fe4:	mov	dword ptr [rip + 0xdd2ae], 2
0x405fee:	test	r14, r14
0x405ff1:	jne	0x437ba1
0x405ff7:	mov	r15, qword ptr [rip + 0xdd262]
0x405ffe:	jmp	0x437bb1
0x406003:	mov	r15d, 0x429630
0x406009:	jmp	0x437736
0x40600e:	test	r14, r14
0x406011:	je	0x437e60
0x406017:	mov	rdi, r14
0x40601a:	call	0x403830
0x40601f:	mov	qword ptr [rip + 0xdd23e], 0
0x40602a:	jmp	0x437e27
0x40602f:	mov	byte ptr [rax], 0
0x406032:	jmp	0x4376ff
0x406037:	test	r14, r14
0x40603a:	je	0x405fe4
0x40603c:	jmp	0x406017
0x40603e:	mov	edx, 0x45b541
0x406043:	mov	esi, 0x1543
0x406048:	mov	edi, 0x45b1e2
0x40604d:	call	0x415bba
0x406052:	test	r15, r15
0x406055:	je	0x40605d
0x406057:	cmp	byte ptr [r15], 0
0x40605b:	jne	0x40609f
0x40605d:	mov	rdi, r12
0x406060:	call	0x403830
0x406065:	mov	qword ptr [rip + 0xdd1e8], 0
0x406070:	jmp	0x437c66
0x406075:	cmp	dword ptr [rip + 0xdff08], 0
0x40607c:	je	0x437c73
0x406082:	mov	esi, 0x4650e8
0x406087:	xor	edi, edi
0x406089:	xor	eax, eax
0x40608b:	call	0x411cf7
0x406090:	mov	dword ptr [rip + 0xdfeea], 0
0x40609a:	jmp	0x437c73
0x40609f:	mov	rdi, r15
0x4060a2:	call	0x4039e0
0x4060a7:	mov	rdi, r12
0x4060aa:	mov	r13, rax
0x4060ad:	call	0x4039e0
0x4060b2:	mov	rdi, r13
0x4060b5:	mov	rsi, r12
0x4060b8:	sub	rdi, rax
0x4060bb:	add	rdi, r15
0x4060be:	call	0x403be0
0x4060c3:	test	eax, eax
0x4060c5:	je	0x437c66
0x4060cb:	mov	edx, 0x45b541
0x4060d0:	mov	esi, 0x1579
0x4060d5:	mov	edi, 0x45b1e2
0x4060da:	call	0x415bba
0x4060df:	jns	0x437c93
0x4060e5:	cmp	qword ptr [rip + 0xdd143], 0
0x4060ed:	mov	dword ptr [rip + 0xdff49], 0
0x4060f7:	je	0x437c93
0x4060fd:	mov	edx, 0x45b541
0x406102:	mov	esi, 0x1597
0x406107:	mov	edi, 0x45b1e2
0x40610c:	call	0x415bba
0x406111:	xor	r9d, r9d
0x406114:	mov	r8d, 1
0x40611a:	mov	ecx, 1
0x40611f:	mov	edx, 0x45b496
0x406124:	mov	esi, 0x45b059
0x406129:	mov	edi, 0x4e24d0
0x40612e:	call	0x438670
0x406133:	xor	r9d, r9d
0x406136:	mov	r8d, 2
0x40613c:	mov	ecx, 1
0x406141:	mov	edx, 0x45b49a
0x406146:	mov	esi, 0x45b059
0x40614b:	mov	edi, 0x4e24d0
0x406150:	call	0x438670
0x406155:	xor	r9d, r9d
0x406158:	mov	r8d, 2
0x40615e:	mov	ecx, 1
0x406163:	mov	edx, 0x45b49a
0x406168:	mov	esi, 0x45b059
0x40616d:	mov	edi, 0x4e24d0
0x406172:	call	0x438670
0x406177:	xor	r9d, r9d
0x40617a:	mov	r8d, 1
0x406180:	mov	ecx, 1
0x406185:	mov	edx, 0x45b49a
0x40618a:	mov	esi, 0x45b059
0x40618f:	mov	edi, 0x4e24b0
0x406194:	call	0x438670
0x406199:	jmp	0x437ca1
0x40619e:	movzx	r11d, byte ptr [rax]
0x4061a2:	cmp	r11b, 0x2d
0x4061a6:	je	0x4061e0
0x4061a8:	test	r11b, r11b
0x4061ab:	je	0x437c93
0x4061b1:	mov	esi, 0x45b599
0x4061b6:	mov	rdi, rax
0x4061b9:	call	0x403be0
0x4061be:	test	eax, eax
0x4061c0:	je	0x437c93
0x4061c6:	mov	dword ptr [rip + 0xdfe70], 3
0x4061d0:	mov	qword ptr [rip + 0xdd055], 0x45b613
0x4061db:	jmp	0x437c93
0x4061e0:	mov	dword ptr [rip + 0xdfe56], 2
0x4061ea:	mov	qword ptr [rip + 0xdd03f], rax
0x4061f1:	jmp	0x437c93
0x4061f6:	mov	edi, 0x45b059
0x4061fb:	jmp	0x437ccc
0x406200:	test	r15, r15
0x406203:	je	0x437bcd
0x406209:	cmp	byte ptr [r15], 0
0x40620d:	je	0x406279
0x40620f:	mov	rdi, r15
0x406212:	call	0x4039e0
0x406217:	mov	rdi, r14
0x40621a:	mov	qword ptr [rbp - 0x88], rax
0x406221:	call	0x4039e0
0x406226:	mov	rsi, qword ptr [rbp - 0x88]
0x40622d:	cmp	esi, eax
0x40622f:	jle	0x406248
0x406231:	movsxd	rdi, esi
0x406234:	cdqe	
0x406236:	mov	rsi, r14
0x406239:	sub	rdi, rax
0x40623c:	add	rdi, r15
0x40623f:	call	0x403be0
0x406244:	test	eax, eax
0x406246:	je	0x406279
0x406248:	mov	rdi, r14
0x40624b:	call	0x403830
0x406250:	mov	r15, qword ptr [rip + 0xdd009]
0x406257:	mov	qword ptr [rip + 0xdcff6], 0
0x406262:	jmp	0x437bc1
0x406267:	cmp	dword ptr [rip + 0xdd02e], 0
0x40626e:	je	0x405fee
0x406274:	jmp	0x405fe4
0x406279:	mov	r14, qword ptr [rip + 0xdcfe0]
0x406280:	jmp	0x438051
0x406285:	cmp	sil, 0x6d
0x406289:	jne	0x4377c7
0x40628f:	cmp	byte ptr [rdi + rcx - 1], 0x69
0x406294:	mov	r8d, 1
0x40629a:	cmove	r14d, r8d
0x40629e:	jmp	0x4377c7
0x4062a3:	mov	esi, 0x4650c0
0x4062a8:	xor	edi, edi
0x4062aa:	xor	eax, eax
0x4062ac:	call	0x43f5d0
0x4062b1:	mov	r11, qword ptr [rip + 0xdc1b8]
0x4062b8:	cmp	byte ptr [r11], 0x30
0x4062bc:	jne	0x4378e5
0x4062c2:	mov	rdi, rax
0x4062c5:	call	0x4039e0
0x4062ca:	mov	rcx, rsp
0x4062cd:	add	rax, 0x1a
0x4062d1:	mov	rdi, rax
0x4062d4:	and	rax, 0xfffffffffffff000
0x4062da:	and	rdi, 0xfffffffffffffff0
0x4062de:	sub	rcx, rax
0x4062e1:	cmp	rsp, rcx
0x4062e4:	je	0x40642c
0x4062ea:	sub	rsp, 0x1000
0x4062f1:	or	qword ptr [rsp + 0xff8], 0
0x4062fa:	jmp	0x4062e1
0x4062fc:	lea	edi, [rbx + 1]
0x4062ff:	imul	rdi, rdi, 0x58
0x406303:	call	0x42db10
0x406308:	lea	esi, [rbx - 1]
0x40630b:	mov	r8d, 0x58
0x406311:	mov	r15, rsi
0x406314:	add	rsi, 1
0x406318:	mov	rdi, rax
0x40631b:	mov	r12, rax
0x40631e:	imul	rdx, rsi, 0x58
0x406322:	test	ebx, ebx
0x406324:	mov	rsi, r13
0x406327:	cmove	rdx, r8
0x40632b:	call	0x403c60
0x406330:	xor	r9d, r9d
0x406333:	mov	r10d, 1
0x406339:	test	ebx, ebx
0x40633b:	cmovne	r10, rbx
0x40633f:	cmove	r15d, r9d
0x406343:	mov	ecx, 0x80000
0x406348:	xor	esi, esi
0x40634a:	mov	edx, 1
0x40634f:	mov	edi, 0x7c3
0x406354:	imul	r8, r10, 0x58
0x406358:	lea	ebx, [r15 + 2]
0x40635c:	add	r8, r12
0x40635f:	call	0x438550
0x406364:	lea	r11, [r12 + 0x58]
0x406369:	mov	qword ptr [rbp - 0x88], r11
0x406370:	jmp	0x4377dd
0x406375:	mov	r14d, 1
0x40637b:	jmp	0x4377c7
0x406380:	mov	rdx, r12
0x406383:	mov	esi, 0x465090
0x406388:	xor	edi, edi
0x40638a:	xor	eax, eax
0x40638c:	call	0x43f5d0
0x406391:	mov	edx, 0x45b541
0x406396:	mov	esi, 0x1547
0x40639b:	mov	edi, 0x45b1e2
0x4063a0:	call	0x415bba
0x4063a5:	mov	qword ptr [rip + 0xdfd10], 0x45b059
0x4063b0:	jmp	0x438102
0x4063b5:	mov	r14, qword ptr [rip + 0xdce9c]
0x4063bc:	test	r14, r14
0x4063bf:	jne	0x406209
0x4063c5:	mov	r14, r15
0x4063c8:	jmp	0x438051
0x4063cd:	mov	byte ptr [r10], 0x2f
0x4063d1:	mov	byte ptr [r15 + r12 + 1], 0
0x4063d7:	jmp	0x43828a
0x4063dc:	xor	edx, edx
0x4063de:	mov	esi, 0x489e38
0x4063e3:	mov	edi, 0x4cd754
0x4063e8:	xor	eax, eax
0x4063ea:	call	0x42d870
0x4063ef:	mov	rdi, r15
0x4063f2:	mov	rsi, rax
0x4063f5:	call	0x4038f0
0x4063fa:	jmp	0x43828a
0x4063ff:	mov	rdi, r15
0x406402:	call	0x4039e0
0x406407:	mov	rdi, r13
0x40640a:	mov	r12, rax
0x40640d:	call	0x4039e0
0x406412:	mov	rsi, r12
0x406415:	mov	rdi, r15
0x406418:	sub	rsi, rax
0x40641b:	call	0x439da0
0x406420:	mov	qword ptr [rip + 0xdce21], rax
0x406427:	jmp	0x437c29
0x40642c:	mov	rdx, rdi
0x40642f:	and	edx, 0xfff
0x406435:	sub	rsp, rdx
0x406438:	test	rdx, rdx
0x40643b:	jne	0x406488
0x40643d:	lea	r15, [rsp + 0xf]
0x406442:	mov	r14, r13
0x406445:	and	r15, 0xfffffffffffffff0
0x406449:	movzx	eax, byte ptr [r14]
0x40644d:	cmp	al, 0x3a
0x40644f:	je	0x406459
0x406451:	test	al, al
0x406453:	jne	0x4064e1
0x406459:	mov	r12, r14
0x40645c:	mov	rsi, r13
0x40645f:	mov	rdi, r15
0x406462:	sub	r12, r13
0x406465:	mov	rdx, r12
0x406468:	call	0x4038b0
0x40646d:	cmp	r13, r14
0x406470:	je	0x406490
0x406472:	cmp	byte ptr [r14 - 1], 0x2f
0x406477:	lea	rsi, [r15 + r12]
0x40647b:	je	0x4064ea
0x40647d:	mov	byte ptr [rsi], 0x2f
0x406480:	mov	byte ptr [r15 + r12 + 1], 0
0x406486:	jmp	0x4064ae
0x406488:	or	qword ptr [rsp + rdx - 8], 0
0x40648e:	jmp	0x40643d
0x406490:	mov	esi, 0x489e38
0x406495:	mov	edi, 0x4cd754
0x40649a:	xor	edx, edx
0x40649c:	xor	eax, eax
0x40649e:	call	0x42d870
0x4064a3:	mov	rdi, r15
0x4064a6:	mov	rsi, rax
0x4064a9:	call	0x4038f0
0x4064ae:	xor	r8d, r8d
0x4064b1:	xor	edx, edx
0x4064b3:	mov	r9d, 1
0x4064b9:	mov	ecx, 1
0x4064be:	mov	rsi, r15
0x4064c1:	mov	edi, 0x4e24b0
0x4064c6:	call	0x438670
0x4064cb:	cmp	byte ptr [r14], 0
0x4064cf:	je	0x4378e5
0x4064d5:	add	r14, 1
0x4064d9:	mov	r13, r14
0x4064dc:	jmp	0x406449
0x4064e1:	add	r14, 1
0x4064e5:	jmp	0x406449
0x4064ea:	mov	byte ptr [rsi], 0
0x4064ed:	jmp	0x4064ae
0x4064ef:	nop	
0x4064f0:	mov	r8, rax
0x4064f3:	mov	rdi, qword ptr [rip + 0xdcba6]
0x4064fa:	mov	rcx, r12
0x4064fd:	xor	eax, eax
0x4064ff:	mov	edx, 0x465150
0x406504:	mov	esi, 1
0x406509:	call	0x403e90
0x40650e:	jmp	0x438411
0x406513:	endbr64	
0x406517:	sub	rsp, 0xd8
0x40651e:	mov	qword ptr [rsp + 0x28], rsi
0x406523:	mov	qword ptr [rsp + 0x30], rdx
0x406528:	mov	qword ptr [rsp + 0x38], rcx
0x40652d:	mov	qword ptr [rsp + 0x40], r8
0x406532:	mov	qword ptr [rsp + 0x48], r9
0x406537:	test	al, al
0x406539:	je	0x406572
0x40653b:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x406540:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x406545:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x40654a:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x406552:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x40655a:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x406562:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x40656a:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x406572:	lea	rdx, [rsp + 0x20]
0x406577:	lea	rsi, [rsp + 8]
0x40657c:	mov	edi, 0x465170
0x406581:	mov	dword ptr [rsp + 8], 8
0x406589:	lea	rax, [rsp + 0xe0]
0x406591:	mov	dword ptr [rsp + 0xc], 0x30
0x406599:	mov	qword ptr [rsp + 0x10], rax
0x40659e:	mov	qword ptr [rsp + 0x18], rdx
0x4065a3:	call	0x4065b0
0x4065a8:	add	rsp, 0xd8
0x4065af:	ret	
0x4065b0:	endbr64	
0x4065b4:	push	r13
0x4065b6:	mov	r13, rdi
0x4065b9:	push	r12
0x4065bb:	push	rbx
0x4065bc:	mov	rbx, rsi
0x4065bf:	call	0x4065ef
0x4065c4:	movsxd	rdi, eax
0x4065c7:	call	0x42db10
0x4065cc:	mov	r8, rbx
0x4065cf:	mov	rcx, r13
0x4065d2:	or	rdx, 0xffffffffffffffff
0x4065d6:	mov	r12, rax
0x4065d9:	mov	esi, 1
0x4065de:	mov	rdi, rax
0x4065e1:	call	0x403f30
0x4065e6:	mov	rax, r12
0x4065e9:	pop	rbx
0x4065ea:	pop	r12
0x4065ec:	pop	r13
0x4065ee:	ret	
0x4065ef:	push	r14
0x4065f1:	push	r13
0x4065f3:	movabs	r13, 0x700000005
0x4065fd:	push	r12
0x4065ff:	push	rbp
0x406600:	push	rbx
0x406601:	mov	rbx, rsi
0x406604:	sub	rsp, 0x20
0x406608:	mov	qword ptr [rsp], rdi
0x40660c:	call	0x4039e0
0x406611:	movups	xmm0, xmmword ptr [rbx]
0x406614:	lea	r12d, [rax + 1]
0x406618:	movups	xmmword ptr [rsp + 8], xmm0
0x40661d:	mov	rax, qword ptr [rbx + 0x10]
0x406621:	mov	qword ptr [rsp + 0x18], rax
0x406626:	mov	rcx, qword ptr [rsp]
0x40662a:	cmp	byte ptr [rcx], 0
0x40662d:	je	0x406828
0x406633:	lea	rdx, [rcx + 1]
0x406637:	mov	qword ptr [rsp], rdx
0x40663b:	cmp	byte ptr [rcx], 0x25
0x40663e:	jne	0x406626
0x406640:	mov	rbp, qword ptr [rsp]
0x406644:	mov	edi, 0x45b595
0x406649:	movsx	esi, byte ptr [rbp]
0x40664d:	mov	r14d, esi
0x406650:	call	0x403a40
0x406655:	test	rax, rax
0x406658:	je	0x406663
0x40665a:	inc	rbp
0x40665d:	mov	qword ptr [rsp], rbp
0x406661:	jmp	0x406640
0x406663:	cmp	r14b, 0x2a
0x406667:	jne	0x4066a8
0x406669:	mov	esi, dword ptr [rsp + 8]
0x40666d:	inc	rbp
0x406670:	mov	qword ptr [rsp], rbp
0x406674:	cmp	esi, 0x2f
0x406677:	ja	0x406689
0x406679:	mov	edi, esi
0x40667b:	add	esi, 8
0x40667e:	add	rdi, qword ptr [rsp + 0x18]
0x406683:	mov	dword ptr [rsp + 8], esi
0x406687:	jmp	0x406697
0x406689:	mov	rdi, qword ptr [rsp + 0x10]
0x40668e:	lea	r8, [rdi + 8]
0x406692:	mov	qword ptr [rsp + 0x10], r8
0x406697:	mov	r9d, dword ptr [rdi]
0x40669a:	mov	ebx, r9d
0x40669d:	neg	ebx
0x40669f:	cmovs	ebx, r9d
0x4066a3:	add	ebx, r12d
0x4066a6:	jmp	0x4066bc
0x4066a8:	mov	edx, 0xa
0x4066ad:	mov	rsi, rsp
0x4066b0:	mov	rdi, rbp
0x4066b3:	call	0x403e10
0x4066b8:	lea	ebx, [r12 + rax]
0x4066bc:	mov	r10, qword ptr [rsp]
0x4066c0:	cmp	byte ptr [r10], 0x2e
0x4066c4:	jne	0x406728
0x4066c6:	lea	rdi, [r10 + 1]
0x4066ca:	mov	qword ptr [rsp], rdi
0x4066ce:	cmp	byte ptr [r10 + 1], 0x2a
0x4066d3:	jne	0x406719
0x4066d5:	mov	r11d, dword ptr [rsp + 8]
0x4066da:	add	r10, 2
0x4066de:	mov	qword ptr [rsp], r10
0x4066e2:	cmp	r11d, 0x2f
0x4066e6:	ja	0x4066fb
0x4066e8:	mov	r12d, r11d
0x4066eb:	add	r11d, 8
0x4066ef:	add	r12, qword ptr [rsp + 0x18]
0x4066f4:	mov	dword ptr [rsp + 8], r11d
0x4066f9:	jmp	0x40670a
0x4066fb:	mov	r12, qword ptr [rsp + 0x10]
0x406700:	lea	rax, [r12 + 8]
0x406705:	mov	qword ptr [rsp + 0x10], rax
0x40670a:	mov	ecx, dword ptr [r12]
0x40670e:	mov	edx, ecx
0x406710:	neg	edx
0x406712:	cmovs	edx, ecx
0x406715:	add	ebx, edx
0x406717:	jmp	0x406728
0x406719:	mov	edx, 0xa
0x40671e:	mov	rsi, rsp
0x406721:	call	0x403e10
0x406726:	add	ebx, eax
0x406728:	mov	r14, qword ptr [rsp]
0x40672c:	mov	edi, 0x45b59b
0x406731:	movsx	esi, byte ptr [r14]
0x406735:	inc	r14
0x406738:	mov	ebp, esi
0x40673a:	call	0x403a40
0x40673f:	test	rax, rax
0x406742:	je	0x40674a
0x406744:	mov	qword ptr [rsp], r14
0x406748:	jmp	0x406728
0x40674a:	lea	r12d, [rbx + 0x1e]
0x40674e:	cmp	bpl, 0x67
0x406752:	jg	0x406781
0x406754:	cmp	bpl, 0x44
0x406758:	jle	0x40681f
0x40675e:	lea	ecx, [rbp - 0x45]
0x406761:	mov	r8d, 1
0x406767:	shl	r8, cl
0x40676a:	test	r8, r13
0x40676d:	jne	0x4067a7
0x40676f:	test	r8d, 0xc0080000
0x406776:	je	0x40681f
0x40677c:	jmp	0x406803
0x406781:	lea	ecx, [rbp - 0x69]
0x406784:	cmp	cl, 0xf
0x406787:	ja	0x40681f
0x40678d:	mov	eax, 1
0x406792:	shl	rax, cl
0x406795:	test	eax, 0x9041
0x40679a:	jne	0x406803
0x40679c:	test	al, 0xa0
0x40679e:	jne	0x406803
0x4067a0:	cmp	cl, 0xa
0x4067a3:	jne	0x40681f
0x4067a5:	jmp	0x4067cf
0x4067a7:	mov	r9d, dword ptr [rsp + 0xc]
0x4067ac:	cmp	r9d, 0xaf
0x4067b3:	ja	0x4067c0
0x4067b5:	add	r9d, 0x10
0x4067b9:	mov	dword ptr [rsp + 0xc], r9d
0x4067be:	jmp	0x4067c6
0x4067c0:	add	qword ptr [rsp + 0x10], 8
0x4067c6:	lea	r12d, [rbx + 0x151]
0x4067cd:	jmp	0x40681f
0x4067cf:	mov	ebx, dword ptr [rsp + 8]
0x4067d3:	cmp	ebx, 0x2f
0x4067d6:	ja	0x4067e8
0x4067d8:	mov	esi, ebx
0x4067da:	add	ebx, 8
0x4067dd:	add	rsi, qword ptr [rsp + 0x18]
0x4067e2:	mov	dword ptr [rsp + 8], ebx
0x4067e6:	jmp	0x4067f6
0x4067e8:	mov	rsi, qword ptr [rsp + 0x10]
0x4067ed:	lea	rdi, [rsi + 8]
0x4067f1:	mov	qword ptr [rsp + 0x10], rdi
0x4067f6:	mov	rdi, qword ptr [rsi]
0x4067f9:	call	0x4039e0
0x4067fe:	add	r12d, eax
0x406801:	jmp	0x40681f
0x406803:	mov	r10d, dword ptr [rsp + 8]
0x406808:	cmp	r10d, 0x2f
0x40680c:	ja	0x406819
0x40680e:	add	r10d, 8
0x406812:	mov	dword ptr [rsp + 8], r10d
0x406817:	jmp	0x40681f
0x406819:	add	qword ptr [rsp + 0x10], 8
0x40681f:	mov	qword ptr [rsp], r14
0x406823:	jmp	0x406626
0x406828:	add	rsp, 0x20
0x40682c:	mov	eax, r12d
0x40682f:	pop	rbx
0x406830:	pop	rbp
0x406831:	pop	r12
0x406833:	pop	r13
0x406835:	pop	r14
0x406837:	ret	
0x406838:	mov	edx, 1
0x40683d:	jmp	0x43844b
0x406842:	mov	edi, 0x4cc700
0x406847:	call	0x42c8eb
0x40684c:	mov	rcx, rdi
0x40684f:	mov	edx, 0x45b59f
0x406854:	mov	esi, 1
0x406859:	xor	eax, eax
0x40685b:	mov	rdi, qword ptr [rip + 0xdc83e]
0x406862:	call	0x403e90
0x406867:	jmp	0x438500
0x40686c:	mov	esi, 0x3d
0x406871:	mov	rdi, rbp
0x406874:	call	0x403a40
0x406879:	test	rax, rax
0x40687c:	je	0x406976
0x406882:	sub	rax, rbp
0x406885:	mov	rdi, rbp
0x406888:	mov	rsi, rax
0x40688b:	call	0x439da0
0x406890:	mov	rdi, rax
0x406893:	mov	rbx, rax
0x406896:	call	0x403800
0x40689b:	cmp	byte ptr [rip + 0xde0af], 0
0x4068a2:	mov	r12, rax
0x4068a5:	je	0x4068c2
0x4068a7:	mov	rdi, qword ptr [rip + 0xdc7f2]
0x4068ae:	mov	rcx, rax
0x4068b1:	mov	edx, 0x45b5bc
0x4068b6:	xor	eax, eax
0x4068b8:	mov	esi, 1
0x4068bd:	call	0x403e90
0x4068c2:	test	r12, r12
0x4068c5:	je	0x4068d2
0x4068c7:	mov	rdi, r12
0x4068ca:	call	0x42db40
0x4068cf:	mov	r12, rax
0x4068d2:	movq	xmm1, r12
0x4068d7:	movq	xmm0, rbx
0x4068dc:	mov	r12, qword ptr [rip + 0xde075]
0x4068e3:	punpcklqdq	xmm0, xmm1
0x4068e7:	movaps	xmmword ptr [rsp], xmm0
0x4068eb:	test	r12, r12
0x4068ee:	je	0x40698a
0x4068f4:	mov	r13d, dword ptr [r12]
0x4068f8:	mov	r14d, dword ptr [r12 + 4]
0x4068fd:	and	r13d, 0x7fffffff
0x406904:	cmp	r13d, r14d
0x406907:	jne	0x406955
0x406909:	cmp	byte ptr [r12 + 3], 0
0x40690f:	js	0x4069c9
0x406915:	mov	rdi, r12
0x406918:	xor	edx, edx
0x40691a:	mov	esi, 1
0x40691f:	call	0x436e30
0x406924:	mov	rdi, r12
0x406927:	mov	esi, eax
0x406929:	mov	r14, rsi
0x40692c:	shl	rsi, 4
0x406930:	add	rsi, 8
0x406934:	and	r14d, 0x7fffffff
0x40693b:	call	0x42db80
0x406940:	mov	qword ptr [rip + 0xde011], rax
0x406947:	mov	r12, qword ptr [rip + 0xde00a]
0x40694e:	mov	dword ptr [rax], r14d
0x406951:	mov	dword ptr [rax + 4], r13d
0x406955:	mov	eax, dword ptr [r12 + 4]
0x40695a:	movdqa	xmm3, xmmword ptr [rsp]
0x40695f:	lea	edi, [rax + 1]
0x406962:	shl	rax, 4
0x406966:	mov	dword ptr [r12 + 4], edi
0x40696b:	movups	xmmword ptr [r12 + rax + 8], xmm3
0x406971:	jmp	0x438516
0x406976:	mov	edx, 0x45b5b7
0x40697b:	mov	esi, 0x83
0x406980:	mov	edi, 0x45b1e2
0x406985:	call	0x415bba
0x40698a:	xor	edx, edx
0x40698c:	mov	esi, 1
0x406991:	xor	edi, edi
0x406993:	call	0x436e30
0x406998:	xor	edi, edi
0x40699a:	mov	esi, eax
0x40699c:	mov	r13, rsi
0x40699f:	shl	rsi, 4
0x4069a3:	add	rsi, 8
0x4069a7:	and	r13d, 0x7fffffff
0x4069ae:	call	0x42db80
0x4069b3:	mov	ecx, r13d
0x4069b6:	mov	qword ptr [rip + 0xddf9b], rax
0x4069bd:	mov	qword ptr [rax], rcx
0x4069c0:	mov	r12, qword ptr [rip + 0xddf91]
0x4069c7:	jmp	0x406955
0x4069c9:	xor	edx, edx
0x4069cb:	lea	esi, [r14 + 1]
0x4069cf:	xor	edi, edi
0x4069d1:	mov	qword ptr [rip + 0xddf7c], 0
0x4069dc:	call	0x436e30
0x4069e1:	xor	edi, edi
0x4069e3:	mov	esi, eax
0x4069e5:	mov	rbx, rsi
0x4069e8:	shl	rsi, 4
0x4069ec:	add	rsi, 8
0x4069f0:	and	ebx, 0x7fffffff
0x4069f6:	call	0x42db80
0x4069fb:	mov	esi, r14d
0x4069fe:	xor	edx, edx
0x406a00:	mov	qword ptr [rip + 0xddf51], rax
0x406a07:	shl	rsi, 4
0x406a0b:	mov	dword ptr [rax], ebx
0x406a0d:	cmp	rsi, rdx
0x406a10:	je	0x406a24
0x406a12:	movdqu	xmm2, xmmword ptr [r12 + rdx + 8]
0x406a19:	movups	xmmword ptr [rax + rdx + 8], xmm2
0x406a1e:	add	rdx, 0x10
0x406a22:	jmp	0x406a0d
0x406a24:	mov	dword ptr [rax + 4], r14d
0x406a28:	mov	r12, qword ptr [rip + 0xddf29]
0x406a2f:	jmp	0x406955
0x406a34:	endbr64	
0x406a38:	push	r13
0x406a3a:	push	r12
0x406a3c:	mov	r12, rdi
0x406a3f:	mov	rdi, rsi
0x406a42:	push	rbp
0x406a43:	mov	rbp, rsi
0x406a46:	push	rbx
0x406a47:	mov	rbx, rdx
0x406a4a:	push	rcx
0x406a4b:	call	0x4039e0
0x406a50:	mov	byte ptr [r12 + 0x10], 0
0x406a56:	mov	rdi, r12
0x406a59:	mov	qword ptr [r12 + 8], 0
0x406a62:	mov	r13, rax
0x406a65:	mov	rsi, qword ptr [rbx + 8]
0x406a69:	lea	rax, [r12 + 0x10]
0x406a6e:	mov	qword ptr [r12], rax
0x406a72:	add	rsi, r13
0x406a75:	call	0x4416a0
0x406a7a:	movabs	rdx, 0x3fffffffffffffff
0x406a84:	sub	rdx, qword ptr [r12 + 8]
0x406a89:	cmp	r13, rdx
0x406a8c:	jbe	0x406a98
0x406a8e:	mov	edi, 0x4cc6be
0x406a93:	call	0x42c9f3
0x406a98:	mov	rdx, r13
0x406a9b:	mov	rsi, rbp
0x406a9e:	mov	rdi, r12
0x406aa1:	call	0x442aa0
0x406aa6:	mov	rdx, qword ptr [rbx + 8]
0x406aaa:	mov	rsi, qword ptr [rbx]
0x406aad:	mov	rdi, r12
0x406ab0:	call	0x442aa0
0x406ab5:	pop	rdx
0x406ab6:	mov	rax, r12
0x406ab9:	pop	rbx
0x406aba:	pop	rbp
0x406abb:	pop	r12
0x406abd:	pop	r13
0x406abf:	ret	
0x406ac0:	mov	edx, 0x45b5d2
0x406ac5:	mov	esi, 0x4dd
0x406aca:	mov	edi, 0x45b343
0x406acf:	call	0x415bba
0x406ad4:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x406ad9:	movups	xmmword ptr [r12 + 0x10], xmm0
0x406adf:	jmp	0x43861a
0x406ae4:	mov	rdi, rbx
0x406ae7:	sub	rdi, 1
0x406aeb:	cmp	r15, rdi
0x406aee:	je	0x406b04
0x406af0:	cmp	byte ptr [rdi], 0x2f
0x406af3:	je	0x406ae7
0x406af5:	cmp	byte ptr [rdi - 1], 0x2f
0x406af9:	je	0x406b5b
0x406afb:	sub	rdi, 1
0x406aff:	cmp	r15, rdi
0x406b02:	jne	0x406af5
0x406b04:	movzx	edx, byte ptr [rdi]
0x406b07:	sub	edx, 0x2e
0x406b0a:	cmp	dl, 1
0x406b0d:	jbe	0x406b53
0x406b0f:	add	rbx, 3
0x406b13:	movzx	ecx, byte ptr [rbx]
0x406b16:	mov	r8, rbx
0x406b19:	lea	rbx, [rbx + 1]
0x406b1d:	cmp	cl, 0x2f
0x406b20:	je	0x406b13
0x406b22:	xor	r9d, r9d
0x406b25:	movzx	r10d, byte ptr [r8 + r9]
0x406b2a:	mov	byte ptr [rdi + r9], r10b
0x406b2e:	add	r9, 1
0x406b32:	test	r10b, r10b
0x406b35:	jne	0x406b25
0x406b37:	jmp	0x4386f8
0x406b3c:	xor	edx, edx
0x406b3e:	mov	rsi, rbx
0x406b41:	mov	rdi, r14
0x406b44:	xor	eax, eax
0x406b46:	call	0x42d870
0x406b4b:	mov	r15, rax
0x406b4e:	jmp	0x4387cf
0x406b53:	mov	byte ptr [rbx], 0x2e
0x406b56:	jmp	0x438742
0x406b5b:	cmp	byte ptr [rdi], 0x2e
0x406b5e:	je	0x406ae7
0x406b60:	jmp	0x406b04
0x406b62:	endbr64	
0x406b66:	push	rbp
0x406b67:	mov	rbp, rdi
0x406b6a:	push	rbx
0x406b6b:	mov	rbx, rsi
0x406b6e:	push	rcx
0x406b6f:	mov	rsi, qword ptr [rsi]
0x406b72:	lea	rax, [rbx + 0x10]
0x406b76:	mov	rdi, qword ptr [rdi]
0x406b79:	cmp	rsi, rax
0x406b7c:	jne	0x406ba3
0x406b7e:	cmp	rbp, rbx
0x406b81:	je	0x406bd9
0x406b83:	mov	rdx, qword ptr [rbx + 8]
0x406b87:	test	rdx, rdx
0x406b8a:	je	0x406b91
0x406b8c:	call	0x440f00
0x406b91:	mov	rdi, qword ptr [rbx + 8]
0x406b95:	mov	rdx, qword ptr [rbp]
0x406b99:	mov	qword ptr [rbp + 8], rdi
0x406b9d:	mov	byte ptr [rdx + rdi], 0
0x406ba1:	jmp	0x406bd9
0x406ba3:	lea	rcx, [rbp + 0x10]
0x406ba7:	cmp	rdi, rcx
0x406baa:	je	0x406bb2
0x406bac:	mov	rdx, qword ptr [rbp + 0x10]
0x406bb0:	jmp	0x406bb4
0x406bb2:	xor	edi, edi
0x406bb4:	mov	qword ptr [rbp], rsi
0x406bb8:	mov	rsi, qword ptr [rbx + 8]
0x406bbc:	mov	qword ptr [rbp + 8], rsi
0x406bc0:	mov	r8, qword ptr [rbx + 0x10]
0x406bc4:	mov	qword ptr [rbp + 0x10], r8
0x406bc8:	test	rdi, rdi
0x406bcb:	je	0x406bd6
0x406bcd:	mov	qword ptr [rbx], rdi
0x406bd0:	mov	qword ptr [rbx + 0x10], rdx
0x406bd4:	jmp	0x406bd9
0x406bd6:	mov	qword ptr [rbx], rax
0x406bd9:	mov	r9, qword ptr [rbx]
0x406bdc:	mov	qword ptr [rbx + 8], 0
0x406be4:	mov	byte ptr [r9], 0
0x406be8:	pop	rax
0x406be9:	pop	rbx
0x406bea:	pop	rbp
0x406beb:	ret	
0x406bec:	call	0x403800
0x406bf1:	mov	rbx, rax
0x406bf4:	test	rax, rax
0x406bf7:	jne	0x4388eb
0x406bfd:	mov	ebx, 0x45b5e4
0x406c02:	jmp	0x4388eb
0x406c07:	mov	rdi, r15
0x406c0a:	call	0x403830
0x406c0f:	jmp	0x4388eb
0x406c14:	cmp	qword ptr [r12 + 0x48], 0
0x406c1a:	je	0x4389a5
0x406c20:	pop	r9
0x406c22:	mov	rcx, r13
0x406c25:	pop	rbx
0x406c26:	mov	edx, 0x4651c8
0x406c2b:	pop	rbp
0x406c2c:	xor	esi, esi
0x406c2e:	pop	r12
0x406c30:	xor	edi, edi
0x406c32:	xor	eax, eax
0x406c34:	pop	r13
0x406c36:	jmp	0x412cf4
0x406c3b:	mov	rdx, r13
0x406c3e:	pop	rcx
0x406c3f:	mov	esi, 0x4651a0
0x406c44:	pop	rbx
0x406c45:	xor	edi, edi
0x406c47:	pop	rbp
0x406c48:	xor	eax, eax
0x406c4a:	pop	r12
0x406c4c:	pop	r13
0x406c4e:	jmp	0x43fe20
0x406c53:	mov	rcx, r13
0x406c56:	xor	esi, esi
0x406c58:	xor	edi, edi
0x406c5a:	xor	eax, eax
0x406c5c:	call	0x412cf4
0x406c61:	jmp	0x438946
0x406c66:	mov	rdx, qword ptr [r12 + 0x10]
0x406c6b:	jmp	0x406c3e
0x406c6d:	mov	edx, 0x45b5ef
0x406c72:	mov	esi, 0x597
0x406c77:	mov	edi, 0x45b343
0x406c7c:	call	0x415bba
0x406c81:	mov	qword ptr [r10], r11
0x406c84:	test	r12, r12
0x406c87:	je	0x438adc
0x406c8d:	mov	qword ptr [r12], 1
0x406c95:	jmp	0x438adc
0x406c9a:	imul	rcx, r14, 0x60
0x406c9e:	test	byte ptr [rcx + 0x48bae1], 4
0x406ca5:	je	0x406cbc
0x406ca7:	mov	qword ptr [r10], r11
0x406caa:	test	r12, r12
0x406cad:	je	0x438adc
0x406cb3:	mov	qword ptr [r12], r11
0x406cb7:	jmp	0x438adc
0x406cbc:	mov	dword ptr [r10], r11d
0x406cbf:	test	r12, r12
0x406cc2:	je	0x438adc
0x406cc8:	mov	dword ptr [r12], r11d
0x406ccc:	jmp	0x438adc
0x406cd1:	test	r11, r11
0x406cd4:	je	0x406d8f
0x406cda:	mov	qword ptr [r10], rdx
0x406cdd:	test	r12, r12
0x406ce0:	je	0x438adc
0x406ce6:	mov	qword ptr [r12], 1
0x406cee:	jmp	0x438adc
0x406cf3:	mov	edi, dword ptr [rcx]
0x406cf5:	mov	esi, dword ptr [rcx + 4]
0x406cf8:	and	edi, 0x7fffffff
0x406cfe:	mov	dword ptr [rsp + 0x18], esi
0x406d02:	mov	dword ptr [rsp + 0x20], edi
0x406d06:	cmp	edi, esi
0x406d08:	jne	0x438e56
0x406d0e:	cmp	byte ptr [rcx + 3], 0
0x406d12:	js	0x406e2b
0x406d18:	mov	rdi, rcx
0x406d1b:	xor	edx, edx
0x406d1d:	mov	esi, 1
0x406d22:	mov	dword ptr [rsp + 0x48], r9d
0x406d27:	mov	dword ptr [rsp + 0x44], r8d
0x406d2c:	mov	qword ptr [rsp + 0x38], r10
0x406d31:	mov	qword ptr [rsp + 0x30], r11
0x406d36:	mov	qword ptr [rsp + 0x28], rcx
0x406d3b:	call	0x436e30
0x406d40:	mov	rdi, qword ptr [rsp + 0x28]
0x406d45:	mov	eax, eax
0x406d47:	imul	rsi, rax, 0x18
0x406d4b:	mov	dword ptr [rsp + 0x18], eax
0x406d4f:	add	rsi, 8
0x406d53:	call	0x42db80
0x406d58:	mov	edx, dword ptr [rsp + 0x18]
0x406d5c:	mov	r9, qword ptr [rsp + 0x10]
0x406d61:	mov	ecx, dword ptr [rsp + 0x20]
0x406d65:	mov	r11, qword ptr [rsp + 0x30]
0x406d6a:	and	edx, 0x7fffffff
0x406d70:	mov	qword ptr [r9], rax
0x406d73:	mov	r10, qword ptr [rsp + 0x38]
0x406d78:	mov	dword ptr [rax + 4], ecx
0x406d7b:	mov	r8d, dword ptr [rsp + 0x44]
0x406d80:	mov	rcx, qword ptr [r9]
0x406d83:	mov	r9d, dword ptr [rsp + 0x48]
0x406d88:	mov	dword ptr [rax], edx
0x406d8a:	jmp	0x438e56
0x406d8f:	test	rdx, rdx
0x406d92:	sete	sil
0x406d96:	movzx	edx, sil
0x406d9a:	jmp	0x406cda
0x406d9f:	mov	rdx, qword ptr [rdi + 0x48baa0]
0x406da6:	mov	ecx, 0x7fffffff
0x406dab:	mov	edi, r9d
0x406dae:	mov	esi, 0x4651f0
0x406db3:	xor	eax, eax
0x406db5:	mov	dword ptr [rsp + 0x10], r8d
0x406dba:	mov	dword ptr [rsp + 8], r9d
0x406dbf:	call	0x43fe20
0x406dc4:	mov	r9d, dword ptr [rsp + 8]
0x406dc9:	mov	r8d, dword ptr [rsp + 0x10]
0x406dce:	jmp	0x438adc
0x406dd3:	imul	rax, r14, 0x60
0x406dd7:	movzx	r14d, byte ptr [rax + 0x48bae1]
0x406ddf:	add	rax, 0x48baa0
0x406de5:	mov	rdx, qword ptr [rax + 0x50]
0x406de9:	and	r14d, 4
0x406ded:	test	r11, r11
0x406df0:	setne	sil
0x406df4:	cmp	edi, 3
0x406df7:	sete	dil
0x406dfb:	cmp	sil, dil
0x406dfe:	je	0x406ecd
0x406e04:	test	r14b, r14b
0x406e07:	je	0x406efe
0x406e0d:	mov	rcx, rdx
0x406e10:	not	rcx
0x406e13:	and	rcx, qword ptr [r10]
0x406e16:	mov	qword ptr [r10], rcx
0x406e19:	test	r12, r12
0x406e1c:	je	0x406ef9
0x406e22:	or	qword ptr [r12], rdx
0x406e26:	jmp	0x438adc
0x406e2b:	mov	qword ptr [rsp + 0x28], r11
0x406e30:	mov	r11, qword ptr [rsp + 0x10]
0x406e35:	xor	edx, edx
0x406e37:	lea	esi, [rsi + 1]
0x406e3a:	xor	edi, edi
0x406e3c:	mov	qword ptr [rsp + 0x48], rcx
0x406e41:	mov	qword ptr [r11], 0
0x406e48:	mov	dword ptr [rsp + 0x44], r9d
0x406e4d:	mov	dword ptr [rsp + 0x38], r8d
0x406e52:	mov	qword ptr [rsp + 0x30], r10
0x406e57:	call	0x436e30
0x406e5c:	xor	edi, edi
0x406e5e:	mov	r10d, eax
0x406e61:	imul	rsi, r10, 0x18
0x406e65:	mov	dword ptr [rsp + 0x20], r10d
0x406e6a:	add	rsi, 8
0x406e6e:	call	0x42db80
0x406e73:	mov	r9d, dword ptr [rsp + 0x20]
0x406e78:	mov	r8, qword ptr [rsp + 0x10]
0x406e7d:	mov	edx, dword ptr [rsp + 0x18]
0x406e81:	mov	r11, qword ptr [rsp + 0x28]
0x406e86:	and	r9d, 0x7fffffff
0x406e8d:	mov	qword ptr [r8], rax
0x406e90:	mov	r10, qword ptr [rsp + 0x30]
0x406e95:	mov	dword ptr [rax], r9d
0x406e98:	mov	r8d, dword ptr [rsp + 0x38]
0x406e9d:	imul	rsi, rdx, 0x18
0x406ea1:	xor	edx, edx
0x406ea3:	mov	r9d, dword ptr [rsp + 0x44]
0x406ea8:	mov	rcx, qword ptr [rsp + 0x48]
0x406ead:	cmp	rsi, rdx
0x406eb0:	je	0x406f09
0x406eb2:	movdqu	xmm0, xmmword ptr [rcx + rdx + 8]
0x406eb8:	movups	xmmword ptr [rax + rdx + 8], xmm0
0x406ebd:	mov	rdi, qword ptr [rcx + rdx + 0x18]
0x406ec2:	mov	qword ptr [rax + rdx + 0x18], rdi
0x406ec7:	add	rdx, 0x18
0x406ecb:	jmp	0x406ead
0x406ecd:	test	r14b, r14b
0x406ed0:	je	0x406edd
0x406ed2:	mov	rcx, qword ptr [r10]
0x406ed5:	or	rcx, rdx
0x406ed8:	jmp	0x406e16
0x406edd:	mov	r11d, dword ptr [r10]
0x406ee0:	or	r11d, edx
0x406ee3:	mov	dword ptr [r10], r11d
0x406ee6:	test	r12, r12
0x406ee9:	je	0x406ef4
0x406eeb:	or	dword ptr [r12], edx
0x406eef:	jmp	0x438adc
0x406ef4:	jmp	0x438adc
0x406ef9:	jmp	0x438adc
0x406efe:	mov	r11d, edx
0x406f01:	not	r11d
0x406f04:	and	r11d, dword ptr [r10]
0x406f07:	jmp	0x406ee3
0x406f09:	mov	ecx, dword ptr [rsp + 0x18]
0x406f0d:	mov	dword ptr [rax + 4], ecx
0x406f10:	mov	rax, qword ptr [rsp + 0x10]
0x406f15:	mov	rcx, qword ptr [rax]
0x406f18:	jmp	0x438e56
0x406f1d:	mov	edx, 0x45b61c
0x406f22:	mov	esi, 0x10d6
0x406f27:	mov	edi, 0x45b1e2
0x406f2c:	call	0x415bba
0x406f31:	mov	esi, 0x45b6ac
0x406f36:	mov	rdi, r12
0x406f39:	call	0x403be0
0x406f3e:	test	eax, eax
0x406f40:	jne	0x406f7c
0x406f42:	mov	esi, 1
0x406f47:	mov	dword ptr [rip + 0xdc34f], esi
0x406f4d:	xor	ecx, ecx
0x406f4f:	mov	byte ptr [rip + 0xdf14a], 1
0x406f56:	jmp	0x42dec4
0x406f5b:	cmp	dword ptr [rip + 0xdc33a], 0
0x406f62:	mov	ecx, 1
0x406f67:	jne	0x42dec4
0x406f6d:	mov	dword ptr [rip + 0xdc325], 2
0x406f77:	jmp	0x42dec4
0x406f7c:	mov	esi, 0x45b6b0
0x406f81:	mov	rdi, r12
0x406f84:	call	0x403be0
0x406f89:	test	eax, eax
0x406f8b:	jne	0x406f94
0x406f8d:	mov	esi, 3
0x406f92:	jmp	0x406f47
0x406f94:	mov	esi, 0x45d806
0x406f99:	mov	rdi, r12
0x406f9c:	call	0x403be0
0x406fa1:	mov	esi, 3
0x406fa6:	test	eax, eax
0x406fa8:	je	0x406f47
0x406faa:	mov	rdx, qword ptr [rbp + 0x18]
0x406fae:	mov	esi, 0x465218
0x406fb3:	xor	edi, edi
0x406fb5:	xor	eax, eax
0x406fb7:	call	0x43f5d0
0x406fbc:	mov	edx, 0x45b61c
0x406fc1:	mov	esi, 0x10d8
0x406fc6:	mov	edi, 0x45b1e2
0x406fcb:	call	0x415bba
0x406fd0:	mov	edx, 0x45b61c
0x406fd5:	mov	esi, 0x10d7
0x406fda:	mov	edi, 0x45b1e2
0x406fdf:	call	0x415bba
0x406fe4:	mov	rdi, qword ptr [rip + 0xdc22d]
0x406feb:	test	rdi, rdi
0x406fee:	je	0x406ff5
0x406ff0:	call	0x4039c0
0x406ff5:	mov	rdi, qword ptr [rsp + 0x18]
0x406ffa:	mov	esi, 0x45b67c
0x406fff:	call	0x403dd0
0x407004:	mov	qword ptr [rip + 0xdc20d], rax
0x40700b:	jmp	0x42dedf
0x407010:	mov	edi, 0x10
0x407015:	call	0x42db10
0x40701a:	mov	rbx, qword ptr [rip + 0xdf077]
0x407021:	mov	qword ptr [rax], 0
0x407028:	mov	qword ptr [rax + 8], r12
0x40702c:	test	rbx, rbx
0x40702f:	je	0x407045
0x407031:	mov	qword ptr [rbx], rax
0x407034:	mov	qword ptr [rip + 0xdf05d], rax
0x40703b:	mov	ecx, 1
0x407040:	jmp	0x42dec4
0x407045:	mov	qword ptr [rip + 0xdf084], rax
0x40704c:	jmp	0x407034
0x40704e:	test	edx, edx
0x407050:	jne	0x407125
0x407056:	mov	qword ptr [rsp + 0x18], 0x4c4893
0x40705f:	cmp	qword ptr [rbp + 0x40], 1
0x407064:	jne	0x407470
0x40706a:	mov	edi, 0x45b579
0x40706f:	or	r11d, 0xffffffff
0x407073:	xor	r12d, r12d
0x407076:	mov	r8d, 1
0x40707c:	xor	ecx, ecx
0x40707e:	xor	edx, edx
0x407080:	xor	esi, esi
0x407082:	mov	dword ptr [rip + 0xdefb7], r11d
0x407089:	mov	qword ptr [rip + 0xdc1a0], r12
0x407090:	call	0x438ef0
0x407095:	call	0x403890
0x40709a:	xor	edi, edi
0x40709c:	mov	dword ptr [rax], 0
0x4070a2:	mov	rbx, rax
0x4070a5:	call	0x403c80
0x4070aa:	xor	r9d, r9d
0x4070ad:	test	rax, rax
0x4070b0:	js	0x4070b9
0x4070b2:	cmp	dword ptr [rbx], 0
0x4070b5:	cmove	r9, rax
0x4070b9:	lea	rdi, [rsp + 0x20]
0x4070be:	mov	r8d, 0x45b68f
0x4070c4:	mov	ecx, 0x15
0x4070c9:	mov	edx, 1
0x4070ce:	mov	esi, 0x15
0x4070d3:	xor	eax, eax
0x4070d5:	call	0x403820
0x4070da:	xor	edx, edx
0x4070dc:	lea	rsi, [rsp + 0x20]
0x4070e1:	mov	edi, 0x45b694
0x4070e6:	call	0x403970
0x4070eb:	jmp	0x42dedf
0x4070f0:	cmp	qword ptr [rbp + 0x40], 1
0x4070f5:	mov	rdi, qword ptr [rbp + 0x20]
0x4070f9:	jne	0x407470
0x4070ff:	test	r12, r12
0x407102:	je	0x407484
0x407108:	cmp	byte ptr [r12], 0
0x40710d:	mov	r11d, 1
0x407113:	jne	0x407076
0x407119:	or	r11d, 0xffffffff
0x40711d:	xor	r12d, r12d
0x407120:	jmp	0x407076
0x407125:	sub	edx, 1
0x407128:	jne	0x40714e
0x40712a:	mov	qword ptr [rsp + 0x18], 0x45b613
0x407133:	cmp	qword ptr [rbp + 0x40], 1
0x407138:	jne	0x407470
0x40713e:	mov	edi, 0x45b603
0x407143:	mov	r12d, 0x45b613
0x407149:	jmp	0x407076
0x40714e:	mov	edx, 0x45b61c
0x407153:	mov	esi, 0x1150
0x407158:	mov	edi, 0x45b1e2
0x40715d:	call	0x415bba
0x407162:	mov	qword ptr [rip + 0xdf043], 0x45b689
0x40716d:	xor	ecx, ecx
0x40716f:	jmp	0x42dec4
0x407174:	mov	qword ptr [rip + 0xdec91], 0x4c4893
0x40717f:	xor	ecx, ecx
0x407181:	jmp	0x42dec4
0x407186:	mov	rdx, qword ptr [rsp + 0x18]
0x40718b:	xor	ebx, ebx
0x40718d:	xor	ecx, ecx
0x40718f:	movzx	esi, byte ptr [rdx + rbx]
0x407193:	mov	eax, ebx
0x407195:	lea	rdi, [rdx + rcx]
0x407199:	test	sil, sil
0x40719c:	je	0x407255
0x4071a2:	lea	ebp, [rbx + 1]
0x4071a5:	cmp	sil, 0x2c
0x4071a9:	je	0x407331
0x4071af:	add	rbx, 1
0x4071b3:	jmp	0x40718f
0x4071b5:	mov	esi, 0xd
0x4071ba:	mov	edi, 0x45b667
0x4071bf:	mov	dword ptr [rip + 0xdc05f], 1
0x4071c9:	call	0x439060
0x4071ce:	mov	esi, 0xd
0x4071d3:	mov	edi, 0x45b667
0x4071d8:	call	0x439a20
0x4071dd:	xor	ecx, ecx
0x4071df:	jmp	0x42dec4
0x4071e4:	add	dword ptr [rip + 0xdc029], 1
0x4071eb:	mov	dword ptr [rip + 0xdedeb], 1
0x4071f5:	jmp	0x42dedf
0x4071fa:	mov	qword ptr [rip + 0xdefe7], r12
0x407201:	mov	ecx, 1
0x407206:	jmp	0x42dec4
0x40720b:	mov	esi, 6
0x407210:	mov	edi, 0x45b660
0x407215:	mov	byte ptr [rsp + 0xf], cl
0x407219:	mov	dword ptr [rip + 0xdee51], 1
0x407223:	call	0x439060
0x407228:	mov	esi, 6
0x40722d:	mov	edi, 0x45b660
0x407232:	call	0x439a20
0x407237:	movzx	ecx, byte ptr [rsp + 0xf]
0x40723c:	jmp	0x42dec4
0x407241:	mov	edx, 0x45b61c
0x407246:	mov	esi, 0x10d5
0x40724b:	mov	edi, 0x45b1e2
0x407250:	call	0x415bba
0x407255:	sub	eax, r8d
0x407258:	mov	esi, eax
0x40725a:	call	0x415100
0x40725f:	jmp	0x42dedf
0x407264:	mov	edx, 0x45b61c
0x407269:	mov	esi, 0x10d4
0x40726e:	mov	edi, 0x45b1e2
0x407273:	call	0x415bba
0x407278:	mov	edi, 0x4636d9
0x40727d:	call	0x403910
0x407282:	xor	edi, edi
0x407284:	call	0x403e70
0x407289:	xor	edx, edx
0x40728b:	mov	rsi, r12
0x40728e:	mov	edi, 0x45b6a9
0x407293:	xor	eax, eax
0x407295:	call	0x42d870
0x40729a:	mov	r8d, 1
0x4072a0:	xor	ecx, ecx
0x4072a2:	xor	edx, edx
0x4072a4:	mov	rdi, rax
0x4072a7:	xor	esi, esi
0x4072a9:	call	0x438ef0
0x4072ae:	jmp	0x42dedf
0x4072b3:	mov	edi, 0x45b470
0x4072b8:	call	0x403910
0x4072bd:	xor	edi, edi
0x4072bf:	call	0x403e70
0x4072c4:	mov	edi, 0x45b64f
0x4072c9:	call	0x403910
0x4072ce:	xor	edi, edi
0x4072d0:	call	0x403e70
0x4072d5:	mov	qword ptr [rip + 0xdd70c], r12
0x4072dc:	mov	dword ptr [rip + 0xdbf3a], 1
0x4072e6:	jmp	0x42dedf
0x4072eb:	call	0x41315b
0x4072f0:	mov	r12, qword ptr [rip + 0xdbfa9]
0x4072f7:	test	r12, r12
0x4072fa:	je	0x40734b
0x4072fc:	mov	rdi, qword ptr [r12 + 0x10]
0x407301:	mov	rdx, qword ptr [r12]
0x407305:	mov	esi, 0x45b631
0x40730a:	xor	eax, eax
0x40730c:	mov	rcx, qword ptr [rdi]
0x40730f:	mov	edi, 1
0x407314:	call	0x403d70
0x407319:	mov	r12, qword ptr [r12 + 0x18]
0x40731e:	jmp	0x4072f7
0x407320:	mov	dword ptr [rip + 0xdbefe], 2
0x40732a:	xor	ecx, ecx
0x40732c:	jmp	0x42dec4
0x407331:	sub	eax, r8d
0x407334:	mov	esi, eax
0x407336:	call	0x415100
0x40733b:	movsxd	rcx, ebp
0x40733e:	mov	rdx, qword ptr [rsp + 0x18]
0x407343:	mov	r8, rcx
0x407346:	jmp	0x4071af
0x40734b:	mov	rdx, qword ptr [rip + 0xdb0e6]
0x407352:	test	rdx, rdx
0x407355:	je	0x407368
0x407357:	mov	esi, 0x45b63b
0x40735c:	mov	edi, 1
0x407361:	xor	eax, eax
0x407363:	call	0x403d70
0x407368:	xor	edi, edi
0x40736a:	call	0x403e70
0x40736f:	lea	ebp, [r12 + 1]
0x407374:	cmp	bl, 0x2c
0x407377:	je	0x407392
0x407379:	add	r12, 1
0x40737d:	jmp	0x42e25b
0x407382:	mov	esi, r12d
0x407385:	sub	esi, r8d
0x407388:	call	0x439060
0x40738d:	jmp	0x42dedf
0x407392:	mov	esi, r11d
0x407395:	sub	esi, r8d
0x407398:	call	0x439060
0x40739d:	movsxd	r10, ebp
0x4073a0:	mov	r9, qword ptr [rsp + 0x18]
0x4073a5:	mov	r8, r10
0x4073a8:	jmp	0x407379
0x4073aa:	mov	qword ptr [rip + 0xdebd3], 0x45b675
0x4073b5:	jmp	0x42dedf
0x4073ba:	mov	rdi, qword ptr [rip + 0xdbe97]
0x4073c1:	call	0x403830
0x4073c6:	mov	rdi, qword ptr [rsp + 0x18]
0x4073cb:	call	0x42db40
0x4073d0:	xor	ecx, ecx
0x4073d2:	mov	qword ptr [rip + 0xdbe7f], rax
0x4073d9:	jmp	0x42dec4
0x4073de:	mov	rdi, r12
0x4073e1:	call	0x4039e0
0x4073e6:	mov	rdi, r12
0x4073e9:	mov	esi, eax
0x4073eb:	call	0x415100
0x4073f0:	jmp	0x42dedf
0x4073f5:	mov	esi, 0x4cd84f
0x4073fa:	mov	rdi, r12
0x4073fd:	call	0x439090
0x407402:	jmp	0x42dedf
0x407407:	mov	rdi, r12
0x40740a:	call	0x4039e0
0x40740f:	mov	rdi, r12
0x407412:	mov	esi, eax
0x407414:	call	0x439060
0x407419:	jmp	0x42dedf
0x40741e:	mov	rdi, qword ptr [rip + 0xdbc9b]
0x407425:	mov	esi, edx
0x407427:	mov	byte ptr [rsp + 0xf], cl
0x40742b:	call	0x436cf0
0x407430:	movzx	ecx, byte ptr [rsp + 0xf]
0x407435:	jmp	0x42dec4
0x40743a:	mov	rdi, qword ptr [rip + 0xdbc7f]
0x407441:	mov	esi, edx
0x407443:	mov	byte ptr [rsp + 0xf], cl
0x407447:	call	0x436c80
0x40744c:	movzx	ecx, byte ptr [rsp + 0xf]
0x407451:	jmp	0x42dec4
0x407456:	mov	esi, edx
0x407458:	mov	edi, 0x4e30c0
0x40745d:	mov	byte ptr [rsp + 0xf], cl
0x407461:	call	0x41b27e
0x407466:	movzx	ecx, byte ptr [rsp + 0xf]
0x40746b:	jmp	0x42dec4
0x407470:	mov	edx, 0x45b61c
0x407475:	mov	esi, 0x1157
0x40747a:	mov	edi, 0x45b1e2
0x40747f:	call	0x415bba
0x407484:	mov	edx, 0x45b61c
0x407489:	mov	esi, 0x1158
0x40748e:	mov	edi, 0x45b1e2
0x407493:	call	0x415bba
0x407498:	mov	qword ptr [rip + 0xded0d], 0x45b67e
0x4074a3:	xor	ecx, ecx
0x4074a5:	jmp	0x42dec4
0x4074aa:	mov	qword ptr [rip + 0xdecfb], 0x45b683
0x4074b5:	xor	ecx, ecx
0x4074b7:	jmp	0x42dec4
0x4074bc:	mov	rdi, r12
0x4074bf:	mov	byte ptr [rsp + 0xf], cl
0x4074c3:	call	0x439130
0x4074c8:	movzx	ecx, byte ptr [rsp + 0xf]
0x4074cd:	jmp	0x42dec4
0x4074d2:	mov	dword ptr [rip + 0xdebec], 1
0x4074dc:	jmp	0x42dec4
0x4074e1:	xor	eax, eax
0x4074e3:	mov	esi, 0x465248
0x4074e8:	call	0x43fe20
0x4074ed:	mov	eax, 1
0x4074f2:	jmp	0x43904b
0x4074f7:	movzx	r12d, word ptr [rsi + 0x44]
0x4074fc:	mov	dword ptr [rsp + 0x10], r9d
0x407501:	add	dword ptr [rip + 0xdbce8], 1
0x407508:	imul	rax, r12, 0x30
0x40750c:	mov	rsi, qword ptr [rax + 0x48ad68]
0x407513:	test	rsi, rsi
0x407516:	je	0x4075ad
0x40751c:	mov	rdx, rcx
0x40751f:	xor	eax, eax
0x407521:	mov	qword ptr [rsp + 8], rcx
0x407526:	call	0x43fe20
0x40752b:	mov	rdi, qword ptr [rsp + 8]
0x407530:	mov	r9d, dword ptr [rsp + 0x10]
0x407535:	imul	rdx, r12, 0x30
0x407539:	and	r9d, 0x80000
0x407540:	xor	r14d, r14d
0x407543:	mov	qword ptr [rsp + 0x28], 0
0x40754c:	mov	r13d, r9d
0x40754f:	mov	r15, qword ptr [rdx + 0x48ad70]
0x407556:	mov	esi, r14d
0x407559:	shl	rsi, 4
0x40755d:	add	rsi, r15
0x407560:	cmp	qword ptr [rsi], 0
0x407564:	je	0x407632
0x40756a:	test	r13d, r13d
0x40756d:	je	0x407667
0x407573:	mov	qword ptr [rsp + 8], rdi
0x407578:	lea	rdi, [rsp + 0x28]
0x40757d:	call	0x43b210
0x407582:	mov	rdi, qword ptr [rsp + 8]
0x407587:	add	r14d, 1
0x40758b:	jmp	0x407556
0x40758d:	mov	ecx, dword ptr [rsi + 0x58]
0x407590:	mov	r8d, dword ptr [rsi + 0x5c]
0x407594:	xor	eax, eax
0x407596:	mov	rdx, qword ptr [rsi]
0x407599:	mov	esi, 0x465318
0x40759e:	call	0x43fe20
0x4075a3:	mov	eax, 1
0x4075a8:	jmp	0x43904b
0x4075ad:	mov	esi, 0x465348
0x4075b2:	xor	eax, eax
0x4075b4:	mov	qword ptr [rsp + 8], rcx
0x4075b9:	call	0x43fe20
0x4075be:	mov	r9d, dword ptr [rsp + 0x10]
0x4075c3:	mov	rdi, qword ptr [rsp + 8]
0x4075c8:	jmp	0x407535
0x4075cd:	mov	rdx, qword ptr [rsi]
0x4075d0:	test	byte ptr [rsi + 0x41], 0x10
0x4075d4:	je	0x40761c
0x4075d6:	xor	eax, eax
0x4075d8:	mov	esi, 0x465288
0x4075dd:	call	0x43fe20
0x4075e2:	mov	eax, 1
0x4075e7:	jmp	0x43904b
0x4075ec:	mov	rsi, qword ptr [rsi + 0x10]
0x4075f0:	test	rsi, rsi
0x4075f3:	je	0x407606
0x4075f5:	xor	eax, eax
0x4075f7:	call	0x43fe20
0x4075fc:	mov	eax, 1
0x407601:	jmp	0x43904b
0x407606:	xor	eax, eax
0x407608:	mov	esi, 0x45b6b7
0x40760d:	call	0x43fe20
0x407612:	mov	eax, 1
0x407617:	jmp	0x43904b
0x40761c:	xor	eax, eax
0x40761e:	mov	esi, 0x4652e0
0x407623:	call	0x43fe20
0x407628:	mov	eax, 1
0x40762d:	jmp	0x43904b
0x407632:	mov	r13, qword ptr [rsp + 0x28]
0x407637:	xor	r15d, r15d
0x40763a:	xor	r12d, r12d
0x40763d:	test	r13, r13
0x407640:	je	0x407676
0x407642:	cmp	dword ptr [r13 + 4], r15d
0x407646:	jbe	0x407676
0x407648:	mov	qword ptr [rsp + 8], rdi
0x40764d:	mov	rdi, qword ptr [r13 + r15*8 + 8]
0x407652:	add	r15, 1
0x407656:	call	0x4039e0
0x40765b:	mov	rdi, qword ptr [rsp + 8]
0x407660:	lea	r12, [r12 + rax + 1]
0x407665:	jmp	0x40763d
0x407667:	test	byte ptr [rsi + 0xc], 2
0x40766b:	jne	0x407587
0x407671:	jmp	0x407573
0x407676:	mov	qword ptr [rsp + 8], rdi
0x40767b:	mov	rdi, r12
0x40767e:	call	0x42db10
0x407683:	mov	rcx, qword ptr [rsp + 8]
0x407688:	xor	r8d, r8d
0x40768b:	mov	r12, rax
0x40768e:	mov	r14, rax
0x407691:	test	r13, r13
0x407694:	je	0x4076e5
0x407696:	cmp	dword ptr [r13 + 4], r8d
0x40769a:	jbe	0x4076e5
0x40769c:	mov	rsi, qword ptr [r13 + r8*8 + 8]
0x4076a1:	mov	qword ptr [rsp + 0x18], rcx
0x4076a6:	mov	qword ptr [rsp + 0x10], r8
0x4076ab:	mov	rdi, rsi
0x4076ae:	mov	qword ptr [rsp + 8], rsi
0x4076b3:	call	0x4039e0
0x4076b8:	mov	rsi, qword ptr [rsp + 8]
0x4076bd:	mov	rdi, r14
0x4076c0:	mov	rdx, rax
0x4076c3:	mov	r15, rax
0x4076c6:	call	0x403c60
0x4076cb:	mov	r8, qword ptr [rsp + 0x10]
0x4076d0:	mov	byte ptr [r14 + r15], 0x20
0x4076d5:	lea	r14, [r14 + r15 + 1]
0x4076da:	mov	rcx, qword ptr [rsp + 0x18]
0x4076df:	add	r8, 1
0x4076e3:	jmp	0x407691
0x4076e5:	mov	byte ptr [r14 - 1], 0
0x4076ea:	mov	rdi, rcx
0x4076ed:	lea	rsi, [rsp + 0x28]
0x4076f2:	call	0x43c950
0x4076f7:	mov	rdx, qword ptr [rbx]
0x4076fa:	mov	rcx, r12
0x4076fd:	mov	r8, rax
0x407700:	test	rax, rax
0x407703:	je	0x407715
0x407705:	mov	esi, 0x465370
0x40770a:	mov	edi, ebp
0x40770c:	xor	eax, eax
0x40770e:	call	0x43ff00
0x407713:	jmp	0x407723
0x407715:	mov	esi, 0x4653a8
0x40771a:	mov	edi, ebp
0x40771c:	xor	eax, eax
0x40771e:	call	0x43ff00
0x407723:	mov	rdi, r12
0x407726:	call	0x403830
0x40772b:	lea	rdi, [rsp + 0x28]
0x407730:	call	0x43b630
0x407735:	call	0x43f590
0x40773a:	mov	eax, 1
0x40773f:	jmp	0x43904b
0x407744:	mov	rsi, qword ptr [rdi + 0x18]
0x407748:	xor	eax, eax
0x40774a:	mov	edi, 0x4651a0
0x40774f:	jmp	0x43dd90
0x407754:	endbr64	
0x407758:	push	rcx
0x407759:	mov	rax, qword ptr [rdi + 0x10]
0x40775d:	cmp	byte ptr [rax + 1], 0x57
0x407761:	jne	0x40779c
0x407763:	cmp	byte ptr [rax + 2], 0x6e
0x407767:	jne	0x40779c
0x407769:	cmp	byte ptr [rax + 3], 0x6f
0x40776d:	jne	0x40779c
0x40776f:	cmp	byte ptr [rax + 4], 0x2d
0x407773:	jne	0x40779c
0x407775:	test	byte ptr [rdi + 0x50], 0x40
0x407779:	jne	0x40779c
0x40777b:	mov	rsi, qword ptr [rdi + 0x40]
0x40777f:	lea	rdx, [rdi + 0x28]
0x407783:	mov	rdi, qword ptr [rdi + 0x20]
0x407787:	xor	ecx, ecx
0x407789:	mov	r8d, 1
0x40778f:	lea	rsi, [rsi - 1]
0x407793:	call	0x438ef0
0x407798:	xor	eax, eax
0x40779a:	jmp	0x4077c3
0x40779c:	cmp	qword ptr [rdi], 0x824
0x4077a3:	mov	al, 1
0x4077a5:	jne	0x4077c3
0x4077a7:	mov	rcx, qword ptr [rdi + 0x40]
0x4077ab:	lea	rdx, [rdi + 0x28]
0x4077af:	mov	rdi, qword ptr [rdi + 0x20]
0x4077b3:	xor	r8d, r8d
0x4077b6:	lea	rsi, [rcx - 1]
0x4077ba:	xor	ecx, ecx
0x4077bc:	call	0x438ef0
0x4077c1:	xor	eax, eax
0x4077c3:	pop	rdx
0x4077c4:	ret	
0x4077c5:	mov	rdx, rbp
0x4077c8:	mov	esi, 0x4653c8
0x4077cd:	xor	edi, edi
0x4077cf:	xor	eax, eax
0x4077d1:	call	0x43f5d0
0x4077d6:	mov	qword ptr [rsp + 0x18], rsi
0x4077db:	mov	rdx, r14
0x4077de:	mov	rsi, rbp
0x4077e1:	mov	qword ptr [rsp + 0x10], r8
0x4077e6:	mov	qword ptr [rsp], rdi
0x4077ea:	call	0x4038d0
0x4077ef:	mov	rdi, qword ptr [rsp]
0x4077f3:	mov	r8, qword ptr [rsp + 0x10]
0x4077f8:	test	eax, eax
0x4077fa:	mov	rsi, qword ptr [rsp + 0x18]
0x4077ff:	je	0x439284
0x407805:	jmp	0x43927b
0x40780a:	mov	rdi, qword ptr [rip + 0xde98f]
0x407811:	call	0x403830
0x407816:	mov	edi, 0x4c4893
0x40781b:	call	0x42db40
0x407820:	mov	qword ptr [rip + 0xde979], rax
0x407827:	jmp	0x4392fb
0x40782c:	cmp	dword ptr [rbp + 0x700], 0
0x407833:	setne	r8b
0x407837:	jmp	0x42ec5a
0x40783c:	mov	rdx, r15
0x40783f:	mov	esi, 0x4bf2b8
0x407844:	mov	edi, r13d
0x407847:	xor	eax, eax
0x407849:	mov	dword ptr [rsp + 8], r10d
0x40784e:	call	0x43fe20
0x407853:	mov	r10d, dword ptr [rsp + 8]
0x407858:	jmp	0x42e729
0x40785d:	cmp	dword ptr [rbp + 0x700], 0
0x407864:	setne	r8b
0x407868:	jmp	0x42ecb5
0x40786d:	mov	esi, 0x4be407
0x407872:	mov	rdi, r9
0x407875:	mov	dword ptr [rsp + 0x1c], r10d
0x40787a:	mov	qword ptr [rsp + 0x10], rcx
0x40787f:	mov	qword ptr [rsp + 8], r9
0x407884:	call	0x403be0
0x407889:	mov	r11, qword ptr [rsp + 8]
0x40788e:	mov	rcx, qword ptr [rsp + 0x10]
0x407893:	test	eax, eax
0x407895:	mov	r10d, dword ptr [rsp + 0x1c]
0x40789a:	je	0x42e436
0x4078a0:	xor	esi, esi
0x4078a2:	mov	edx, 0xa
0x4078a7:	mov	rdi, r11
0x4078aa:	mov	dword ptr [rsp + 0x10], r10d
0x4078af:	call	0x403c50
0x4078b4:	mov	r15, qword ptr [rsp + 8]
0x4078b9:	mov	r10d, dword ptr [rsp + 0x10]
0x4078be:	test	eax, eax
0x4078c0:	jne	0x42e643
0x4078c6:	mov	rdx, r15
0x4078c9:	mov	esi, 0x4bf2e0
0x4078ce:	mov	edi, r13d
0x4078d1:	mov	dword ptr [rsp + 8], r10d
0x4078d6:	call	0x43fe20
0x4078db:	mov	r10d, dword ptr [rsp + 8]
0x4078e0:	jmp	0x42e643
0x4078e5:	add	r11, 1
0x4078e9:	movsx	r8d, r9b
0x4078ed:	cmp	r9b, 0x55
0x4078f1:	jg	0x407916
0x4078f3:	cmp	r9b, 0x43
0x4078f7:	jg	0x40799d
0x4078fd:	cmp	r9b, 0x41
0x407901:	jne	0x4079c2
0x407907:	mov	dword ptr [rbp + 0xb0], 1
0x407911:	jmp	0x42e6de
0x407916:	cmp	r9b, 0x70
0x40791a:	je	0x4079ef
0x407920:	cmp	r9b, 0x78
0x407924:	jne	0x407a76
0x40792a:	mov	dword ptr [rbp + 0xe8], 1
0x407934:	jmp	0x42e6de
0x407939:	mov	rdi, r11
0x40793c:	mov	dword ptr [rsp + 0x1c], r10d
0x407941:	add	r15, 1
0x407945:	mov	qword ptr [rsp + 0x10], r11
0x40794a:	call	0x403be0
0x40794f:	mov	r11, qword ptr [rsp + 0x10]
0x407954:	mov	r10d, dword ptr [rsp + 0x1c]
0x407959:	test	eax, eax
0x40795b:	jne	0x42e6f3
0x407961:	mov	r9d, dword ptr [rsp + 8]
0x407966:	shl	r9, 4
0x40796a:	mov	edx, dword ptr [r9 + 0x4c4168]
0x407971:	test	edx, edx
0x407973:	je	0x407980
0x407975:	mov	dword ptr [rbp + 0xfc], edx
0x40797b:	jmp	0x42e643
0x407980:	mov	rsi, r11
0x407983:	mov	edi, 0x4bf1e0
0x407988:	xor	eax, eax
0x40798a:	mov	dword ptr [rsp + 8], r10d
0x40798f:	call	0x43dd90
0x407994:	mov	r10d, dword ptr [rsp + 8]
0x407999:	xor	edx, edx
0x40799b:	jmp	0x407975
0x40799d:	lea	ecx, [r9 - 0x44]
0x4079a1:	mov	rax, r15
0x4079a4:	shl	rax, cl
0x4079a7:	test	eax, 0x20621
0x4079ac:	jne	0x42e6de
0x4079b2:	cmp	r9b, 0x48
0x4079b6:	je	0x4079fe
0x4079b8:	cmp	r9b, 0x50
0x4079bc:	je	0x407aa5
0x4079c2:	mov	ecx, r8d
0x4079c5:	mov	edx, 0x4bf0f8
0x4079ca:	xor	esi, esi
0x4079cc:	mov	edi, r13d
0x4079cf:	xor	eax, eax
0x4079d1:	mov	dword ptr [rsp + 0x10], r10d
0x4079d6:	mov	qword ptr [rsp + 8], r11
0x4079db:	call	0x412cf4
0x4079e0:	mov	r11, qword ptr [rsp + 8]
0x4079e5:	mov	r10d, dword ptr [rsp + 0x10]
0x4079ea:	jmp	0x42e6de
0x4079ef:	mov	dword ptr [rbp + 0xc4], 1
0x4079f9:	jmp	0x42e6de
0x4079fe:	xor	esi, esi
0x407a00:	mov	edi, 6
0x407a05:	mov	dword ptr [rsp + 0x10], r10d
0x407a0a:	mov	qword ptr [rsp + 8], r11
0x407a0f:	call	0x403c00
0x407a14:	mov	edi, 4
0x407a19:	lea	rsi, [rsp + 0x30]
0x407a1e:	call	0x403ea0
0x407a23:	mov	rdi, qword ptr [rsp + 8]
0x407a28:	mov	r10d, dword ptr [rsp + 0x10]
0x407a2d:	test	eax, eax
0x407a2f:	jne	0x407a89
0x407a31:	mov	rdx, qword ptr [rsp + 0x38]
0x407a36:	mov	qword ptr [rsp + 8], rdi
0x407a3b:	lea	rsi, [rsp + 0x30]
0x407a40:	mov	edi, 4
0x407a45:	mov	dword ptr [rsp + 0x10], r10d
0x407a4a:	mov	qword ptr [rsp + 0x30], rdx
0x407a4f:	call	0x403d00
0x407a54:	mov	r11, qword ptr [rsp + 8]
0x407a59:	mov	r10d, dword ptr [rsp + 0x10]
0x407a5e:	test	eax, eax
0x407a60:	jne	0x407a97
0x407a62:	mov	rsi, qword ptr [rsp + 0x88]
0x407a6a:	mov	byte ptr [rsi + 0x86], 1
0x407a71:	jmp	0x42e6de
0x407a76:	cmp	r9b, 0x61
0x407a7a:	jne	0x4079c2
0x407a80:	mov	byte ptr [rbp + 0x52], 1
0x407a84:	jmp	0x42e6de
0x407a89:	mov	esi, 0x4bf098
0x407a8e:	xor	edi, edi
0x407a90:	xor	eax, eax
0x407a92:	call	0x43f5d0
0x407a97:	mov	esi, 0x4bf0c8
0x407a9c:	xor	edi, edi
0x407a9e:	xor	eax, eax
0x407aa0:	call	0x43f5d0
0x407aa5:	mov	dword ptr [rbp + 0xb4], 1
0x407aaf:	mov	dword ptr [rbp + 0xc4], 1
0x407ab9:	jmp	0x42e6de
0x407abe:	mov	esi, r15d
0x407ac1:	mov	rdi, rbp
0x407ac4:	call	0x43f830
0x407ac9:	jmp	0x42e6cd
0x407ace:	test	r15, r15
0x407ad1:	je	0x42e436
0x407ad7:	mov	dword ptr [rbp + 0x13d8], 0
0x407ae1:	jmp	0x42e6cd
0x407ae6:	lea	rbx, [r15 - 1]
0x407aea:	cmp	rbx, 0x63
0x407aee:	ja	0x42e436
0x407af4:	mov	rbp, qword ptr [rsp + 0x88]
0x407afc:	mov	dword ptr [rbp + 0x120], r15d
0x407b03:	jmp	0x42e6cd
0x407b08:	xor	r11d, r11d
0x407b0b:	test	r15, r15
0x407b0e:	sete	r11b
0x407b12:	movd	xmm2, r11d
0x407b17:	pshufd	xmm3, xmm2, 0xe0
0x407b1c:	movq	qword ptr [rbp + 0x13d8], xmm3
0x407b24:	jne	0x42e436
0x407b2a:	mov	dword ptr [rbp + 0x12c4], 0
0x407b34:	mov	r8d, ecx
0x407b37:	jmp	0x42e609
0x407b3c:	mov	dword ptr [rbp + 0xb8], 1
0x407b46:	jmp	0x42e6cd
0x407b4b:	test	r11, r11
0x407b4e:	je	0x407b5a
0x407b50:	cmp	byte ptr [r11], 0
0x407b54:	jne	0x407caf
0x407b5a:	movsxd	r15, dword ptr [rbp + 0x13f8]
0x407b61:	jmp	0x42e714
0x407b66:	mov	ecx, dword ptr [rbp + 0xf4]
0x407b6c:	mov	r8d, r15d
0x407b6f:	mov	esi, r13d
0x407b72:	mov	rdi, r11
0x407b75:	mov	edx, 0x5ac
0x407b7a:	mov	dword ptr [rsp + 8], r10d
0x407b7f:	call	0x42bbb4
0x407b84:	mov	r10d, dword ptr [rsp + 8]
0x407b89:	mov	dword ptr [rbp + 0xf4], eax
0x407b8f:	jmp	0x42e643
0x407b94:	mov	dword ptr [rbp + 0x117c], r15d
0x407b9b:	jmp	0x42e6cd
0x407ba0:	test	r15, r15
0x407ba3:	je	0x42e436
0x407ba9:	xor	r9d, r9d
0x407bac:	jmp	0x42e491
0x407bb1:	mov	rdi, r11
0x407bb4:	mov	dword ptr [rsp + 8], r10d
0x407bb9:	mov	r15d, 1
0x407bbf:	call	0x42db40
0x407bc4:	mov	r10d, dword ptr [rsp + 8]
0x407bc9:	mov	qword ptr [rbp + 0x10d0], rax
0x407bd0:	cmp	dword ptr [r12 + 0x10c8], 0
0x407bd9:	jne	0x407be2
0x407bdb:	mov	dword ptr [rbp + 0x10c8], r15d
0x407be2:	cmp	dword ptr [r12 + 0x111c], 0
0x407beb:	jne	0x407bf4
0x407bed:	mov	dword ptr [rbp + 0x111c], r15d
0x407bf4:	cmp	dword ptr [r12 + 0xe9c], 0
0x407bfd:	jne	0x407c06
0x407bff:	mov	dword ptr [rbp + 0xe9c], r15d
0x407c06:	cmp	dword ptr [r12 + 0xeb8], 0
0x407c0f:	jne	0x42e643
0x407c15:	mov	dword ptr [rbp + 0xeb8], r15d
0x407c1c:	jmp	0x42e643
0x407c21:	mov	rdi, r11
0x407c24:	mov	dword ptr [rsp + 8], r10d
0x407c29:	mov	r15d, 1
0x407c2f:	call	0x42db40
0x407c34:	mov	r10d, dword ptr [rsp + 8]
0x407c39:	mov	dword ptr [rbp + 0x1118], 1
0x407c43:	mov	qword ptr [rbp + 0x10d0], rax
0x407c4a:	mov	edx, r15d
0x407c4d:	mov	rsi, r12
0x407c50:	mov	rdi, rbp
0x407c53:	mov	dword ptr [rsp + 8], r10d
0x407c58:	call	0x415726
0x407c5d:	mov	r10d, dword ptr [rsp + 8]
0x407c62:	cmp	dword ptr [r12 + 0x1108], 0
0x407c6b:	jne	0x407c74
0x407c6d:	mov	dword ptr [rbp + 0x1108], r15d
0x407c74:	cmp	dword ptr [rbp + 0x13ac], 0
0x407c7b:	je	0x42e643
0x407c81:	cmp	dword ptr [r12 + 0xce8], 0
0x407c8a:	jne	0x42e643
0x407c90:	mov	dword ptr [rbp + 0xce8], 0
0x407c9a:	jmp	0x42e643
0x407c9f:	mov	qword ptr [rbp + 0x10e8], 0x4be3dd
0x407caa:	jmp	0x42e6cd
0x407caf:	mov	r8, r11
0x407cb2:	mov	rcx, r11
0x407cb5:	mov	rdx, r11
0x407cb8:	mov	esi, 0x4bf248
0x407cbd:	mov	edi, r13d
0x407cc0:	xor	eax, eax
0x407cc2:	mov	dword ptr [rsp + 8], r10d
0x407cc7:	call	0x43fe20
0x407ccc:	mov	r10d, dword ptr [rsp + 8]
0x407cd1:	jmp	0x42e643
0x407cd6:	test	r11, r11
0x407cd9:	je	0x42e436
0x407cdf:	mov	rdi, r11
0x407ce2:	mov	dword ptr [rsp + 8], r10d
0x407ce7:	call	0x42db40
0x407cec:	mov	esi, 0x2c
0x407cf1:	mov	rdi, rax
0x407cf4:	mov	r15, rax
0x407cf7:	call	0x403a40
0x407cfc:	mov	edx, dword ptr [rsp + 8]
0x407d00:	test	rax, rax
0x407d03:	je	0x407dbd
0x407d09:	mov	byte ptr [rax], 0
0x407d0c:	xor	esi, esi
0x407d0e:	mov	rdi, r15
0x407d11:	mov	dword ptr [rsp + 0x1c], edx
0x407d15:	xor	edx, edx
0x407d17:	mov	qword ptr [rsp + 0x10], rax
0x407d1c:	call	0x436b20
0x407d21:	mov	r10, qword ptr [rsp + 0x10]
0x407d26:	xor	edx, edx
0x407d28:	xor	esi, esi
0x407d2a:	mov	qword ptr [rsp + 8], rax
0x407d2f:	lea	rdi, [r10 + 1]
0x407d33:	call	0x436b20
0x407d38:	mov	rcx, qword ptr [rsp + 8]
0x407d3d:	mov	r11d, dword ptr [rsp + 0x1c]
0x407d42:	cmp	rcx, 0xffff
0x407d49:	ja	0x407d54
0x407d4b:	test	rax, rax
0x407d4e:	jns	0x408618
0x407d54:	mov	edi, 0x4bf1a8
0x407d59:	xor	eax, eax
0x407d5b:	mov	dword ptr [rsp + 8], r11d
0x407d60:	call	0x43dd90
0x407d65:	mov	r11d, dword ptr [rsp + 8]
0x407d6a:	mov	rdi, r15
0x407d6d:	mov	dword ptr [rsp + 8], r11d
0x407d72:	call	0x403830
0x407d77:	mov	r10d, dword ptr [rsp + 8]
0x407d7c:	jmp	0x42e643
0x407d81:	lea	rsi, [r15 - 1]
0x407d85:	cmp	rsi, 0xf
0x407d89:	ja	0x407d90
0x407d8b:	test	rsi, r15
0x407d8e:	je	0x407db1
0x407d90:	mov	rdx, r15
0x407d93:	mov	esi, 0x4bf168
0x407d98:	mov	edi, r13d
0x407d9b:	xor	eax, eax
0x407d9d:	mov	dword ptr [rsp + 8], r10d
0x407da2:	call	0x43fe20
0x407da7:	mov	r10d, dword ptr [rsp + 8]
0x407dac:	jmp	0x42e643
0x407db1:	mov	dword ptr [rbp + 0x104], r15d
0x407db8:	jmp	0x42e6cd
0x407dbd:	mov	dword ptr [rsp + 8], edx
0x407dc1:	xor	esi, esi
0x407dc3:	xor	edx, edx
0x407dc5:	mov	rdi, r15
0x407dc8:	call	0x436b20
0x407dcd:	mov	r11d, dword ptr [rsp + 8]
0x407dd2:	cmp	rax, 0xffff
0x407dd8:	ja	0x407d54
0x407dde:	jmp	0x407d6a
0x407de0:	mov	edx, 0x4be3b0
0x407de5:	mov	esi, 0xb7a
0x407dea:	mov	edi, 0x45b07b
0x407def:	call	0x415bba
0x407df4:	mov	rdi, qword ptr [rsp + 0x88]
0x407dfc:	mov	esi, r15d
0x407dff:	mov	dword ptr [rsp + 8], r10d
0x407e04:	call	0x41b27e
0x407e09:	mov	r10d, dword ptr [rsp + 8]
0x407e0e:	jmp	0x42e643
0x407e13:	mov	rdi, qword ptr [rsp + 0x88]
0x407e1b:	mov	dword ptr [rdi + 0x118], r15d
0x407e22:	jmp	0x42e6cd
0x407e27:	mov	rdx, qword ptr [rsp + 0x88]
0x407e2f:	mov	dword ptr [rdx + 0x11c], r15d
0x407e36:	jmp	0x42e6cd
0x407e3b:	mov	esi, r15d
0x407e3e:	mov	r15, qword ptr [rsp + 0x88]
0x407e46:	mov	dword ptr [rsp + 8], r10d
0x407e4b:	mov	rdi, qword ptr [r15]
0x407e4e:	call	0x436c80
0x407e53:	mov	r10d, dword ptr [rsp + 8]
0x407e58:	jmp	0x42e643
0x407e5d:	mov	rdi, r11
0x407e60:	mov	dword ptr [rsp + 8], r10d
0x407e65:	call	0x42db40
0x407e6a:	mov	esi, 0x45ce84
0x407e6f:	mov	rdi, rax
0x407e72:	mov	r15, rax
0x407e75:	call	0x403df0
0x407e7a:	mov	esi, dword ptr [rsp + 8]
0x407e7e:	mov	rdi, rax
0x407e81:	test	rdi, rdi
0x407e84:	je	0x407f6d
0x407e8a:	mov	dword ptr [rsp + 0x10], esi
0x407e8e:	mov	esi, 0x4be3da
0x407e93:	mov	qword ptr [rsp + 8], rdi
0x407e98:	call	0x403be0
0x407e9d:	mov	rdi, qword ptr [rsp + 8]
0x407ea2:	mov	r11d, dword ptr [rsp + 0x10]
0x407ea7:	test	eax, eax
0x407ea9:	jne	0x408142
0x407eaf:	or	dword ptr [rbp + 0xc08], 2
0x407eb6:	mov	byte ptr [rbp + 0x54], 1
0x407eba:	mov	esi, 0x45ce84
0x407ebf:	xor	edi, edi
0x407ec1:	mov	dword ptr [rsp + 8], r11d
0x407ec6:	call	0x403df0
0x407ecb:	mov	esi, dword ptr [rsp + 8]
0x407ecf:	mov	rdi, rax
0x407ed2:	jmp	0x407e81
0x407ed4:	mov	dword ptr [rbp + 0xc08], 1
0x407ede:	jmp	0x42e6cd
0x407ee3:	mov	rdi, r11
0x407ee6:	mov	dword ptr [rsp + 8], r10d
0x407eeb:	mov	r15d, 1
0x407ef1:	call	0x42db40
0x407ef6:	mov	r10d, dword ptr [rsp + 8]
0x407efb:	mov	dword ptr [rbp + 0xbc0], 1
0x407f05:	mov	qword ptr [rbp + 0xbc8], rax
0x407f0c:	mov	edx, r15d
0x407f0f:	mov	rsi, r12
0x407f12:	mov	rdi, rbp
0x407f15:	mov	dword ptr [rsp + 8], r10d
0x407f1a:	call	0x415726
0x407f1f:	mov	r10d, dword ptr [rsp + 8]
0x407f24:	cmp	dword ptr [r12 + 0x10cc], 0
0x407f2d:	jne	0x407f36
0x407f2f:	mov	dword ptr [rbp + 0x10cc], r15d
0x407f36:	cmp	dword ptr [r12 + 0x2fc], 0
0x407f3f:	jne	0x42e643
0x407f45:	mov	dword ptr [rbp + 0x2fc], 0xa
0x407f4f:	jmp	0x42e643
0x407f54:	mov	r12, qword ptr [rsp + 0x88]
0x407f5c:	test	r15, r15
0x407f5f:	setne	byte ptr [r12 + 0x85]
0x407f68:	jmp	0x42e6cd
0x407f6d:	mov	rdi, r15
0x407f70:	mov	dword ptr [rsp + 8], esi
0x407f74:	call	0x403830
0x407f79:	mov	r10d, dword ptr [rsp + 8]
0x407f7e:	jmp	0x42e643
0x407f83:	cmp	dword ptr [r12 + 0x918], 0
0x407f8c:	je	0x407fa4
0x407f8e:	cmp	dword ptr [r12 + 0x920], 0
0x407f97:	je	0x408003
0x407f99:	mov	r9d, 1
0x407f9f:	jmp	0x42e491
0x407fa4:	push	rax
0x407fa5:	mov	r9d, r14d
0x407fa8:	mov	r8, r15
0x407fab:	xor	ecx, ecx
0x407fad:	push	qword ptr [rsp + 0x90]
0x407fb4:	mov	edx, 0x2b6
0x407fb9:	mov	rsi, r12
0x407fbc:	mov	rdi, rbp
0x407fbf:	push	1
0x407fc1:	push	qword ptr [rsp + 0x98]
0x407fc8:	push	r13
0x407fca:	push	r10
0x407fcc:	mov	dword ptr [rsp + 0x38], r10d
0x407fd1:	call	0x43f7b0
0x407fd6:	add	rsp, 0x30
0x407fda:	mov	r10d, dword ptr [rsp + 8]
0x407fdf:	jmp	0x407f8e
0x407fe1:	lea	rsi, [rsp + 0x28]
0x407fe6:	mov	edi, 0x4e6320
0x407feb:	mov	dword ptr [rsp + 8], r8d
0x407ff0:	call	0x43b210
0x407ff5:	mov	byte ptr [rbp + 0x51], 1
0x407ff9:	mov	r10d, dword ptr [rsp + 8]
0x407ffe:	jmp	0x42e643
0x408003:	push	rax
0x408004:	mov	r9d, r14d
0x408007:	mov	r8, r15
0x40800a:	xor	ecx, ecx
0x40800c:	push	qword ptr [rsp + 0x90]
0x408013:	mov	edx, 0x2ba
0x408018:	mov	rsi, r12
0x40801b:	mov	rdi, rbp
0x40801e:	push	1
0x408020:	push	qword ptr [rsp + 0x98]
0x408027:	push	r13
0x408029:	push	r10
0x40802b:	call	0x43f7b0
0x408030:	add	rsp, 0x30
0x408034:	mov	r9d, 1
0x40803a:	jmp	0x42e491
0x40803f:	mov	rbp, qword ptr [rsp + 0x88]
0x408047:	test	r15, r15
0x40804a:	setne	byte ptr [rbp + 0x84]
0x408051:	jmp	0x42e6cd
0x408056:	mov	dword ptr [rbp + 0x960], 3
0x408060:	jmp	0x42f0b7
0x408065:	mov	edx, 0x4be3c5
0x40806a:	mov	esi, 0xb8c
0x40806f:	mov	edi, 0x45b07b
0x408074:	call	0x415bba
0x408079:	cmp	r14d, 0x80000
0x408080:	je	0x42e436
0x408086:	mov	dword ptr [rsp + 8], r8d
0x40808b:	mov	r8d, dword ptr [rbp + 0x15a0]
0x408092:	or	r8d, dword ptr [rbp + 0x700]
0x408099:	sete	al
0x40809c:	movzx	r15d, al
0x4080a0:	call	qword ptr [rsp + 0x90]
0x4080a7:	mov	edi, dword ptr [rsp + 8]
0x4080ab:	shl	r15d, 0x18
0x4080af:	xor	edx, edx
0x4080b1:	mov	ecx, edx
0x4080b3:	mov	dword ptr [rsp + 0x10], edi
0x4080b7:	mov	edi, 1
0x4080bc:	mov	r8d, r14d
0x4080bf:	shl	edi, cl
0x4080c1:	mov	dword ptr [rsp + 8], edx
0x4080c5:	mov	rcx, rbp
0x4080c8:	xor	edx, edx
0x4080ca:	mov	esi, edi
0x4080cc:	xor	esi, 0x3fff
0x4080d2:	or	esi, r15d
0x4080d5:	call	0x41a8a1
0x4080da:	mov	edx, dword ptr [rsp + 8]
0x4080de:	mov	edi, dword ptr [rsp + 0x10]
0x4080e2:	add	edx, 1
0x4080e5:	cmp	edx, 0xe
0x4080e8:	jne	0x4080b1
0x4080ea:	mov	dword ptr [rsp + 8], edi
0x4080ee:	mov	r8d, r14d
0x4080f1:	xor	edi, edi
0x4080f3:	mov	rcx, rbp
0x4080f6:	mov	edx, 0x3fff
0x4080fb:	mov	esi, r15d
0x4080fe:	call	0x41a8a1
0x408103:	mov	r10d, dword ptr [rsp + 8]
0x408108:	mov	edi, 0x10000
0x40810d:	lea	esi, [rdi + rdi]
0x408110:	cmp	edi, 0x80000
0x408116:	jne	0x4089c3
0x40811c:	mov	edi, esi
0x40811e:	jmp	0x40810d
0x408120:	mov	esi, r15d
0x408123:	mov	r15, qword ptr [rsp + 0x88]
0x40812b:	mov	dword ptr [rsp + 8], r10d
0x408130:	mov	rdi, qword ptr [r15]
0x408133:	call	0x436cf0
0x408138:	mov	r10d, dword ptr [rsp + 8]
0x40813d:	jmp	0x42e643
0x408142:	mov	esi, 0x45ba99
0x408147:	mov	dword ptr [rsp + 8], r11d
0x40814c:	call	0x403be0
0x408151:	mov	r11d, dword ptr [rsp + 8]
0x408156:	test	eax, eax
0x408158:	jne	0x407ba9
0x40815e:	or	dword ptr [rbp + 0xc08], 4
0x408165:	jmp	0x407eba
0x40816a:	mov	r13, qword ptr [rsp + 0x88]
0x408172:	mov	rbx, qword ptr [r13]
0x408176:	mov	dword ptr [rbx + 0x24], r15d
0x40817a:	jmp	0x42e6cd
0x40817f:	mov	r13d, dword ptr [rbp + 0xf8]
0x408186:	mov	r14d, r13d
0x408189:	or	r13d, 0x3fff6e0
0x408190:	and	r14d, 0xfc00001f
0x408197:	test	r15, r15
0x40819a:	cmove	r13d, r14d
0x40819e:	mov	dword ptr [rbp + 0xf8], r13d
0x4081a5:	jmp	0x42e6cd
0x4081aa:	mov	edx, 0x4be3f2
0x4081af:	mov	esi, 0x54a3
0x4081b4:	mov	edi, 0x4be40c
0x4081b9:	call	0x415bba
0x4081be:	cmp	byte ptr [rbp + 0x15e2], 0
0x4081c5:	jne	0x4081d1
0x4081c7:	mov	dword ptr [rbp + 0xdbc], 1
0x4081d1:	cmp	byte ptr [rbp + 0x15e7], 0
0x4081d8:	jne	0x4081e4
0x4081da:	mov	dword ptr [rbp + 0x1214], 0
0x4081e4:	cmp	byte ptr [rbp + 0x15e6], 0
0x4081eb:	jne	0x4081f7
0x4081ed:	mov	dword ptr [rbp + 0x1174], 0
0x4081f7:	cmp	byte ptr [rbp + 0x15e1], 0
0x4081fe:	jne	0x42e436
0x408204:	mov	dword ptr [rbp + 0xc7c], 1
0x40820e:	jmp	0x42e6cd
0x408213:	mov	edi, r13d
0x408216:	mov	rcx, r15
0x408219:	mov	rdx, r8
0x40821c:	mov	esi, 0x4bf058
0x408221:	xor	eax, eax
0x408223:	mov	dword ptr [rsp + 8], r10d
0x408228:	call	0x43fe20
0x40822d:	mov	edi, dword ptr [rsp + 8]
0x408231:	jmp	0x42f02c
0x408236:	mov	rsi, r15
0x408239:	lea	rdi, [rsp + 0x30]
0x40823e:	mov	dword ptr [rsp + 0x1c], r10d
0x408243:	mov	dword ptr [rsp + 0x10], r9d
0x408248:	mov	qword ptr [rsp + 8], r8
0x40824d:	mov	qword ptr [rsp + 0x30], 0
0x408256:	call	0x43bd70
0x40825b:	mov	r10d, dword ptr [rsp + 0x1c]
0x408260:	mov	rsi, qword ptr [rsp + 8]
0x408265:	test	rax, rax
0x408268:	mov	r8d, dword ptr [rsp + 0x10]
0x40826d:	mov	r9, rax
0x408270:	mov	dword ptr [rsp + 8], r10d
0x408275:	je	0x4082d5
0x408277:	test	r8d, r8d
0x40827a:	mov	ecx, 0x45be4d
0x40827f:	mov	edx, 0x4c4893
0x408284:	mov	r8, r15
0x408287:	cmove	rdx, rcx
0x40828b:	mov	edi, r13d
0x40828e:	mov	rcx, rsi
0x408291:	xor	eax, eax
0x408293:	mov	esi, 0x4beff0
0x408298:	call	0x43fe20
0x40829d:	mov	eax, dword ptr [rsp + 8]
0x4082a1:	lea	rdi, [rsp + 0x30]
0x4082a6:	mov	dword ptr [rsp + 8], eax
0x4082aa:	call	0x43c2c0
0x4082af:	mov	edi, dword ptr [rsp + 8]
0x4082b3:	jmp	0x42f02c
0x4082b8:	imul	r11, rax, 0x60
0x4082bc:	movzx	r11d, byte ptr [r11 + 0x48bad4]
0x4082c4:	add	r11, r15
0x4082c7:	jmp	0x42eff8
0x4082cc:	mov	byte ptr [rbp + 0x51], 1
0x4082d0:	jmp	0x42e5f2
0x4082d5:	test	r8d, r8d
0x4082d8:	mov	r9d, 0x45be4d
0x4082de:	mov	rcx, rsi
0x4082e1:	mov	r8, r15
0x4082e4:	mov	edx, 0x4c4893
0x4082e9:	mov	esi, 0x4bf030
0x4082ee:	mov	edi, r13d
0x4082f1:	cmove	rdx, r9
0x4082f5:	xor	eax, eax
0x4082f7:	call	0x43fe20
0x4082fc:	mov	eax, dword ptr [rsp + 8]
0x408300:	jmp	0x4082a1
0x408302:	mov	r8, qword ptr [rsp + 0x88]
0x40830a:	test	r15, r15
0x40830d:	setne	byte ptr [r8 + 0x74]
0x408312:	jmp	0x42e6cd
0x408317:	mov	r10, qword ptr [rsp + 0x88]
0x40831f:	mov	dword ptr [r10 + 0x80], r15d
0x408326:	jmp	0x42e6cd
0x40832b:	xor	r9d, r9d
0x40832e:	mov	rax, qword ptr [rsp + 0x88]
0x408336:	test	r15, r15
0x408339:	setne	r9b
0x40833d:	mov	dword ptr [rax + 0x114], r9d
0x408344:	jmp	0x42e6cd
0x408349:	mov	rcx, qword ptr [rsp + 0x88]
0x408351:	mov	dword ptr [rcx + 0x10c], r15d
0x408358:	jmp	0x42e6cd
0x40835d:	mov	r11, qword ptr [rsp + 0x88]
0x408365:	test	r15, r15
0x408368:	setne	byte ptr [r11 + 0x10a]
0x408370:	jmp	0x42e6cd
0x408375:	mov	rsi, qword ptr [rsp + 0x88]
0x40837d:	test	r15, r15
0x408380:	setne	byte ptr [rsi + 0x7f]
0x408384:	jmp	0x42e6cd
0x408389:	mov	r14, qword ptr [rsp + 0x88]
0x408391:	test	r15, r15
0x408394:	setne	byte ptr [r14 + 0x10b]
0x40839c:	jmp	0x42e6cd
0x4083a1:	mov	r8, qword ptr [rsp + 0x88]
0x4083a9:	mov	dword ptr [rsp + 0x10], r10d
0x4083ae:	mov	dword ptr [rsp + 8], r15d
0x4083b3:	mov	rdi, qword ptr [r8]
0x4083b6:	mov	dword ptr [rdi + 0x28], r15d
0x4083ba:	call	0x4325e0
0x4083bf:	mov	esi, dword ptr [rsp + 8]
0x4083c3:	mov	rdi, qword ptr [rsp + 0x88]
0x4083cb:	call	0x435970
0x4083d0:	mov	r10d, dword ptr [rsp + 0x10]
0x4083d5:	jmp	0x42e643
0x4083da:	mov	rbx, qword ptr [rsp + 0x88]
0x4083e2:	mov	dword ptr [rbx + 0x94], r15d
0x4083e9:	jmp	0x42e6cd
0x4083ee:	mov	edx, 0x4be3b0
0x4083f3:	mov	esi, 0x918
0x4083f8:	mov	edi, 0x45b07b
0x4083fd:	call	0x415bba
0x408402:	mov	dword ptr [rsp + 8], r8d
0x408407:	xor	ecx, ecx
0x408409:	test	r15, r15
0x40840c:	mov	r9d, r14d
0x40840f:	mov	rax, qword ptr [rsp + 0x88]
0x408417:	setne	cl
0x40841a:	mov	r8d, r13d
0x40841d:	xor	edx, edx
0x40841f:	mov	edi, 0x295
0x408424:	mov	byte ptr [rax + 0x88], 1
0x40842b:	push	rax
0x40842c:	push	rsi
0x40842d:	mov	esi, 4
0x408432:	push	rbp
0x408433:	push	qword ptr [rsp + 0x98]
0x40843a:	call	0x43f940
0x40843f:	add	rsp, 0x20
0x408443:	mov	r10d, dword ptr [rsp + 8]
0x408448:	jmp	0x42e643
0x40844d:	xor	esi, esi
0x40844f:	cmp	edx, 0x6b5
0x408455:	mov	r9d, r13d
0x408458:	mov	r8, r12
0x40845b:	sete	sil
0x40845f:	mov	rcx, rbp
0x408462:	mov	rdx, r11
0x408465:	mov	edi, 3
0x40846a:	mov	dword ptr [rsp + 8], r10d
0x40846f:	call	0x4394d0
0x408474:	mov	r10d, dword ptr [rsp + 8]
0x408479:	jmp	0x42e643
0x40847e:	mov	rcx, qword ptr [rsp + 0x88]
0x408486:	mov	byte ptr [rcx + 0x91], 1
0x40848d:	jmp	0x42e6cd
0x408492:	test	r15, r15
0x408495:	je	0x42e436
0x40849b:	jmp	0x407b2a
0x4084a0:	mov	r9d, r13d
0x4084a3:	mov	r8, r12
0x4084a6:	mov	rcx, rbp
0x4084a9:	mov	rdx, r11
0x4084ac:	mov	esi, 2
0x4084b1:	xor	edi, edi
0x4084b3:	mov	dword ptr [rsp + 8], r10d
0x4084b8:	call	0x4394d0
0x4084bd:	mov	r10d, dword ptr [rsp + 8]
0x4084c2:	jmp	0x42e643
0x4084c7:	mov	r9d, r13d
0x4084ca:	mov	r8, r12
0x4084cd:	mov	rcx, rbp
0x4084d0:	mov	rdx, r11
0x4084d3:	xor	esi, esi
0x4084d5:	mov	edi, 4
0x4084da:	mov	dword ptr [rsp + 8], r10d
0x4084df:	call	0x4394d0
0x4084e4:	mov	r10d, dword ptr [rsp + 8]
0x4084e9:	jmp	0x42e643
0x4084ee:	xor	esi, esi
0x4084f0:	cmp	edx, 0x6ad
0x4084f6:	mov	r9d, r13d
0x4084f9:	mov	r8, r12
0x4084fc:	sete	sil
0x408500:	mov	rcx, rbp
0x408503:	mov	rdx, r11
0x408506:	mov	edi, 1
0x40850b:	mov	dword ptr [rsp + 8], r10d
0x408510:	call	0x4394d0
0x408515:	mov	r10d, dword ptr [rsp + 8]
0x40851a:	jmp	0x42e643
0x40851f:	cmp	dword ptr [rsi + 0x334], 0
0x408526:	jne	0x40853b
0x408528:	mov	rax, r15
0x40852b:	mov	esi, 2
0x408530:	cqo	
0x408532:	idiv	rsi
0x408535:	mov	dword ptr [rbp + 0x334], eax
0x40853b:	cmp	dword ptr [r12 + 0x328], 0
0x408544:	jne	0x42e436
0x40854a:	mov	rax, r15
0x40854d:	mov	r14d, 2
0x408553:	cqo	
0x408555:	idiv	r14
0x408558:	mov	dword ptr [rbp + 0x328], eax
0x40855e:	jmp	0x42e6cd
0x408563:	lea	rdi, [rbp + 0x108]
0x40856a:	mov	rsi, r11
0x40856d:	mov	dword ptr [rsp + 8], r8d
0x408572:	call	0x41565e
0x408577:	mov	r10d, dword ptr [rsp + 8]
0x40857c:	jmp	0x42e643
0x408581:	lea	rdi, [rbp + 0x110]
0x408588:	mov	rsi, r11
0x40858b:	mov	dword ptr [rsp + 8], r8d
0x408590:	call	0x41565e
0x408595:	mov	r10d, dword ptr [rsp + 8]
0x40859a:	jmp	0x42e643
0x40859f:	cmp	dword ptr [r12 + 0x1310], 0
0x4085a8:	je	0x408651
0x4085ae:	cmp	dword ptr [r12 + 0x1338], 0
0x4085b7:	jne	0x407f99
0x4085bd:	push	rax
0x4085be:	mov	r9d, r14d
0x4085c1:	mov	r8, r15
0x4085c4:	xor	ecx, ecx
0x4085c6:	push	qword ptr [rsp + 0x90]
0x4085cd:	mov	edx, 0x648
0x4085d2:	mov	rsi, r12
0x4085d5:	mov	rdi, rbp
0x4085d8:	push	1
0x4085da:	push	qword ptr [rsp + 0x98]
0x4085e1:	push	r13
0x4085e3:	push	r10
0x4085e5:	call	0x43f7b0
0x4085ea:	add	rsp, 0x30
0x4085ee:	mov	r9d, 1
0x4085f4:	jmp	0x42e491
0x4085f9:	mov	r12, qword ptr [rsp + 0x88]
0x408601:	test	r15, r15
0x408604:	mov	r9d, 1
0x40860a:	setne	byte ptr [r12 + 0x90]
0x408613:	jmp	0x42e491
0x408618:	cmp	rcx, rax
0x40861b:	jl	0x407d54
0x408621:	jmp	0x407d6a
0x408626:	mov	esi, 0x4bf120
0x40862b:	mov	edi, r13d
0x40862e:	xor	eax, eax
0x408630:	mov	dword ptr [rsp + 8], r10d
0x408635:	call	0x43fe20
0x40863a:	mov	r10d, dword ptr [rsp + 8]
0x40863f:	jmp	0x42e643
0x408644:	add	r15, 1
0x408648:	setne	byte ptr [rbp + 0x54]
0x40864c:	jmp	0x42f0b7
0x408651:	push	rdx
0x408652:	mov	r9d, r14d
0x408655:	mov	r8, r15
0x408658:	xor	ecx, ecx
0x40865a:	push	qword ptr [rsp + 0x90]
0x408661:	mov	edx, 0x63d
0x408666:	mov	rsi, r12
0x408669:	mov	rdi, rbp
0x40866c:	push	1
0x40866e:	push	qword ptr [rsp + 0x98]
0x408675:	push	r13
0x408677:	push	r10
0x408679:	mov	dword ptr [rsp + 0x38], r10d
0x40867e:	call	0x43f7b0
0x408683:	add	rsp, 0x30
0x408687:	mov	r10d, dword ptr [rsp + 8]
0x40868c:	jmp	0x4085ae
0x408691:	test	r15, r15
0x408694:	mov	dword ptr [rbp + 0x1264], r15d
0x40869b:	setne	byte ptr [rbp + 0x54]
0x40869f:	jmp	0x42e6cd
0x4086a4:	mov	esi, 0x4beab1
0x4086a9:	mov	rdi, r11
0x4086ac:	mov	dword ptr [rsp + 0x10], r10d
0x4086b1:	mov	qword ptr [rsp + 8], r11
0x4086b6:	call	0x403be0
0x4086bb:	mov	r10d, dword ptr [rsp + 0x10]
0x4086c0:	test	eax, eax
0x4086c2:	mov	rax, qword ptr [rsp + 8]
0x4086c7:	jne	0x408710
0x4086c9:	mov	dword ptr [rbp + 0xa8], 0
0x4086d3:	jmp	0x42e6cd
0x4086d8:	mov	r12, qword ptr [rsp + 0x88]
0x4086e0:	test	r15, r15
0x4086e3:	setne	byte ptr [r12 + 0x87]
0x4086ec:	jmp	0x42e6cd
0x4086f1:	mov	dword ptr [rbp + 0x11b4], r15d
0x4086f8:	test	r15d, r15d
0x4086fb:	jne	0x42e436
0x408701:	mov	dword ptr [rbp + 0x11b4], 0xffffffff
0x40870b:	jmp	0x42e6cd
0x408710:	mov	esi, 0x4cc06e
0x408715:	mov	rdi, rax
0x408718:	mov	dword ptr [rsp + 0x10], r10d
0x40871d:	mov	qword ptr [rsp + 8], rax
0x408722:	call	0x403be0
0x408727:	mov	rcx, qword ptr [rsp + 8]
0x40872c:	mov	esi, dword ptr [rsp + 0x10]
0x408730:	test	eax, eax
0x408732:	jne	0x408743
0x408734:	mov	dword ptr [rbp + 0xa8], 1
0x40873e:	jmp	0x42e6cd
0x408743:	mov	dword ptr [rsp + 0x10], esi
0x408747:	mov	rdi, rcx
0x40874a:	mov	esi, 0x461a14
0x40874f:	mov	qword ptr [rsp + 8], rcx
0x408754:	call	0x403be0
0x408759:	mov	rdi, qword ptr [rsp + 8]
0x40875e:	mov	r15d, dword ptr [rsp + 0x10]
0x408763:	test	eax, eax
0x408765:	jne	0x408776
0x408767:	mov	dword ptr [rbp + 0xa8], 2
0x408771:	jmp	0x42e6cd
0x408776:	mov	rcx, rdi
0x408779:	mov	edx, 0x4bf220
0x40877e:	xor	esi, esi
0x408780:	mov	edi, r13d
0x408783:	xor	eax, eax
0x408785:	mov	dword ptr [rsp + 8], r15d
0x40878a:	call	0x412cf4
0x40878f:	mov	r10d, dword ptr [rsp + 8]
0x408794:	jmp	0x42e643
0x408799:	mov	dword ptr [rbp + 0x11b8], r15d
0x4087a0:	jmp	0x42e6cd
0x4087a5:	mov	ecx, dword ptr [rbp + 0xf0]
0x4087ab:	mov	r8d, r15d
0x4087ae:	mov	esi, r13d
0x4087b1:	mov	rdi, r11
0x4087b4:	mov	edx, 0x5b1
0x4087b9:	mov	dword ptr [rsp + 8], r10d
0x4087be:	call	0x42bbb4
0x4087c3:	mov	r10d, dword ptr [rsp + 8]
0x4087c8:	test	al, 4
0x4087ca:	mov	dword ptr [rbp + 0xf0], eax
0x4087d0:	je	0x40883b
0x4087d2:	cmp	dword ptr [r12 + 0x158], 0
0x4087db:	jne	0x4087e7
0x4087dd:	mov	dword ptr [rbp + 0x158], 0
0x4087e7:	cmp	dword ptr [r12 + 0x148], 0
0x4087f0:	jne	0x4087fc
0x4087f2:	mov	dword ptr [rbp + 0x148], 0
0x4087fc:	cmp	dword ptr [r12 + 0x160], 0
0x408805:	jne	0x408811
0x408807:	mov	dword ptr [rbp + 0x160], 0
0x408811:	cmp	dword ptr [r12 + 0x14c], 0
0x40881a:	jne	0x408826
0x40881c:	mov	dword ptr [rbp + 0x14c], 0
0x408826:	cmp	dword ptr [r12 + 0x164], 0
0x40882f:	jne	0x40883b
0x408831:	mov	dword ptr [rbp + 0x164], 0
0x40883b:	test	eax, 0x40000000
0x408840:	je	0x42e643
0x408846:	cmp	dword ptr [r12 + 0x1e8], 0
0x40884f:	jne	0x40885b
0x408851:	mov	dword ptr [rbp + 0x1e8], 0
0x40885b:	cmp	dword ptr [r12 + 0x1f0], 0
0x408864:	jne	0x408870
0x408866:	mov	dword ptr [rbp + 0x1f0], 0
0x408870:	cmp	dword ptr [r12 + 0x1dc], 0
0x408879:	jne	0x42e643
0x40887f:	mov	dword ptr [rbp + 0x1dc], 0
0x408889:	jmp	0x42e643
0x40888e:	mov	ecx, dword ptr [rbp + 0xf8]
0x408894:	mov	r8d, r15d
0x408897:	mov	esi, r13d
0x40889a:	mov	rdi, r11
0x40889d:	mov	edx, 0x5ae
0x4088a2:	mov	dword ptr [rsp + 8], r10d
0x4088a7:	call	0x42bbb4
0x4088ac:	mov	r10d, dword ptr [rsp + 8]
0x4088b1:	mov	dword ptr [rbp + 0xf8], eax
0x4088b7:	jmp	0x42e643
0x4088bc:	mov	edx, 0x46062d
0x4088c1:	mov	rsi, r11
0x4088c4:	mov	edi, r13d
0x4088c7:	mov	dword ptr [rsp + 8], r10d
0x4088cc:	lea	rcx, [rbp + 0xb0c]
0x4088d3:	lea	r8, [rbp + 0xb10]
0x4088da:	call	0x415885
0x4088df:	mov	r10d, dword ptr [rsp + 8]
0x4088e4:	jmp	0x42e643
0x4088e9:	mov	edx, 0x45fd5c
0x4088ee:	mov	rsi, r11
0x4088f1:	mov	edi, r13d
0x4088f4:	mov	dword ptr [rsp + 8], r10d
0x4088f9:	lea	rcx, [rbp + 0xb38]
0x408900:	lea	r8, [rbp + 0xb40]
0x408907:	call	0x415885
0x40890c:	mov	r10d, dword ptr [rsp + 8]
0x408911:	jmp	0x42e643
0x408916:	mov	edx, 0x45d608
0x40891b:	mov	rsi, r11
0x40891e:	mov	edi, r13d
0x408921:	mov	dword ptr [rsp + 8], r10d
0x408926:	lea	rcx, [rbp + 0xb28]
0x40892d:	lea	r8, [rbp + 0xb30]
0x408934:	call	0x415885
0x408939:	mov	r10d, dword ptr [rsp + 8]
0x40893e:	jmp	0x42e643
0x408943:	mov	edx, 0x461d25
0x408948:	mov	rsi, r11
0x40894b:	mov	edi, r13d
0x40894e:	mov	dword ptr [rsp + 8], r10d
0x408953:	lea	rcx, [rbp + 0xb18]
0x40895a:	lea	r8, [rbp + 0xb20]
0x408961:	call	0x415885
0x408966:	mov	r10d, dword ptr [rsp + 8]
0x40896b:	jmp	0x42e643
0x408970:	cmp	r14d, 0x80000
0x408977:	je	0x42e436
0x40897d:	mov	dword ptr [rsp + 8], r8d
0x408982:	call	qword ptr [rsp + 0x90]
0x408989:	mov	r8d, r14d
0x40898c:	mov	rcx, rbp
0x40898f:	xor	edx, edx
0x408991:	mov	esi, 0x1000000
0x408996:	mov	edi, 0x100000
0x40899b:	call	0x41a8a1
0x4089a0:	mov	byte ptr [rbp + 0x51], 1
0x4089a4:	mov	r10d, dword ptr [rsp + 8]
0x4089a9:	jmp	0x42e643
0x4089ae:	xor	ebx, ebx
0x4089b0:	test	r15, r15
0x4089b3:	setne	bl
0x4089b6:	add	ebx, ebx
0x4089b8:	mov	dword ptr [rbp + 0x968], ebx
0x4089be:	jmp	0x42f0b7
0x4089c3:	mov	dword ptr [rsp + 8], esi
0x4089c7:	xor	edx, edx
0x4089c9:	mov	esi, r15d
0x4089cc:	mov	r8d, r14d
0x4089cf:	mov	rcx, rbp
0x4089d2:	mov	dword ptr [rsp + 0x10], r10d
0x4089d7:	call	0x41a8a1
0x4089dc:	mov	esi, dword ptr [rsp + 8]
0x4089e0:	mov	r10d, dword ptr [rsp + 0x10]
0x4089e5:	cmp	esi, 0x200000
0x4089eb:	jbe	0x40811c
0x4089f1:	mov	byte ptr [rbp + 0x51], 1
0x4089f5:	jmp	0x42e643
0x4089fa:	mov	rbp, qword ptr [rsp + 0x88]
0x408a02:	test	r15, r15
0x408a05:	setne	byte ptr [rbp + 0x92]
0x408a0c:	jmp	0x42f0b7
0x408a11:	xor	edx, edx
0x408a13:	xor	esi, esi
0x408a15:	mov	rdi, r12
0x408a18:	mov	dword ptr [rsp + 0x10], r9d
0x408a1d:	mov	qword ptr [rsp + 8], rcx
0x408a22:	call	0x436b20
0x408a27:	mov	rcx, qword ptr [rsp + 8]
0x408a2c:	mov	r9d, dword ptr [rsp + 0x10]
0x408a31:	cmp	eax, -1
0x408a34:	je	0x408a99
0x408a36:	cmp	eax, 3
0x408a39:	jg	0x408ab2
0x408a3b:	mov	dword ptr [rcx + 0x80], eax
0x408a41:	jmp	0x439515
0x408a46:	mov	eax, dword ptr [rcx + 0x84]
0x408a4c:	test	eax, eax
0x408a4e:	je	0x43952d
0x408a54:	cmp	eax, edi
0x408a56:	je	0x43952d
0x408a5c:	movsxd	rdx, edi
0x408a5f:	mov	esi, 0x4bf310
0x408a64:	mov	edi, r9d
0x408a67:	xor	eax, eax
0x408a69:	mov	rdx, qword ptr [rdx*8 + 0x4c4120]
0x408a71:	mov	qword ptr [rsp + 0x18], r8
0x408a76:	mov	qword ptr [rsp + 0x10], rcx
0x408a7b:	mov	dword ptr [rsp + 8], r9d
0x408a80:	call	0x43fe20
0x408a85:	mov	r9d, dword ptr [rsp + 8]
0x408a8a:	mov	rcx, qword ptr [rsp + 0x10]
0x408a8f:	mov	r8, qword ptr [rsp + 0x18]
0x408a94:	jmp	0x43952d
0x408a99:	mov	rdx, r12
0x408a9c:	mov	esi, 0x4bf340
0x408aa1:	add	rsp, 0x28
0x408aa5:	mov	edi, r9d
0x408aa8:	xor	eax, eax
0x408aaa:	pop	rbp
0x408aab:	pop	r12
0x408aad:	jmp	0x43fe20
0x408ab2:	mov	rdx, r12
0x408ab5:	mov	esi, 0x4bf368
0x408aba:	jmp	0x408aa1
0x408abc:	endbr64	
0x408ac0:	cmp	ecx, 1
0x408ac3:	mov	rdi, rsi
0x408ac6:	mov	edx, 0x1b6
0x408acb:	sbb	esi, esi
0x408acd:	xor	eax, eax
0x408acf:	and	esi, 0xfffffe00
0x408ad5:	add	esi, 0x441
0x408adb:	jmp	0x403db0
0x408ae0:	mov	qword ptr [rdi], 0
0x408ae7:	lea	esi, [r13 + 1]
0x408aeb:	xor	edi, edi
0x408aed:	call	0x436e30
0x408af2:	xor	edi, edi
0x408af4:	mov	esi, eax
0x408af6:	mov	r12d, eax
0x408af9:	lea	rsi, [rsi*8 + 8]
0x408b01:	and	r12d, 0x7fffffff
0x408b08:	call	0x42db80
0x408b0d:	mov	r8d, r13d
0x408b10:	xor	edi, edi
0x408b12:	mov	qword ptr [rbx], rax
0x408b15:	mov	dword ptr [rax], r12d
0x408b18:	cmp	rdi, r8
0x408b1b:	je	0x408b2d
0x408b1d:	mov	r9, qword ptr [rbp + rdi*8 + 8]
0x408b22:	mov	qword ptr [rax + rdi*8 + 8], r9
0x408b27:	add	rdi, 1
0x408b2b:	jmp	0x408b18
0x408b2d:	mov	dword ptr [rax + 4], r13d
0x408b31:	jmp	0x43959a
0x408b36:	mov	esi, edx
0x408b38:	mov	qword ptr [rsp + 8], rdi
0x408b3d:	call	0x403dc0
0x408b42:	test	eax, eax
0x408b44:	jne	0x408b58
0x408b46:	mov	rdi, qword ptr [rsp + 8]
0x408b4b:	add	rsp, 0x30
0x408b4f:	pop	rbx
0x408b50:	pop	rbp
0x408b51:	pop	r12
0x408b53:	jmp	0x42db40
0x408b58:	xor	eax, eax
0x408b5a:	jmp	0x43967a
0x408b5f:	mov	rdi, qword ptr [rsp + 0x10]
0x408b64:	mov	esi, 0x4cd754
0x408b69:	call	0x403be0
0x408b6e:	test	eax, eax
0x408b70:	jne	0x408bc7
0x408b72:	mov	qword ptr [rsp + 0x10], 0
0x408b7b:	jmp	0x439920
0x408b80:	mov	byte ptr [rsp + 0x67], 1
0x408b85:	xor	ebp, ebp
0x408b87:	jmp	0x439706
0x408b8c:	mov	rdi, qword ptr [rsp + 8]
0x408b91:	call	0x403830
0x408b96:	mov	rdi, qword ptr [rsp + 0x20]
0x408b9b:	call	0x403830
0x408ba0:	mov	rcx, qword ptr [rip + 0xdbe59]
0x408ba7:	mov	rdi, qword ptr [rsp + 0x50]
0x408bac:	mov	qword ptr [rsp + 0x20], rcx
0x408bb1:	call	0x403830
0x408bb6:	mov	rbp, qword ptr [rip + 0xda6eb]
0x408bbd:	mov	qword ptr [rsp + 0x50], rbp
0x408bc2:	jmp	0x4399eb
0x408bc7:	mov	rdi, qword ptr [rsp + 0x10]
0x408bcc:	xor	edx, edx
0x408bce:	mov	esi, 0x489e38
0x408bd3:	xor	eax, eax
0x408bd5:	call	0x42d870
0x408bda:	mov	rdi, qword ptr [rsp + 0x20]
0x408bdf:	xor	edx, edx
0x408be1:	mov	rsi, rax
0x408be4:	mov	qword ptr [rsp + 0x10], rax
0x408be9:	mov	rbx, rax
0x408bec:	xor	eax, eax
0x408bee:	call	0x42d870
0x408bf3:	mov	rdi, qword ptr [rsp + 0x50]
0x408bf8:	xor	edx, edx
0x408bfa:	mov	rsi, rbx
0x408bfd:	mov	qword ptr [rsp + 0x20], rax
0x408c02:	xor	eax, eax
0x408c04:	call	0x42d870
0x408c09:	mov	qword ptr [rsp + 0x50], rax
0x408c0e:	jmp	0x439920
0x408c13:	mov	rdi, qword ptr [rsp + 8]
0x408c18:	call	0x4039e0
0x408c1d:	mov	qword ptr [rsp + 0x38], rax
0x408c22:	jmp	0x43972a
0x408c27:	mov	r10, qword ptr [rsp + 0x68]
0x408c2c:	mov	rsi, qword ptr [rsp + 0x50]
0x408c31:	mov	rdi, r9
0x408c34:	mov	qword ptr [rsp + 0x18], r9
0x408c39:	lea	rdx, [r10 + 1]
0x408c3d:	call	0x403c60
0x408c42:	mov	rsi, r12
0x408c45:	mov	rdi, r14
0x408c48:	call	r13
0x408c4b:	test	rax, rax
0x408c4e:	jne	0x408c8c
0x408c50:	mov	r9, qword ptr [rsp + 0x18]
0x408c55:	jmp	0x43983f
0x408c5a:	xor	ebp, ebp
0x408c5c:	jmp	0x4396da
0x408c61:	mov	rdi, qword ptr [rsp + 8]
0x408c66:	mov	qword ptr [rsp], rax
0x408c6a:	call	0x403830
0x408c6f:	mov	rdi, qword ptr [rsp + 0x20]
0x408c74:	call	0x403830
0x408c79:	mov	rdi, qword ptr [rsp + 0x50]
0x408c7e:	call	0x403830
0x408c83:	mov	rax, qword ptr [rsp]
0x408c87:	jmp	0x4398c9
0x408c8c:	jmp	0x4398bd
0x408c91:	mov	rsi, qword ptr [rbx + 8]
0x408c95:	add	edx, 1
0x408c98:	lea	rdi, [r12 + rbp]
0x408c9c:	movsxd	rdx, edx
0x408c9f:	call	0x403c60
0x408ca4:	mov	esi, dword ptr [rbx + 0x18]
0x408ca7:	mov	rdi, r12
0x408caa:	call	0x439a50
0x408caf:	test	eax, eax
0x408cb1:	jne	0x42f155
0x408cb7:	jmp	0x42f170
0x408cbc:	mov	rdi, r14
0x408cbf:	call	0x403830
0x408cc4:	jmp	0x42f170
0x408cc9:	mov	esi, 0x4bf4a0
0x408cce:	xor	edi, edi
0x408cd0:	xor	eax, eax
0x408cd2:	call	0x43f5d0
0x408cd7:	sub	rbx, r12
0x408cda:	mov	esi, 0x4bf470
0x408cdf:	xor	edi, edi
0x408ce1:	xor	eax, eax
0x408ce3:	mov	rdx, rbx
0x408ce6:	call	0x43f5d0
0x408ceb:	mov	qword ptr [rip + 0xd9746], rbx
0x408cf2:	jmp	0x439b9c
0x408cf7:	mov	esi, dword ptr [rip + 0xda5b3]
0x408cfd:	mov	rdi, qword ptr [rip + 0xda5b4]
0x408d04:	movaps	xmmword ptr [rsp], xmm0
0x408d08:	lea	r9d, [rsi + 2]
0x408d0c:	movsxd	rsi, r9d
0x408d0f:	shl	rsi, 5
0x408d13:	call	0x42db80
0x408d18:	movdqa	xmm2, xmmword ptr [rsp]
0x408d1d:	mov	ecx, 8
0x408d22:	movsxd	r8, dword ptr [rip + 0xda587]
0x408d29:	mov	qword ptr [rip + 0xda588], rax
0x408d30:	mov	r10, r8
0x408d33:	shl	r8, 5
0x408d37:	movups	xmmword ptr [rax + r8], xmm2
0x408d3c:	lea	rdi, [rax + r8 + 0x20]
0x408d41:	add	r10d, 1
0x408d45:	xor	eax, eax
0x408d47:	mov	dword ptr [rip + 0xda562], r10d
0x408d4e:	rep stosd	dword ptr [rdi], eax
0x408d50:	jmp	0x439cf5
0x408d55:	test	r11b, r11b
0x408d58:	je	0x408eb0
0x408d5e:	add	rdi, 1
0x408d62:	movzx	r11d, byte ptr [rdi]
0x408d66:	cmp	r11b, 0xa
0x408d6a:	jne	0x408d55
0x408d6c:	jmp	0x439c89
0x408d71:	cmp	byte ptr [rdi + 1], 0xa
0x408d75:	je	0x408d94
0x408d77:	add	rdi, 1
0x408d7b:	mov	byte ptr [rcx], 0x5c
0x408d7e:	add	rcx, 1
0x408d82:	movzx	r15d, byte ptr [rdi]
0x408d86:	test	r15b, r15b
0x408d89:	jne	0x439c98
0x408d8f:	jmp	0x439cc0
0x408d94:	add	rdi, 2
0x408d98:	jmp	0x439c89
0x408d9d:	test	r8b, r8b
0x408da0:	je	0x408db4
0x408da2:	mov	r9, rbx
0x408da5:	movzx	r8d, byte ptr [rbx + 1]
0x408daa:	add	rbx, 1
0x408dae:	cmp	r8b, 0xa
0x408db2:	jne	0x408d9d
0x408db4:	mov	edx, 8
0x408db9:	mov	esi, 0x4be44b
0x408dbe:	lea	r14, [r9 + 2]
0x408dc2:	mov	rdi, rbp
0x408dc5:	call	0x4038d0
0x408dca:	test	eax, eax
0x408dcc:	jne	0x408de7
0x408dce:	movzx	r10d, byte ptr [rbp + 8]
0x408dd3:	cmp	r10b, 9
0x408dd7:	je	0x408ec9
0x408ddd:	cmp	r10b, 0x20
0x408de1:	je	0x408ec9
0x408de7:	mov	edx, 0xe
0x408dec:	mov	esi, 0x4be454
0x408df1:	mov	rdi, rbp
0x408df4:	call	0x4038d0
0x408df9:	test	eax, eax
0x408dfb:	jne	0x408e16
0x408dfd:	movzx	r11d, byte ptr [rbp + 0xe]
0x408e02:	cmp	r11b, 9
0x408e06:	je	0x408f2a
0x408e0c:	cmp	r11b, 0x20
0x408e10:	je	0x408f2a
0x408e16:	mov	edx, 7
0x408e1b:	mov	esi, 0x4be481
0x408e20:	mov	rdi, rbp
0x408e23:	call	0x4038d0
0x408e28:	test	eax, eax
0x408e2a:	jne	0x408eb5
0x408e30:	movzx	r15d, byte ptr [rbp + 7]
0x408e35:	cmp	r15b, 0x20
0x408e39:	je	0x408e41
0x408e3b:	cmp	r15b, 9
0x408e3f:	jne	0x408eb5
0x408e41:	add	rbp, 8
0x408e45:	movzx	eax, byte ptr [rbp]
0x408e49:	cmp	al, 9
0x408e4b:	je	0x408e55
0x408e4d:	cmp	al, 0x20
0x408e4f:	jne	0x408f96
0x408e55:	add	rbp, 1
0x408e59:	jmp	0x408e45
0x408e5b:	cmp	rbp, rcx
0x408e5e:	jae	0x408e6a
0x408e60:	cmp	byte ptr [rcx - 1], 0xa
0x408e64:	je	0x439b81
0x408e6a:	cmp	byte ptr [rcx + 1], 0xa
0x408e6e:	je	0x439b81
0x408e74:	mov	byte ptr [rdx], 0xa
0x408e77:	add	rdx, 1
0x408e7b:	jmp	0x439b81
0x408e80:	mov	rdx, qword ptr [rsp + 0x10]
0x408e85:	mov	esi, 0x4be42d
0x408e8a:	xor	edi, edi
0x408e8c:	xor	eax, eax
0x408e8e:	call	0x43f5d0
0x408e93:	sub	rdi, r12
0x408e96:	mov	esi, 0x4bf470
0x408e9b:	xor	eax, eax
0x408e9d:	mov	rdx, rdi
0x408ea0:	xor	edi, edi
0x408ea2:	call	0x43f5d0
0x408ea7:	sub	rsi, 1
0x408eab:	jmp	0x439bf5
0x408eb0:	jmp	0x439c89
0x408eb5:	mov	rdx, rbp
0x408eb8:	mov	esi, 0x4bf440
0x408ebd:	xor	edi, edi
0x408ebf:	xor	eax, eax
0x408ec1:	sub	rdx, r12
0x408ec4:	call	0x43f5d0
0x408ec9:	add	rbp, 9
0x408ecd:	movzx	r8d, byte ptr [rbp]
0x408ed2:	add	rbp, 1
0x408ed6:	cmp	r8b, 9
0x408eda:	je	0x408ecd
0x408edc:	cmp	r8b, 0x20
0x408ee0:	je	0x408ecd
0x408ee2:	cmp	r8b, 0x3c
0x408ee6:	jne	0x408f81
0x408eec:	cmp	byte ptr [rbx - 1], 0x3e
0x408ef0:	jne	0x408f81
0x408ef6:	mov	byte ptr [rbx - 1], 0
0x408efa:	mov	rsi, rbp
0x408efd:	mov	ecx, 1
0x408f02:	mov	edx, 4
0x408f07:	mov	edi, 0x4e24b0
0x408f0c:	call	0x439620
0x408f11:	mov	rdi, rbp
0x408f14:	mov	edx, r13d
0x408f17:	test	rax, rax
0x408f1a:	cmovne	rdi, rax
0x408f1e:	xor	esi, esi
0x408f20:	call	0x439ab0
0x408f25:	jmp	0x439b9c
0x408f2a:	add	rbp, 0xf
0x408f2e:	movzx	r9d, byte ptr [rbp]
0x408f33:	add	rbp, 1
0x408f37:	cmp	r9b, 9
0x408f3b:	je	0x408f2e
0x408f3d:	cmp	r9b, 0x20
0x408f41:	je	0x408f2e
0x408f43:	cmp	r9b, 0x3c
0x408f47:	jne	0x408fbd
0x408f49:	cmp	byte ptr [rbx - 1], 0x3e
0x408f4d:	jne	0x408fbd
0x408f4f:	mov	byte ptr [rbx - 1], 0
0x408f53:	mov	edi, 0x4e24b0
0x408f58:	mov	ecx, 1
0x408f5d:	mov	rsi, rbp
0x408f60:	mov	edx, 4
0x408f65:	call	0x439620
0x408f6a:	mov	rdi, rax
0x408f6d:	test	rax, rax
0x408f70:	je	0x408fe6
0x408f72:	mov	edx, r13d
0x408f75:	xor	esi, esi
0x408f77:	call	0x439ab0
0x408f7c:	jmp	0x439b9c
0x408f81:	sub	rbp, r12
0x408f84:	mov	esi, 0x4bf390
0x408f89:	xor	edi, edi
0x408f8b:	xor	eax, eax
0x408f8d:	lea	rdx, [rbp + 1]
0x408f91:	call	0x43f5d0
0x408f96:	test	byte ptr [rax + rax + 0x4bc840], 0x88
0x408f9e:	je	0x408fd2
0x408fa0:	mov	rdi, rbp
0x408fa3:	movzx	edx, byte ptr [rdi]
0x408fa6:	test	dl, dl
0x408fa8:	je	0x409018
0x408faa:	movzx	ecx, dl
0x408fad:	test	byte ptr [rcx + rcx + 0x4bc840], 0x40
0x408fb5:	jne	0x40900e
0x408fb7:	add	rdi, 1
0x408fbb:	jmp	0x408fa3
0x408fbd:	sub	rbp, r12
0x408fc0:	mov	esi, 0x4bf390
0x408fc5:	xor	edi, edi
0x408fc7:	xor	eax, eax
0x408fc9:	lea	rdx, [rbp + 1]
0x408fcd:	call	0x43f5d0
0x408fd2:	mov	rdx, rbp
0x408fd5:	mov	esi, 0x4bf3c8
0x408fda:	xor	edi, edi
0x408fdc:	xor	eax, eax
0x408fde:	sub	rdx, r12
0x408fe1:	call	0x43f5d0
0x408fe6:	cmp	dword ptr [rip + 0xdcff3], 0
0x408fed:	je	0x439b9c
0x408ff3:	mov	rdi, qword ptr [rip + 0xda0a6]
0x408ffa:	mov	rdx, rbp
0x408ffd:	mov	esi, 0x4be463
0x409002:	xor	eax, eax
0x409004:	call	0x43a390
0x409009:	jmp	0x439b9c
0x40900e:	cmp	dl, 0x20
0x409011:	je	0x40902c
0x409013:	cmp	dl, 9
0x409016:	je	0x40902c
0x409018:	sub	rdi, r12
0x40901b:	mov	esi, 0x4bf3c8
0x409020:	xor	eax, eax
0x409022:	mov	rdx, rdi
0x409025:	xor	edi, edi
0x409027:	call	0x43f5d0
0x40902c:	mov	esi, edi
0x40902e:	mov	byte ptr [rdi], 0
0x409031:	lea	r15, [rdi + 1]
0x409035:	sub	esi, ebp
0x409037:	mov	dword ptr [rsp + 0x1c], esi
0x40903b:	movzx	r9d, byte ptr [r15]
0x40903f:	cmp	r9b, 0x20
0x409043:	je	0x40904b
0x409045:	cmp	r9b, 9
0x409049:	jne	0x409051
0x40904b:	add	r15, 1
0x40904f:	jmp	0x40903b
0x409051:	test	byte ptr [r9 + r9 + 0x4bc840], 0x88
0x40905a:	je	0x409079
0x40905c:	mov	r8, r15
0x40905f:	movzx	r10d, byte ptr [r8]
0x409063:	test	r10b, r10b
0x409066:	je	0x40908d
0x409068:	test	byte ptr [r10 + r10 + 0x4bc840], 0x40
0x409071:	jne	0x40908d
0x409073:	add	r8, 1
0x409077:	jmp	0x40905f
0x409079:	mov	rdx, r15
0x40907c:	mov	esi, 0x4bf3c8
0x409081:	xor	edi, edi
0x409083:	xor	eax, eax
0x409085:	sub	rdx, r12
0x409088:	call	0x43f5d0
0x40908d:	cmp	r8, rbx
0x409090:	jne	0x4090b7
0x409092:	mov	byte ptr [r8], 0
0x409096:	mov	rbx, qword ptr [rip + 0xda203]
0x40909d:	mov	qword ptr [rsp], rbx
0x4090a1:	test	rbx, rbx
0x4090a4:	je	0x4090cb
0x4090a6:	mov	r11d, dword ptr [rsp + 0x1c]
0x4090ab:	cmp	dword ptr [rbx + 0x20], r11d
0x4090af:	je	0x4090dc
0x4090b1:	mov	rbx, qword ptr [rbx + 0x18]
0x4090b5:	jmp	0x4090a1
0x4090b7:	sub	r8, r12
0x4090ba:	mov	esi, 0x4bf3c8
0x4090bf:	xor	edi, edi
0x4090c1:	xor	eax, eax
0x4090c3:	mov	rdx, r8
0x4090c6:	call	0x43f5d0
0x4090cb:	mov	rdx, rbp
0x4090ce:	mov	esi, 0x4bf4c8
0x4090d3:	xor	edi, edi
0x4090d5:	xor	eax, eax
0x4090d7:	call	0x43f5d0
0x4090dc:	mov	rdi, qword ptr [rbx]
0x4090df:	mov	rsi, rbp
0x4090e2:	call	0x403be0
0x4090e7:	test	eax, eax
0x4090e9:	jne	0x4090b1
0x4090eb:	mov	rsi, r15
0x4090ee:	mov	rdi, rbp
0x4090f1:	call	0x403be0
0x4090f6:	test	eax, eax
0x4090f8:	je	0x439b9c
0x4090fe:	cmp	qword ptr [rsp], 0
0x409103:	je	0x409126
0x409105:	mov	rdx, qword ptr [rsp]
0x409109:	mov	rsi, r15
0x40910c:	mov	rdi, qword ptr [rdx]
0x40910f:	call	0x403be0
0x409114:	test	eax, eax
0x409116:	je	0x40915c
0x409118:	mov	rcx, qword ptr [rsp]
0x40911c:	mov	rsi, qword ptr [rcx + 0x18]
0x409120:	mov	qword ptr [rsp], rsi
0x409124:	jmp	0x4090fe
0x409126:	cmp	dword ptr [rip + 0xdceb3], 0
0x40912d:	jne	0x409173
0x40912f:	mov	rbp, qword ptr [rbx + 0x10]
0x409133:	mov	edx, r13d
0x409136:	mov	rdi, r15
0x409139:	mov	rsi, qword ptr [rbp]
0x40913d:	call	0x439e20
0x409142:	cmp	byte ptr [rbx + 0x25], 0
0x409146:	jne	0x40918e
0x409148:	mov	rdi, qword ptr [rbx + 0x10]
0x40914c:	mov	qword ptr [rdi], 0x4c4893
0x409153:	mov	byte ptr [rbx + 0x25], 0
0x409157:	jmp	0x439b9c
0x40915c:	mov	rdx, qword ptr [rsp + 0x10]
0x409161:	mov	r8, r15
0x409164:	mov	rcx, rbp
0x409167:	mov	esi, 0x4bf400
0x40916c:	xor	edi, edi
0x40916e:	call	0x43f5d0
0x409173:	mov	rdi, qword ptr [rip + 0xd9f26]
0x40917a:	mov	rcx, r15
0x40917d:	mov	rdx, rbp
0x409180:	xor	eax, eax
0x409182:	mov	esi, 0x4be489
0x409187:	call	0x43a390
0x40918c:	jmp	0x40912f
0x40918e:	mov	rax, qword ptr [rbx + 0x10]
0x409192:	mov	rdi, qword ptr [rax]
0x409195:	call	0x403830
0x40919a:	jmp	0x409148
0x40919c:	mov	eax, 1
0x4091a1:	jmp	0x439d9c
0x4091a6:	mov	rcx, rax
0x4091a9:	add	rax, 1
0x4091ad:	cmp	byte ptr [rax], 0xa
0x4091b0:	jne	0x4091a6
0x4091b2:	lea	rax, [rcx + 2]
0x4091b6:	jmp	0x439de3
0x4091bb:	mov	rdi, r12
0x4091be:	call	0x403830
0x4091c3:	jmp	0x439ea9
0x4091c8:	movzx	r10d, byte ptr [r13 + 1]
0x4091cd:	test	byte ptr [r10 + r10 + 0x4bc840], 0x40
0x4091d6:	je	0x439e8b
0x4091dc:	lea	rsi, [r13 + 1]
0x4091e0:	xor	edx, edx
0x4091e2:	mov	rdi, r12
0x4091e5:	xor	eax, eax
0x4091e7:	call	0x42d870
0x4091ec:	jmp	0x439e93
0x4091f1:	mov	rbp, qword ptr [rdi + 0x10]
0x4091f5:	mov	esi, 0x4cd89a
0x4091fa:	mov	rdi, rbp
0x4091fd:	call	0x403be0
0x409202:	test	eax, eax
0x409204:	je	0x40922f
0x409206:	mov	rdx, rbp
0x409209:	mov	esi, 0x4bf4f8
0x40920e:	xor	edi, edi
0x409210:	xor	eax, eax
0x409212:	call	0x43f5d0
0x409217:	or	eax, 8
0x40921a:	add	rdx, 0x18
0x40921e:	mov	dword ptr [rdx - 0x18], eax
0x409221:	cmp	rdx, rsi
0x409224:	jne	0x43a0f6
0x40922a:	jmp	0x43a235
0x40922f:	mov	esi, 0x4bf520
0x409234:	xor	edi, edi
0x409236:	xor	eax, eax
0x409238:	call	0x43f5d0
0x40923d:	mov	rax, qword ptr [rdi + 0x40]
0x409241:	lea	rdx, [rdi + 0x28]
0x409245:	mov	rdi, qword ptr [rdi + 0x20]
0x409249:	xor	ecx, ecx
0x40924b:	mov	r8d, 1
0x409251:	lea	rsi, [rax - 1]
0x409255:	call	0x438ef0
0x40925a:	jmp	0x43a374
0x40925f:	mov	esi, 1
0x409264:	mov	edi, 0x4e48e0
0x409269:	call	0x4316f0
0x40926e:	jmp	0x43a6a7
0x409273:	cmp	r10b, 0xa
0x409277:	jne	0x4092ae
0x409279:	sub	r15, r12
0x40927c:	mov	rax, rsp
0x40927f:	lea	rdx, [r15 + 0x18]
0x409283:	mov	r13, r15
0x409286:	mov	r11, rdx
0x409289:	and	rdx, 0xfffffffffffff000
0x409290:	and	r11, 0xfffffffffffffff0
0x409294:	sub	rax, rdx
0x409297:	cmp	rsp, rax
0x40929a:	je	0x4092b7
0x40929c:	sub	rsp, 0x1000
0x4092a3:	or	qword ptr [rsp + 0xff8], 0
0x4092ac:	jmp	0x409297
0x4092ae:	add	r15, 1
0x4092b2:	jmp	0x43aac8
0x4092b7:	and	r11d, 0xfff
0x4092be:	sub	rsp, r11
0x4092c1:	test	r11, r11
0x4092c4:	jne	0x409355
0x4092ca:	lea	rdi, [rsp + 0xf]
0x4092cf:	mov	rdx, r13
0x4092d2:	mov	rsi, r12
0x4092d5:	and	rdi, 0xfffffffffffffff0
0x4092d9:	call	0x4038b0
0x4092de:	mov	byte ptr [rax + r13], 0
0x4092e3:	mov	rdi, rax
0x4092e6:	call	0x403a20
0x4092eb:	mov	edi, 0x4c6bf0
0x4092f0:	mov	rsi, rax
0x4092f3:	xor	eax, eax
0x4092f5:	call	0x43dd90
0x4092fa:	or	eax, 0xffffffff
0x4092fd:	jmp	0x43a6dd
0x409302:	call	0x43a4c0
0x409307:	mov	r14, r13
0x40930a:	mov	dword ptr [rip + 0xdd000], 0
0x409314:	mov	dword ptr [rip + 0xdcff2], 0
0x40931e:	mov	dword ptr [rip + 0xdcfe4], 0
0x409328:	mov	dword ptr [rip + 0xdcfd6], 0
0x409332:	mov	dword ptr [rip + 0xdcfc8], 0
0x40933c:	mov	dword ptr [rip + 0xdcfba], 0
0x409346:	jmp	0x43a58e
0x40934b:	call	0x43e3d0
0x409350:	jmp	0x43a58e
0x409355:	or	qword ptr [rsp + r11 - 8], 0
0x40935b:	jmp	0x4092ca
0x409360:	xor	edx, edx
0x409362:	mov	esi, 1
0x409367:	mov	edi, 0x462748
0x40936c:	call	0x43a4f0
0x409371:	xor	edx, edx
0x409373:	xor	esi, esi
0x409375:	mov	edi, 0x4c6c55
0x40937a:	call	0x43a4f0
0x40937f:	mov	rdi, qword ptr [rip + 0xdb672]
0x409386:	xor	edx, edx
0x409388:	mov	esi, 1
0x40938d:	call	0x43a4f0
0x409392:	xor	edx, edx
0x409394:	xor	esi, esi
0x409396:	mov	edi, 0x4c6c55
0x40939b:	call	0x43a4f0
0x4093a0:	jmp	0x43abdb
0x4093a5:	mov	rdx, qword ptr [rip + 0xdb64c]
0x4093ac:	xor	ecx, ecx
0x4093ae:	mov	esi, 0x489e38
0x4093b3:	xor	eax, eax
0x4093b5:	mov	edi, 0x4be4d8
0x4093ba:	call	0x42d870
0x4093bf:	mov	qword ptr [rbp - 0xb8], rax
0x4093c6:	jmp	0x43ace5
0x4093cb:	cmp	qword ptr [rip + 0xdb5fd], 0
0x4093d3:	je	0x43ac8a
0x4093d9:	xor	edx, edx
0x4093db:	mov	esi, 1
0x4093e0:	mov	edi, 0x462771
0x4093e5:	call	0x43a4f0
0x4093ea:	xor	edx, edx
0x4093ec:	xor	esi, esi
0x4093ee:	mov	edi, 0x4c6c55
0x4093f3:	call	0x43a4f0
0x4093f8:	mov	rdi, qword ptr [rip + 0xdb5e9]
0x4093ff:	xor	edx, edx
0x409401:	mov	esi, 1
0x409406:	call	0x43a4f0
0x40940b:	mov	rdi, qword ptr [rip + 0xdb5be]
0x409412:	test	rdi, rdi
0x409415:	je	0x409423
0x409417:	xor	edx, edx
0x409419:	mov	esi, 1
0x40941e:	call	0x43a4f0
0x409423:	xor	edx, edx
0x409425:	xor	esi, esi
0x409427:	mov	edi, 0x4c6c55
0x40942c:	call	0x43a4f0
0x409431:	jmp	0x43ac8a
0x409436:	test	al, al
0x409438:	jne	0x40946f
0x40943a:	mov	r13, r14
0x40943d:	mov	rcx, rsp
0x409440:	sub	r13, r12
0x409443:	lea	rsi, [r13 + 0x18]
0x409447:	mov	rdi, rsi
0x40944a:	and	rsi, 0xfffffffffffff000
0x409451:	and	rdi, 0xfffffffffffffff0
0x409455:	sub	rcx, rsi
0x409458:	cmp	rsp, rcx
0x40945b:	je	0x409478
0x40945d:	sub	rsp, 0x1000
0x409464:	or	qword ptr [rsp + 0xff8], 0
0x40946d:	jmp	0x409458
0x40946f:	add	r14, 1
0x409473:	jmp	0x43aadd
0x409478:	and	edi, 0xfff
0x40947e:	sub	rsp, rdi
0x409481:	test	rdi, rdi
0x409484:	jne	0x4094dd
0x409486:	lea	rdi, [rsp + 0xf]
0x40948b:	mov	rdx, r13
0x40948e:	mov	rsi, r12
0x409491:	and	rdi, 0xfffffffffffffff0
0x409495:	call	0x4038b0
0x40949a:	mov	byte ptr [rax + r13], 0
0x40949f:	mov	rdi, rax
0x4094a2:	call	0x403a20
0x4094a7:	xor	edi, edi
0x4094a9:	mov	esi, 0x4c6bf0
0x4094ae:	mov	rdx, rax
0x4094b1:	xor	eax, eax
0x4094b3:	call	0x43ff00
0x4094b8:	cmp	byte ptr [r14], 0
0x4094bc:	je	0x43a6cf
0x4094c2:	add	r14, 1
0x4094c6:	jmp	0x43a58e
0x4094cb:	mov	rsi, r13
0x4094ce:	mov	edi, 0x4e48e0
0x4094d3:	call	0x4316f0
0x4094d8:	jmp	0x43ab5c
0x4094dd:	or	qword ptr [rsp + rdi - 8], 0
0x4094e3:	jmp	0x409486
0x4094e5:	cmp	dword ptr [rbx + 8], r14d
0x4094e9:	je	0x4094f4
0x4094eb:	mov	rbx, qword ptr [rbx + 0x20]
0x4094ef:	jmp	0x43a7e5
0x4094f4:	mov	rdi, qword ptr [rbx]
0x4094f7:	mov	rsi, r15
0x4094fa:	mov	qword ptr [rbp - 0x118], rdx
0x409501:	call	0x4038d0
0x409506:	mov	rdx, qword ptr [rbp - 0x118]
0x40950d:	test	eax, eax
0x40950f:	jne	0x4094eb
0x409511:	cmp	byte ptr [rbp - 0x110], 0x55
0x409518:	sete	dil
0x40951c:	or	edi, r13d
0x40951f:	movzx	r9d, dil
0x409523:	cmp	dword ptr [rbx + 0xc], r9d
0x409527:	jne	0x4094eb
0x409529:	mov	r10, rbx
0x40952c:	mov	ebx, r13d
0x40952f:	mov	eax, r12d
0x409532:	mov	r13d, r14d
0x409535:	mov	r12, r15
0x409538:	mov	r14, qword ptr [rbp - 0xf8]
0x40953f:	mov	r15d, dword ptr [rbp - 0x100]
0x409546:	test	bl, bl
0x409548:	jne	0x43a844
0x40954e:	cmp	byte ptr [rbp - 0xf0], 0
0x409555:	jne	0x43a844
0x40955b:	jmp	0x43a8de
0x409560:	mov	rsi, rbx
0x409563:	mov	edi, 0x4e48e0
0x409568:	mov	qword ptr [rbp - 0xe8], r11
0x40956f:	call	0x4316f0
0x409574:	mov	r11, qword ptr [rbp - 0xe8]
0x40957b:	jmp	0x43a913
0x409580:	mov	eax, dword ptr [r11 + 4]
0x409584:	mov	edx, 1
0x409589:	xor	esi, esi
0x40958b:	sub	eax, 1
0x40958e:	mov	rdi, qword ptr [r11 + rax*8 + 8]
0x409593:	call	0x43d0d0
0x409598:	jmp	0x43a58e
0x40959d:	xor	edx, edx
0x40959f:	jmp	0x43ae58
0x4095a4:	mov	rdx, qword ptr [rbp - 0xd0]
0x4095ab:	movsx	ecx, r10b
0x4095af:	xor	edi, edi
0x4095b1:	xor	eax, eax
0x4095b3:	mov	esi, 0x4bf568
0x4095b8:	call	0x43f5d0
0x4095bd:	xor	r12d, r12d
0x4095c0:	jmp	0x43ae1b
0x4095c5:	or	eax, 0xffffffff
0x4095c8:	jmp	0x43a6dd
0x4095cd:	mov	dword ptr [rip + 0xdcd3d], 1
0x4095d7:	jmp	0x43a6cf
0x4095dc:	cmp	dword ptr [rip + 0xd9cb9], 0
0x4095e3:	jne	0x43a755
0x4095e9:	lea	rsi, [rbp - 0xc0]
0x4095f0:	mov	edi, 0x45b537
0x4095f5:	mov	dword ptr [rbp - 0xe8], r8d
0x4095fc:	call	0x403c40
0x409601:	mov	r8d, dword ptr [rbp - 0xe8]
0x409608:	test	eax, eax
0x40960a:	jne	0x43a755
0x409610:	mov	r14d, dword ptr [rbp - 0xa8]
0x409617:	and	r14d, 0xf000
0x40961e:	cmp	r14d, 0x4000
0x409625:	je	0x43a755
0x40962b:	mov	esi, 2
0x409630:	mov	edi, 0x45b537
0x409635:	call	0x403dc0
0x40963a:	mov	r8d, dword ptr [rbp - 0xe8]
0x409641:	test	eax, eax
0x409643:	jne	0x43a755
0x409649:	mov	rdx, qword ptr [rip + 0xdb2b0]
0x409650:	sub	rdx, qword ptr [rip + 0xdb2a1]
0x409657:	cmp	rdx, 8
0x40965b:	jbe	0x409d0b
0x409661:	mov	r11, qword ptr [rip + 0xdb290]
0x409668:	mov	r14, r12
0x40966b:	movabs	rax, 0x6c756e2f7665642f
0x409675:	mov	dword ptr [rip + 0xdcc91], 0
0x40967f:	mov	dword ptr [rip + 0xdcc8b], 1
0x409689:	mov	qword ptr [r11], rax
0x40968c:	mov	byte ptr [r11 + 8], 0x6c
0x409691:	add	qword ptr [rip + 0xdb25f], 9
0x409699:	jmp	0x43a58e
0x40969e:	mov	rcx, qword ptr [rip + 0xdb253]
0x4096a5:	cmp	qword ptr [rip + 0xdb254], rcx
0x4096ac:	je	0x409707
0x4096ae:	mov	rbx, qword ptr [rip + 0xdb243]
0x4096b5:	mov	r14, r12
0x4096b8:	mov	dword ptr [rip + 0xdcc4e], 0
0x4096c2:	mov	dword ptr [rip + 0xdcc48], 1
0x4096cc:	lea	rsi, [rbx + 1]
0x4096d0:	mov	qword ptr [rip + 0xdb221], rsi
0x4096d7:	mov	byte ptr [rbx], 0x2d
0x4096da:	movzx	edi, byte ptr [r14]
0x4096de:	cmp	dil, 0x2e
0x4096e2:	je	0x4096f7
0x4096e4:	movzx	r8d, dil
0x4096e8:	test	byte ptr [r8 + r8 + 0x4bc840], 0x8c
0x4096f1:	je	0x40a298
0x4096f7:	add	r14, 1
0x4096fb:	jmp	0x4096da
0x4096fd:	call	0x43e3b0
0x409702:	jmp	0x43af4b
0x409707:	mov	esi, 1
0x40970c:	mov	edi, 0x4e48e0
0x409711:	call	0x4316f0
0x409716:	jmp	0x4096ae
0x409718:	mov	rdx, qword ptr [rbp - 0xd0]
0x40971f:	mov	esi, 0x4be4b9
0x409724:	xor	edi, edi
0x409726:	xor	eax, eax
0x409728:	call	0x43f5d0
0x40972d:	mov	rdi, qword ptr [rip + 0xdc944]
0x409734:	mov	r14, r12
0x409737:	call	0x43c930
0x40973c:	jmp	0x43a58e
0x409741:	call	0x43e3b0
0x409746:	jmp	0x43ab0a
0x40974b:	mov	rdx, qword ptr [rbp - 0xd0]
0x409752:	movsx	ecx, sil
0x409756:	xor	edi, edi
0x409758:	xor	eax, eax
0x40975a:	mov	esi, 0x4bf588
0x40975f:	call	0x43f5d0
0x409764:	mov	rdx, qword ptr [rip + 0xd9acd]
0x40976b:	mov	r11, qword ptr [rip + 0xd9ace]
0x409772:	lea	eax, [rdx + 1]
0x409775:	test	r13d, r13d
0x409778:	je	0x40982d
0x40977e:	test	r11, r11
0x409781:	jne	0x409d5d
0x409787:	cmp	dword ptr [rip + 0xdcb62], 0
0x40978e:	mov	byte ptr [rbp - 0xf0], 0
0x409795:	jne	0x4097af
0x409797:	cmp	byte ptr [rip + 0xd9ab2], 0
0x40979e:	jne	0x4097af
0x4097a0:	mov	byte ptr [rbp - 0xf0], 1
0x4097a7:	add	r12, 1
0x4097ab:	sub	r13d, 1
0x4097af:	lea	r9d, [r13 + rax]
0x4097b4:	mov	r10d, dword ptr [rip + 0xdcb35]
0x4097bb:	mov	rcx, rsp
0x4097be:	add	r9d, r10d
0x4097c1:	movsxd	rax, r9d
0x4097c4:	mov	dword ptr [rip + 0xdcb15], r9d
0x4097cb:	lea	rsi, [rax + 0x17]
0x4097cf:	mov	qword ptr [rbp - 0x100], rax
0x4097d6:	mov	r11, rsi
0x4097d9:	and	rsi, 0xfffffffffffff000
0x4097e0:	and	r11, 0xfffffffffffffff0
0x4097e4:	sub	rcx, rsi
0x4097e7:	cmp	rsp, rcx
0x4097ea:	je	0x409d65
0x4097f0:	sub	rsp, 0x1000
0x4097f7:	or	qword ptr [rsp + 0xff8], 0
0x409800:	jmp	0x4097e7
0x409802:	mov	rsi, r12
0x409805:	xor	edx, edx
0x409807:	mov	edi, 0x4be4d4
0x40980c:	xor	eax, eax
0x40980e:	mov	dword ptr [rbp - 0xf0], r8d
0x409815:	add	r13d, 3
0x409819:	call	0x42d870
0x40981e:	mov	r8d, dword ptr [rbp - 0xf0]
0x409825:	mov	r12, rax
0x409828:	jmp	0x43a7a4
0x40982d:	mov	r9d, eax
0x409830:	test	r11, r11
0x409833:	je	0x409876
0x409835:	add	eax, r11d
0x409838:	mov	rdi, rsp
0x40983b:	mov	dword ptr [rip + 0xdca9f], eax
0x409841:	cdqe	
0x409843:	lea	rsi, [rax + 0x17]
0x409847:	mov	qword ptr [rbp - 0x100], rax
0x40984e:	mov	rcx, rsi
0x409851:	and	rsi, 0xfffffffffffff000
0x409858:	and	rcx, 0xfffffffffffffff0
0x40985c:	sub	rdi, rsi
0x40985f:	cmp	rsp, rdi
0x409862:	je	0x409882
0x409864:	sub	rsp, 0x1000
0x40986b:	or	qword ptr [rsp + 0xff8], 0
0x409874:	jmp	0x40985f
0x409876:	mov	byte ptr [rbp - 0xf0], 0
0x40987d:	jmp	0x4097b4
0x409882:	and	ecx, 0xfff
0x409888:	sub	rsp, rcx
0x40988b:	test	rcx, rcx
0x40988e:	jne	0x40a3ac
0x409894:	lea	rdi, [rsp + 0xf]
0x409899:	and	rdi, 0xfffffffffffffff0
0x40989d:	mov	qword ptr [rbp - 0xf8], rdi
0x4098a4:	test	rdx, rdx
0x4098a7:	jne	0x40a3bc
0x4098ad:	mov	rsi, qword ptr [rip + 0xd9994]
0x4098b4:	add	rdi, rdx
0x4098b7:	mov	rdx, r11
0x4098ba:	mov	dword ptr [rbp - 0x108], r8d
0x4098c1:	call	0x403c60
0x4098c6:	mov	byte ptr [rbp - 0xf0], 0
0x4098cd:	mov	r8d, dword ptr [rbp - 0x108]
0x4098d4:	mov	dword ptr [rbp - 0x108], r8d
0x4098db:	movsxd	rdx, r13d
0x4098de:	mov	rsi, r12
0x4098e1:	mov	r8, qword ptr [rbp - 0x100]
0x4098e8:	sub	r8, 1
0x4098ec:	mov	rdi, r8
0x4098ef:	mov	qword ptr [rbp - 0x100], r8
0x4098f6:	sub	rdi, rdx
0x4098f9:	add	rdi, qword ptr [rbp - 0xf8]
0x409900:	call	0x403c60
0x409905:	cmp	byte ptr [rbp - 0xf0], 0
0x40990c:	mov	rdx, qword ptr [rbp - 0x100]
0x409913:	mov	edi, dword ptr [rbp - 0x108]
0x409919:	je	0x409923
0x40991b:	sub	r12, 1
0x40991f:	add	r13d, 1
0x409923:	mov	dword ptr [rbp - 0x100], edi
0x409929:	mov	rdi, qword ptr [rbp - 0xf8]
0x409930:	mov	r9, qword ptr [rip + 0xdc721]
0x409937:	mov	byte ptr [rdi + rdx], 0
0x40993b:	mov	rsi, r9
0x40993e:	mov	qword ptr [rip + 0xdc993], rdi
0x409945:	mov	qword ptr [rbp - 0xf0], r9
0x40994c:	call	0x403be0
0x409951:	mov	r8d, dword ptr [rbp - 0x100]
0x409958:	test	eax, eax
0x40995a:	je	0x43a7b1
0x409960:	cmp	dword ptr [rip + 0xdc969], 0
0x409967:	mov	r10, qword ptr [rbp - 0xf0]
0x40996e:	je	0x409e8d
0x409974:	cmp	dword ptr [rip + 0xdc955], 1
0x40997b:	je	0x409ec0
0x409981:	movsxd	r13, dword ptr [rip + 0xdc958]
0x409988:	mov	rdi, qword ptr [rip + 0xdc949]
0x40998f:	lea	esi, [r13 - 1]
0x409993:	call	0x438640
0x409998:	mov	rdx, qword ptr [rip + 0xdaf61]
0x40999f:	sub	rdx, qword ptr [rip + 0xdaf52]
0x4099a6:	mov	qword ptr [rip + 0xdc92b], rax
0x4099ad:	cmp	r13, rdx
0x4099b0:	ja	0x409f16
0x4099b6:	mov	rsi, qword ptr [rip + 0xdc91b]
0x4099bd:	mov	rdi, qword ptr [rip + 0xdaf34]
0x4099c4:	mov	rdx, r13
0x4099c7:	call	0x403c60
0x4099cc:	add	qword ptr [rip + 0xdaf25], r13
0x4099d3:	mov	dword ptr [rip + 0xdc937], 1
0x4099dd:	mov	dword ptr [rip + 0xdc929], 0
0x4099e7:	jmp	0x43a58e
0x4099ec:	cmp	dword ptr [rip + 0xdc901], 0
0x4099f3:	je	0x409b61
0x4099f9:	mov	rdi, qword ptr [rip + 0xdaf00]
0x409a00:	mov	rdx, rdi
0x409a03:	sub	rdx, qword ptr [rip + 0xdaeee]
0x409a0a:	cmp	dword ptr [rip + 0xdc8fb], 0
0x409a11:	jne	0x409a5d
0x409a13:	mov	r14, qword ptr [rip + 0xd981e]
0x409a1a:	test	r14, r14
0x409a1d:	je	0x409bd8
0x409a23:	cmp	r14, rdx
0x409a26:	ja	0x409c19
0x409a2c:	mov	rdi, qword ptr [rip + 0xdaec5]
0x409a33:	mov	rsi, qword ptr [rip + 0xd982e]
0x409a3a:	mov	rdx, r14
0x409a3d:	call	0x403c60
0x409a42:	add	qword ptr [rip + 0xdaeaf], r14
0x409a49:	cmp	dword ptr [rip + 0xdc8bc], 0
0x409a50:	mov	rdi, qword ptr [rip + 0xdaea9]
0x409a57:	je	0x409bd8
0x409a5d:	movsxd	rbx, dword ptr [rip + 0xdc88c]
0x409a64:	sub	rdi, qword ptr [rip + 0xdae8d]
0x409a6b:	cmp	rbx, rdi
0x409a6e:	ja	0x409b75
0x409a74:	mov	rsi, qword ptr [rip + 0xdc86d]
0x409a7b:	mov	rdi, qword ptr [rip + 0xdae76]
0x409a82:	mov	rdx, rbx
0x409a85:	call	0x403c60
0x409a8a:	add	rbx, qword ptr [rip + 0xdae67]
0x409a91:	mov	r13, qword ptr [rip + 0xdae68]
0x409a98:	mov	qword ptr [rip + 0xdae59], rbx
0x409a9f:	mov	r10, r13
0x409aa2:	sub	r10, rbx
0x409aa5:	cmp	dword ptr [rip + 0xdc594], 0
0x409aac:	js	0x409c2b
0x409ab2:	mov	r8d, dword ptr [rip + 0xdc83b]
0x409ab9:	sub	r8d, dword ptr [rip + 0xdc830]
0x409ac0:	movsxd	r14, r8d
0x409ac3:	sub	r13, qword ptr [rip + 0xdae2e]
0x409aca:	cmp	r14, r13
0x409acd:	ja	0x409c55
0x409ad3:	mov	rdi, qword ptr [rip + 0xdae1e]
0x409ada:	movsxd	rsi, dword ptr [rip + 0xdc80f]
0x409ae1:	mov	rdx, r14
0x409ae4:	add	rsi, qword ptr [rip + 0xdc7fd]
0x409aeb:	call	0x403c60
0x409af0:	add	qword ptr [rip + 0xdae01], r14
0x409af7:	mov	r14, r12
0x409afa:	mov	dword ptr [rip + 0xdc810], 1
0x409b04:	jmp	0x43a58e
0x409b09:	mov	r13, qword ptr [rip + 0xdaec8]
0x409b10:	mov	r14, qword ptr [rip + 0xdade9]
0x409b17:	mov	r8, qword ptr [rip + 0xdadda]
0x409b1e:	test	r13, r13
0x409b21:	je	0x409b87
0x409b23:	mov	rdi, r13
0x409b26:	mov	qword ptr [rbp - 0xe8], r8
0x409b2d:	call	0x4039e0
0x409b32:	mov	rbx, rax
0x409b35:	mov	rax, qword ptr [rbp - 0xe8]
0x409b3c:	sub	r14, rax
0x409b3f:	cmp	rbx, r14
0x409b42:	ja	0x409ba3
0x409b44:	mov	rdx, rbx
0x409b47:	mov	rsi, r13
0x409b4a:	mov	rdi, rax
0x409b4d:	mov	r14, r12
0x409b50:	call	0x403c60
0x409b55:	add	qword ptr [rip + 0xdad9c], rbx
0x409b5c:	jmp	0x43a58e
0x409b61:	mov	edx, 0x4be4ca
0x409b66:	mov	esi, 0x1869
0x409b6b:	mov	edi, 0x45b1e2
0x409b70:	call	0x415bba
0x409b75:	mov	rsi, rbx
0x409b78:	mov	edi, 0x4e48e0
0x409b7d:	call	0x4316f0
0x409b82:	jmp	0x409a74
0x409b87:	cmp	r14, r8
0x409b8a:	je	0x409bc0
0x409b8c:	lea	rsi, [r8 + 1]
0x409b90:	mov	r14, r12
0x409b93:	mov	qword ptr [rip + 0xdad5e], rsi
0x409b9a:	mov	byte ptr [r8], 0x2e
0x409b9e:	jmp	0x43a58e
0x409ba3:	mov	rsi, rbx
0x409ba6:	mov	edi, 0x4e48e0
0x409bab:	call	0x4316f0
0x409bb0:	mov	rax, qword ptr [rip + 0xdad41]
0x409bb7:	mov	r13, qword ptr [rip + 0xdae1a]
0x409bbe:	jmp	0x409b44
0x409bc0:	mov	esi, 1
0x409bc5:	mov	edi, 0x4e48e0
0x409bca:	call	0x4316f0
0x409bcf:	mov	r8, qword ptr [rip + 0xdad22]
0x409bd6:	jmp	0x409b8c
0x409bd8:	mov	rbx, qword ptr [rip + 0xd9661]
0x409bdf:	mov	r9, rdi
0x409be2:	sub	r9, qword ptr [rip + 0xdad0f]
0x409be9:	test	rbx, rbx
0x409bec:	je	0x409a5d
0x409bf2:	cmp	rbx, r9
0x409bf5:	ja	0x409c67
0x409bf7:	mov	rsi, qword ptr [rip + 0xd964a]
0x409bfe:	mov	rdi, qword ptr [rip + 0xdacf3]
0x409c05:	mov	rdx, rbx
0x409c08:	call	0x403c60
0x409c0d:	add	rbx, qword ptr [rip + 0xdace4]
0x409c14:	jmp	0x409a91
0x409c19:	mov	rsi, r14
0x409c1c:	mov	edi, 0x4e48e0
0x409c21:	call	0x4316f0
0x409c26:	jmp	0x409a2c
0x409c2b:	cmp	r10, 2
0x409c2f:	jbe	0x409c76
0x409c31:	mov	rax, qword ptr [rip + 0xdacc0]
0x409c38:	mov	word ptr [rax], 0x672e
0x409c3d:	mov	byte ptr [rax + 2], 0x6b
0x409c41:	mov	r13, qword ptr [rip + 0xdacb8]
0x409c48:	add	qword ptr [rip + 0xdaca8], 3
0x409c50:	jmp	0x409ab2
0x409c55:	mov	rsi, r14
0x409c58:	mov	edi, 0x4e48e0
0x409c5d:	call	0x4316f0
0x409c62:	jmp	0x409ad3
0x409c67:	mov	rsi, rbx
0x409c6a:	mov	edi, 0x4e48e0
0x409c6f:	call	0x4316f0
0x409c74:	jmp	0x409bf7
0x409c76:	mov	esi, 3
0x409c7b:	mov	edi, 0x4e48e0
0x409c80:	call	0x4316f0
0x409c85:	jmp	0x409c31
0x409c87:	mov	rdi, qword ptr [rbp - 0xc8]
0x409c8e:	xor	edx, edx
0x409c90:	mov	esi, 1
0x409c95:	call	0x43a4f0
0x409c9a:	jmp	0x43ad79
0x409c9f:	mov	edi, 0x4bf5c8
0x409ca4:	xor	eax, eax
0x409ca6:	mov	r14, r12
0x409ca9:	call	0x43dd90
0x409cae:	jmp	0x43a58e
0x409cb3:	call	0x43e3d0
0x409cb8:	jmp	0x43ab23
0x409cbd:	cmp	byte ptr [r14 + 1], 0x4f
0x409cc2:	jne	0x43a797
0x409cc8:	lea	r9, [r14 + 2]
0x409ccc:	movzx	r14d, byte ptr [r14 + 2]
0x409cd1:	mov	qword ptr [rbp - 0xf0], r9
0x409cd8:	cmp	r14b, 0x2e
0x409cdc:	je	0x409d1f
0x409cde:	movzx	r10d, r14b
0x409ce2:	test	byte ptr [r10 + r10 + 0x4bc840], 0x8c
0x409ceb:	jne	0x409d1f
0x409ced:	test	ecx, ecx
0x409cef:	jne	0x409e3a
0x409cf5:	mov	r12d, 0x4be4b6
0x409cfb:	mov	r14, qword ptr [rbp - 0xf0]
0x409d02:	lea	r13d, [rcx + 2]
0x409d06:	jmp	0x43a797
0x409d0b:	mov	esi, 9
0x409d10:	mov	edi, 0x4e48e0
0x409d15:	call	0x4316f0
0x409d1a:	jmp	0x409661
0x409d1f:	mov	rdx, qword ptr [rbp - 0xd0]
0x409d26:	movsx	ecx, r14b
0x409d2a:	xor	edi, edi
0x409d2c:	xor	eax, eax
0x409d2e:	mov	esi, 0x4bf548
0x409d33:	call	0x43f5d0
0x409d38:	mov	esi, r8d
0x409d3b:	mov	edi, 0x4bf608
0x409d40:	xor	eax, eax
0x409d42:	mov	r14, r12
0x409d45:	call	0x43dd90
0x409d4a:	jmp	0x43a58e
0x409d4f:	movsx	ebx, byte ptr [r14 + 1]
0x409d54:	lea	r13, [r14 + 2]
0x409d58:	jmp	0x43a560
0x409d5d:	add	eax, r13d
0x409d60:	jmp	0x409835
0x409d65:	and	r11d, 0xfff
0x409d6c:	sub	rsp, r11
0x409d6f:	test	r11, r11
0x409d72:	jne	0x409db7
0x409d74:	lea	rdi, [rsp + 0xf]
0x409d79:	and	rdi, 0xfffffffffffffff0
0x409d7d:	mov	qword ptr [rbp - 0xf8], rdi
0x409d84:	test	rdx, rdx
0x409d87:	jne	0x409dbf
0x409d89:	test	r10d, r10d
0x409d8c:	je	0x4098d4
0x409d92:	mov	rsi, qword ptr [rip + 0xdc54f]
0x409d99:	add	rdi, rdx
0x409d9c:	movsxd	rdx, r10d
0x409d9f:	mov	dword ptr [rbp - 0x108], r8d
0x409da6:	call	0x403c60
0x409dab:	mov	r8d, dword ptr [rbp - 0x108]
0x409db2:	jmp	0x4098d4
0x409db7:	or	qword ptr [rsp + r11 - 8], 0
0x409dbd:	jmp	0x409d74
0x409dbf:	mov	rsi, qword ptr [rip + 0xd94a2]
0x409dc6:	mov	dword ptr [rbp - 0x110], r8d
0x409dcd:	mov	qword ptr [rbp - 0x108], rdx
0x409dd4:	call	0x403c60
0x409dd9:	mov	r10d, dword ptr [rip + 0xdc510]
0x409de0:	mov	rdx, qword ptr [rbp - 0x108]
0x409de7:	mov	r8d, dword ptr [rbp - 0x110]
0x409dee:	mov	rdi, rax
0x409df1:	jmp	0x409d89
0x409df3:	mov	edi, 0x4e48e0
0x409df8:	mov	esi, 1
0x409dfd:	mov	r14, r13
0x409e00:	call	0x4316f0
0x409e05:	mov	rdi, qword ptr [rip + 0xdaaec]
0x409e0c:	mov	dword ptr [rip + 0xdc4fe], 1
0x409e16:	lea	rax, [rdi + 1]
0x409e1a:	mov	qword ptr [rip + 0xdaad7], rax
0x409e21:	mov	byte ptr [rdi], bl
0x409e23:	jmp	0x43a58e
0x409e28:	mov	dword ptr [rip + 0xdc4ce], 1
0x409e32:	mov	r14, r13
0x409e35:	jmp	0x43a58e
0x409e3a:	movsxd	r13, ecx
0x409e3d:	mov	dword ptr [rbp - 0x100], r8d
0x409e44:	lea	rdi, [r13 + 3]
0x409e48:	mov	qword ptr [rbp - 0xf8], rcx
0x409e4f:	call	0x42db10
0x409e54:	mov	rdx, r13
0x409e57:	mov	rsi, r12
0x409e5a:	mov	r14, rax
0x409e5d:	mov	rdi, rax
0x409e60:	mov	qword ptr [rbp - 0xe8], rax
0x409e67:	call	0x4038b0
0x409e6c:	add	r14, r13
0x409e6f:	mov	rcx, qword ptr [rbp - 0xf8]
0x409e76:	mov	r8d, dword ptr [rbp - 0x100]
0x409e7d:	mov	word ptr [r14], 0x6f2e
0x409e83:	mov	byte ptr [r14 + 2], 0
0x409e88:	jmp	0x409cfb
0x409e8d:	mov	esi, 0x4e6240
0x409e92:	mov	rdi, r10
0x409e95:	mov	dword ptr [rbp - 0xf0], r8d
0x409e9c:	call	0x403c40
0x409ea1:	mov	r8d, dword ptr [rbp - 0xf0]
0x409ea8:	test	eax, eax
0x409eaa:	mov	dword ptr [rip + 0xdc420], eax
0x409eb0:	js	0x409974
0x409eb6:	mov	dword ptr [rip + 0xdc410], 1
0x409ec0:	mov	rdi, qword ptr [rip + 0xdc411]
0x409ec7:	lea	rsi, [rbp - 0xc0]
0x409ece:	mov	dword ptr [rbp - 0xf0], r8d
0x409ed5:	call	0x403c40
0x409eda:	test	eax, eax
0x409edc:	js	0x409981
0x409ee2:	mov	rax, qword ptr [rbp - 0xc0]
0x409ee9:	cmp	qword ptr [rip + 0xdc350], rax
0x409ef0:	mov	r8d, dword ptr [rbp - 0xf0]
0x409ef7:	jne	0x409981
0x409efd:	mov	rsi, qword ptr [rbp - 0xb8]
0x409f04:	cmp	qword ptr [rip + 0xdc33d], rsi
0x409f0b:	jne	0x409981
0x409f11:	jmp	0x43a7b1
0x409f16:	mov	rsi, r13
0x409f19:	mov	edi, 0x4e48e0
0x409f1e:	call	0x4316f0
0x409f23:	jmp	0x4099b6
0x409f28:	movsxd	rsi, dword ptr [rip + 0xdc141]
0x409f2f:	mov	rbx, qword ptr [rip + 0xdc12a]
0x409f36:	mov	r14, r12
0x409f39:	mov	qword ptr [rbx + rsi*8], 0
0x409f41:	jmp	0x43a58e
0x409f46:	cmp	dword ptr [rip + 0xdc3a7], 0
0x409f4d:	je	0x40a043
0x409f53:	mov	r14, qword ptr [rip + 0xda9a6]
0x409f5a:	mov	rsi, r14
0x409f5d:	sub	rsi, qword ptr [rip + 0xda994]
0x409f64:	cmp	dword ptr [rip + 0xdc3a1], 0
0x409f6b:	jne	0x409fb7
0x409f6d:	mov	rbx, qword ptr [rip + 0xd92c4]
0x409f74:	test	rbx, rbx
0x409f77:	je	0x40a2f7
0x409f7d:	cmp	rbx, rsi
0x409f80:	ja	0x40a338
0x409f86:	mov	rsi, qword ptr [rip + 0xd92db]
0x409f8d:	mov	rdi, qword ptr [rip + 0xda964]
0x409f94:	mov	rdx, rbx
0x409f97:	call	0x403c60
0x409f9c:	add	qword ptr [rip + 0xda955], rbx
0x409fa3:	cmp	dword ptr [rip + 0xdc362], 0
0x409faa:	mov	r14, qword ptr [rip + 0xda94f]
0x409fb1:	je	0x40a2f7
0x409fb7:	movsxd	r13, dword ptr [rip + 0xdc332]
0x409fbe:	sub	r14, qword ptr [rip + 0xda933]
0x409fc5:	cmp	r13, r14
0x409fc8:	ja	0x40a057
0x409fce:	mov	rsi, qword ptr [rip + 0xdc313]
0x409fd5:	mov	rdi, qword ptr [rip + 0xda91c]
0x409fdc:	mov	rdx, r13
0x409fdf:	call	0x403c60
0x409fe4:	add	r13, qword ptr [rip + 0xda90d]
0x409feb:	cmp	dword ptr [rip + 0xdc04e], 0
0x409ff2:	mov	qword ptr [rip + 0xda8ff], r13
0x409ff9:	js	0x40a3fa
0x409fff:	mov	dword ptr [rip + 0xdc30b], 1
0x40a009:	mov	r14, r12
0x40a00c:	jmp	0x43a58e
0x40a011:	mov	dword ptr [rip + 0xdc2f5], 2
0x40a01b:	mov	r14, r12
0x40a01e:	jmp	0x43a58e
0x40a023:	mov	rdi, qword ptr [rip + 0xd85ae]
0x40a02a:	xor	edx, edx
0x40a02c:	xor	esi, esi
0x40a02e:	call	0x43a4f0
0x40a033:	test	eax, eax
0x40a035:	jne	0x40a222
0x40a03b:	mov	r14, r12
0x40a03e:	jmp	0x43a58e
0x40a043:	mov	edx, 0x4be4ca
0x40a048:	mov	esi, 0x185b
0x40a04d:	mov	edi, 0x45b1e2
0x40a052:	call	0x415bba
0x40a057:	mov	rsi, r13
0x40a05a:	mov	edi, 0x4e48e0
0x40a05f:	call	0x4316f0
0x40a064:	jmp	0x409fce
0x40a069:	movzx	r9d, byte ptr [r14 + 2]
0x40a06e:	cmp	r9b, 0x7b
0x40a072:	jne	0x40a0ed
0x40a074:	mov	rbx, r12
0x40a077:	add	rbx, 1
0x40a07b:	cmp	byte ptr [rbx - 1], 0x7d
0x40a07f:	jne	0x40a077
0x40a081:	mov	rsi, rbx
0x40a084:	lea	rdi, [r14 + 3]
0x40a088:	sub	rsi, r12
0x40a08b:	xor	r12d, r12d
0x40a08e:	sub	esi, 2
0x40a091:	call	0x438640
0x40a096:	mov	r14, qword ptr [rip + 0xdc27b]
0x40a09d:	mov	r13, rax
0x40a0a0:	test	r14, r14
0x40a0a3:	je	0x40a2d5
0x40a0a9:	cmp	r12d, dword ptr [r14 + 4]
0x40a0ad:	jae	0x40a2d5
0x40a0b3:	mov	r10d, r12d
0x40a0b6:	mov	rdi, r13
0x40a0b9:	mov	rsi, qword ptr [r14 + r10*8 + 8]
0x40a0be:	call	0x403be0
0x40a0c3:	test	eax, eax
0x40a0c5:	je	0x40a34a
0x40a0cb:	add	r12d, 1
0x40a0cf:	jmp	0x40a0a0
0x40a0d1:	call	0x43b080
0x40a0d6:	mov	r14, r12
0x40a0d9:	mov	dword ptr [rip + 0xdc231], 1
0x40a0e3:	call	0x43b080
0x40a0e8:	jmp	0x43a58e
0x40a0ed:	mov	rdx, qword ptr [rbp - 0xd0]
0x40a0f4:	movsx	ecx, r9b
0x40a0f8:	xor	edi, edi
0x40a0fa:	xor	eax, eax
0x40a0fc:	mov	esi, 0x4bf5a8
0x40a101:	call	0x43f5d0
0x40a106:	mov	rdi, qword ptr [rip + 0xd84d3]
0x40a10d:	xor	edx, edx
0x40a10f:	xor	esi, esi
0x40a111:	call	0x43a4f0
0x40a116:	test	eax, eax
0x40a118:	jne	0x40a3b7
0x40a11e:	mov	r14, r12
0x40a121:	jmp	0x43a58e
0x40a126:	mov	r9, qword ptr [rip + 0xda7d3]
0x40a12d:	sub	r9, qword ptr [rip + 0xda7c4]
0x40a134:	cmp	r9, 1
0x40a138:	jbe	0x40a206
0x40a13e:	mov	r10, qword ptr [rip + 0xda7b3]
0x40a145:	mov	r14, r12
0x40a148:	mov	dword ptr [rip + 0xdc1c2], 1
0x40a152:	mov	word ptr [r10], 0x6f2e
0x40a158:	add	qword ptr [rip + 0xda798], 2
0x40a160:	jmp	0x43a58e
0x40a165:	mov	r13, qword ptr [rip + 0xda87c]
0x40a16c:	test	r13, r13
0x40a16f:	je	0x40a21a
0x40a175:	mov	rdi, r13
0x40a178:	call	0x4039e0
0x40a17d:	mov	r14, qword ptr [rip + 0xda77c]
0x40a184:	sub	r14, qword ptr [rip + 0xda76d]
0x40a18b:	mov	rbx, rax
0x40a18e:	cmp	rax, r14
0x40a191:	ja	0x40a363
0x40a197:	mov	rdi, qword ptr [rip + 0xda75a]
0x40a19e:	mov	rdx, rbx
0x40a1a1:	mov	rsi, r13
0x40a1a4:	call	0x403c60
0x40a1a9:	mov	r13, qword ptr [rip + 0xda830]
0x40a1b0:	add	rbx, qword ptr [rip + 0xda741]
0x40a1b7:	mov	qword ptr [rip + 0xda73a], rbx
0x40a1be:	test	r13, r13
0x40a1c1:	je	0x40a37c
0x40a1c7:	mov	rdi, r13
0x40a1ca:	call	0x4039e0
0x40a1cf:	mov	rdi, qword ptr [rip + 0xda72a]
0x40a1d6:	mov	r14, rax
0x40a1d9:	sub	rdi, rbx
0x40a1dc:	cmp	rax, rdi
0x40a1df:	ja	0x40a393
0x40a1e5:	mov	rdi, qword ptr [rip + 0xda70c]
0x40a1ec:	mov	rdx, r14
0x40a1ef:	mov	rsi, r13
0x40a1f2:	call	0x403c60
0x40a1f7:	add	qword ptr [rip + 0xda6fa], r14
0x40a1fe:	mov	r14, r12
0x40a201:	jmp	0x43a58e
0x40a206:	mov	esi, 2
0x40a20b:	mov	edi, 0x4e48e0
0x40a210:	call	0x4316f0
0x40a215:	jmp	0x40a13e
0x40a21a:	mov	r14, r12
0x40a21d:	jmp	0x43a58e
0x40a222:	jmp	0x43a6dd
0x40a227:	mov	r11, qword ptr [rip + 0xda6ca]
0x40a22e:	cmp	qword ptr [rip + 0xda6cb], r11
0x40a235:	je	0x40a287
0x40a237:	mov	rdi, qword ptr [rip + 0xda6ba]
0x40a23e:	mov	r14, r12
0x40a241:	lea	rax, [rdi + 1]
0x40a245:	mov	qword ptr [rip + 0xda6ac], rax
0x40a24c:	mov	byte ptr [rdi], 0x25
0x40a24f:	jmp	0x43a58e
0x40a254:	cmp	dword ptr [rip + 0xdbd29], 0
0x40a25b:	mov	r14, r12
0x40a25e:	je	0x40a429
0x40a264:	movzx	r8d, byte ptr [r14]
0x40a268:	cmp	r8b, 0x2e
0x40a26c:	je	0x40a281
0x40a26e:	movzx	r9d, r8b
0x40a272:	test	byte ptr [r9 + r9 + 0x4bc840], 0x8c
0x40a27b:	je	0x40a43f
0x40a281:	add	r14, 1
0x40a285:	jmp	0x40a264
0x40a287:	mov	esi, 1
0x40a28c:	mov	edi, 0x4e48e0
0x40a291:	call	0x4316f0
0x40a296:	jmp	0x40a237
0x40a298:	cmp	dil, 0x25
0x40a29c:	je	0x40a2b5
0x40a29e:	jmp	0x43a58e
0x40a2a3:	mov	dword ptr [rip + 0xdc057], 1
0x40a2ad:	mov	r14, r12
0x40a2b0:	jmp	0x43a58e
0x40a2b5:	cmp	byte ptr [r14 + 1], 0x4f
0x40a2ba:	je	0x40a2cc
0x40a2bc:	movsx	ebx, byte ptr [r14]
0x40a2c0:	lea	r13, [r14 + 1]
0x40a2c4:	mov	r10d, ebx
0x40a2c7:	jmp	0x43a5a6
0x40a2cc:	add	r14, 2
0x40a2d0:	jmp	0x43a58e
0x40a2d5:	mov	rdi, r13
0x40a2d8:	mov	r14, rbx
0x40a2db:	call	0x4039e0
0x40a2e0:	mov	rdi, r13
0x40a2e3:	mov	esi, eax
0x40a2e5:	call	0x439a20
0x40a2ea:	mov	rdi, r13
0x40a2ed:	call	0x403830
0x40a2f2:	jmp	0x43a58e
0x40a2f7:	mov	r13, qword ptr [rip + 0xd8f42]
0x40a2fe:	mov	rdi, r14
0x40a301:	sub	rdi, qword ptr [rip + 0xda5f0]
0x40a308:	test	r13, r13
0x40a30b:	je	0x409fb7
0x40a311:	cmp	r13, rdi
0x40a314:	ja	0x40a384
0x40a316:	mov	rsi, qword ptr [rip + 0xd8f2b]
0x40a31d:	mov	rdi, qword ptr [rip + 0xda5d4]
0x40a324:	mov	rdx, r13
0x40a327:	call	0x403c60
0x40a32c:	add	r13, qword ptr [rip + 0xda5c5]
0x40a333:	jmp	0x409feb
0x40a338:	mov	rsi, rbx
0x40a33b:	mov	edi, 0x4e48e0
0x40a340:	call	0x4316f0
0x40a345:	jmp	0x409f86
0x40a34a:	mov	rdi, r13
0x40a34d:	mov	dword ptr [rbp - 0xc8], eax
0x40a353:	call	0x403830
0x40a358:	mov	eax, dword ptr [rbp - 0xc8]
0x40a35e:	jmp	0x43a6dd
0x40a363:	mov	rsi, rax
0x40a366:	mov	edi, 0x4e48e0
0x40a36b:	call	0x4316f0
0x40a370:	mov	r13, qword ptr [rip + 0xda671]
0x40a377:	jmp	0x40a197
0x40a37c:	mov	r14, r12
0x40a37f:	jmp	0x43a58e
0x40a384:	mov	rsi, r13
0x40a387:	mov	edi, 0x4e48e0
0x40a38c:	call	0x4316f0
0x40a391:	jmp	0x40a316
0x40a393:	mov	rsi, rax
0x40a396:	mov	edi, 0x4e48e0
0x40a39b:	call	0x4316f0
0x40a3a0:	mov	r13, qword ptr [rip + 0xda639]
0x40a3a7:	jmp	0x40a1e5
0x40a3ac:	or	qword ptr [rsp + rcx - 8], 0
0x40a3b2:	jmp	0x409894
0x40a3b7:	jmp	0x43a6dd
0x40a3bc:	mov	rsi, qword ptr [rip + 0xd8ea5]
0x40a3c3:	mov	qword ptr [rbp - 0x110], r11
0x40a3ca:	mov	dword ptr [rbp - 0x108], r8d
0x40a3d1:	mov	qword ptr [rbp - 0xf0], rdx
0x40a3d8:	call	0x403c60
0x40a3dd:	mov	rdx, qword ptr [rbp - 0xf0]
0x40a3e4:	mov	r8d, dword ptr [rbp - 0x108]
0x40a3eb:	mov	r11, qword ptr [rbp - 0x110]
0x40a3f2:	mov	rdi, rax
0x40a3f5:	jmp	0x4098ad
0x40a3fa:	mov	rcx, qword ptr [rip + 0xda4ff]
0x40a401:	sub	rcx, r13
0x40a404:	cmp	rcx, 2
0x40a408:	jbe	0x40a42e
0x40a40a:	mov	r8, qword ptr [rip + 0xda4e7]
0x40a411:	mov	word ptr [r8], 0x672e
0x40a417:	mov	byte ptr [r8 + 2], 0x6b
0x40a41c:	add	qword ptr [rip + 0xda4d4], 3
0x40a424:	jmp	0x409fff
0x40a429:	jmp	0x43a755
0x40a42e:	mov	esi, 3
0x40a433:	mov	edi, 0x4e48e0
0x40a438:	call	0x4316f0
0x40a43d:	jmp	0x40a40a
0x40a43f:	cmp	r8b, 0x25
0x40a443:	je	0x40a44a
0x40a445:	jmp	0x43a58e
0x40a44a:	cmp	byte ptr [r14 + 1], 0x4f
0x40a44f:	jne	0x40a2bc
0x40a455:	add	r14, 2
0x40a459:	jmp	0x43a58e
0x40a45e:	add	r14, 1
0x40a462:	mov	edx, 1
0x40a467:	jmp	0x42f294
0x40a46c:	cmp	byte ptr [r15 + 1], 0
0x40a471:	je	0x40a50f
0x40a477:	add	ebx, 1
0x40a47a:	add	r15, 2
0x40a47e:	jmp	0x42f2ae
0x40a483:	add	r15, 1
0x40a487:	jmp	0x42f2f1
0x40a48c:	mov	rdi, qword ptr [rsp + 8]
0x40a491:	test	rdi, rdi
0x40a494:	je	0x40a49f
0x40a496:	cmp	rdi, rbp
0x40a499:	jne	0x40a522
0x40a49f:	mov	rdi, r15
0x40a4a2:	movsxd	rbx, ebx
0x40a4a5:	mov	byte ptr [rsp + 0x48], r11b
0x40a4aa:	sub	rdi, r14
0x40a4ad:	mov	byte ptr [rsp + 0x47], r10b
0x40a4b2:	sub	rdi, rbx
0x40a4b5:	mov	byte ptr [rsp + 0x40], dl
0x40a4b9:	add	rdi, 1
0x40a4bd:	mov	byte ptr [rsp + 0x38], r9b
0x40a4c2:	call	0x42db10
0x40a4c7:	movzx	r9d, byte ptr [rsp + 0x38]
0x40a4cd:	movzx	edx, byte ptr [rsp + 0x40]
0x40a4d2:	mov	qword ptr [rsp + 8], rax
0x40a4d7:	movzx	r10d, byte ptr [rsp + 0x47]
0x40a4dd:	mov	r12, rax
0x40a4e0:	movzx	r11d, byte ptr [rsp + 0x48]
0x40a4e6:	cmp	r15, r14
0x40a4e9:	je	0x40a5e6
0x40a4ef:	cmp	byte ptr [r14], 0x5c
0x40a4f3:	lea	rax, [r14 + 1]
0x40a4f7:	je	0x40a5f5
0x40a4fd:	movzx	r14d, byte ptr [r14]
0x40a501:	add	r12, 1
0x40a505:	mov	byte ptr [r12 - 1], r14b
0x40a50a:	mov	r14, rax
0x40a50d:	jmp	0x40a4e6
0x40a50f:	mov	rdx, qword ptr [rsp + 0x30]
0x40a514:	mov	esi, 0x4bf638
0x40a519:	xor	edi, edi
0x40a51b:	xor	eax, eax
0x40a51d:	call	0x43f5d0
0x40a522:	mov	byte ptr [rsp + 0x47], r11b
0x40a527:	mov	byte ptr [rsp + 0x40], r10b
0x40a52c:	mov	byte ptr [rsp + 0x38], dl
0x40a530:	mov	byte ptr [rsp + 8], r9b
0x40a535:	call	0x403830
0x40a53a:	movzx	r11d, byte ptr [rsp + 0x47]
0x40a540:	movzx	edx, byte ptr [rsp + 0x38]
0x40a545:	movzx	r10d, byte ptr [rsp + 0x40]
0x40a54b:	movzx	r9d, byte ptr [rsp + 8]
0x40a551:	jmp	0x40a49f
0x40a556:	mov	rdx, rdi
0x40a559:	mov	esi, 0x4bf658
0x40a55e:	xor	edi, edi
0x40a560:	xor	eax, eax
0x40a562:	call	0x43f5d0
0x40a567:	mov	r9, qword ptr [rip + 0xdbada]
0x40a56e:	test	r9, r9
0x40a571:	je	0x40a5bd
0x40a573:	mov	rbx, qword ptr [r9]
0x40a576:	test	rbx, rbx
0x40a579:	je	0x40a5bd
0x40a57b:	cmp	byte ptr [rbx], 0
0x40a57e:	je	0x40a5bd
0x40a580:	mov	rdx, r12
0x40a583:	lea	rdi, [rbx + 1]
0x40a587:	mov	rsi, r14
0x40a58a:	mov	byte ptr [rsp + 0x38], r11b
0x40a58f:	sub	rdx, r14
0x40a592:	mov	byte ptr [rsp + 0x20], r10b
0x40a597:	mov	qword ptr [rsp], rdx
0x40a59b:	call	0x4038d0
0x40a5a0:	movzx	r10d, byte ptr [rsp + 0x20]
0x40a5a6:	movzx	r11d, byte ptr [rsp + 0x38]
0x40a5ac:	test	eax, eax
0x40a5ae:	jne	0x40a5bd
0x40a5b0:	mov	rax, qword ptr [rsp]
0x40a5b4:	cmp	byte ptr [rbx + rax + 1], 0
0x40a5b9:	sete	r10b
0x40a5bd:	mov	byte ptr [rsp + 0x5f], r10b
0x40a5c2:	jmp	0x42f3a6
0x40a5c7:	mov	rdi, r14
0x40a5ca:	xor	r14d, r14d
0x40a5cd:	call	0x403830
0x40a5d2:	jmp	0x42f491
0x40a5d7:	mov	rdi, qword ptr [rsp + 8]
0x40a5dc:	call	0x403830
0x40a5e1:	jmp	0x42f4a6
0x40a5e6:	mov	byte ptr [r12], 0
0x40a5eb:	mov	r14, qword ptr [rsp + 8]
0x40a5f0:	jmp	0x42f907
0x40a5f5:	mov	r14, rax
0x40a5f8:	lea	rax, [rax + 1]
0x40a5fc:	jmp	0x40a4fd
0x40a601:	movsx	ecx, byte ptr [r15]
0x40a605:	mov	rdx, qword ptr [rsp + 0x30]
0x40a60a:	mov	esi, 0x4bf678
0x40a60f:	xor	edi, edi
0x40a611:	xor	eax, eax
0x40a613:	call	0x43f5d0
0x40a618:	xor	edi, edi
0x40a61a:	jmp	0x42f8f2
0x40a61f:	mov	rdi, r14
0x40a622:	mov	rbp, qword ptr [rsp + 0x38]
0x40a627:	xor	r14d, r14d
0x40a62a:	call	0x403830
0x40a62f:	jmp	0x42f491
0x40a634:	xor	edx, edx
0x40a636:	xor	r10d, r10d
0x40a639:	jmp	0x42f294
0x40a63e:	mov	rdi, rbp
0x40a641:	call	0x403830
0x40a646:	jmp	0x42f49a
0x40a64b:	add	r14, 1
0x40a64f:	jmp	0x42f609
0x40a654:	mov	rdi, qword ptr [rsi]
0x40a657:	mov	rdx, qword ptr [rsp]
0x40a65b:	mov	rsi, qword ptr [rsp + 8]
0x40a660:	mov	qword ptr [rsp + 0x18], rdi
0x40a665:	call	0x4038d0
0x40a66a:	test	eax, eax
0x40a66c:	jne	0x42fa17
0x40a672:	test	r12d, r12d
0x40a675:	je	0x40a690
0x40a677:	mov	esi, dword ptr [rsp + 0x14]
0x40a67b:	mov	edi, r15d
0x40a67e:	call	0x43b250
0x40a683:	test	eax, eax
0x40a685:	jne	0x42fa61
0x40a68b:	jmp	0x42fa17
0x40a690:	cmp	byte ptr [r13 + 1], 0
0x40a695:	jne	0x42fa17
0x40a69b:	mov	r8, qword ptr [rsp + 0x18]
0x40a6a0:	cmp	byte ptr [r8 + rbx - 1], 0
0x40a6a6:	jne	0x42fa17
0x40a6ac:	jmp	0x40a677
0x40a6ae:	mov	ecx, 1
0x40a6b3:	mov	edx, 4
0x40a6b8:	mov	rsi, rbp
0x40a6bb:	mov	edi, 0x4e24b0
0x40a6c0:	call	0x439620
0x40a6c5:	mov	rbx, rax
0x40a6c8:	test	rax, rax
0x40a6cb:	je	0x40a703
0x40a6cd:	xor	edx, edx
0x40a6cf:	xor	esi, esi
0x40a6d1:	mov	edi, 0x4be4e6
0x40a6d6:	mov	rbp, rbx
0x40a6d9:	call	0x43b180
0x40a6de:	jmp	0x43b125
0x40a6e3:	mov	esi, 1
0x40a6e8:	mov	edi, 0x4e48e0
0x40a6ed:	call	0x4316f0
0x40a6f2:	jmp	0x43b0a1
0x40a6f7:	or	byte ptr [rip + 0xda232], 2
0x40a6fe:	jmp	0x43b0cd
0x40a703:	pop	rdx
0x40a704:	mov	rsi, rbp
0x40a707:	pop	rbx
0x40a708:	mov	edi, 0x4bf6a0
0x40a70d:	xor	eax, eax
0x40a70f:	pop	rbp
0x40a710:	jmp	0x43dd90
0x40a715:	lea	eax, [rbx + 1]
0x40a718:	mov	edi, dword ptr [rip + 0xda312]
0x40a71e:	cdqe	
0x40a720:	cmp	edi, eax
0x40a722:	jle	0x40a769
0x40a724:	imul	r8, rax, 0x18
0x40a728:	add	rax, 1
0x40a72c:	mov	r9, qword ptr [rbp + r8]
0x40a731:	cmp	byte ptr [r9], 0x4f
0x40a735:	jne	0x40a720
0x40a737:	mov	byte ptr [r12 + 0x15], 1
0x40a73d:	xor	eax, eax
0x40a73f:	mov	dword ptr [r12 + 0x10], 2
0x40a748:	jmp	0x43b28f
0x40a74d:	cmp	byte ptr [r12 + 0x14], 0
0x40a753:	je	0x40a75b
0x40a755:	mov	byte ptr [r12 + 0x15], 1
0x40a75b:	mov	dword ptr [r12 + 0x10], 2
0x40a764:	jmp	0x43b28f
0x40a769:	jmp	0x43b2c2
0x40a76e:	cmp	r8, r15
0x40a771:	je	0x40a7c8
0x40a773:	mov	rsi, qword ptr [rip + 0xda196]
0x40a77a:	mov	r9, qword ptr [rip + 0xda17f]
0x40a781:	add	r8, rsi
0x40a784:	not	rsi
0x40a787:	mov	r10, r9
0x40a78a:	sub	r10, qword ptr [rip + 0xda157]
0x40a791:	and	r8, rsi
0x40a794:	mov	rdi, r8
0x40a797:	sub	rdi, qword ptr [rip + 0xda14a]
0x40a79e:	cmp	rdi, r10
0x40a7a1:	cmovbe	r9, r8
0x40a7a5:	movq	xmm0, r9
0x40a7aa:	punpcklqdq	xmm0, xmm0
0x40a7ae:	movaps	xmmword ptr [rip + 0xda13b], xmm0
0x40a7b5:	jmp	0x43b4df
0x40a7ba:	mov	esi, 0x4bf738
0x40a7bf:	xor	edi, edi
0x40a7c1:	xor	eax, eax
0x40a7c3:	call	0x43f5d0
0x40a7c8:	or	byte ptr [rip + 0xda161], 2
0x40a7cf:	jmp	0x40a773
0x40a7d1:	mov	esi, 0x4be4f6
0x40a7d6:	xor	edi, edi
0x40a7d8:	xor	eax, eax
0x40a7da:	call	0x43f5d0
0x40a7df:	mov	r10, qword ptr [rip + 0xda11a]
0x40a7e6:	movsxd	rbx, ebx
0x40a7e9:	sub	r10, qword ptr [rip + 0xda108]
0x40a7f0:	cmp	rbx, r10
0x40a7f3:	ja	0x40a82b
0x40a7f5:	mov	rdi, qword ptr [rip + 0xda0fc]
0x40a7fc:	mov	rdx, rbx
0x40a7ff:	mov	rsi, r15
0x40a802:	call	0x403c60
0x40a807:	add	qword ptr [rip + 0xda0ea], rbx
0x40a80e:	jmp	0x43b584
0x40a813:	mov	rdx, rbp
0x40a816:	mov	esi, 0x4bf6e8
0x40a81b:	xor	edi, edi
0x40a81d:	xor	eax, eax
0x40a81f:	call	0x43f5d0
0x40a824:	xor	edi, edi
0x40a826:	jmp	0x43b514
0x40a82b:	mov	rsi, rbx
0x40a82e:	mov	edi, 0x4e48e0
0x40a833:	call	0x4316f0
0x40a838:	jmp	0x40a7f5
0x40a83a:	mov	rdx, rbp
0x40a83d:	mov	esi, 0x4be513
0x40a842:	xor	edi, edi
0x40a844:	xor	eax, eax
0x40a846:	call	0x43f5d0
0x40a84b:	mov	esi, 0x4bf710
0x40a850:	xor	edi, edi
0x40a852:	xor	eax, eax
0x40a854:	call	0x43f5d0
0x40a859:	jle	0x40a8c1
0x40a85b:	movsxd	rdi, edi
0x40a85e:	mov	rbp, rsi
0x40a861:	mov	edx, 0xa
0x40a866:	lea	rbx, [rdi*8]
0x40a86e:	lea	r14, [rsi + rbx - 0x10]
0x40a873:	lea	rsi, [rsp + 8]
0x40a878:	mov	rdi, qword ptr [r14]
0x40a87b:	call	0x403c50
0x40a880:	mov	r13, rax
0x40a883:	mov	rax, qword ptr [rsp + 8]
0x40a888:	cmp	qword ptr [r14], rax
0x40a88b:	je	0x40a8d5
0x40a88d:	lea	rbp, [rbp + rbx - 8]
0x40a892:	mov	edx, 0xa
0x40a897:	lea	rsi, [rsp + 8]
0x40a89c:	mov	rdi, qword ptr [rbp]
0x40a8a0:	call	0x403c50
0x40a8a5:	mov	rcx, qword ptr [rsp + 8]
0x40a8aa:	cmp	qword ptr [rbp], rcx
0x40a8ae:	je	0x40a8e9
0x40a8b0:	cmp	r13, rax
0x40a8b3:	mov	edx, 0x4c4893
0x40a8b8:	cmovg	r12, rdx
0x40a8bc:	jmp	0x43b61c
0x40a8c1:	mov	edx, 0x4be52d
0x40a8c6:	mov	esi, 0x2b0d
0x40a8cb:	mov	edi, 0x45b1e2
0x40a8d0:	call	0x415bba
0x40a8d5:	mov	edx, 0x4be52d
0x40a8da:	mov	esi, 0x2b10
0x40a8df:	mov	edi, 0x45b1e2
0x40a8e4:	call	0x415bba
0x40a8e9:	mov	edx, 0x4be52d
0x40a8ee:	mov	esi, 0x2b13
0x40a8f3:	mov	edi, 0x45b1e2
0x40a8f8:	call	0x415bba
0x40a8fd:	nop	
0x40a8fe:	mov	dword ptr [rdi + 4], 0
0x40a905:	jmp	0x43b656
0x40a90a:	mov	rdx, rdi
0x40a90d:	mov	esi, 0x4bf758
0x40a912:	xor	edi, edi
0x40a914:	xor	eax, eax
0x40a916:	call	0x43f5d0
0x40a91b:	call	0x42db40
0x40a920:	mov	rbx, qword ptr [rip + 0xda0c1]
0x40a927:	mov	r12, rax
0x40a92a:	mov	rdi, rbx
0x40a92d:	call	0x4039e0
0x40a932:	test	rax, rax
0x40a935:	je	0x40a93e
0x40a937:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x40a93c:	je	0x40a96e
0x40a93e:	mov	rsi, qword ptr [rip + 0xda09b]
0x40a945:	test	rsi, rsi
0x40a948:	je	0x40a976
0x40a94a:	mov	rdx, rbp
0x40a94d:	xor	ecx, ecx
0x40a94f:	mov	rdi, r12
0x40a952:	xor	eax, eax
0x40a954:	call	0x42d870
0x40a959:	mov	rbp, rax
0x40a95c:	mov	rdi, r12
0x40a95f:	call	0x403830
0x40a964:	mov	edx, 0x45b496
0x40a969:	jmp	0x43b687
0x40a96e:	mov	byte ptr [r12 + rax - 1], 0
0x40a974:	jmp	0x40a93e
0x40a976:	mov	rsi, rbp
0x40a979:	xor	edx, edx
0x40a97b:	mov	rdi, r12
0x40a97e:	xor	eax, eax
0x40a980:	call	0x42d870
0x40a985:	mov	rbp, rax
0x40a988:	jmp	0x40a95c
0x40a98a:	cmp	byte ptr [rdx + 2], 0x7b
0x40a98e:	lea	rax, [rdx + 2]
0x40a992:	je	0x43b770
0x40a998:	mov	r8, rax
0x40a99b:	jmp	0x43b7a8
0x40a9a0:	mov	rbx, rdx
0x40a9a3:	movzx	ecx, byte ptr [rbx + 1]
0x40a9a7:	add	rbx, 1
0x40a9ab:	cmp	cl, 9
0x40a9ae:	je	0x40a9a3
0x40a9b0:	cmp	cl, 0x20
0x40a9b3:	jne	0x42fab9
0x40a9b9:	jmp	0x40a9a3
0x40a9bb:	mov	rbx, r13
0x40a9be:	jmp	0x42fd72
0x40a9c3:	nop	
0x40a9c4:	mov	r8d, 1
0x40a9ca:	jmp	0x43b958
0x40a9cf:	movsxd	rax, dword ptr [rip + 0xd88b2]
0x40a9d6:	mov	r8, qword ptr [r11 + 8]
0x40a9da:	mov	r9d, dword ptr [r11 + 0x14]
0x40a9de:	mov	rdx, rax
0x40a9e1:	imul	rdi, rax, 0x18
0x40a9e5:	add	rdi, qword ptr [rbp - 0x60]
0x40a9e9:	add	edx, 1
0x40a9ec:	mov	qword ptr [rdi], r8
0x40a9ef:	mov	dword ptr [rdi + 0x10], r9d
0x40a9f3:	mov	qword ptr [rdi + 8], 0
0x40a9fb:	mov	dword ptr [rdi + 0x14], 0
0x40aa02:	mov	dword ptr [rip + 0xd8880], edx
0x40aa08:	jmp	0x43b9c5
0x40aa0d:	mov	rdx, r8
0x40aa10:	mov	esi, 0x4be544
0x40aa15:	xor	edi, edi
0x40aa17:	xor	eax, eax
0x40aa19:	call	0x43f5d0
0x40aa1e:	add	r12, 1
0x40aa22:	jmp	0x43ba2e
0x40aa27:	test	al, al
0x40aa29:	jne	0x40aa33
0x40aa2b:	mov	r12, rbx
0x40aa2e:	jmp	0x43ba23
0x40aa33:	lea	r12, [rbx + 1]
0x40aa37:	jmp	0x43ba23
0x40aa3c:	lea	edi, [rbp + rbx + 1]
0x40aa40:	xor	r15d, r15d
0x40aa43:	xor	ebp, ebp
0x40aa45:	movsxd	rdi, edi
0x40aa48:	call	0x42db10
0x40aa4d:	mov	rbx, rax
0x40aa50:	xor	esi, esi
0x40aa52:	movsx	edi, byte ptr [r12 + rbp]
0x40aa57:	call	r13
0x40aa5a:	movsxd	rdx, r15d
0x40aa5d:	mov	r8d, eax
0x40aa60:	lea	eax, [r15 + 1]
0x40aa64:	lea	rsi, [rbx + rdx]
0x40aa68:	mov	ecx, eax
0x40aa6a:	test	r8b, r8b
0x40aa6d:	je	0x40aa79
0x40aa6f:	mov	byte ptr [rsi], 0x5c
0x40aa72:	lea	eax, [r15 + 2]
0x40aa76:	movsxd	rdx, ecx
0x40aa79:	movzx	r9d, byte ptr [r12 + rbp]
0x40aa7e:	add	rbp, 1
0x40aa82:	mov	r15d, eax
0x40aa85:	mov	byte ptr [rbx + rdx], r9b
0x40aa89:	cmp	r14d, ebp
0x40aa8c:	jge	0x40aa50
0x40aa8e:	mov	rdi, r12
0x40aa91:	mov	r12, rbx
0x40aa94:	call	0x403830
0x40aa99:	jmp	0x43bbee
0x40aa9e:	mov	edx, 0x4be564
0x40aaa3:	mov	esi, 0x855
0x40aaa8:	mov	edi, 0x45b1e2
0x40aaad:	call	0x415bba
0x40aab2:	mov	esi, 0x45bb1a
0x40aab7:	mov	rdi, r14
0x40aaba:	call	0x403be0
0x40aabf:	test	eax, eax
0x40aac1:	jne	0x40aaf5
0x40aac3:	cmp	dword ptr [rip + 0xd8746], 0
0x40aaca:	jne	0x43bce4
0x40aad0:	mov	esi, 0x4bf778
0x40aad5:	xor	edi, edi
0x40aad7:	xor	eax, eax
0x40aad9:	call	0x43f5d0
0x40aade:	mov	rsi, r15
0x40aae1:	mov	edi, 0x4be574
0x40aae6:	xor	eax, eax
0x40aae8:	xor	r12d, r12d
0x40aaeb:	call	0x43dd90
0x40aaf0:	jmp	0x43bce4
0x40aaf5:	mov	esi, 0x45bb86
0x40aafa:	mov	rdi, r14
0x40aafd:	call	0x403be0
0x40ab02:	test	eax, eax
0x40ab04:	je	0x40aac3
0x40ab06:	jmp	0x43bce4
0x40ab0b:	nop	
0x40ab0c:	mov	edx, 0x4be58f
0x40ab11:	mov	esi, 0x2a
0x40ab16:	mov	edi, 0x463af0
0x40ab1b:	call	0x415bba
0x40ab20:	mov	rsi, rbx
0x40ab23:	mov	edi, 0x4e4960
0x40ab28:	call	0x4316f0
0x40ab2d:	jmp	0x43bdf9
0x40ab32:	or	byte ptr [rip + 0xd9e77], 2
0x40ab39:	jmp	0x43be91
0x40ab3e:	mov	esi, 1
0x40ab43:	mov	edi, 0x4e4960
0x40ab48:	call	0x4316f0
0x40ab4d:	jmp	0x43be65
0x40ab52:	mov	esi, 1
0x40ab57:	mov	edi, 0x4e4960
0x40ab5c:	call	0x4316f0
0x40ab61:	jmp	0x43be26
0x40ab66:	mov	edx, 0x4be5ad
0x40ab6b:	mov	esi, 0x62
0x40ab70:	mov	edi, 0x463af0
0x40ab75:	call	0x415bba
0x40ab7a:	mov	esi, 1
0x40ab7f:	mov	rdi, r12
0x40ab82:	call	0x4316f0
0x40ab87:	jmp	0x43c1e5
0x40ab8c:	mov	rsi, rax
0x40ab8f:	mov	rdi, r12
0x40ab92:	call	0x4316f0
0x40ab97:	jmp	0x43c217
0x40ab9c:	mov	dword ptr [rbp + 4], ebx
0x40ab9f:	jmp	0x43c28a
0x40aba4:	mov	eax, r12d
0x40aba7:	pop	rbx
0x40aba8:	pop	rbp
0x40aba9:	pop	r12
0x40abab:	ret	
0x40abac:	mov	edx, 0x4be5c6
0x40abb1:	mov	esi, 0x20a
0x40abb6:	mov	edi, 0x45b343
0x40abbb:	call	0x415bba
0x40abc0:	mov	edx, 0x4be5c6
0x40abc5:	mov	esi, 0x1ef
0x40abca:	mov	edi, 0x45b343
0x40abcf:	call	0x415bba
0x40abd4:	mov	edx, 0x4be5c6
0x40abd9:	mov	esi, 0x1ee
0x40abde:	mov	edi, 0x45b343
0x40abe3:	call	0x415bba
0x40abe8:	mov	edx, 0x4be5c6
0x40abed:	mov	esi, 0x1ed
0x40abf2:	mov	edi, 0x45b343
0x40abf7:	call	0x415bba
0x40abfc:	mov	rdi, rbp
0x40abff:	call	0x415ac4
0x40ac04:	mov	rdi, rbp
0x40ac07:	mov	esi, 8
0x40ac0c:	pop	rbp
0x40ac0d:	jmp	0x440230
0x40ac12:	endbr64	
0x40ac16:	push	rbx
0x40ac17:	mov	rbx, qword ptr [rip + 0xdb5fa]
0x40ac1e:	test	rbx, rbx
0x40ac21:	je	0x40ac31
0x40ac23:	mov	rdi, qword ptr [rbx]
0x40ac26:	call	0x41348f
0x40ac2b:	mov	rbx, qword ptr [rbx + 8]
0x40ac2f:	jmp	0x40ac1e
0x40ac31:	mov	qword ptr [rip + 0xdb5dc], 0
0x40ac3c:	pop	rbx
0x40ac3d:	ret	
0x40ac3e:	mov	rdi, qword ptr [r12]
0x40ac42:	test	rdi, rdi
0x40ac45:	je	0x40ac51
0x40ac47:	mov	esi, 0x20
0x40ac4c:	call	0x440230
0x40ac51:	mov	rdi, qword ptr [r12 + 8]
0x40ac56:	test	rdi, rdi
0x40ac59:	je	0x40ac65
0x40ac5b:	mov	esi, 0x38
0x40ac60:	call	0x440230
0x40ac65:	add	r12, 0x10
0x40ac69:	mov	rdi, rsp
0x40ac6c:	mov	qword ptr [rsp], r12
0x40ac70:	call	0x43c840
0x40ac75:	jmp	0x43c31b
0x40ac7a:	add	rsp, 0x10
0x40ac7e:	pop	rbx
0x40ac7f:	pop	rbp
0x40ac80:	pop	r12
0x40ac82:	ret	
0x40ac83:	cmp	byte ptr [rdi], 0x2f
0x40ac86:	je	0x43031b
0x40ac8c:	jmp	0x430356
0x40ac91:	xor	edx, edx
0x40ac93:	mov	esi, 1
0x40ac98:	mov	rdi, r12
0x40ac9b:	call	0x43a4f0
0x40aca0:	jmp	0x43c497
0x40aca5:	pop	rbx
0x40aca6:	mov	r8, r12
0x40aca9:	mov	rdi, rbp
0x40acac:	mov	ecx, 0x4be0e0
0x40acb1:	pop	rbp
0x40acb2:	mov	edx, 0x4be0c8
0x40acb7:	mov	esi, 0x4bf7e8
0x40acbc:	xor	eax, eax
0x40acbe:	pop	r12
0x40acc0:	jmp	0x43a390
0x40acc5:	mov	rax, qword ptr [rip + 0xd859c]
0x40accc:	mov	rdi, rax
0x40accf:	test	rbp, rbp
0x40acd2:	je	0x40ad25
0x40acd4:	test	rax, rax
0x40acd7:	jne	0x43c74d
0x40acdd:	xor	r12d, r12d
0x40ace0:	jmp	0x43c600
0x40ace5:	mov	esi, 0x4bf820
0x40acea:	xor	edi, edi
0x40acec:	xor	eax, eax
0x40acee:	call	0x43f5d0
0x40acf3:	mov	byte ptr [rbx], 0
0x40acf6:	mov	esi, 0x4be4d4
0x40acfb:	jmp	0x43c63d
0x40ad00:	mov	rdi, qword ptr [rip + 0xd8561]
0x40ad07:	test	rdi, rdi
0x40ad0a:	jne	0x43c74d
0x40ad10:	xor	r12d, r12d
0x40ad13:	jmp	0x43c796
0x40ad18:	mov	byte ptr [rbx], 0
0x40ad1b:	mov	esi, 0x4c4893
0x40ad20:	jmp	0x43c63d
0x40ad25:	mov	rbp, qword ptr [rsi]
0x40ad28:	jmp	0x43c5de
0x40ad2d:	mov	esi, 0x4bf840
0x40ad32:	xor	edi, edi
0x40ad34:	xor	eax, eax
0x40ad36:	call	0x43f5d0
0x40ad3b:	mov	edx, 0x4bf870
0x40ad40:	mov	esi, 0x2b28
0x40ad45:	mov	edi, 0x45b1e2
0x40ad4a:	call	0x415bba
0x40ad4f:	push	rax
0x40ad50:	call	0x403830
0x40ad55:	mov	edi, 0x4be65d
0x40ad5a:	pop	rdx
0x40ad5b:	jmp	0x42db40
0x40ad60:	cmp	ebp, dword ptr [rbx + 4]
0x40ad63:	jae	0x43c941
0x40ad69:	mov	eax, ebp
0x40ad6b:	xor	edx, edx
0x40ad6d:	mov	esi, 1
0x40ad72:	add	ebp, 1
0x40ad75:	mov	rdi, qword ptr [rbx + rax*8 + 8]
0x40ad7a:	call	0x43a4f0
0x40ad7f:	xor	edx, edx
0x40ad81:	xor	esi, esi
0x40ad83:	mov	edi, 0x4c6c55
0x40ad88:	call	0x43a4f0
0x40ad8d:	jmp	0x43c938
0x40ad92:	mov	eax, 1
0x40ad97:	ret	
0x40ad98:	mov	eax, 0x10800003
0x40ad9d:	mov	ecx, edi
0x40ad9f:	shl	rax, 9
0x40ada3:	shr	rax, cl
0x40ada6:	and	eax, 1
0x40ada9:	ret	
0x40adaa:	mov	edx, 0x4be660
0x40adaf:	mov	esi, 0xa6
0x40adb4:	mov	edi, 0x4be674
0x40adb9:	call	0x415bba
0x40adbe:	mov	edx, 0x4be660
0x40adc3:	mov	esi, 0xa5
0x40adc8:	mov	edi, 0x4be674
0x40adcd:	call	0x415bba
0x40add2:	mov	edx, 0x4be660
0x40add7:	mov	esi, 0xad
0x40addc:	mov	edi, 0x4be674
0x40ade1:	call	0x415bba
0x40ade6:	mov	edx, 0x4be68f
0x40adeb:	mov	esi, 0x2434
0x40adf0:	mov	edi, 0x45b1e2
0x40adf5:	call	0x415bba
0x40adfa:	mov	rdx, qword ptr [rsp + 0x28]
0x40adff:	or	rcx, 0xffffffffffffffff
0x40ae03:	lea	r13, [rsp + 0xc0]
0x40ae0b:	lea	rsi, [rsp + 0x60]
0x40ae10:	mov	rdi, r13
0x40ae13:	lea	r15, [rsp + 0xa0]
0x40ae1b:	call	0x443d30
0x40ae20:	mov	rsi, r13
0x40ae23:	lea	rdi, [rsp + 0x60]
0x40ae28:	call	0x406b62
0x40ae2d:	mov	rdi, r13
0x40ae30:	call	0x440d50
0x40ae35:	xor	edx, edx
0x40ae37:	mov	esi, 0x20
0x40ae3c:	lea	rdi, [rsp + 0x60]
0x40ae41:	call	0x442fc0
0x40ae46:	xor	edx, edx
0x40ae48:	lea	rsi, [rsp + 0x60]
0x40ae4d:	mov	rdi, r13
0x40ae50:	mov	rcx, rax
0x40ae53:	call	0x443d30
0x40ae58:	mov	rsi, r13
0x40ae5b:	lea	rdi, [rsp + 0x128]
0x40ae63:	call	0x406b62
0x40ae68:	mov	rdi, r13
0x40ae6b:	call	0x440d50
0x40ae70:	mov	byte ptr [rsp + 0x148], 1
0x40ae78:	jmp	0x43cd11
0x40ae7d:	mov	rdx, qword ptr [rsp + 0xe8]
0x40ae85:	mov	r8d, 0x2b
0x40ae8b:	mov	ecx, 0x4bf8c0
0x40ae90:	xor	esi, esi
0x40ae92:	lea	rdi, [rsp + 0xe0]
0x40ae9a:	call	0x442080
0x40ae9f:	jmp	0x43cd65
0x40aea4:	cmp	qword ptr [rip + 0xd822c], 0
0x40aeac:	jne	0x40af1a
0x40aeae:	xor	r12d, r12d
0x40aeb1:	cmp	dword ptr [rip + 0xd9b60], r12d
0x40aeb8:	jle	0x40af1a
0x40aeba:	mov	rax, qword ptr [rbp]
0x40aebe:	cmp	byte ptr [rax + r12], 0
0x40aec3:	je	0x40af14
0x40aec5:	mov	rdx, r12
0x40aec8:	shl	rdx, 5
0x40aecc:	add	rdx, qword ptr [rip + 0xdb195]
0x40aed3:	mov	rcx, qword ptr [rdx + 8]
0x40aed7:	test	rcx, rcx
0x40aeda:	je	0x40aee1
0x40aedc:	cmp	byte ptr [rcx], 0x2a
0x40aedf:	je	0x40af14
0x40aee1:	mov	rsi, qword ptr [rip + 0xdb178]
0x40aee8:	xor	edi, edi
0x40aeea:	xor	eax, eax
0x40aeec:	mov	rdx, qword ptr [rsi + r12*8]
0x40aef0:	mov	esi, 0x4bf980
0x40aef5:	call	0x411cf7
0x40aefa:	mov	rdi, qword ptr [rip + 0xdb15f]
0x40af01:	xor	esi, esi
0x40af03:	mov	rdi, qword ptr [rdi + r12*8]
0x40af07:	call	0x403dc0
0x40af0c:	test	eax, eax
0x40af0e:	js	0x40afd0
0x40af14:	add	r12, 1
0x40af18:	jmp	0x40aeb1
0x40af1a:	add	rsp, 0x158
0x40af21:	pop	rbx
0x40af22:	pop	rbp
0x40af23:	pop	r12
0x40af25:	pop	r13
0x40af27:	pop	r14
0x40af29:	pop	r15
0x40af2b:	ret	
0x40af2c:	xor	edx, edx
0x40af2e:	mov	esi, 0x4c42ef
0x40af33:	mov	edi, 0x4e25a0
0x40af38:	call	0x43bc00
0x40af3d:	jmp	0x43ce34
0x40af42:	mov	edx, 0x4be68f
0x40af47:	mov	esi, 0x243b
0x40af4c:	mov	edi, 0x45b1e2
0x40af51:	call	0x415bba
0x40af56:	mov	edi, 0x4bf920
0x40af5b:	call	0x403a20
0x40af60:	mov	edi, 1
0x40af65:	mov	rsi, rax
0x40af68:	xor	eax, eax
0x40af6a:	call	0x403d70
0x40af6f:	mov	edi, 0x4bf948
0x40af74:	call	0x403a20
0x40af79:	mov	edi, 1
0x40af7e:	mov	rsi, rax
0x40af81:	xor	eax, eax
0x40af83:	call	0x403d70
0x40af88:	mov	rdi, qword ptr [rip + 0xd80d1]
0x40af8f:	call	0x403cb0
0x40af94:	jmp	0x43ced7
0x40af99:	mov	edx, 0x4be734
0x40af9e:	mov	esi, 0x4bf8f0
0x40afa3:	xor	edi, edi
0x40afa5:	xor	eax, eax
0x40afa7:	call	0x43f5d0
0x40afac:	cmp	qword ptr [r11 + r9*8], 0
0x40afb1:	je	0x43cab2
0x40afb7:	jmp	0x43caaf
0x40afbc:	mov	edx, 0x4be68f
0x40afc1:	mov	esi, 0x243a
0x40afc6:	mov	edi, 0x45b1e2
0x40afcb:	call	0x415bba
0x40afd0:	mov	r8, qword ptr [rip + 0xdb089]
0x40afd7:	mov	edi, 0x4bf9b8
0x40afdc:	xor	eax, eax
0x40afde:	mov	rsi, qword ptr [r8 + r12*8]
0x40afe2:	call	0x43dd90
0x40afe7:	jmp	0x40af14
0x40afec:	mov	rsi, qword ptr [rbp]
0x40aff0:	mov	rdi, rbx
0x40aff3:	call	0x403be0
0x40aff8:	test	eax, eax
0x40affa:	je	0x40b01f
0x40affc:	mov	rbp, qword ptr [rbp + 8]
0x40b000:	jmp	0x43d14f
0x40b005:	mov	rsi, qword ptr [r12]
0x40b009:	mov	rdi, rbx
0x40b00c:	call	0x403be0
0x40b011:	test	eax, eax
0x40b013:	je	0x40b02f
0x40b015:	mov	r12, qword ptr [r12 + 8]
0x40b01a:	jmp	0x43d107
0x40b01f:	add	rsp, 0x10
0x40b023:	mov	rdi, rbx
0x40b026:	pop	rbx
0x40b027:	pop	rbp
0x40b028:	pop	r12
0x40b02a:	jmp	0x403830
0x40b02f:	mov	rdi, rbx
0x40b032:	call	0x403830
0x40b037:	jmp	0x43d129
0x40b03c:	mov	esi, 1
0x40b041:	mov	edi, 0x4e4960
0x40b046:	call	0x4316f0
0x40b04b:	mov	rbx, qword ptr [rip + 0xd9926]
0x40b052:	jmp	0x43d45b
0x40b057:	mov	esi, 0xc
0x40b05c:	mov	edi, 0x4e4960
0x40b061:	call	0x4316f0
0x40b066:	jmp	0x43d47e
0x40b06b:	mov	rbx, r14
0x40b06e:	sub	rbx, rbp
0x40b071:	cmp	rbx, r12
0x40b074:	ja	0x40b0ea
0x40b076:	mov	rdi, qword ptr [rip + 0xd98fb]
0x40b07d:	mov	rdx, rbx
0x40b080:	mov	rsi, rbp
0x40b083:	call	0x403c60
0x40b088:	mov	rdx, qword ptr [rip + 0xd98f1]
0x40b08f:	add	rbx, qword ptr [rip + 0xd98e2]
0x40b096:	mov	qword ptr [rip + 0xd98db], rbx
0x40b09d:	sub	rdx, rbx
0x40b0a0:	cmp	rdx, 3
0x40b0a4:	jbe	0x40b0fc
0x40b0a6:	mov	rcx, qword ptr [rip + 0xd98cb]
0x40b0ad:	lea	rbp, [r14 + 1]
0x40b0b1:	mov	dword ptr [rcx], 0x27275c27
0x40b0b7:	add	qword ptr [rip + 0xd98b9], 4
0x40b0bf:	jmp	0x43d4a8
0x40b0c4:	mov	rsi, rax
0x40b0c7:	mov	edi, 0x4e4960
0x40b0cc:	call	0x4316f0
0x40b0d1:	jmp	0x43d4e3
0x40b0d6:	mov	esi, 1
0x40b0db:	mov	edi, 0x4e4960
0x40b0e0:	call	0x4316f0
0x40b0e5:	jmp	0x43d510
0x40b0ea:	mov	rsi, rbx
0x40b0ed:	mov	edi, 0x4e4960
0x40b0f2:	call	0x4316f0
0x40b0f7:	jmp	0x40b076
0x40b0fc:	mov	esi, 4
0x40b101:	mov	edi, 0x4e4960
0x40b106:	call	0x4316f0
0x40b10b:	jmp	0x40b0a6
0x40b10d:	mov	esi, 1
0x40b112:	mov	edi, 0x4e4960
0x40b117:	call	0x4316f0
0x40b11c:	jmp	0x43d386
0x40b121:	mov	rsi, rax
0x40b124:	mov	edi, 0x4e4960
0x40b129:	call	0x4316f0
0x40b12e:	jmp	0x43d359
0x40b133:	mov	r15, r12
0x40b136:	sub	r15, r13
0x40b139:	cmp	r15, r14
0x40b13c:	ja	0x40b1a1
0x40b13e:	mov	rdi, qword ptr [rip + 0xd9833]
0x40b145:	mov	rdx, r15
0x40b148:	mov	rsi, r13
0x40b14b:	call	0x403c60
0x40b150:	mov	r11, qword ptr [rip + 0xd9829]
0x40b157:	add	r15, qword ptr [rip + 0xd981a]
0x40b15e:	mov	qword ptr [rip + 0xd9813], r15
0x40b165:	sub	r11, r15
0x40b168:	cmp	r11, 3
0x40b16c:	jbe	0x40b1b0
0x40b16e:	mov	rax, qword ptr [rip + 0xd9803]
0x40b175:	lea	r13, [r12 + 1]
0x40b17a:	mov	dword ptr [rax], 0x27275c27
0x40b180:	add	qword ptr [rip + 0xd97f0], 4
0x40b188:	jmp	0x43d31e
0x40b18d:	mov	esi, 2
0x40b192:	mov	edi, 0x4e4960
0x40b197:	call	0x4316f0
0x40b19c:	jmp	0x43d306
0x40b1a1:	mov	rsi, r15
0x40b1a4:	mov	edi, 0x4e4960
0x40b1a9:	call	0x4316f0
0x40b1ae:	jmp	0x40b13e
0x40b1b0:	mov	esi, 4
0x40b1b5:	mov	edi, 0x4e4960
0x40b1ba:	call	0x4316f0
0x40b1bf:	jmp	0x40b16e
0x40b1c1:	mov	esi, 1
0x40b1c6:	mov	edi, 0x4e4960
0x40b1cb:	call	0x4316f0
0x40b1d0:	jmp	0x43d2bd
0x40b1d5:	mov	rsi, rax
0x40b1d8:	mov	edi, 0x4e4960
0x40b1dd:	call	0x4316f0
0x40b1e2:	jmp	0x43d290
0x40b1e7:	mov	r15, rbx
0x40b1ea:	sub	r15, r13
0x40b1ed:	cmp	r15, r14
0x40b1f0:	ja	0x40b25b
0x40b1f2:	mov	rdi, qword ptr [rip + 0xd977f]
0x40b1f9:	mov	rdx, r15
0x40b1fc:	mov	rsi, r13
0x40b1ff:	call	0x403c60
0x40b204:	mov	rdx, qword ptr [rip + 0xd9775]
0x40b20b:	add	r15, qword ptr [rip + 0xd9766]
0x40b212:	mov	qword ptr [rip + 0xd975f], r15
0x40b219:	sub	rdx, r15
0x40b21c:	cmp	rdx, 3
0x40b220:	jbe	0x40b26a
0x40b222:	mov	rcx, qword ptr [rip + 0xd974f]
0x40b229:	lea	r13, [rbx + 1]
0x40b22d:	mov	dword ptr [rcx], 0x27275c27
0x40b233:	add	qword ptr [rip + 0xd973d], 4
0x40b23b:	jmp	0x43d255
0x40b240:	mov	esi, 2
0x40b245:	mov	edi, 0x4e4960
0x40b24a:	call	0x4316f0
0x40b24f:	mov	rbx, qword ptr [rip + 0xd9722]
0x40b256:	jmp	0x43d23c
0x40b25b:	mov	rsi, r15
0x40b25e:	mov	edi, 0x4e4960
0x40b263:	call	0x4316f0
0x40b268:	jmp	0x40b1f2
0x40b26a:	mov	esi, 4
0x40b26f:	mov	edi, 0x4e4960
0x40b274:	call	0x4316f0
0x40b279:	jmp	0x40b222
0x40b27b:	mov	esi, 1
0x40b280:	mov	edi, 0x4e4960
0x40b285:	call	0x4316f0
0x40b28a:	mov	rbx, qword ptr [rip + 0xd96e7]
0x40b291:	jmp	0x43d1f5
0x40b296:	mov	esi, 0x14
0x40b29b:	mov	edi, 0x4e4960
0x40b2a0:	call	0x4316f0
0x40b2a5:	jmp	0x43d1a3
0x40b2aa:	or	byte ptr [rip + 0xd96ff], 2
0x40b2b1:	jmp	0x43d3fc
0x40b2b6:	mov	esi, 1
0x40b2bb:	mov	edi, 0x4e4960
0x40b2c0:	call	0x4316f0
0x40b2c5:	jmp	0x43d3d6
0x40b2ca:	push	rax
0x40b2cb:	mov	edx, 0x4be745
0x40b2d0:	mov	esi, 0xc1
0x40b2d5:	mov	edi, 0x4be674
0x40b2da:	call	0x415bba
0x40b2df:	mov	rsi, qword ptr [rip + 0xd7dba]
0x40b2e6:	mov	edi, 0xa
0x40b2eb:	call	0x403b30
0x40b2f0:	jmp	0x43d7ac
0x40b2f5:	mov	r9, rcx
0x40b2f8:	movzx	r14d, byte ptr [r9]
0x40b2fc:	test	r14b, r14b
0x40b2ff:	jne	0x40b3a5
0x40b305:	cmp	byte ptr [rcx], 0
0x40b308:	mov	rdi, qword ptr [rip + 0xd7d91]
0x40b30f:	je	0x40b3d1
0x40b315:	mov	edx, 0x4c6bef
0x40b31a:	mov	esi, 1
0x40b31f:	xor	eax, eax
0x40b321:	call	0x403e90
0x40b326:	add	r12, 8
0x40b32a:	mov	rcx, qword ptr [r12]
0x40b32e:	test	rcx, rcx
0x40b331:	jne	0x40b2f5
0x40b333:	mov	rax, qword ptr [rip + 0xd7d66]
0x40b33a:	jmp	0x43d7f2
0x40b33f:	mov	rcx, rax
0x40b342:	mov	edx, 2
0x40b347:	mov	esi, 1
0x40b34c:	mov	edi, 0x4be7ab
0x40b351:	call	0x403e80
0x40b356:	mov	rsi, qword ptr [rip + 0xd7d43]
0x40b35d:	mov	edi, 0xa
0x40b362:	add	r15, 0x10
0x40b366:	call	0x403b30
0x40b36b:	jmp	0x43d7b3
0x40b370:	mov	rcx, rax
0x40b373:	mov	edx, 3
0x40b378:	mov	esi, 1
0x40b37d:	mov	edi, 0x4be7a7
0x40b382:	call	0x403e80
0x40b387:	jmp	0x43d7de
0x40b38c:	add	dword ptr [rip + 0xdae7d], 1
0x40b393:	mov	eax, dword ptr [rbp - 0x54]
0x40b396:	lea	rsp, [rbp - 0x28]
0x40b39a:	pop	rbx
0x40b39b:	pop	r12
0x40b39d:	pop	r13
0x40b39f:	pop	r14
0x40b3a1:	pop	r15
0x40b3a3:	pop	rbp
0x40b3a4:	ret	
0x40b3a5:	lea	esi, [r14 - 0x2d]
0x40b3a9:	cmp	sil, 2
0x40b3ad:	seta	r8b
0x40b3b1:	cmp	r14b, 0x5f
0x40b3b5:	setne	al
0x40b3b8:	test	r8b, al
0x40b3bb:	je	0x40b3c8
0x40b3bd:	test	byte ptr [r14 + r14 + 0x4bc840], 0x8c
0x40b3c6:	je	0x40b3ed
0x40b3c8:	add	r9, 1
0x40b3cc:	jmp	0x40b2f8
0x40b3d1:	mov	rcx, rdi
0x40b3d4:	mov	edx, 3
0x40b3d9:	mov	esi, 1
0x40b3de:	mov	edi, 0x4be7a7
0x40b3e3:	call	0x403e80
0x40b3e8:	jmp	0x40b326
0x40b3ed:	mov	edx, 2
0x40b3f2:	mov	esi, 1
0x40b3f7:	mov	edi, 0x4be7f8
0x40b3fc:	mov	rcx, qword ptr [rip + 0xd7c9d]
0x40b403:	call	0x403e80
0x40b408:	mov	r14, qword ptr [r12]
0x40b40c:	movzx	ecx, byte ptr [r14]
0x40b410:	mov	rsi, qword ptr [rip + 0xd7c89]
0x40b417:	test	cl, cl
0x40b419:	je	0x40b59b
0x40b41f:	sub	ecx, 0x22
0x40b422:	cmp	cl, 0x3a
0x40b425:	ja	0x40b43c
0x40b427:	movabs	rax, 0x400000000000005
0x40b431:	shr	rax, cl
0x40b434:	test	al, 1
0x40b436:	jne	0x40b624
0x40b43c:	movsx	edi, byte ptr [r14]
0x40b440:	mov	rsi, qword ptr [rip + 0xd7c59]
0x40b447:	add	r14, 1
0x40b44b:	call	0x403b30
0x40b450:	jmp	0x40b40c
0x40b452:	mov	r14, qword ptr [rip + 0xd7e6f]
0x40b459:	jmp	0x43d6aa
0x40b45e:	lea	r12d, [r12 + 1]
0x40b463:	movsxd	rdx, dword ptr [rbp - 0x48]
0x40b467:	xor	ecx, ecx
0x40b469:	mov	edi, 0x4e24d0
0x40b46e:	mov	qword ptr [r14 + r13*8 + 8], 0
0x40b477:	mov	rsi, qword ptr [r14 + r12*8 + 8]
0x40b47c:	lea	r14, [r14 + r15*8 + 8]
0x40b481:	movq	xmm15, r14
0x40b486:	shl	rdx, 4
0x40b48a:	movq	xmm14, rsi
0x40b48f:	punpcklqdq	xmm14, xmm15
0x40b494:	movaps	xmmword ptr [rbx + rdx], xmm14
0x40b499:	mov	edx, 1
0x40b49e:	call	0x439620
0x40b4a3:	test	rax, rax
0x40b4a6:	je	0x40b4ab
0x40b4a8:	mov	qword ptr [r14], rax
0x40b4ab:	add	dword ptr [rbp - 0x48], 1
0x40b4af:	mov	r14, qword ptr [rip + 0xd7e12]
0x40b4b6:	jmp	0x43d6dd
0x40b4bb:	mov	edi, 3
0x40b4c0:	jmp	0x43d720
0x40b4c5:	mov	edx, 0x4be790
0x40b4ca:	mov	esi, 0xd3c
0x40b4cf:	mov	edi, 0x45b1e2
0x40b4d4:	call	0x415bba
0x40b4d9:	mov	rsi, qword ptr [r12 + 8]
0x40b4de:	xor	ecx, ecx
0x40b4e0:	mov	edx, 1
0x40b4e5:	mov	edi, 0x4e24d0
0x40b4ea:	call	0x439620
0x40b4ef:	test	rax, rax
0x40b4f2:	je	0x40b4ff
0x40b4f4:	mov	rdx, qword ptr [rip + 0xd7dcd]
0x40b4fb:	mov	qword ptr [rdx + 8], rax
0x40b4ff:	mov	rdi, qword ptr [rip + 0xdaaea]
0x40b506:	call	0x42db40
0x40b50b:	mov	rcx, qword ptr [rip + 0xd7db6]
0x40b512:	mov	r13, rax
0x40b515:	test	rcx, rcx
0x40b518:	je	0x40b63e
0x40b51e:	mov	r12d, dword ptr [rcx + 4]
0x40b522:	mov	rdi, r13
0x40b525:	xor	r15d, r15d
0x40b528:	mov	ebx, r15d
0x40b52b:	add	r15d, 1
0x40b52f:	cmp	byte ptr [rdi], 0x2c
0x40b532:	jne	0x40b818
0x40b538:	add	rdi, 1
0x40b53c:	jmp	0x40b52f
0x40b53e:	cmp	r14, rbx
0x40b541:	je	0x40b54b
0x40b543:	mov	rdi, rbx
0x40b546:	call	0x403830
0x40b54b:	add	r15, 0x10
0x40b54f:	cmp	r13d, dword ptr [rbp - 0x48]
0x40b553:	jne	0x43d736
0x40b559:	movsxd	rcx, dword ptr [rbp - 0x48]
0x40b55d:	add	dword ptr [rip + 0xdacac], 1
0x40b564:	mov	rsi, rsp
0x40b567:	mov	rbx, qword ptr [rbp - 0x60]
0x40b56b:	lea	r8, [rcx*4 + 0x17]
0x40b573:	mov	r9, r8
0x40b576:	and	r8, 0xfffffffffffff000
0x40b57d:	and	r9, 0xfffffffffffffff0
0x40b581:	sub	rsi, r8
0x40b584:	cmp	rsp, rsi
0x40b587:	je	0x40b5aa
0x40b589:	sub	rsp, 0x1000
0x40b590:	or	qword ptr [rsp + 0xff8], 0
0x40b599:	jmp	0x40b584
0x40b59b:	mov	edi, 0x22
0x40b5a0:	call	0x403b30
0x40b5a5:	jmp	0x40b326
0x40b5aa:	and	r9d, 0xfff
0x40b5b1:	sub	rsp, r9
0x40b5b4:	test	r9, r9
0x40b5b7:	jne	0x40b633
0x40b5b9:	mov	esi, dword ptr [rbp - 0x48]
0x40b5bc:	lea	rdx, [rsp + 0xf]
0x40b5c1:	mov	rdi, r12
0x40b5c4:	mov	qword ptr [rbp - 0x68], rcx
0x40b5c8:	and	rdx, 0xfffffffffffffff0
0x40b5cc:	mov	qword ptr [rbp - 0x60], rdx
0x40b5d0:	call	0x42b429
0x40b5d5:	mov	r10, qword ptr [rbp - 0x68]
0x40b5d9:	test	eax, eax
0x40b5db:	je	0x40b646
0x40b5dd:	cmp	dword ptr [rip + 0xda9ec], 0
0x40b5e4:	jne	0x40b5f6
0x40b5e6:	mov	r15, qword ptr [rip + 0xd7c2b]
0x40b5ed:	test	r15, r15
0x40b5f0:	je	0x40b6e6
0x40b5f6:	shl	r10, 5
0x40b5fa:	mov	r13, rsp
0x40b5fd:	lea	r11, [r10 + 0x10]
0x40b601:	mov	rax, r11
0x40b604:	and	rax, 0xfffffffffffff000
0x40b60a:	sub	r13, rax
0x40b60d:	cmp	rsp, r13
0x40b610:	je	0x40b652
0x40b612:	sub	rsp, 0x1000
0x40b619:	or	qword ptr [rsp + 0xff8], 0
0x40b622:	jmp	0x40b60d
0x40b624:	mov	edi, 0x5c
0x40b629:	call	0x403b30
0x40b62e:	jmp	0x40b43c
0x40b633:	or	qword ptr [rsp + r9 - 8], 0
0x40b639:	jmp	0x40b5b9
0x40b63e:	xor	r12d, r12d
0x40b641:	jmp	0x40b522
0x40b646:	mov	esi, 0x4be7ae
0x40b64b:	xor	edi, edi
0x40b64d:	call	0x43f5d0
0x40b652:	and	r11d, 0xfff
0x40b659:	sub	rsp, r11
0x40b65c:	test	r11, r11
0x40b65f:	je	0x40b667
0x40b661:	or	qword ptr [rsp + r11 - 8], 0
0x40b667:	lea	r8, [rsp + 0xf]
0x40b66c:	and	r8, 0xfffffffffffffff0
0x40b670:	cmp	qword ptr [r12 + 0x40], 0
0x40b676:	mov	r15, r8
0x40b679:	je	0x40baac
0x40b67f:	mov	r9, qword ptr [r12 + 0x48]
0x40b684:	test	r9, r9
0x40b687:	je	0x40bace
0x40b68d:	movsxd	rsi, dword ptr [rbp - 0x48]
0x40b691:	mov	r14d, dword ptr [r12 + 0x30]
0x40b696:	mov	rdi, rsi
0x40b699:	cmp	esi, r14d
0x40b69c:	jle	0x40b6d4
0x40b69e:	movsxd	rcx, r14d
0x40b6a1:	sub	edi, r14d
0x40b6a4:	xor	esi, esi
0x40b6a6:	mov	qword ptr [rbp - 0x78], r9
0x40b6aa:	movsxd	rdx, edi
0x40b6ad:	mov	rdi, rcx
0x40b6b0:	mov	qword ptr [rbp - 0x68], r8
0x40b6b4:	shl	rdi, 5
0x40b6b8:	shl	rdx, 5
0x40b6bc:	mov	qword ptr [rbp - 0x70], rcx
0x40b6c0:	add	rdi, r8
0x40b6c3:	call	0x403ac0
0x40b6c8:	mov	r9, qword ptr [rbp - 0x78]
0x40b6cc:	mov	rsi, qword ptr [rbp - 0x70]
0x40b6d0:	mov	r8, qword ptr [rbp - 0x68]
0x40b6d4:	shl	rsi, 5
0x40b6d8:	mov	rdi, r8
0x40b6db:	mov	rdx, rsi
0x40b6de:	mov	rsi, r9
0x40b6e1:	call	0x403c60
0x40b6e6:	mov	rdi, r12
0x40b6e9:	mov	r12, r15
0x40b6ec:	xor	r15d, r15d
0x40b6ef:	call	0x42b493
0x40b6f4:	mov	rdx, qword ptr [rbp - 0x60]
0x40b6f8:	mov	eax, dword ptr [rdx + r15*4]
0x40b6fc:	mov	edi, eax
0x40b6fe:	and	edi, 0x7f
0x40b701:	lea	r10d, [rdi + 1]
0x40b705:	sub	r10b, 1
0x40b709:	jle	0x40b8a8
0x40b70f:	cmp	edi, 0xd
0x40b712:	jne	0x40ba1b
0x40b718:	mov	r11d, dword ptr [rip + 0xdaae1]
0x40b71f:	test	r11d, r11d
0x40b722:	je	0x40ba44
0x40b728:	add	r11d, 1
0x40b72c:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40b733:	mov	dword ptr [rip + 0xdaac6], r11d
0x40b73a:	cmp	dword ptr [rip + 0xda88f], 0
0x40b741:	je	0x40b906
0x40b747:	mov	rdi, qword ptr [r12 + 8]
0x40b74c:	test	rdi, rdi
0x40b74f:	js	0x40bb78
0x40b755:	pxor	xmm8, xmm8
0x40b75a:	cvtsi2sd	xmm8, rdi
0x40b75f:	movsd	xmm9, qword ptr [rip + 0xb8ae0]
0x40b768:	mov	r11, qword ptr [r12]
0x40b76c:	divsd	xmm8, xmm9
0x40b771:	test	r11, r11
0x40b774:	js	0x40bbb7
0x40b77a:	pxor	xmm10, xmm10
0x40b77f:	cvtsi2sd	xmm10, r11
0x40b784:	mov	r9, qword ptr [r12 + 0x18]
0x40b789:	movapd	xmm11, xmm8
0x40b78e:	addsd	xmm11, xmm10
0x40b793:	test	r9, r9
0x40b796:	js	0x40bbd8
0x40b79c:	pxor	xmm12, xmm12
0x40b7a1:	cvtsi2sd	xmm12, r9
0x40b7a6:	mov	r8, qword ptr [r12 + 0x10]
0x40b7ab:	divsd	xmm12, xmm9
0x40b7b0:	test	r8, r8
0x40b7b3:	js	0x40bc0f
0x40b7b9:	pxor	xmm1, xmm1
0x40b7bd:	cvtsi2sd	xmm1, r8
0x40b7c2:	addsd	xmm1, xmm12
0x40b7c7:	movapd	xmm13, xmm11
0x40b7cc:	addsd	xmm13, xmm1
0x40b7d1:	ucomisd	xmm13, qword ptr [rip + 0xb8a76]
0x40b7da:	jp	0x40bc5d
0x40b7e0:	jne	0x40bc5d
0x40b7e6:	add	qword ptr [rbp - 0x50], 0x10
0x40b7eb:	add	r15, 1
0x40b7ef:	add	r12, 0x20
0x40b7f3:	cmp	dword ptr [rbp - 0x48], r15d
0x40b7f7:	jg	0x40b6f4
0x40b7fd:	mov	r12, qword ptr [rbx + 8]
0x40b801:	mov	rdi, qword ptr [r12]
0x40b805:	cmp	rdi, qword ptr [rbx]
0x40b808:	je	0x40b393
0x40b80e:	call	0x403830
0x40b813:	jmp	0x40b393
0x40b818:	mov	esi, 0x2c
0x40b81d:	call	0x403a40
0x40b822:	mov	rdi, rax
0x40b825:	test	rax, rax
0x40b828:	jne	0x40b528
0x40b82e:	mov	edx, 1
0x40b833:	mov	esi, r15d
0x40b836:	lea	r14d, [r15 + r12]
0x40b83a:	mov	edi, 0x4e32c8
0x40b83f:	call	0x436d70
0x40b844:	mov	rsi, qword ptr [rip + 0xd7a7d]
0x40b84b:	mov	edx, r12d
0x40b84e:	shl	rdx, 3
0x40b852:	test	rsi, rsi
0x40b855:	je	0x40b85f
0x40b857:	mov	dword ptr [rsi + 4], r14d
0x40b85b:	add	rsi, 8
0x40b85f:	movsxd	rdi, r15d
0x40b862:	xor	r14d, r14d
0x40b865:	lea	rdi, [rsi + rdi*8]
0x40b869:	call	0x403d90
0x40b86e:	mov	r12, qword ptr [rip + 0xd7a53]
0x40b875:	mov	rdi, r13
0x40b878:	cmp	byte ptr [rdi], 0x2c
0x40b87b:	lea	r13d, [r14 + 1]
0x40b87f:	je	0x40ba80
0x40b885:	mov	esi, r14d
0x40b888:	mov	qword ptr [r12 + rsi*8 + 8], rdi
0x40b88d:	mov	esi, 0x2c
0x40b892:	call	0x403a40
0x40b897:	mov	rdi, rax
0x40b89a:	test	rax, rax
0x40b89d:	je	0x40ba8f
0x40b8a3:	mov	r14d, r13d
0x40b8a6:	jmp	0x40b878
0x40b8a8:	test	edi, edi
0x40b8aa:	jne	0x40b73a
0x40b8b0:	movzx	edi, ah
0x40b8b3:	mov	r13d, edi
0x40b8b6:	test	ah, 0xff
0x40b8b9:	je	0x40b73a
0x40b8bf:	mov	edi, 0x4be7cc
0x40b8c4:	call	0x4383f0
0x40b8c9:	cmp	dword ptr [rip + 0xda2d4], 0
0x40b8d0:	jne	0x40b8d7
0x40b8d2:	test	rax, rax
0x40b8d5:	je	0x40b8e6
0x40b8d7:	test	r15d, r15d
0x40b8da:	jne	0x40b8e6
0x40b8dc:	cmp	r13d, 4
0x40b8e0:	je	0x40badc
0x40b8e6:	cmp	r13d, dword ptr [rip + 0xd6c9b]
0x40b8ed:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40b8f4:	jle	0x40b73a
0x40b8fa:	mov	dword ptr [rip + 0xd6c87], r13d
0x40b901:	jmp	0x40b73a
0x40b906:	mov	rdi, qword ptr [rip + 0xd790b]
0x40b90d:	test	rdi, rdi
0x40b910:	je	0x40b7e6
0x40b916:	mov	rcx, qword ptr [r12 + 8]
0x40b91b:	test	rcx, rcx
0x40b91e:	js	0x40bb5a
0x40b924:	pxor	xmm2, xmm2
0x40b928:	cvtsi2sd	xmm2, rcx
0x40b92d:	movsd	xmm3, qword ptr [rip + 0xb8913]
0x40b935:	mov	rsi, qword ptr [r12]
0x40b939:	divsd	xmm2, xmm3
0x40b93d:	test	rsi, rsi
0x40b940:	js	0x40bb1e
0x40b946:	pxor	xmm1, xmm1
0x40b94a:	cvtsi2sd	xmm1, rsi
0x40b94f:	mov	rax, qword ptr [r12 + 0x18]
0x40b954:	movapd	xmm5, xmm2
0x40b958:	addsd	xmm5, xmm1
0x40b95c:	test	rax, rax
0x40b95f:	js	0x40bb3c
0x40b965:	pxor	xmm6, xmm6
0x40b969:	cvtsi2sd	xmm6, rax
0x40b96e:	mov	r10, qword ptr [r12 + 0x10]
0x40b973:	divsd	xmm6, xmm3
0x40b977:	test	r10, r10
0x40b97a:	js	0x40bb98
0x40b980:	pxor	xmm1, xmm1
0x40b984:	cvtsi2sd	xmm1, r10
0x40b989:	addsd	xmm1, xmm6
0x40b98d:	movapd	xmm7, xmm5
0x40b991:	addsd	xmm7, xmm1
0x40b995:	ucomisd	xmm7, qword ptr [rip + 0xb88b3]
0x40b99d:	jp	0x40b9a5
0x40b99f:	je	0x40b7e6
0x40b9a5:	movapd	xmm0, xmm5
0x40b9a9:	mov	edx, 0x4be7f2
0x40b9ae:	mov	esi, 1
0x40b9b3:	mov	eax, 2
0x40b9b8:	call	0x403e90
0x40b9bd:	mov	r14, qword ptr [rbp - 0x50]
0x40b9c1:	mov	r13d, 8
0x40b9c7:	mov	r10, qword ptr [r14]
0x40b9ca:	test	r10, r10
0x40b9cd:	je	0x40bbf9
0x40b9d3:	mov	rdi, r10
0x40b9d6:	movzx	r11d, byte ptr [rdi]
0x40b9da:	test	r11b, r11b
0x40b9dd:	je	0x40bc2e
0x40b9e3:	lea	ecx, [r11 - 0x22]
0x40b9e7:	cmp	cl, 0x3a
0x40b9ea:	ja	0x40ba06
0x40b9ec:	movabs	r9, 0x400000000000005
0x40b9f6:	shr	r9, cl
0x40b9f9:	mov	rsi, r9
0x40b9fc:	and	sil, 1
0x40ba00:	jne	0x40bca9
0x40ba06:	test	byte ptr [r11 + r11 + 0x4bc840], 0x40
0x40ba0f:	jne	0x40bca9
0x40ba15:	add	rdi, 1
0x40ba19:	jmp	0x40b9d6
0x40ba1b:	jg	0x40ba53
0x40ba1d:	test	al, 0x7c
0x40ba1f:	jne	0x40ba79
0x40ba21:	test	al, 0x7e
0x40ba23:	jne	0x40ba58
0x40ba25:	shl	r15, 4
0x40ba29:	mov	r12, qword ptr [rbx + r15]
0x40ba2d:	call	0x403d10
0x40ba32:	mov	edi, 0x4bfa00
0x40ba37:	mov	rsi, rax
0x40ba3a:	mov	rdx, r12
0x40ba3d:	xor	eax, eax
0x40ba3f:	call	0x42be6e
0x40ba44:	cmp	dword ptr [rip + 0xd6b3d], 0
0x40ba4b:	jg	0x40b728
0x40ba51:	jmp	0x40ba25
0x40ba53:	cmp	edi, 0xf
0x40ba56:	jne	0x40ba25
0x40ba58:	shl	r15, 4
0x40ba5c:	mov	rbx, qword ptr [rbx + r15]
0x40ba60:	call	0x403d10
0x40ba65:	mov	esi, 0x4bfa00
0x40ba6a:	xor	edi, edi
0x40ba6c:	mov	rdx, rax
0x40ba6f:	mov	rcx, rbx
0x40ba72:	xor	eax, eax
0x40ba74:	call	0x43f5d0
0x40ba79:	cmp	edi, 9
0x40ba7c:	je	0x40ba58
0x40ba7e:	jmp	0x40ba25
0x40ba80:	mov	byte ptr [rdi], 0
0x40ba83:	mov	r13d, r14d
0x40ba86:	add	rdi, 1
0x40ba8a:	jmp	0x40b8a3
0x40ba8f:	cmp	ebx, r14d
0x40ba92:	je	0x43d5c7
0x40ba98:	mov	edx, 0x4be798
0x40ba9d:	mov	esi, 0x16d9
0x40baa2:	mov	edi, 0x45b1e2
0x40baa7:	call	0x415bba
0x40baac:	xor	esi, esi
0x40baae:	lea	rcx, [rbp - 0x3c]
0x40bab2:	lea	rdx, [rbp - 0x38]
0x40bab6:	mov	rdi, r12
0x40bab9:	mov	qword ptr [rbp - 0x68], r8
0x40babd:	call	0x42b34a
0x40bac2:	mov	r8, qword ptr [rbp - 0x68]
0x40bac6:	test	eax, eax
0x40bac8:	jne	0x40b67f
0x40bace:	mov	esi, 0x4bf9e0
0x40bad3:	xor	edi, edi
0x40bad5:	xor	eax, eax
0x40bad7:	call	0x43f5d0
0x40badc:	mov	r14, qword ptr [rbx + 8]
0x40bae0:	mov	esi, 0x2f
0x40bae5:	mov	rdi, qword ptr [r14]
0x40bae8:	call	0x403a60
0x40baed:	test	rax, rax
0x40baf0:	je	0x40b8e6
0x40baf6:	lea	rdi, [rax + 1]
0x40bafa:	mov	edx, 3
0x40baff:	mov	esi, 0x4be7de
0x40bb04:	call	0x4038d0
0x40bb09:	test	eax, eax
0x40bb0b:	jne	0x40b8e6
0x40bb11:	mov	rdi, r14
0x40bb14:	call	0x415126
0x40bb19:	jmp	0x40b8e6
0x40bb1e:	mov	r8, rsi
0x40bb21:	and	esi, 1
0x40bb24:	pxor	xmm1, xmm1
0x40bb28:	shr	r8, 1
0x40bb2b:	or	rsi, r8
0x40bb2e:	cvtsi2sd	xmm1, rsi
0x40bb33:	addsd	xmm1, xmm1
0x40bb37:	jmp	0x40b94f
0x40bb3c:	mov	rdx, rax
0x40bb3f:	and	eax, 1
0x40bb42:	pxor	xmm6, xmm6
0x40bb46:	shr	rdx, 1
0x40bb49:	or	rax, rdx
0x40bb4c:	cvtsi2sd	xmm6, rax
0x40bb51:	addsd	xmm6, xmm6
0x40bb55:	jmp	0x40b96e
0x40bb5a:	mov	r9, rcx
0x40bb5d:	and	ecx, 1
0x40bb60:	pxor	xmm2, xmm2
0x40bb64:	shr	r9, 1
0x40bb67:	or	rcx, r9
0x40bb6a:	cvtsi2sd	xmm2, rcx
0x40bb6f:	addsd	xmm2, xmm2
0x40bb73:	jmp	0x40b92d
0x40bb78:	mov	r14, rdi
0x40bb7b:	and	edi, 1
0x40bb7e:	pxor	xmm8, xmm8
0x40bb83:	shr	r14, 1
0x40bb86:	or	rdi, r14
0x40bb89:	cvtsi2sd	xmm8, rdi
0x40bb8e:	addsd	xmm8, xmm8
0x40bb93:	jmp	0x40b75f
0x40bb98:	mov	r13, r10
0x40bb9b:	and	r10d, 1
0x40bb9f:	pxor	xmm1, xmm1
0x40bba3:	shr	r13, 1
0x40bba6:	or	r10, r13
0x40bba9:	cvtsi2sd	xmm1, r10
0x40bbae:	addsd	xmm1, xmm1
0x40bbb2:	jmp	0x40b989
0x40bbb7:	mov	rcx, r11
0x40bbba:	and	r11d, 1
0x40bbbe:	pxor	xmm10, xmm10
0x40bbc3:	shr	rcx, 1
0x40bbc6:	or	r11, rcx
0x40bbc9:	cvtsi2sd	xmm10, r11
0x40bbce:	addsd	xmm10, xmm10
0x40bbd3:	jmp	0x40b784
0x40bbd8:	mov	rsi, r9
0x40bbdb:	and	r9d, 1
0x40bbdf:	pxor	xmm12, xmm12
0x40bbe4:	shr	rsi, 1
0x40bbe7:	or	r9, rsi
0x40bbea:	cvtsi2sd	xmm12, r9
0x40bbef:	addsd	xmm12, xmm12
0x40bbf4:	jmp	0x40b7a6
0x40bbf9:	mov	rsi, qword ptr [rip + 0xd7618]
0x40bc00:	mov	edi, 0xa
0x40bc05:	call	0x403b30
0x40bc0a:	jmp	0x40b7e6
0x40bc0f:	mov	rax, r8
0x40bc12:	and	r8d, 1
0x40bc16:	pxor	xmm1, xmm1
0x40bc1a:	shr	rax, 1
0x40bc1d:	or	r8, rax
0x40bc20:	cvtsi2sd	xmm1, r8
0x40bc25:	addsd	xmm1, xmm1
0x40bc29:	jmp	0x40b7c2
0x40bc2e:	mov	rcx, r10
0x40bc31:	mov	edx, 0x4c6bef
0x40bc36:	mov	esi, 1
0x40bc3b:	xor	eax, eax
0x40bc3d:	mov	rdi, qword ptr [rip + 0xd75d4]
0x40bc44:	call	0x403e90
0x40bc49:	mov	r14, qword ptr [rbp - 0x50]
0x40bc4d:	mov	r14, qword ptr [r14 + 8]
0x40bc51:	add	r14, r13
0x40bc54:	add	r13, 8
0x40bc58:	jmp	0x40b9c7
0x40bc5d:	mov	rdx, qword ptr [rbp - 0x50]
0x40bc61:	movapd	xmm0, xmm11
0x40bc66:	mov	esi, 0x4be7e2
0x40bc6b:	mov	rdi, qword ptr [rip + 0xd742e]
0x40bc72:	mov	eax, 2
0x40bc77:	movsd	qword ptr [rbp - 0x70], xmm1
0x40bc7c:	mov	rdx, qword ptr [rdx]
0x40bc7f:	movsd	qword ptr [rbp - 0x68], xmm11
0x40bc85:	call	0x43a390
0x40bc8a:	movsd	xmm5, qword ptr [rbp - 0x68]
0x40bc8f:	movsd	xmm1, qword ptr [rbp - 0x70]
0x40bc94:	mov	rdi, qword ptr [rip + 0xd757d]
0x40bc9b:	test	rdi, rdi
0x40bc9e:	je	0x40b7e6
0x40bca4:	jmp	0x40b9a5
0x40bca9:	mov	edx, 2
0x40bcae:	mov	esi, 1
0x40bcb3:	mov	edi, 0x4be7f8
0x40bcb8:	mov	rcx, qword ptr [rip + 0xd7559]
0x40bcbf:	call	0x403e80
0x40bcc4:	mov	r14, qword ptr [r14]
0x40bcc7:	movzx	eax, byte ptr [r14]
0x40bccb:	mov	rsi, qword ptr [rip + 0xd7546]
0x40bcd2:	test	al, al
0x40bcd4:	je	0x40bd09
0x40bcd6:	sub	eax, 0x22
0x40bcd9:	cmp	al, 0x3a
0x40bcdb:	ja	0x40bcf3
0x40bcdd:	movabs	r8, 0x400000000000005
0x40bce7:	mov	ecx, eax
0x40bce9:	shr	r8, cl
0x40bcec:	mov	rax, r8
0x40bcef:	test	al, 1
0x40bcf1:	jne	0x40bd18
0x40bcf3:	movsx	edi, byte ptr [r14]
0x40bcf7:	mov	rsi, qword ptr [rip + 0xd751a]
0x40bcfe:	add	r14, 1
0x40bd02:	call	0x403b30
0x40bd07:	jmp	0x40bcc7
0x40bd09:	mov	edi, 0x22
0x40bd0e:	call	0x403b30
0x40bd13:	jmp	0x40bc49
0x40bd18:	mov	edi, 0x5c
0x40bd1d:	call	0x403b30
0x40bd22:	jmp	0x40bcf3
0x40bd24:	mov	r13d, dword ptr [rsp + 0x14]
0x40bd29:	add	r13d, r13d
0x40bd2c:	jmp	0x43dcaf
0x40bd31:	or	rbx, 0xffffffffffffffff
0x40bd35:	jmp	0x43d8b0
0x40bd3a:	lea	r13d, [rsi + rsi]
0x40bd3e:	jmp	0x43dcaf
0x40bd43:	nop	
0x40bd44:	add	dword ptr [rip + 0xd73b1], 1
0x40bd4b:	mov	r12d, 6
0x40bd51:	jmp	0x43e13e
0x40bd56:	cmp	r12d, 3
0x40bd5a:	sete	r11b
0x40bd5e:	cmp	r12d, 0xe
0x40bd62:	sete	r14b
0x40bd66:	or	r11b, r14b
0x40bd69:	je	0x40bdb6
0x40bd6b:	cmp	r15d, 1
0x40bd6f:	jne	0x40bdb6
0x40bd71:	mov	rdi, qword ptr [rip + 0xd7348]
0x40bd78:	call	0x43fe00
0x40bd7d:	jmp	0x43dfde
0x40bd82:	cmp	dword ptr [rsp + 0xd0], 6
0x40bd8a:	jne	0x43dff2
0x40bd90:	mov	dword ptr [rsp + 0xd0], 4
0x40bd9b:	test	edi, edi
0x40bd9d:	je	0x40bdef
0x40bd9f:	cmp	dword ptr [rip + 0xd73a7], edi
0x40bda5:	jne	0x43e006
0x40bdab:	mov	r10d, 4
0x40bdb1:	jmp	0x43e0fe
0x40bdb6:	cmp	r15d, 2
0x40bdba:	jg	0x40bdc8
0x40bdbc:	mov	rdi, qword ptr [rip + 0xd72fd]
0x40bdc3:	call	0x43fe00
0x40bdc8:	mov	rdi, qword ptr [rip + 0xd72d1]
0x40bdcf:	mov	esi, 0x4c4898
0x40bdd4:	xor	eax, eax
0x40bdd6:	call	0x43a390
0x40bddb:	mov	esi, 3
0x40bde0:	mov	edi, 0x4e30c0
0x40bde5:	call	0x43f520
0x40bdea:	call	0x403880
0x40bdef:	mov	edx, dword ptr [rip + 0xd735f]
0x40bdf5:	test	edx, edx
0x40bdf7:	jne	0x40be05
0x40bdf9:	add	dword ptr [rip + 0xd73c0], 1
0x40be00:	jmp	0x43e11d
0x40be05:	mov	r10d, 4
0x40be0b:	mov	ebx, dword ptr [rip + 0xd72cb]
0x40be11:	add	ebx, dword ptr [rip + 0xd72c1]
0x40be17:	add	ebx, dword ptr [rip + 0xd72df]
0x40be1d:	cmp	edx, ebx
0x40be1f:	jg	0x43e10c
0x40be25:	mov	rdi, qword ptr [rip + 0xd7274]
0x40be2c:	mov	esi, 0x4c48d8
0x40be31:	xor	eax, eax
0x40be33:	call	0x43a390
0x40be38:	mov	edi, 1
0x40be3d:	call	0x403e70
0x40be42:	mov	esi, dword ptr [rsp + 0xd4]
0x40be49:	mov	edi, 0x4e30c0
0x40be4e:	call	rax
0x40be50:	mov	r13, qword ptr [rip + 0xd7269]
0x40be57:	mov	esi, 0x4c425f
0x40be5c:	mov	r15, rax
0x40be5f:	mov	rdi, r13
0x40be62:	call	0x430480
0x40be67:	movsxd	r10, dword ptr [rsp + 0xd0]
0x40be6f:	movzx	edi, byte ptr [r13 + 0x43]
0x40be74:	mov	rsi, qword ptr [r10*8 + 0x4c6ae0]
0x40be7c:	call	0x43f100
0x40be81:	mov	rdi, r13
0x40be84:	mov	rsi, rax
0x40be87:	call	0x430480
0x40be8c:	test	r15, r15
0x40be8f:	je	0x43e242
0x40be95:	mov	rsi, r15
0x40be98:	mov	rdi, r13
0x40be9b:	call	0x41edcb
0x40bea0:	mov	rsi, rbx
0x40bea3:	mov	rdi, r13
0x40bea6:	call	0x430480
0x40beab:	mov	rdi, r13
0x40beae:	call	0x41ee45
0x40beb3:	mov	rdi, r15
0x40beb6:	call	0x403830
0x40bebb:	jmp	0x43e24d
0x40bec0:	add	dword ptr [rip + 0xd72f9], 1
0x40bec7:	cmp	dword ptr [rip + 0xd720a], 0
0x40bece:	jle	0x40bf05
0x40bed0:	cmp	byte ptr [rip + 0xd726f], 0
0x40bed7:	je	0x40bf10
0x40bed9:	mov	rcx, qword ptr [rip + 0xd7290]
0x40bee0:	test	rcx, rcx
0x40bee3:	je	0x43e11d
0x40bee9:	mov	rdx, qword ptr [rsp + 0x98]
0x40bef1:	mov	rsi, qword ptr [rsp + 0x90]
0x40bef9:	mov	edi, 0x4e30c0
0x40befe:	call	rcx
0x40bf00:	jmp	0x43e11d
0x40bf05:	cmp	dword ptr [rip + 0xd71d0], 0
0x40bf0c:	jg	0x40bed0
0x40bf0e:	jmp	0x40bed9
0x40bf10:	mov	rsi, qword ptr [rsp + 0xb0]
0x40bf18:	lea	rdi, [rsp + 0x70]
0x40bf1d:	mov	esi, dword ptr [rsi + 0x10]
0x40bf20:	call	0x430be0
0x40bf25:	mov	ecx, dword ptr [rsp + 0x78]
0x40bf29:	mov	rdx, qword ptr [rsp + 0x70]
0x40bf2e:	xor	eax, eax
0x40bf30:	mov	rdi, qword ptr [rip + 0xd7169]
0x40bf37:	mov	esi, 0x4c4908
0x40bf3c:	call	0x43a390
0x40bf41:	mov	edi, 4
0x40bf46:	call	0x403e70
0x40bf4b:	mov	rbp, qword ptr [rip + 0xd7246]
0x40bf52:	test	rbp, rbp
0x40bf55:	je	0x43e01f
0x40bf5b:	mov	byte ptr [rsp], al
0x40bf5e:	mov	edi, 0x4e30c0
0x40bf63:	call	rbp
0x40bf65:	movzx	eax, byte ptr [rsp]
0x40bf69:	jmp	0x43e01f
0x40bf6e:	mov	r12, qword ptr [rsp + 0xb8]
0x40bf76:	cmp	byte ptr [r12 + 0xa1], 0
0x40bf7f:	mov	qword ptr [rsp + 0x18], r12
0x40bf84:	jne	0x43e2d3
0x40bf8a:	cmp	byte ptr [r14], 0
0x40bf8e:	je	0x43e2d3
0x40bf94:	lea	r8, [r12 + 0x78]
0x40bf99:	mov	dword ptr [rsp + 0x24], 0
0x40bfa1:	cmp	byte ptr [r12 + 0xa0], 0
0x40bfaa:	mov	qword ptr [rsp + 0x38], r8
0x40bfaf:	jne	0x40c09e
0x40bfb5:	mov	rdi, qword ptr [rsp + 0x18]
0x40bfba:	mov	edx, dword ptr [rsp + 0x24]
0x40bfbe:	cmp	edx, dword ptr [rdi + 0x78]
0x40bfc1:	jae	0x43e2d3
0x40bfc7:	movsxd	r9, dword ptr [rsp + 0x24]
0x40bfcc:	mov	r11, r9
0x40bfcf:	sub	r11d, 1
0x40bfd3:	jle	0x40c1a6
0x40bfd9:	mov	rbx, qword ptr [rsp + 0x18]
0x40bfde:	mov	rax, qword ptr [rbx + 0x98]
0x40bfe5:	lea	r13, [rax + r9*8 - 0x10]
0x40bfea:	mov	r12, qword ptr [r13]
0x40bfee:	lea	rdi, [rsp + 0x50]
0x40bff3:	mov	esi, dword ptr [r12]
0x40bff7:	call	0x430be0
0x40bffc:	mov	r15d, dword ptr [rsp + 0x5c]
0x40c001:	mov	esi, dword ptr [r12 + 4]
0x40c006:	lea	rdi, [rsp + 0x70]
0x40c00b:	mov	r13, qword ptr [rsp + 0x50]
0x40c010:	mov	ebp, dword ptr [rsp + 0x58]
0x40c014:	mov	dword ptr [rsp + 0x30], r15d
0x40c019:	call	0x430be0
0x40c01e:	mov	r10d, dword ptr [rsp + 0x7c]
0x40c023:	mov	dword ptr [rsp + 0x40], r10d
0x40c028:	cmp	r13, qword ptr [rsp + 0x70]
0x40c02d:	je	0x40c1eb
0x40c033:	mov	byte ptr [r14], 0
0x40c037:	add	dword ptr [rsp + 0x24], 1
0x40c03c:	jmp	0x40bfb5
0x40c041:	mov	ecx, dword ptr [rip + 0xd7199]
0x40c047:	mov	rsi, qword ptr [rsp + 0xb8]
0x40c04f:	mov	edx, 1
0x40c054:	mov	rdi, qword ptr [rip + 0xd7065]
0x40c05b:	call	0x41a63a
0x40c060:	mov	rdi, qword ptr [rip + 0xd7059]
0x40c067:	call	0x43f490
0x40c06c:	jmp	0x43e2a6
0x40c071:	mov	ecx, dword ptr [rip + 0xd7169]
0x40c077:	mov	rsi, qword ptr [rsp + 0xb8]
0x40c07f:	xor	edx, edx
0x40c081:	mov	rdi, qword ptr [rip + 0xd7038]
0x40c088:	call	0x41a63a
0x40c08d:	mov	rdi, qword ptr [rip + 0xd702c]
0x40c094:	call	0x43f490
0x40c099:	jmp	0x43e2a6
0x40c09e:	mov	byte ptr [r14], 0
0x40c0a2:	jmp	0x43e2d3
0x40c0a7:	mov	edi, 0x4e30c0
0x40c0ac:	call	r8
0x40c0af:	jmp	0x43e157
0x40c0b4:	mov	ebx, dword ptr [rdx]
0x40c0b6:	test	ebx, ebx
0x40c0b8:	je	0x43e1bd
0x40c0be:	mov	r13, qword ptr [rip + 0xd6ffb]
0x40c0c5:	mov	esi, 0x4c425f
0x40c0ca:	mov	r15, qword ptr [r13 + 0x10]
0x40c0ce:	mov	qword ptr [r13 + 0x10], 0
0x40c0d6:	mov	rdi, r13
0x40c0d9:	call	0x430480
0x40c0de:	movsxd	r9, dword ptr [rsp + 0xd0]
0x40c0e6:	movzx	edi, byte ptr [r13 + 0x43]
0x40c0eb:	mov	rsi, qword ptr [r9*8 + 0x4c6ae0]
0x40c0f3:	call	0x43f100
0x40c0f8:	mov	rdi, r13
0x40c0fb:	mov	rsi, rax
0x40c0fe:	call	0x430480
0x40c103:	cmp	dword ptr [r13 + 0x44], 0
0x40c108:	jne	0x40c1b5
0x40c10e:	xor	eax, eax
0x40c110:	mov	edx, ebx
0x40c112:	mov	esi, 0x4c4262
0x40c117:	mov	rdi, r13
0x40c11a:	call	0x43fd30
0x40c11f:	mov	rdi, qword ptr [rip + 0xd6f9a]
0x40c126:	mov	rsi, r15
0x40c129:	call	0x4325a0
0x40c12e:	cmp	dword ptr [r13 + 0x44], 0
0x40c133:	jne	0x40c1de
0x40c139:	cmp	byte ptr [r13 + 0x43], 0
0x40c13e:	mov	r11d, 0x4c4893
0x40c144:	mov	esi, 0x4c4258
0x40c149:	mov	rdi, r13
0x40c14c:	cmove	rsi, r11
0x40c150:	call	0x430480
0x40c155:	mov	esi, 0x5d
0x40c15a:	mov	rdi, r13
0x40c15d:	call	0x431ef0
0x40c162:	jmp	0x43e1bd
0x40c167:	mov	r13d, dword ptr [r9 + 8]
0x40c16b:	mov	r11d, dword ptr [r9 + 4]
0x40c16f:	cmp	r13d, 0x10
0x40c173:	jne	0x40c186
0x40c175:	mov	eax, r11d
0x40c178:	sub	eax, 1
0x40c17b:	jns	0x43e096
0x40c181:	jmp	0x43e0bc
0x40c186:	test	r11d, r11d
0x40c189:	je	0x40c190
0x40c18b:	cmp	r11d, ebx
0x40c18e:	jne	0x40c178
0x40c190:	test	r13d, r13d
0x40c193:	je	0x43e0bc
0x40c199:	mov	dword ptr [rsp + 0xd0], r13d
0x40c1a1:	jmp	0x43e0d4
0x40c1a6:	mov	rsi, qword ptr [rsp + 0x38]
0x40c1ab:	lea	r13, [rsi + r9*8 + 8]
0x40c1b0:	jmp	0x40bfea
0x40c1b5:	mov	esi, ebx
0x40c1b7:	mov	edi, 0x465170
0x40c1bc:	xor	eax, eax
0x40c1be:	call	0x406513
0x40c1c3:	mov	rdi, r13
0x40c1c6:	mov	r14, rax
0x40c1c9:	mov	rsi, rax
0x40c1cc:	call	0x41edcb
0x40c1d1:	mov	rdi, r14
0x40c1d4:	call	0x403830
0x40c1d9:	jmp	0x40c10e
0x40c1de:	mov	rdi, r13
0x40c1e1:	call	0x41ee45
0x40c1e6:	jmp	0x40c139
0x40c1eb:	cmp	ebp, dword ptr [rsp + 0x78]
0x40c1ef:	jne	0x40c033
0x40c1f5:	test	r15d, r15d
0x40c1f8:	je	0x40c033
0x40c1fe:	test	r10d, r10d
0x40c201:	je	0x40c033
0x40c207:	test	r13, r13
0x40c20a:	je	0x40c42e
0x40c210:	lea	r15, [r14 + 8]
0x40c214:	mov	rsi, r13
0x40c217:	mov	rdi, r15
0x40c21a:	call	0x41ea62
0x40c21f:	mov	rcx, qword ptr [r14 + 8]
0x40c223:	test	rcx, rcx
0x40c226:	je	0x40c442
0x40c22c:	mov	rdi, qword ptr [rcx]
0x40c22f:	mov	rsi, r13
0x40c232:	call	qword ptr [r14 + 0x10]
0x40c236:	test	eax, eax
0x40c238:	jne	0x40c442
0x40c23e:	mov	r8, qword ptr [r14 + 8]
0x40c242:	test	r8, r8
0x40c245:	je	0x40c442
0x40c24b:	mov	rbx, qword ptr [r8 + 8]
0x40c24f:	test	rbx, rbx
0x40c252:	je	0x40c442
0x40c258:	cmp	byte ptr [r14], 0
0x40c25c:	je	0x40c033
0x40c262:	mov	rsi, qword ptr [r12 + 8]
0x40c267:	mov	rax, qword ptr [r12 + 0x10]
0x40c26c:	lea	r12, [rbx + 8]
0x40c270:	mov	rdi, r12
0x40c273:	mov	qword ptr [rsp + 0x28], rsi
0x40c278:	mov	esi, ebp
0x40c27a:	mov	qword ptr [rsp], rax
0x40c27e:	call	0x41ebb8
0x40c283:	mov	r10, qword ptr [rbx + 8]
0x40c287:	test	r10, r10
0x40c28a:	je	0x40c555
0x40c290:	mov	edi, dword ptr [r10]
0x40c293:	mov	esi, ebp
0x40c295:	call	qword ptr [rbx + 0x10]
0x40c298:	test	eax, eax
0x40c29a:	jne	0x40c555
0x40c2a0:	mov	r15, qword ptr [rbx + 8]
0x40c2a4:	test	r15, r15
0x40c2a7:	je	0x40c555
0x40c2ad:	mov	r15, qword ptr [r15 + 8]
0x40c2b1:	test	r15, r15
0x40c2b4:	je	0x40c555
0x40c2ba:	cmp	dword ptr [rsp], 1
0x40c2be:	jle	0x40c2d8
0x40c2c0:	movsxd	rbx, dword ptr [rsp]
0x40c2c4:	mov	rax, qword ptr [rsp + 0x28]
0x40c2c9:	cmp	byte ptr [rax + rbx - 1], 0xa
0x40c2ce:	lea	r13, [rbx - 1]
0x40c2d2:	je	0x40c6f1
0x40c2d8:	mov	esi, dword ptr [rsp + 0x30]
0x40c2dc:	mov	rdi, r15
0x40c2df:	call	0x41ea10
0x40c2e4:	mov	esi, dword ptr [rsp + 0x40]
0x40c2e8:	mov	rdi, r15
0x40c2eb:	mov	ebx, eax
0x40c2ed:	call	0x41ea10
0x40c2f2:	mov	r13d, ebx
0x40c2f5:	mov	ebp, eax
0x40c2f7:	lea	edx, [rax - 1]
0x40c2fa:	sub	r13d, 1
0x40c2fe:	js	0x40c6dd
0x40c304:	test	edx, edx
0x40c306:	js	0x40c795
0x40c30c:	cmp	ebx, eax
0x40c30e:	jg	0x40c033
0x40c314:	movsxd	r8, dword ptr [r15 + 0x10]
0x40c318:	cmp	r13d, r8d
0x40c31b:	jg	0x40c033
0x40c321:	cmp	edx, r8d
0x40c324:	jg	0x40c033
0x40c32a:	mov	esi, dword ptr [rsp]
0x40c32d:	sub	ebp, ebx
0x40c32f:	mov	rdi, qword ptr [r15 + 8]
0x40c333:	lea	r12d, [r8 + rsi]
0x40c337:	sub	r12d, ebp
0x40c33a:	cmp	r12d, dword ptr [r15 + 0x14]
0x40c33e:	jge	0x40c837
0x40c344:	movsxd	r11, edx
0x40c347:	lea	r9, [rdi + r8]
0x40c34b:	lea	rsi, [rdi + r11]
0x40c34f:	cmp	rsi, r9
0x40c352:	ja	0x40c869
0x40c358:	movsxd	rax, dword ptr [rsp]
0x40c35c:	movsxd	r13, r13d
0x40c35f:	sub	r8, r11
0x40c362:	mov	rdx, r8
0x40c365:	lea	r10, [r13 + rax]
0x40c36a:	mov	qword ptr [rsp + 0x30], rax
0x40c36f:	add	rdi, r10
0x40c372:	call	0x403d90
0x40c377:	mov	rdi, qword ptr [r15 + 8]
0x40c37b:	mov	rdx, qword ptr [rsp + 0x30]
0x40c380:	mov	rsi, qword ptr [rsp + 0x28]
0x40c385:	add	rdi, r13
0x40c388:	call	0x403c60
0x40c38d:	mov	dword ptr [r15 + 0x10], r12d
0x40c391:	mov	rdi, r15
0x40c394:	call	0x41ea36
0x40c399:	mov	edi, dword ptr [rsp]
0x40c39c:	movd	xmm13, ebx
0x40c3a1:	sub	edi, ebp
0x40c3a3:	mov	rbp, qword ptr [r15 + 0x18]
0x40c3a7:	movd	xmm14, edi
0x40c3ac:	punpckldq	xmm13, xmm14
0x40c3b1:	movq	qword ptr [rsp], xmm13
0x40c3b7:	test	rbp, rbp
0x40c3ba:	je	0x40c87d
0x40c3c0:	mov	ebx, dword ptr [rbp]
0x40c3c3:	mov	r13d, dword ptr [rbp + 4]
0x40c3c7:	and	ebx, 0x7fffffff
0x40c3cd:	cmp	ebx, r13d
0x40c3d0:	jne	0x40c415
0x40c3d2:	cmp	byte ptr [rbp + 3], 0
0x40c3d6:	js	0x40c8c3
0x40c3dc:	mov	rdi, rbp
0x40c3df:	xor	edx, edx
0x40c3e1:	mov	esi, 1
0x40c3e6:	call	0x436e30
0x40c3eb:	mov	rdi, rbp
0x40c3ee:	mov	ecx, eax
0x40c3f0:	mov	r12d, eax
0x40c3f3:	lea	rsi, [rcx*8 + 8]
0x40c3fb:	and	r12d, 0x7fffffff
0x40c402:	call	0x42db80
0x40c407:	mov	qword ptr [r15 + 0x18], rax
0x40c40b:	mov	rbp, qword ptr [r15 + 0x18]
0x40c40f:	mov	dword ptr [rax], r12d
0x40c412:	mov	dword ptr [rax + 4], ebx
0x40c415:	mov	r15d, dword ptr [rbp + 4]
0x40c419:	mov	r10, qword ptr [rsp]
0x40c41d:	lea	eax, [r15 + 1]
0x40c421:	mov	dword ptr [rbp + 4], eax
0x40c424:	mov	qword ptr [rbp + r15*8 + 8], r10
0x40c429:	jmp	0x40c037
0x40c42e:	mov	edx, 0x4c4269
0x40c433:	mov	esi, 0x14a
0x40c438:	mov	edi, 0x4c427c
0x40c43d:	call	0x415bba
0x40c442:	mov	edi, 0x30
0x40c447:	call	0x440420
0x40c44c:	movq	xmm1, r13
0x40c451:	mov	rdi, r15
0x40c454:	mov	rsi, r13
0x40c457:	mov	qword ptr [rax], r13
0x40c45a:	movq	xmm3, rax
0x40c45f:	mov	rbx, rax
0x40c462:	mov	qword ptr [rax + 8], 0
0x40c46a:	punpcklqdq	xmm1, xmm3
0x40c46e:	mov	qword ptr [rax + 0x10], 0x413911
0x40c476:	mov	qword ptr [rax + 0x18], 0
0x40c47e:	mov	qword ptr [rax + 0x20], 0x41b3ae
0x40c486:	mov	dword ptr [rax + 0x28], 0xffffffff
0x40c48d:	movaps	xmmword ptr [rsp], xmm1
0x40c491:	call	0x41ea62
0x40c496:	mov	rdi, qword ptr [r14 + 8]
0x40c49a:	test	rdi, rdi
0x40c49d:	je	0x40c4d6
0x40c49f:	mov	rsi, r13
0x40c4a2:	mov	rdi, qword ptr [rdi]
0x40c4a5:	call	qword ptr [r14 + 0x10]
0x40c4a9:	mov	r11, qword ptr [r14 + 8]
0x40c4ad:	mov	r13d, eax
0x40c4b0:	test	eax, eax
0x40c4b2:	jne	0x40c514
0x40c4b4:	test	r11, r11
0x40c4b7:	je	0x40c514
0x40c4b9:	mov	r9, qword ptr [r14 + 0x20]
0x40c4bd:	mov	rdi, qword ptr [r11 + 8]
0x40c4c1:	test	r9, r9
0x40c4c4:	je	0x40c4cd
0x40c4c6:	call	r9
0x40c4c9:	mov	r11, qword ptr [r14 + 8]
0x40c4cd:	mov	qword ptr [r11 + 8], rbx
0x40c4d1:	jmp	0x40c258
0x40c4d6:	mov	edi, 0x28
0x40c4db:	call	0x440420
0x40c4e0:	movdqa	xmm0, xmmword ptr [rsp]
0x40c4e5:	movups	xmmword ptr [rax], xmm0
0x40c4e8:	mov	rdx, qword ptr [r14 + 8]
0x40c4ec:	test	rdx, rdx
0x40c4ef:	je	0x40c54b
0x40c4f1:	movq	xmm2, qword ptr [rdx + 0x10]
0x40c4f6:	movq	xmm5, rdx
0x40c4fb:	punpcklqdq	xmm2, xmm5
0x40c4ff:	movups	xmmword ptr [rax + 0x10], xmm2
0x40c503:	mov	qword ptr [rdx + 0x10], 0
0x40c50b:	mov	qword ptr [r14 + 8], rax
0x40c50f:	jmp	0x40c258
0x40c514:	mov	edi, 0x28
0x40c519:	call	0x440420
0x40c51e:	movdqa	xmm4, xmmword ptr [rsp]
0x40c523:	movups	xmmword ptr [rax], xmm4
0x40c526:	mov	rdx, qword ptr [r14 + 8]
0x40c52a:	test	rdx, rdx
0x40c52d:	je	0x40c54b
0x40c52f:	test	r13d, r13d
0x40c532:	jns	0x40c4f1
0x40c534:	movq	xmm6, rdx
0x40c539:	movhps	xmm6, qword ptr [rdx + 0x18]
0x40c53d:	movups	xmmword ptr [rax + 0x10], xmm6
0x40c541:	mov	qword ptr [rdx + 0x18], 0
0x40c549:	jmp	0x40c50b
0x40c54b:	pxor	xmm7, xmm7
0x40c54f:	movups	xmmword ptr [rax + 0x10], xmm7
0x40c553:	jmp	0x40c50b
0x40c555:	mov	edi, 0x28
0x40c55a:	call	0x440420
0x40c55f:	mov	rdi, qword ptr [rbx]
0x40c562:	pxor	xmm8, xmm8
0x40c567:	mov	esi, ebp
0x40c569:	mov	dword ptr [rax], ebp
0x40c56b:	mov	r15, rax
0x40c56e:	mov	qword ptr [rax + 8], 0
0x40c576:	mov	qword ptr [rax + 0x10], 0
0x40c57e:	movups	xmmword ptr [rax + 0x18], xmm8
0x40c583:	call	0x4310b0
0x40c588:	mov	r13, rax
0x40c58b:	test	rax, rax
0x40c58e:	je	0x40c5b6
0x40c590:	mov	dword ptr [r15 + 0x10], edx
0x40c594:	mov	rdi, qword ptr [r15 + 8]
0x40c598:	cmp	edx, dword ptr [r15 + 0x14]
0x40c59c:	jge	0x40c614
0x40c59e:	mov	rdi, qword ptr [r15 + 8]
0x40c5a2:	movsxd	rdx, dword ptr [r15 + 0x10]
0x40c5a6:	mov	rsi, r13
0x40c5a9:	call	0x403c60
0x40c5ae:	mov	rdi, r15
0x40c5b1:	call	0x41ea36
0x40c5b6:	cmp	qword ptr [r15 + 8], 0
0x40c5bb:	je	0x40c641
0x40c5c1:	mov	esi, ebp
0x40c5c3:	mov	rdi, r12
0x40c5c6:	call	0x41ebb8
0x40c5cb:	mov	rdx, qword ptr [rbx + 8]
0x40c5cf:	test	rdx, rdx
0x40c5d2:	je	0x40c65b
0x40c5d8:	mov	edi, dword ptr [rdx]
0x40c5da:	mov	esi, ebp
0x40c5dc:	call	qword ptr [rbx + 0x10]
0x40c5df:	mov	r11, qword ptr [rbx + 8]
0x40c5e3:	mov	r12d, eax
0x40c5e6:	test	r11, r11
0x40c5e9:	je	0x40c69a
0x40c5ef:	test	eax, eax
0x40c5f1:	jne	0x40c69a
0x40c5f7:	mov	r9, qword ptr [rbx + 0x20]
0x40c5fb:	mov	rdi, qword ptr [r11 + 8]
0x40c5ff:	test	r9, r9
0x40c602:	je	0x40c60b
0x40c604:	call	r9
0x40c607:	mov	r11, qword ptr [rbx + 8]
0x40c60b:	mov	qword ptr [r11 + 8], r15
0x40c60f:	jmp	0x40c2ba
0x40c614:	lea	r8d, [rdx + rdx + 2]
0x40c619:	mov	qword ptr [rsp + 0x48], rax
0x40c61e:	movsxd	rsi, r8d
0x40c621:	mov	dword ptr [rsp + 0x44], r8d
0x40c626:	call	0x42db80
0x40c62b:	mov	edi, dword ptr [rsp + 0x44]
0x40c62f:	mov	r13, qword ptr [rsp + 0x48]
0x40c634:	mov	qword ptr [r15 + 8], rax
0x40c638:	mov	dword ptr [r15 + 0x14], edi
0x40c63c:	jmp	0x40c59e
0x40c641:	mov	rdi, r15
0x40c644:	call	0x41b32a
0x40c649:	mov	esi, 0x28
0x40c64e:	mov	rdi, r15
0x40c651:	call	0x440230
0x40c656:	jmp	0x40c033
0x40c65b:	mov	edi, 0x28
0x40c660:	call	0x440420
0x40c665:	mov	dword ptr [rax], ebp
0x40c667:	mov	rbp, qword ptr [rbx + 8]
0x40c66b:	mov	qword ptr [rax + 8], r15
0x40c66f:	test	rbp, rbp
0x40c672:	je	0x40c6d1
0x40c674:	movq	xmm9, qword ptr [rbp + 0x10]
0x40c67a:	movq	xmm10, rbp
0x40c67f:	punpcklqdq	xmm9, xmm10
0x40c684:	movups	xmmword ptr [rax + 0x10], xmm9
0x40c689:	mov	qword ptr [rbp + 0x10], 0
0x40c691:	mov	qword ptr [rbx + 8], rax
0x40c695:	jmp	0x40c2ba
0x40c69a:	mov	edi, 0x28
0x40c69f:	call	0x440420
0x40c6a4:	mov	dword ptr [rax], ebp
0x40c6a6:	mov	rbp, qword ptr [rbx + 8]
0x40c6aa:	mov	qword ptr [rax + 8], r15
0x40c6ae:	test	rbp, rbp
0x40c6b1:	je	0x40c6d1
0x40c6b3:	test	r12d, r12d
0x40c6b6:	jns	0x40c674
0x40c6b8:	movq	xmm11, rbp
0x40c6bd:	movhps	xmm11, qword ptr [rbp + 0x18]
0x40c6c2:	movups	xmmword ptr [rax + 0x10], xmm11
0x40c6c7:	mov	qword ptr [rbp + 0x18], 0
0x40c6cf:	jmp	0x40c691
0x40c6d1:	pxor	xmm12, xmm12
0x40c6d6:	movups	xmmword ptr [rax + 0x10], xmm12
0x40c6db:	jmp	0x40c691
0x40c6dd:	mov	edx, 0x4c4299
0x40c6e2:	mov	esi, 0x301
0x40c6e7:	mov	edi, 0x4c427c
0x40c6ec:	call	0x415bba
0x40c6f1:	mov	edi, 0x10
0x40c6f6:	call	0x440420
0x40c6fb:	mov	rdi, qword ptr [rsp + 0x28]
0x40c700:	mov	rsi, r13
0x40c703:	mov	rbx, rax
0x40c706:	call	0x439da0
0x40c70b:	mov	edi, dword ptr [rsp]
0x40c70e:	mov	rbp, qword ptr [r15 + 0x20]
0x40c712:	mov	qword ptr [rbx], rax
0x40c715:	sub	edi, 1
0x40c718:	mov	dword ptr [rbx + 8], edi
0x40c71b:	test	rbp, rbp
0x40c71e:	je	0x40c7a9
0x40c724:	mov	ecx, dword ptr [rbp]
0x40c727:	mov	r13d, dword ptr [rbp + 4]
0x40c72b:	and	ecx, 0x7fffffff
0x40c731:	cmp	ecx, r13d
0x40c734:	jne	0x40c780
0x40c736:	cmp	byte ptr [rbp + 3], 0
0x40c73a:	js	0x40c7e0
0x40c740:	xor	edx, edx
0x40c742:	mov	rdi, rbp
0x40c745:	mov	esi, 1
0x40c74a:	mov	dword ptr [rsp], ecx
0x40c74d:	call	0x436e30
0x40c752:	mov	rdi, rbp
0x40c755:	mov	r8d, eax
0x40c758:	mov	r13d, eax
0x40c75b:	lea	rsi, [r8*8 + 8]
0x40c763:	and	r13d, 0x7fffffff
0x40c76a:	call	0x42db80
0x40c76f:	mov	edx, dword ptr [rsp]
0x40c772:	mov	qword ptr [r15 + 0x20], rax
0x40c776:	mov	rbp, qword ptr [r15 + 0x20]
0x40c77a:	mov	dword ptr [rax], r13d
0x40c77d:	mov	dword ptr [rax + 4], edx
0x40c780:	mov	r15d, dword ptr [rbp + 4]
0x40c784:	lea	eax, [r15 + 1]
0x40c788:	mov	dword ptr [rbp + 4], eax
0x40c78b:	mov	qword ptr [rbp + r15*8 + 8], rbx
0x40c790:	jmp	0x40c037
0x40c795:	mov	edx, 0x4c4299
0x40c79a:	mov	esi, 0x302
0x40c79f:	mov	edi, 0x4c427c
0x40c7a4:	call	0x415bba
0x40c7a9:	xor	edx, edx
0x40c7ab:	mov	esi, 1
0x40c7b0:	xor	edi, edi
0x40c7b2:	call	0x436e30
0x40c7b7:	xor	edi, edi
0x40c7b9:	mov	ebp, eax
0x40c7bb:	mov	esi, eax
0x40c7bd:	and	ebp, 0x7fffffff
0x40c7c3:	lea	rsi, [rsi*8 + 8]
0x40c7cb:	call	0x42db80
0x40c7d0:	mov	r12d, ebp
0x40c7d3:	mov	qword ptr [r15 + 0x20], rax
0x40c7d7:	mov	qword ptr [rax], r12
0x40c7da:	mov	rbp, qword ptr [r15 + 0x20]
0x40c7de:	jmp	0x40c780
0x40c7e0:	mov	qword ptr [r15 + 0x20], 0
0x40c7e8:	lea	esi, [r13 + 1]
0x40c7ec:	xor	edx, edx
0x40c7ee:	xor	edi, edi
0x40c7f0:	call	0x436e30
0x40c7f5:	xor	edi, edi
0x40c7f7:	mov	r11d, eax
0x40c7fa:	mov	r12d, eax
0x40c7fd:	lea	rsi, [r11*8 + 8]
0x40c805:	and	r12d, 0x7fffffff
0x40c80c:	call	0x42db80
0x40c811:	mov	r10d, r13d
0x40c814:	xor	r9d, r9d
0x40c817:	mov	qword ptr [r15 + 0x20], rax
0x40c81b:	mov	dword ptr [rax], r12d
0x40c81e:	cmp	r10, r9
0x40c821:	je	0x40c8b6
0x40c827:	mov	rdi, qword ptr [rbp + r9*8 + 8]
0x40c82c:	mov	qword ptr [rax + r9*8 + 8], rdi
0x40c831:	add	r9, 1
0x40c835:	jmp	0x40c81e
0x40c837:	lea	r10d, [r12 + r12 + 2]
0x40c83c:	mov	dword ptr [rsp + 0x40], edx
0x40c840:	movsxd	rsi, r10d
0x40c843:	mov	dword ptr [rsp + 0x30], r10d
0x40c848:	call	0x42db80
0x40c84d:	mov	ecx, dword ptr [rsp + 0x30]
0x40c851:	movsxd	r8, dword ptr [r15 + 0x10]
0x40c855:	mov	qword ptr [r15 + 8], rax
0x40c859:	mov	edx, dword ptr [rsp + 0x40]
0x40c85d:	mov	rdi, rax
0x40c860:	mov	dword ptr [r15 + 0x14], ecx
0x40c864:	jmp	0x40c344
0x40c869:	mov	edx, 0x4c4299
0x40c86e:	mov	esi, 0x312
0x40c873:	mov	edi, 0x4c427c
0x40c878:	call	0x415bba
0x40c87d:	xor	edx, edx
0x40c87f:	mov	esi, 1
0x40c884:	xor	edi, edi
0x40c886:	call	0x436e30
0x40c88b:	xor	edi, edi
0x40c88d:	mov	ebp, eax
0x40c88f:	mov	ebx, eax
0x40c891:	lea	rsi, [rbp*8 + 8]
0x40c899:	and	ebx, 0x7fffffff
0x40c89f:	call	0x42db80
0x40c8a4:	mov	esi, ebx
0x40c8a6:	mov	qword ptr [r15 + 0x18], rax
0x40c8aa:	mov	qword ptr [rax], rsi
0x40c8ad:	mov	rbp, qword ptr [r15 + 0x18]
0x40c8b1:	jmp	0x40c415
0x40c8b6:	mov	dword ptr [rax + 4], r13d
0x40c8ba:	mov	rbp, qword ptr [r15 + 0x20]
0x40c8be:	jmp	0x40c780
0x40c8c3:	mov	qword ptr [r15 + 0x18], 0
0x40c8cb:	xor	edx, edx
0x40c8cd:	lea	esi, [r13 + 1]
0x40c8d1:	xor	edi, edi
0x40c8d3:	call	0x436e30
0x40c8d8:	xor	edi, edi
0x40c8da:	mov	r8d, eax
0x40c8dd:	mov	ebx, eax
0x40c8df:	lea	rsi, [r8*8 + 8]
0x40c8e7:	and	ebx, 0x7fffffff
0x40c8ed:	call	0x42db80
0x40c8f2:	mov	r11d, r13d
0x40c8f5:	xor	edx, edx
0x40c8f7:	mov	qword ptr [r15 + 0x18], rax
0x40c8fb:	mov	dword ptr [rax], ebx
0x40c8fd:	cmp	rdx, r11
0x40c900:	je	0x40c912
0x40c902:	mov	r9, qword ptr [rbp + rdx*8 + 8]
0x40c907:	mov	qword ptr [rax + rdx*8 + 8], r9
0x40c90c:	add	rdx, 1
0x40c910:	jmp	0x40c8fd
0x40c912:	mov	dword ptr [rax + 4], r13d
0x40c916:	mov	rbp, qword ptr [r15 + 0x18]
0x40c91a:	jmp	0x40c415
0x40c91f:	push	rax
0x40c920:	mov	esi, 0x4c4938
0x40c925:	xor	edi, edi
0x40c927:	xor	eax, eax
0x40c929:	call	0x43f5d0
0x40c92e:	mov	esi, 0x4c4960
0x40c933:	xor	edi, edi
0x40c935:	xor	eax, eax
0x40c937:	call	0x43f5d0
0x40c93c:	mov	r14, qword ptr [rip + 0xd691d]
0x40c943:	test	r14, r14
0x40c946:	je	0x40c94e
0x40c948:	cmp	byte ptr [r14], 0
0x40c94c:	jne	0x40c966
0x40c94e:	mov	r14, qword ptr [rip + 0xd6913]
0x40c955:	test	r14, r14
0x40c958:	je	0x40c960
0x40c95a:	cmp	byte ptr [r14], 0
0x40c95e:	jne	0x40c966
0x40c960:	mov	r14d, 0x45b67c
0x40c966:	mov	esi, 1
0x40c96b:	xor	eax, eax
0x40c96d:	lea	rdi, [rbp - 0x50]
0x40c971:	mov	ecx, 0x4c42a5
0x40c976:	mov	r8d, dword ptr [rip + 0xd9a23]
0x40c97d:	mov	edx, 0x14
0x40c982:	lea	r9d, [r8 + 1]
0x40c986:	mov	dword ptr [rip + 0xd9a13], r9d
0x40c98d:	call	0x403f60
0x40c992:	cmp	qword ptr [rip + 0xd68cf], r14
0x40c999:	lea	rsi, [rbp - 0x50]
0x40c99d:	je	0x40c9f4
0x40c99f:	xor	edx, edx
0x40c9a1:	mov	rdi, r14
0x40c9a4:	xor	eax, eax
0x40c9a6:	call	0x42d870
0x40c9ab:	mov	qword ptr [rbp - 0x58], rax
0x40c9af:	jmp	0x43e4c4
0x40c9b4:	mov	rdx, qword ptr [rbp - 0x58]
0x40c9b8:	mov	esi, 0x4c4988
0x40c9bd:	xor	edi, edi
0x40c9bf:	xor	eax, eax
0x40c9c1:	call	0x43f5d0
0x40c9c6:	mov	rsi, r15
0x40c9c9:	mov	edi, 0x5c
0x40c9ce:	mov	dword ptr [rbp - 0x68], edx
0x40c9d1:	call	0x403b30
0x40c9d6:	mov	edx, dword ptr [rbp - 0x68]
0x40c9d9:	add	eax, 1
0x40c9dc:	jne	0x43e571
0x40c9e2:	mov	rdx, qword ptr [rbp - 0x58]
0x40c9e6:	mov	esi, 0x4c49e8
0x40c9eb:	xor	edi, edi
0x40c9ed:	xor	eax, eax
0x40c9ef:	call	0x43f5d0
0x40c9f4:	cmp	byte ptr [rip + 0xd6855], 0
0x40c9fb:	je	0x40c99f
0x40c9fd:	lea	rsi, [rbp - 0x4f]
0x40ca01:	jmp	0x40c99f
0x40ca03:	mov	rsi, r15
0x40ca06:	mov	edi, 0x4be7a8
0x40ca0b:	call	0x403aa0
0x40ca10:	add	eax, 1
0x40ca13:	jne	0x43e599
0x40ca19:	jmp	0x40c9e2
0x40ca1b:	mov	rdx, qword ptr [rbp - 0x58]
0x40ca1f:	mov	esi, 0x4c49b8
0x40ca24:	xor	edi, edi
0x40ca26:	xor	eax, eax
0x40ca28:	call	0x43f5d0
0x40ca2d:	mov	rax, qword ptr [rsp + 8]
0x40ca32:	mov	r9, qword ptr [rax + 8]
0x40ca36:	mov	r10d, dword ptr [r9]
0x40ca39:	cmp	r10d, 0x2f
0x40ca3d:	jbe	0x40ca9a
0x40ca3f:	mov	r13, qword ptr [r9 + 8]
0x40ca43:	lea	r11, [r13 + 8]
0x40ca47:	mov	qword ptr [r9 + 8], r11
0x40ca4b:	mov	rdi, qword ptr [rbx + 8]
0x40ca4f:	mov	r8, qword ptr [r13]
0x40ca53:	mov	ecx, 0x4c42ee
0x40ca58:	add	rdi, 0xcc
0x40ca5f:	mov	edx, 0x80
0x40ca64:	mov	esi, 1
0x40ca69:	xor	eax, eax
0x40ca6b:	call	0x403f60
0x40ca70:	mov	r8, qword ptr [rbx + 8]
0x40ca74:	mov	rdi, rbx
0x40ca77:	lea	rsi, [r8 + 0xcc]
0x40ca7e:	call	0x430480
0x40ca83:	jmp	0x43eab3
0x40ca88:	mov	rdi, qword ptr [rsp + 0x18]
0x40ca8d:	mov	rsi, rax
0x40ca90:	call	0x4316f0
0x40ca95:	jmp	0x43eec8
0x40ca9a:	mov	r13d, r10d
0x40ca9d:	add	r10d, 8
0x40caa1:	add	r13, qword ptr [r9 + 0x10]
0x40caa5:	mov	dword ptr [r9], r10d
0x40caa8:	jmp	0x40ca4b
0x40caaa:	mov	rdi, qword ptr [rsp + 0x18]
0x40caaf:	mov	rsi, r14
0x40cab2:	call	0x4316f0
0x40cab7:	jmp	0x43ef61
0x40cabc:	mov	rdi, qword ptr [rsp + 0x18]
0x40cac1:	mov	rsi, rax
0x40cac4:	call	0x4316f0
0x40cac9:	jmp	0x43ef08
0x40cace:	mov	rcx, qword ptr [rsp + 8]
0x40cad3:	mov	r11, qword ptr [rcx + 8]
0x40cad7:	mov	r8d, dword ptr [r11]
0x40cada:	cmp	r8d, 0x2f
0x40cade:	jbe	0x40cb30
0x40cae0:	mov	rax, qword ptr [r11 + 8]
0x40cae4:	lea	rdi, [rax + 8]
0x40cae8:	mov	qword ptr [r11 + 8], rdi
0x40caec:	mov	rdi, qword ptr [rbx + 8]
0x40caf0:	mov	r8, qword ptr [rax]
0x40caf3:	mov	ecx, 0x4c4303
0x40caf8:	add	rdi, 0xcc
0x40caff:	jmp	0x40ca5f
0x40cb04:	cmp	byte ptr [rsp + 0x47], 0
0x40cb09:	je	0x43ee50
0x40cb0f:	mov	byte ptr [rsp + 0x48], sil
0x40cb14:	mov	edx, 1
0x40cb19:	lea	rsi, [rsp + 0x48]
0x40cb1e:	mov	rdi, rbx
0x40cb21:	mov	byte ptr [rsp + 0x49], 0
0x40cb26:	call	0x43fb40
0x40cb2b:	jmp	0x43eab3
0x40cb30:	mov	eax, r8d
0x40cb33:	add	r8d, 8
0x40cb37:	add	rax, qword ptr [r11 + 0x10]
0x40cb3b:	mov	dword ptr [r11], r8d
0x40cb3e:	jmp	0x40caec
0x40cb40:	or	byte ptr [rbx + 0xa8], 2
0x40cb47:	jmp	0x43e8ab
0x40cb4c:	or	byte ptr [rbx + 0xa8], 2
0x40cb53:	jmp	0x43ec54
0x40cb58:	mov	r8, qword ptr [rsp + 8]
0x40cb5d:	mov	rdi, qword ptr [r8 + 8]
0x40cb61:	mov	ecx, dword ptr [rdi]
0x40cb63:	cmp	ecx, 0x2f
0x40cb66:	jbe	0x40cb8c
0x40cb68:	mov	rdx, qword ptr [rdi + 8]
0x40cb6c:	lea	rsi, [rdx + 8]
0x40cb70:	mov	qword ptr [rdi + 8], rsi
0x40cb74:	mov	rdi, qword ptr [rbx + 8]
0x40cb78:	mov	r8, qword ptr [rdx]
0x40cb7b:	mov	ecx, 0x4c42f2
0x40cb80:	add	rdi, 0xcc
0x40cb87:	jmp	0x40ca5f
0x40cb8c:	mov	edx, ecx
0x40cb8e:	add	ecx, 8
0x40cb91:	add	rdx, qword ptr [rdi + 0x10]
0x40cb95:	mov	dword ptr [rdi], ecx
0x40cb97:	jmp	0x40cb74
0x40cb99:	mov	rdi, qword ptr [rsp + 0x18]
0x40cb9e:	mov	esi, 1
0x40cba3:	call	0x4316f0
0x40cba8:	mov	r14, qword ptr [rbx + 0x70]
0x40cbac:	jmp	0x43ec37
0x40cbb1:	mov	r10, qword ptr [rbx + 0x78]
0x40cbb5:	sub	r10, qword ptr [rbx + 0x70]
0x40cbb9:	mov	r15d, 0x4c4258
0x40cbbf:	mov	r14d, 6
0x40cbc5:	cmp	r10, 5
0x40cbc9:	ja	0x43efaa
0x40cbcf:	mov	rdi, qword ptr [rsp + 0x18]
0x40cbd4:	mov	esi, 6
0x40cbd9:	call	0x4316f0
0x40cbde:	jmp	0x43efaa
0x40cbe3:	mov	rdx, qword ptr [rsp + 8]
0x40cbe8:	mov	rsi, qword ptr [rdx + 8]
0x40cbec:	mov	r9d, dword ptr [rsi]
0x40cbef:	cmp	r9d, 0x2f
0x40cbf3:	jbe	0x40cc19
0x40cbf5:	mov	r10, qword ptr [rsi + 8]
0x40cbf9:	lea	r13, [r10 + 8]
0x40cbfd:	mov	qword ptr [rsi + 8], r13
0x40cc01:	mov	rdi, qword ptr [rbx + 8]
0x40cc05:	mov	r8, qword ptr [r10]
0x40cc08:	mov	ecx, 0x45b68f
0x40cc0d:	add	rdi, 0xcc
0x40cc14:	jmp	0x40ca5f
0x40cc19:	mov	r10d, r9d
0x40cc1c:	add	r9d, 8
0x40cc20:	add	r10, qword ptr [rsi + 0x10]
0x40cc24:	mov	dword ptr [rsi], r9d
0x40cc27:	jmp	0x40cc01
0x40cc29:	mov	edx, 0x4c42ae
0x40cc2e:	mov	esi, 0x502
0x40cc33:	mov	edi, 0x4c42b8
0x40cc38:	call	0x415bba
0x40cc3d:	mov	rdi, qword ptr [rsp + 0x18]
0x40cc42:	mov	esi, 1
0x40cc47:	call	0x4316f0
0x40cc4c:	jmp	0x43e81a
0x40cc51:	mov	edx, 0x4c42ae
0x40cc56:	mov	esi, 0x4a8
0x40cc5b:	mov	edi, 0x4c42b8
0x40cc60:	call	0x415bba
0x40cc65:	mov	rdx, qword ptr [rsp + 0x28]
0x40cc6a:	mov	r8d, dword ptr [rdx + 0x44]
0x40cc6e:	cmp	r8d, 2
0x40cc72:	ja	0x40cd53
0x40cc78:	mov	r15, qword ptr [r8*8 + 0x4c6ac0]
0x40cc80:	mov	rdi, r15
0x40cc83:	call	0x4039e0
0x40cc88:	mov	r9, qword ptr [rbx + 0x78]
0x40cc8c:	sub	r9, qword ptr [rbx + 0x70]
0x40cc90:	mov	r14, rax
0x40cc93:	cmp	rax, r9
0x40cc96:	ja	0x40ce12
0x40cc9c:	mov	rdi, qword ptr [rbx + 0x70]
0x40cca0:	mov	rdx, r14
0x40cca3:	mov	rsi, r15
0x40cca6:	add	r12, 2
0x40ccaa:	call	0x403c60
0x40ccaf:	add	qword ptr [rbx + 0x70], r14
0x40ccb3:	jmp	0x43e69f
0x40ccb8:	mov	edx, 0x4c42ae
0x40ccbd:	mov	esi, 0x4a7
0x40ccc2:	mov	edi, 0x4c42b8
0x40ccc7:	call	0x415bba
0x40cccc:	mov	edx, 0x4c42ae
0x40ccd1:	mov	esi, 0x4a5
0x40ccd6:	mov	edi, 0x4c42b8
0x40ccdb:	call	0x415bba
0x40cce0:	mov	rdi, r15
0x40cce3:	mov	edx, 0xa
0x40cce8:	lea	rsi, [rsp + 0x48]
0x40cced:	call	0x403e10
0x40ccf2:	mov	r15, qword ptr [rsp + 0x48]
0x40ccf7:	sub	eax, 1
0x40ccfa:	cmp	byte ptr [r15], 0x24
0x40ccfe:	jne	0x40cd2b
0x40cd00:	cmp	byte ptr [rsp + 0x38], 0
0x40cd05:	lea	r15, [r15 + 1]
0x40cd09:	jne	0x40cd3f
0x40cd0b:	mov	esi, dword ptr [rsp]
0x40cd0e:	mov	byte ptr [rsp + 0x20], 1
0x40cd13:	mov	dword ptr [rsp], eax
0x40cd16:	mov	dword ptr [rsp + 0x3c], esi
0x40cd1a:	jmp	0x43e7df
0x40cd1f:	or	byte ptr [rbx + 0xa8], 2
0x40cd26:	jmp	0x43e769
0x40cd2b:	mov	edx, 0x4c42ae
0x40cd30:	mov	esi, 0x49b
0x40cd35:	mov	edi, 0x4c42b8
0x40cd3a:	call	0x415bba
0x40cd3f:	mov	edx, 0x4c42ae
0x40cd44:	mov	esi, 0x49f
0x40cd49:	mov	edi, 0x4c42b8
0x40cd4e:	call	0x415bba
0x40cd53:	mov	edx, 0x4c42d5
0x40cd58:	mov	esi, 0x8b1
0x40cd5d:	mov	edi, 0x4c42b8
0x40cd62:	call	0x415bba
0x40cd67:	or	byte ptr [rbx + 0xa8], 2
0x40cd6e:	jmp	0x43e626
0x40cd73:	mov	rdi, qword ptr [rsp + 0x18]
0x40cd78:	mov	esi, 0x1e8
0x40cd7d:	call	0x4316f0
0x40cd82:	mov	rdx, qword ptr [rbx + 0x78]
0x40cd86:	jmp	0x43e60e
0x40cd8b:	mov	rdi, qword ptr [rsp + 0x18]
0x40cd90:	mov	esi, 1
0x40cd95:	call	0x4316f0
0x40cd9a:	jmp	0x43eaf1
0x40cd9f:	mov	edx, 0x4c42ae
0x40cda4:	mov	esi, 0x5c6
0x40cda9:	mov	edi, 0x4c42b8
0x40cdae:	call	0x415bba
0x40cdb3:	mov	edx, 0x4c42ae
0x40cdb8:	mov	esi, 0x5c2
0x40cdbd:	mov	edi, 0x4c42b8
0x40cdc2:	call	0x415bba
0x40cdc7:	mov	rdx, qword ptr [rsp + 8]
0x40cdcc:	mov	rsi, qword ptr [rdx + 8]
0x40cdd0:	mov	r9d, dword ptr [rsi]
0x40cdd3:	cmp	r9d, 0x2f
0x40cdd7:	jbe	0x40ce24
0x40cdd9:	mov	r10, qword ptr [rsi + 8]
0x40cddd:	lea	r13, [r10 + 8]
0x40cde1:	mov	qword ptr [rsi + 8], r13
0x40cde5:	mov	rsi, qword ptr [r10]
0x40cde8:	mov	rdi, rbx
0x40cdeb:	call	0x41edcb
0x40cdf0:	jmp	0x43eab3
0x40cdf5:	or	byte ptr [r14 + 0xa8], 2
0x40cdfd:	jmp	0x43eb16
0x40ce02:	test	r8b, r8b
0x40ce05:	jne	0x40ce34
0x40ce07:	mov	r8d, 1
0x40ce0d:	jmp	0x43e9c9
0x40ce12:	mov	rdi, qword ptr [rsp + 0x18]
0x40ce17:	mov	rsi, rax
0x40ce1a:	call	0x4316f0
0x40ce1f:	jmp	0x40cc9c
0x40ce24:	mov	r10d, r9d
0x40ce27:	add	r9d, 8
0x40ce2b:	add	r10, qword ptr [rsi + 0x10]
0x40ce2f:	mov	dword ptr [rsi], r9d
0x40ce32:	jmp	0x40cde5
0x40ce34:	mov	edx, 0x4c42ae
0x40ce39:	mov	esi, 0x511
0x40ce3e:	mov	edi, 0x4c42b8
0x40ce43:	call	0x415bba
0x40ce48:	mov	rax, qword ptr [rsp + 8]
0x40ce4d:	mov	edi, dword ptr [rax + 0x10]
0x40ce50:	call	0x43fbb0
0x40ce55:	mov	rdi, rax
0x40ce58:	mov	r15, rax
0x40ce5b:	call	0x4039e0
0x40ce60:	mov	r11, qword ptr [rbx + 0x78]
0x40ce64:	sub	r11, qword ptr [rbx + 0x70]
0x40ce68:	mov	r14, rax
0x40ce6b:	cmp	rax, r11
0x40ce6e:	ja	0x40cea0
0x40ce70:	mov	rdi, qword ptr [rbx + 0x70]
0x40ce74:	mov	rdx, r14
0x40ce77:	mov	rsi, r15
0x40ce7a:	add	r12, 2
0x40ce7e:	call	0x403c60
0x40ce83:	add	qword ptr [rbx + 0x70], r14
0x40ce87:	jmp	0x43e69f
0x40ce8c:	mov	edx, 0x4c42ae
0x40ce91:	mov	esi, 0x51e
0x40ce96:	mov	edi, 0x4c42b8
0x40ce9b:	call	0x415bba
0x40cea0:	mov	rdi, qword ptr [rsp + 0x18]
0x40cea5:	mov	rsi, rax
0x40cea8:	call	0x4316f0
0x40cead:	jmp	0x40ce70
0x40ceaf:	mov	rdi, qword ptr [rsp + 0x18]
0x40ceb4:	mov	esi, 1
0x40ceb9:	call	0x4316f0
0x40cebe:	jmp	0x43e6bd
0x40cec3:	cmp	ecx, 1
0x40cec6:	jg	0x40d44d
0x40cecc:	add	ecx, 1
0x40cecf:	jmp	0x43e9c9
0x40ced4:	test	r8b, r8b
0x40ced7:	jne	0x40cff5
0x40cedd:	cmp	ecx, 1
0x40cee0:	je	0x40d02f
0x40cee6:	cmp	ecx, 2
0x40cee9:	je	0x40d075
0x40ceef:	test	ecx, ecx
0x40cef1:	jne	0x43eab3
0x40cef7:	mov	rcx, qword ptr [rsp + 8]
0x40cefc:	mov	r11, qword ptr [rcx + 8]
0x40cf00:	mov	r8d, dword ptr [r11]
0x40cf03:	cmp	r8d, 0x2f
0x40cf07:	jbe	0x40d0bb
0x40cf0d:	mov	rax, qword ptr [r11 + 8]
0x40cf11:	lea	rdi, [rax + 8]
0x40cf15:	mov	qword ptr [r11 + 8], rdi
0x40cf19:	mov	rdi, qword ptr [rbx + 8]
0x40cf1d:	mov	r8d, dword ptr [rax]
0x40cf20:	mov	ecx, 0x4c4312
0x40cf25:	add	rdi, 0xcc
0x40cf2c:	mov	edx, 0x80
0x40cf31:	mov	esi, 1
0x40cf36:	xor	eax, eax
0x40cf38:	call	0x403f60
0x40cf3d:	mov	r8, qword ptr [rbx + 8]
0x40cf41:	mov	rdi, rbx
0x40cf44:	lea	rsi, [r8 + 0xcc]
0x40cf4b:	call	0x430480
0x40cf50:	jmp	0x43eab3
0x40cf55:	mov	r10, qword ptr [rsp + 8]
0x40cf5a:	mov	r13, qword ptr [r10 + 8]
0x40cf5e:	mov	r11d, dword ptr [r13]
0x40cf62:	cmp	r11d, 0x2f
0x40cf66:	jbe	0x40d3f3
0x40cf6c:	mov	rcx, qword ptr [r13 + 8]
0x40cf70:	lea	rsi, [rcx + 8]
0x40cf74:	mov	qword ptr [r13 + 8], rsi
0x40cf78:	mov	rax, qword ptr [rcx]
0x40cf7b:	mov	qword ptr [rsp + 0x10], rax
0x40cf80:	lea	r9, [rsi + 8]
0x40cf84:	mov	qword ptr [r13 + 8], r9
0x40cf88:	mov	r10d, dword ptr [rsi]
0x40cf8b:	xor	r13d, r13d
0x40cf8e:	mov	dword ptr [rsp + 0x38], r10d
0x40cf93:	sub	r10d, 1
0x40cf97:	mov	dword ptr [rsp + 0x20], r10d
0x40cf9c:	cmp	dword ptr [rsp + 0x38], r13d
0x40cfa1:	jbe	0x40d489
0x40cfa7:	mov	r8, qword ptr [rsp + 0x10]
0x40cfac:	mov	r11, qword ptr [rbx + 8]
0x40cfb0:	mov	esi, 1
0x40cfb5:	xor	eax, eax
0x40cfb7:	mov	ecx, 0x4c4266
0x40cfbc:	mov	edx, 0x80
0x40cfc1:	mov	r8d, dword ptr [r8 + r13*4]
0x40cfc5:	lea	rdi, [r11 + 0xcc]
0x40cfcc:	call	0x403f60
0x40cfd1:	mov	rdi, qword ptr [rbx + 8]
0x40cfd5:	lea	rsi, [rdi + 0xcc]
0x40cfdc:	mov	rdi, rbx
0x40cfdf:	call	0x430480
0x40cfe4:	cmp	dword ptr [rsp + 0x20], r13d
0x40cfe9:	ja	0x40d664
0x40cfef:	add	r13, 1
0x40cff3:	jmp	0x40cf9c
0x40cff5:	mov	rdx, qword ptr [rsp + 8]
0x40cffa:	mov	rsi, qword ptr [rdx + 8]
0x40cffe:	mov	r9d, dword ptr [rsi]
0x40d001:	cmp	r9d, 0x2f
0x40d005:	jbe	0x40d42a
0x40d00b:	mov	r10, qword ptr [rsi + 8]
0x40d00f:	lea	r13, [r10 + 8]
0x40d013:	mov	qword ptr [rsi + 8], r13
0x40d017:	mov	rdi, qword ptr [rbx + 8]
0x40d01b:	mov	r8, qword ptr [r10]
0x40d01e:	mov	ecx, 0x4c430d
0x40d023:	add	rdi, 0xcc
0x40d02a:	jmp	0x40ca5f
0x40d02f:	mov	rcx, qword ptr [rsp + 8]
0x40d034:	mov	r11, qword ptr [rcx + 8]
0x40d038:	mov	r8d, dword ptr [r11]
0x40d03b:	cmp	r8d, 0x2f
0x40d03f:	jbe	0x40d065
0x40d041:	mov	rax, qword ptr [r11 + 8]
0x40d045:	lea	rdi, [rax + 8]
0x40d049:	mov	qword ptr [r11 + 8], rdi
0x40d04d:	mov	rdi, qword ptr [rbx + 8]
0x40d051:	mov	r8, qword ptr [rax]
0x40d054:	mov	ecx, 0x4c4315
0x40d059:	add	rdi, 0xcc
0x40d060:	jmp	0x40ca5f
0x40d065:	mov	eax, r8d
0x40d068:	add	r8d, 8
0x40d06c:	add	rax, qword ptr [r11 + 0x10]
0x40d070:	mov	dword ptr [r11], r8d
0x40d073:	jmp	0x40d04d
0x40d075:	mov	rdx, qword ptr [rsp + 8]
0x40d07a:	mov	rsi, qword ptr [rdx + 8]
0x40d07e:	mov	r9d, dword ptr [rsi]
0x40d081:	cmp	r9d, 0x2f
0x40d085:	jbe	0x40d0ab
0x40d087:	mov	r10, qword ptr [rsi + 8]
0x40d08b:	lea	r13, [r10 + 8]
0x40d08f:	mov	qword ptr [rsi + 8], r13
0x40d093:	mov	rdi, qword ptr [rbx + 8]
0x40d097:	mov	r8, qword ptr [r10]
0x40d09a:	mov	ecx, 0x4c4319
0x40d09f:	add	rdi, 0xcc
0x40d0a6:	jmp	0x40ca5f
0x40d0ab:	mov	r10d, r9d
0x40d0ae:	add	r9d, 8
0x40d0b2:	add	r10, qword ptr [rsi + 0x10]
0x40d0b6:	mov	dword ptr [rsi], r9d
0x40d0b9:	jmp	0x40d093
0x40d0bb:	mov	eax, r8d
0x40d0be:	add	r8d, 8
0x40d0c2:	add	rax, qword ptr [r11 + 0x10]
0x40d0c6:	mov	dword ptr [r11], r8d
0x40d0c9:	jmp	0x40cf19
0x40d0ce:	mov	edx, 0x4c42ae
0x40d0d3:	mov	esi, 0x507
0x40d0d8:	mov	edi, 0x4c42b8
0x40d0dd:	call	0x415bba
0x40d0e2:	mov	edx, 0x4c42ae
0x40d0e7:	mov	esi, 0x491
0x40d0ec:	mov	edi, 0x4c42b8
0x40d0f1:	call	0x415bba
0x40d0f6:	mov	rdi, qword ptr [rsp + 0x18]
0x40d0fb:	mov	esi, 1
0x40d100:	call	0x4316f0
0x40d105:	jmp	0x43e73f
0x40d10a:	mov	edx, 0x4c42ae
0x40d10f:	mov	esi, 0x456
0x40d114:	mov	edi, 0x4c42b8
0x40d119:	call	0x415bba
0x40d11e:	mov	rdx, qword ptr [rbx + 0x70]
0x40d122:	cmp	qword ptr [rbx + 0x78], rdx
0x40d126:	je	0x40d29d
0x40d12c:	mov	r8, qword ptr [rbx + 0x70]
0x40d130:	add	r12, 2
0x40d134:	lea	r9, [r8 + 1]
0x40d138:	mov	qword ptr [rbx + 0x70], r9
0x40d13c:	mov	byte ptr [r8], 0x25
0x40d140:	jmp	0x43e69f
0x40d145:	mov	r9, qword ptr [rsp + 8]
0x40d14a:	mov	r10, qword ptr [r9 + 8]
0x40d14e:	mov	r13d, dword ptr [r10]
0x40d151:	cmp	r13d, 0x2f
0x40d155:	jbe	0x40d1d0
0x40d157:	mov	r11, qword ptr [r10 + 8]
0x40d15b:	lea	rcx, [r11 + 8]
0x40d15f:	mov	qword ptr [r10 + 8], rcx
0x40d163:	mov	rdi, qword ptr [rbx + 8]
0x40d167:	mov	r8, qword ptr [r11]
0x40d16a:	mov	ecx, 0x4c4300
0x40d16f:	add	rdi, 0xcc
0x40d176:	jmp	0x40ca5f
0x40d17b:	test	r8b, r8b
0x40d17e:	jne	0x40d1e0
0x40d180:	cmp	ecx, 1
0x40d183:	je	0x40d1e0
0x40d185:	cmp	ecx, 2
0x40d188:	je	0x40d221
0x40d18e:	test	ecx, ecx
0x40d190:	jne	0x43eab3
0x40d196:	mov	r9, qword ptr [rsp + 8]
0x40d19b:	mov	r10, qword ptr [r9 + 8]
0x40d19f:	mov	r13d, dword ptr [r10]
0x40d1a2:	cmp	r13d, 0x2f
0x40d1a6:	jbe	0x40d262
0x40d1ac:	mov	r11, qword ptr [r10 + 8]
0x40d1b0:	lea	rcx, [r11 + 8]
0x40d1b4:	mov	qword ptr [r10 + 8], rcx
0x40d1b8:	mov	rdi, qword ptr [rbx + 8]
0x40d1bc:	mov	r8d, dword ptr [r11]
0x40d1bf:	mov	ecx, 0x4c6e96
0x40d1c4:	add	rdi, 0xcc
0x40d1cb:	jmp	0x40cf2c
0x40d1d0:	mov	r11d, r13d
0x40d1d3:	add	r13d, 8
0x40d1d7:	add	r11, qword ptr [r10 + 0x10]
0x40d1db:	mov	dword ptr [r10], r13d
0x40d1de:	jmp	0x40d163
0x40d1e0:	mov	rdi, qword ptr [rsp + 8]
0x40d1e5:	mov	rdx, qword ptr [rdi + 8]
0x40d1e9:	mov	esi, dword ptr [rdx]
0x40d1eb:	cmp	esi, 0x2f
0x40d1ee:	jbe	0x40d214
0x40d1f0:	mov	rax, qword ptr [rdx + 8]
0x40d1f4:	lea	r9, [rax + 8]
0x40d1f8:	mov	qword ptr [rdx + 8], r9
0x40d1fc:	mov	rdi, qword ptr [rbx + 8]
0x40d200:	mov	r8, qword ptr [rax]
0x40d203:	mov	ecx, 0x4c42f7
0x40d208:	add	rdi, 0xcc
0x40d20f:	jmp	0x40ca5f
0x40d214:	mov	eax, esi
0x40d216:	add	esi, 8
0x40d219:	add	rax, qword ptr [rdx + 0x10]
0x40d21d:	mov	dword ptr [rdx], esi
0x40d21f:	jmp	0x40d1fc
0x40d221:	mov	r8, qword ptr [rsp + 8]
0x40d226:	mov	rdi, qword ptr [r8 + 8]
0x40d22a:	mov	edx, dword ptr [rdi]
0x40d22c:	cmp	edx, 0x2f
0x40d22f:	jbe	0x40d255
0x40d231:	mov	rax, qword ptr [rdi + 8]
0x40d235:	lea	rsi, [rax + 8]
0x40d239:	mov	qword ptr [rdi + 8], rsi
0x40d23d:	mov	rdi, qword ptr [rbx + 8]
0x40d241:	mov	r8, qword ptr [rax]
0x40d244:	mov	ecx, 0x4c42fb
0x40d249:	add	rdi, 0xcc
0x40d250:	jmp	0x40ca5f
0x40d255:	mov	eax, edx
0x40d257:	add	edx, 8
0x40d25a:	add	rax, qword ptr [rdi + 0x10]
0x40d25e:	mov	dword ptr [rdi], edx
0x40d260:	jmp	0x40d23d
0x40d262:	mov	r11d, r13d
0x40d265:	add	r13d, 8
0x40d269:	add	r11, qword ptr [r10 + 0x10]
0x40d26d:	mov	dword ptr [r10], r13d
0x40d270:	jmp	0x40d1b8
0x40d275:	mov	edx, 0x4c42ae
0x40d27a:	mov	esi, 0x4e5
0x40d27f:	mov	edi, 0x4c42b8
0x40d284:	call	0x415bba
0x40d289:	mov	rdi, qword ptr [rsp + 0x18]
0x40d28e:	mov	esi, 1
0x40d293:	call	0x4316f0
0x40d298:	jmp	0x43e87e
0x40d29d:	mov	rdi, qword ptr [rsp + 0x18]
0x40d2a2:	mov	esi, 1
0x40d2a7:	call	0x4316f0
0x40d2ac:	jmp	0x40d12c
0x40d2b1:	mov	r10, qword ptr [rsp + 8]
0x40d2b6:	mov	r13, qword ptr [r10 + 8]
0x40d2ba:	mov	r11d, dword ptr [r13 + 4]
0x40d2be:	cmp	r11d, 0xaf
0x40d2c5:	jbe	0x40d3df
0x40d2cb:	mov	r8, qword ptr [r13 + 8]
0x40d2cf:	lea	rcx, [r8 + 8]
0x40d2d3:	mov	qword ptr [r13 + 8], rcx
0x40d2d7:	mov	rdi, qword ptr [rbx + 8]
0x40d2db:	movsd	xmm0, qword ptr [r8]
0x40d2e0:	mov	ecx, 0x4c430a
0x40d2e5:	mov	edx, 0x80
0x40d2ea:	mov	esi, 1
0x40d2ef:	mov	eax, 1
0x40d2f4:	add	rdi, 0xcc
0x40d2fb:	call	0x403f60
0x40d300:	mov	rdi, qword ptr [rbx + 8]
0x40d304:	lea	rsi, [rdi + 0xcc]
0x40d30b:	mov	rdi, rbx
0x40d30e:	call	0x430480
0x40d313:	jmp	0x43eab3
0x40d318:	mov	rdx, qword ptr [rsp + 8]
0x40d31d:	mov	rsi, qword ptr [rdx + 8]
0x40d321:	mov	ecx, dword ptr [rsi]
0x40d323:	cmp	ecx, 0x2f
0x40d326:	jbe	0x40d43d
0x40d32c:	mov	rax, qword ptr [rsi + 8]
0x40d330:	lea	r9, [rax + 8]
0x40d334:	mov	qword ptr [rsi + 8], r9
0x40d338:	mov	r13, qword ptr [rax]
0x40d33b:	cmp	dword ptr [r13], -1
0x40d340:	je	0x40d461
0x40d346:	movzx	edi, byte ptr [rbx + 0x43]
0x40d34a:	mov	esi, 0x4c4697
0x40d34f:	call	0x43f100
0x40d354:	mov	rdi, rbx
0x40d357:	mov	rsi, rax
0x40d35a:	call	0x430480
0x40d35f:	mov	esi, 0x28
0x40d364:	mov	rdi, rbx
0x40d367:	call	0x431ef0
0x40d36c:	mov	r10d, dword ptr [r13]
0x40d370:	cmp	r10d, -1
0x40d374:	je	0x40d475
0x40d37a:	mov	rdi, qword ptr [rbx + 8]
0x40d37e:	lea	r8d, [r10 + 1]
0x40d382:	mov	ecx, 0x4c90c1
0x40d387:	xor	eax, eax
0x40d389:	mov	edx, 0x80
0x40d38e:	mov	esi, 1
0x40d393:	add	rdi, 0xcc
0x40d39a:	call	0x403f60
0x40d39f:	mov	r11, qword ptr [rbx + 8]
0x40d3a3:	mov	rdi, rbx
0x40d3a6:	lea	rsi, [r11 + 0xcc]
0x40d3ad:	call	0x430480
0x40d3b2:	mov	rdi, rbx
0x40d3b5:	mov	esi, 0x29
0x40d3ba:	call	0x431ef0
0x40d3bf:	cmp	byte ptr [rbx + 0x43], 0
0x40d3c3:	mov	esi, 0x4c4258
0x40d3c8:	mov	rdi, rbx
0x40d3cb:	mov	r8d, 0x4c4893
0x40d3d1:	cmove	rsi, r8
0x40d3d5:	call	0x430480
0x40d3da:	jmp	0x43eab3
0x40d3df:	mov	r8d, r11d
0x40d3e2:	add	r11d, 0x10
0x40d3e6:	add	r8, qword ptr [r13 + 0x10]
0x40d3ea:	mov	dword ptr [r13 + 4], r11d
0x40d3ee:	jmp	0x40d2d7
0x40d3f3:	mov	rsi, qword ptr [r13 + 0x10]
0x40d3f7:	lea	r8d, [r11 + 8]
0x40d3fb:	mov	edi, r11d
0x40d3fe:	mov	dword ptr [r13], r8d
0x40d402:	mov	rdx, qword ptr [rsi + rdi]
0x40d406:	mov	qword ptr [rsp + 0x10], rdx
0x40d40b:	cmp	r8d, 0x2f
0x40d40f:	jbe	0x40d41a
0x40d411:	mov	rsi, qword ptr [r13 + 8]
0x40d415:	jmp	0x40cf80
0x40d41a:	add	r11d, 0x10
0x40d41e:	add	rsi, r8
0x40d421:	mov	dword ptr [r13], r11d
0x40d425:	jmp	0x40cf88
0x40d42a:	mov	r10d, r9d
0x40d42d:	add	r9d, 8
0x40d431:	add	r10, qword ptr [rsi + 0x10]
0x40d435:	mov	dword ptr [rsi], r9d
0x40d438:	jmp	0x40d017
0x40d43d:	mov	eax, ecx
0x40d43f:	add	ecx, 8
0x40d442:	add	rax, qword ptr [rsi + 0x10]
0x40d446:	mov	dword ptr [rsi], ecx
0x40d448:	jmp	0x40d338
0x40d44d:	mov	edx, 0x4c42ae
0x40d452:	mov	esi, 0x517
0x40d457:	mov	edi, 0x4c42b8
0x40d45c:	call	0x415bba
0x40d461:	mov	edx, 0x4c42ae
0x40d466:	mov	esi, 0x5ab
0x40d46b:	mov	edi, 0x4c42b8
0x40d470:	call	0x415bba
0x40d475:	mov	edx, 0x4c431e
0x40d47a:	mov	esi, 0x2e
0x40d47f:	mov	edi, 0x4c4a18
0x40d484:	call	0x415bba
0x40d489:	jmp	0x43eab3
0x40d48e:	mov	rsi, qword ptr [rbx + 0x78]
0x40d492:	sub	rsi, qword ptr [rbx + 0x70]
0x40d496:	mov	r15d, 0x4c4258
0x40d49c:	mov	r14d, 6
0x40d4a2:	cmp	rsi, 5
0x40d4a6:	ja	0x43ee98
0x40d4ac:	mov	rdi, qword ptr [rsp + 0x18]
0x40d4b1:	mov	esi, 6
0x40d4b6:	call	0x4316f0
0x40d4bb:	jmp	0x43ee98
0x40d4c0:	mov	edx, 0x4c42ae
0x40d4c5:	mov	esi, 0x593
0x40d4ca:	mov	edi, 0x4c42b8
0x40d4cf:	call	0x415bba
0x40d4d4:	mov	rdi, r15
0x40d4d7:	mov	edx, 0xa
0x40d4dc:	lea	rsi, [rsp + 0x48]
0x40d4e1:	call	0x403e10
0x40d4e6:	mov	r15, qword ptr [rsp + 0x48]
0x40d4eb:	lea	r8d, [rax - 1]
0x40d4ef:	cmp	eax, dword ptr [rsp]
0x40d4f2:	jne	0x40d52b
0x40d4f4:	cmp	byte ptr [rsp + 0x38], 0
0x40d4f9:	jne	0x40d53f
0x40d4fb:	cmp	byte ptr [r15], 0x24
0x40d4ff:	jne	0x40d553
0x40d501:	mov	r14, qword ptr [rsp + 0x30]
0x40d506:	mov	r9d, r8d
0x40d509:	lea	r15, [r15 + 1]
0x40d50d:	mov	qword ptr [rsp + r9*8 + 0x50], r14
0x40d512:	jmp	0x43f039
0x40d517:	mov	rdi, qword ptr [rsp + 0x18]
0x40d51c:	mov	esi, 1
0x40d521:	call	0x4316f0
0x40d526:	jmp	0x43efef
0x40d52b:	mov	edx, 0x4c42ae
0x40d530:	mov	esi, 0x4ca
0x40d535:	mov	edi, 0x4c42b8
0x40d53a:	call	0x415bba
0x40d53f:	mov	edx, 0x4c42ae
0x40d544:	mov	esi, 0x4cb
0x40d549:	mov	edi, 0x4c42b8
0x40d54e:	call	0x415bba
0x40d553:	mov	edx, 0x4c42ae
0x40d558:	mov	esi, 0x4cc
0x40d55d:	mov	edi, 0x4c42b8
0x40d562:	call	0x415bba
0x40d567:	mov	edx, 0x4c42ae
0x40d56c:	mov	esi, 0x4c1
0x40d571:	mov	edi, 0x4c42b8
0x40d576:	call	0x415bba
0x40d57b:	mov	edx, 0x4c42ae
0x40d580:	mov	esi, 0x4d7
0x40d585:	mov	edi, 0x4c42b8
0x40d58a:	call	0x415bba
0x40d58f:	mov	rdi, qword ptr [rsp + 0x18]
0x40d594:	mov	esi, 1
0x40d599:	call	0x4316f0
0x40d59e:	jmp	0x43f051
0x40d5a3:	mov	edx, 0x4c42ae
0x40d5a8:	mov	esi, 0x4d3
0x40d5ad:	mov	edi, 0x4c42b8
0x40d5b2:	call	0x415bba
0x40d5b7:	mov	rdi, qword ptr [rsp + 0x18]
0x40d5bc:	mov	esi, 1
0x40d5c1:	call	0x4316f0
0x40d5c6:	mov	rax, qword ptr [rbx + 0x70]
0x40d5ca:	movzx	r11d, byte ptr [r12]
0x40d5cf:	add	r12, 1
0x40d5d3:	lea	rdx, [rax + 1]
0x40d5d7:	mov	qword ptr [rbx + 0x70], rdx
0x40d5db:	mov	byte ptr [rax], r11b
0x40d5de:	movzx	r8d, byte ptr [r12 - 1]
0x40d5e4:	test	byte ptr [r8 + r8 + 0x4bc840], 4
0x40d5ed:	je	0x40d6ab
0x40d5f3:	mov	rcx, qword ptr [rbx + 0x70]
0x40d5f7:	cmp	qword ptr [rbx + 0x78], rcx
0x40d5fb:	jne	0x40d5c6
0x40d5fd:	jmp	0x40d5b7
0x40d5ff:	mov	rdi, r13
0x40d602:	call	0x4039e0
0x40d607:	jmp	0x43edba
0x40d60c:	mov	edx, 0x4c42ae
0x40d611:	mov	esi, 0x50c
0x40d616:	mov	edi, 0x4c42b8
0x40d61b:	call	0x415bba
0x40d620:	mov	edx, 0x4c42ae
0x40d625:	mov	esi, 0x591
0x40d62a:	mov	edi, 0x4c42b8
0x40d62f:	call	0x415bba
0x40d634:	lea	rdi, [rdx + 1]
0x40d638:	lea	rsi, [rsp + 0x48]
0x40d63d:	mov	edx, 0xa
0x40d642:	call	0x403e10
0x40d647:	mov	r13, qword ptr [rsp + 0x48]
0x40d64c:	mov	r10d, eax
0x40d64f:	cmp	byte ptr [r13], 0x73
0x40d654:	jne	0x40d683
0x40d656:	mov	rdi, qword ptr [rsp + 8]
0x40d65b:	mov	rax, qword ptr [rdi + 8]
0x40d65f:	jmp	0x43ed8d
0x40d664:	mov	rdi, rbx
0x40d667:	mov	esi, 0x2c
0x40d66c:	call	0x431ef0
0x40d671:	mov	esi, 0x20
0x40d676:	mov	rdi, rbx
0x40d679:	call	0x431ef0
0x40d67e:	jmp	0x40cfef
0x40d683:	mov	edx, 0x4c42ae
0x40d688:	mov	esi, 0x58d
0x40d68d:	mov	edi, 0x4c42b8
0x40d692:	call	0x415bba
0x40d697:	mov	edx, 0x4c42ae
0x40d69c:	mov	esi, 0x597
0x40d6a1:	mov	edi, 0x4c42b8
0x40d6a6:	call	0x415bba
0x40d6ab:	cmp	r8b, 0x73
0x40d6af:	je	0x43e857
0x40d6b5:	mov	edx, 0x4c42ae
0x40d6ba:	mov	esi, 0x4bd
0x40d6bf:	mov	edi, 0x4c42b8
0x40d6c4:	call	0x415bba
0x40d6c9:	push	rbp
0x40d6ca:	mov	rdi, rsi
0x40d6cd:	push	rbx
0x40d6ce:	mov	ebx, 0x4e2ea0
0x40d6d3:	sub	rsp, 0x18
0x40d6d7:	mov	qword ptr [rsp + 8], rsi
0x40d6dc:	call	0x4039e0
0x40d6e1:	mov	rsi, qword ptr [rsp + 8]
0x40d6e6:	mov	rbp, rax
0x40d6e9:	mov	rdi, qword ptr [rbx]
0x40d6ec:	test	rdi, rdi
0x40d6ef:	je	0x40d700
0x40d6f1:	movzx	eax, byte ptr [rbx + 0x10]
0x40d6f5:	cmp	rbp, rax
0x40d6f8:	je	0x40d70c
0x40d6fa:	add	rbx, 0x18
0x40d6fe:	jmp	0x40d6e9
0x40d700:	mov	eax, 0x4c4893
0x40d705:	add	rsp, 0x18
0x40d709:	pop	rbx
0x40d70a:	pop	rbp
0x40d70b:	ret	
0x40d70c:	mov	rdx, rbp
0x40d70f:	mov	qword ptr [rsp + 8], rsi
0x40d714:	call	0x403b70
0x40d719:	mov	rsi, qword ptr [rsp + 8]
0x40d71e:	test	eax, eax
0x40d720:	jne	0x40d6fa
0x40d722:	mov	rax, qword ptr [rbx + 8]
0x40d726:	jmp	0x40d705
0x40d728:	pop	rax
0x40d729:	mov	rsi, rbp
0x40d72c:	mov	rdi, r12
0x40d72f:	pop	rbp
0x40d730:	pop	r12
0x40d732:	jmp	0x41ed0c
0x40d737:	jmp	0x41ed0c
0x40d73c:	mov	rsi, r15
0x40d73f:	mov	rdi, r14
0x40d742:	call	0x4316f0
0x40d747:	mov	rdi, qword ptr [r14 + 0x18]
0x40d74b:	mov	rdx, r15
0x40d74e:	mov	rsi, r12
0x40d751:	call	0x403c60
0x40d756:	add	qword ptr [r14 + 0x18], r15
0x40d75a:	test	ebp, ebp
0x40d75c:	jg	0x43053d
0x40d762:	jmp	0x4306b2
0x40d767:	cmp	byte ptr [r12], 0x20
0x40d76c:	jne	0x430503
0x40d772:	add	r12, 1
0x40d776:	cmp	r12, rbp
0x40d779:	jne	0x40d767
0x40d77b:	jmp	0x4306b2
0x40d780:	mov	esi, 0x20
0x40d785:	mov	rdi, rbx
0x40d788:	mov	dword ptr [rsp + 0xc], ecx
0x40d78c:	add	r14d, 1
0x40d790:	call	0x431ef0
0x40d795:	mov	ecx, dword ptr [rsp + 0xc]
0x40d799:	cmp	r14d, ecx
0x40d79c:	jl	0x40d780
0x40d79e:	mov	r13, qword ptr [rbx + 8]
0x40d7a2:	jmp	0x43080d
0x40d7a7:	push	r12
0x40d7a9:	push	rbp
0x40d7aa:	push	rbx
0x40d7ab:	mov	r12, qword ptr [rdi + 0x10]
0x40d7af:	test	r12, r12
0x40d7b2:	je	0x40d808
0x40d7b4:	mov	eax, dword ptr [rdi + 0x24]
0x40d7b7:	mov	rbx, rdi
0x40d7ba:	test	eax, eax
0x40d7bc:	je	0x40d7c5
0x40d7be:	cmp	eax, 2
0x40d7c1:	jne	0x40d808
0x40d7c3:	jmp	0x40d7ee
0x40d7c5:	cmp	byte ptr [rdi + 0x40], 0
0x40d7c9:	mov	ebp, dword ptr [rdi + 0x20]
0x40d7cc:	je	0x40d7e8
0x40d7ce:	xor	r12d, r12d
0x40d7d1:	cmp	r12d, ebp
0x40d7d4:	jge	0x40d808
0x40d7d6:	mov	esi, 0x20
0x40d7db:	mov	rdi, rbx
0x40d7de:	inc	r12d
0x40d7e1:	call	0x431ef0
0x40d7e6:	jmp	0x40d7d1
0x40d7e8:	add	ebp, 3
0x40d7eb:	mov	dword ptr [rdi + 0x20], ebp
0x40d7ee:	mov	rdi, r12
0x40d7f1:	call	0x4039e0
0x40d7f6:	mov	rdi, qword ptr [rbx + 8]
0x40d7fa:	mov	rsi, r12
0x40d7fd:	mov	edx, eax
0x40d7ff:	call	0x43f120
0x40d804:	mov	byte ptr [rbx + 0x40], 1
0x40d808:	pop	rbx
0x40d809:	pop	rbp
0x40d80a:	pop	r12
0x40d80c:	ret	
0x40d80d:	mov	rsi, r14
0x40d810:	mov	rdi, r13
0x40d813:	call	0x4316f0
0x40d818:	jmp	0x43f14c
0x40d81d:	xor	r8d, r8d
0x40d820:	mov	ecx, 0x4c6c55
0x40d825:	mov	rdx, r12
0x40d828:	mov	esi, 0x4c4345
0x40d82d:	mov	rdi, r15
0x40d830:	xor	eax, eax
0x40d832:	call	0x42d870
0x40d837:	mov	rbx, rax
0x40d83a:	jmp	0x43f1ff
0x40d83f:	add	ebp, 1
0x40d842:	cmp	r13d, ebp
0x40d845:	jle	0x40d851
0x40d847:	mov	rdx, qword ptr [r14 + rcx + 8]
0x40d84c:	jmp	0x43f1e5
0x40d851:	jmp	0x43f217
0x40d856:	endbr64	
0x40d85a:	push	r15
0x40d85c:	push	r14
0x40d85e:	push	r13
0x40d860:	push	r12
0x40d862:	push	rbp
0x40d863:	mov	rbp, rsi
0x40d866:	push	rbx
0x40d867:	mov	rbx, rdi
0x40d86a:	sub	rsp, 0x38
0x40d86e:	mov	rdi, qword ptr [rdi]
0x40d871:	mov	rax, qword ptr [rsi + 0x20]
0x40d875:	mov	qword ptr [rsp + 0x10], 0
0x40d87e:	cmp	byte ptr [rdi + 0x41], 0
0x40d882:	mov	r12d, dword ptr [rax + 0x10]
0x40d886:	je	0x40d894
0x40d888:	call	0x43f440
0x40d88d:	mov	rdx, qword ptr [rbx]
0x40d890:	mov	byte ptr [rdx + 0x41], 0
0x40d894:	cmp	r12d, 1
0x40d898:	ja	0x40d8bb
0x40d89a:	movsxd	rdi, dword ptr [rbp + 0x40]
0x40d89e:	cmp	edi, 0xe
0x40d8a1:	jle	0x40da50
0x40d8a7:	mov	edx, 0x4c4377
0x40d8ac:	mov	esi, 0x1d2
0x40d8b1:	mov	edi, 0x4c438f
0x40d8b6:	call	0x415bba
0x40d8bb:	lea	rcx, [rsp + 0x10]
0x40d8c0:	mov	edx, 2
0x40d8c5:	mov	esi, r12d
0x40d8c8:	xor	edi, edi
0x40d8ca:	call	0x430f60
0x40d8cf:	mov	rcx, qword ptr [rsp + 0x10]
0x40d8d4:	test	rcx, rcx
0x40d8d7:	je	0x40d89a
0x40d8d9:	cmp	rcx, qword ptr [rbx + 0xf8]
0x40d8e0:	je	0x40d89a
0x40d8e2:	cmp	dword ptr [rcx + 0x14], 0
0x40d8e6:	mov	qword ptr [rbx + 0xf8], rcx
0x40d8ed:	je	0x40d89a
0x40d8ef:	xor	r12d, r12d
0x40d8f2:	cmp	dword ptr [rcx], 0x6fffffff
0x40d8f8:	ja	0x40d902
0x40d8fa:	cmp	byte ptr [rcx + 4], 5
0x40d8fe:	sete	r12b
0x40d902:	mov	byte ptr [rsp], 1
0x40d906:	mov	r13b, 1
0x40d909:	mov	rsi, qword ptr [rsp + 0x10]
0x40d90e:	mov	edi, dword ptr [rsi + 0x14]
0x40d911:	mov	dword ptr [rsp + 0xc], edi
0x40d915:	mov	esi, edi
0x40d917:	xor	edi, edi
0x40d919:	call	0x430e60
0x40d91e:	mov	byte ptr [rsp + 0xb], 0
0x40d923:	mov	r9d, dword ptr [rsp + 0xc]
0x40d928:	mov	r8d, dword ptr [rax]
0x40d92b:	mov	qword ptr [rsp + 0x10], rax
0x40d930:	mov	r14, rax
0x40d933:	cmp	r8d, 0x6fffffff
0x40d93a:	ja	0x40d945
0x40d93c:	cmp	byte ptr [rax + 4], 5
0x40d940:	sete	byte ptr [rsp + 0xb]
0x40d945:	movzx	ecx, byte ptr [r14 + 6]
0x40d94a:	sub	r9d, r8d
0x40d94d:	mov	r15, qword ptr [r14 + 8]
0x40d951:	or	esi, 0xffffffff
0x40d954:	mov	r11d, r9d
0x40d957:	shr	r11d, cl
0x40d95a:	add	r11d, dword ptr [r14 + 0x10]
0x40d95e:	test	r13b, r13b
0x40d961:	je	0x40d99d
0x40d963:	cmp	byte ptr [rbx + 0x87], 0
0x40d96a:	je	0x40d99d
0x40d96c:	mov	r10d, 1
0x40d972:	mov	rdx, r15
0x40d975:	mov	rdi, rbx
0x40d978:	mov	dword ptr [rsp + 0xc], r11d
0x40d97d:	shl	r10d, cl
0x40d980:	movzx	ecx, byte ptr [r14 + 7]
0x40d985:	lea	esi, [r10 - 1]
0x40d989:	and	esi, r9d
0x40d98c:	shr	esi, cl
0x40d98e:	mov	ecx, r11d
0x40d991:	call	0x411f10
0x40d996:	mov	r11d, dword ptr [rsp + 0xc]
0x40d99b:	mov	esi, eax
0x40d99d:	mov	edi, r11d
0x40d9a0:	call	0x40dc6b
0x40d9a5:	mov	rdx, rax
0x40d9a8:	mov	eax, 6
0x40d9ad:	test	r12b, r12b
0x40d9b0:	jne	0x40d9c4
0x40d9b2:	cmp	byte ptr [rsp + 0xb], 0
0x40d9b7:	mov	eax, 4
0x40d9bc:	jne	0x40d9c4
0x40d9be:	movzx	eax, byte ptr [rsp]
0x40d9c2:	add	eax, eax
0x40d9c4:	cmp	r13b, 1
0x40d9c8:	mov	qword ptr [rsp], rdx
0x40d9cc:	adc	eax, 0
0x40d9cf:	mov	rdi, qword ptr [rax*8 + 0x4c6a00]
0x40d9d7:	call	0x403a20
0x40d9dc:	test	r13b, r13b
0x40d9df:	mov	edx, 0x4c4893
0x40d9e4:	mov	r13, qword ptr [rsp]
0x40d9e8:	mov	rcx, rax
0x40d9eb:	jne	0x40d9fe
0x40d9ed:	test	r12b, r12b
0x40d9f0:	mov	edx, 0x4c4360
0x40d9f5:	mov	esi, 0x4cd62a
0x40d9fa:	cmovne	rdx, rsi
0x40d9fe:	push	rax
0x40d9ff:	mov	rdi, qword ptr [rbx]
0x40da02:	xor	eax, eax
0x40da04:	mov	r9, r15
0x40da07:	push	r13
0x40da09:	mov	r8d, 0x4c4363
0x40da0f:	mov	esi, 0x4c4369
0x40da14:	xor	r13d, r13d
0x40da17:	call	0x412dd6
0x40da1c:	cmp	dword ptr [r14 + 0x14], 0
0x40da21:	mov	byte ptr [rsp + 0x10], r12b
0x40da26:	pop	rdx
0x40da27:	pop	rcx
0x40da28:	je	0x40da34
0x40da2a:	mov	r12b, byte ptr [rsp + 0xb]
0x40da2f:	jmp	0x40d909
0x40da34:	mov	rdi, qword ptr [rbx]
0x40da37:	mov	esi, 0x4cd4ec
0x40da3c:	xor	eax, eax
0x40da3e:	call	0x412dd6
0x40da43:	mov	rdi, qword ptr [rbx]
0x40da46:	call	0x43f440
0x40da4b:	jmp	0x40d89a
0x40da50:	mov	rdi, qword ptr [rdi*8 + 0x4c6a40]
0x40da58:	call	0x403a20
0x40da5d:	movsxd	r8, dword ptr [rbp + 0x40]
0x40da61:	mov	r14, qword ptr [rbx]
0x40da64:	mov	r15, rax
0x40da67:	mov	rsi, qword ptr [r8*8 + 0x4c6ae0]
0x40da6f:	test	rsi, rsi
0x40da72:	je	0x40da99
0x40da74:	movzx	edi, byte ptr [r14 + 0x43]
0x40da79:	mov	r13d, 0x4c4258
0x40da7f:	mov	r14d, edi
0x40da82:	call	0x43f100
0x40da87:	test	r14b, r14b
0x40da8a:	mov	r9d, 0x4c4893
0x40da90:	cmove	r13, r9
0x40da94:	mov	r12, rax
0x40da97:	jmp	0x40daa2
0x40da99:	mov	r13d, 0x4c4893
0x40da9f:	mov	r12, r13
0x40daa2:	mov	rbp, qword ptr [rbp + 0x28]
0x40daa6:	cmp	byte ptr [rbp + 0x54], 0
0x40daaa:	jne	0x40dae0
0x40daac:	mov	esi, dword ptr [rbp + 0x10]
0x40daaf:	xor	ecx, ecx
0x40dab1:	xor	edx, edx
0x40dab3:	lea	rdi, [rsp + 0x10]
0x40dab8:	call	0x430830
0x40dabd:	movups	xmm0, xmmword ptr [rsp + 0x10]
0x40dac2:	movups	xmm1, xmmword ptr [rsp + 0x20]
0x40dac7:	mov	r10d, dword ptr [rbp + 0x50]
0x40dacb:	movups	xmmword ptr [rbp + 0x58], xmm0
0x40dacf:	movups	xmmword ptr [rbp + 0x68], xmm1
0x40dad3:	test	r10d, r10d
0x40dad6:	je	0x40dadc
0x40dad8:	mov	dword ptr [rbp + 0x64], r10d
0x40dadc:	mov	byte ptr [rbp + 0x54], 1
0x40dae0:	mov	ecx, dword ptr [rbp + 0x64]
0x40dae3:	mov	edx, dword ptr [rbp + 0x60]
0x40dae6:	mov	rdi, rbx
0x40dae9:	mov	rsi, qword ptr [rbp + 0x58]
0x40daed:	call	0x40db60
0x40daf2:	mov	r8, r13
0x40daf5:	mov	rcx, r15
0x40daf8:	mov	rdx, r12
0x40dafb:	mov	rsi, rax
0x40dafe:	mov	r14, rax
0x40db01:	mov	edi, 0x4c43aa
0x40db06:	xor	eax, eax
0x40db08:	call	0x40dcba
0x40db0d:	mov	rdi, r14
0x40db10:	mov	r15, rax
0x40db13:	call	0x403830
0x40db18:	mov	rdi, qword ptr [rbx]
0x40db1b:	add	rsp, 0x38
0x40db1f:	mov	rsi, r15
0x40db22:	pop	rbx
0x40db23:	pop	rbp
0x40db24:	pop	r12
0x40db26:	pop	r13
0x40db28:	pop	r14
0x40db2a:	pop	r15
0x40db2c:	jmp	0x4325a0
0x40db31:	movdqa	xmm3, xmmword ptr [rsp + 0x40]
0x40db37:	movdqa	xmm4, xmmword ptr [rsp + 0x50]
0x40db3d:	movaps	xmmword ptr [rsp + 0x20], xmm3
0x40db42:	movaps	xmmword ptr [rsp + 0x30], xmm4
0x40db47:	jmp	0x4308ca
0x40db4c:	mov	edx, 0x4c43b4
0x40db51:	mov	esi, 0x710
0x40db56:	mov	edi, 0x4c43cc
0x40db5b:	call	0x415bba
0x40db60:	endbr64	
0x40db64:	push	r15
0x40db66:	mov	r15, rdi
0x40db69:	push	r14
0x40db6b:	mov	r14d, ecx
0x40db6e:	push	r13
0x40db70:	push	r12
0x40db72:	mov	r12, rsi
0x40db75:	mov	esi, 0x4c4363
0x40db7a:	push	rbp
0x40db7b:	mov	ebp, edx
0x40db7d:	push	rbx
0x40db7e:	sub	rsp, 0x18
0x40db82:	mov	rax, qword ptr [rdi]
0x40db85:	movzx	edi, byte ptr [rax + 0x43]
0x40db89:	mov	ebx, edi
0x40db8b:	call	0x43f100
0x40db90:	test	bl, bl
0x40db92:	mov	edx, 0x4c4893
0x40db97:	mov	ebx, 0x4c4258
0x40db9c:	mov	qword ptr [rsp + 8], rax
0x40dba1:	cmove	rbx, rdx
0x40dba5:	mov	r13, qword ptr [rip + 0xd6e1c]
0x40dbac:	test	r12, r12
0x40dbaf:	je	0x40dbb4
0x40dbb1:	mov	r13, r12
0x40dbb4:	mov	esi, 0x4c43e8
0x40dbb9:	mov	rdi, r13
0x40dbbc:	call	0x403be0
0x40dbc1:	test	eax, eax
0x40dbc3:	je	0x40dbe6
0x40dbc5:	or	esi, 0xffffffff
0x40dbc8:	cmp	byte ptr [r15 + 0x87], 0
0x40dbd0:	je	0x40dbeb
0x40dbd2:	mov	esi, r14d
0x40dbd5:	mov	ecx, ebp
0x40dbd7:	mov	rdx, r12
0x40dbda:	mov	rdi, r15
0x40dbdd:	call	0x411f10
0x40dbe2:	mov	esi, eax
0x40dbe4:	jmp	0x40dbeb
0x40dbe6:	xor	ebp, ebp
0x40dbe8:	or	esi, 0xffffffff
0x40dbeb:	mov	edi, ebp
0x40dbed:	call	0x40dc6b
0x40dbf2:	mov	rsi, qword ptr [rsp + 8]
0x40dbf7:	mov	r8, rbx
0x40dbfa:	mov	rdx, r13
0x40dbfd:	add	rsp, 0x18
0x40dc01:	mov	rcx, rax
0x40dc04:	mov	edi, 0x4c43f3
0x40dc09:	xor	eax, eax
0x40dc0b:	pop	rbx
0x40dc0c:	pop	rbp
0x40dc0d:	pop	r12
0x40dc0f:	pop	r13
0x40dc11:	pop	r14
0x40dc13:	pop	r15
0x40dc15:	jmp	0x40dcba
0x40dc1a:	cmp	dword ptr [rip + 0xd7f9f], 0
0x40dc21:	mov	ecx, 0x4c4893
0x40dc26:	cmove	rax, rcx
0x40dc2a:	jmp	0x43f336
0x40dc2f:	xor	eax, eax
0x40dc31:	jmp	0x43f336
0x40dc36:	test	byte ptr [rip + 0xd6ef6], 0x40
0x40dc3d:	mov	eax, 0x4c4893
0x40dc42:	mov	edi, 0
0x40dc47:	cmove	rax, rdi
0x40dc4b:	jmp	0x43f336
0x40dc50:	test	byte ptr [rip + 0xd6ed9], 4
0x40dc57:	mov	eax, 0x4c4893
0x40dc5c:	mov	r8d, 0
0x40dc62:	cmove	rax, r8
0x40dc66:	jmp	0x43f336
0x40dc6b:	test	edi, edi
0x40dc6d:	je	0x40dcad
0x40dc6f:	sub	rsp, 0x10
0x40dc73:	mov	eax, 0x4c4400
0x40dc78:	test	esi, esi
0x40dc7a:	mov	r8d, 0x4c43fd
0x40dc80:	push	rsi
0x40dc81:	cmovs	r8, rax
0x40dc85:	mov	r9d, edi
0x40dc88:	mov	ecx, 0x20
0x40dc8d:	mov	edx, 1
0x40dc92:	mov	esi, 0x20
0x40dc97:	mov	edi, 0x4e6380
0x40dc9c:	xor	eax, eax
0x40dc9e:	call	0x403820
0x40dca3:	mov	eax, 0x4e6380
0x40dca8:	add	rsp, 0x18
0x40dcac:	ret	
0x40dcad:	mov	byte ptr [rip + 0xd86cc], 0
0x40dcb4:	mov	eax, 0x4e6380
0x40dcb9:	ret	
0x40dcba:	sub	rsp, 0xd8
0x40dcc1:	mov	qword ptr [rsp + 0x28], rsi
0x40dcc6:	mov	qword ptr [rsp + 0x30], rdx
0x40dccb:	mov	qword ptr [rsp + 0x38], rcx
0x40dcd0:	mov	qword ptr [rsp + 0x40], r8
0x40dcd5:	mov	qword ptr [rsp + 0x48], r9
0x40dcda:	test	al, al
0x40dcdc:	je	0x40dd15
0x40dcde:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x40dce3:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x40dce8:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x40dced:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x40dcf5:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x40dcfd:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x40dd05:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x40dd0d:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x40dd15:	lea	rax, [rsp + 0xe0]
0x40dd1d:	lea	rdx, [rsp + 0x20]
0x40dd22:	mov	dword ptr [rsp + 8], 8
0x40dd2a:	lea	rsi, [rsp + 8]
0x40dd2f:	mov	dword ptr [rsp + 0xc], 0x30
0x40dd37:	mov	qword ptr [rsp + 0x10], rax
0x40dd3c:	mov	qword ptr [rsp + 0x18], rdx
0x40dd41:	call	0x4065b0
0x40dd46:	add	rsp, 0xd8
0x40dd4d:	ret	
0x40dd4e:	mov	edx, 0x4c4404
0x40dd53:	mov	esi, 0x5ea
0x40dd58:	mov	edi, 0x4c42b8
0x40dd5d:	call	0x415bba
0x40dd62:	add	rsp, 0x10
0x40dd66:	lea	rdi, [r12 + 0x58]
0x40dd6b:	mov	rsi, rbp
0x40dd6e:	pop	rbx
0x40dd6f:	pop	rbp
0x40dd70:	pop	r12
0x40dd72:	pop	r13
0x40dd74:	pop	r14
0x40dd76:	jmp	0x42dd40
0x40dd7b:	endbr64	
0x40dd7f:	push	r15
0x40dd81:	push	r14
0x40dd83:	mov	r14, rdi
0x40dd86:	push	r13
0x40dd88:	push	r12
0x40dd8a:	push	rbp
0x40dd8b:	mov	rbp, rsi
0x40dd8e:	xor	esi, esi
0x40dd90:	push	rbx
0x40dd91:	sub	rsp, 0x248
0x40dd98:	mov	rdi, qword ptr [rdi]
0x40dd9b:	mov	rax, qword ptr [rdi + 0x10]
0x40dd9f:	mov	qword ptr [rdi + 0x10], 0
0x40dda7:	mov	qword ptr [rsp + 0x78], rax
0x40ddac:	call	0x4325a0
0x40ddb1:	mov	rdi, qword ptr [r14]
0x40ddb4:	call	0x43f440
0x40ddb9:	mov	r15, qword ptr [rbp + 0x28]
0x40ddbd:	mov	cl, byte ptr [r14 + 0x74]
0x40ddc1:	mov	ebx, dword ptr [rbp + 0x40]
0x40ddc4:	mov	esi, dword ptr [r15 + 0x10]
0x40ddc8:	xor	ecx, 1
0x40ddcb:	cmp	esi, 1
0x40ddce:	setbe	dl
0x40ddd1:	or	cl, dl
0x40ddd3:	jne	0x40e674
0x40ddd9:	cmp	dword ptr [r14 + 0xf0], esi
0x40dde0:	jne	0x40ddfb
0x40dde2:	cmp	dword ptr [r15 + 0x78], 0
0x40dde7:	jne	0x40ddfb
0x40dde9:	cmp	dword ptr [r15 + 8], 1
0x40ddee:	jne	0x40ddfb
0x40ddf0:	cmp	qword ptr [r15 + 0x18], 0
0x40ddf5:	je	0x40e674
0x40ddfb:	movq	xmm0, r14
0x40de00:	cmp	byte ptr [r15 + 0x54], 0
0x40de05:	mov	dword ptr [r14 + 0xf0], esi
0x40de0c:	movhps	xmm0, qword ptr [r14]
0x40de10:	mov	dword ptr [rsp + 0x1b0], esi
0x40de17:	mov	r12d, dword ptr [r14 + 0x120]
0x40de1e:	movaps	xmmword ptr [rsp + 0x1a0], xmm0
0x40de26:	jne	0x40de64
0x40de28:	xor	ecx, ecx
0x40de2a:	xor	edx, edx
0x40de2c:	lea	rdi, [rsp + 0x170]
0x40de34:	call	0x430830
0x40de39:	movaps	xmm4, xmmword ptr [rsp + 0x170]
0x40de41:	mov	esi, dword ptr [r15 + 0x50]
0x40de45:	movups	xmmword ptr [r15 + 0x58], xmm4
0x40de4a:	movaps	xmm5, xmmword ptr [rsp + 0x180]
0x40de52:	movups	xmmword ptr [r15 + 0x68], xmm5
0x40de57:	test	esi, esi
0x40de59:	je	0x40de5f
0x40de5b:	mov	dword ptr [r15 + 0x64], esi
0x40de5f:	mov	byte ptr [r15 + 0x54], 1
0x40de64:	movups	xmm6, xmmword ptr [r15 + 0x58]
0x40de69:	mov	edx, r12d
0x40de6c:	lea	rsi, [rsp + 0x170]
0x40de74:	lea	rdi, [rsp + 0x1b8]
0x40de7c:	movaps	xmmword ptr [rsp + 0x170], xmm6
0x40de84:	movups	xmm7, xmmword ptr [r15 + 0x68]
0x40de89:	movaps	xmmword ptr [rsp + 0x180], xmm7
0x40de91:	call	0x412552
0x40de96:	mov	rdi, qword ptr [r14]
0x40de99:	mov	esi, 0x4c441d
0x40de9e:	mov	qword ptr [rsp + 0x1e0], r14
0x40dea6:	mov	dword ptr [rsp + 0x1e8], ebx
0x40dead:	mov	dword ptr [rsp + 0x1ec], 0xffffffff
0x40deb8:	movzx	r13d, byte ptr [rdi + 0x43]
0x40debd:	mov	edi, r13d
0x40dec0:	call	0x43f100
0x40dec5:	mov	esi, 0x4c4424
0x40deca:	mov	edi, r13d
0x40decd:	mov	qword ptr [rsp + 0x1f0], rax
0x40ded5:	call	0x43f100
0x40deda:	mov	esi, 0x4c442b
0x40dedf:	mov	edi, r13d
0x40dee2:	mov	qword ptr [rsp + 0x1f8], rax
0x40deea:	call	0x43f100
0x40deef:	mov	esi, 0x4c4438
0x40def4:	mov	edi, r13d
0x40def7:	mov	qword ptr [rsp + 0x200], rax
0x40deff:	call	0x43f100
0x40df04:	test	r13b, r13b
0x40df07:	mov	esi, dword ptr [r15 + 8]
0x40df0b:	mov	r8d, 0x4c4258
0x40df11:	mov	r9d, 0x4c4893
0x40df17:	mov	qword ptr [rsp + 0x208], rax
0x40df1f:	mov	cl, byte ptr [r14 + 0x10a]
0x40df26:	cmove	r8, r9
0x40df2a:	xor	eax, eax
0x40df2c:	mov	al, byte ptr [r14 + 0x109]
0x40df33:	mov	r10b, byte ptr [r14 + 0x10b]
0x40df3a:	mov	qword ptr [rsp + 0x220], 0
0x40df46:	cmp	ebx, 0xa
0x40df49:	mov	ah, cl
0x40df4b:	mov	qword ptr [rsp + 0x210], r8
0x40df53:	mov	word ptr [rsp + 0x218], ax
0x40df5b:	mov	byte ptr [rsp + 0x21a], r10b
0x40df63:	sete	byte ptr [rsp + 0x21b]
0x40df6b:	test	esi, esi
0x40df6d:	je	0x40df81
0x40df6f:	mov	edx, 1
0x40df74:	lea	rdi, [rsp + 0x220]
0x40df7c:	call	0x41257c
0x40df81:	mov	qword ptr [rsp + 0x228], 0
0x40df8d:	mov	esi, dword ptr [r15 + 0x78]
0x40df91:	test	esi, esi
0x40df93:	je	0x40dfa7
0x40df95:	mov	edx, 1
0x40df9a:	lea	rdi, [rsp + 0x228]
0x40dfa2:	call	0x412f52
0x40dfa7:	mov	qword ptr [rsp + 0x230], 0
0x40dfb3:	mov	esi, dword ptr [r15 + 8]
0x40dfb7:	inc	esi
0x40dfb9:	je	0x40dfcd
0x40dfbb:	mov	edx, 1
0x40dfc0:	lea	rdi, [rsp + 0x230]
0x40dfc8:	call	0x41265e
0x40dfcd:	lea	r11, [r15 + 8]
0x40dfd1:	mov	qword ptr [rsp + 0x48], r14
0x40dfd6:	xor	r12d, r12d
0x40dfd9:	mov	qword ptr [rsp + 0x238], 0
0x40dfe5:	mov	qword ptr [rsp + 0x40], r11
0x40dfea:	cmp	r12d, dword ptr [r15 + 8]
0x40dfee:	jae	0x40e2f9
0x40dff4:	movsxd	r14, r12d
0x40dff7:	shl	r14, 4
0x40dffb:	cmp	r12d, 2
0x40dfff:	jg	0x40e00d
0x40e001:	mov	r11, qword ptr [rsp + 0x40]
0x40e006:	lea	rbx, [r11 + r14 + 8]
0x40e00b:	jmp	0x40e02f
0x40e00d:	mov	rcx, qword ptr [r15 + 0x48]
0x40e011:	lea	rbx, [rcx + r14 - 0x30]
0x40e016:	test	rbx, rbx
0x40e019:	jne	0x40e02f
0x40e01b:	mov	edx, 0x4c4445
0x40e020:	mov	esi, 0x40f
0x40e025:	mov	edi, 0x4c4a40
0x40e02a:	call	0x415bba
0x40e02f:	mov	esi, dword ptr [rbx]
0x40e031:	xor	edi, edi
0x40e033:	call	0x431800
0x40e038:	mov	ecx, 1
0x40e03d:	xor	edx, edx
0x40e03f:	lea	rdi, [rsp + 0xc0]
0x40e047:	mov	r13d, eax
0x40e04a:	shr	rax, 0x20
0x40e04e:	mov	r14, rax
0x40e051:	mov	esi, r13d
0x40e054:	call	0x430830
0x40e059:	mov	ecx, 2
0x40e05e:	xor	edx, edx
0x40e060:	mov	esi, r14d
0x40e063:	lea	rdi, [rsp + 0xe0]
0x40e06b:	call	0x430830
0x40e070:	mov	esi, dword ptr [rbx]
0x40e072:	xor	ecx, ecx
0x40e074:	xor	edx, edx
0x40e076:	lea	rdi, [rsp + 0x100]
0x40e07e:	call	0x430830
0x40e083:	mov	r8, qword ptr [rsp + 0x1b8]
0x40e08b:	cmp	qword ptr [rsp + 0xc0], r8
0x40e093:	jne	0x40e2f1
0x40e099:	cmp	r8, qword ptr [rsp + 0xe0]
0x40e0a1:	jne	0x40e2f1
0x40e0a7:	mov	edx, dword ptr [rbx + 4]
0x40e0aa:	test	edx, edx
0x40e0ac:	jne	0x40e0bc
0x40e0ae:	cmp	r8, qword ptr [rsp + 0x100]
0x40e0b6:	jne	0x40e2f1
0x40e0bc:	mov	rbp, qword ptr [rsp + 0x220]
0x40e0c4:	test	rbp, rbp
0x40e0c7:	jne	0x40e1e7
0x40e0cd:	mov	rax, qword ptr [rsp + 0x1a0]
0x40e0d5:	mov	r10, qword ptr [rbx + 8]
0x40e0d9:	lea	rsi, [rsp + 0x100]
0x40e0e1:	lea	rdi, [rsp + 0x170]
0x40e0e9:	mov	edx, dword ptr [rax + 0x120]
0x40e0ef:	mov	qword ptr [rsp + 0x28], r10
0x40e0f4:	mov	qword ptr [rsp + 8], rax
0x40e0f9:	call	0x412552
0x40e0fe:	mov	rdi, qword ptr [rsp + 8]
0x40e103:	mov	esi, dword ptr [rbx + 4]
0x40e106:	mov	edx, dword ptr [rdi + 0x120]
0x40e10c:	mov	dword ptr [rsp + 0x30], esi
0x40e110:	lea	rdi, [rsp + 0x148]
0x40e118:	lea	rsi, [rsp + 0xe0]
0x40e120:	call	0x412552
0x40e125:	mov	r9, qword ptr [rsp + 8]
0x40e12a:	lea	rsi, [rsp + 0xc0]
0x40e132:	lea	rdi, [rsp + 0x120]
0x40e13a:	mov	edx, dword ptr [r9 + 0x120]
0x40e141:	call	0x412552
0x40e146:	mov	ebx, dword ptr [rsp + 0x150]
0x40e14d:	movd	xmm13, dword ptr [rsp + 0x30]
0x40e154:	movd	xmm9, dword ptr [rsp + 0x12c]
0x40e15e:	movd	xmm10, dword ptr [rsp + 0x140]
0x40e168:	mov	dword ptr [rsp + 0x24], ebx
0x40e16c:	mov	ebx, dword ptr [rsp + 0x178]
0x40e173:	movd	xmm11, dword ptr [rsp + 0x154]
0x40e17d:	punpckldq	xmm9, xmm10
0x40e182:	movd	xmm12, dword ptr [rsp + 0x168]
0x40e18c:	mov	ecx, dword ptr [rsp + 0x128]
0x40e193:	movd	xmm14, ebx
0x40e198:	movd	xmm15, dword ptr [rsp + 0x17c]
0x40e1a2:	movq	qword ptr [rsp + 8], xmm9
0x40e1a9:	movd	xmm3, dword ptr [rsp + 0x190]
0x40e1b2:	punpckldq	xmm11, xmm12
0x40e1b7:	punpckldq	xmm13, xmm14
0x40e1bc:	mov	r11d, dword ptr [rsp + 0xe8]
0x40e1c4:	mov	dword ptr [rsp + 0x38], ecx
0x40e1c8:	movq	qword ptr [rsp + 0x10], xmm11
0x40e1cf:	punpckldq	xmm15, xmm3
0x40e1d4:	movq	qword ptr [rsp + 0x30], xmm13
0x40e1db:	cmp	dword ptr [rsp + 0xc8], r11d
0x40e1e3:	jle	0x40e214
0x40e1e5:	jmp	0x40e239
0x40e1e7:	cmp	dword ptr [rbp + 4], 0
0x40e1eb:	je	0x40e0cd
0x40e1f1:	test	edx, edx
0x40e1f3:	jne	0x40e0cd
0x40e1f9:	mov	esi, dword ptr [rsp + 0x1b0]
0x40e200:	mov	edi, dword ptr [rbx]
0x40e202:	call	0x41272e
0x40e207:	test	al, al
0x40e209:	jne	0x40e0cd
0x40e20f:	jmp	0x40e2f1
0x40e214:	mov	esi, dword ptr [rsp + 0x1b0]
0x40e21b:	mov	edi, r13d
0x40e21e:	movq	qword ptr [rsp + 0x50], xmm15
0x40e225:	mov	dword ptr [rsp + 0x58], esi
0x40e229:	call	0x41272e
0x40e22e:	movq	xmm15, qword ptr [rsp + 0x50]
0x40e235:	test	al, al
0x40e237:	jne	0x40e240
0x40e239:	test	rbp, rbp
0x40e23c:	jne	0x40e25d
0x40e23e:	jmp	0x40e267
0x40e240:	mov	esi, dword ptr [rsp + 0x58]
0x40e244:	mov	edi, r14d
0x40e247:	call	0x41272e
0x40e24c:	movq	xmm15, qword ptr [rsp + 0x50]
0x40e253:	test	al, al
0x40e255:	je	0x40e239
0x40e257:	mov	ebx, dword ptr [rsp + 0x38]
0x40e25b:	jmp	0x40e279
0x40e25d:	cmp	dword ptr [rbp + 4], 0
0x40e261:	jne	0x40e2f1
0x40e267:	mov	dword ptr [rsp + 0x24], ebx
0x40e26b:	movq	qword ptr [rsp + 0x10], xmm15
0x40e272:	movq	qword ptr [rsp + 8], xmm15
0x40e279:	xor	edx, edx
0x40e27b:	mov	esi, 1
0x40e280:	lea	rdi, [rsp + 0x220]
0x40e288:	movq	qword ptr [rsp + 0x38], xmm15
0x40e28f:	call	0x41257c
0x40e294:	mov	r10, qword ptr [rsp + 8]
0x40e299:	mov	eax, dword ptr [rsp + 0x24]
0x40e29d:	mov	r13, qword ptr [rsp + 0x220]
0x40e2a5:	mov	rsi, qword ptr [rsp + 0x10]
0x40e2aa:	mov	rdi, qword ptr [rsp + 0x30]
0x40e2af:	movq	xmm0, qword ptr [rsp + 0x38]
0x40e2b5:	mov	r14d, dword ptr [r13 + 4]
0x40e2b9:	mov	r9, qword ptr [rsp + 0x28]
0x40e2be:	imul	rdx, r14, 0x38
0x40e2c2:	lea	r8d, [r14 + 1]
0x40e2c6:	mov	dword ptr [r13 + 4], r8d
0x40e2ca:	lea	rbp, [r13 + rdx + 8]
0x40e2cf:	add	r13, rdx
0x40e2d2:	mov	dword ptr [rbp], ebx
0x40e2d5:	mov	qword ptr [rbp + 4], r10
0x40e2d9:	mov	dword ptr [rbp + 0xc], eax
0x40e2dc:	mov	qword ptr [rbp + 0x10], rsi
0x40e2e0:	mov	qword ptr [rbp + 0x18], rdi
0x40e2e4:	movq	qword ptr [rbp + 0x20], xmm0
0x40e2e9:	mov	dword ptr [r13 + 0x30], r12d
0x40e2ed:	mov	qword ptr [r13 + 0x38], r9
0x40e2f1:	inc	r12d
0x40e2f4:	jmp	0x40dfea
0x40e2f9:	mov	r14, qword ptr [rsp + 0x48]
0x40e2fe:	xor	ebx, ebx
0x40e300:	cmp	ebx, dword ptr [r15 + 0x78]
0x40e304:	jae	0x40e39b
0x40e30a:	movsxd	r10, ebx
0x40e30d:	cmp	ebx, 1
0x40e310:	jg	0x40e31c
0x40e312:	lea	rsi, [r15 + r10*8 + 0x80]
0x40e31a:	jmp	0x40e328
0x40e31c:	mov	rax, qword ptr [r15 + 0x98]
0x40e323:	lea	rsi, [rax + r10*8 - 0x10]
0x40e328:	mov	rbp, qword ptr [rsi]
0x40e32b:	lea	rdi, [rsp + 0x170]
0x40e333:	mov	esi, dword ptr [rbp]
0x40e336:	call	0x430be0
0x40e33b:	mov	r12, qword ptr [rsp + 0x170]
0x40e343:	cmp	r12, qword ptr [rsp + 0x1b8]
0x40e34b:	jne	0x40e394
0x40e34d:	mov	esi, dword ptr [rbp + 4]
0x40e350:	lea	rdi, [rsp + 0x170]
0x40e358:	call	0x430be0
0x40e35d:	cmp	r12, qword ptr [rsp + 0x170]
0x40e365:	jne	0x40e394
0x40e367:	lea	rdi, [rsp + 0x228]
0x40e36f:	xor	edx, edx
0x40e371:	mov	esi, 1
0x40e376:	call	0x412f52
0x40e37b:	mov	rdi, qword ptr [rsp + 0x228]
0x40e383:	mov	r9d, dword ptr [rdi + 4]
0x40e387:	lea	r13d, [r9 + 1]
0x40e38b:	mov	dword ptr [rdi + 4], r13d
0x40e38f:	mov	qword ptr [rdi + r9*8 + 8], rbp
0x40e394:	inc	ebx
0x40e396:	jmp	0x40e300
0x40e39b:	mov	rbx, qword ptr [rsp + 0x228]
0x40e3a3:	test	rbx, rbx
0x40e3a6:	je	0x40e3c3
0x40e3a8:	mov	esi, dword ptr [rbx + 4]
0x40e3ab:	cmp	esi, 1
0x40e3ae:	jbe	0x40e3c3
0x40e3b0:	lea	rdi, [rbx + 8]
0x40e3b4:	mov	ecx, 0x413819
0x40e3b9:	mov	edx, 8
0x40e3be:	call	0x4318a0
0x40e3c3:	mov	r15, qword ptr [rsp + 0x230]
0x40e3cb:	test	r15, r15
0x40e3ce:	je	0x40e3eb
0x40e3d0:	cmp	dword ptr [r15 + 4], 0
0x40e3d5:	je	0x40e3eb
0x40e3d7:	mov	edx, 0x4c445e
0x40e3dc:	mov	esi, 0x510
0x40e3e1:	mov	edi, 0x4c4a40
0x40e3e6:	call	0x415bba
0x40e3eb:	mov	r13, qword ptr [rsp + 0x220]
0x40e3f3:	xor	esi, esi
0x40e3f5:	test	r13, r13
0x40e3f8:	je	0x40e3fe
0x40e3fa:	mov	esi, dword ptr [r13 + 4]
0x40e3fe:	mov	qword ptr [rsp + 0x148], 0
0x40e40a:	inc	esi
0x40e40c:	je	0x40e420
0x40e40e:	mov	edx, 1
0x40e413:	lea	rdi, [rsp + 0x148]
0x40e41b:	call	0x41265e
0x40e420:	movd	xmm1, dword ptr [rsp + 0x1c0]
0x40e429:	lea	rsi, [rsp + 0x170]
0x40e431:	lea	rdi, [rsp + 0x148]
0x40e439:	xor	r15d, r15d
0x40e43c:	pshufd	xmm2, xmm1, 0xe0
0x40e441:	movq	qword ptr [rsp + 0x170], xmm2
0x40e44a:	call	0x412812
0x40e44f:	test	r13, r13
0x40e452:	je	0x40e4b6
0x40e454:	cmp	r15d, dword ptr [r13 + 4]
0x40e458:	jae	0x40e4b6
0x40e45a:	mov	ecx, r15d
0x40e45d:	imul	r11, rcx, 0x38
0x40e461:	add	r11, r13
0x40e464:	mov	edx, dword ptr [r11 + 8]
0x40e468:	mov	r8d, dword ptr [r11 + 0x14]
0x40e46c:	movd	xmm2, edx
0x40e470:	movd	xmm8, r8d
0x40e475:	punpckldq	xmm2, xmm8
0x40e47a:	cmp	edx, r8d
0x40e47d:	jbe	0x40e493
0x40e47f:	mov	edx, 0x4c445e
0x40e484:	mov	esi, 0x519
0x40e489:	mov	edi, 0x4c4a40
0x40e48e:	call	0x415bba
0x40e493:	lea	rsi, [rsp + 0x170]
0x40e49b:	lea	rdi, [rsp + 0x148]
0x40e4a3:	inc	r15d
0x40e4a6:	movq	qword ptr [rsp + 0x170], xmm2
0x40e4af:	call	0x412812
0x40e4b4:	jmp	0x40e44f
0x40e4b6:	xor	r13d, r13d
0x40e4b9:	test	rbx, rbx
0x40e4bc:	je	0x40e576
0x40e4c2:	cmp	r13d, dword ptr [rbx + 4]
0x40e4c6:	jae	0x40e576
0x40e4cc:	mov	edi, r13d
0x40e4cf:	mov	r12, qword ptr [rbx + rdi*8 + 8]
0x40e4d4:	test	r12, r12
0x40e4d7:	jne	0x40e4ed
0x40e4d9:	mov	edx, 0x4c445e
0x40e4de:	mov	esi, 0x522
0x40e4e3:	mov	edi, 0x4c4a40
0x40e4e8:	call	0x415bba
0x40e4ed:	mov	esi, dword ptr [r12]
0x40e4f1:	lea	rdi, [rsp + 0x170]
0x40e4f9:	call	0x430be0
0x40e4fe:	mov	ebp, dword ptr [rsp + 0x178]
0x40e505:	mov	rdi, r12
0x40e508:	call	0x41301e
0x40e50d:	cmp	ebp, 1
0x40e510:	jle	0x40e517
0x40e512:	cmp	al, 1
0x40e514:	adc	ebp, -1
0x40e517:	mov	esi, dword ptr [r12 + 4]
0x40e51c:	lea	rdi, [rsp + 0x170]
0x40e524:	call	0x430be0
0x40e529:	mov	r9d, dword ptr [rsp + 0x178]
0x40e531:	cmp	r9d, ebp
0x40e534:	jae	0x40e54a
0x40e536:	mov	edx, 0x4c4473
0x40e53b:	mov	esi, 0x100
0x40e540:	mov	edi, 0x4c4a40
0x40e545:	call	0x415bba
0x40e54a:	lea	rsi, [rsp + 0x170]
0x40e552:	lea	rdi, [rsp + 0x148]
0x40e55a:	inc	r13d
0x40e55d:	mov	dword ptr [rsp + 0x170], ebp
0x40e564:	mov	dword ptr [rsp + 0x174], r9d
0x40e56c:	call	0x412812
0x40e571:	jmp	0x40e4b9
0x40e576:	mov	r13, qword ptr [rsp + 0x148]
0x40e57e:	test	r13, r13
0x40e581:	je	0x40e5a8
0x40e583:	mov	esi, dword ptr [r13 + 4]
0x40e587:	cmp	esi, 1
0x40e58a:	jbe	0x40e69a
0x40e590:	lea	rdi, [r13 + 8]
0x40e594:	mov	ecx, 0x43fd00
0x40e599:	mov	edx, 8
0x40e59e:	call	0x4318a0
0x40e5a3:	jmp	0x40e69a
0x40e5a8:	mov	edx, 0x4c445e
0x40e5ad:	mov	esi, 0x52b
0x40e5b2:	mov	edi, 0x4c4a40
0x40e5b7:	call	0x415bba
0x40e5bc:	mov	edi, dword ptr [rsp + 0x24]
0x40e5c0:	cmp	edi, dword ptr [r14 + 4]
0x40e5c4:	jge	0x40e61d
0x40e5c6:	mov	r15, qword ptr [rsp + 0x38]
0x40e5cb:	cmp	byte ptr [r15 + 0x10b], 0
0x40e5d3:	je	0x40eafb
0x40e5d9:	cmp	dword ptr [rsp + 0x24], 0
0x40e5de:	jne	0x40eaa1
0x40e5e4:	mov	ebp, dword ptr [rsp + 0x24]
0x40e5e8:	mov	r12d, dword ptr [r14 + rbp*8 + 0xc]
0x40e5ed:	mov	r14d, dword ptr [r14 + rbp*8 + 8]
0x40e5f2:	mov	qword ptr [rsp + 0x70], r12
0x40e5f7:	mov	qword ptr [rsp + 0x28], r14
0x40e5fc:	mov	r11, qword ptr [rsp + 0x28]
0x40e601:	cmp	qword ptr [rsp + 0x70], r11
0x40e606:	jge	0x40ec68
0x40e60c:	inc	dword ptr [rsp + 0x24]
0x40e610:	mov	r14, qword ptr [rsp + 0x230]
0x40e618:	test	r14, r14
0x40e61b:	jne	0x40e5bc
0x40e61d:	lea	rdi, [rsp + 0x230]
0x40e625:	mov	r14, qword ptr [rsp + 0x38]
0x40e62a:	call	0x4128d0
0x40e62f:	mov	rdi, qword ptr [rsp + 0x228]
0x40e637:	test	rdi, rdi
0x40e63a:	jne	0x40fdf0
0x40e640:	mov	rdi, qword ptr [rsp + 0x220]
0x40e648:	test	rdi, rdi
0x40e64b:	jne	0x40fe0c
0x40e651:	cmp	dword ptr [rsp + 0x1ec], -1
0x40e659:	je	0x40e674
0x40e65b:	mov	r12, qword ptr [rsp + 0x1e0]
0x40e663:	mov	rsi, qword ptr [rsp + 0x210]
0x40e66b:	mov	rdi, qword ptr [r12]
0x40e66f:	call	0x430480
0x40e674:	mov	rdi, qword ptr [r14]
0x40e677:	mov	rsi, qword ptr [rsp + 0x78]
0x40e67c:	call	0x4325a0
0x40e681:	mov	rdi, qword ptr [r14]
0x40e684:	add	rsp, 0x248
0x40e68b:	pop	rbx
0x40e68c:	pop	rbp
0x40e68d:	pop	r12
0x40e68f:	pop	r13
0x40e691:	pop	r14
0x40e693:	pop	r15
0x40e695:	jmp	0x43f490
0x40e69a:	cmp	dword ptr [r13 + 4], 0
0x40e69f:	je	0x40e5a8
0x40e6a5:	lea	rsi, [r13 + 8]
0x40e6a9:	lea	rdi, [rsp + 0x230]
0x40e6b1:	mov	ebp, 1
0x40e6b6:	call	0x412812
0x40e6bb:	mov	r15, qword ptr [rsp + 0x230]
0x40e6c3:	cmp	ebp, dword ptr [r13 + 4]
0x40e6c7:	jae	0x40e738
0x40e6c9:	xor	r11d, r11d
0x40e6cc:	test	r15, r15
0x40e6cf:	je	0x40e6d5
0x40e6d1:	mov	r11d, dword ptr [r15 + 4]
0x40e6d5:	dec	r11d
0x40e6d8:	mov	ebx, ebp
0x40e6da:	lea	rdx, [r15 + r11*8]
0x40e6de:	mov	r12d, dword ptr [r13 + rbx*8 + 8]
0x40e6e3:	cmp	r12d, dword ptr [rdx + 8]
0x40e6e7:	jae	0x40e6fd
0x40e6e9:	mov	edx, 0x4c445e
0x40e6ee:	mov	esi, 0x531
0x40e6f3:	mov	edi, 0x4c4a40
0x40e6f8:	call	0x415bba
0x40e6fd:	mov	r8d, dword ptr [rdx + 0xc]
0x40e701:	movzx	eax, byte ptr [rsp + 0x21a]
0x40e709:	lea	r15, [r8 + rax + 1]
0x40e70e:	cmp	r12, r15
0x40e711:	jg	0x40e722
0x40e713:	mov	esi, dword ptr [r13 + rbx*8 + 0xc]
0x40e718:	cmp	r8d, esi
0x40e71b:	jae	0x40e734
0x40e71d:	mov	dword ptr [rdx + 0xc], esi
0x40e720:	jmp	0x40e734
0x40e722:	lea	rsi, [r13 + rbx*8 + 8]
0x40e727:	lea	rdi, [rsp + 0x230]
0x40e72f:	call	0x412812
0x40e734:	inc	ebp
0x40e736:	jmp	0x40e6bb
0x40e738:	test	r15, r15
0x40e73b:	je	0x40e748
0x40e73d:	mov	esi, dword ptr [r15 + 4]
0x40e741:	xor	r10d, r10d
0x40e744:	test	esi, esi
0x40e746:	jne	0x40e75c
0x40e748:	mov	edx, 0x4c445e
0x40e74d:	mov	esi, 0x542
0x40e752:	mov	edi, 0x4c4a40
0x40e757:	call	0x415bba
0x40e75c:	lea	edx, [r10 + 1]
0x40e760:	cmp	esi, edx
0x40e762:	jbe	0x40e7de
0x40e764:	mov	edi, dword ptr [r15 + r10*8 + 8]
0x40e769:	mov	r9d, dword ptr [r15 + r10*8 + 0xc]
0x40e76e:	cmp	edi, r9d
0x40e771:	jbe	0x40e787
0x40e773:	mov	edx, 0x4c445e
0x40e778:	mov	esi, 0x548
0x40e77d:	mov	edi, 0x4c4a40
0x40e782:	call	0x415bba
0x40e787:	mov	ecx, dword ptr [r15 + r10*8 + 0x10]
0x40e78c:	cmp	ecx, dword ptr [r15 + r10*8 + 0x14]
0x40e791:	jbe	0x40e7a7
0x40e793:	mov	edx, 0x4c445e
0x40e798:	mov	esi, 0x549
0x40e79d:	mov	edi, 0x4c4a40
0x40e7a2:	call	0x415bba
0x40e7a7:	cmp	edi, ecx
0x40e7a9:	jb	0x40e7bf
0x40e7ab:	mov	edx, 0x4c445e
0x40e7b0:	mov	esi, 0x54b
0x40e7b5:	mov	edi, 0x4c4a40
0x40e7ba:	call	0x415bba
0x40e7bf:	inc	r9d
0x40e7c2:	inc	r10
0x40e7c5:	cmp	ecx, r9d
0x40e7c8:	ja	0x40e75c
0x40e7ca:	mov	edx, 0x4c445e
0x40e7cf:	mov	esi, 0x54d
0x40e7d4:	mov	edi, 0x4c4a40
0x40e7d9:	call	0x415bba
0x40e7de:	lea	rdi, [rsp + 0x148]
0x40e7e6:	call	0x4128d0
0x40e7eb:	mov	r12d, dword ptr [r15 + 4]
0x40e7ef:	test	r12d, r12d
0x40e7f2:	jne	0x40e808
0x40e7f4:	mov	edx, 0x4c447d
0x40e7f9:	mov	esi, 0x558
0x40e7fe:	mov	edi, 0x4c4a40
0x40e803:	call	0x415bba
0x40e808:	lea	esi, [r12 - 1]
0x40e80d:	xor	ebx, ebx
0x40e80f:	mov	edi, dword ptr [r15 + rsi*8 + 0xc]
0x40e814:	test	edi, edi
0x40e816:	cmovs	edi, ebx
0x40e819:	call	0x4128f9
0x40e81e:	dec	r12d
0x40e821:	mov	dword ptr [rsp + 0x238], eax
0x40e828:	je	0x40e83b
0x40e82a:	mov	edi, 3
0x40e82f:	cmp	eax, edi
0x40e831:	cmovl	eax, edi
0x40e834:	mov	dword ptr [rsp + 0x238], eax
0x40e83b:	mov	r12, qword ptr [rsp + 0x1a0]
0x40e843:	mov	r15d, dword ptr [rsp + 0x238]
0x40e84b:	mov	ebp, dword ptr [r12 + 0x10c]
0x40e853:	cmp	ebp, r15d
0x40e856:	jle	0x40e85c
0x40e858:	lea	r15d, [rbp - 1]
0x40e85c:	mov	ebp, dword ptr [r12 + 0x78]
0x40e861:	mov	dword ptr [rsp + 0x238], r15d
0x40e869:	mov	dword ptr [rsp + 0x23c], 0
0x40e874:	test	ebp, ebp
0x40e876:	je	0x40e924
0x40e87c:	mov	esi, dword ptr [rsp + 0x1c0]
0x40e883:	mov	rdi, qword ptr [rsp + 0x1b8]
0x40e88b:	call	0x4310b0
0x40e890:	mov	r13, rax
0x40e893:	mov	rsi, rdx
0x40e896:	test	rax, rax
0x40e899:	je	0x40e924
0x40e89f:	mov	rdi, rax
0x40e8a2:	mov	ebx, dword ptr [rsp + 0x1d8]
0x40e8a9:	call	0x412932
0x40e8ae:	mov	ecx, dword ptr [r12 + 0x120]
0x40e8b6:	mov	rdi, r13
0x40e8b9:	mov	esi, eax
0x40e8bb:	mov	edx, eax
0x40e8bd:	call	0x412342
0x40e8c2:	cmp	ebx, eax
0x40e8c4:	jg	0x40e924
0x40e8c6:	test	ebx, ebx
0x40e8c8:	je	0x40e924
0x40e8ca:	cmp	byte ptr [rsp + 0x21a], 0
0x40e8d2:	mov	r8d, 1
0x40e8d8:	je	0x40e8de
0x40e8da:	lea	r8d, [r15 + 3]
0x40e8de:	lea	r9d, [rax + r8]
0x40e8e2:	cmp	ebp, r9d
0x40e8e5:	jge	0x40e924
0x40e8e7:	mov	ecx, eax
0x40e8e9:	mov	r10d, 0xa
0x40e8ef:	sub	ecx, ebx
0x40e8f1:	cmp	ecx, r10d
0x40e8f4:	cmovg	ecx, r10d
0x40e8f8:	lea	r11d, [r8 + rcx]
0x40e8fc:	cmp	ebp, r11d
0x40e8ff:	jle	0x40e924
0x40e901:	add	ebx, r8d
0x40e904:	sub	ebp, ecx
0x40e906:	cmp	ebx, ebp
0x40e908:	jle	0x40e924
0x40e90a:	sub	ebx, ebp
0x40e90c:	sub	eax, ebx
0x40e90e:	mov	dword ptr [rsp + 0x23c], ebx
0x40e915:	dec	eax
0x40e917:	jg	0x40e924
0x40e919:	mov	dword ptr [rsp + 0x23c], 0
0x40e924:	cmp	byte ptr [r14 + 0x110], 0
0x40e92c:	je	0x40ea87
0x40e932:	mov	r15d, dword ptr [r12 + 0x78]
0x40e937:	add	r15d, dword ptr [rsp + 0x23c]
0x40e93f:	cmp	r15d, 0x63
0x40e943:	jle	0x40e9c1
0x40e945:	mov	esi, 0x20
0x40e94a:	lea	rdi, [rsp + 0x1a0]
0x40e952:	mov	r13d, 0xa
0x40e958:	call	0x412c0e
0x40e95d:	mov	r12, qword ptr [rsp + 0x1a8]
0x40e965:	mov	esi, 0x20
0x40e96a:	mov	rdi, r12
0x40e96d:	call	0x431ef0
0x40e972:	mov	eax, dword ptr [rsp + 0x23c]
0x40e979:	lea	ebx, [rax + 1]
0x40e97c:	cmp	r15d, ebx
0x40e97f:	jl	0x40e9b9
0x40e981:	mov	eax, ebx
0x40e983:	cdq	
0x40e984:	idiv	r13d
0x40e987:	test	edx, edx
0x40e989:	jne	0x40e9a8
0x40e98b:	mov	eax, ebx
0x40e98d:	mov	r8d, 0x64
0x40e993:	mov	rdi, r12
0x40e996:	cdq	
0x40e997:	idiv	r8d
0x40e99a:	cdq	
0x40e99b:	idiv	r13d
0x40e99e:	lea	esi, [rdx + 0x30]
0x40e9a1:	call	0x431ef0
0x40e9a6:	jmp	0x40e9b5
0x40e9a8:	mov	esi, 0x20
0x40e9ad:	mov	rdi, r12
0x40e9b0:	call	0x431ef0
0x40e9b5:	inc	ebx
0x40e9b7:	jmp	0x40e97c
0x40e9b9:	mov	rdi, r12
0x40e9bc:	call	0x43f440
0x40e9c1:	mov	esi, 0x20
0x40e9c6:	lea	rdi, [rsp + 0x1a0]
0x40e9ce:	mov	ebp, 0xa
0x40e9d3:	call	0x412c0e
0x40e9d8:	mov	r12, qword ptr [rsp + 0x1a8]
0x40e9e0:	mov	esi, 0x20
0x40e9e5:	mov	rdi, r12
0x40e9e8:	call	0x431ef0
0x40e9ed:	mov	edx, dword ptr [rsp + 0x23c]
0x40e9f4:	lea	ebx, [rdx + 1]
0x40e9f7:	cmp	r15d, ebx
0x40e9fa:	jl	0x40ea26
0x40e9fc:	mov	eax, ebx
0x40e9fe:	cdq	
0x40e9ff:	idiv	ebp
0x40ea01:	test	edx, edx
0x40ea03:	jne	0x40ea15
0x40ea05:	cdq	
0x40ea06:	mov	rdi, r12
0x40ea09:	idiv	ebp
0x40ea0b:	lea	esi, [rdx + 0x30]
0x40ea0e:	call	0x431ef0
0x40ea13:	jmp	0x40ea22
0x40ea15:	mov	esi, 0x20
0x40ea1a:	mov	rdi, r12
0x40ea1d:	call	0x431ef0
0x40ea22:	inc	ebx
0x40ea24:	jmp	0x40e9f7
0x40ea26:	mov	rdi, r12
0x40ea29:	mov	r13d, 0xa
0x40ea2f:	call	0x43f440
0x40ea34:	mov	esi, 0x20
0x40ea39:	lea	rdi, [rsp + 0x1a0]
0x40ea41:	call	0x412c0e
0x40ea46:	mov	rbp, qword ptr [rsp + 0x1a8]
0x40ea4e:	mov	esi, 0x20
0x40ea53:	mov	rdi, rbp
0x40ea56:	call	0x431ef0
0x40ea5b:	mov	esi, dword ptr [rsp + 0x23c]
0x40ea62:	lea	ebx, [rsi + 1]
0x40ea65:	cmp	r15d, ebx
0x40ea68:	jl	0x40ea7f
0x40ea6a:	mov	eax, ebx
0x40ea6c:	mov	rdi, rbp
0x40ea6f:	inc	ebx
0x40ea71:	cdq	
0x40ea72:	idiv	r13d
0x40ea75:	lea	esi, [rdx + 0x30]
0x40ea78:	call	0x431ef0
0x40ea7d:	jmp	0x40ea65
0x40ea7f:	mov	rdi, rbp
0x40ea82:	call	0x43f440
0x40ea87:	mov	dword ptr [rsp + 0x24], 0
0x40ea8f:	lea	r13, [rsp + 0x170]
0x40ea97:	mov	qword ptr [rsp + 0x38], r14
0x40ea9c:	jmp	0x40e610
0x40eaa1:	cmp	byte ptr [rsp + 0x21a], 0
0x40eaa9:	jne	0x40eabf
0x40eaab:	mov	edx, 0x4c4495
0x40eab0:	mov	esi, 0x47b
0x40eab5:	mov	edi, 0x4c4a40
0x40eaba:	call	0x415bba
0x40eabf:	mov	rbp, qword ptr [rsp + 0x1a8]
0x40eac7:	xor	r12d, r12d
0x40eaca:	mov	rdi, rbp
0x40eacd:	call	0x40d7a7
0x40ead2:	cmp	r12d, dword ptr [rsp + 0x238]
0x40eada:	jg	0x40eaee
0x40eadc:	mov	esi, 0x2e
0x40eae1:	mov	rdi, rbp
0x40eae4:	inc	r12d
0x40eae7:	call	0x431ef0
0x40eaec:	jmp	0x40ead2
0x40eaee:	mov	rdi, rbp
0x40eaf1:	call	0x43f440
0x40eaf6:	jmp	0x40e5e4
0x40eafb:	cmp	dword ptr [rsp + 0x24], 0
0x40eb00:	mov	ebx, dword ptr [rsp + 0x1c0]
0x40eb07:	jne	0x40eb13
0x40eb09:	cmp	dword ptr [r14 + 0xc], ebx
0x40eb0d:	jge	0x40e5e4
0x40eb13:	mov	r12d, dword ptr [rsp + 0x24]
0x40eb18:	mov	r8d, dword ptr [r14 + r12*8 + 8]
0x40eb1d:	cmp	ebx, r8d
0x40eb20:	jb	0x40eb52
0x40eb22:	cmp	ebx, dword ptr [r14 + r12*8 + 0xc]
0x40eb27:	ja	0x40eb52
0x40eb29:	movups	xmm9, xmmword ptr [rsp + 0x1b8]
0x40eb32:	movups	xmm10, xmmword ptr [rsp + 0x1c8]
0x40eb3b:	movups	xmmword ptr [rsp + 0x148], xmm9
0x40eb44:	movups	xmmword ptr [rsp + 0x158], xmm10
0x40eb4d:	jmp	0x40ec38
0x40eb52:	mov	r9, qword ptr [rsp + 0x220]
0x40eb5a:	xor	ecx, ecx
0x40eb5c:	test	r9, r9
0x40eb5f:	je	0x40ebc0
0x40eb61:	cmp	ecx, dword ptr [r9 + 4]
0x40eb65:	jae	0x40ebc0
0x40eb67:	mov	esi, ecx
0x40eb69:	imul	r15, rsi, 0x38
0x40eb6d:	add	r15, r9
0x40eb70:	mov	edi, dword ptr [r15 + 8]
0x40eb74:	cmp	r8d, edi
0x40eb77:	ja	0x40eb80
0x40eb79:	cmp	edi, dword ptr [r14 + r12*8 + 0xc]
0x40eb7e:	jbe	0x40eb84
0x40eb80:	inc	ecx
0x40eb82:	jmp	0x40eb5c
0x40eb84:	mov	rbx, qword ptr [r15 + 8]
0x40eb88:	mov	r8, qword ptr [rsp + 0x1b8]
0x40eb90:	mov	r9, qword ptr [rsp + 0x1c8]
0x40eb98:	mov	cl, byte ptr [rsp + 0x1d0]
0x40eb9f:	mov	qword ptr [rsp + 0x148], r8
0x40eba7:	mov	qword ptr [rsp + 0x150], rbx
0x40ebaf:	mov	qword ptr [rsp + 0x158], r9
0x40ebb7:	mov	byte ptr [rsp + 0x160], cl
0x40ebbe:	jmp	0x40ec38
0x40ebc0:	xor	ebp, ebp
0x40ebc2:	mov	r10, qword ptr [rsp + 0x228]
0x40ebca:	test	r10, r10
0x40ebcd:	je	0x40ec24
0x40ebcf:	cmp	ebp, dword ptr [r10 + 4]
0x40ebd3:	jae	0x40ec24
0x40ebd5:	mov	r11d, ebp
0x40ebd8:	mov	rdi, r13
0x40ebdb:	mov	rax, qword ptr [r10 + r11*8 + 8]
0x40ebe0:	mov	esi, dword ptr [rax]
0x40ebe2:	call	0x430be0
0x40ebe7:	mov	edx, dword ptr [rsp + 0x178]
0x40ebee:	cmp	edx, dword ptr [r14 + r12*8 + 8]
0x40ebf3:	jb	0x40ebfc
0x40ebf5:	cmp	edx, dword ptr [r14 + r12*8 + 0xc]
0x40ebfa:	jbe	0x40ec00
0x40ebfc:	inc	ebp
0x40ebfe:	jmp	0x40ebc2
0x40ec00:	movaps	xmm3, xmmword ptr [rsp + 0x170]
0x40ec08:	movaps	xmm8, xmmword ptr [rsp + 0x180]
0x40ec11:	movups	xmmword ptr [rsp + 0x148], xmm3
0x40ec19:	movups	xmmword ptr [rsp + 0x158], xmm8
0x40ec22:	jmp	0x40ec38
0x40ec24:	mov	edx, 0x4c44b1
0x40ec29:	mov	esi, 0x4be
0x40ec2e:	mov	edi, 0x4c4a40
0x40ec33:	call	0x415bba
0x40ec38:	push	qword ptr [rsp + 0x160]
0x40ec3f:	push	qword ptr [rsp + 0x160]
0x40ec46:	push	qword ptr [rsp + 0x160]
0x40ec4d:	push	qword ptr [rsp + 0x160]
0x40ec54:	mov	rdi, qword ptr [rsp + 0x58]
0x40ec59:	call	qword ptr [rdi + 0xa0]
0x40ec5f:	add	rsp, 0x20
0x40ec63:	jmp	0x40e5e4
0x40ec68:	mov	esi, dword ptr [rsp + 0x28]
0x40ec6c:	mov	rdi, qword ptr [rsp + 0x1b8]
0x40ec74:	xor	ebx, ebx
0x40ec76:	mov	dword ptr [rsp + 8], esi
0x40ec7a:	mov	dword ptr [rsp + 0x30], esi
0x40ec7e:	call	0x4310b0
0x40ec83:	movq	xmm11, rax
0x40ec88:	mov	rbp, rax
0x40ec8b:	mov	r12, rdx
0x40ec8e:	punpcklqdq	xmm11, xmm11
0x40ec93:	movaps	xmmword ptr [rsp + 0x10], xmm11
0x40ec99:	test	rax, rax
0x40ec9c:	je	0x40fde6
0x40eca2:	mov	rax, qword ptr [rsp + 0x228]
0x40ecaa:	test	rax, rax
0x40ecad:	je	0x40eda1
0x40ecb3:	cmp	ebx, dword ptr [rax + 4]
0x40ecb6:	jae	0x40eda1
0x40ecbc:	mov	r9d, ebx
0x40ecbf:	mov	r14, qword ptr [rax + r9*8 + 8]
0x40ecc4:	mov	rdi, r14
0x40ecc7:	call	0x41301e
0x40eccc:	test	al, al
0x40ecce:	je	0x40ed9a
0x40ecd4:	mov	eax, dword ptr [r14 + 4]
0x40ecd8:	cmp	dword ptr [r14], eax
0x40ecdb:	je	0x40ecf1
0x40ecdd:	mov	edx, 0x4c44c7
0x40ece2:	mov	esi, 0x74b
0x40ece7:	mov	edi, 0x4c4a40
0x40ecec:	call	0x415bba
0x40ecf1:	mov	edx, dword ptr [rsp + 0x30]
0x40ecf5:	mov	rsi, qword ptr [rsp + 0x1b8]
0x40ecfd:	mov	rdi, r14
0x40ed00:	call	0x413036
0x40ed05:	test	al, al
0x40ed07:	je	0x40ed9a
0x40ed0d:	or	esi, 0xffffffff
0x40ed10:	lea	rdi, [rsp + 0x1e0]
0x40ed18:	xor	r15d, r15d
0x40ed1b:	call	0x41299e
0x40ed20:	mov	esi, 0x2b
0x40ed25:	lea	rdi, [rsp + 0x1a0]
0x40ed2d:	call	0x412c0e
0x40ed32:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40ed3a:	mov	esi, 0x2b
0x40ed3f:	call	0x431ef0
0x40ed44:	mov	esi, 0xfffffffe
0x40ed49:	lea	rdi, [rsp + 0x1e0]
0x40ed51:	call	0x41299e
0x40ed56:	mov	rdx, qword ptr [r14 + 0x10]
0x40ed5a:	dec	rdx
0x40ed5d:	cmp	r15, rdx
0x40ed60:	jae	0x40ed7d
0x40ed62:	mov	r11, qword ptr [r14 + 8]
0x40ed66:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40ed6e:	movsx	esi, byte ptr [r11 + r15]
0x40ed73:	inc	r15
0x40ed76:	call	0x431ef0
0x40ed7b:	jmp	0x40ed56
0x40ed7d:	lea	rdi, [rsp + 0x1e0]
0x40ed85:	or	esi, 0xffffffff
0x40ed88:	call	0x41299e
0x40ed8d:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40ed95:	call	0x43f440
0x40ed9a:	inc	ebx
0x40ed9c:	jmp	0x40eca2
0x40eda1:	or	esi, 0xffffffff
0x40eda4:	lea	rdi, [rsp + 0x1e0]
0x40edac:	call	0x41299e
0x40edb1:	mov	rbx, qword ptr [rsp + 0x1a8]
0x40edb9:	mov	rdi, rbx
0x40edbc:	call	0x40d7a7
0x40edc1:	cmp	byte ptr [rsp + 0x21a], 0
0x40edc9:	je	0x40ee10
0x40edcb:	mov	edi, dword ptr [rsp + 0x30]
0x40edcf:	xor	r14d, r14d
0x40edd2:	call	0x4128f9
0x40edd7:	mov	r15d, eax
0x40edda:	mov	edx, dword ptr [rsp + 0x238]
0x40ede1:	sub	edx, r15d
0x40ede4:	cmp	r14d, edx
0x40ede7:	jge	0x40edfb
0x40ede9:	mov	esi, 0x20
0x40edee:	mov	rdi, rbx
0x40edf1:	inc	r14d
0x40edf4:	call	0x431ef0
0x40edf9:	jmp	0x40edda
0x40edfb:	mov	edx, dword ptr [rsp + 8]
0x40edff:	mov	esi, 0x4c44dc
0x40ee04:	mov	rdi, rbx
0x40ee07:	xor	eax, eax
0x40ee09:	call	0x43fd30
0x40ee0e:	jmp	0x40ee1d
0x40ee10:	mov	esi, 0x20
0x40ee15:	mov	rdi, rbx
0x40ee18:	call	0x431ef0
0x40ee1d:	mov	rdi, rbp
0x40ee20:	mov	esi, r12d
0x40ee23:	call	0x412932
0x40ee28:	mov	r15, qword ptr [rsp + 0x1a0]
0x40ee30:	movaps	xmm12, xmmword ptr [rsp + 0x10]
0x40ee36:	cdqe	
0x40ee38:	mov	edi, dword ptr [r15 + 0x120]
0x40ee3f:	mov	qword ptr [rsp + 0x180], rax
0x40ee47:	mov	dword ptr [rsp + 0x18c], 0
0x40ee52:	mov	dword ptr [rsp + 0x188], edi
0x40ee59:	movaps	xmmword ptr [rsp + 0x170], xmm12
0x40ee62:	test	edi, edi
0x40ee64:	jg	0x40ee7a
0x40ee66:	mov	edx, 0x4c44e2
0x40ee6b:	mov	esi, 0x8f2
0x40ee70:	mov	edi, 0x4c4500
0x40ee75:	call	0x415bba
0x40ee7a:	mov	ebp, dword ptr [rsp + 0x23c]
0x40ee81:	mov	r12d, dword ptr [rsp + 0x18c]
0x40ee89:	cmp	ebp, r12d
0x40ee8c:	jle	0x40eea2
0x40ee8e:	cmp	dword ptr [rsp + 0x180], 0
0x40ee96:	je	0x40eeb9
0x40ee98:	mov	rdi, r13
0x40ee9b:	call	0x4123ac
0x40eea0:	jmp	0x40ee81
0x40eea2:	cmp	ebp, r12d
0x40eea5:	jge	0x40eeb9
0x40eea7:	mov	esi, 0x20
0x40eeac:	mov	rdi, rbx
0x40eeaf:	dec	r12d
0x40eeb2:	call	0x431ef0
0x40eeb7:	jmp	0x40eea2
0x40eeb9:	xor	r12d, r12d
0x40eebc:	mov	r14d, 0x7fffffff
0x40eec2:	mov	r8, qword ptr [rsp + 0x180]
0x40eeca:	mov	dword ptr [rsp + 0x10], r8d
0x40eecf:	test	r8d, r8d
0x40eed2:	je	0x40f005
0x40eed8:	cmp	byte ptr [rsp + 0x218], 0
0x40eee0:	mov	rdx, qword ptr [rsp + 0x178]
0x40eee8:	je	0x40ef48
0x40eeea:	sub	rdx, qword ptr [rsp + 0x170]
0x40eef2:	push	rsi
0x40eef3:	mov	r8d, 0x7fffffff
0x40eef9:	xor	r9d, r9d
0x40eefc:	inc	edx
0x40eefe:	xor	ecx, ecx
0x40ef00:	lea	r15, [rsp + 0x150]
0x40ef08:	push	r15
0x40ef0a:	mov	esi, dword ptr [rsp + 0x18]
0x40ef0e:	lea	rdi, [rsp + 0x1b0]
0x40ef16:	call	0x412ab6
0x40ef1b:	pop	rdi
0x40ef1c:	pop	r8
0x40ef1e:	test	al, al
0x40ef20:	je	0x40ef38
0x40ef22:	mov	esi, dword ptr [rsp + 0x148]
0x40ef29:	lea	rdi, [rsp + 0x1e0]
0x40ef31:	call	0x412be2
0x40ef36:	jmp	0x40ef48
0x40ef38:	or	esi, 0xffffffff
0x40ef3b:	lea	rdi, [rsp + 0x1e0]
0x40ef43:	call	0x41299e
0x40ef48:	mov	rbx, qword ptr [rsp + 0x178]
0x40ef50:	mov	rdi, r13
0x40ef53:	mov	ebp, dword ptr [rsp + 0x18c]
0x40ef5a:	call	0x4123ac
0x40ef5f:	mov	r10b, byte ptr [rbx]
0x40ef62:	mov	r15d, eax
0x40ef65:	cmp	r10b, 9
0x40ef69:	jne	0x40ef8c
0x40ef6b:	xor	ebp, ebp
0x40ef6d:	cmp	r15d, ebp
0x40ef70:	je	0x40eec2
0x40ef76:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40ef7e:	mov	esi, 0x20
0x40ef83:	inc	ebp
0x40ef85:	call	0x431ef0
0x40ef8a:	jmp	0x40ef6d
0x40ef8c:	test	r10b, r10b
0x40ef8f:	je	0x40ef97
0x40ef91:	cmp	r10b, 0xd
0x40ef95:	jne	0x40efc7
0x40ef97:	dec	r15d
0x40ef9a:	je	0x40efb0
0x40ef9c:	mov	edx, 0x4c451b
0x40efa1:	mov	esi, 0x611
0x40efa6:	mov	edi, 0x4c4a40
0x40efab:	call	0x415bba
0x40efb0:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40efb8:	mov	esi, 0x20
0x40efbd:	call	0x431ef0
0x40efc2:	jmp	0x40eec2
0x40efc7:	cmp	r10b, 0x20
0x40efcb:	je	0x40efe2
0x40efcd:	mov	r12d, dword ptr [rsp + 0x18c]
0x40efd5:	cmp	r14d, 0x7fffffff
0x40efdc:	jne	0x40efe2
0x40efde:	lea	r14d, [rbp + 1]
0x40efe2:	cmp	rbx, qword ptr [rsp + 0x178]
0x40efea:	je	0x40eec2
0x40eff0:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40eff8:	movsx	esi, byte ptr [rbx]
0x40effb:	inc	rbx
0x40effe:	call	0x431ef0
0x40f003:	jmp	0x40efe2
0x40f005:	lea	rdi, [rsp + 0x1a0]
0x40f00d:	call	0x412bf4
0x40f012:	mov	r11, qword ptr [rsp + 0x220]
0x40f01a:	xor	ecx, ecx
0x40f01c:	lea	rax, [r11 + 8]
0x40f020:	mov	r10, rax
0x40f023:	test	r11, r11
0x40f026:	je	0x40f1a6
0x40f02c:	mov	edi, dword ptr [r11 + 4]
0x40f030:	cmp	edi, ecx
0x40f032:	jbe	0x40f1a6
0x40f038:	cmp	dword ptr [r10 + 0x18], 2
0x40f03d:	je	0x40f1a6
0x40f043:	mov	r9d, dword ptr [r10]
0x40f046:	mov	esi, dword ptr [r10 + 0xc]
0x40f04a:	cmp	r9d, esi
0x40f04d:	jbe	0x40f063
0x40f04f:	mov	edx, 0x4c452d
0x40f054:	mov	esi, 0x27c
0x40f059:	mov	edi, 0x4c4a40
0x40f05e:	call	0x415bba
0x40f063:	add	r10, 0x38
0x40f067:	cmp	r9d, dword ptr [rsp + 8]
0x40f06c:	ja	0x40f08f
0x40f06e:	cmp	esi, dword ptr [rsp + 8]
0x40f072:	jb	0x40f08f
0x40f074:	mov	r15d, dword ptr [rsp + 0x10]
0x40f079:	mov	r8d, dword ptr [rsp + 8]
0x40f07e:	lea	ebp, [r12 + 1]
0x40f083:	mov	edx, dword ptr [rsp + 0x1d8]
0x40f08a:	lea	ebx, [rdx + 1]
0x40f08d:	jmp	0x40f093
0x40f08f:	inc	ecx
0x40f091:	jmp	0x40f023
0x40f093:	cmp	r8d, dword ptr [rax]
0x40f096:	jb	0x40f0b5
0x40f098:	cmp	r8d, dword ptr [rax + 0xc]
0x40f09c:	jne	0x40f0ad
0x40f09e:	mov	r10d, dword ptr [rax + 0x14]
0x40f0a2:	cmp	r10d, ebx
0x40f0a5:	jl	0x40f0b5
0x40f0a7:	lea	ebx, [r10 + 1]
0x40f0ab:	jmp	0x40f0b5
0x40f0ad:	jae	0x40f0b5
0x40f0af:	cmp	r12d, ebx
0x40f0b2:	cmovge	ebx, ebp
0x40f0b5:	inc	r15d
0x40f0b8:	add	rax, 0x38
0x40f0bc:	cmp	r15d, edi
0x40f0bf:	jne	0x40f093
0x40f0c1:	mov	esi, 0x20
0x40f0c6:	lea	rdi, [rsp + 0x1a0]
0x40f0ce:	call	0x412c0e
0x40f0d3:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f0db:	mov	esi, 0x20
0x40f0e0:	call	0x431ef0
0x40f0e5:	mov	ecx, dword ptr [rsp + 0x23c]
0x40f0ec:	lea	ebp, [rcx + 1]
0x40f0ef:	cmp	ebp, ebx
0x40f0f1:	jge	0x40f199
0x40f0f7:	push	rax
0x40f0f8:	mov	ecx, r14d
0x40f0fb:	mov	edx, ebp
0x40f0fd:	mov	r9d, 1
0x40f103:	push	r13
0x40f105:	mov	esi, dword ptr [rsp + 0x18]
0x40f109:	mov	r8d, r12d
0x40f10c:	lea	rdi, [rsp + 0x1b0]
0x40f114:	call	0x412ab6
0x40f119:	pop	rdx
0x40f11a:	pop	rcx
0x40f11b:	test	al, al
0x40f11d:	je	0x40f170
0x40f11f:	movsxd	r15, dword ptr [rsp + 0x170]
0x40f127:	lea	rdi, [rsp + 0x1e0]
0x40f12f:	mov	esi, r15d
0x40f132:	call	0x412be2
0x40f137:	cmp	byte ptr [rsp + 0x174], 0
0x40f13f:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f147:	je	0x40f164
0x40f149:	mov	esi, 0x5e
0x40f14e:	cmp	r15d, 2
0x40f152:	jg	0x40f18d
0x40f154:	mov	r11, qword ptr [rsp + 0x1a0]
0x40f15c:	movsx	esi, byte ptr [r11 + r15 + 0x7c]
0x40f162:	jmp	0x40f18d
0x40f164:	mov	esi, 0x7e
0x40f169:	call	0x431ef0
0x40f16e:	jmp	0x40f192
0x40f170:	or	esi, 0xffffffff
0x40f173:	lea	rdi, [rsp + 0x1e0]
0x40f17b:	call	0x41299e
0x40f180:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f188:	mov	esi, 0x20
0x40f18d:	call	0x431ef0
0x40f192:	inc	ebp
0x40f194:	jmp	0x40f0ef
0x40f199:	lea	rdi, [rsp + 0x1a0]
0x40f1a1:	call	0x412bf4
0x40f1a6:	mov	r9b, byte ptr [rsp + 0x219]
0x40f1ae:	mov	byte ptr [rsp + 0x40], r9b
0x40f1b3:	test	r9b, r9b
0x40f1b6:	je	0x40f5f4
0x40f1bc:	mov	qword ptr [rsp + 0x148], 0
0x40f1c8:	mov	r12d, dword ptr [rsp + 0x10]
0x40f1cd:	mov	rsi, qword ptr [rsp + 0x220]
0x40f1d5:	mov	rbx, qword ptr [rsp + 0x148]
0x40f1dd:	test	rsi, rsi
0x40f1e0:	je	0x40f3d9
0x40f1e6:	cmp	dword ptr [rsi + 4], r12d
0x40f1ea:	jbe	0x40f3d9
0x40f1f0:	mov	eax, r12d
0x40f1f3:	imul	r11, rax, 0x38
0x40f1f7:	add	rsi, r11
0x40f1fa:	mov	rdi, qword ptr [rsi + 0x38]
0x40f1fe:	test	rdi, rdi
0x40f201:	je	0x40f3d1
0x40f207:	mov	r14d, dword ptr [rsp + 8]
0x40f20c:	cmp	r14d, dword ptr [rsi + 0x24]
0x40f210:	jne	0x40f3d1
0x40f216:	mov	r8d, dword ptr [rsi + 0x2c]
0x40f21a:	movd	xmm7, r12d
0x40f21f:	movd	xmm1, r8d
0x40f224:	punpckldq	xmm7, xmm1
0x40f228:	movq	qword ptr [rsp + 0x50], xmm7
0x40f22e:	cmp	r8d, dword ptr [rsp + 0x23c]
0x40f236:	jle	0x40f3d1
0x40f23c:	mov	rbp, qword ptr [rdi]
0x40f23f:	mov	esi, dword ptr [rsi + 0x30]
0x40f242:	call	qword ptr [rbp + 0x10]
0x40f245:	mov	qword ptr [rsp + 0xb0], rax
0x40f24d:	mov	rbp, rax
0x40f250:	movzx	ecx, dl
0x40f253:	mov	qword ptr [rsp + 0xb8], rdx
0x40f25b:	test	rax, rax
0x40f25e:	je	0x40f3d1
0x40f264:	mov	rsi, qword ptr [rsp + 0x1a0]
0x40f26c:	mov	rdi, rax
0x40f26f:	mov	r15d, dword ptr [rsi + 0x120]
0x40f276:	mov	qword ptr [rsp + 0x180], rcx
0x40f27e:	mov	qword ptr [rsp + 0x178], rax
0x40f286:	call	0x4039e0
0x40f28b:	mov	ecx, r15d
0x40f28e:	mov	rdi, rbp
0x40f291:	mov	esi, eax
0x40f293:	mov	edx, eax
0x40f295:	call	0x412342
0x40f29a:	cdqe	
0x40f29c:	mov	qword ptr [rsp + 0x48], rax
0x40f2a1:	test	rbx, rbx
0x40f2a4:	je	0x40f2d8
0x40f2a6:	mov	edi, dword ptr [rbx]
0x40f2a8:	mov	r14d, dword ptr [rbx + 4]
0x40f2ac:	and	edi, 0x7fffffff
0x40f2b2:	cmp	edi, r14d
0x40f2b5:	jne	0x40f371
0x40f2bb:	cmp	byte ptr [rbx + 3], 0
0x40f2bf:	jns	0x40f2d8
0x40f2c1:	mov	qword ptr [rsp + 0x148], 0
0x40f2cd:	mov	r15b, byte ptr [rsp + 0x40]
0x40f2d2:	lea	esi, [r14 + 1]
0x40f2d6:	jmp	0x40f2e3
0x40f2d8:	xor	r15d, r15d
0x40f2db:	xor	r14d, r14d
0x40f2de:	mov	esi, 1
0x40f2e3:	mov	rdi, qword ptr [rsp + 0x148]
0x40f2eb:	xor	edx, edx
0x40f2ed:	mov	qword ptr [rsp + 0x58], rdi
0x40f2f2:	call	0x436e30
0x40f2f7:	mov	rdi, qword ptr [rsp + 0x58]
0x40f2fc:	xor	edx, edx
0x40f2fe:	mov	r10d, eax
0x40f301:	imul	rsi, r10, 0x28
0x40f305:	mov	r9, r10
0x40f308:	add	rsi, 8
0x40f30c:	test	rdi, rdi
0x40f30f:	je	0x40f314
0x40f311:	mov	edx, dword ptr [rdi + 4]
0x40f314:	mov	dword ptr [rsp + 0x60], edx
0x40f318:	mov	dword ptr [rsp + 0x58], r9d
0x40f31d:	call	0x42db80
0x40f322:	mov	r11d, dword ptr [rsp + 0x58]
0x40f327:	mov	r8d, dword ptr [rsp + 0x60]
0x40f32c:	mov	qword ptr [rsp + 0x148], rax
0x40f334:	and	r11d, 0x7fffffff
0x40f33b:	mov	dword ptr [rax + 4], r8d
0x40f33f:	mov	dword ptr [rax], r11d
0x40f342:	test	r15b, r15b
0x40f345:	je	0x40f371
0x40f347:	mov	ecx, r14d
0x40f34a:	xor	r15d, r15d
0x40f34d:	imul	r10, rcx, 0x28
0x40f351:	cmp	r15, r10
0x40f354:	je	0x40f36d
0x40f356:	lea	rdi, [rax + r15 + 8]
0x40f35b:	lea	rsi, [rbx + r15 + 8]
0x40f360:	mov	ecx, 0xa
0x40f365:	add	r15, 0x28
0x40f369:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x40f36b:	jmp	0x40f351
0x40f36d:	mov	dword ptr [rax + 4], r14d
0x40f371:	mov	rdx, qword ptr [rsp + 0x50]
0x40f376:	mov	rbx, qword ptr [rsp + 0x148]
0x40f37e:	lea	rsi, [rsp + 0x170]
0x40f386:	mov	ecx, 0x25
0x40f38b:	mov	r11, qword ptr [rsp + 0x48]
0x40f390:	mov	eax, dword ptr [rbx + 4]
0x40f393:	imul	r8, rax, 0x28
0x40f397:	lea	r9d, [rax + 1]
0x40f39b:	mov	dword ptr [rbx + 4], r9d
0x40f39f:	mov	qword ptr [rsp + 0x170], rdx
0x40f3a7:	mov	qword ptr [rsp + 0x178], rbp
0x40f3af:	lea	rdi, [rbx + r8 + 8]
0x40f3b4:	mov	qword ptr [rsp + 0x188], r11
0x40f3bc:	mov	dword ptr [rsp + 0x190], 0
0x40f3c7:	mov	byte ptr [rsp + 0x194], 1
0x40f3cf:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x40f3d1:	inc	r12d
0x40f3d4:	jmp	0x40f1cd
0x40f3d9:	test	rbx, rbx
0x40f3dc:	je	0x40f3e5
0x40f3de:	mov	esi, dword ptr [rbx + 4]
0x40f3e1:	test	esi, esi
0x40f3e3:	jne	0x40f3f7
0x40f3e5:	lea	rdi, [rsp + 0x148]
0x40f3ed:	call	0x412c74
0x40f3f2:	jmp	0x40f5f4
0x40f3f7:	cmp	esi, 1
0x40f3fa:	je	0x40f40f
0x40f3fc:	lea	rdi, [rbx + 8]
0x40f400:	mov	ecx, 0x413828
0x40f405:	mov	edx, 0x28
0x40f40a:	call	0x4318a0
0x40f40f:	mov	r9d, dword ptr [rbx + 4]
0x40f413:	mov	edi, 0x7fffffff
0x40f418:	mov	r12d, 1
0x40f41e:	lea	edx, [r9 - 1]
0x40f422:	cmp	r9d, edx
0x40f425:	jbe	0x40f460
0x40f427:	mov	ecx, edx
0x40f429:	movsxd	r10, edi
0x40f42c:	imul	r11, rcx, 0x28
0x40f430:	add	r11, rbx
0x40f433:	movsxd	r8, dword ptr [r11 + 0xc]
0x40f437:	mov	r14, r8
0x40f43a:	add	r8, qword ptr [r11 + 0x20]
0x40f43e:	cmp	r8, r10
0x40f441:	jb	0x40f450
0x40f443:	inc	r12d
0x40f446:	cmp	r14d, edi
0x40f449:	jne	0x40f450
0x40f44b:	mov	byte ptr [r11 + 0x2c], 0
0x40f450:	imul	rsi, rcx, 0x28
0x40f454:	dec	edx
0x40f456:	mov	edi, r14d
0x40f459:	mov	dword ptr [rbx + rsi + 0x28], r12d
0x40f45e:	jmp	0x40f422
0x40f460:	mov	ebp, dword ptr [rsp + 0x10]
0x40f464:	mov	esi, 0x20
0x40f469:	lea	rdi, [rsp + 0x1a0]
0x40f471:	lea	r14, [rbx + 8]
0x40f475:	call	0x412c0e
0x40f47a:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f482:	mov	esi, 0x20
0x40f487:	call	0x431ef0
0x40f48c:	mov	edx, dword ptr [rsp + 0x23c]
0x40f493:	mov	r15d, dword ptr [rsp + 0x10]
0x40f498:	inc	edx
0x40f49a:	mov	dword ptr [rsp + 0x170], edx
0x40f4a1:	cmp	dword ptr [rbx + 4], r15d
0x40f4a5:	jbe	0x40f5b7
0x40f4ab:	cmp	dword ptr [r14 + 0x20], ebp
0x40f4af:	jl	0x40f5b7
0x40f4b5:	jne	0x40f535
0x40f4b7:	mov	edx, dword ptr [r14 + 4]
0x40f4bb:	cmp	edx, dword ptr [rsp + 0x170]
0x40f4c2:	jge	0x40f4d8
0x40f4c4:	mov	edx, 0x4c453f
0x40f4c9:	mov	esi, 0x71a
0x40f4ce:	mov	edi, 0x4c4a40
0x40f4d3:	call	0x415bba
0x40f4d8:	mov	ecx, 1
0x40f4dd:	mov	rsi, r13
0x40f4e0:	lea	rdi, [rsp + 0x1a0]
0x40f4e8:	call	0x412c9e
0x40f4ed:	cmp	byte ptr [rsp + 0x21b], 0
0x40f4f5:	jne	0x40f507
0x40f4f7:	mov	esi, dword ptr [r14]
0x40f4fa:	lea	rdi, [rsp + 0x1e0]
0x40f502:	call	0x412be2
0x40f507:	mov	rsi, qword ptr [r14 + 8]
0x40f50b:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f513:	call	0x430480
0x40f518:	or	esi, 0xffffffff
0x40f51b:	lea	rdi, [rsp + 0x1e0]
0x40f523:	call	0x41299e
0x40f528:	mov	rax, qword ptr [r14 + 0x18]
0x40f52c:	add	dword ptr [rsp + 0x170], eax
0x40f533:	jmp	0x40f5ab
0x40f535:	cmp	byte ptr [r14 + 0x24], 0
0x40f53a:	je	0x40f5ab
0x40f53c:	mov	edx, dword ptr [r14 + 4]
0x40f540:	cmp	edx, dword ptr [rsp + 0x170]
0x40f547:	jge	0x40f55d
0x40f549:	mov	edx, 0x4c453f
0x40f54e:	mov	esi, 0x726
0x40f553:	mov	edi, 0x4c4a40
0x40f558:	call	0x415bba
0x40f55d:	mov	ecx, 1
0x40f562:	mov	rsi, r13
0x40f565:	lea	rdi, [rsp + 0x1a0]
0x40f56d:	call	0x412c9e
0x40f572:	mov	esi, dword ptr [r14]
0x40f575:	lea	rdi, [rsp + 0x1e0]
0x40f57d:	call	0x412be2
0x40f582:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40f58a:	mov	esi, 0x7c
0x40f58f:	call	0x431ef0
0x40f594:	or	esi, 0xffffffff
0x40f597:	lea	rdi, [rsp + 0x1e0]
0x40f59f:	call	0x41299e
0x40f5a4:	inc	dword ptr [rsp + 0x170]
0x40f5ab:	inc	r15d
0x40f5ae:	add	r14, 0x28
0x40f5b2:	jmp	0x40f4a1
0x40f5b7:	lea	rdi, [rsp + 0x1a0]
0x40f5bf:	inc	ebp
0x40f5c1:	call	0x412bf4
0x40f5c6:	cmp	r12d, ebp
0x40f5c9:	jge	0x40f464
0x40f5cf:	xor	ebp, ebp
0x40f5d1:	cmp	dword ptr [rbx + 4], ebp
0x40f5d4:	jbe	0x40f3e5
0x40f5da:	imul	rdi, rbp, 0x28
0x40f5de:	cmp	byte ptr [rbx + rdi + 0x18], 0
0x40f5e3:	je	0x40f5ef
0x40f5e5:	mov	rdi, qword ptr [rbx + rdi + 0x10]
0x40f5ea:	call	0x403830
0x40f5ef:	inc	rbp
0x40f5f2:	jmp	0x40f5d1
0x40f5f4:	mov	r12, qword ptr [rsp + 0x1b8]
0x40f5fc:	mov	dword ptr [rsp + 0x40], 0
0x40f604:	xor	r15d, r15d
0x40f607:	mov	rbp, qword ptr [rsp + 0x1a0]
0x40f60f:	mov	qword ptr [rsp + 0x50], r12
0x40f614:	mov	rax, qword ptr [rsp + 0x228]
0x40f61c:	test	rax, rax
0x40f61f:	je	0x40fbfe
0x40f625:	mov	ebx, dword ptr [rsp + 0x40]
0x40f629:	cmp	ebx, dword ptr [rax + 4]
0x40f62c:	jae	0x40fbfe
0x40f632:	mov	r11d, dword ptr [rsp + 0x40]
0x40f637:	mov	rbx, qword ptr [rax + r11*8 + 8]
0x40f63c:	mov	rdi, rbx
0x40f63f:	call	0x41301e
0x40f644:	mov	byte ptr [rsp + 0x48], al
0x40f648:	test	al, al
0x40f64a:	jne	0x40fbf5
0x40f650:	mov	edx, dword ptr [rsp + 0x30]
0x40f654:	mov	rsi, qword ptr [rsp + 0x50]
0x40f659:	mov	rdi, rbx
0x40f65c:	call	0x413036
0x40f661:	mov	byte ptr [rsp + 0x58], al
0x40f665:	test	al, al
0x40f667:	je	0x40fbf5
0x40f66d:	mov	esi, dword ptr [rbx]
0x40f66f:	lea	rdi, [rsp + 0x148]
0x40f677:	call	0x430be0
0x40f67c:	mov	esi, dword ptr [rbx + 4]
0x40f67f:	mov	rdi, r13
0x40f682:	call	0x430be0
0x40f687:	mov	r8d, dword ptr [rsp + 0x17c]
0x40f68f:	mov	esi, dword ptr [rsp + 0x154]
0x40f696:	lea	rdi, [rsp + 0x120]
0x40f69e:	lea	edx, [r8 - 1]
0x40f6a2:	call	0x413094
0x40f6a7:	mov	r10d, dword ptr [rsp + 0x124]
0x40f6af:	mov	esi, dword ptr [rbx]
0x40f6b1:	lea	rdi, [rsp + 0x148]
0x40f6b9:	mov	r12d, dword ptr [rsp + 0x120]
0x40f6c1:	mov	dword ptr [rsp + 0x60], r10d
0x40f6c6:	call	0x430be0
0x40f6cb:	mov	esi, dword ptr [rbx + 4]
0x40f6ce:	mov	rdi, r13
0x40f6d1:	call	0x430be0
0x40f6d6:	mov	edx, dword ptr [rsp + 0x17c]
0x40f6dd:	mov	ecx, dword ptr [rbp + 0x120]
0x40f6e3:	mov	esi, dword ptr [rsp + 0x150]
0x40f6ea:	mov	rdi, qword ptr [rsp + 0x148]
0x40f6f2:	mov	dword ptr [rsp + 0x68], edx
0x40f6f6:	mov	edx, dword ptr [rsp + 0x154]
0x40f6fd:	call	0x412069
0x40f702:	mov	r9d, dword ptr [rbx + 4]
0x40f706:	mov	r14d, eax
0x40f709:	lea	edx, [rax - 1]
0x40f70c:	cmp	dword ptr [rbx], r9d
0x40f70f:	je	0x40f733
0x40f711:	mov	edx, dword ptr [rsp + 0x68]
0x40f715:	mov	ecx, dword ptr [rbp + 0x120]
0x40f71b:	mov	esi, dword ptr [rsp + 0x178]
0x40f722:	mov	rdi, qword ptr [rsp + 0x170]
0x40f72a:	dec	edx
0x40f72c:	call	0x412069
0x40f731:	mov	edx, eax
0x40f733:	mov	esi, r14d
0x40f736:	lea	rdi, [rsp + 0x120]
0x40f73e:	call	0x413094
0x40f743:	mov	esi, dword ptr [rsp + 0x124]
0x40f74a:	movd	xmm3, r12d
0x40f74f:	mov	rdi, r13
0x40f752:	movd	xmm15, dword ptr [rsp + 0x60]
0x40f759:	movd	xmm13, dword ptr [rsp + 0x120]
0x40f763:	movd	xmm14, esi
0x40f768:	mov	dword ptr [rsp + 0x68], esi
0x40f76c:	mov	esi, dword ptr [rbx]
0x40f76e:	punpckldq	xmm3, xmm15
0x40f773:	punpckldq	xmm13, xmm14
0x40f778:	movaps	xmm0, xmm3
0x40f77b:	punpcklqdq	xmm0, xmm13
0x40f780:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x40f788:	call	0x430be0
0x40f78d:	mov	ecx, dword ptr [rbp + 0x120]
0x40f793:	mov	edx, dword ptr [rsp + 0x17c]
0x40f79a:	mov	esi, dword ptr [rsp + 0x178]
0x40f7a1:	mov	rdi, qword ptr [rsp + 0x170]
0x40f7a9:	call	0x412069
0x40f7ae:	mov	esi, dword ptr [rbx + 0x10]
0x40f7b1:	mov	rdi, qword ptr [rbx + 8]
0x40f7b5:	mov	ecx, dword ptr [rbp + 0x120]
0x40f7bb:	mov	r14d, eax
0x40f7be:	mov	edx, esi
0x40f7c0:	call	0x412342
0x40f7c5:	mov	esi, dword ptr [rbx + 4]
0x40f7c8:	lea	edi, [r14 + rax - 1]
0x40f7cd:	cmp	dword ptr [rbx], esi
0x40f7cf:	jne	0x40f7ee
0x40f7d1:	mov	edx, edi
0x40f7d3:	mov	esi, r14d
0x40f7d6:	lea	rdi, [rsp + 0x148]
0x40f7de:	call	0x413094
0x40f7e3:	movq	xmm4, qword ptr [rsp + 0x148]
0x40f7ec:	jmp	0x40f848
0x40f7ee:	mov	dword ptr [rsp + 0x90], edi
0x40f7f5:	mov	rdi, r13
0x40f7f8:	call	0x430be0
0x40f7fd:	mov	eax, dword ptr [rsp + 0x17c]
0x40f804:	mov	ecx, dword ptr [rbp + 0x120]
0x40f80a:	mov	esi, dword ptr [rsp + 0x178]
0x40f811:	mov	rdi, qword ptr [rsp + 0x170]
0x40f819:	lea	edx, [rax - 1]
0x40f81c:	call	0x412069
0x40f821:	mov	ecx, dword ptr [rsp + 0x90]
0x40f828:	mov	esi, r14d
0x40f82b:	lea	rdi, [rsp + 0x148]
0x40f833:	cmp	ecx, eax
0x40f835:	cmovge	eax, ecx
0x40f838:	mov	edx, eax
0x40f83a:	call	0x413094
0x40f83f:	movq	xmm4, qword ptr [rsp + 0x148]
0x40f848:	movd	r11d, xmm4
0x40f84d:	test	r15, r15
0x40f850:	je	0x40fabc
0x40f856:	mov	r8d, dword ptr [r15 + 4]
0x40f85a:	test	r8d, r8d
0x40f85d:	je	0x40fabc
0x40f863:	dec	r8d
0x40f866:	mov	r14, qword ptr [r15 + r8*8 + 8]
0x40f86b:	cmp	dword ptr [r14], r12d
0x40f86e:	jle	0x40f884
0x40f870:	mov	edx, 0x4c4550
0x40f875:	mov	esi, 0x8b9
0x40f87a:	mov	edi, 0x4c4a40
0x40f87f:	call	0x415bba
0x40f884:	cmp	r11d, dword ptr [r14 + 0x10]
0x40f888:	jge	0x40f89e
0x40f88a:	mov	edx, 0x4c4550
0x40f88f:	mov	esi, 0x8bb
0x40f894:	mov	edi, 0x4c4a40
0x40f899:	call	0x415bba
0x40f89e:	cmp	r11d, dword ptr [r14 + 0x14]
0x40f8a2:	jg	0x40fabc
0x40f8a8:	lea	edx, [r12 - 1]
0x40f8ad:	mov	r12d, dword ptr [r14 + 4]
0x40f8b1:	lea	rdi, [rsp + 0x148]
0x40f8b9:	movq	qword ptr [rsp + 0x90], xmm4
0x40f8c2:	lea	esi, [r12 + 1]
0x40f8c7:	call	0x413094
0x40f8cc:	mov	esi, dword ptr [rsp + 0x30]
0x40f8d0:	mov	rdi, qword ptr [rsp + 0x50]
0x40f8d5:	call	0x4310b0
0x40f8da:	movq	xmm4, qword ptr [rsp + 0x90]
0x40f8e3:	test	rax, rax
0x40f8e6:	mov	r9, rdx
0x40f8e9:	je	0x40fabc
0x40f8ef:	mov	edx, dword ptr [rsp + 0x14c]
0x40f8f6:	cmp	r9d, edx
0x40f8f9:	jle	0x40fabc
0x40f8ff:	mov	rsi, qword ptr [r14 + 0x20]
0x40f903:	mov	r8d, esi
0x40f906:	test	esi, esi
0x40f908:	jns	0x40f91e
0x40f90a:	mov	edx, 0x4c4550
0x40f90f:	mov	esi, 0x8d1
0x40f914:	mov	edi, 0x4c4a40
0x40f919:	call	0x415bba
0x40f91e:	mov	r11d, dword ptr [rsp + 0x148]
0x40f926:	inc	edx
0x40f928:	sub	edx, r11d
0x40f92b:	jns	0x40f941
0x40f92d:	mov	edx, 0x4c4550
0x40f932:	mov	esi, 0x8d3
0x40f937:	mov	edi, 0x4c4a40
0x40f93c:	call	0x415bba
0x40f941:	lea	ecx, [rdx + rsi]
0x40f944:	mov	dword ptr [rsp + 0x48], ecx
0x40f948:	mov	edi, ecx
0x40f94a:	add	edi, dword ptr [rbx + 0x10]
0x40f94d:	jns	0x40f963
0x40f94f:	mov	edx, 0x4c4550
0x40f954:	mov	esi, 0x8d6
0x40f959:	mov	edi, 0x4c4a40
0x40f95e:	call	0x415bba
0x40f963:	movsxd	r12, edi
0x40f966:	lea	rsi, [r12 + 1]
0x40f96b:	cmp	qword ptr [r14 + 0x30], rsi
0x40f96f:	jae	0x40f9dd
0x40f971:	mov	rdi, qword ptr [r14 + 0x18]
0x40f975:	add	rsi, rsi
0x40f978:	mov	qword ptr [rsp + 0xa8], r9
0x40f980:	mov	dword ptr [rsp + 0x9c], edx
0x40f987:	mov	dword ptr [rsp + 0x90], r11d
0x40f98f:	mov	dword ptr [rsp + 0x80], r8d
0x40f997:	mov	qword ptr [rsp + 0xa0], rax
0x40f99f:	mov	qword ptr [rsp + 0x58], rsi
0x40f9a4:	call	0x42db80
0x40f9a9:	mov	r10, qword ptr [rsp + 0x58]
0x40f9ae:	mov	r9, qword ptr [rsp + 0xa8]
0x40f9b6:	mov	qword ptr [r14 + 0x18], rax
0x40f9ba:	mov	edx, dword ptr [rsp + 0x9c]
0x40f9c1:	mov	qword ptr [r14 + 0x30], r10
0x40f9c5:	mov	rax, qword ptr [rsp + 0xa0]
0x40f9cd:	mov	r11d, dword ptr [rsp + 0x90]
0x40f9d5:	mov	r8d, dword ptr [rsp + 0x80]
0x40f9dd:	dec	r11d
0x40f9e0:	jns	0x40f9f6
0x40f9e2:	mov	edx, 0x4c4559
0x40f9e7:	mov	esi, 0x47
0x40f9ec:	mov	edi, 0x4c4561
0x40f9f1:	call	0x415bba
0x40f9f6:	cmp	r9d, r11d
0x40f9f9:	jg	0x40fa0f
0x40f9fb:	mov	edx, 0x4c4559
0x40fa00:	mov	esi, 0x48
0x40fa05:	mov	edi, 0x4c4561
0x40fa0a:	call	0x415bba
0x40fa0f:	movsxd	rsi, r11d
0x40fa12:	movsxd	rcx, edx
0x40fa15:	mov	rdi, r14
0x40fa18:	mov	rdx, r13
0x40fa1b:	add	rax, rsi
0x40fa1e:	mov	esi, r8d
0x40fa21:	mov	qword ptr [rsp + 0x178], rcx
0x40fa29:	mov	qword ptr [rsp + 0x170], rax
0x40fa31:	call	0x41b22e
0x40fa36:	mov	rdi, qword ptr [rbx + 0x10]
0x40fa3a:	mov	esi, dword ptr [rsp + 0x48]
0x40fa3e:	mov	rdx, r13
0x40fa41:	mov	rbx, qword ptr [rbx + 8]
0x40fa45:	mov	qword ptr [rsp + 0x178], rdi
0x40fa4d:	mov	rdi, r14
0x40fa50:	mov	qword ptr [rsp + 0x170], rbx
0x40fa58:	call	0x41b22e
0x40fa5d:	mov	qword ptr [r14 + 0x20], r12
0x40fa61:	cmp	r12, qword ptr [r14 + 0x30]
0x40fa65:	jb	0x40fa7b
0x40fa67:	mov	edx, 0x4c4577
0x40fa6c:	mov	esi, 0x86b
0x40fa71:	mov	edi, 0x4c4a40
0x40fa76:	call	0x415bba
0x40fa7b:	mov	r10, qword ptr [r14 + 0x18]
0x40fa7f:	mov	r9d, dword ptr [rsp + 0x68]
0x40fa84:	mov	byte ptr [r10 + r12], 0
0x40fa89:	mov	r12d, dword ptr [rsp + 0x60]
0x40fa8e:	mov	esi, dword ptr [r14 + 0x20]
0x40fa92:	mov	ecx, dword ptr [r14 + 0x2c]
0x40fa96:	mov	dword ptr [r14 + 0xc], r9d
0x40fa9a:	mov	rdi, qword ptr [r14 + 0x18]
0x40fa9e:	mov	ebx, dword ptr [r14 + 0x28]
0x40faa2:	mov	dword ptr [r14 + 4], r12d
0x40faa6:	mov	edx, esi
0x40faa8:	call	0x412342
0x40faad:	mov	dword ptr [r14 + 0x28], eax
0x40fab1:	sub	eax, ebx
0x40fab3:	add	dword ptr [r14 + 0x14], eax
0x40fab7:	jmp	0x40fbf5
0x40fabc:	mov	r14, qword ptr [rbx + 8]
0x40fac0:	mov	edi, 0x38
0x40fac5:	mov	r12, qword ptr [rbx + 0x10]
0x40fac9:	movq	qword ptr [rsp + 0x68], xmm4
0x40facf:	mov	qword ptr [rsp + 0x60], r14
0x40fad4:	call	0x440420
0x40fad9:	movaps	xmm5, xmmword ptr [rsp + 0x80]
0x40fae1:	movq	xmm6, qword ptr [rsp + 0x68]
0x40fae7:	mov	rdi, qword ptr [rsp + 0x60]
0x40faec:	mov	r14d, dword ptr [rbp + 0x120]
0x40faf3:	mov	rbx, rax
0x40faf6:	movups	xmmword ptr [rax], xmm5
0x40faf9:	movq	qword ptr [rax + 0x10], xmm6
0x40fafe:	call	0x42db40
0x40fb03:	mov	qword ptr [rbx + 0x20], r12
0x40fb07:	mov	esi, r12d
0x40fb0a:	mov	ecx, r14d
0x40fb0d:	mov	qword ptr [rbx + 0x18], rax
0x40fb11:	mov	rdi, rax
0x40fb14:	lea	rax, [r12 + 1]
0x40fb19:	mov	edx, r12d
0x40fb1c:	mov	dword ptr [rbx + 0x2c], r14d
0x40fb20:	mov	qword ptr [rbx + 0x30], rax
0x40fb24:	call	0x412342
0x40fb29:	mov	dword ptr [rbx + 0x28], eax
0x40fb2c:	test	r15, r15
0x40fb2f:	je	0x40fb64
0x40fb31:	mov	edx, dword ptr [r15]
0x40fb34:	mov	r12d, dword ptr [r15 + 4]
0x40fb38:	mov	rax, r15
0x40fb3b:	and	edx, 0x7fffffff
0x40fb41:	cmp	edx, r12d
0x40fb44:	jne	0x40fbe2
0x40fb4a:	cmp	byte ptr [r15 + 3], 0
0x40fb4f:	jns	0x40fb70
0x40fb51:	mov	r11b, byte ptr [rsp + 0x58]
0x40fb56:	lea	esi, [r12 + 1]
0x40fb5b:	xor	edi, edi
0x40fb5d:	mov	byte ptr [rsp + 0x48], r11b
0x40fb62:	jmp	0x40fb7b
0x40fb64:	xor	edi, edi
0x40fb66:	xor	r12d, r12d
0x40fb69:	mov	esi, 1
0x40fb6e:	jmp	0x40fb7b
0x40fb70:	mov	rdi, r15
0x40fb73:	xor	r12d, r12d
0x40fb76:	mov	esi, 1
0x40fb7b:	xor	edx, edx
0x40fb7d:	mov	qword ptr [rsp + 0x58], rdi
0x40fb82:	call	0x436e30
0x40fb87:	mov	rdi, qword ptr [rsp + 0x58]
0x40fb8c:	xor	ecx, ecx
0x40fb8e:	mov	r8d, eax
0x40fb91:	mov	r14d, eax
0x40fb94:	lea	rsi, [r8*8 + 8]
0x40fb9c:	test	rdi, rdi
0x40fb9f:	je	0x40fba4
0x40fba1:	mov	ecx, dword ptr [rdi + 4]
0x40fba4:	mov	dword ptr [rsp + 0x58], ecx
0x40fba8:	and	r14d, 0x7fffffff
0x40fbaf:	call	0x42db80
0x40fbb4:	mov	esi, dword ptr [rsp + 0x58]
0x40fbb8:	xor	edi, edi
0x40fbba:	cmp	byte ptr [rsp + 0x48], 0
0x40fbbf:	mov	dword ptr [rax], r14d
0x40fbc2:	mov	r10d, r12d
0x40fbc5:	mov	dword ptr [rax + 4], esi
0x40fbc8:	je	0x40fbe2
0x40fbca:	cmp	rdi, r10
0x40fbcd:	je	0x40fbde
0x40fbcf:	mov	r9, qword ptr [r15 + rdi*8 + 8]
0x40fbd4:	mov	qword ptr [rax + rdi*8 + 8], r9
0x40fbd9:	inc	rdi
0x40fbdc:	jmp	0x40fbca
0x40fbde:	mov	dword ptr [rax + 4], r12d
0x40fbe2:	mov	r15d, dword ptr [rax + 4]
0x40fbe6:	lea	edx, [r15 + 1]
0x40fbea:	mov	dword ptr [rax + 4], edx
0x40fbed:	mov	qword ptr [rax + r15*8 + 8], rbx
0x40fbf2:	mov	r15, rax
0x40fbf5:	inc	dword ptr [rsp + 0x40]
0x40fbf9:	jmp	0x40f614
0x40fbfe:	mov	ebp, dword ptr [rsp + 0x23c]
0x40fc05:	mov	dword ptr [rsp + 0x170], ebp
0x40fc0c:	test	r15, r15
0x40fc0f:	je	0x40fd86
0x40fc15:	cmp	dword ptr [r15 + 4], 0
0x40fc1a:	je	0x40fd86
0x40fc20:	mov	esi, 0x20
0x40fc25:	lea	rdi, [rsp + 0x1a0]
0x40fc2d:	xor	ebx, ebx
0x40fc2f:	call	0x412c0e
0x40fc34:	cmp	ebx, dword ptr [r15 + 4]
0x40fc38:	jae	0x40fd86
0x40fc3e:	mov	ecx, ebx
0x40fc40:	mov	r14, qword ptr [r15 + rcx*8 + 8]
0x40fc45:	mov	r11d, dword ptr [r14 + 4]
0x40fc49:	lea	r8d, [r11 + 1]
0x40fc4d:	cmp	dword ptr [r14], r8d
0x40fc50:	jne	0x40fc60
0x40fc52:	mov	edx, dword ptr [r14 + 0x10]
0x40fc56:	mov	ecx, 1
0x40fc5b:	jmp	0x40fd31
0x40fc60:	mov	rsi, qword ptr [rsp + 0x220]
0x40fc68:	mov	r12d, dword ptr [r14 + 8]
0x40fc6c:	mov	ebp, dword ptr [r14 + 0xc]
0x40fc70:	mov	r9d, dword ptr [rsp + 0x10]
0x40fc75:	mov	r10d, dword ptr [rsp + 8]
0x40fc7a:	lea	rdx, [rsi + 8]
0x40fc7e:	test	rsi, rsi
0x40fc81:	je	0x40fcaf
0x40fc83:	cmp	r9d, dword ptr [rsi + 4]
0x40fc87:	jae	0x40fcaf
0x40fc89:	cmp	r10d, dword ptr [rdx]
0x40fc8c:	jne	0x40fc9f
0x40fc8e:	cmp	r12d, dword ptr [rdx + 8]
0x40fc92:	jne	0x40fc9f
0x40fc94:	cmp	r10d, dword ptr [rdx + 0xc]
0x40fc98:	jne	0x40fc9f
0x40fc9a:	cmp	ebp, dword ptr [rdx + 0x14]
0x40fc9d:	je	0x40fca8
0x40fc9f:	inc	r9d
0x40fca2:	add	rdx, 0x38
0x40fca6:	jmp	0x40fc7e
0x40fca8:	cmp	qword ptr [r14 + 0x20], 0
0x40fcad:	jne	0x40fd29
0x40fcaf:	mov	ecx, 1
0x40fcb4:	mov	edx, r12d
0x40fcb7:	mov	rsi, r13
0x40fcba:	lea	rdi, [rsp + 0x1a0]
0x40fcc2:	call	0x412c9e
0x40fcc7:	mov	esi, 0xfffffffd
0x40fccc:	lea	rdi, [rsp + 0x1e0]
0x40fcd4:	call	0x41299e
0x40fcd9:	mov	qword ptr [rsp + 0x30], r15
0x40fcde:	mov	r15d, ebx
0x40fce1:	mov	ebx, dword ptr [rsp + 0x170]
0x40fce8:	cmp	ebp, ebx
0x40fcea:	jl	0x40fd0a
0x40fcec:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40fcf4:	mov	esi, 0x2d
0x40fcf9:	call	0x431ef0
0x40fcfe:	lea	edi, [rbx + 1]
0x40fd01:	mov	dword ptr [rsp + 0x170], edi
0x40fd08:	jmp	0x40fce1
0x40fd0a:	or	esi, 0xffffffff
0x40fd0d:	lea	rdi, [rsp + 0x1e0]
0x40fd15:	mov	ebx, r15d
0x40fd18:	mov	r15, qword ptr [rsp + 0x30]
0x40fd1d:	call	0x41299e
0x40fd22:	cmp	qword ptr [r14 + 0x20], 0
0x40fd27:	je	0x40fd7f
0x40fd29:	mov	ecx, 1
0x40fd2e:	mov	edx, r12d
0x40fd31:	mov	rsi, r13
0x40fd34:	lea	rdi, [rsp + 0x1a0]
0x40fd3c:	call	0x412c9e
0x40fd41:	mov	esi, 0xfffffffe
0x40fd46:	lea	rdi, [rsp + 0x1e0]
0x40fd4e:	call	0x41299e
0x40fd53:	mov	rsi, qword ptr [r14 + 0x18]
0x40fd57:	mov	rdi, qword ptr [rsp + 0x1a8]
0x40fd5f:	call	0x430480
0x40fd64:	or	esi, 0xffffffff
0x40fd67:	lea	rdi, [rsp + 0x1e0]
0x40fd6f:	call	0x41299e
0x40fd74:	mov	eax, dword ptr [r14 + 0x28]
0x40fd78:	add	dword ptr [rsp + 0x170], eax
0x40fd7f:	inc	ebx
0x40fd81:	jmp	0x40fc34
0x40fd86:	xor	ecx, ecx
0x40fd88:	xor	edx, edx
0x40fd8a:	mov	rsi, r13
0x40fd8d:	xor	ebx, ebx
0x40fd8f:	lea	rdi, [rsp + 0x1a0]
0x40fd97:	call	0x412c9e
0x40fd9c:	test	r15, r15
0x40fd9f:	je	0x40fde6
0x40fda1:	cmp	ebx, dword ptr [r15 + 4]
0x40fda5:	jae	0x40fdcd
0x40fda7:	mov	ecx, ebx
0x40fda9:	mov	r14, qword ptr [r15 + rcx*8 + 8]
0x40fdae:	test	r14, r14
0x40fdb1:	je	0x40fdc9
0x40fdb3:	mov	rdi, qword ptr [r14 + 0x18]
0x40fdb7:	call	0x403830
0x40fdbc:	mov	esi, 0x38
0x40fdc1:	mov	rdi, r14
0x40fdc4:	call	0x440230
0x40fdc9:	inc	ebx
0x40fdcb:	jmp	0x40fd9c
0x40fdcd:	cmp	byte ptr [r15 + 3], 0
0x40fdd2:	jns	0x40fdde
0x40fdd4:	mov	dword ptr [r15 + 4], 0
0x40fddc:	jmp	0x40fde6
0x40fdde:	mov	rdi, r15
0x40fde1:	call	0x403830
0x40fde6:	inc	qword ptr [rsp + 0x28]
0x40fdeb:	jmp	0x40e5fc
0x40fdf0:	cmp	byte ptr [rdi + 3], 0
0x40fdf4:	jns	0x40fe02
0x40fdf6:	mov	dword ptr [rdi + 4], 0
0x40fdfd:	jmp	0x40e640
0x40fe02:	call	0x403830
0x40fe07:	jmp	0x40e640
0x40fe0c:	cmp	byte ptr [rdi + 3], 0
0x40fe10:	jns	0x40fe1e
0x40fe12:	mov	dword ptr [rdi + 4], 0
0x40fe19:	jmp	0x40e651
0x40fe1e:	call	0x403830
0x40fe23:	jmp	0x40e651
0x40fe28:	mov	esi, 1
0x40fe2d:	mov	rdi, rbp
0x40fe30:	call	0x4316f0
0x40fe35:	jmp	0x43f463
0x40fe3a:	pop	rbx
0x40fe3b:	pop	rbp
0x40fe3c:	pop	r12
0x40fe3e:	ret	
0x40fe3f:	mov	esi, 1
0x40fe44:	mov	rdi, rbp
0x40fe47:	call	0x4316f0
0x40fe4c:	jmp	0x43f4cf
0x40fe51:	call	0x42dd40
0x40fe56:	mov	rdx, qword ptr [rbx + 8]
0x40fe5a:	mov	dword ptr [rdx + 0xc8], 0
0x40fe64:	jmp	0x430ac9
0x40fe69:	cmp	esi, 3
0x40fe6c:	jne	0x40fed4
0x40fe6e:	call	0x42c159
0x40fe73:	mov	dword ptr [rsp + 0xc], 0
0x40fe7b:	mov	rdi, rax
0x40fe7e:	test	rax, rax
0x40fe81:	je	0x40fe8d
0x40fe83:	lea	rsi, [rsp + 0xc]
0x40fe88:	call	0x42c295
0x40fe8d:	cmp	byte ptr [rbp + 0x86], 0
0x40fe94:	je	0x40fede
0x40fe96:	call	0x403880
0x40fe9b:	mov	edx, 0x4c4b28
0x40fea0:	mov	esi, 0x299
0x40fea5:	mov	edi, 0x4c438f
0x40feaa:	call	0x415bba
0x40feaf:	mov	rdi, qword ptr [rip + 0xd31ea]
0x40feb6:	mov	esi, 0x4c4a68
0x40febb:	xor	eax, eax
0x40febd:	call	0x43a390
0x40fec2:	mov	rdi, rbp
0x40fec5:	call	0x43f6b0
0x40feca:	mov	edi, 1
0x40fecf:	call	0x403e70
0x40fed4:	mov	dword ptr [rsp + 0xc], 0
0x40fedc:	jmp	0x40fe8d
0x40fede:	mov	rdi, qword ptr [rip + 0xd31bb]
0x40fee5:	xor	eax, eax
0x40fee7:	mov	esi, 0x4c4a98
0x40feec:	call	0x43a390
0x40fef1:	cmp	dword ptr [rsp + 0xc], 0
0x40fef6:	jle	0x40ff0b
0x40fef8:	mov	rdi, qword ptr [rip + 0xd31a1]
0x40feff:	mov	esi, 0x4c4ae8
0x40ff04:	xor	eax, eax
0x40ff06:	call	0x43a390
0x40ff0b:	mov	rdi, qword ptr [rip + 0xd318e]
0x40ff12:	mov	edx, 0x4be120
0x40ff17:	mov	esi, 0x4c4589
0x40ff1c:	xor	eax, eax
0x40ff1e:	call	0x43a390
0x40ff23:	mov	edi, 4
0x40ff28:	call	0x403e70
0x40ff2d:	nop	
0x40ff2e:	mov	rdx, qword ptr [rbx + 0x98]
0x40ff35:	lea	rsi, [rdx + rcx*8 - 0x10]
0x40ff3a:	jmp	0x430b1e
0x40ff3f:	nop	
0x40ff40:	mov	edi, 0x4e30c0
0x40ff45:	push	rdx
0x40ff46:	call	rax
0x40ff48:	mov	dword ptr [rip + 0xd32a2], 0
0x40ff52:	pop	rcx
0x40ff53:	ret	
0x40ff54:	mov	dword ptr [rdi + 4], 0
0x40ff5b:	jmp	0x43f727
0x40ff60:	mov	r12, qword ptr [r15 + 8]
0x40ff64:	test	r12, r12
0x40ff67:	je	0x410030
0x40ff6d:	mov	rsi, qword ptr [r15 + 0x18]
0x40ff71:	mov	rdi, qword ptr [r12]
0x40ff75:	test	rsi, rsi
0x40ff78:	je	0x40ff7c
0x40ff7a:	call	rsi
0x40ff7c:	mov	r8, qword ptr [r15 + 0x20]
0x40ff80:	mov	rdi, qword ptr [r12 + 8]
0x40ff85:	test	r8, r8
0x40ff88:	je	0x40ff8d
0x40ff8a:	call	r8
0x40ff8d:	mov	qword ptr [r12 + 0x20], 0
0x40ff96:	mov	r13, r12
0x40ff99:	xor	r12d, r12d
0x40ff9c:	mov	r11, qword ptr [r13 + 0x10]
0x40ffa0:	test	r11, r11
0x40ffa3:	je	0x40ffd3
0x40ffa5:	mov	r9, qword ptr [r15 + 0x18]
0x40ffa9:	mov	rdi, qword ptr [r11]
0x40ffac:	test	r9, r9
0x40ffaf:	je	0x40ffb8
0x40ffb1:	call	r9
0x40ffb4:	mov	r11, qword ptr [r13 + 0x10]
0x40ffb8:	mov	r10, qword ptr [r15 + 0x20]
0x40ffbc:	mov	rdi, qword ptr [r11 + 8]
0x40ffc0:	test	r10, r10
0x40ffc3:	je	0x40ffcc
0x40ffc5:	call	r10
0x40ffc8:	mov	r11, qword ptr [r13 + 0x10]
0x40ffcc:	mov	qword ptr [r11 + 0x20], r12
0x40ffd0:	mov	r12, r11
0x40ffd3:	mov	rax, qword ptr [r13 + 0x18]
0x40ffd7:	test	rax, rax
0x40ffda:	je	0x410009
0x40ffdc:	mov	r14, qword ptr [r15 + 0x18]
0x40ffe0:	mov	rdi, qword ptr [rax]
0x40ffe3:	test	r14, r14
0x40ffe6:	je	0x40ffef
0x40ffe8:	call	r14
0x40ffeb:	mov	rax, qword ptr [r13 + 0x18]
0x40ffef:	mov	rbx, qword ptr [r15 + 0x20]
0x40fff3:	mov	rdi, qword ptr [rax + 8]
0x40fff7:	test	rbx, rbx
0x40fffa:	je	0x410002
0x40fffc:	call	rbx
0x40fffe:	mov	rax, qword ptr [r13 + 0x18]
0x410002:	mov	qword ptr [rax + 0x20], r12
0x410006:	mov	r12, rax
0x410009:	mov	r14, qword ptr [r13 + 0x20]
0x41000d:	mov	esi, 0x28
0x410012:	mov	rdi, r13
0x410015:	call	0x440230
0x41001a:	test	r14, r14
0x41001d:	je	0x410027
0x41001f:	mov	r13, r14
0x410022:	jmp	0x40ff9c
0x410027:	test	r12, r12
0x41002a:	jne	0x40ff96
0x410030:	mov	esi, 0x28
0x410035:	mov	rdi, r15
0x410038:	call	0x440230
0x41003d:	mov	qword ptr [rbp + 0x128], 0
0x410048:	jmp	0x43f713
0x41004d:	push	r12
0x41004f:	push	rbx
0x410050:	mov	rbx, rdi
0x410053:	mov	edi, 0x4c4b48
0x410058:	push	rdx
0x410059:	cmp	byte ptr [rbx + 0x44], 0
0x41005d:	mov	r12, qword ptr [rip + 0xd4964]
0x410064:	jne	0x41006b
0x410066:	mov	edi, 0x4c4b78
0x41006b:	call	0x403a20
0x410070:	mov	rdi, qword ptr [rbx]
0x410073:	mov	rdx, r12
0x410076:	mov	rsi, rax
0x410079:	xor	eax, eax
0x41007b:	call	0x412dd6
0x410080:	mov	rdi, qword ptr [rbx]
0x410083:	pop	rax
0x410084:	pop	rbx
0x410085:	pop	r12
0x410087:	jmp	0x43fe00
0x41008c:	mov	edx, 0x4c45c8
0x410091:	mov	esi, 0xde
0x410096:	mov	edi, 0x45b07b
0x41009b:	call	0x415bba
0x4100a0:	mov	edx, 0x4c45c8
0x4100a5:	mov	esi, 0xdf
0x4100aa:	mov	edi, 0x45b07b
0x4100af:	call	0x415bba
0x4100b4:	mov	r9, qword ptr [rdi + 0x30]
0x4100b8:	mov	r10, qword ptr [rdi + 0x48]
0x4100bc:	test	ebx, ebx
0x4100be:	je	0x410114
0x4100c0:	mov	r13d, 0x27001
0x4100c6:	shl	r13, 0x26
0x4100ca:	or	r9, r13
0x4100cd:	or	r10, r13
0x4100d0:	mov	qword ptr [rdi + 0x30], r9
0x4100d4:	mov	qword ptr [rdi + 0x48], r10
0x4100d8:	jmp	0x43f925
0x4100dd:	movabs	rdi, 0xf7dfffff8f8000ff
0x4100e7:	and	qword ptr [rbp + 0x38], 0xffffffffffffff07
0x4100ef:	movabs	r8, 0x8200000707fff00
0x4100f9:	and	rdx, rdi
0x4100fc:	or	rsi, r8
0x4100ff:	or	qword ptr [rbp + 0x40], 0xf8
0x410107:	mov	qword ptr [rbp + 0x30], rdx
0x41010b:	mov	qword ptr [rbp + 0x48], rsi
0x41010f:	jmp	0x43f925
0x410114:	movabs	rcx, 0xf7dfffbf8f8000ff
0x41011e:	and	qword ptr [rdi + 0x38], 0xffffffffffffff07
0x410126:	movabs	r11, 0x8200040707fff00
0x410130:	and	r9, rcx
0x410133:	or	r10, r11
0x410136:	or	qword ptr [rdi + 0x40], 0xf8
0x41013e:	mov	qword ptr [rdi + 0x30], r9
0x410142:	mov	qword ptr [rdi + 0x48], r10
0x410146:	jmp	0x43f925
0x41014b:	mov	eax, 0x2f001
0x410150:	shl	rax, 0x26
0x410154:	or	qword ptr [rdi + 0x30], rax
0x410158:	or	qword ptr [rdi + 0x48], rax
0x41015c:	jmp	0x43f925
0x410161:	mov	r12, qword ptr [rdi + 0x30]
0x410165:	mov	rsi, qword ptr [rdi + 0x48]
0x410169:	test	ebx, ebx
0x41016b:	je	0x4102af
0x410171:	mov	r8d, 7
0x410177:	shl	r8, 0x32
0x41017b:	or	r12, r8
0x41017e:	or	rsi, r8
0x410181:	mov	qword ptr [rdi + 0x30], r12
0x410185:	mov	qword ptr [rdi + 0x48], rsi
0x410189:	jmp	0x43f925
0x41018e:	mov	r9, qword ptr [rdi + 0x30]
0x410192:	mov	r10, qword ptr [rdi + 0x48]
0x410196:	test	ebx, ebx
0x410198:	je	0x4101df
0x41019a:	mov	r11d, 3
0x4101a0:	shl	r11, 0x32
0x4101a4:	or	r9, r11
0x4101a7:	or	r10, r11
0x4101aa:	mov	qword ptr [rdi + 0x30], r9
0x4101ae:	mov	qword ptr [rdi + 0x48], r10
0x4101b2:	jmp	0x43f925
0x4101b7:	mov	r13, qword ptr [rdi + 0x30]
0x4101bb:	mov	rax, qword ptr [rdi + 0x48]
0x4101bf:	test	ebx, ebx
0x4101c1:	je	0x410216
0x4101c3:	mov	edx, 1
0x4101c8:	shl	rdx, 0x32
0x4101cc:	or	r13, rdx
0x4101cf:	or	rax, rdx
0x4101d2:	mov	qword ptr [rdi + 0x30], r13
0x4101d6:	mov	qword ptr [rdi + 0x48], rax
0x4101da:	jmp	0x43f925
0x4101df:	movabs	rbx, 0xf707ffbf8f8000ff
0x4101e9:	and	qword ptr [rdi + 0x38], 0xffffffffdfffbf07
0x4101f1:	movabs	rcx, 0x8f80040707fff00
0x4101fb:	and	r9, rbx
0x4101fe:	or	r10, rcx
0x410201:	or	qword ptr [rdi + 0x40], 0x200040f8
0x410209:	mov	qword ptr [rdi + 0x30], r9
0x41020d:	mov	qword ptr [rdi + 0x48], r10
0x410211:	jmp	0x43f925
0x410216:	movabs	r12, 0xf703ffbf8f8000ff
0x410220:	and	qword ptr [rdi + 0x38], 0xffffffffdfffbf07
0x410228:	movabs	rsi, 0x8fc0040707fff00
0x410232:	and	r13, r12
0x410235:	or	rax, rsi
0x410238:	or	qword ptr [rdi + 0x40], 0x200040f8
0x410240:	mov	qword ptr [rdi + 0x30], r13
0x410244:	mov	qword ptr [rdi + 0x48], rax
0x410248:	jmp	0x43f925
0x41024d:	mov	r8, qword ptr [rbp + 0x48]
0x410251:	mov	edi, 1
0x410256:	mov	r9, qword ptr [rbp + 0x30]
0x41025a:	shl	rdi, 0x31
0x41025e:	or	r8, rdi
0x410261:	test	ebx, ebx
0x410263:	je	0x41029d
0x410265:	or	r9, rdi
0x410268:	mov	qword ptr [rbp + 0x48], r8
0x41026c:	mov	qword ptr [rbp + 0x30], r9
0x410270:	jmp	0x43f925
0x410275:	mov	r10, qword ptr [rdi + 0x30]
0x410279:	mov	r11, qword ptr [rdi + 0x48]
0x41027d:	test	ebx, ebx
0x41027f:	je	0x4102e6
0x410281:	mov	ebx, 0xd
0x410286:	shl	rbx, 0x30
0x41028a:	or	r10, rbx
0x41028d:	or	r11, rbx
0x410290:	mov	qword ptr [rdi + 0x30], r10
0x410294:	mov	qword ptr [rdi + 0x48], r11
0x410298:	jmp	0x43f925
0x41029d:	btr	r9, 0x31
0x4102a2:	mov	qword ptr [rbp + 0x48], r8
0x4102a6:	mov	qword ptr [rbp + 0x30], r9
0x4102aa:	jmp	0x43f925
0x4102af:	movabs	rdx, 0xf70fffbf8f8000ff
0x4102b9:	and	r12, rdx
0x4102bc:	mov	qword ptr [rdi + 0x30], r12
0x4102c0:	movabs	rdi, 0x8f00040707fff00
0x4102ca:	or	rsi, rdi
0x4102cd:	and	qword ptr [rbp + 0x38], 0xffffffffffffff07
0x4102d5:	or	qword ptr [rbp + 0x40], 0xf8
0x4102dd:	mov	qword ptr [rbp + 0x48], rsi
0x4102e1:	jmp	0x43f925
0x4102e6:	btr	r10, 0x30
0x4102eb:	bts	r11, 0x30
0x4102f0:	mov	qword ptr [rdi + 0x30], r10
0x4102f4:	mov	qword ptr [rdi + 0x48], r11
0x4102f8:	jmp	0x43f925
0x4102fd:	mov	rcx, qword ptr [rdi + 0x40]
0x410301:	mov	r13, qword ptr [rdi + 0x38]
0x410305:	or	rcx, 0x800000
0x41030c:	test	ebx, ebx
0x41030e:	je	0x41034e
0x410310:	or	r13, 0x800000
0x410317:	mov	qword ptr [rdi + 0x40], rcx
0x41031b:	mov	qword ptr [rdi + 0x38], r13
0x41031f:	jmp	0x43f925
0x410324:	mov	r12, qword ptr [rdi + 0x40]
0x410328:	mov	rax, qword ptr [rdi + 0x38]
0x41032c:	or	r12, 0x400000
0x410333:	test	ebx, ebx
0x410335:	je	0x4104a8
0x41033b:	or	rax, 0x400000
0x410341:	mov	qword ptr [rdi + 0x40], r12
0x410345:	mov	qword ptr [rdi + 0x38], rax
0x410349:	jmp	0x43f925
0x41034e:	and	r13, 0xffffffffff7fffff
0x410355:	movq	xmm13, rcx
0x41035a:	movq	xmm12, r13
0x41035f:	punpcklqdq	xmm12, xmm13
0x410364:	movups	xmmword ptr [rdi + 0x38], xmm12
0x410369:	jmp	0x43f925
0x41036e:	mov	r13, qword ptr [rdi + 0x48]
0x410372:	mov	ecx, 1
0x410377:	mov	r11, qword ptr [rdi + 0x30]
0x41037b:	shl	rcx, 0x2d
0x41037f:	or	r13, rcx
0x410382:	test	ebx, ebx
0x410384:	je	0x4103c3
0x410386:	or	r11, rcx
0x410389:	mov	qword ptr [rdi + 0x48], r13
0x41038d:	mov	qword ptr [rdi + 0x30], r11
0x410391:	jmp	0x43f925
0x410396:	mov	rsi, qword ptr [rdi + 0x48]
0x41039a:	mov	r12d, 1
0x4103a0:	mov	rax, qword ptr [rdi + 0x30]
0x4103a4:	shl	r12, 0x2c
0x4103a8:	or	rsi, r12
0x4103ab:	test	ebx, ebx
0x4103ad:	je	0x4104d9
0x4103b3:	or	rax, r12
0x4103b6:	mov	qword ptr [rdi + 0x48], rsi
0x4103ba:	mov	qword ptr [rdi + 0x30], rax
0x4103be:	jmp	0x43f925
0x4103c3:	btr	r11, 0x2d
0x4103c8:	mov	qword ptr [rdi + 0x48], r13
0x4103cc:	mov	qword ptr [rdi + 0x30], r11
0x4103d0:	jmp	0x43f925
0x4103d5:	mov	rdx, qword ptr [rdi + 0x48]
0x4103d9:	mov	esi, 1
0x4103de:	mov	rdi, qword ptr [rdi + 0x30]
0x4103e2:	shl	rsi, 0x2f
0x4103e6:	or	rdx, rsi
0x4103e9:	test	ebx, ebx
0x4103eb:	je	0x41042a
0x4103ed:	or	rdi, rsi
0x4103f0:	mov	qword ptr [rbp + 0x48], rdx
0x4103f4:	mov	qword ptr [rbp + 0x30], rdi
0x4103f8:	jmp	0x43f925
0x4103fd:	mov	r9, qword ptr [rdi + 0x48]
0x410401:	mov	r8d, 1
0x410407:	mov	r10, qword ptr [rdi + 0x30]
0x41040b:	shl	r8, 0x2e
0x41040f:	or	r9, r8
0x410412:	test	ebx, ebx
0x410414:	je	0x4104c7
0x41041a:	or	r10, r8
0x41041d:	mov	qword ptr [rdi + 0x48], r9
0x410421:	mov	qword ptr [rdi + 0x30], r10
0x410425:	jmp	0x43f925
0x41042a:	btr	rdi, 0x2f
0x41042f:	mov	qword ptr [rbp + 0x48], rdx
0x410433:	mov	qword ptr [rbp + 0x30], rdi
0x410437:	jmp	0x43f925
0x41043c:	mov	rdx, qword ptr [rdi + 0x40]
0x410440:	mov	rdi, qword ptr [rdi + 0x38]
0x410444:	or	rdx, 0x200000
0x41044b:	test	ebx, ebx
0x41044d:	je	0x41048a
0x41044f:	or	rdi, 0x200000
0x410456:	mov	qword ptr [rbp + 0x40], rdx
0x41045a:	mov	qword ptr [rbp + 0x38], rdi
0x41045e:	jmp	0x43f925
0x410463:	mov	r8, qword ptr [rdi + 0x40]
0x410467:	mov	r9, qword ptr [rdi + 0x38]
0x41046b:	or	r8, 0x100000
0x410472:	test	ebx, ebx
0x410474:	je	0x4104eb
0x410476:	or	r9, 0x100000
0x41047d:	mov	qword ptr [rdi + 0x40], r8
0x410481:	mov	qword ptr [rdi + 0x38], r9
0x410485:	jmp	0x43f925
0x41048a:	and	rdi, 0xffffffffffdfffff
0x410491:	movq	xmm3, rdx
0x410496:	movq	xmm0, rdi
0x41049b:	punpcklqdq	xmm0, xmm3
0x41049f:	movups	xmmword ptr [rbp + 0x38], xmm0
0x4104a3:	jmp	0x43f925
0x4104a8:	and	rax, 0xffffffffffbfffff
0x4104ae:	movq	xmm15, r12
0x4104b3:	movq	xmm14, rax
0x4104b8:	punpcklqdq	xmm14, xmm15
0x4104bd:	movups	xmmword ptr [rdi + 0x38], xmm14
0x4104c2:	jmp	0x43f925
0x4104c7:	btr	r10, 0x2e
0x4104cc:	mov	qword ptr [rdi + 0x48], r9
0x4104d0:	mov	qword ptr [rdi + 0x30], r10
0x4104d4:	jmp	0x43f925
0x4104d9:	btr	rax, 0x2c
0x4104de:	mov	qword ptr [rdi + 0x48], rsi
0x4104e2:	mov	qword ptr [rdi + 0x30], rax
0x4104e6:	jmp	0x43f925
0x4104eb:	and	r9, 0xffffffffffefffff
0x4104f2:	movq	xmm1, r8
0x4104f7:	movq	xmm7, r9
0x4104fc:	punpcklqdq	xmm7, xmm1
0x410500:	movups	xmmword ptr [rdi + 0x38], xmm7
0x410504:	jmp	0x43f925
0x410509:	mov	rcx, qword ptr [rdi + 0x48]
0x41050d:	mov	r11d, 1
0x410513:	mov	r10, qword ptr [rdi + 0x30]
0x410517:	shl	r11, 0x2b
0x41051b:	or	rcx, r11
0x41051e:	test	ebx, ebx
0x410520:	je	0x41055f
0x410522:	or	r10, r11
0x410525:	mov	qword ptr [rdi + 0x48], rcx
0x410529:	mov	qword ptr [rdi + 0x30], r10
0x41052d:	jmp	0x43f925
0x410532:	mov	rsi, qword ptr [rdi + 0x48]
0x410536:	mov	r12d, 1
0x41053c:	mov	r13, qword ptr [rdi + 0x30]
0x410540:	shl	r12, 0x2a
0x410544:	or	rsi, r12
0x410547:	test	ebx, ebx
0x410549:	je	0x410826
0x41054f:	or	r13, r12
0x410552:	mov	qword ptr [rdi + 0x48], rsi
0x410556:	mov	qword ptr [rdi + 0x30], r13
0x41055a:	jmp	0x43f925
0x41055f:	btr	r10, 0x2b
0x410564:	mov	qword ptr [rdi + 0x48], rcx
0x410568:	mov	qword ptr [rdi + 0x30], r10
0x41056c:	jmp	0x43f925
0x410571:	mov	rdx, qword ptr [rdi + 0x40]
0x410575:	mov	rax, qword ptr [rdi + 0x38]
0x410579:	or	rdx, 0x20000
0x410580:	test	ebx, ebx
0x410582:	je	0x4105c4
0x410584:	or	rax, 0x20000
0x41058a:	mov	qword ptr [rdi + 0x40], rdx
0x41058e:	mov	qword ptr [rdi + 0x38], rax
0x410592:	jmp	0x43f925
0x410597:	mov	r9, qword ptr [rdi + 0x48]
0x41059b:	mov	r8d, 1
0x4105a1:	mov	r10, qword ptr [rdi + 0x30]
0x4105a5:	shl	r8, 0x25
0x4105a9:	or	r9, r8
0x4105ac:	test	ebx, ebx
0x4105ae:	je	0x4108b6
0x4105b4:	or	r10, r8
0x4105b7:	mov	qword ptr [rdi + 0x48], r9
0x4105bb:	mov	qword ptr [rdi + 0x30], r10
0x4105bf:	jmp	0x43f925
0x4105c4:	and	rax, 0xfffffffffffdffff
0x4105ca:	movq	xmm11, rdx
0x4105cf:	movq	xmm10, rax
0x4105d4:	punpcklqdq	xmm10, xmm11
0x4105d9:	movups	xmmword ptr [rdi + 0x38], xmm10
0x4105de:	jmp	0x43f925
0x4105e3:	mov	r11, qword ptr [rdi + 0x40]
0x4105e7:	mov	rcx, qword ptr [rdi + 0x38]
0x4105eb:	or	r11, 0x80000
0x4105f2:	test	ebx, ebx
0x4105f4:	je	0x410636
0x4105f6:	or	rcx, 0x80000
0x4105fd:	mov	qword ptr [rdi + 0x40], r11
0x410601:	mov	qword ptr [rdi + 0x38], rcx
0x410605:	jmp	0x43f925
0x41060a:	mov	r13, qword ptr [rdi + 0x30]
0x41060e:	mov	r12, qword ptr [rdi + 0x48]
0x410612:	test	ebx, ebx
0x410614:	je	0x4107ef
0x41061a:	mov	ebx, 0x1801
0x41061f:	shl	rbx, 0x27
0x410623:	or	r13, rbx
0x410626:	or	r12, rbx
0x410629:	mov	qword ptr [rdi + 0x30], r13
0x41062d:	mov	qword ptr [rdi + 0x48], r12
0x410631:	jmp	0x43f925
0x410636:	and	rcx, 0xfffffffffff7ffff
0x41063d:	movq	xmm6, r11
0x410642:	movq	xmm2, rcx
0x410647:	punpcklqdq	xmm2, xmm6
0x41064b:	movups	xmmword ptr [rdi + 0x38], xmm2
0x41064f:	jmp	0x43f925
0x410654:	mov	r13, qword ptr [rdi + 0x30]
0x410658:	mov	r12, qword ptr [rdi + 0x48]
0x41065c:	test	ebx, ebx
0x41065e:	je	0x4106a9
0x410660:	mov	edi, 1
0x410665:	shl	rdi, 0x24
0x410669:	or	r13, rdi
0x41066c:	or	r12, rdi
0x41066f:	mov	qword ptr [rbp + 0x30], r13
0x410673:	mov	qword ptr [rbp + 0x48], r12
0x410677:	jmp	0x43f925
0x41067c:	mov	r9, qword ptr [rdi + 0x48]
0x410680:	mov	r8d, 1
0x410686:	mov	r10, qword ptr [rdi + 0x30]
0x41068a:	shl	r8, 0x23
0x41068e:	or	r9, r8
0x410691:	test	ebx, ebx
0x410693:	je	0x4108e4
0x410699:	or	r10, r8
0x41069c:	mov	qword ptr [rdi + 0x48], r9
0x4106a0:	mov	qword ptr [rdi + 0x30], r10
0x4106a4:	jmp	0x43f925
0x4106a9:	movabs	rbx, 0xffffffeffffffff3
0x4106b3:	movabs	rsi, 0x100000000c
0x4106bd:	and	r13, rbx
0x4106c0:	or	r12, rsi
0x4106c3:	mov	qword ptr [rdi + 0x30], r13
0x4106c7:	mov	qword ptr [rdi + 0x48], r12
0x4106cb:	jmp	0x43f925
0x4106d0:	mov	rdx, qword ptr [rbp + 0x48]
0x4106d4:	mov	edi, 1
0x4106d9:	mov	rax, qword ptr [rbp + 0x30]
0x4106dd:	shl	rdi, 0x29
0x4106e1:	or	rdx, rdi
0x4106e4:	test	ebx, ebx
0x4106e6:	je	0x410725
0x4106e8:	or	rax, rdi
0x4106eb:	mov	qword ptr [rbp + 0x48], rdx
0x4106ef:	mov	qword ptr [rbp + 0x30], rax
0x4106f3:	jmp	0x43f925
0x4106f8:	mov	r10, qword ptr [rdi + 0x48]
0x4106fc:	mov	r9d, 1
0x410702:	mov	r8, qword ptr [rdi + 0x30]
0x410706:	shl	r9, 0x28
0x41070a:	or	r10, r9
0x41070d:	test	ebx, ebx
0x41070f:	je	0x410838
0x410715:	or	r8, r9
0x410718:	mov	qword ptr [rdi + 0x48], r10
0x41071c:	mov	qword ptr [rdi + 0x30], r8
0x410720:	jmp	0x43f925
0x410725:	btr	rax, 0x29
0x41072a:	mov	qword ptr [rbp + 0x48], rdx
0x41072e:	mov	qword ptr [rbp + 0x30], rax
0x410732:	jmp	0x43f925
0x410737:	mov	r11, qword ptr [rdi + 0x40]
0x41073b:	mov	rcx, qword ptr [rdi + 0x38]
0x41073f:	or	r11, 0x10000
0x410746:	test	ebx, ebx
0x410748:	je	0x410781
0x41074a:	or	rcx, 0x10000
0x410751:	mov	qword ptr [rdi + 0x40], r11
0x410755:	mov	qword ptr [rdi + 0x38], rcx
0x410759:	jmp	0x43f925
0x41075e:	mov	rdx, qword ptr [rdi + 0x40]
0x410762:	mov	rax, qword ptr [rdi + 0x38]
0x410766:	or	dh, 0x80
0x410769:	test	ebx, ebx
0x41076b:	je	0x4108c8
0x410771:	or	ah, 0x80
0x410774:	mov	qword ptr [rdi + 0x40], rdx
0x410778:	mov	qword ptr [rdi + 0x38], rax
0x41077c:	jmp	0x43f925
0x410781:	and	rcx, 0xfffffffffffeffff
0x410788:	movq	xmm13, r11
0x41078d:	movq	xmm12, rcx
0x410792:	punpcklqdq	xmm12, xmm13
0x410797:	movups	xmmword ptr [rdi + 0x38], xmm12
0x41079c:	jmp	0x43f925
0x4107a1:	movdqu	xmm4, xmmword ptr [rdi + 0x40]
0x4107a6:	movdqu	xmm5, xmmword ptr [rdi + 0x30]
0x4107ab:	por	xmm4, xmmword ptr [rip + 0xb63bd]
0x4107b3:	pand	xmm5, xmmword ptr [rip + 0xb63c5]
0x4107bb:	movups	xmmword ptr [rdi + 0x40], xmm4
0x4107bf:	movups	xmmword ptr [rdi + 0x30], xmm5
0x4107c3:	jmp	0x43f925
0x4107c8:	mov	rsi, qword ptr [rdi + 0x38]
0x4107cc:	mov	rdi, qword ptr [rdi + 0x40]
0x4107d0:	or	rdi, 0x40000
0x4107d7:	test	ebx, ebx
0x4107d9:	je	0x410806
0x4107db:	or	rsi, 0x40000
0x4107e2:	mov	qword ptr [rbp + 0x40], rdi
0x4107e6:	mov	qword ptr [rbp + 0x38], rsi
0x4107ea:	jmp	0x43f925
0x4107ef:	btr	r13, 0x27
0x4107f4:	bts	r12, 0x27
0x4107f9:	mov	qword ptr [rdi + 0x30], r13
0x4107fd:	mov	qword ptr [rdi + 0x48], r12
0x410801:	jmp	0x43f925
0x410806:	and	rsi, 0xfffffffffffbffff
0x41080d:	movq	xmm9, rdi
0x410812:	movq	xmm8, rsi
0x410817:	punpcklqdq	xmm8, xmm9
0x41081c:	movups	xmmword ptr [rbp + 0x38], xmm8
0x410821:	jmp	0x43f925
0x410826:	btr	r13, 0x2a
0x41082b:	mov	qword ptr [rdi + 0x48], rsi
0x41082f:	mov	qword ptr [rdi + 0x30], r13
0x410833:	jmp	0x43f925
0x410838:	btr	r8, 0x28
0x41083d:	mov	qword ptr [rdi + 0x48], r10
0x410841:	mov	qword ptr [rdi + 0x30], r8
0x410845:	jmp	0x43f925
0x41084a:	mov	rcx, qword ptr [rdi + 0x48]
0x41084e:	mov	r11d, 1
0x410854:	mov	rdx, qword ptr [rdi + 0x30]
0x410858:	shl	r11, 0x22
0x41085c:	or	rcx, r11
0x41085f:	test	ebx, ebx
0x410861:	je	0x4108a4
0x410863:	or	rdx, r11
0x410866:	mov	qword ptr [rdi + 0x48], rcx
0x41086a:	mov	qword ptr [rdi + 0x30], rdx
0x41086e:	jmp	0x43f925
0x410873:	mov	rax, qword ptr [rdi + 0x38]
0x410877:	mov	rcx, qword ptr [rdi + 0x40]
0x41087b:	test	ebx, ebx
0x41087d:	je	0x4108f6
0x41087f:	or	ah, 0x40
0x410882:	or	ch, 0x40
0x410885:	mov	r13d, 3
0x41088b:	shl	r13, 0x32
0x41088f:	mov	qword ptr [rdi + 0x38], rax
0x410893:	or	qword ptr [rdi + 0x30], r13
0x410897:	or	qword ptr [rdi + 0x48], r13
0x41089b:	mov	qword ptr [rdi + 0x40], rcx
0x41089f:	jmp	0x43f925
0x4108a4:	btr	rdx, 0x22
0x4108a9:	mov	qword ptr [rdi + 0x48], rcx
0x4108ad:	mov	qword ptr [rdi + 0x30], rdx
0x4108b1:	jmp	0x43f925
0x4108b6:	btr	r10, 0x25
0x4108bb:	mov	qword ptr [rdi + 0x48], r9
0x4108bf:	mov	qword ptr [rdi + 0x30], r10
0x4108c3:	jmp	0x43f925
0x4108c8:	and	ah, 0x7f
0x4108cb:	movq	xmm15, rdx
0x4108d0:	movq	xmm14, rax
0x4108d5:	punpcklqdq	xmm14, xmm15
0x4108da:	movups	xmmword ptr [rdi + 0x38], xmm14
0x4108df:	jmp	0x43f925
0x4108e4:	btr	r10, 0x23
0x4108e9:	mov	qword ptr [rdi + 0x48], r9
0x4108ed:	mov	qword ptr [rdi + 0x30], r10
0x4108f1:	jmp	0x43f925
0x4108f6:	and	rax, 0xffffffffdfffbfff
0x4108fc:	or	rcx, 0x20004000
0x410903:	movq	xmm0, rax
0x410908:	movq	xmm3, rcx
0x41090d:	punpcklqdq	xmm0, xmm3
0x410911:	movups	xmmword ptr [rdi + 0x38], xmm0
0x410915:	jmp	0x43f925
0x41091a:	mov	rdx, qword ptr [rdi + 0x40]
0x41091e:	mov	rax, qword ptr [rdi + 0x38]
0x410922:	or	dh, 0x20
0x410925:	test	ebx, ebx
0x410927:	je	0x410966
0x410929:	or	ah, 0x20
0x41092c:	mov	qword ptr [rdi + 0x40], rdx
0x410930:	mov	qword ptr [rdi + 0x38], rax
0x410934:	jmp	0x43f925
0x410939:	mov	rsi, qword ptr [rdi + 0x48]
0x41093d:	mov	r12d, 1
0x410943:	mov	rdi, qword ptr [rdi + 0x30]
0x410947:	shl	r12, 0x21
0x41094b:	or	rsi, r12
0x41094e:	test	ebx, ebx
0x410950:	je	0x4117c4
0x410956:	or	rdi, r12
0x410959:	mov	qword ptr [rbp + 0x48], rsi
0x41095d:	mov	qword ptr [rbp + 0x30], rdi
0x410961:	jmp	0x43f925
0x410966:	and	ah, 0xdf
0x410969:	movq	xmm1, rdx
0x41096e:	movq	xmm7, rax
0x410973:	punpcklqdq	xmm7, xmm1
0x410977:	movups	xmmword ptr [rdi + 0x38], xmm7
0x41097b:	jmp	0x43f925
0x410980:	mov	rdx, qword ptr [rdi + 0x30]
0x410984:	mov	rax, qword ptr [rdi + 0x48]
0x410988:	test	ebx, ebx
0x41098a:	je	0x4109e0
0x41098c:	movabs	rbx, 0x10bc004000008700
0x410996:	or	rdx, rbx
0x410999:	or	rax, rbx
0x41099c:	mov	qword ptr [rdi + 0x30], rdx
0x4109a0:	mov	qword ptr [rdi + 0x48], rax
0x4109a4:	jmp	0x43f925
0x4109a9:	mov	r12, qword ptr [rdi + 0x40]
0x4109ad:	mov	rsi, qword ptr [rdi + 0x38]
0x4109b1:	or	r12, 0x20
0x4109b5:	test	ebx, ebx
0x4109b7:	je	0x411950
0x4109bd:	or	rsi, 0x20
0x4109c1:	mov	qword ptr [rdi + 0x40], r12
0x4109c5:	mov	qword ptr [rdi + 0x38], rsi
0x4109c9:	movabs	rdi, 0x10bc004000008b00
0x4109d3:	or	qword ptr [rbp + 0x30], rdi
0x4109d7:	or	qword ptr [rbp + 0x48], rdi
0x4109db:	jmp	0x43f925
0x4109e0:	and	dh, 0xfb
0x4109e3:	or	ah, 4
0x4109e6:	mov	qword ptr [rdi + 0x30], rdx
0x4109ea:	mov	qword ptr [rdi + 0x48], rax
0x4109ee:	jmp	0x43f925
0x4109f3:	mov	r10, qword ptr [rdi + 0x48]
0x4109f7:	mov	r11, qword ptr [rdi + 0x30]
0x4109fb:	or	r10, 0x1000000
0x410a02:	test	ebx, ebx
0x410a04:	je	0x410a45
0x410a06:	or	r11, 0x1000000
0x410a0d:	mov	qword ptr [rdi + 0x48], r10
0x410a11:	mov	qword ptr [rdi + 0x30], r11
0x410a15:	jmp	0x43f925
0x410a1a:	mov	r8, qword ptr [rdi + 0x48]
0x410a1e:	mov	r13, qword ptr [rdi + 0x30]
0x410a22:	or	r8, 0x800000
0x410a29:	test	ebx, ebx
0x410a2b:	je	0x411873
0x410a31:	or	r13, 0x800000
0x410a38:	mov	qword ptr [rdi + 0x48], r8
0x410a3c:	mov	qword ptr [rdi + 0x30], r13
0x410a40:	jmp	0x43f925
0x410a45:	and	r11, 0xfffffffffeffffff
0x410a4c:	mov	qword ptr [rdi + 0x48], r10
0x410a50:	mov	qword ptr [rdi + 0x30], r11
0x410a54:	jmp	0x43f925
0x410a59:	mov	rsi, qword ptr [rdi + 0x30]
0x410a5d:	mov	rax, qword ptr [rdi + 0x48]
0x410a61:	test	ebx, ebx
0x410a63:	je	0x410aae
0x410a65:	movabs	rdi, 0x1000000004
0x410a6f:	or	rsi, rdi
0x410a72:	or	rax, rdi
0x410a75:	mov	qword ptr [rbp + 0x30], rsi
0x410a79:	mov	qword ptr [rbp + 0x48], rax
0x410a7d:	jmp	0x43f925
0x410a82:	mov	rdx, qword ptr [rdi + 0x30]
0x410a86:	mov	rsi, qword ptr [rdi + 0x48]
0x410a8a:	test	ebx, ebx
0x410a8c:	je	0x411a0b
0x410a92:	mov	ecx, 9
0x410a97:	shl	rcx, 0x3c
0x410a9b:	or	rdx, rcx
0x410a9e:	or	rsi, rcx
0x410aa1:	mov	qword ptr [rdi + 0x30], rdx
0x410aa5:	mov	qword ptr [rdi + 0x48], rsi
0x410aa9:	jmp	0x43f925
0x410aae:	and	rsi, 0xfffffffffffffff3
0x410ab2:	or	rax, 0xc
0x410ab6:	mov	qword ptr [rdi + 0x30], rsi
0x410aba:	mov	qword ptr [rdi + 0x48], rax
0x410abe:	jmp	0x43f925
0x410ac3:	mov	rcx, qword ptr [rdi + 0x40]
0x410ac7:	mov	rax, qword ptr [rdi + 0x38]
0x410acb:	or	ch, 8
0x410ace:	test	ebx, ebx
0x410ad0:	je	0x410b05
0x410ad2:	or	ah, 8
0x410ad5:	mov	qword ptr [rdi + 0x40], rcx
0x410ad9:	mov	qword ptr [rdi + 0x38], rax
0x410add:	jmp	0x43f925
0x410ae2:	mov	rdx, qword ptr [rdi + 0x40]
0x410ae6:	mov	rcx, qword ptr [rdi + 0x38]
0x410aea:	or	dh, 4
0x410aed:	test	ebx, ebx
0x410aef:	je	0x411829
0x410af5:	or	ch, 4
0x410af8:	mov	qword ptr [rdi + 0x40], rdx
0x410afc:	mov	qword ptr [rdi + 0x38], rcx
0x410b00:	jmp	0x43f925
0x410b05:	and	ah, 0xf7
0x410b08:	movq	xmm6, rcx
0x410b0d:	movq	xmm2, rax
0x410b12:	punpcklqdq	xmm2, xmm6
0x410b16:	movups	xmmword ptr [rdi + 0x38], xmm2
0x410b1a:	jmp	0x43f925
0x410b1f:	mov	r12, qword ptr [rdi + 0x40]
0x410b23:	mov	rax, qword ptr [rdi + 0x38]
0x410b27:	or	r12, 1
0x410b2b:	test	ebx, ebx
0x410b2d:	je	0x410b74
0x410b2f:	or	rax, 1
0x410b33:	mov	qword ptr [rdi + 0x40], r12
0x410b37:	mov	qword ptr [rdi + 0x38], rax
0x410b3b:	jmp	0x43f925
0x410b40:	xor	esi, esi
0x410b42:	xor	eax, eax
0x410b44:	mov	edx, 0x4c4bd8
0x410b49:	mov	edi, ecx
0x410b4b:	call	0x412cf4
0x410b50:	cmp	ebx, 0x10
0x410b53:	jle	0x4119bf
0x410b59:	mov	ecx, 0x10
0x410b5e:	mov	edx, ebx
0x410b60:	mov	esi, 0x4c4c10
0x410b65:	mov	edi, r13d
0x410b68:	xor	eax, eax
0x410b6a:	call	0x43fe20
0x410b6f:	jmp	0x43f925
0x410b74:	and	rax, 0xfffffffffffffffe
0x410b78:	movq	xmm11, r12
0x410b7d:	movq	xmm10, rax
0x410b82:	punpcklqdq	xmm10, xmm11
0x410b87:	movups	xmmword ptr [rdi + 0x38], xmm10
0x410b8c:	jmp	0x43f925
0x410b91:	mov	r10, qword ptr [rdi + 0x30]
0x410b95:	mov	rax, qword ptr [rdi + 0x48]
0x410b99:	test	ebx, ebx
0x410b9b:	je	0x410be7
0x410b9d:	movabs	rcx, 0x10bc004000048b00
0x410ba7:	or	r10, rcx
0x410baa:	or	rax, rcx
0x410bad:	mov	qword ptr [rdi + 0x30], r10
0x410bb1:	mov	qword ptr [rdi + 0x48], rax
0x410bb5:	jmp	0x43f925
0x410bba:	mov	r11, qword ptr [rdi + 0x30]
0x410bbe:	mov	r8, qword ptr [rdi + 0x48]
0x410bc2:	test	ebx, ebx
0x410bc4:	je	0x4118d8
0x410bca:	movabs	r13, 0x10bc004000028300
0x410bd4:	or	r11, r13
0x410bd7:	or	r8, r13
0x410bda:	mov	qword ptr [rdi + 0x30], r11
0x410bde:	mov	qword ptr [rdi + 0x48], r8
0x410be2:	jmp	0x43f925
0x410be7:	and	r10, 0xfffffffffffbffff
0x410bee:	or	rax, 0x40000
0x410bf4:	mov	qword ptr [rdi + 0x30], r10
0x410bf8:	mov	qword ptr [rdi + 0x48], rax
0x410bfc:	jmp	0x43f925
0x410c01:	mov	r12, qword ptr [rdi + 0x40]
0x410c05:	mov	rdx, qword ptr [rdi + 0x38]
0x410c09:	or	r12, 0x8000000
0x410c10:	test	ebx, ebx
0x410c12:	je	0x410c54
0x410c14:	or	rdx, 0x8000000
0x410c1b:	mov	qword ptr [rdi + 0x40], r12
0x410c1f:	mov	qword ptr [rdi + 0x38], rdx
0x410c23:	jmp	0x43f925
0x410c28:	mov	rdi, qword ptr [rdi + 0x48]
0x410c2c:	mov	esi, 1
0x410c31:	mov	r8, qword ptr [rbp + 0x30]
0x410c35:	shl	rsi, 0x39
0x410c39:	or	rdi, rsi
0x410c3c:	test	ebx, ebx
0x410c3e:	je	0x411a6d
0x410c44:	or	r8, rsi
0x410c47:	mov	qword ptr [rbp + 0x48], rdi
0x410c4b:	mov	qword ptr [rbp + 0x30], r8
0x410c4f:	jmp	0x43f925
0x410c54:	and	rdx, 0xfffffffff7ffffff
0x410c5b:	movq	xmm6, r12
0x410c60:	movq	xmm2, rdx
0x410c65:	punpcklqdq	xmm2, xmm6
0x410c69:	movups	xmmword ptr [rdi + 0x38], xmm2
0x410c6d:	jmp	0x43f925
0x410c72:	mov	r11, qword ptr [rdi + 0x48]
0x410c76:	mov	r10d, 0x80000000
0x410c7c:	mov	r8, qword ptr [rdi + 0x30]
0x410c80:	or	r11, r10
0x410c83:	test	ebx, ebx
0x410c85:	je	0x410cc4
0x410c87:	or	r8, r10
0x410c8a:	mov	qword ptr [rdi + 0x48], r11
0x410c8e:	mov	qword ptr [rdi + 0x30], r8
0x410c92:	jmp	0x43f925
0x410c97:	mov	r13, qword ptr [rdi + 0x30]
0x410c9b:	mov	r9, qword ptr [rdi + 0x48]
0x410c9f:	test	ebx, ebx
0x410ca1:	je	0x4117e8
0x410ca7:	movabs	rax, 0x10fc004040000100
0x410cb1:	or	r13, rax
0x410cb4:	or	r9, rax
0x410cb7:	mov	qword ptr [rdi + 0x30], r13
0x410cbb:	mov	qword ptr [rdi + 0x48], r9
0x410cbf:	jmp	0x43f925
0x410cc4:	btr	r8, 0x1f
0x410cc9:	mov	qword ptr [rdi + 0x48], r11
0x410ccd:	mov	qword ptr [rdi + 0x30], r8
0x410cd1:	jmp	0x43f925
0x410cd6:	mov	rdx, qword ptr [rdi + 0x30]
0x410cda:	mov	rax, qword ptr [rdi + 0x48]
0x410cde:	test	ebx, ebx
0x410ce0:	je	0x410d2c
0x410ce2:	movabs	rbx, 0x10bc004000000300
0x410cec:	or	rdx, rbx
0x410cef:	or	rax, rbx
0x410cf2:	mov	qword ptr [rdi + 0x30], rdx
0x410cf6:	mov	qword ptr [rdi + 0x48], rax
0x410cfa:	jmp	0x43f925
0x410cff:	mov	r12, qword ptr [rdi + 0x30]
0x410d03:	mov	rsi, qword ptr [rdi + 0x48]
0x410d07:	test	ebx, ebx
0x410d09:	je	0x41196b
0x410d0f:	movabs	rcx, 0x10bc004000000100
0x410d19:	or	r12, rcx
0x410d1c:	or	rsi, rcx
0x410d1f:	mov	qword ptr [rdi + 0x30], r12
0x410d23:	mov	qword ptr [rdi + 0x48], rsi
0x410d27:	jmp	0x43f925
0x410d2c:	and	rdx, 0xffffffffff8001ff
0x410d33:	or	rax, 0x7ffe00
0x410d39:	and	qword ptr [rdi + 0x38], 0xffffffffffffff07
0x410d41:	or	qword ptr [rdi + 0x40], 0xf8
0x410d49:	mov	qword ptr [rdi + 0x30], rdx
0x410d4d:	mov	qword ptr [rdi + 0x48], rax
0x410d51:	jmp	0x43f925
0x410d56:	mov	rcx, qword ptr [rdi + 0x40]
0x410d5a:	mov	rax, qword ptr [rdi + 0x38]
0x410d5e:	or	rcx, 0x40
0x410d62:	test	ebx, ebx
0x410d64:	je	0x410db6
0x410d66:	or	rax, 0x40
0x410d6a:	mov	qword ptr [rdi + 0x40], rcx
0x410d6e:	movabs	r10, 0x10bc00400000a300
0x410d78:	mov	qword ptr [rdi + 0x38], rax
0x410d7c:	or	qword ptr [rdi + 0x30], r10
0x410d80:	or	qword ptr [rdi + 0x48], r10
0x410d84:	jmp	0x43f925
0x410d89:	mov	r11, qword ptr [rdi + 0x30]
0x410d8d:	mov	r8, qword ptr [rdi + 0x48]
0x410d91:	test	ebx, ebx
0x410d93:	je	0x4118a2
0x410d99:	movabs	r13, 0x10bc004000208300
0x410da3:	or	r11, r13
0x410da6:	or	r8, r13
0x410da9:	mov	qword ptr [rdi + 0x30], r11
0x410dad:	mov	qword ptr [rdi + 0x48], r8
0x410db1:	jmp	0x43f925
0x410db6:	and	rax, 0xffffffffffffffbf
0x410dba:	movq	xmm15, rcx
0x410dbf:	movq	xmm14, rax
0x410dc4:	punpcklqdq	xmm14, xmm15
0x410dc9:	movups	xmmword ptr [rdi + 0x38], xmm14
0x410dce:	jmp	0x43f925
0x410dd3:	mov	r13, qword ptr [rdi + 0x30]
0x410dd7:	mov	rax, qword ptr [rdi + 0x48]
0x410ddb:	test	ebx, ebx
0x410ddd:	je	0x410e28
0x410ddf:	mov	esi, 1
0x410de4:	shl	rsi, 0x3c
0x410de8:	or	r13, rsi
0x410deb:	or	rax, rsi
0x410dee:	mov	qword ptr [rdi + 0x30], r13
0x410df2:	mov	qword ptr [rdi + 0x48], rax
0x410df6:	jmp	0x43f925
0x410dfb:	mov	rdi, qword ptr [rdi + 0x30]
0x410dff:	mov	r8, qword ptr [rbp + 0x48]
0x410e03:	test	ebx, ebx
0x410e05:	je	0x411a39
0x410e0b:	movabs	rcx, 0x18fc004040000100
0x410e15:	or	rdi, rcx
0x410e18:	or	r8, rcx
0x410e1b:	mov	qword ptr [rbp + 0x30], rdi
0x410e1f:	mov	qword ptr [rbp + 0x48], r8
0x410e23:	jmp	0x43f925
0x410e28:	movabs	r12, 0x7ffffff8f8000ff
0x410e32:	and	qword ptr [rdi + 0x38], 0xffffffffffffff03
0x410e3a:	movabs	rdx, 0xf8000000707fff00
0x410e44:	and	r13, r12
0x410e47:	or	rax, rdx
0x410e4a:	or	qword ptr [rdi + 0x40], 0xfc
0x410e52:	mov	qword ptr [rdi + 0x30], r13
0x410e56:	mov	qword ptr [rdi + 0x48], rax
0x410e5a:	jmp	0x43f925
0x410e5f:	mov	r12, qword ptr [rdi + 0x48]
0x410e63:	mov	r9, qword ptr [rdi + 0x30]
0x410e67:	or	r12, 0x4000000
0x410e6e:	test	ebx, ebx
0x410e70:	je	0x410eb1
0x410e72:	or	r9, 0x4000000
0x410e79:	mov	qword ptr [rdi + 0x48], r12
0x410e7d:	mov	qword ptr [rdi + 0x30], r9
0x410e81:	jmp	0x43f925
0x410e86:	mov	rsi, qword ptr [rdi + 0x30]
0x410e8a:	mov	rdi, qword ptr [rdi + 0x48]
0x410e8e:	or	rdi, 0x2000000
0x410e95:	test	ebx, ebx
0x410e97:	je	0x41185f
0x410e9d:	or	rsi, 0x2000000
0x410ea4:	mov	qword ptr [rbp + 0x48], rdi
0x410ea8:	mov	qword ptr [rbp + 0x30], rsi
0x410eac:	jmp	0x43f925
0x410eb1:	and	r9, 0xfffffffffbffffff
0x410eb8:	mov	qword ptr [rdi + 0x48], r12
0x410ebc:	mov	qword ptr [rdi + 0x30], r9
0x410ec0:	jmp	0x43f925
0x410ec5:	mov	rsi, qword ptr [rdi + 0x30]
0x410ec9:	mov	rdi, qword ptr [rdi + 0x48]
0x410ecd:	test	ebx, ebx
0x410ecf:	je	0x410f13
0x410ed1:	movabs	rbx, 0xc000000000080
0x410edb:	or	rsi, rbx
0x410ede:	or	rdi, rbx
0x410ee1:	mov	qword ptr [rbp + 0x30], rsi
0x410ee5:	mov	qword ptr [rbp + 0x48], rdi
0x410ee9:	jmp	0x43f925
0x410eee:	mov	rcx, qword ptr [rdi + 0x48]
0x410ef2:	mov	r10, qword ptr [rdi + 0x30]
0x410ef6:	or	rcx, 0x40
0x410efa:	test	ebx, ebx
0x410efc:	je	0x4119e5
0x410f02:	or	r10, 0x40
0x410f06:	mov	qword ptr [rdi + 0x48], rcx
0x410f0a:	mov	qword ptr [rdi + 0x30], r10
0x410f0e:	jmp	0x43f925
0x410f13:	and	sil, 0x7f
0x410f17:	or	dil, 0x80
0x410f1b:	mov	qword ptr [rbp + 0x30], rsi
0x410f1f:	mov	qword ptr [rbp + 0x48], rdi
0x410f23:	jmp	0x43f925
0x410f28:	mov	rdx, qword ptr [rdi + 0x30]
0x410f2c:	mov	rax, qword ptr [rdi + 0x48]
0x410f30:	test	ebx, ebx
0x410f32:	je	0x410f7e
0x410f34:	movabs	r10, 0x10bc00400000c300
0x410f3e:	or	rdx, r10
0x410f41:	or	rax, r10
0x410f44:	mov	qword ptr [rdi + 0x30], rdx
0x410f48:	mov	qword ptr [rdi + 0x48], rax
0x410f4c:	jmp	0x43f925
0x410f51:	mov	rdx, qword ptr [rdi + 0x30]
0x410f55:	mov	rax, qword ptr [rdi + 0x48]
0x410f59:	test	ebx, ebx
0x410f5b:	je	0x411918
0x410f61:	movabs	rcx, 0x10bc00400000a300
0x410f6b:	or	rdx, rcx
0x410f6e:	or	rax, rcx
0x410f71:	mov	qword ptr [rdi + 0x30], rdx
0x410f75:	mov	qword ptr [rdi + 0x48], rax
0x410f79:	jmp	0x43f925
0x410f7e:	and	dh, 0xbf
0x410f81:	or	ah, 0x40
0x410f84:	mov	qword ptr [rdi + 0x30], rdx
0x410f88:	mov	qword ptr [rdi + 0x48], rax
0x410f8c:	jmp	0x43f925
0x410f91:	mov	r13, qword ptr [rdi + 0x40]
0x410f95:	mov	rax, qword ptr [rdi + 0x38]
0x410f99:	or	r13, 0x1000000
0x410fa0:	test	ebx, ebx
0x410fa2:	je	0x410fe4
0x410fa4:	or	rax, 0x1000000
0x410faa:	mov	qword ptr [rdi + 0x40], r13
0x410fae:	mov	qword ptr [rdi + 0x38], rax
0x410fb2:	jmp	0x43f925
0x410fb7:	mov	rdx, qword ptr [rdi + 0x48]
0x410fbb:	mov	r12d, 1
0x410fc1:	mov	rsi, qword ptr [rdi + 0x30]
0x410fc5:	shl	r12, 0x38
0x410fc9:	or	rdx, r12
0x410fcc:	test	ebx, ebx
0x410fce:	je	0x411a9f
0x410fd4:	or	rsi, r12
0x410fd7:	mov	qword ptr [rdi + 0x48], rdx
0x410fdb:	mov	qword ptr [rdi + 0x30], rsi
0x410fdf:	jmp	0x43f925
0x410fe4:	and	rax, 0xfffffffffeffffff
0x410fea:	movq	xmm11, r13
0x410fef:	movq	xmm10, rax
0x410ff4:	punpcklqdq	xmm10, xmm11
0x410ff9:	movups	xmmword ptr [rdi + 0x38], xmm10
0x410ffe:	jmp	0x43f925
0x411003:	test	ebx, ebx
0x411005:	je	0x4110d5
0x41100b:	mov	rbx, qword ptr [rdi + 0x30]
0x41100f:	xor	r11d, r11d
0x411012:	mov	r10, qword ptr [rdi + 0x48]
0x411016:	bt	rbx, 0x35
0x41101b:	jae	0x411036
0x41101d:	mov	r11, r10
0x411020:	not	r11
0x411023:	and	r11d, 0x8000000
0x41102a:	bt	r10, 0x29
0x41102f:	jb	0x411036
0x411031:	bts	r11, 0x29
0x411036:	xor	r13d, r13d
0x411039:	bt	rbx, 0x34
0x41103e:	mov	r8, qword ptr [rbp + 0x40]
0x411042:	jae	0x411051
0x411044:	mov	r13, r8
0x411047:	not	r13
0x41104a:	and	r13d, 0x20000
0x411051:	mov	rcx, qword ptr [rbp + 0x38]
0x411055:	mov	rdx, r13
0x411058:	movabs	r9, 0xf703ffaf8f8000f3
0x411062:	movabs	rax, 0x8fc0050707fff0c
0x41106c:	and	rbx, r9
0x41106f:	or	rdx, r8
0x411072:	and	dword ptr [rbp + 0xec], 0xfffffffd
0x411079:	or	rbx, r11
0x41107c:	and	rcx, 0xffffffffdfffbf07
0x411083:	or	r11, r10
0x411086:	or	rdx, 0x200040f8
0x41108d:	or	rcx, r13
0x411090:	or	r11, rax
0x411093:	mov	qword ptr [rbp + 0x30], rbx
0x411097:	mov	qword ptr [rbp + 0x38], rcx
0x41109b:	mov	qword ptr [rbp + 0x48], r11
0x41109f:	mov	qword ptr [rbp + 0x40], rdx
0x4110a3:	jmp	0x43f925
0x4110a8:	mov	rsi, qword ptr [rdi + 0x48]
0x4110ac:	mov	r12d, 1
0x4110b2:	mov	rdi, qword ptr [rdi + 0x30]
0x4110b6:	shl	r12, 0x20
0x4110ba:	or	rsi, r12
0x4110bd:	test	ebx, ebx
0x4110bf:	je	0x4117d6
0x4110c5:	or	rdi, r12
0x4110c8:	mov	qword ptr [rbp + 0x48], rsi
0x4110cc:	mov	qword ptr [rbp + 0x30], rdi
0x4110d0:	jmp	0x43f925
0x4110d5:	mov	edx, 0x4c45dd
0x4110da:	mov	esi, 0x18e
0x4110df:	mov	edi, 0x4c4ba8
0x4110e4:	call	0x415bba
0x4110e9:	mov	r10, qword ptr [rdi + 0x40]
0x4110ed:	mov	rcx, qword ptr [rdi + 0x38]
0x4110f1:	or	r10, 0x10
0x4110f5:	test	ebx, ebx
0x4110f7:	je	0x41114f
0x4110f9:	or	rcx, 0x10
0x4110fd:	mov	qword ptr [rdi + 0x40], r10
0x411101:	movabs	r11, 0x10bc004000008300
0x41110b:	mov	qword ptr [rdi + 0x38], rcx
0x41110f:	or	qword ptr [rdi + 0x30], r11
0x411113:	or	qword ptr [rdi + 0x48], r11
0x411117:	jmp	0x43f925
0x41111c:	mov	r8, qword ptr [rdi + 0x40]
0x411120:	mov	r13, qword ptr [rdi + 0x38]
0x411124:	or	r8, 8
0x411128:	test	ebx, ebx
0x41112a:	je	0x41116a
0x41112c:	or	r13, 8
0x411130:	mov	qword ptr [rdi + 0x40], r8
0x411134:	movabs	r9, 0x10bc004000008300
0x41113e:	mov	qword ptr [rdi + 0x38], r13
0x411142:	or	qword ptr [rdi + 0x30], r9
0x411146:	or	qword ptr [rdi + 0x48], r9
0x41114a:	jmp	0x43f925
0x41114f:	and	rcx, 0xffffffffffffffef
0x411153:	movq	xmm1, r10
0x411158:	movq	xmm7, rcx
0x41115d:	punpcklqdq	xmm7, xmm1
0x411161:	movups	xmmword ptr [rdi + 0x38], xmm7
0x411165:	jmp	0x43f925
0x41116a:	and	r13, 0xfffffffffffffff7
0x41116e:	movq	xmm6, r8
0x411173:	movq	xmm2, r13
0x411178:	punpcklqdq	xmm2, xmm6
0x41117c:	movups	xmmword ptr [rdi + 0x38], xmm2
0x411180:	jmp	0x43f925
0x411185:	mov	rdx, qword ptr [rdi + 0x40]
0x411189:	mov	r9, qword ptr [rdi + 0x38]
0x41118d:	or	dl, 0x80
0x411190:	test	ebx, ebx
0x411192:	je	0x4111e4
0x411194:	or	r9b, 0x80
0x411198:	mov	qword ptr [rdi + 0x40], rdx
0x41119c:	movabs	rbx, 0x10bc004000000300
0x4111a6:	mov	qword ptr [rdi + 0x38], r9
0x4111aa:	or	qword ptr [rdi + 0x30], rbx
0x4111ae:	or	qword ptr [rdi + 0x48], rbx
0x4111b2:	jmp	0x43f925
0x4111b7:	mov	r12, qword ptr [rdi + 0x30]
0x4111bb:	mov	rsi, qword ptr [rdi + 0x48]
0x4111bf:	test	ebx, ebx
0x4111c1:	je	0x411887
0x4111c7:	movabs	rdi, 0x10bc004000408300
0x4111d1:	or	r12, rdi
0x4111d4:	or	rsi, rdi
0x4111d7:	mov	qword ptr [rbp + 0x30], r12
0x4111db:	mov	qword ptr [rbp + 0x48], rsi
0x4111df:	jmp	0x43f925
0x4111e4:	and	r9b, 0x7f
0x4111e8:	movq	xmm13, rdx
0x4111ed:	movq	xmm12, r9
0x4111f2:	punpcklqdq	xmm12, xmm13
0x4111f7:	movups	xmmword ptr [rdi + 0x38], xmm12
0x4111fc:	jmp	0x43f925
0x411201:	mov	rdi, qword ptr [rdi + 0x30]
0x411205:	mov	r8, qword ptr [rbp + 0x48]
0x411209:	test	ebx, ebx
0x41120b:	je	0x411256
0x41120d:	mov	r9d, 5
0x411213:	shl	r9, 0x3c
0x411217:	or	rdi, r9
0x41121a:	or	r8, r9
0x41121d:	mov	qword ptr [rbp + 0x30], rdi
0x411221:	mov	qword ptr [rbp + 0x48], r8
0x411225:	jmp	0x43f925
0x41122a:	mov	r10, qword ptr [rdi + 0x30]
0x41122e:	mov	r11, qword ptr [rdi + 0x48]
0x411232:	test	ebx, ebx
0x411234:	je	0x411a22
0x41123a:	mov	ebx, 3
0x41123f:	shl	rbx, 0x3c
0x411243:	or	r10, rbx
0x411246:	or	r11, rbx
0x411249:	mov	qword ptr [rdi + 0x30], r10
0x41124d:	mov	qword ptr [rdi + 0x48], r11
0x411251:	jmp	0x43f925
0x411256:	btr	rdi, 0x3e
0x41125b:	bts	r8, 0x3e
0x411260:	mov	qword ptr [rbp + 0x30], rdi
0x411264:	mov	qword ptr [rbp + 0x48], r8
0x411268:	jmp	0x43f925
0x41126d:	mov	r8, qword ptr [rdi + 0x48]
0x411271:	mov	r13, qword ptr [rdi + 0x30]
0x411275:	or	r8, 0x8000000
0x41127c:	test	ebx, ebx
0x41127e:	je	0x4112b7
0x411280:	or	r13, 0x8000000
0x411287:	mov	qword ptr [rdi + 0x48], r8
0x41128b:	mov	qword ptr [rdi + 0x30], r13
0x41128f:	jmp	0x43f925
0x411294:	mov	rdx, qword ptr [rdi + 0x40]
0x411298:	mov	rax, qword ptr [rdi + 0x38]
0x41129c:	or	dh, 2
0x41129f:	test	ebx, ebx
0x4112a1:	je	0x411843
0x4112a7:	or	ah, 2
0x4112aa:	mov	qword ptr [rdi + 0x40], rdx
0x4112ae:	mov	qword ptr [rdi + 0x38], rax
0x4112b2:	jmp	0x43f925
0x4112b7:	and	r13, 0xfffffffff7ffffff
0x4112be:	mov	qword ptr [rdi + 0x48], r8
0x4112c2:	mov	qword ptr [rdi + 0x30], r13
0x4112c6:	jmp	0x43f925
0x4112cb:	xor	esi, esi
0x4112cd:	xor	eax, eax
0x4112cf:	mov	edx, 0x4c4c40
0x4112d4:	mov	edi, ecx
0x4112d6:	call	0x412cf4
0x4112db:	cmp	ebx, 0x10
0x4112de:	jle	0x41132f
0x4112e0:	mov	ecx, 0x10
0x4112e5:	mov	edx, ebx
0x4112e7:	mov	esi, 0x4c4c78
0x4112ec:	mov	edi, r13d
0x4112ef:	xor	eax, eax
0x4112f1:	call	0x43fe20
0x4112f6:	jmp	0x43f925
0x4112fb:	xor	esi, esi
0x4112fd:	xor	eax, eax
0x4112ff:	mov	edx, 0x4c4ca8
0x411304:	mov	edi, ecx
0x411306:	call	0x412cf4
0x41130b:	cmp	ebx, 0x10
0x41130e:	jle	0x4119d2
0x411314:	mov	ecx, 0x10
0x411319:	mov	edx, ebx
0x41131b:	mov	esi, 0x4c4ce8
0x411320:	mov	edi, r13d
0x411323:	xor	eax, eax
0x411325:	call	0x43fe20
0x41132a:	jmp	0x43f925
0x41132f:	lea	rdi, [rbp + 0xb20]
0x411336:	mov	esi, ebx
0x411338:	call	0x415b09
0x41133d:	jmp	0x43f925
0x411342:	mov	rdx, qword ptr [rdi + 0x30]
0x411346:	mov	r9, qword ptr [rdi + 0x48]
0x41134a:	test	ebx, ebx
0x41134c:	je	0x411398
0x41134e:	movabs	rbx, 0x10bc004000018300
0x411358:	or	rdx, rbx
0x41135b:	or	r9, rbx
0x41135e:	mov	qword ptr [rdi + 0x30], rdx
0x411362:	mov	qword ptr [rdi + 0x48], r9
0x411366:	jmp	0x43f925
0x41136b:	mov	r12, qword ptr [rdi + 0x30]
0x41136f:	mov	rsi, qword ptr [rdi + 0x48]
0x411373:	test	ebx, ebx
0x411375:	je	0x4118f3
0x41137b:	movabs	rdi, 0x10bc004000008300
0x411385:	or	r12, rdi
0x411388:	or	rsi, rdi
0x41138b:	mov	qword ptr [rbp + 0x30], r12
0x41138f:	mov	qword ptr [rbp + 0x48], rsi
0x411393:	jmp	0x43f925
0x411398:	and	rdx, 0xfffffffffffeffff
0x41139f:	or	r9, 0x10000
0x4113a6:	mov	qword ptr [rdi + 0x30], rdx
0x4113aa:	mov	qword ptr [rdi + 0x48], r9
0x4113ae:	jmp	0x43f925
0x4113b3:	mov	rcx, qword ptr [rdi + 0x40]
0x4113b7:	mov	r9, qword ptr [rdi + 0x38]
0x4113bb:	or	rcx, 0x4000000
0x4113c2:	test	ebx, ebx
0x4113c4:	je	0x411405
0x4113c6:	or	r9, 0x4000000
0x4113cd:	mov	qword ptr [rdi + 0x40], rcx
0x4113d1:	mov	qword ptr [rdi + 0x38], r9
0x4113d5:	jmp	0x43f925
0x4113da:	mov	r10, qword ptr [rdi + 0x40]
0x4113de:	mov	r11, qword ptr [rdi + 0x38]
0x4113e2:	or	r10, 0x2000000
0x4113e9:	test	ebx, ebx
0x4113eb:	je	0x411a7f
0x4113f1:	or	r11, 0x2000000
0x4113f8:	mov	qword ptr [rdi + 0x40], r10
0x4113fc:	mov	qword ptr [rdi + 0x38], r11
0x411400:	jmp	0x43f925
0x411405:	and	r9, 0xfffffffffbffffff
0x41140c:	movq	xmm5, rcx
0x411411:	movq	xmm4, r9
0x411416:	punpcklqdq	xmm4, xmm5
0x41141a:	movups	xmmword ptr [rdi + 0x38], xmm4
0x41141e:	jmp	0x43f925
0x411423:	mov	rdx, qword ptr [rdi + 0x30]
0x411427:	mov	r12, qword ptr [rdi + 0x48]
0x41142b:	test	ebx, ebx
0x41142d:	je	0x411479
0x41142f:	movabs	rsi, 0x10bc004020000100
0x411439:	or	rdx, rsi
0x41143c:	or	r12, rsi
0x41143f:	mov	qword ptr [rdi + 0x30], rdx
0x411443:	mov	qword ptr [rdi + 0x48], r12
0x411447:	jmp	0x43f925
0x41144c:	mov	rdi, qword ptr [rdi + 0x30]
0x411450:	mov	r10, qword ptr [rbp + 0x48]
0x411454:	test	ebx, ebx
0x411456:	je	0x41180e
0x41145c:	movabs	r11, 0x10bc004010000100
0x411466:	or	rdi, r11
0x411469:	or	r10, r11
0x41146c:	mov	qword ptr [rbp + 0x30], rdi
0x411470:	mov	qword ptr [rbp + 0x48], r10
0x411474:	jmp	0x43f925
0x411479:	and	rdx, 0xffffffffdfffffff
0x411480:	or	r12, 0x20000000
0x411487:	mov	qword ptr [rdi + 0x30], rdx
0x41148b:	mov	qword ptr [rdi + 0x48], r12
0x41148f:	jmp	0x43f925
0x411494:	mov	r11, qword ptr [rdi + 0x40]
0x411498:	mov	r8, qword ptr [rdi + 0x38]
0x41149c:	or	r11, 4
0x4114a0:	test	ebx, ebx
0x4114a2:	je	0x4114ec
0x4114a4:	or	r8, 4
0x4114a8:	mov	r13d, 1
0x4114ae:	mov	qword ptr [rdi + 0x40], r11
0x4114b2:	shl	r13, 0x3c
0x4114b6:	mov	qword ptr [rdi + 0x38], r8
0x4114ba:	or	qword ptr [rdi + 0x30], r13
0x4114be:	or	qword ptr [rdi + 0x48], r13
0x4114c2:	jmp	0x43f925
0x4114c7:	mov	r9, qword ptr [rdi + 0x40]
0x4114cb:	mov	rdx, qword ptr [rdi + 0x38]
0x4114cf:	or	r9, 2
0x4114d3:	test	ebx, ebx
0x4114d5:	je	0x4119a2
0x4114db:	or	rdx, 2
0x4114df:	mov	qword ptr [rdi + 0x40], r9
0x4114e3:	mov	qword ptr [rdi + 0x38], rdx
0x4114e7:	jmp	0x43f925
0x4114ec:	and	r8, 0xfffffffffffffffb
0x4114f0:	movq	xmm5, r11
0x4114f5:	movq	xmm4, r8
0x4114fa:	punpcklqdq	xmm4, xmm5
0x4114fe:	movups	xmmword ptr [rdi + 0x38], xmm4
0x411502:	jmp	0x43f925
0x411507:	mov	rdx, qword ptr [rdi + 0x30]
0x41150b:	mov	r9, qword ptr [rdi + 0x48]
0x41150f:	test	ebx, ebx
0x411511:	je	0x41155d
0x411513:	movabs	rbx, 0x10bc004000108300
0x41151d:	or	rdx, rbx
0x411520:	or	r9, rbx
0x411523:	mov	qword ptr [rdi + 0x30], rdx
0x411527:	mov	qword ptr [rdi + 0x48], r9
0x41152b:	jmp	0x43f925
0x411530:	mov	r12, qword ptr [rdi + 0x30]
0x411534:	mov	rsi, qword ptr [rdi + 0x48]
0x411538:	test	ebx, ebx
0x41153a:	je	0x4118bd
0x411540:	movabs	rdi, 0x10bc004000088300
0x41154a:	or	r12, rdi
0x41154d:	or	rsi, rdi
0x411550:	mov	qword ptr [rbp + 0x30], r12
0x411554:	mov	qword ptr [rbp + 0x48], rsi
0x411558:	jmp	0x43f925
0x41155d:	and	rdx, 0xffffffffffefffff
0x411564:	or	r9, 0x100000
0x41156b:	mov	qword ptr [rdi + 0x30], rdx
0x41156f:	mov	qword ptr [rdi + 0x48], r9
0x411573:	jmp	0x43f925
0x411578:	mov	r9, qword ptr [rdi + 0x38]
0x41157c:	mov	r10, qword ptr [rdi + 0x40]
0x411580:	test	ebx, ebx
0x411582:	je	0x4115db
0x411584:	or	r9, 0x20004000
0x41158b:	or	r10, 0x20004000
0x411592:	mov	r11d, 3
0x411598:	shl	r11, 0x32
0x41159c:	mov	qword ptr [rdi + 0x38], r9
0x4115a0:	or	qword ptr [rdi + 0x30], r11
0x4115a4:	or	qword ptr [rdi + 0x48], r11
0x4115a8:	mov	qword ptr [rdi + 0x40], r10
0x4115ac:	jmp	0x43f925
0x4115b1:	mov	r13, qword ptr [rdi + 0x40]
0x4115b5:	mov	rax, qword ptr [rdi + 0x38]
0x4115b9:	or	r13, 0x10000000
0x4115c0:	test	ebx, ebx
0x4115c2:	je	0x411a50
0x4115c8:	or	rax, 0x10000000
0x4115ce:	mov	qword ptr [rdi + 0x40], r13
0x4115d2:	mov	qword ptr [rdi + 0x38], rax
0x4115d6:	jmp	0x43f925
0x4115db:	and	r9, 0xffffffffdfffffff
0x4115e2:	or	r10, 0x20000000
0x4115e9:	movq	xmm0, r9
0x4115ee:	movq	xmm3, r10
0x4115f3:	punpcklqdq	xmm0, xmm3
0x4115f7:	movups	xmmword ptr [rdi + 0x38], xmm0
0x4115fb:	jmp	0x43f925
0x411600:	mov	rcx, qword ptr [rdi + 0x40]
0x411604:	mov	rax, qword ptr [rdi + 0x38]
0x411608:	or	ch, 1
0x41160b:	test	ebx, ebx
0x41160d:	je	0x411647
0x41160f:	or	ah, 1
0x411612:	mov	qword ptr [rdi + 0x40], rcx
0x411616:	mov	qword ptr [rdi + 0x38], rax
0x41161a:	jmp	0x43f925
0x41161f:	cmp	ebx, 5
0x411622:	jle	0x43f925
0x411628:	mov	edx, ebx
0x41162a:	mov	esi, 0x4c4d20
0x41162f:	mov	edi, ecx
0x411631:	xor	eax, eax
0x411633:	call	0x43fe20
0x411638:	mov	dword ptr [rbp + 0x1460], 5
0x411642:	jmp	0x43f925
0x411647:	and	ah, 0xfe
0x41164a:	movq	xmm11, rcx
0x41164f:	movq	xmm10, rax
0x411654:	punpcklqdq	xmm10, xmm11
0x411659:	movups	xmmword ptr [rdi + 0x38], xmm10
0x41165e:	jmp	0x43f925
0x411663:	mov	r11, qword ptr [rdi + 0x30]
0x411667:	mov	r8, qword ptr [rdi + 0x48]
0x41166b:	test	ebx, ebx
0x41166d:	je	0x4116b9
0x41166f:	movabs	r13, 0x20000000020
0x411679:	or	r11, r13
0x41167c:	or	r8, r13
0x41167f:	mov	qword ptr [rdi + 0x30], r11
0x411683:	mov	qword ptr [rdi + 0x48], r8
0x411687:	jmp	0x43f925
0x41168c:	mov	r9, qword ptr [rdi + 0x30]
0x411690:	mov	rdx, qword ptr [rdi + 0x48]
0x411694:	test	ebx, ebx
0x411696:	je	0x4119f6
0x41169c:	movabs	r12, 0x100000000c
0x4116a6:	or	r9, r12
0x4116a9:	or	rdx, r12
0x4116ac:	mov	qword ptr [rdi + 0x30], r9
0x4116b0:	mov	qword ptr [rdi + 0x48], rdx
0x4116b4:	jmp	0x43f925
0x4116b9:	and	r11, 0xffffffffffffffdf
0x4116bd:	or	r8, 0x20
0x4116c1:	mov	qword ptr [rdi + 0x30], r11
0x4116c5:	mov	qword ptr [rdi + 0x48], r8
0x4116c9:	jmp	0x43f925
0x4116ce:	mov	rdx, qword ptr [rdi + 0x30]
0x4116d2:	mov	rax, qword ptr [rdi + 0x48]
0x4116d6:	test	ebx, ebx
0x4116d8:	je	0x411724
0x4116da:	movabs	r11, 0x10bc004000009300
0x4116e4:	or	rdx, r11
0x4116e7:	or	rax, r11
0x4116ea:	mov	qword ptr [rdi + 0x30], rdx
0x4116ee:	mov	qword ptr [rdi + 0x48], rax
0x4116f2:	jmp	0x43f925
0x4116f7:	mov	r8, qword ptr [rdi + 0x30]
0x4116fb:	mov	r13, qword ptr [rdi + 0x48]
0x4116ff:	test	ebx, ebx
0x411701:	je	0x41192b
0x411707:	movabs	r9, 0x10bc004000008b00
0x411711:	or	r8, r9
0x411714:	or	r13, r9
0x411717:	mov	qword ptr [rdi + 0x30], r8
0x41171b:	mov	qword ptr [rdi + 0x48], r13
0x41171f:	jmp	0x43f925
0x411724:	and	dh, 0xef
0x411727:	or	ah, 0x10
0x41172a:	mov	qword ptr [rdi + 0x30], rdx
0x41172e:	mov	qword ptr [rdi + 0x48], rax
0x411732:	jmp	0x43f925
0x411737:	mov	rdi, qword ptr [rdi + 0x30]
0x41173b:	mov	r8, qword ptr [rbp + 0x48]
0x41173f:	test	ebx, ebx
0x411741:	je	0x41178d
0x411743:	mov	r9d, 0x27
0x411749:	shl	r9, 0x32
0x41174d:	or	rdi, r9
0x411750:	or	r8, r9
0x411753:	mov	qword ptr [rbp + 0x30], rdi
0x411757:	mov	qword ptr [rbp + 0x48], r8
0x41175b:	jmp	0x43f925
0x411760:	mov	r10, qword ptr [rdi + 0x30]
0x411764:	mov	r11, qword ptr [rdi + 0x48]
0x411768:	test	ebx, ebx
0x41176a:	je	0x411ab1
0x411770:	mov	r12d, 0x17
0x411776:	shl	r12, 0x32
0x41177a:	or	r10, r12
0x41177d:	or	r11, r12
0x411780:	mov	qword ptr [rdi + 0x30], r10
0x411784:	mov	qword ptr [rdi + 0x48], r11
0x411788:	jmp	0x43f925
0x41178d:	movabs	rbx, 0xf75fffbf8f8000ff
0x411797:	and	qword ptr [rbp + 0x38], 0xffffffffffffff07
0x41179f:	movabs	rcx, 0x8a00040707fff00
0x4117a9:	and	rdi, rbx
0x4117ac:	or	r8, rcx
0x4117af:	or	qword ptr [rbp + 0x40], 0xf8
0x4117b7:	mov	qword ptr [rbp + 0x30], rdi
0x4117bb:	mov	qword ptr [rbp + 0x48], r8
0x4117bf:	jmp	0x43f925
0x4117c4:	btr	rdi, 0x21
0x4117c9:	mov	qword ptr [rbp + 0x48], rsi
0x4117cd:	mov	qword ptr [rbp + 0x30], rdi
0x4117d1:	jmp	0x43f925
0x4117d6:	btr	rdi, 0x20
0x4117db:	mov	qword ptr [rbp + 0x48], rsi
0x4117df:	mov	qword ptr [rbp + 0x30], rdi
0x4117e3:	jmp	0x43f925
0x4117e8:	movabs	rbx, 0xf7ffffffbfffffff
0x4117f2:	mov	ecx, 0x20000001
0x4117f7:	shl	rcx, 0x1e
0x4117fb:	and	r13, rbx
0x4117fe:	or	r9, rcx
0x411801:	mov	qword ptr [rdi + 0x30], r13
0x411805:	mov	qword ptr [rdi + 0x48], r9
0x411809:	jmp	0x43f925
0x41180e:	and	rdi, 0xffffffffefffffff
0x411815:	or	r10, 0x10000000
0x41181c:	mov	qword ptr [rbp + 0x30], rdi
0x411820:	mov	qword ptr [rbp + 0x48], r10
0x411824:	jmp	0x43f925
0x411829:	and	ch, 0xfb
0x41182c:	movq	xmm5, rdx
0x411831:	movq	xmm4, rcx
0x411836:	punpcklqdq	xmm4, xmm5
0x41183a:	movups	xmmword ptr [rdi + 0x38], xmm4
0x41183e:	jmp	0x43f925
0x411843:	and	ah, 0xfd
0x411846:	movq	xmm9, rdx
0x41184b:	movq	xmm8, rax
0x411850:	punpcklqdq	xmm8, xmm9
0x411855:	movups	xmmword ptr [rdi + 0x38], xmm8
0x41185a:	jmp	0x43f925
0x41185f:	and	rsi, 0xfffffffffdffffff
0x411866:	mov	qword ptr [rbp + 0x48], rdi
0x41186a:	mov	qword ptr [rbp + 0x30], rsi
0x41186e:	jmp	0x43f925
0x411873:	and	r13, 0xffffffffff7fffff
0x41187a:	mov	qword ptr [rdi + 0x48], r8
0x41187e:	mov	qword ptr [rdi + 0x30], r13
0x411882:	jmp	0x43f925
0x411887:	and	r12, 0xffffffffffbfffff
0x41188e:	or	rsi, 0x400000
0x411895:	mov	qword ptr [rdi + 0x30], r12
0x411899:	mov	qword ptr [rdi + 0x48], rsi
0x41189d:	jmp	0x43f925
0x4118a2:	and	r11, 0xffffffffffdfffff
0x4118a9:	or	r8, 0x200000
0x4118b0:	mov	qword ptr [rdi + 0x30], r11
0x4118b4:	mov	qword ptr [rdi + 0x48], r8
0x4118b8:	jmp	0x43f925
0x4118bd:	and	r12, 0xfffffffffff7ffff
0x4118c4:	or	rsi, 0x80000
0x4118cb:	mov	qword ptr [rdi + 0x30], r12
0x4118cf:	mov	qword ptr [rdi + 0x48], rsi
0x4118d3:	jmp	0x43f925
0x4118d8:	and	r11, 0xfffffffffffdffff
0x4118df:	or	r8, 0x20000
0x4118e6:	mov	qword ptr [rdi + 0x30], r11
0x4118ea:	mov	qword ptr [rdi + 0x48], r8
0x4118ee:	jmp	0x43f925
0x4118f3:	and	r12, 0xffffffffff8003ff
0x4118fa:	or	rsi, 0x7ffc00
0x411901:	and	qword ptr [rdi + 0x38], 0xffffffffffffff87
0x411906:	or	qword ptr [rdi + 0x40], 0x78
0x41190b:	mov	qword ptr [rdi + 0x30], r12
0x41190f:	mov	qword ptr [rdi + 0x48], rsi
0x411913:	jmp	0x43f925
0x411918:	and	dh, 0xdf
0x41191b:	or	ah, 0x20
0x41191e:	mov	qword ptr [rdi + 0x30], rdx
0x411922:	mov	qword ptr [rdi + 0x48], rax
0x411926:	jmp	0x43f925
0x41192b:	and	r8, 0xfffffffffffbf7ff
0x411932:	or	r13, 0x40800
0x411939:	and	qword ptr [rdi + 0x38], 0xffffffffffffffdf
0x41193e:	or	qword ptr [rdi + 0x40], 0x20
0x411943:	mov	qword ptr [rdi + 0x30], r8
0x411947:	mov	qword ptr [rdi + 0x48], r13
0x41194b:	jmp	0x43f925
0x411950:	and	rsi, 0xffffffffffffffdf
0x411954:	movq	xmm3, r12
0x411959:	movq	xmm0, rsi
0x41195e:	punpcklqdq	xmm0, xmm3
0x411962:	movups	xmmword ptr [rdi + 0x38], xmm0
0x411966:	jmp	0x43f925
0x41196b:	movabs	rdi, 0xf7ffffff8f8000ff
0x411975:	and	qword ptr [rbp + 0x38], 0xffffffffffffff07
0x41197d:	movabs	r10, 0x8000000707fff00
0x411987:	and	r12, rdi
0x41198a:	or	rsi, r10
0x41198d:	or	qword ptr [rbp + 0x40], 0xf8
0x411995:	mov	qword ptr [rbp + 0x30], r12
0x411999:	mov	qword ptr [rbp + 0x48], rsi
0x41199d:	jmp	0x43f925
0x4119a2:	and	rdx, 0xfffffffffffffffd
0x4119a6:	movq	xmm9, r9
0x4119ab:	movq	xmm8, rdx
0x4119b0:	punpcklqdq	xmm8, xmm9
0x4119b5:	movups	xmmword ptr [rdi + 0x38], xmm8
0x4119ba:	jmp	0x43f925
0x4119bf:	lea	rdi, [rbp + 0xb40]
0x4119c6:	mov	esi, ebx
0x4119c8:	call	0x415b09
0x4119cd:	jmp	0x43f925
0x4119d2:	lea	rdi, [rbp + 0xb10]
0x4119d9:	mov	esi, ebx
0x4119db:	call	0x415b09
0x4119e0:	jmp	0x43f925
0x4119e5:	and	r10, 0xffffffffffffffbf
0x4119e9:	mov	qword ptr [rdi + 0x48], rcx
0x4119ed:	mov	qword ptr [rdi + 0x30], r10
0x4119f1:	jmp	0x43f925
0x4119f6:	and	r9, 0xfffffffffffffff7
0x4119fa:	or	rdx, 8
0x4119fe:	mov	qword ptr [rdi + 0x30], r9
0x411a02:	mov	qword ptr [rdi + 0x48], rdx
0x411a06:	jmp	0x43f925
0x411a0b:	btr	rdx, 0x3f
0x411a10:	bts	rsi, 0x3f
0x411a15:	mov	qword ptr [rdi + 0x30], rdx
0x411a19:	mov	qword ptr [rdi + 0x48], rsi
0x411a1d:	jmp	0x43f925
0x411a22:	btr	r10, 0x3d
0x411a27:	bts	r11, 0x3d
0x411a2c:	mov	qword ptr [rdi + 0x30], r10
0x411a30:	mov	qword ptr [rdi + 0x48], r11
0x411a34:	jmp	0x43f925
0x411a39:	btr	rdi, 0x3b
0x411a3e:	bts	r8, 0x3b
0x411a43:	mov	qword ptr [rbp + 0x30], rdi
0x411a47:	mov	qword ptr [rbp + 0x48], r8
0x411a4b:	jmp	0x43f925
0x411a50:	and	rax, 0xffffffffefffffff
0x411a56:	movq	xmm7, r13
0x411a5b:	movq	xmm1, rax
0x411a60:	punpcklqdq	xmm1, xmm7
0x411a64:	movups	xmmword ptr [rdi + 0x38], xmm1
0x411a68:	jmp	0x43f925
0x411a6d:	btr	r8, 0x39
0x411a72:	mov	qword ptr [rbp + 0x48], rdi
0x411a76:	mov	qword ptr [rbp + 0x30], r8
0x411a7a:	jmp	0x43f925
0x411a7f:	and	r11, 0xfffffffffdffffff
0x411a86:	movq	xmm9, r10
0x411a8b:	movq	xmm8, r11
0x411a90:	punpcklqdq	xmm8, xmm9
0x411a95:	movups	xmmword ptr [rdi + 0x38], xmm8
0x411a9a:	jmp	0x43f925
0x411a9f:	btr	rsi, 0x38
0x411aa4:	mov	qword ptr [rdi + 0x48], rdx
0x411aa8:	mov	qword ptr [rdi + 0x30], rsi
0x411aac:	jmp	0x43f925
0x411ab1:	movabs	r13, 0xf7bfffffbfffffff
0x411abb:	mov	eax, 0x21000001
0x411ac0:	shl	rax, 0x1e
0x411ac4:	and	r10, r13
0x411ac7:	or	r11, rax
0x411aca:	mov	qword ptr [rdi + 0x30], r10
0x411ace:	mov	qword ptr [rdi + 0x48], r11
0x411ad2:	jmp	0x43f925
0x411ad7:	movzx	eax, byte ptr [r8 + 0x48bae0]
0x411adf:	test	al, 8
0x411ae1:	jne	0x411bd6
0x411ae7:	test	al, 0x10
0x411ae9:	jne	0x411bd6
0x411aef:	mov	rdi, qword ptr [r9 + 0x20]
0x411af3:	movzx	r15d, r10w
0x411af7:	test	rdi, rdi
0x411afa:	cmovne	r12, rdi
0x411afe:	jmp	0x43f9b2
0x411b03:	mov	r9d, dword ptr [rsp + 4]
0x411b08:	mov	r8d, 2
0x411b0e:	xor	ecx, ecx
0x411b10:	mov	rdx, qword ptr [rdx + 0x48baa0]
0x411b17:	add	rsp, 0x58
0x411b1b:	mov	edi, ebp
0x411b1d:	pop	rbx
0x411b1e:	pop	rbp
0x411b1f:	pop	r12
0x411b21:	pop	r13
0x411b23:	pop	r14
0x411b25:	pop	r15
0x411b27:	jmp	0x439000
0x411b2c:	imul	r15, r10, 0x60
0x411b30:	movzx	eax, byte ptr [r15 + 0x48bae1]
0x411b38:	mov	edx, eax
0x411b3a:	and	edx, 1
0x411b3d:	or	dl, byte ptr [r12]
0x411b41:	je	0x43fa0e
0x411b47:	mov	r8d, 1
0x411b4d:	test	al, 6
0x411b4f:	jne	0x411bea
0x411b55:	cmp	ecx, 6
0x411b58:	jne	0x43fa28
0x411b5e:	imul	r8, r10, 0x60
0x411b62:	mov	r11d, dword ptr [rsp + 4]
0x411b67:	xor	ebx, ebx
0x411b69:	mov	qword ptr [rsp + 0x28], r14
0x411b6e:	mov	rax, r12
0x411b71:	mov	r14d, ebp
0x411b74:	mov	r12, rsi
0x411b77:	mov	ebp, ebx
0x411b79:	and	r11d, 0x80000
0x411b80:	movzx	r9d, word ptr [r8 + 0x48bae4]
0x411b88:	mov	dword ptr [rsp + 0x20], r11d
0x411b8d:	imul	rdi, r9, 0x30
0x411b91:	mov	r15, qword ptr [rdi + 0x48ad70]
0x411b98:	mov	ebx, ebp
0x411b9a:	shl	rbx, 4
0x411b9e:	add	rbx, r15
0x411ba1:	mov	rsi, qword ptr [rbx]
0x411ba4:	test	rsi, rsi
0x411ba7:	je	0x411c60
0x411bad:	mov	rdi, rax
0x411bb0:	mov	qword ptr [rsp + 0x38], r10
0x411bb5:	mov	qword ptr [rsp + 0x30], rax
0x411bba:	call	0x403be0
0x411bbf:	mov	r10, qword ptr [rsp + 0x38]
0x411bc4:	test	eax, eax
0x411bc6:	mov	rax, qword ptr [rsp + 0x30]
0x411bcb:	je	0x411c7d
0x411bd1:	add	ebp, 1
0x411bd4:	jmp	0x411b98
0x411bd6:	mov	edx, 0x4c45f0
0x411bdb:	mov	esi, 0x6b3
0x411be0:	mov	edi, 0x45b343
0x411be5:	call	0x415bba
0x411bea:	mov	dword ptr [rsp + 0x48], 0
0x411bf2:	xor	r8d, r8d
0x411bf5:	cmp	byte ptr [r12], 0
0x411bfa:	je	0x411b55
0x411c00:	shr	al, 4
0x411c03:	mov	qword ptr [rsp + 0x28], rsi
0x411c08:	mov	rdi, r12
0x411c0b:	lea	rsi, [rsp + 0x48]
0x411c10:	mov	edx, eax
0x411c12:	mov	qword ptr [rsp + 0x30], r10
0x411c17:	and	edx, 1
0x411c1a:	mov	dword ptr [rsp + 0x20], ecx
0x411c1e:	call	0x436b20
0x411c23:	cmp	dword ptr [rsp + 0x48], 0
0x411c28:	mov	ecx, dword ptr [rsp + 0x20]
0x411c2c:	mov	rsi, qword ptr [rsp + 0x28]
0x411c31:	mov	r10, qword ptr [rsp + 0x30]
0x411c36:	mov	r8, rax
0x411c39:	je	0x411b55
0x411c3f:	mov	r9d, dword ptr [rsp + 4]
0x411c44:	mov	r8d, 8
0x411c4a:	mov	rcx, r12
0x411c4d:	mov	edi, ebp
0x411c4f:	mov	rdx, qword ptr [r15 + 0x48baa0]
0x411c56:	call	0x439000
0x411c5b:	jmp	0x43f9d8
0x411c60:	imul	rdx, r10, 0x60
0x411c64:	mov	r9d, dword ptr [rsp + 4]
0x411c69:	mov	rsi, r12
0x411c6c:	mov	rcx, rax
0x411c6f:	mov	ebp, r14d
0x411c72:	mov	r8d, 0x20
0x411c78:	jmp	0x411b10
0x411c7d:	cmp	dword ptr [rsp + 0x20], 0
0x411c82:	jne	0x411c8e
0x411c84:	test	byte ptr [rbx + 0xc], 2
0x411c88:	jne	0x411bd1
0x411c8e:	mov	ebp, r14d
0x411c91:	mov	r14, qword ptr [rsp + 0x28]
0x411c96:	mov	qword ptr [rsp + 0x28], r10
0x411c9b:	mov	rdi, r15
0x411c9e:	movsxd	r10, dword ptr [rbx + 8]
0x411ca2:	mov	ecx, dword ptr [rsp + 4]
0x411ca6:	lea	rsi, [rsp + 0x48]
0x411cab:	mov	r12, rax
0x411cae:	mov	qword ptr [rsp + 0x48], 0
0x411cb7:	mov	rdx, r10
0x411cba:	mov	qword ptr [rsp + 0x20], r10
0x411cbf:	call	0x436bc0
0x411cc4:	mov	r8, qword ptr [rsp + 0x20]
0x411cc9:	mov	r10, qword ptr [rsp + 0x28]
0x411cce:	test	al, al
0x411cd0:	je	0x411cd7
0x411cd2:	mov	r12, qword ptr [rsp + 0x48]
0x411cd7:	cmp	qword ptr [rsp + 0x48], 0
0x411cdd:	jne	0x43fa28
0x411ce3:	mov	edx, 0x4c45f0
0x411ce8:	mov	esi, 0x6eb
0x411ced:	mov	edi, 0x45b343
0x411cf2:	call	0x415bba
0x411cf7:	endbr64	
0x411cfb:	push	r12
0x411cfd:	mov	r10, rsi
0x411d00:	sub	rsp, 0x180
0x411d07:	mov	qword ptr [rsp + 0xe0], rdx
0x411d0f:	mov	qword ptr [rsp + 0xe8], rcx
0x411d17:	mov	qword ptr [rsp + 0xf0], r8
0x411d1f:	mov	qword ptr [rsp + 0xf8], r9
0x411d27:	test	al, al
0x411d29:	je	0x411d6b
0x411d2b:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x411d33:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x411d3b:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x411d43:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x411d4b:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x411d53:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x411d5b:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x411d63:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x411d6b:	xor	esi, esi
0x411d6d:	lea	rdi, [rsp + 0x20]
0x411d72:	lea	r8, [rsp + 8]
0x411d77:	mov	rcx, r10
0x411d7a:	lea	rdx, [rsp + 0xd0]
0x411d82:	lea	rax, [rsp + 0x190]
0x411d8a:	mov	r9d, 6
0x411d90:	mov	dword ptr [rsp + 8], 0x10
0x411d98:	mov	qword ptr [rsp + 0x18], rdx
0x411d9d:	xor	edx, edx
0x411d9f:	mov	qword ptr [rsp + 0x10], rax
0x411da4:	mov	dword ptr [rsp + 0xc], 0x30
0x411dac:	inc	dword ptr [rip + 0xd143e]
0x411db2:	call	0x43de80
0x411db7:	call	0x43def0
0x411dbc:	lea	rdi, [rsp + 0x20]
0x411dc1:	mov	r12d, eax
0x411dc4:	call	0x430ad0
0x411dc9:	call	0x43f590
0x411dce:	add	rsp, 0x180
0x411dd5:	mov	eax, r12d
0x411dd8:	pop	r12
0x411dda:	ret	
0x411ddb:	test	r10b, r10b
0x411dde:	js	0x411e24
0x411de0:	cmp	r8, r12
0x411de3:	jb	0x411e33
0x411de5:	movzx	r8d, byte ptr [r12]
0x411dea:	mov	ecx, 0x4c4607
0x411def:	mov	edx, 0xb
0x411df4:	xor	eax, eax
0x411df6:	mov	esi, 1
0x411dfb:	lea	rdi, [rsp + 5]
0x411e00:	call	0x403f60
0x411e05:	lea	rdx, [rsp + 9]
0x411e0a:	lea	rsi, [rsp + 5]
0x411e0f:	mov	rdi, rbp
0x411e12:	call	0x43f110
0x411e17:	lea	rdx, [r12 + 1]
0x411e1c:	mov	r8, rdx
0x411e1f:	jmp	0x43fb83
0x411e24:	xor	r11d, r11d
0x411e27:	test	al, 0x80
0x411e29:	je	0x411e43
0x411e2b:	add	r11, 1
0x411e2f:	add	eax, eax
0x411e31:	jmp	0x411e27
0x411e33:	mov	rdx, r12
0x411e36:	mov	rsi, r8
0x411e39:	mov	rdi, rbp
0x411e3c:	call	0x43f110
0x411e41:	jmp	0x411de5
0x411e43:	lea	rdi, [r11 - 2]
0x411e47:	cmp	rdi, 4
0x411e4b:	ja	0x411de0
0x411e4d:	cmp	rbx, r11
0x411e50:	jb	0x411de0
0x411e52:	mov	ecx, 7
0x411e57:	mov	r9d, 1
0x411e5d:	sub	ecx, r11d
0x411e60:	shl	r9d, cl
0x411e63:	sub	r9d, 1
0x411e67:	and	r9d, r10d
0x411e6a:	mov	r10d, 1
0x411e70:	movzx	esi, byte ptr [r12 + r10]
0x411e75:	mov	eax, esi
0x411e77:	and	eax, 0xffffffc0
0x411e7a:	cmp	al, 0x80
0x411e7c:	jne	0x411de0
0x411e82:	shl	r9d, 6
0x411e86:	and	esi, 0x3f
0x411e89:	add	r10, 1
0x411e8d:	or	r9d, esi
0x411e90:	cmp	r11, r10
0x411e93:	ja	0x411e70
0x411e95:	cmp	r9d, 0x7f
0x411e99:	jbe	0x411de0
0x411e9f:	cmp	r9d, 0x7ff
0x411ea6:	ja	0x411eb2
0x411ea8:	cmp	r11, 2
0x411eac:	ja	0x411de0
0x411eb2:	cmp	r9d, 0xffff
0x411eb9:	ja	0x411ec5
0x411ebb:	cmp	r11, 3
0x411ebf:	ja	0x411de0
0x411ec5:	cmp	r9d, 0x1fffff
0x411ecc:	ja	0x411ed8
0x411ece:	cmp	r11, 4
0x411ed2:	ja	0x411de0
0x411ed8:	cmp	r9d, 0x3ffffff
0x411edf:	ja	0x411eeb
0x411ee1:	cmp	r11, 6
0x411ee5:	je	0x411de0
0x411eeb:	sub	r9d, 0xd800
0x411ef2:	cmp	r9d, 0x7ff
0x411ef9:	jbe	0x411de0
0x411eff:	sub	r11, 1
0x411f03:	sub	rbx, r11
0x411f06:	lea	rdx, [r12 + r11 + 1]
0x411f0b:	jmp	0x43fb83
0x411f10:	endbr64	
0x411f14:	push	rbx
0x411f15:	mov	r9d, esi
0x411f18:	mov	rbx, rdi
0x411f1b:	mov	esi, dword ptr [rdi + 0x120]
0x411f21:	mov	edi, dword ptr [rdi + 0x118]
0x411f27:	mov	r8d, ecx
0x411f2a:	mov	rcx, rdx
0x411f2d:	mov	edx, r9d
0x411f30:	call	0x411f4d
0x411f35:	or	r8d, 0xffffffff
0x411f39:	test	eax, eax
0x411f3b:	jle	0x411f48
0x411f3d:	mov	edx, dword ptr [rbx + 0x11c]
0x411f43:	lea	r8d, [rax + rdx - 1]
0x411f48:	mov	eax, r8d
0x411f4b:	pop	rbx
0x411f4c:	ret	
0x411f4d:	endbr64	
0x411f51:	test	edx, edx
0x411f53:	jle	0x411f85
0x411f55:	mov	eax, edi
0x411f57:	test	edi, edi
0x411f59:	je	0x411f74
0x411f5b:	dec	eax
0x411f5d:	je	0x411f88
0x411f5f:	push	rax
0x411f60:	mov	edx, 0x4c460e
0x411f65:	mov	esi, 0x17e
0x411f6a:	mov	edi, 0x4c438f
0x411f6f:	call	0x415bba
0x411f74:	mov	r9d, esi
0x411f77:	mov	rdi, rcx
0x411f7a:	mov	esi, r8d
0x411f7d:	mov	ecx, r9d
0x411f80:	jmp	0x412069
0x411f85:	or	edx, 0xffffffff
0x411f88:	mov	eax, edx
0x411f8a:	ret	
0x411f8b:	xor	eax, eax
0x411f8d:	cmp	qword ptr [rdx], 0
0x411f91:	setne	al
0x411f94:	ret	
0x411f95:	xor	eax, eax
0x411f97:	cmp	qword ptr [rdx], rsi
0x411f9a:	sete	al
0x411f9d:	ret	
0x411f9e:	imul	r11, rax, 0x60
0x411fa2:	lea	rcx, [r11 + 0x48baa0]
0x411fa9:	mov	rax, qword ptr [r11 + 0x48baf0]
0x411fb0:	test	byte ptr [rcx + 0x41], 4
0x411fb4:	je	0x411fe5
0x411fb6:	and	rax, qword ptr [rdx]
0x411fb9:	setne	sil
0x411fbd:	movzx	eax, sil
0x411fc1:	ret	
0x411fc2:	imul	r8, rax, 0x60
0x411fc6:	lea	r9, [r8 + 0x48baa0]
0x411fcd:	mov	r10, qword ptr [r8 + 0x48baf0]
0x411fd4:	test	byte ptr [r9 + 0x41], 4
0x411fd9:	je	0x412019
0x411fdb:	and	r10, qword ptr [rdx]
0x411fde:	sete	al
0x411fe1:	movzx	eax, al
0x411fe4:	ret	
0x411fe5:	movsxd	rdx, dword ptr [rdx]
0x411fe8:	test	rdx, rax
0x411feb:	setne	dil
0x411fef:	movzx	eax, dil
0x411ff3:	ret	
0x411ff4:	imul	r11, rax, 0x60
0x411ff8:	test	byte ptr [r11 + 0x48bae1], 4
0x412000:	je	0x412010
0x412002:	xor	eax, eax
0x412004:	cmp	qword ptr [rdx], -1
0x412008:	setne	al
0x41200b:	ret	
0x41200c:	or	eax, 0xffffffff
0x41200f:	ret	
0x412010:	xor	eax, eax
0x412012:	cmp	dword ptr [rdx], -1
0x412015:	setne	al
0x412018:	ret	
0x412019:	movsxd	r11, dword ptr [rdx]
0x41201c:	test	r11, r10
0x41201f:	sete	cl
0x412022:	movzx	eax, cl
0x412025:	ret	
0x412026:	and	edx, 0x7fffffff
0x41202c:	imul	rdx, rdx, 0x18
0x412030:	add	rdx, qword ptr [rdi + 0x68]
0x412034:	mov	edx, dword ptr [rdx]
0x412036:	cmp	edx, 1
0x412039:	ja	0x430e7f
0x41203f:	xor	esi, esi
0x412041:	jmp	0x430ea6
0x412046:	xor	eax, eax
0x412048:	jmp	0x430fa6
0x41204d:	test	rbx, rbx
0x412050:	je	0x412061
0x412052:	mov	qword ptr [rbx], 0
0x412059:	mov	r12d, esi
0x41205c:	jmp	0x430fae
0x412061:	mov	r12d, esi
0x412064:	jmp	0x430fae
0x412069:	push	r12
0x41206b:	push	rbx
0x41206c:	mov	ebx, edx
0x41206e:	push	r9
0x412070:	test	rdi, rdi
0x412073:	je	0x41209e
0x412075:	cmp	byte ptr [rdi], 0
0x412078:	je	0x41209e
0x41207a:	test	esi, esi
0x41207c:	je	0x41209e
0x41207e:	test	edx, edx
0x412080:	je	0x41209e
0x412082:	mov	r12d, ecx
0x412085:	call	0x4310b0
0x41208a:	pop	r8
0x41208c:	mov	ecx, r12d
0x41208f:	mov	esi, edx
0x412091:	mov	rdi, rax
0x412094:	mov	edx, ebx
0x412096:	pop	rbx
0x412097:	pop	r12
0x412099:	jmp	0x412342
0x41209e:	mov	eax, ebx
0x4120a0:	pop	rdx
0x4120a1:	pop	rbx
0x4120a2:	pop	r12
0x4120a4:	ret	
0x4120a5:	mov	edx, 0x4c4639
0x4120aa:	mov	esi, 0x2b4
0x4120af:	mov	edi, 0x4c4647
0x4120b4:	call	0x415bba
0x4120b9:	mov	rbp, rax
0x4120bc:	jmp	0x4312b1
0x4120c1:	pxor	xmm3, xmm3
0x4120c5:	movups	xmmword ptr [rbp + 0x30], xmm3
0x4120c9:	jmp	0x4311ba
0x4120ce:	mov	edx, 0x4c4639
0x4120d3:	mov	esi, 0x2c3
0x4120d8:	mov	edi, 0x4c4647
0x4120dd:	call	0x415bba
0x4120e2:	mov	rsi, qword ptr [rbx + 0x38]
0x4120e6:	mov	rdi, qword ptr [rbx + 0x40]
0x4120ea:	movq	xmm2, r9
0x4120ef:	lea	rbp, [rsi + 1]
0x4120f3:	movq	xmm0, rbp
0x4120f8:	mov	qword ptr [rbx + 0x38], rbp
0x4120fc:	punpcklqdq	xmm0, xmm2
0x412100:	cmp	rbp, rdi
0x412103:	ja	0x431470
0x412109:	jmp	0x431430
0x41210e:	cmp	rbp, qword ptr [rbx + 0x20]
0x412112:	jne	0x4122e7
0x412118:	mov	rdi, rbx
0x41211b:	call	0x43fc60
0x412120:	test	al, al
0x412122:	je	0x41229f
0x412128:	mov	r14, qword ptr [rbx + 0x18]
0x41212c:	mov	r13, qword ptr [rbx + 0x30]
0x412130:	mov	esi, 0xa
0x412135:	mov	rbp, qword ptr [rbx + 0x28]
0x412139:	add	r13, r14
0x41213c:	mov	rdx, rbp
0x41213f:	mov	rdi, r13
0x412142:	sub	rdx, qword ptr [rbx + 0x30]
0x412146:	call	0x403b40
0x41214b:	mov	r12, rax
0x41214e:	test	rax, rax
0x412151:	jne	0x4121ec
0x412157:	test	rbp, rbp
0x41215a:	jne	0x41210e
0x41215c:	jmp	0x412118
0x41215e:	mov	qword ptr [rbx + 0x50], 0
0x412166:	lea	r13d, [r15 + 1]
0x41216a:	xor	edx, edx
0x41216c:	xor	edi, edi
0x41216e:	mov	esi, r13d
0x412171:	mov	qword ptr [rsp + 0x30], rcx
0x412176:	mov	qword ptr [rsp + 0x10], r11
0x41217b:	mov	dword ptr [rsp + 8], r13d
0x412180:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x412185:	call	0x436e30
0x41218a:	xor	edi, edi
0x41218c:	mov	r10d, eax
0x41218f:	imul	rsi, r10, 0x18
0x412193:	mov	r13, r10
0x412196:	and	r13d, 0x7fffffff
0x41219d:	add	rsi, 8
0x4121a1:	call	0x42db80
0x4121a6:	imul	rsi, rbp, 0x18
0x4121aa:	mov	r9d, dword ptr [rsp + 8]
0x4121af:	xor	edx, edx
0x4121b1:	mov	r11, qword ptr [rsp + 0x10]
0x4121b6:	movdqa	xmm3, xmmword ptr [rsp + 0x20]
0x4121bc:	mov	qword ptr [rbx + 0x50], rax
0x4121c0:	mov	dword ptr [rax], r13d
0x4121c3:	mov	rcx, qword ptr [rsp + 0x30]
0x4121c8:	cmp	rdx, rsi
0x4121cb:	je	0x412296
0x4121d1:	movdqu	xmm4, xmmword ptr [rcx + rdx + 8]
0x4121d7:	movups	xmmword ptr [rax + rdx + 8], xmm4
0x4121dc:	mov	rdi, qword ptr [rcx + rdx + 0x18]
0x4121e1:	mov	qword ptr [rax + rdx + 0x18], rdi
0x4121e6:	add	rdx, 0x18
0x4121ea:	jmp	0x4121c8
0x4121ec:	mov	byte ptr [rbx + 0x48], 0
0x4121f0:	mov	rdi, qword ptr [rbx + 0x10]
0x4121f4:	lea	r14, [rax + 1]
0x4121f8:	call	0x403920
0x4121fd:	test	eax, eax
0x4121ff:	je	0x4122e2
0x412205:	xor	eax, eax
0x412207:	jmp	0x43148e
0x41220c:	mov	r14, qword ptr [rbx + 0x28]
0x412210:	jmp	0x43147d
0x412215:	mov	qword ptr [rbx + 0x50], 0
0x41221d:	lea	esi, [r15 + 1]
0x412221:	xor	edx, edx
0x412223:	xor	edi, edi
0x412225:	mov	qword ptr [rsp + 0x20], r9
0x41222a:	mov	qword ptr [rsp + 0x10], r11
0x41222f:	mov	qword ptr [rsp + 0x30], rcx
0x412234:	call	0x436e30
0x412239:	xor	edi, edi
0x41223b:	mov	esi, eax
0x41223d:	mov	dword ptr [rsp + 8], esi
0x412241:	imul	rsi, rsi, 0x18
0x412245:	add	rsi, 8
0x412249:	call	0x42db80
0x41224e:	mov	edi, dword ptr [rsp + 8]
0x412252:	mov	r11, qword ptr [rsp + 0x10]
0x412257:	imul	r10, r13, 0x18
0x41225b:	mov	qword ptr [rbx + 0x50], rax
0x41225f:	mov	r9, qword ptr [rsp + 0x20]
0x412264:	xor	r13d, r13d
0x412267:	and	edi, 0x7fffffff
0x41226d:	mov	r8, qword ptr [rsp + 0x30]
0x412272:	mov	dword ptr [rax], edi
0x412274:	cmp	r13, r10
0x412277:	je	0x4122f6
0x412279:	movdqu	xmm5, xmmword ptr [r8 + r13 + 8]
0x412280:	movups	xmmword ptr [rax + r13 + 8], xmm5
0x412286:	mov	rcx, qword ptr [r8 + r13 + 0x18]
0x41228b:	mov	qword ptr [rax + r13 + 0x18], rcx
0x412290:	add	r13, 0x18
0x412294:	jmp	0x412274
0x412296:	mov	dword ptr [rax + 4], r15d
0x41229a:	jmp	0x431534
0x41229f:	mov	rbp, qword ptr [rbx + 0x28]
0x4122a3:	mov	r14, qword ptr [rbx + 0x18]
0x4122a7:	mov	byte ptr [rbx + 0x48], 1
0x4122ab:	mov	rdi, qword ptr [rbx + 0x10]
0x4122af:	add	rbp, r14
0x4122b2:	call	0x403920
0x4122b7:	test	eax, eax
0x4122b9:	jne	0x412205
0x4122bf:	xor	r14d, r14d
0x4122c2:	mov	r12, rbp
0x4122c5:	test	rbp, rbp
0x4122c8:	jne	0x4313f6
0x4122ce:	mov	edx, 0x4c465d
0x4122d3:	mov	esi, 0x243
0x4122d8:	mov	edi, 0x4c4647
0x4122dd:	call	0x415bba
0x4122e2:	jmp	0x4313f6
0x4122e7:	lea	rcx, [rbp - 1]
0x4122eb:	cmp	qword ptr [rbx + 0x30], rcx
0x4122ef:	jb	0x4122a7
0x4122f1:	jmp	0x412118
0x4122f6:	mov	dword ptr [rax + 4], r15d
0x4122fa:	mov	rcx, qword ptr [rbx + 0x50]
0x4122fe:	jmp	0x431590
0x412303:	xor	eax, eax
0x412305:	jmp	0x43fcf0
0x41230a:	mov	rdi, qword ptr [rbx + 0x48]
0x41230e:	mov	rsi, r14
0x412311:	call	r13
0x412314:	mov	r13, rax
0x412317:	jmp	0x431763
0x41231c:	call	qword ptr [rip + 0xd01c6]
0x412322:	mov	qword ptr [rbx + 8], 0
0x41232a:	mov	qword ptr [8], rbp
0x412332:	ud2	
0x412334:	mov	rdi, qword ptr [rbx + 0x48]
0x412338:	mov	rsi, rbp
0x41233b:	call	rdx
0x41233d:	jmp	0x4317bd
0x412342:	push	rbx
0x412343:	mov	ebx, edx
0x412345:	mov	eax, 0
0x41234a:	movq	xmm0, rdi
0x41234f:	punpcklqdq	xmm0, xmm0
0x412353:	sub	rsp, 0x20
0x412357:	sub	ebx, esi
0x412359:	cmovs	ebx, eax
0x41235c:	mov	dword ptr [rsp + 0x18], ecx
0x412360:	mov	dword ptr [rsp + 0x1c], 0
0x412368:	sub	edx, ebx
0x41236a:	movaps	xmmword ptr [rsp], xmm0
0x41236e:	movsxd	rdx, edx
0x412371:	mov	qword ptr [rsp + 0x10], rdx
0x412376:	test	ecx, ecx
0x412378:	jg	0x41238e
0x41237a:	mov	edx, 0x4c44e2
0x41237f:	mov	esi, 0x8f2
0x412384:	mov	edi, 0x4c4500
0x412389:	call	0x415bba
0x41238e:	cmp	dword ptr [rsp + 0x10], 0
0x412393:	je	0x41239f
0x412395:	mov	rdi, rsp
0x412398:	call	0x4123ac
0x41239d:	jmp	0x41238e
0x41239f:	mov	eax, dword ptr [rsp + 0x1c]
0x4123a3:	add	rsp, 0x20
0x4123a7:	add	eax, ebx
0x4123a9:	pop	rbx
0x4123aa:	ret	
0x4123ab:	nop	
0x4123ac:	mov	rax, qword ptr [rdi + 8]
0x4123b0:	mov	r9d, dword ptr [rdi + 0x1c]
0x4123b4:	mov	rsi, rdi
0x4123b7:	mov	rdx, qword ptr [rdi + 0x10]
0x4123bb:	mov	r11b, byte ptr [rax]
0x4123be:	lea	r10, [rax + 1]
0x4123c2:	cmp	r11b, 9
0x4123c6:	jne	0x4123e8
0x4123c8:	dec	rdx
0x4123cb:	mov	qword ptr [rdi + 8], r10
0x4123cf:	mov	eax, r9d
0x4123d2:	mov	qword ptr [rdi + 0x10], rdx
0x4123d6:	mov	edi, dword ptr [rdi + 0x18]
0x4123d9:	cdq	
0x4123da:	idiv	edi
0x4123dc:	mov	eax, edi
0x4123de:	sub	eax, edx
0x4123e0:	add	r9d, eax
0x4123e3:	mov	dword ptr [rsi + 0x1c], r9d
0x4123e7:	ret	
0x4123e8:	push	rbp
0x4123e9:	push	rbx
0x4123ea:	test	rdx, rdx
0x4123ed:	je	0x4124f5
0x4123f3:	movzx	ebx, r11b
0x4123f7:	test	r11b, r11b
0x4123fa:	js	0x412411
0x4123fc:	dec	rdx
0x4123ff:	mov	qword ptr [rdi + 8], r10
0x412403:	mov	eax, 1
0x412408:	mov	qword ptr [rdi + 0x10], rdx
0x41240c:	jmp	0x412547
0x412411:	mov	edi, 2
0x412416:	movzx	r8d, byte ptr [rdi + 0x4c57f5]
0x41241e:	movzx	ebp, byte ptr [rdi + 0x4c57ef]
0x412425:	mov	ecx, r8d
0x412428:	not	r8d
0x41242b:	and	r8d, ebx
0x41242e:	cmp	r8d, ebp
0x412431:	jne	0x41244b
0x412433:	cmp	rdx, rdi
0x412436:	jb	0x4124f5
0x41243c:	and	ecx, r11d
0x41243f:	lea	r8, [rax + rdi]
0x412443:	mov	rax, r10
0x412446:	movzx	ecx, cl
0x412449:	jmp	0x412468
0x41244b:	inc	rdi
0x41244e:	cmp	rdi, 7
0x412452:	jne	0x412416
0x412454:	jmp	0x4124f5
0x412459:	shl	ecx, 6
0x41245c:	and	r11d, 0x3f
0x412460:	add	ecx, r11d
0x412463:	cmp	r8, rax
0x412466:	je	0x41247b
0x412468:	mov	r11b, byte ptr [rax]
0x41246b:	inc	rax
0x41246e:	mov	ebx, r11d
0x412471:	and	ebx, 0xffffffc0
0x412474:	cmp	bl, 0x80
0x412477:	je	0x412459
0x412479:	jmp	0x4124f5
0x41247b:	cmp	ecx, 0x7f
0x41247e:	jbe	0x4124f5
0x412480:	cmp	ecx, 0x7ff
0x412486:	ja	0x41248e
0x412488:	cmp	rdi, 2
0x41248c:	ja	0x4124f5
0x41248e:	cmp	ecx, 0xffff
0x412494:	ja	0x41249c
0x412496:	cmp	rdi, 3
0x41249a:	ja	0x4124f5
0x41249c:	cmp	ecx, 0x1fffff
0x4124a2:	ja	0x4124aa
0x4124a4:	cmp	rdi, 4
0x4124a8:	ja	0x4124f5
0x4124aa:	cmp	ecx, 0x3ffffff
0x4124b0:	ja	0x4124b8
0x4124b2:	cmp	rdi, 5
0x4124b6:	ja	0x4124f5
0x4124b8:	lea	ebp, [rcx - 0xd800]
0x4124be:	cmp	ebp, 0x7ff
0x4124c4:	jbe	0x4124f5
0x4124c6:	test	ecx, ecx
0x4124c8:	js	0x4124f5
0x4124ca:	sub	rdx, rdi
0x4124cd:	mov	qword ptr [rsi + 8], rax
0x4124d1:	mov	eax, 1
0x4124d6:	mov	qword ptr [rsi + 0x10], rdx
0x4124da:	cmp	ecx, 0x2ff
0x4124e0:	jbe	0x412547
0x4124e2:	mov	r8d, 0x390
0x4124e8:	mov	edi, 1
0x4124ed:	mov	r10d, 2
0x4124f3:	jmp	0x41250f
0x4124f5:	dec	rdx
0x4124f8:	mov	qword ptr [rsi + 8], r10
0x4124fc:	mov	eax, 1
0x412501:	mov	qword ptr [rsi + 0x10], rdx
0x412505:	jmp	0x412547
0x412507:	mov	r8d, eax
0x41250a:	test	r8d, r8d
0x41250d:	je	0x412530
0x41250f:	mov	eax, r8d
0x412512:	cdq	
0x412513:	idiv	r10d
0x412516:	lea	ebx, [rdi + rax]
0x412519:	movsxd	r11, ebx
0x41251c:	cmp	dword ptr [r11*4 + 0x4c5ba0], ecx
0x412524:	jae	0x412507
0x412526:	inc	eax
0x412528:	lea	edi, [rbx + 1]
0x41252b:	sub	r8d, eax
0x41252e:	jmp	0x41250a
0x412530:	mov	eax, 1
0x412535:	cmp	edi, 0x391
0x41253b:	je	0x412547
0x41253d:	movsxd	rcx, edi
0x412540:	movzx	eax, byte ptr [rcx + 0x4c5800]
0x412547:	add	r9d, eax
0x41254a:	pop	rbx
0x41254b:	pop	rbp
0x41254c:	mov	dword ptr [rsi + 0x1c], r9d
0x412550:	ret	
0x412551:	nop	
0x412552:	push	rbx
0x412553:	movups	xmm0, xmmword ptr [rsi]
0x412556:	mov	rax, rsi
0x412559:	mov	rbx, rdi
0x41255c:	movups	xmm1, xmmword ptr [rsi + 0x10]
0x412560:	mov	ecx, edx
0x412562:	mov	edx, dword ptr [rsi + 0xc]
0x412565:	movups	xmmword ptr [rdi], xmm0
0x412568:	mov	esi, dword ptr [rsi + 8]
0x41256b:	movups	xmmword ptr [rdi + 0x10], xmm1
0x41256f:	mov	rdi, qword ptr [rax]
0x412572:	call	0x412069
0x412577:	mov	dword ptr [rbx + 0x20], eax
0x41257a:	pop	rbx
0x41257b:	ret	
0x41257c:	push	r15
0x41257e:	push	r14
0x412580:	push	r13
0x412582:	push	r12
0x412584:	mov	r12, rdi
0x412587:	push	rbp
0x412588:	push	rbx
0x412589:	sub	rsp, 0x18
0x41258d:	mov	rbx, qword ptr [rdi]
0x412590:	test	rbx, rbx
0x412593:	je	0x4125a9
0x412595:	mov	eax, dword ptr [rbx]
0x412597:	and	eax, 0x7fffffff
0x41259c:	sub	eax, dword ptr [rbx + 4]
0x41259f:	cmp	eax, esi
0x4125a1:	jae	0x41264e
0x4125a7:	jmp	0x4125b9
0x4125a9:	test	esi, esi
0x4125ab:	je	0x41264e
0x4125b1:	xor	r14d, r14d
0x4125b4:	xor	r13d, r13d
0x4125b7:	jmp	0x4125d6
0x4125b9:	xor	r14d, r14d
0x4125bc:	xor	r13d, r13d
0x4125bf:	cmp	byte ptr [rbx + 3], 0
0x4125c3:	jns	0x4125d6
0x4125c5:	mov	r13d, dword ptr [rbx + 4]
0x4125c9:	mov	qword ptr [rdi], 0
0x4125d0:	mov	r14b, 1
0x4125d3:	add	esi, r13d
0x4125d6:	mov	r15, qword ptr [r12]
0x4125da:	movzx	edx, dl
0x4125dd:	mov	rdi, r15
0x4125e0:	call	0x436e30
0x4125e5:	xor	ecx, ecx
0x4125e7:	mov	esi, eax
0x4125e9:	mov	rbp, rsi
0x4125ec:	imul	rsi, rsi, 0x38
0x4125f0:	add	rsi, 8
0x4125f4:	test	r15, r15
0x4125f7:	je	0x4125fd
0x4125f9:	mov	ecx, dword ptr [r15 + 4]
0x4125fd:	mov	rdi, r15
0x412600:	mov	dword ptr [rsp + 0xc], ecx
0x412604:	and	ebp, 0x7fffffff
0x41260a:	call	0x42db80
0x41260f:	mov	edi, dword ptr [rsp + 0xc]
0x412613:	mov	qword ptr [r12], rax
0x412617:	mov	rdx, rax
0x41261a:	mov	dword ptr [rax], ebp
0x41261c:	mov	dword ptr [rax + 4], edi
0x41261f:	test	r14b, r14b
0x412622:	je	0x41264e
0x412624:	mov	r8d, r13d
0x412627:	xor	r10d, r10d
0x41262a:	imul	r11, r8, 0x38
0x41262e:	cmp	r11, r10
0x412631:	je	0x41264a
0x412633:	lea	rdi, [rdx + r10 + 8]
0x412638:	lea	rsi, [rbx + r10 + 8]
0x41263d:	mov	ecx, 0xe
0x412642:	add	r10, 0x38
0x412646:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x412648:	jmp	0x41262e
0x41264a:	mov	dword ptr [rdx + 4], r13d
0x41264e:	add	rsp, 0x18
0x412652:	pop	rbx
0x412653:	pop	rbp
0x412654:	pop	r12
0x412656:	pop	r13
0x412658:	pop	r14
0x41265a:	pop	r15
0x41265c:	ret	
0x41265d:	nop	
0x41265e:	push	r15
0x412660:	push	r14
0x412662:	push	r13
0x412664:	push	r12
0x412666:	mov	r12, rdi
0x412669:	push	rbp
0x41266a:	push	rbx
0x41266b:	sub	rsp, 0x18
0x41266f:	mov	rbx, qword ptr [rdi]
0x412672:	test	rbx, rbx
0x412675:	je	0x41268b
0x412677:	mov	eax, dword ptr [rbx]
0x412679:	and	eax, 0x7fffffff
0x41267e:	sub	eax, dword ptr [rbx + 4]
0x412681:	cmp	eax, esi
0x412683:	jae	0x41271f
0x412689:	jmp	0x41269b
0x41268b:	test	esi, esi
0x41268d:	je	0x41271f
0x412693:	xor	r14d, r14d
0x412696:	xor	r13d, r13d
0x412699:	jmp	0x4126b8
0x41269b:	xor	r14d, r14d
0x41269e:	xor	r13d, r13d
0x4126a1:	cmp	byte ptr [rbx + 3], 0
0x4126a5:	jns	0x4126b8
0x4126a7:	mov	r13d, dword ptr [rbx + 4]
0x4126ab:	mov	qword ptr [rdi], 0
0x4126b2:	mov	r14b, 1
0x4126b5:	add	esi, r13d
0x4126b8:	mov	r15, qword ptr [r12]
0x4126bc:	movzx	edx, dl
0x4126bf:	mov	rdi, r15
0x4126c2:	call	0x436e30
0x4126c7:	xor	ecx, ecx
0x4126c9:	mov	edx, eax
0x4126cb:	mov	ebp, eax
0x4126cd:	lea	rsi, [rdx*8 + 8]
0x4126d5:	test	r15, r15
0x4126d8:	je	0x4126de
0x4126da:	mov	ecx, dword ptr [r15 + 4]
0x4126de:	mov	rdi, r15
0x4126e1:	mov	dword ptr [rsp + 0xc], ecx
0x4126e5:	and	ebp, 0x7fffffff
0x4126eb:	call	0x42db80
0x4126f0:	mov	esi, dword ptr [rsp + 0xc]
0x4126f4:	mov	r8d, r13d
0x4126f7:	xor	edi, edi
0x4126f9:	mov	qword ptr [r12], rax
0x4126fd:	mov	dword ptr [rax], ebp
0x4126ff:	mov	dword ptr [rax + 4], esi
0x412702:	test	r14b, r14b
0x412705:	je	0x41271f
0x412707:	cmp	r8, rdi
0x41270a:	je	0x41271b
0x41270c:	mov	r9, qword ptr [rbx + rdi*8 + 8]
0x412711:	mov	qword ptr [rax + rdi*8 + 8], r9
0x412716:	inc	rdi
0x412719:	jmp	0x412707
0x41271b:	mov	dword ptr [rax + 4], r13d
0x41271f:	add	rsp, 0x18
0x412723:	pop	rbx
0x412724:	pop	rbp
0x412725:	pop	r12
0x412727:	pop	r13
0x412729:	pop	r14
0x41272b:	pop	r15
0x41272d:	ret	
0x41272e:	push	r14
0x412730:	push	r13
0x412732:	mov	r13d, edi
0x412735:	push	r12
0x412737:	mov	r12d, esi
0x41273a:	push	rbp
0x41273b:	push	rbx
0x41273c:	test	r13d, r13d
0x41273f:	js	0x412746
0x412741:	test	r12d, r12d
0x412744:	jns	0x412750
0x412746:	mov	rax, qword ptr [0x68]
0x41274e:	ud2	
0x412750:	cmp	r13d, 1
0x412754:	setbe	r14b
0x412758:	cmp	r12d, 1
0x41275c:	setbe	al
0x41275f:	or	r14b, al
0x412762:	je	0x412770
0x412764:	cmp	r13d, r12d
0x412767:	sete	r14b
0x41276b:	jmp	0x412805
0x412770:	xor	edi, edi
0x412772:	mov	esi, r13d
0x412775:	call	0x430cf0
0x41277a:	xor	edi, edi
0x41277c:	mov	esi, r12d
0x41277f:	mov	rbp, rax
0x412782:	call	0x430cf0
0x412787:	cmp	rbp, rax
0x41278a:	jne	0x4127d9
0x41278c:	test	rbp, rbp
0x41278f:	je	0x412802
0x412791:	cmp	dword ptr [rbp], 0x6fffffff
0x412798:	jbe	0x412802
0x41279a:	xor	edi, edi
0x41279c:	mov	esi, r13d
0x41279f:	call	0x4130ee
0x4127a4:	xor	edi, edi
0x4127a6:	mov	esi, r12d
0x4127a9:	mov	ebx, eax
0x4127ab:	call	0x4130ee
0x4127b0:	cmp	bl, al
0x4127b2:	jne	0x412805
0x4127b4:	mov	edx, r13d
0x4127b7:	mov	rsi, rbp
0x4127ba:	xor	edi, edi
0x4127bc:	call	0x431080
0x4127c1:	mov	edx, r12d
0x4127c4:	mov	rsi, rbp
0x4127c7:	xor	edi, edi
0x4127c9:	mov	r13d, eax
0x4127cc:	call	0x431080
0x4127d1:	mov	r12d, eax
0x4127d4:	jmp	0x41273c
0x4127d9:	test	rbp, rbp
0x4127dc:	je	0x4127e7
0x4127de:	cmp	dword ptr [rbp], 0x6fffffff
0x4127e5:	ja	0x412805
0x4127e7:	test	rax, rax
0x4127ea:	je	0x4127f4
0x4127ec:	cmp	dword ptr [rax], 0x6fffffff
0x4127f2:	ja	0x412805
0x4127f4:	mov	rdx, qword ptr [rax + 8]
0x4127f8:	cmp	qword ptr [rbp + 8], rdx
0x4127fc:	sete	r14b
0x412800:	jmp	0x412805
0x412802:	mov	r14b, 1
0x412805:	pop	rbx
0x412806:	mov	eax, r14d
0x412809:	pop	rbp
0x41280a:	pop	r12
0x41280c:	pop	r13
0x41280e:	pop	r14
0x412810:	ret	
0x412811:	nop	
0x412812:	push	rbp
0x412813:	mov	rbp, rsi
0x412816:	xor	edx, edx
0x412818:	mov	esi, 1
0x41281d:	push	rbx
0x41281e:	mov	rbx, rdi
0x412821:	push	rax
0x412822:	call	0x41265e
0x412827:	mov	rdx, qword ptr [rbx]
0x41282a:	mov	rsi, qword ptr [rbp]
0x41282e:	mov	eax, dword ptr [rdx + 4]
0x412831:	lea	ecx, [rax + 1]
0x412834:	mov	dword ptr [rdx + 4], ecx
0x412837:	mov	qword ptr [rdx + rax*8 + 8], rsi
0x41283c:	pop	rdx
0x41283d:	pop	rbx
0x41283e:	pop	rbp
0x41283f:	ret	
0x412840:	mov	rcx, qword ptr [rbx + 8]
0x412844:	movzx	r15d, byte ptr [r12 + rsi]
0x412849:	movzx	r9d, byte ptr [rbp + rsi]
0x41284f:	movzx	r8d, byte ptr [rax + rsi]
0x412854:	add	rcx, rsi
0x412857:	cmp	qword ptr [rbx + 0x10], 5
0x41285c:	movzx	edi, byte ptr [r14 + rsi]
0x412861:	jne	0x41286d
0x412863:	movzx	r11d, byte ptr [r13 + rsi]
0x412869:	mov	byte ptr [rcx + rdx*4], r11b
0x41286d:	mov	byte ptr [rcx], r15b
0x412870:	add	rcx, qword ptr [rbx + 0x18]
0x412874:	add	rsi, 1
0x412878:	mov	byte ptr [rcx], r9b
0x41287b:	mov	rdx, rcx
0x41287e:	add	rdx, qword ptr [rbx + 0x18]
0x412882:	mov	byte ptr [rdx], r8b
0x412885:	mov	r10, qword ptr [rbx + 0x18]
0x412889:	mov	byte ptr [rdx + r10], dil
0x41288d:	mov	rdx, qword ptr [rbx + 0x18]
0x412891:	jmp	0x431c61
0x412896:	mov	r9, qword ptr [rbx + 8]
0x41289a:	movzx	r14d, byte ptr [r12 + rax]
0x41289f:	movzx	esi, byte ptr [rbp + rax]
0x4128a4:	add	r9, rax
0x4128a7:	cmp	qword ptr [rbx + 0x10], 3
0x4128ac:	jne	0x4128b7
0x4128ae:	movzx	r8d, byte ptr [r15 + rax]
0x4128b3:	mov	byte ptr [r9 + r13*2], r8b
0x4128b7:	mov	byte ptr [r9], r14b
0x4128ba:	mov	r13, qword ptr [rbx + 0x18]
0x4128be:	add	rax, 1
0x4128c2:	mov	byte ptr [r9 + r13], sil
0x4128c6:	mov	r13, qword ptr [rbx + 0x18]
0x4128ca:	jmp	0x431bc6
0x4128cf:	nop	
0x4128d0:	push	rbx
0x4128d1:	mov	rbx, rdi
0x4128d4:	mov	rdi, qword ptr [rdi]
0x4128d7:	test	rdi, rdi
0x4128da:	je	0x4128f7
0x4128dc:	cmp	byte ptr [rdi + 3], 0
0x4128e0:	jns	0x4128eb
0x4128e2:	mov	dword ptr [rdi + 4], 0
0x4128e9:	jmp	0x4128f7
0x4128eb:	call	0x403830
0x4128f0:	mov	qword ptr [rbx], 0
0x4128f7:	pop	rbx
0x4128f8:	ret	
0x4128f9:	test	edi, edi
0x4128fb:	jns	0x412912
0x4128fd:	push	rax
0x4128fe:	mov	edx, 0x4c466b
0x412903:	mov	esi, 0x50a
0x412908:	mov	edi, 0x4c438f
0x41290d:	call	0x415bba
0x412912:	mov	r8d, 1
0x412918:	je	0x41292e
0x41291a:	mov	eax, edi
0x41291c:	xor	r8d, r8d
0x41291f:	mov	ecx, 0xa
0x412924:	cdq	
0x412925:	inc	r8d
0x412928:	idiv	ecx
0x41292a:	test	eax, eax
0x41292c:	jne	0x412924
0x41292e:	mov	eax, r8d
0x412931:	ret	
0x412932:	push	rcx
0x412933:	movsxd	rsi, esi
0x412936:	mov	eax, esi
0x412938:	test	esi, esi
0x41293a:	jle	0x41296b
0x41293c:	mov	dl, byte ptr [rdi + rsi - 1]
0x412940:	dec	rsi
0x412943:	mov	ecx, edx
0x412945:	and	ecx, 0xfffffffb
0x412948:	cmp	cl, 9
0x41294b:	je	0x412936
0x41294d:	cmp	dl, 0x20
0x412950:	je	0x412936
0x412952:	movsxd	r8, eax
0x412955:	mov	dl, byte ptr [rdi + r8 - 1]
0x41295a:	mov	ecx, edx
0x41295c:	and	ecx, 0xfffffffb
0x41295f:	cmp	cl, 9
0x412962:	je	0x412987
0x412964:	cmp	dl, 0x20
0x412967:	jne	0x41299b
0x412969:	jmp	0x412987
0x41296b:	test	esi, esi
0x41296d:	jns	0x412983
0x41296f:	mov	edx, 0x4c4d50
0x412974:	mov	esi, 0x33c
0x412979:	mov	edi, 0x4c4a40
0x41297e:	call	0x415bba
0x412983:	jne	0x412952
0x412985:	jmp	0x41299b
0x412987:	mov	edx, 0x4c4d50
0x41298c:	mov	esi, 0x33e
0x412991:	mov	edi, 0x4c4a40
0x412996:	call	0x415bba
0x41299b:	pop	rdx
0x41299c:	ret	
0x41299d:	nop	
0x41299e:	mov	eax, dword ptr [rdi + 0xc]
0x4129a1:	cmp	eax, esi
0x4129a3:	je	0x412a51
0x4129a9:	inc	eax
0x4129ab:	push	rbp
0x4129ac:	mov	ebp, esi
0x4129ae:	push	rbx
0x4129af:	mov	rbx, rdi
0x4129b2:	push	r8
0x4129b4:	je	0x4129c5
0x4129b6:	mov	rdx, qword ptr [rdi]
0x4129b9:	mov	rsi, qword ptr [rdi + 0x30]
0x4129bd:	mov	rdi, qword ptr [rdx]
0x4129c0:	call	0x430480
0x4129c5:	lea	ecx, [rbp + 3]
0x4129c8:	mov	dword ptr [rbx + 0xc], ebp
0x4129cb:	cmp	ecx, 5
0x4129ce:	ja	0x412a19
0x4129d0:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c57c0]
0x4129d8:	mov	rsi, qword ptr [rbx + 0x20]
0x4129dc:	jmp	0x412a3f
0x4129de:	mov	rsi, qword ptr [rbx + 0x28]
0x4129e2:	jmp	0x412a3f
0x4129e4:	mov	rsi, qword ptr [rbx]
0x4129e7:	movsxd	rdi, dword ptr [rbx + 8]
0x4129eb:	mov	rbp, qword ptr [rsi]
0x4129ee:	mov	rsi, qword ptr [rdi*8 + 0x4c6ae0]
0x4129f6:	movzx	edi, byte ptr [rbp + 0x43]
0x4129fa:	call	0x43f100
0x4129ff:	pop	rcx
0x412a00:	mov	rdi, rbp
0x412a03:	pop	rbx
0x412a04:	mov	rsi, rax
0x412a07:	pop	rbp
0x412a08:	jmp	0x430480
0x412a0d:	mov	rsi, qword ptr [rbx + 0x10]
0x412a11:	jmp	0x412a3f
0x412a13:	mov	rsi, qword ptr [rbx + 0x18]
0x412a17:	jmp	0x412a3f
0x412a19:	cmp	ebp, 2
0x412a1c:	jg	0x412a32
0x412a1e:	mov	edx, 0x4c4676
0x412a23:	mov	esi, 0x1e1
0x412a28:	mov	edi, 0x4c4a40
0x412a2d:	call	0x415bba
0x412a32:	mov	rsi, qword ptr [rbx + 0x18]
0x412a36:	and	bpl, 1
0x412a3a:	cmovne	rsi, qword ptr [rbx + 0x10]
0x412a3f:	mov	r8, qword ptr [rbx]
0x412a42:	mov	rdi, qword ptr [r8]
0x412a45:	pop	rdx
0x412a46:	pop	rbx
0x412a47:	pop	rbp
0x412a48:	jmp	0x430480
0x412a4d:	pop	rax
0x412a4e:	pop	rbx
0x412a4f:	pop	rbp
0x412a50:	ret	
0x412a51:	ret	
0x412a52:	mov	ecx, esi
0x412a54:	and	ecx, 0xc0
0x412a5a:	cmp	ecx, 0x80
0x412a60:	je	0x412a6d
0x412a62:	mov	esi, dword ptr [rbp + 0xc8]
0x412a68:	cmp	dword ptr [rdi + 0x1c], esi
0x412a6b:	jle	0x412a98
0x412a6d:	mov	rbp, qword ptr [rbp + 0xb0]
0x412a74:	mov	rdi, qword ptr [rbp + 0x18]
0x412a78:	cmp	qword ptr [rbp + 0x20], rdi
0x412a7c:	jne	0x431f1e
0x412a82:	mov	rdi, rbp
0x412a85:	mov	esi, 1
0x412a8a:	call	0x4316f0
0x412a8f:	mov	rdi, qword ptr [rbp + 0x18]
0x412a93:	jmp	0x431f1e
0x412a98:	call	0x43f440
0x412a9d:	movzx	eax, r12b
0x412aa1:	test	byte ptr [rax + rax + 0x4bc840], 0x40
0x412aa9:	jne	0x431f35
0x412aaf:	mov	rbp, qword ptr [rbx + 8]
0x412ab3:	jmp	0x412a6d
0x412ab5:	nop	
0x412ab6:	push	r13
0x412ab8:	mov	eax, r9d
0x412abb:	push	r12
0x412abd:	push	rbp
0x412abe:	push	rbx
0x412abf:	mov	ebx, ecx
0x412ac1:	push	r10
0x412ac3:	mov	rcx, qword ptr [rdi + 0x80]
0x412aca:	mov	r10d, esi
0x412acd:	mov	rbp, qword ptr [rsp + 0x30]
0x412ad2:	lea	rdi, [rcx + rax*4]
0x412ad6:	lea	rsi, [rcx + 8]
0x412ada:	xor	eax, eax
0x412adc:	test	rcx, rcx
0x412adf:	je	0x412bc6
0x412ae5:	cmp	dword ptr [rcx + 4], eax
0x412ae8:	jbe	0x412bc6
0x412aee:	mov	r13d, dword ptr [rsi + 0x18]
0x412af2:	cmp	r13d, 2
0x412af6:	je	0x412bb7
0x412afc:	mov	r12d, dword ptr [rsi]
0x412aff:	mov	r11d, dword ptr [rsi + 0xc]
0x412b03:	cmp	r12d, r11d
0x412b06:	jbe	0x412b1c
0x412b08:	mov	edx, 0x4c4682
0x412b0d:	mov	esi, 0x23f
0x412b12:	mov	edi, 0x4c4a40
0x412b17:	call	0x415bba
0x412b1c:	cmp	r10d, r12d
0x412b1f:	jb	0x412bb7
0x412b25:	jne	0x412b4b
0x412b27:	cmp	edx, dword ptr [rdi + 0xc]
0x412b2a:	jl	0x412bb7
0x412b30:	cmp	r10d, r11d
0x412b33:	jb	0x412b86
0x412b35:	je	0x412b81
0x412b37:	mov	edx, 0x4c4682
0x412b3c:	mov	esi, 0x25a
0x412b41:	mov	edi, 0x4c4a40
0x412b46:	call	0x415bba
0x412b4b:	cmp	r10d, r11d
0x412b4e:	ja	0x412bb7
0x412b50:	jae	0x412b6b
0x412b52:	cmp	r12d, r11d
0x412b55:	jne	0x412b86
0x412b57:	mov	edx, 0x4c4682
0x412b5c:	mov	esi, 0x26e
0x412b61:	mov	edi, 0x4c4a40
0x412b66:	call	0x415bba
0x412b6b:	je	0x412b81
0x412b6d:	mov	edx, 0x4c4682
0x412b72:	mov	esi, 0x272
0x412b77:	mov	edi, 0x4c4a40
0x412b7c:	call	0x415bba
0x412b81:	cmp	edx, dword ptr [rdi + 0x18]
0x412b84:	jg	0x412bb7
0x412b86:	mov	dword ptr [rbp], eax
0x412b89:	mov	byte ptr [rbp + 4], 0
0x412b8d:	test	r13d, r13d
0x412b90:	jne	0x412bca
0x412b92:	imul	r13, rax, 0x38
0x412b96:	cmp	dword ptr [rcx + r13 + 0x24], r10d
0x412b9b:	jne	0x412bca
0x412b9d:	imul	rax, rax, 0xe
0x412ba1:	movsxd	r9, r9d
0x412ba4:	lea	rsi, [r9 + rax + 4]
0x412ba9:	cmp	dword ptr [rcx + rsi*4 + 0x18], edx
0x412bad:	jne	0x412bca
0x412baf:	mov	byte ptr [rbp + 4], 1
0x412bb3:	mov	al, 1
0x412bb5:	jmp	0x412bda
0x412bb7:	inc	eax
0x412bb9:	add	rdi, 0x38
0x412bbd:	add	rsi, 0x38
0x412bc1:	jmp	0x412adc
0x412bc6:	xor	eax, eax
0x412bc8:	jmp	0x412bda
0x412bca:	cmp	edx, ebx
0x412bcc:	setl	al
0x412bcf:	cmp	edx, r8d
0x412bd2:	setg	dl
0x412bd5:	or	eax, edx
0x412bd7:	xor	eax, 1
0x412bda:	pop	rdx
0x412bdb:	pop	rbx
0x412bdc:	pop	rbp
0x412bdd:	pop	r12
0x412bdf:	pop	r13
0x412be1:	ret	
0x412be2:	cmp	dword ptr [rdi + 8], 0xa
0x412be6:	jne	0x412bef
0x412be8:	xor	esi, esi
0x412bea:	jmp	0x41299e
0x412bef:	jmp	0x41299e
0x412bf4:	push	rbx
0x412bf5:	or	esi, 0xffffffff
0x412bf8:	mov	rbx, rdi
0x412bfb:	lea	rdi, [rdi + 0x40]
0x412bff:	call	0x41299e
0x412c04:	mov	rdi, qword ptr [rbx + 8]
0x412c08:	pop	rbx
0x412c09:	jmp	0x43f440
0x412c0e:	push	r12
0x412c10:	movsx	r12d, sil
0x412c14:	push	rbp
0x412c15:	xor	ebp, ebp
0x412c17:	push	rbx
0x412c18:	mov	rbx, rdi
0x412c1b:	mov	rdi, qword ptr [rdi + 8]
0x412c1f:	call	0x40d7a7
0x412c24:	cmp	byte ptr [rbx + 0x7a], 0
0x412c28:	je	0x412c6f
0x412c2a:	mov	eax, dword ptr [rbx + 0x98]
0x412c30:	sub	eax, 3
0x412c33:	cmp	eax, ebp
0x412c35:	jle	0x412c49
0x412c37:	mov	rdi, qword ptr [rbx + 8]
0x412c3b:	mov	esi, 0x20
0x412c40:	inc	ebp
0x412c42:	call	0x431ef0
0x412c47:	jmp	0x412c2a
0x412c49:	mov	rdi, qword ptr [rbx + 8]
0x412c4d:	cmp	dword ptr [rbx + 0x98], ebp
0x412c53:	jle	0x412c61
0x412c55:	mov	esi, r12d
0x412c58:	inc	ebp
0x412c5a:	call	0x431ef0
0x412c5f:	jmp	0x412c49
0x412c61:	pop	rbx
0x412c62:	mov	esi, 0x4be7ab
0x412c67:	pop	rbp
0x412c68:	pop	r12
0x412c6a:	jmp	0x430480
0x412c6f:	pop	rbx
0x412c70:	pop	rbp
0x412c71:	pop	r12
0x412c73:	ret	
0x412c74:	push	rbx
0x412c75:	mov	rbx, rdi
0x412c78:	mov	rdi, qword ptr [rdi]
0x412c7b:	test	rdi, rdi
0x412c7e:	je	0x412c9b
0x412c80:	cmp	byte ptr [rdi + 3], 0
0x412c84:	jns	0x412c8f
0x412c86:	mov	dword ptr [rdi + 4], 0
0x412c8d:	jmp	0x412c9b
0x412c8f:	call	0x403830
0x412c94:	mov	qword ptr [rbx], 0
0x412c9b:	pop	rbx
0x412c9c:	ret	
0x412c9d:	nop	
0x412c9e:	push	r13
0x412ca0:	push	r12
0x412ca2:	mov	r12d, edx
0x412ca5:	push	rbp
0x412ca6:	mov	rbp, rdi
0x412ca9:	push	rbx
0x412caa:	mov	rbx, rsi
0x412cad:	push	r8
0x412caf:	cmp	dword ptr [rsi], edx
0x412cb1:	jle	0x412cd5
0x412cb3:	mov	r13d, ecx
0x412cb6:	call	0x412bf4
0x412cbb:	test	r13b, r13b
0x412cbe:	je	0x412ccd
0x412cc0:	mov	esi, 0x20
0x412cc5:	mov	rdi, rbp
0x412cc8:	call	0x412c0e
0x412ccd:	mov	eax, dword ptr [rbp + 0x9c]
0x412cd3:	mov	dword ptr [rbx], eax
0x412cd5:	cmp	dword ptr [rbx], r12d
0x412cd8:	jge	0x412cec
0x412cda:	mov	rdi, qword ptr [rbp + 8]
0x412cde:	mov	esi, 0x20
0x412ce3:	call	0x431ef0
0x412ce8:	inc	dword ptr [rbx]
0x412cea:	jmp	0x412cd5
0x412cec:	pop	rax
0x412ced:	pop	rbx
0x412cee:	pop	rbp
0x412cef:	pop	r12
0x412cf1:	pop	r13
0x412cf3:	ret	
0x412cf4:	endbr64	
0x412cf8:	push	r12
0x412cfa:	mov	r11d, edi
0x412cfd:	mov	r10, rdx
0x412d00:	sub	rsp, 0x180
0x412d07:	mov	qword ptr [rsp + 0xe8], rcx
0x412d0f:	mov	qword ptr [rsp + 0xf0], r8
0x412d17:	mov	qword ptr [rsp + 0xf8], r9
0x412d1f:	test	al, al
0x412d21:	je	0x412d63
0x412d23:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x412d2b:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x412d33:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x412d3b:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x412d43:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x412d4b:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x412d53:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x412d5b:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x412d63:	xor	esi, esi
0x412d65:	lea	rdi, [rsp + 0x20]
0x412d6a:	lea	r8, [rsp + 8]
0x412d6f:	mov	rcx, r10
0x412d72:	lea	rdx, [rsp + 0xd0]
0x412d7a:	lea	rax, [rsp + 0x190]
0x412d82:	mov	r9d, 6
0x412d88:	mov	dword ptr [rsp + 8], 0x18
0x412d90:	mov	qword ptr [rsp + 0x18], rdx
0x412d95:	mov	edx, r11d
0x412d98:	mov	qword ptr [rsp + 0x10], rax
0x412d9d:	mov	dword ptr [rsp + 0xc], 0x30
0x412da5:	inc	dword ptr [rip + 0xd0445]
0x412dab:	call	0x43de80
0x412db0:	xor	edx, edx
0x412db2:	call	0x43def0
0x412db7:	lea	rdi, [rsp + 0x20]
0x412dbc:	mov	r12d, eax
0x412dbf:	call	0x430ad0
0x412dc4:	call	0x43f590
0x412dc9:	add	rsp, 0x180
0x412dd0:	mov	eax, r12d
0x412dd3:	pop	r12
0x412dd5:	ret	
0x412dd6:	push	rbp
0x412dd7:	mov	rbp, rsi
0x412dda:	push	rbx
0x412ddb:	mov	rbx, rdi
0x412dde:	sub	rsp, 0xf8
0x412de5:	mov	qword ptr [rsp + 0x50], rdx
0x412dea:	mov	qword ptr [rsp + 0x58], rcx
0x412def:	mov	qword ptr [rsp + 0x60], r8
0x412df4:	mov	qword ptr [rsp + 0x68], r9
0x412df9:	test	al, al
0x412dfb:	je	0x412e3a
0x412dfd:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x412e02:	movaps	xmmword ptr [rsp + 0x80], xmm1
0x412e0a:	movaps	xmmword ptr [rsp + 0x90], xmm2
0x412e12:	movaps	xmmword ptr [rsp + 0xa0], xmm3
0x412e1a:	movaps	xmmword ptr [rsp + 0xb0], xmm4
0x412e22:	movaps	xmmword ptr [rsp + 0xc0], xmm5
0x412e2a:	movaps	xmmword ptr [rsp + 0xd0], xmm6
0x412e32:	movaps	xmmword ptr [rsp + 0xe0], xmm7
0x412e3a:	lea	rdx, [rsp + 0x40]
0x412e3f:	lea	rax, [rsp + 0x110]
0x412e47:	mov	dword ptr [rsp], 0x10
0x412e4e:	mov	qword ptr [rsp + 0x10], rdx
0x412e53:	mov	dword ptr [rsp + 4], 0x30
0x412e5b:	mov	qword ptr [rsp + 8], rax
0x412e60:	call	0x403890
0x412e65:	mov	qword ptr [rsp + 0x18], rbp
0x412e6a:	mov	rbp, qword ptr [rbx + 0x24]
0x412e6e:	mov	rdi, rbx
0x412e71:	mov	ecx, dword ptr [rax]
0x412e73:	mov	qword ptr [rbx + 0x24], 1
0x412e7b:	lea	rsi, [rsp + 0x18]
0x412e80:	mov	qword ptr [rsp + 0x20], rsp
0x412e85:	mov	dword ptr [rsp + 0x28], ecx
0x412e89:	call	0x43e5d0
0x412e8e:	mov	rdi, rbx
0x412e91:	call	0x43f3a0
0x412e96:	mov	qword ptr [rbx + 0x24], rbp
0x412e9a:	add	rsp, 0xf8
0x412ea1:	pop	rbx
0x412ea2:	pop	rbp
0x412ea3:	ret	
0x412ea4:	endbr64	
0x412ea8:	sub	rsp, 0xd8
0x412eaf:	mov	qword ptr [rsp + 0x30], rdx
0x412eb4:	mov	qword ptr [rsp + 0x38], rcx
0x412eb9:	mov	qword ptr [rsp + 0x40], r8
0x412ebe:	mov	qword ptr [rsp + 0x48], r9
0x412ec3:	test	al, al
0x412ec5:	je	0x412efe
0x412ec7:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x412ecc:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x412ed1:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x412ed6:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x412ede:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x412ee6:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x412eee:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x412ef6:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x412efe:	lea	rdx, [rsp + 0x20]
0x412f03:	lea	rax, [rsp + 0xe0]
0x412f0b:	mov	ecx, 0x4c4691
0x412f10:	xor	esi, esi
0x412f12:	mov	qword ptr [rsp + 0x18], rdx
0x412f17:	lea	r8, [rsp + 8]
0x412f1c:	or	edx, 0xffffffff
0x412f1f:	mov	r9d, 8
0x412f25:	mov	dword ptr [rsp + 8], 0x10
0x412f2d:	mov	dword ptr [rsp + 0xc], 0x30
0x412f35:	mov	qword ptr [rsp + 0x10], rax
0x412f3a:	inc	dword ptr [rip + 0xd02b0]
0x412f40:	call	0x43def0
0x412f45:	call	0x43f590
0x412f4a:	add	rsp, 0xd8
0x412f51:	ret	
0x412f52:	push	r15
0x412f54:	push	r14
0x412f56:	push	r13
0x412f58:	push	r12
0x412f5a:	mov	r12, rdi
0x412f5d:	push	rbp
0x412f5e:	push	rbx
0x412f5f:	sub	rsp, 0x18
0x412f63:	mov	rbx, qword ptr [rdi]
0x412f66:	test	rbx, rbx
0x412f69:	je	0x412f7f
0x412f6b:	mov	eax, dword ptr [rbx]
0x412f6d:	and	eax, 0x7fffffff
0x412f72:	sub	eax, dword ptr [rbx + 4]
0x412f75:	cmp	eax, esi
0x412f77:	jae	0x41300f
0x412f7d:	jmp	0x412f89
0x412f7f:	test	esi, esi
0x412f81:	je	0x41300f
0x412f87:	jmp	0x412fa2
0x412f89:	cmp	byte ptr [rbx + 3], 0
0x412f8d:	jns	0x412fa2
0x412f8f:	mov	r13d, dword ptr [rbx + 4]
0x412f93:	mov	qword ptr [rdi], 0
0x412f9a:	mov	r14b, 1
0x412f9d:	add	esi, r13d
0x412fa0:	jmp	0x412fa8
0x412fa2:	xor	r14d, r14d
0x412fa5:	xor	r13d, r13d
0x412fa8:	mov	r15, qword ptr [r12]
0x412fac:	movzx	edx, dl
0x412faf:	mov	rdi, r15
0x412fb2:	call	0x436e30
0x412fb7:	xor	ecx, ecx
0x412fb9:	mov	edx, eax
0x412fbb:	mov	ebp, eax
0x412fbd:	lea	rsi, [rdx*8 + 8]
0x412fc5:	test	r15, r15
0x412fc8:	je	0x412fce
0x412fca:	mov	ecx, dword ptr [r15 + 4]
0x412fce:	mov	rdi, r15
0x412fd1:	mov	dword ptr [rsp + 0xc], ecx
0x412fd5:	and	ebp, 0x7fffffff
0x412fdb:	call	0x42db80
0x412fe0:	mov	esi, dword ptr [rsp + 0xc]
0x412fe4:	mov	r8d, r13d
0x412fe7:	xor	edi, edi
0x412fe9:	mov	qword ptr [r12], rax
0x412fed:	mov	dword ptr [rax], ebp
0x412fef:	mov	dword ptr [rax + 4], esi
0x412ff2:	test	r14b, r14b
0x412ff5:	je	0x41300f
0x412ff7:	cmp	r8, rdi
0x412ffa:	je	0x41300b
0x412ffc:	mov	r9, qword ptr [rbx + rdi*8 + 8]
0x413001:	mov	qword ptr [rax + rdi*8 + 8], r9
0x413006:	inc	rdi
0x413009:	jmp	0x412ff7
0x41300b:	mov	dword ptr [rax + 4], r13d
0x41300f:	add	rsp, 0x18
0x413013:	pop	rbx
0x413014:	pop	rbp
0x413015:	pop	r12
0x413017:	pop	r13
0x413019:	pop	r14
0x41301b:	pop	r15
0x41301d:	ret	
0x41301e:	mov	rdx, qword ptr [rdi + 0x10]
0x413022:	xor	eax, eax
0x413024:	test	rdx, rdx
0x413027:	je	0x413035
0x413029:	mov	rax, qword ptr [rdi + 8]
0x41302d:	cmp	byte ptr [rax + rdx - 1], 0xa
0x413032:	sete	al
0x413035:	ret	
0x413036:	push	r12
0x413038:	mov	ecx, 1
0x41303d:	mov	r12, rdi
0x413040:	push	rbp
0x413041:	mov	rbp, rsi
0x413044:	push	rbx
0x413045:	mov	ebx, edx
0x413047:	xor	edx, edx
0x413049:	sub	rsp, 0x40
0x41304d:	mov	esi, dword ptr [rdi]
0x41304f:	lea	rdi, [rsp + 0x20]
0x413054:	call	0x430830
0x413059:	cmp	qword ptr [rsp + 0x20], rbp
0x41305e:	je	0x413064
0x413060:	xor	eax, eax
0x413062:	jmp	0x41308b
0x413064:	cmp	dword ptr [rsp + 0x28], ebx
0x413068:	jg	0x413060
0x41306a:	mov	esi, dword ptr [r12 + 4]
0x41306f:	xor	edx, edx
0x413071:	mov	ecx, 1
0x413076:	mov	rdi, rsp
0x413079:	call	0x430830
0x41307e:	cmp	qword ptr [rsp], rbp
0x413082:	jne	0x413060
0x413084:	cmp	dword ptr [rsp + 8], ebx
0x413088:	setge	al
0x41308b:	add	rsp, 0x40
0x41308f:	pop	rbx
0x413090:	pop	rbp
0x413091:	pop	r12
0x413093:	ret	
0x413094:	movd	xmm0, esi
0x413098:	movd	xmm1, edx
0x41309c:	punpckldq	xmm0, xmm1
0x4130a0:	movq	qword ptr [rdi], xmm0
0x4130a4:	cmp	esi, edx
0x4130a6:	jle	0x4130c3
0x4130a8:	dec	esi
0x4130aa:	cmp	esi, edx
0x4130ac:	je	0x4130c3
0x4130ae:	push	rax
0x4130af:	mov	edx, 0x4c469c
0x4130b4:	mov	esi, 0x7d0
0x4130b9:	mov	edi, 0x4c4a40
0x4130be:	call	0x415bba
0x4130c3:	ret	
0x4130c4:	mov	rdx, qword ptr [rdi + 0x90]
0x4130cb:	xor	eax, eax
0x4130cd:	test	rdx, rdx
0x4130d0:	je	0x4130eb
0x4130d2:	cmp	dword ptr [rdx + 4], eax
0x4130d5:	jle	0x4130eb
0x4130d7:	cmp	dword ptr [rdx + rax*8 + 8], esi
0x4130db:	ja	0x4130e3
0x4130dd:	cmp	esi, dword ptr [rdx + rax*8 + 0xc]
0x4130e1:	jbe	0x4130e8
0x4130e3:	inc	rax
0x4130e6:	jmp	0x4130cd
0x4130e8:	mov	al, 1
0x4130ea:	ret	
0x4130eb:	xor	eax, eax
0x4130ed:	ret	
0x4130ee:	push	rbp
0x4130ef:	mov	rbp, rdi
0x4130f2:	push	rbx
0x4130f3:	mov	ebx, esi
0x4130f5:	push	rcx
0x4130f6:	test	esi, esi
0x4130f8:	jns	0x41310a
0x4130fa:	and	ebx, 0x7fffffff
0x413100:	imul	rbx, rbx, 0x18
0x413104:	add	rbx, qword ptr [rdi + 0x68]
0x413108:	mov	ebx, dword ptr [rbx]
0x41310a:	mov	esi, ebx
0x41310c:	mov	rdi, rbp
0x41310f:	call	0x430e20
0x413114:	test	al, al
0x413116:	je	0x413157
0x413118:	mov	esi, ebx
0x41311a:	mov	rdi, rbp
0x41311d:	call	0x430cf0
0x413122:	mov	edx, ebx
0x413124:	mov	rdi, rbp
0x413127:	mov	r10d, ebx
0x41312a:	mov	rsi, rax
0x41312d:	mov	r9, rax
0x413130:	call	0x431080
0x413135:	mov	rdi, rbp
0x413138:	mov	esi, eax
0x41313a:	mov	ebx, eax
0x41313c:	call	0x430e20
0x413141:	test	al, al
0x413143:	jne	0x413118
0x413145:	mov	rax, qword ptr [r9 + 0x10]
0x413149:	sub	r10d, dword ptr [r9]
0x41314c:	lea	edx, [r10 + r10 + 1]
0x413151:	cmp	dword ptr [rax + rdx*4], ebx
0x413154:	sete	al
0x413157:	pop	rdx
0x413158:	pop	rbx
0x413159:	pop	rbp
0x41315a:	ret	
0x41315b:	endbr64	
0x41315f:	cmp	qword ptr [rip + 0xd0139], 0
0x413167:	jne	0x41348e
0x41316d:	push	rbp
0x41316e:	push	rbx
0x41316f:	push	rdx
0x413170:	cmp	dword ptr [rip + 0xd2e69], 0
0x413177:	je	0x41318c
0x413179:	mov	rdi, qword ptr [rip + 0xcff20]
0x413180:	mov	esi, 0x4c46b1
0x413185:	xor	eax, eax
0x413187:	call	0x43a390
0x41318c:	mov	esi, 0x30
0x413191:	mov	edi, 1
0x413196:	mov	ebx, 0x4e2e70
0x41319b:	call	0x42d6b0
0x4131a0:	mov	ecx, 0x4c46a9
0x4131a5:	lea	rdx, [rax + 8]
0x4131a9:	movq	xmm0, rcx
0x4131ae:	mov	qword ptr [rax + 0x18], 0
0x4131b6:	mov	dword ptr [rax + 0x20], 7
0x4131bd:	movhps	xmm0, qword ptr [rip + 0xb39dc]
0x4131c4:	mov	qword ptr [rax + 0x10], rdx
0x4131c8:	mov	qword ptr [rax + 0x28], 0x4c4d80
0x4131d0:	movups	xmmword ptr [rax], xmm0
0x4131d3:	mov	rsi, rax
0x4131d6:	mov	rax, rbx
0x4131d9:	sub	rbx, 0x30
0x4131dd:	mov	qword ptr [rbx + 0x48], rsi
0x4131e1:	cmp	rax, 0x4e2600
0x4131e7:	jne	0x4131d3
0x4131e9:	mov	rbx, qword ptr [rip + 0xcf3c8]
0x4131f0:	mov	ebp, 1
0x4131f5:	mov	al, byte ptr [rbx]
0x4131f7:	test	al, al
0x4131f9:	je	0x4132ad
0x4131ff:	test	ebp, ebp
0x413201:	je	0x413265
0x413203:	cmp	al, 0x2d
0x413205:	jne	0x413234
0x413207:	mov	edx, 5
0x41320c:	mov	esi, 0x4bed93
0x413211:	mov	rdi, rbx
0x413214:	call	0x4038d0
0x413219:	mov	ebp, eax
0x41321b:	test	eax, eax
0x41321d:	jne	0x413265
0x41321f:	mov	esi, 0x4c46c8
0x413224:	mov	edi, 0x4bed93
0x413229:	add	rbx, 5
0x41322d:	call	0x42c6ec
0x413232:	jmp	0x4131f5
0x413234:	cmp	al, 0x6c
0x413236:	jne	0x413265
0x413238:	mov	edx, 0xa
0x41323d:	mov	esi, 0x4c46d1
0x413242:	mov	rdi, rbx
0x413245:	call	0x4038d0
0x41324a:	mov	ebp, eax
0x41324c:	test	eax, eax
0x41324e:	jne	0x413265
0x413250:	mov	esi, 0x4c46dc
0x413255:	mov	edi, 0x4c46d1
0x41325a:	add	rbx, 0xa
0x41325e:	call	0x42c6ec
0x413263:	jmp	0x4131f5
0x413265:	mov	r8, qword ptr [rip + 0xd168c]
0x41326c:	cmp	qword ptr [rip + 0xd168d], r8
0x413273:	jne	0x413284
0x413275:	mov	esi, 1
0x41327a:	mov	edi, 0x4e48e0
0x41327f:	call	0x4316f0
0x413284:	mov	rdi, qword ptr [rip + 0xd166d]
0x41328b:	mov	sil, byte ptr [rbx]
0x41328e:	xor	ebp, ebp
0x413290:	lea	rcx, [rdi + 1]
0x413294:	mov	qword ptr [rip + 0xd165d], rcx
0x41329b:	mov	byte ptr [rdi], sil
0x41329e:	cmp	byte ptr [rbx], 0x20
0x4132a1:	sete	bpl
0x4132a5:	inc	rbx
0x4132a8:	jmp	0x4131f5
0x4132ad:	mov	rdi, qword ptr [rip + 0xd1644]
0x4132b4:	cmp	qword ptr [rip + 0xd1645], rdi
0x4132bb:	jne	0x4132cc
0x4132bd:	mov	esi, 1
0x4132c2:	mov	edi, 0x4e48e0
0x4132c7:	call	0x4316f0
0x4132cc:	mov	rbp, qword ptr [rip + 0xd1625]
0x4132d3:	lea	r8, [rbp + 1]
0x4132d7:	mov	qword ptr [rip + 0xd161a], r8
0x4132de:	mov	byte ptr [rbp], 0
0x4132e2:	mov	r9, qword ptr [rip + 0xd1607]
0x4132e9:	mov	r10, qword ptr [rip + 0xd1608]
0x4132f0:	cmp	r10, r9
0x4132f3:	jne	0x4132fc
0x4132f5:	or	byte ptr [rip + 0xd1634], 2
0x4132fc:	mov	r11, qword ptr [rip + 0xd160d]
0x413303:	mov	rcx, qword ptr [rip + 0xd15f6]
0x41330a:	mov	qword ptr [rip + 0xcf2a7], r9
0x413311:	add	r10, r11
0x413314:	not	r11
0x413317:	mov	rbx, rcx
0x41331a:	sub	rbx, qword ptr [rip + 0xd15c7]
0x413321:	and	r10, r11
0x413324:	mov	rdx, r10
0x413327:	sub	rdx, qword ptr [rip + 0xd15ba]
0x41332e:	cmp	rdx, rbx
0x413331:	cmova	r10, rcx
0x413335:	movq	xmm1, r10
0x41333a:	sub	rcx, r10
0x41333d:	punpcklqdq	xmm1, xmm1
0x413341:	movaps	xmmword ptr [rip + 0xd15a8], xmm1
0x413348:	cmp	rcx, 0x10
0x41334c:	ja	0x41335d
0x41334e:	mov	esi, 0x11
0x413353:	mov	edi, 0x4e48e0
0x413358:	call	0x4316f0
0x41335d:	mov	rsi, qword ptr [rip + 0xd1594]
0x413364:	movaps	xmm2, xmmword ptr [rip + 0xb3825]
0x41336b:	mov	byte ptr [rsi + 0x10], 0x20
0x41336f:	movups	xmmword ptr [rsi], xmm2
0x413372:	mov	rax, qword ptr [rip + 0xd157f]
0x413379:	mov	rdi, qword ptr [rip + 0xd1580]
0x413380:	add	rax, 0x11
0x413384:	sub	rdi, rax
0x413387:	mov	qword ptr [rip + 0xd156a], rax
0x41338e:	cmp	rdi, 0x24
0x413392:	ja	0x4133a3
0x413394:	mov	esi, 0x25
0x413399:	mov	edi, 0x4e48e0
0x41339e:	call	0x4316f0
0x4133a3:	mov	rdi, qword ptr [rip + 0xd154e]
0x4133aa:	mov	esi, 0x4c4e58
0x4133af:	mov	ecx, 0x25
0x4133b4:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x4133b6:	mov	rbp, qword ptr [rip + 0xd153b]
0x4133bd:	mov	rdi, qword ptr [rip + 0xcf094]
0x4133c4:	lea	rbp, [rbp + 0x25]
0x4133c8:	mov	qword ptr [rip + 0xd1529], rbp
0x4133cf:	call	0x4039e0
0x4133d4:	mov	r8, qword ptr [rip + 0xd1525]
0x4133db:	lea	rsi, [rax + 1]
0x4133df:	mov	rbx, rax
0x4133e2:	sub	r8, rbp
0x4133e5:	cmp	rsi, r8
0x4133e8:	jbe	0x4133f4
0x4133ea:	mov	edi, 0x4e48e0
0x4133ef:	call	0x4316f0
0x4133f4:	mov	rdi, qword ptr [rip + 0xd14fd]
0x4133fb:	mov	rsi, qword ptr [rip + 0xcf056]
0x413402:	mov	rcx, rbx
0x413405:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x413407:	add	rbx, qword ptr [rip + 0xd14ea]
0x41340e:	lea	r9, [rbx + 1]
0x413412:	mov	qword ptr [rip + 0xd14df], r9
0x413419:	mov	byte ptr [rbx], 0
0x41341c:	mov	r10, qword ptr [rip + 0xd14cd]
0x413423:	mov	r11, qword ptr [rip + 0xd14ce]
0x41342a:	cmp	r11, r10
0x41342d:	jne	0x413436
0x41342f:	or	byte ptr [rip + 0xd14fa], 2
0x413436:	mov	rdx, qword ptr [rip + 0xd14d3]
0x41343d:	mov	rax, qword ptr [rip + 0xd14bc]
0x413444:	mov	qword ptr [rip + 0xcf00d], r10
0x41344b:	mov	qword ptr [rip + 0xcfe4a], 0x4e2600
0x413456:	add	r11, rdx
0x413459:	not	rdx
0x41345c:	mov	rbx, rax
0x41345f:	sub	rbx, qword ptr [rip + 0xd1482]
0x413466:	and	r11, rdx
0x413469:	mov	rbp, r11
0x41346c:	sub	rbp, qword ptr [rip + 0xd1475]
0x413473:	cmp	rbp, rbx
0x413476:	cmova	r11, rax
0x41347a:	movq	xmm3, r11
0x41347f:	punpcklqdq	xmm3, xmm3
0x413483:	movaps	xmmword ptr [rip + 0xd1466], xmm3
0x41348a:	pop	rax
0x41348b:	pop	rbx
0x41348c:	pop	rbp
0x41348d:	ret	
0x41348e:	ret	
0x41348f:	endbr64	
0x413493:	push	rbp
0x413494:	mov	rbp, rdi
0x413497:	sub	rsp, 0x90
0x41349e:	mov	rsi, rsp
0x4134a1:	call	0x403c40
0x4134a6:	test	eax, eax
0x4134a8:	js	0x4134de
0x4134aa:	mov	eax, dword ptr [rsp + 0x18]
0x4134ae:	and	eax, 0xf000
0x4134b3:	cmp	eax, 0x8000
0x4134b8:	jne	0x4134de
0x4134ba:	mov	rdi, rbp
0x4134bd:	call	0x4038a0
0x4134c2:	test	eax, eax
0x4134c4:	jns	0x4134de
0x4134c6:	cmp	dword ptr [rip + 0xd2b13], 0
0x4134cd:	je	0x4134de
0x4134cf:	mov	rsi, rbp
0x4134d2:	mov	edi, 0x4be772
0x4134d7:	xor	eax, eax
0x4134d9:	call	0x43dd90
0x4134de:	add	rsp, 0x90
0x4134e5:	pop	rbp
0x4134e6:	ret	
0x4134e7:	endbr64	
0x4134eb:	push	rbx
0x4134ec:	mov	rbx, qword ptr [rip + 0xd152d]
0x4134f3:	test	rbx, rbx
0x4134f6:	je	0x413506
0x4134f8:	mov	rdi, qword ptr [rbx]
0x4134fb:	call	0x41348f
0x413500:	mov	rbx, qword ptr [rbx + 8]
0x413504:	jmp	0x4134f3
0x413506:	pop	rbx
0x413507:	ret	
0x413508:	push	rbx
0x413509:	mov	rsi, rdi
0x41350c:	mov	eax, 0x80000006
0x413511:	cpuid	
0x413513:	mov	edx, ecx
0x413515:	movzx	ebx, cl
0x413518:	shr	ecx, 0xc
0x41351b:	shr	edx, 0x10
0x41351e:	and	ecx, 0xf
0x413521:	mov	dword ptr [rdi + 8], ebx
0x413524:	mov	dword ptr [rdi], edx
0x413526:	cmp	ecx, 6
0x413529:	je	0x413551
0x41352b:	cmp	ecx, 8
0x41352e:	je	0x413558
0x413530:	lea	edi, [rcx - 0xa]
0x413533:	cmp	edi, 2
0x413536:	ja	0x413540
0x413538:	sub	ecx, 8
0x41353b:	shl	ecx, 4
0x41353e:	jmp	0x41355d
0x413540:	lea	r8d, [rcx - 0xd]
0x413544:	cmp	r8d, 1
0x413548:	ja	0x41355d
0x41354a:	shl	edi, 5
0x41354d:	mov	ecx, edi
0x41354f:	jmp	0x41355d
0x413551:	mov	ecx, 8
0x413556:	jmp	0x41355d
0x413558:	mov	ecx, 0x10
0x41355d:	mov	dword ptr [rsi + 4], ecx
0x413560:	pop	rbx
0x413561:	ret	
0x413562:	endbr64	
0x413566:	mov	eax, dword ptr [rdi]
0x413568:	ret	
0x413569:	endbr64	
0x41356d:	mov	eax, dword ptr [rdi]
0x41356f:	ret	
0x413570:	endbr64	
0x413574:	mov	dword ptr [rdi], esi
0x413576:	ret	
0x413577:	endbr64	
0x41357b:	mov	eax, dword ptr [rdi]
0x41357d:	ret	
0x41357e:	endbr64	
0x413582:	mov	eax, dword ptr [rdi]
0x413584:	ret	
0x413585:	endbr64	
0x413589:	mov	eax, dword ptr [rdi]
0x41358b:	ret	
0x41358c:	endbr64	
0x413590:	mov	dword ptr [rdi], esi
0x413592:	ret	
0x413593:	endbr64	
0x413597:	mov	eax, dword ptr [rdi]
0x413599:	ret	
0x41359a:	endbr64	
0x41359e:	mov	dword ptr [rdi], esi
0x4135a0:	ret	
0x4135a1:	endbr64	
0x4135a5:	mov	eax, dword ptr [rdi]
0x4135a7:	ret	
0x4135a8:	endbr64	
0x4135ac:	mov	dword ptr [rdi], esi
0x4135ae:	ret	
0x4135af:	endbr64	
0x4135b3:	mov	eax, dword ptr [rdi]
0x4135b5:	ret	
0x4135b6:	endbr64	
0x4135ba:	mov	dword ptr [rdi], esi
0x4135bc:	ret	
0x4135bd:	endbr64	
0x4135c1:	mov	eax, dword ptr [rdi]
0x4135c3:	ret	
0x4135c4:	endbr64	
0x4135c8:	mov	dword ptr [rdi], esi
0x4135ca:	ret	
0x4135cb:	endbr64	
0x4135cf:	mov	eax, dword ptr [rdi]
0x4135d1:	ret	
0x4135d2:	endbr64	
0x4135d6:	mov	dword ptr [rdi], esi
0x4135d8:	ret	
0x4135d9:	endbr64	
0x4135dd:	mov	eax, dword ptr [rdi]
0x4135df:	ret	
0x4135e0:	endbr64	
0x4135e4:	mov	dword ptr [rdi], esi
0x4135e6:	ret	
0x4135e7:	endbr64	
0x4135eb:	mov	eax, dword ptr [rdi]
0x4135ed:	ret	
0x4135ee:	endbr64	
0x4135f2:	mov	dword ptr [rdi], esi
0x4135f4:	ret	
0x4135f5:	endbr64	
0x4135f9:	mov	eax, dword ptr [rdi]
0x4135fb:	ret	
0x4135fc:	endbr64	
0x413600:	mov	dword ptr [rdi], esi
0x413602:	ret	
0x413603:	endbr64	
0x413607:	mov	eax, dword ptr [rdi]
0x413609:	ret	
0x41360a:	endbr64	
0x41360e:	mov	eax, dword ptr [rdi]
0x413610:	ret	
0x413611:	endbr64	
0x413615:	mov	eax, dword ptr [rdi]
0x413617:	ret	
0x413618:	endbr64	
0x41361c:	mov	eax, dword ptr [rdi]
0x41361e:	ret	
0x41361f:	endbr64	
0x413623:	mov	eax, dword ptr [rdi]
0x413625:	ret	
0x413626:	endbr64	
0x41362a:	mov	eax, dword ptr [rdi]
0x41362c:	ret	
0x41362d:	endbr64	
0x413631:	mov	eax, dword ptr [rdi]
0x413633:	ret	
0x413634:	endbr64	
0x413638:	mov	eax, dword ptr [rdi]
0x41363a:	ret	
0x41363b:	endbr64	
0x41363f:	mov	eax, dword ptr [rdi]
0x413641:	ret	
0x413642:	endbr64	
0x413646:	mov	eax, dword ptr [rdi]
0x413648:	ret	
0x413649:	endbr64	
0x41364d:	mov	eax, dword ptr [rdi]
0x41364f:	ret	
0x413650:	endbr64	
0x413654:	mov	eax, dword ptr [rdi]
0x413656:	ret	
0x413657:	endbr64	
0x41365b:	mov	eax, dword ptr [rdi]
0x41365d:	ret	
0x41365e:	endbr64	
0x413662:	mov	eax, dword ptr [rdi]
0x413664:	ret	
0x413665:	endbr64	
0x413669:	mov	eax, dword ptr [rdi]
0x41366b:	ret	
0x41366c:	endbr64	
0x413670:	mov	eax, dword ptr [rdi]
0x413672:	ret	
0x413673:	endbr64	
0x413677:	mov	eax, dword ptr [rdi]
0x413679:	ret	
0x41367a:	endbr64	
0x41367e:	mov	eax, dword ptr [rdi]
0x413680:	ret	
0x413681:	endbr64	
0x413685:	mov	eax, dword ptr [rdi]
0x413687:	ret	
0x413688:	endbr64	
0x41368c:	mov	eax, dword ptr [rdi]
0x41368e:	ret	
0x41368f:	endbr64	
0x413693:	mov	eax, dword ptr [rdi]
0x413695:	ret	
0x413696:	endbr64	
0x41369a:	mov	dword ptr [rdi], esi
0x41369c:	ret	
0x41369d:	endbr64	
0x4136a1:	mov	eax, dword ptr [rdi]
0x4136a3:	ret	
0x4136a4:	endbr64	
0x4136a8:	mov	eax, dword ptr [rdi]
0x4136aa:	ret	
0x4136ab:	endbr64	
0x4136af:	mov	eax, dword ptr [rdi]
0x4136b1:	ret	
0x4136b2:	endbr64	
0x4136b6:	mov	eax, dword ptr [rdi]
0x4136b8:	ret	
0x4136b9:	endbr64	
0x4136bd:	mov	eax, dword ptr [rdi]
0x4136bf:	ret	
0x4136c0:	endbr64	
0x4136c4:	mov	eax, dword ptr [rdi]
0x4136c6:	ret	
0x4136c7:	endbr64	
0x4136cb:	mov	eax, dword ptr [rdi]
0x4136cd:	ret	
0x4136ce:	endbr64	
0x4136d2:	mov	eax, dword ptr [rdi]
0x4136d4:	ret	
0x4136d5:	endbr64	
0x4136d9:	mov	eax, dword ptr [rdi]
0x4136db:	ret	
0x4136dc:	endbr64	
0x4136e0:	mov	eax, dword ptr [rdi]
0x4136e2:	ret	
0x4136e3:	endbr64	
0x4136e7:	mov	dword ptr [rdi], esi
0x4136e9:	ret	
0x4136ea:	endbr64	
0x4136ee:	mov	eax, dword ptr [rdi]
0x4136f0:	ret	
0x4136f1:	endbr64	
0x4136f5:	mov	eax, dword ptr [rdi]
0x4136f7:	ret	
0x4136f8:	endbr64	
0x4136fc:	mov	dword ptr [rdi], esi
0x4136fe:	ret	
0x4136ff:	endbr64	
0x413703:	mov	eax, dword ptr [rdi]
0x413705:	ret	
0x413706:	endbr64	
0x41370a:	mov	eax, dword ptr [rdi]
0x41370c:	ret	
0x41370d:	endbr64	
0x413711:	mov	eax, dword ptr [rdi]
0x413713:	ret	
0x413714:	endbr64	
0x413718:	mov	eax, dword ptr [rdi]
0x41371a:	ret	
0x41371b:	endbr64	
0x41371f:	mov	eax, dword ptr [rdi]
0x413721:	ret	
0x413722:	endbr64	
0x413726:	mov	eax, dword ptr [rdi]
0x413728:	ret	
0x413729:	endbr64	
0x41372d:	mov	eax, dword ptr [rdi]
0x41372f:	ret	
0x413730:	mov	esi, esi
0x413732:	mov	edx, edi
0x413734:	shl	rsi, 4
0x413738:	mov	edi, edx
0x41373a:	mov	rax, rdx
0x41373d:	mov	ecx, dword ptr [rsi + 0x4be184]
0x413743:	imul	rcx, rdx
0x413747:	shr	rcx, 0x20
0x41374b:	sub	edi, ecx
0x41374d:	shr	edi, 1
0x41374f:	add	edi, ecx
0x413751:	mov	ecx, dword ptr [rsi + 0x4be18c]
0x413757:	shr	edi, cl
0x413759:	imul	edi, dword ptr [rsi + 0x4be180]
0x413760:	sub	eax, edi
0x413762:	ret	
0x413763:	mov	esi, esi
0x413765:	mov	eax, edi
0x413767:	shl	rsi, 4
0x41376b:	mov	edx, dword ptr [rsi + 0x4be188]
0x413771:	mov	ecx, dword ptr [rsi + 0x4be18c]
0x413777:	mov	r8d, dword ptr [rsi + 0x4be180]
0x41377e:	imul	rdx, rax
0x413782:	lea	eax, [rdi + 1]
0x413785:	sub	r8d, 2
0x413789:	shr	rdx, 0x20
0x41378d:	sub	edi, edx
0x41378f:	shr	edi, 1
0x413791:	add	edi, edx
0x413793:	shr	edi, cl
0x413795:	imul	edi, r8d
0x413799:	sub	eax, edi
0x41379b:	ret	
0x41379c:	endbr64	
0x4137a0:	mov	al, 1
0x4137a2:	ret	
0x4137a3:	mov	rdx, rdi
0x4137a6:	cmp	byte ptr [rdx], 0x2e
0x4137a9:	jne	0x4137bd
0x4137ab:	cmp	byte ptr [rdx + 1], 0x2e
0x4137af:	jne	0x4137bd
0x4137b1:	cmp	byte ptr [rdx + 2], 0x2f
0x4137b5:	jne	0x4137bd
0x4137b7:	add	rdx, 3
0x4137bb:	jmp	0x4137a6
0x4137bd:	mov	eax, 0x4c81d0
0x4137c2:	cmp	byte ptr [rax + 1], 0x2e
0x4137c6:	je	0x4137cc
0x4137c8:	xor	ecx, ecx
0x4137ca:	jmp	0x4137e2
0x4137cc:	cmp	byte ptr [rax + 2], 0x2f
0x4137d0:	jne	0x4137c8
0x4137d2:	add	rax, 3
0x4137d6:	cmp	byte ptr [rax], 0x2e
0x4137d9:	je	0x4137c2
0x4137db:	jmp	0x4137c8
0x4137dd:	test	sil, sil
0x4137e0:	je	0x413810
0x4137e2:	mov	r9b, byte ptr [rdx + rcx]
0x4137e6:	mov	sil, byte ptr [rax + rcx]
0x4137ea:	lea	r8, [rdx + rcx]
0x4137ee:	inc	rcx
0x4137f1:	test	r9b, r9b
0x4137f4:	setne	r10b
0x4137f8:	cmp	r9b, sil
0x4137fb:	sete	r11b
0x4137ff:	test	r10b, r11b
0x413802:	jne	0x4137dd
0x413804:	jmp	0x413810
0x413806:	cmp	byte ptr [r8 - 1], 0x2f
0x41380b:	je	0x413815
0x41380d:	dec	r8
0x413810:	cmp	r8, rdi
0x413813:	ja	0x413806
0x413815:	mov	rax, r8
0x413818:	ret	
0x413819:	endbr64	
0x41381d:	mov	rax, qword ptr [rdi]
0x413820:	mov	rdx, qword ptr [rsi]
0x413823:	mov	eax, dword ptr [rax]
0x413825:	sub	eax, dword ptr [rdx]
0x413827:	ret	
0x413828:	endbr64	
0x41382c:	mov	eax, dword ptr [rdi + 4]
0x41382f:	mov	edx, dword ptr [rsi + 4]
0x413832:	sub	rax, rdx
0x413835:	test	rax, rax
0x413838:	jne	0x413854
0x41383a:	mov	eax, dword ptr [rdi]
0x41383c:	mov	ecx, dword ptr [rsi]
0x41383e:	sub	rax, rcx
0x413841:	test	rax, rax
0x413844:	je	0x413862
0x413846:	setg	sil
0x41384a:	movzx	edi, sil
0x41384e:	lea	eax, [rdi + rdi - 1]
0x413852:	jmp	0x413862
0x413854:	setg	r8b
0x413858:	movzx	r9d, r8b
0x41385c:	lea	eax, [r9 + r9 - 1]
0x413861:	ret	
0x413862:	neg	eax
0x413864:	ret	
0x413865:	endbr64	
0x413869:	ret	
0x41386a:	endbr64	
0x41386e:	ret	
0x41386f:	endbr64	
0x413873:	mov	qword ptr [rip + 0xd2c52], 0
0x41387e:	mov	qword ptr [rip + 0xd2c3f], 0
0x413889:	ret	
0x41388a:	endbr64	
0x41388e:	xor	eax, eax
0x413890:	ret	
0x413891:	nop	
0x413892:	endbr64	
0x413896:	mov	eax, 1
0x41389b:	ret	
0x41389c:	endbr64	
0x4138a0:	mov	eax, 2
0x4138a5:	ret	
0x4138a6:	endbr64	
0x4138aa:	mov	eax, 4
0x4138af:	ret	
0x4138b0:	mov	rdx, qword ptr [rdi + 8]
0x4138b4:	mov	rax, qword ptr [rdi]
0x4138b7:	cmp	rax, rdx
0x4138ba:	jae	0x4138cb
0x4138bc:	cmp	qword ptr [rax], 1
0x4138c0:	ja	0x4138d1
0x4138c2:	add	rax, 0x10
0x4138c6:	mov	qword ptr [rdi], rax
0x4138c9:	jmp	0x4138b4
0x4138cb:	xorps	xmm0, xmm0
0x4138ce:	movups	xmmword ptr [rdi], xmm0
0x4138d1:	ret	
0x4138d2:	sub	rsp, 0x18
0x4138d6:	mov	rax, qword ptr [rdi + 8]
0x4138da:	mov	rdx, qword ptr [rdi]
0x4138dd:	mov	rdi, rsp
0x4138e0:	shl	rax, 4
0x4138e4:	movq	xmm0, rdx
0x4138e9:	add	rax, rdx
0x4138ec:	movq	xmm1, rax
0x4138f1:	punpcklqdq	xmm0, xmm1
0x4138f5:	movaps	xmmword ptr [rsp], xmm0
0x4138f9:	call	0x4138b0
0x4138fe:	mov	rax, qword ptr [rsp]
0x413902:	mov	rdx, qword ptr [rsp + 8]
0x413907:	add	rsp, 0x18
0x41390b:	ret	
0x41390c:	endbr64	
0x413910:	ret	
0x413911:	endbr64	
0x413915:	mov	eax, edi
0x413917:	sub	eax, esi
0x413919:	ret	
0x41391a:	endbr64	
0x41391e:	mov	rdi, qword ptr [rdi + 8]
0x413922:	jmp	0x403830
0x413927:	nop	
0x413928:	endbr64	
0x41392c:	push	rbp
0x41392d:	mov	rbp, rdi
0x413930:	add	rdi, 8
0x413934:	push	rbx
0x413935:	sub	rsp, 0x18
0x413939:	mov	qword ptr [rdi - 8], 0x4c81b0
0x413941:	call	0x4138d2
0x413946:	mov	qword ptr [rsp], rax
0x41394a:	mov	qword ptr [rsp + 8], rdx
0x41394f:	mov	rbx, qword ptr [rsp]
0x413953:	test	rbx, rbx
0x413956:	je	0x413981
0x413958:	mov	rdi, qword ptr [rbx]
0x41395b:	call	0x403830
0x413960:	mov	rdi, qword ptr [rbx + 8]
0x413964:	test	rdi, rdi
0x413967:	je	0x41396f
0x413969:	mov	rax, qword ptr [rdi]
0x41396c:	call	qword ptr [rax + 8]
0x41396f:	add	rbx, 0x10
0x413973:	mov	rdi, rsp
0x413976:	mov	qword ptr [rsp], rbx
0x41397a:	call	0x4138b0
0x41397f:	jmp	0x41394f
0x413981:	cmp	qword ptr [rsp + 8], 0
0x413987:	jne	0x413958
0x413989:	mov	rdi, qword ptr [rbp + 8]
0x41398d:	add	rsp, 0x18
0x413991:	pop	rbx
0x413992:	pop	rbp
0x413993:	jmp	0x403830
0x413998:	endbr64	
0x41399c:	push	rbp
0x41399d:	mov	rbp, rdi
0x4139a0:	push	rbx
0x4139a1:	xor	ebx, ebx
0x4139a3:	push	rcx
0x4139a4:	mov	qword ptr [rdi], 0x4c8150
0x4139ab:	mov	rdi, qword ptr [rbp + 8]
0x4139af:	test	rdi, rdi
0x4139b2:	je	0x4139e6
0x4139b4:	cmp	ebx, dword ptr [rdi + 4]
0x4139b7:	jae	0x4139cf
0x4139b9:	mov	eax, ebx
0x4139bb:	mov	rdi, qword ptr [rdi + rax*8 + 8]
0x4139c0:	test	rdi, rdi
0x4139c3:	je	0x4139cb
0x4139c5:	mov	rdx, qword ptr [rdi]
0x4139c8:	call	qword ptr [rdx + 8]
0x4139cb:	inc	ebx
0x4139cd:	jmp	0x4139ab
0x4139cf:	cmp	byte ptr [rdi + 3], 0
0x4139d3:	jns	0x4139de
0x4139d5:	mov	dword ptr [rdi + 4], 0
0x4139dc:	jmp	0x4139e6
0x4139de:	pop	rdx
0x4139df:	pop	rbx
0x4139e0:	pop	rbp
0x4139e1:	jmp	0x403830
0x4139e6:	pop	rax
0x4139e7:	pop	rbx
0x4139e8:	pop	rbp
0x4139e9:	ret	
0x4139ea:	push	r15
0x4139ec:	push	r14
0x4139ee:	push	r13
0x4139f0:	push	r12
0x4139f2:	mov	r12, rdi
0x4139f5:	mov	edi, 0x2000
0x4139fa:	push	rbp
0x4139fb:	mov	rbp, rsi
0x4139fe:	push	rbx
0x4139ff:	sub	rsp, 0x138
0x413a06:	call	0x42db10
0x413a0b:	xor	esi, esi
0x413a0d:	mov	rdi, r12
0x413a10:	mov	r13, rax
0x413a13:	xor	eax, eax
0x413a15:	call	0x403db0
0x413a1a:	xor	esi, esi
0x413a1c:	mov	rdi, rbp
0x413a1f:	mov	r12d, eax
0x413a22:	xor	eax, eax
0x413a24:	call	0x403db0
0x413a29:	mov	ebp, eax
0x413a2b:	or	eax, r12d
0x413a2e:	js	0x413af7
0x413a34:	lea	rsi, [rsp + 0xa0]
0x413a3c:	mov	edi, r12d
0x413a3f:	call	0x403ef0
0x413a44:	test	eax, eax
0x413a46:	js	0x413af7
0x413a4c:	lea	rsi, [rsp + 0x10]
0x413a51:	mov	edi, ebp
0x413a53:	call	0x403ef0
0x413a58:	test	eax, eax
0x413a5a:	js	0x413af7
0x413a60:	mov	rbx, qword ptr [rsp + 0xd0]
0x413a68:	cmp	rbx, qword ptr [rsp + 0x40]
0x413a6d:	jne	0x413af7
0x413a73:	test	rbx, rbx
0x413a76:	je	0x413adc
0x413a78:	cmp	ebx, 0x1001
0x413a7e:	mov	r14d, 0x1000
0x413a84:	mov	rsi, r13
0x413a87:	mov	edi, r12d
0x413a8a:	cmovl	r14, rbx
0x413a8e:	mov	ecx, 0x2000
0x413a93:	mov	rdx, r14
0x413a96:	movsxd	r15, r14d
0x413a99:	call	0x403900
0x413a9e:	cmp	r15, rax
0x413aa1:	jne	0x413af7
0x413aa3:	lea	rsi, [r13 + 0x1000]
0x413aaa:	mov	ecx, 0x1000
0x413aaf:	mov	rdx, r14
0x413ab2:	mov	edi, ebp
0x413ab4:	mov	qword ptr [rsp + 8], rsi
0x413ab9:	call	0x403900
0x413abe:	cmp	r15, rax
0x413ac1:	jne	0x413af7
0x413ac3:	mov	rsi, qword ptr [rsp + 8]
0x413ac8:	mov	rdx, r14
0x413acb:	mov	rdi, r13
0x413ace:	call	0x403b70
0x413ad3:	test	eax, eax
0x413ad5:	jne	0x413af7
0x413ad7:	sub	rbx, r14
0x413ada:	jmp	0x413a73
0x413adc:	mov	rdi, r13
0x413adf:	call	0x403830
0x413ae4:	mov	edi, r12d
0x413ae7:	call	0x403b00
0x413aec:	mov	edi, ebp
0x413aee:	call	0x403b00
0x413af3:	mov	al, 1
0x413af5:	jmp	0x413b10
0x413af7:	mov	rdi, r13
0x413afa:	call	0x403830
0x413aff:	mov	edi, r12d
0x413b02:	call	0x403b00
0x413b07:	mov	edi, ebp
0x413b09:	call	0x403b00
0x413b0e:	xor	eax, eax
0x413b10:	add	rsp, 0x138
0x413b17:	pop	rbx
0x413b18:	pop	rbp
0x413b19:	pop	r12
0x413b1b:	pop	r13
0x413b1d:	pop	r14
0x413b1f:	pop	r15
0x413b21:	ret	
0x413b22:	push	r14
0x413b24:	mov	r14, rdx
0x413b27:	push	r13
0x413b29:	mov	r13, rsi
0x413b2c:	push	r12
0x413b2e:	mov	r12d, r8d
0x413b31:	push	rbp
0x413b32:	push	rbx
0x413b33:	mov	rbx, rdi
0x413b36:	sub	rsp, 0x10
0x413b3a:	test	ecx, ecx
0x413b3c:	je	0x413b6b
0x413b3e:	mov	rdi, rdx
0x413b41:	mov	esi, 0x45b67c
0x413b46:	call	0x403dd0
0x413b4b:	mov	rbp, rax
0x413b4e:	mov	rdi, rax
0x413b51:	call	0x43c4b0
0x413b56:	mov	edi, 0xa
0x413b5b:	mov	rsi, rbp
0x413b5e:	call	0x403b30
0x413b63:	mov	rdi, rbp
0x413b66:	call	0x4039c0
0x413b6b:	cmp	r12d, 1
0x413b6f:	mov	rsi, qword ptr [rbx]
0x413b72:	mov	edi, 2
0x413b77:	sbb	r12d, r12d
0x413b7a:	xor	edx, edx
0x413b7c:	call	0x4353a0
0x413b81:	mov	r8, r13
0x413b84:	lea	rcx, [rbx + 8]
0x413b88:	mov	r9, r14
0x413b8b:	push	rsi
0x413b8c:	mov	rbp, rax
0x413b8f:	and	r12d, 0xfffffd00
0x413b96:	mov	rdx, qword ptr [rbx]
0x413b99:	add	r12d, 0x303
0x413ba0:	mov	rdi, rbp
0x413ba3:	mov	esi, r12d
0x413ba6:	lea	rax, [rsp + 0x10]
0x413bab:	push	rax
0x413bac:	call	0x435470
0x413bb1:	pop	rdi
0x413bb2:	pop	r8
0x413bb4:	mov	r13, rax
0x413bb7:	test	rax, rax
0x413bba:	je	0x413be6
0x413bbc:	call	0x403890
0x413bc1:	mov	esi, dword ptr [rsp + 8]
0x413bc5:	mov	rdx, qword ptr [rbx]
0x413bc8:	mov	rcx, r13
0x413bcb:	mov	edi, 0x4be779
0x413bd0:	test	esi, esi
0x413bd2:	mov	dword ptr [rax], esi
0x413bd4:	mov	esi, 0x4be75e
0x413bd9:	cmove	rsi, rdi
0x413bdd:	xor	edi, edi
0x413bdf:	xor	eax, eax
0x413be1:	call	0x43f5d0
0x413be6:	lea	rdx, [rsp + 0xc]
0x413beb:	mov	esi, 1
0x413bf0:	mov	rdi, rbp
0x413bf3:	xor	ebx, ebx
0x413bf5:	call	0x42b429
0x413bfa:	test	eax, eax
0x413bfc:	je	0x413c19
0x413bfe:	mov	ecx, dword ptr [rsp + 0xc]
0x413c02:	mov	ebx, 1
0x413c07:	movzx	edx, ch
0x413c0a:	test	ch, 0xff
0x413c0d:	je	0x413c19
0x413c0f:	xor	ebx, ebx
0x413c11:	cmp	edx, 4
0x413c14:	sete	bl
0x413c17:	add	ebx, ebx
0x413c19:	mov	rdi, rbp
0x413c1c:	call	0x42b493
0x413c21:	add	rsp, 0x10
0x413c25:	mov	eax, ebx
0x413c27:	pop	rbx
0x413c28:	pop	rbp
0x413c29:	pop	r12
0x413c2b:	pop	r13
0x413c2d:	pop	r14
0x413c2f:	ret	
0x413c30:	endbr64	
0x413c34:	dec	edi
0x413c36:	jne	0x413c5b
0x413c38:	push	rbx
0x413c39:	mov	rdi, qword ptr [rsi]
0x413c3c:	mov	rbx, rsi
0x413c3f:	cmp	byte ptr [rdi], 0x2f
0x413c42:	je	0x413c48
0x413c44:	xor	eax, eax
0x413c46:	jmp	0x413c59
0x413c48:	mov	esi, 4
0x413c4d:	call	0x403dc0
0x413c52:	test	eax, eax
0x413c54:	jne	0x413c44
0x413c56:	mov	rax, qword ptr [rbx]
0x413c59:	pop	rbx
0x413c5a:	ret	
0x413c5b:	xor	eax, eax
0x413c5d:	ret	
0x413c5e:	endbr64	
0x413c62:	xor	eax, eax
0x413c64:	cmp	edi, 2
0x413c67:	jne	0x413c8e
0x413c69:	push	rbx
0x413c6a:	mov	rdi, qword ptr [rsi]
0x413c6d:	mov	rbx, rsi
0x413c70:	cmp	byte ptr [rdi], 0x2f
0x413c73:	jne	0x413c88
0x413c75:	mov	esi, 4
0x413c7a:	call	0x403dc0
0x413c7f:	test	eax, eax
0x413c81:	jne	0x413c88
0x413c83:	mov	rax, qword ptr [rbx]
0x413c86:	jmp	0x413c8c
0x413c88:	mov	rax, qword ptr [rbx + 8]
0x413c8c:	pop	rbx
0x413c8d:	ret	
0x413c8e:	ret	
0x413c8f:	endbr64	
0x413c93:	lea	eax, [rdi - 2]
0x413c96:	cmp	eax, 1
0x413c99:	ja	0x413cce
0x413c9b:	push	rbp
0x413c9c:	mov	ebp, edi
0x413c9e:	push	rbx
0x413c9f:	mov	rbx, rsi
0x413ca2:	push	rcx
0x413ca3:	mov	rdi, qword ptr [rsi]
0x413ca6:	cmp	byte ptr [rdi], 0x2f
0x413ca9:	jne	0x413cbf
0x413cab:	mov	esi, 4
0x413cb0:	call	0x403dc0
0x413cb5:	test	eax, eax
0x413cb7:	jne	0x413cbf
0x413cb9:	mov	rax, qword ptr [rbx + 8]
0x413cbd:	jmp	0x413cca
0x413cbf:	xor	eax, eax
0x413cc1:	cmp	ebp, 3
0x413cc4:	jne	0x413cca
0x413cc6:	mov	rax, qword ptr [rbx + 0x10]
0x413cca:	pop	rdx
0x413ccb:	pop	rbx
0x413ccc:	pop	rbp
0x413ccd:	ret	
0x413cce:	xor	eax, eax
0x413cd0:	ret	
0x413cd1:	endbr64	
0x413cd5:	push	rbp
0x413cd6:	xor	esi, esi
0x413cd8:	mov	ebp, edi
0x413cda:	call	0x403c00
0x413cdf:	call	0x4134e7
0x413ce4:	call	0x40ac12
0x413ce9:	call	0x403990
0x413cee:	mov	esi, ebp
0x413cf0:	pop	rbp
0x413cf1:	mov	edi, eax
0x413cf3:	jmp	0x403c70
0x413cf8:	endbr64	
0x413cfc:	push	r13
0x413cfe:	push	r12
0x413d00:	push	rbp
0x413d01:	push	rbx
0x413d02:	push	rcx
0x413d03:	cmp	edi, 2
0x413d06:	jne	0x413db8
0x413d0c:	mov	r13, qword ptr [rsi]
0x413d0f:	mov	rbp, rsi
0x413d12:	mov	rdi, r13
0x413d15:	call	0x4383f0
0x413d1a:	mov	rbx, rax
0x413d1d:	test	rax, rax
0x413d20:	jne	0x413d6d
0x413d22:	cmp	byte ptr [rip + 0xcf4fb], 0
0x413d29:	je	0x413d5c
0x413d2b:	mov	rdi, r13
0x413d2e:	call	0x4039e0
0x413d33:	lea	rdi, [rax + 2]
0x413d37:	call	0x42db10
0x413d3c:	mov	r8, r13
0x413d3f:	mov	ecx, 0x4c6ba8
0x413d44:	or	rdx, 0xffffffffffffffff
0x413d48:	mov	r12, rax
0x413d4b:	mov	rdi, rax
0x413d4e:	mov	esi, 1
0x413d53:	xor	eax, eax
0x413d55:	call	0x403f60
0x413d5a:	jmp	0x413dbb
0x413d5c:	mov	rdx, r13
0x413d5f:	mov	esi, 0x4c7058
0x413d64:	xor	edi, edi
0x413d66:	xor	eax, eax
0x413d68:	call	0x43f5d0
0x413d6d:	mov	rdi, rax
0x413d70:	call	0x4039e0
0x413d75:	mov	rbp, qword ptr [rbp + 8]
0x413d79:	mov	r12, rax
0x413d7c:	mov	rdi, rbp
0x413d7f:	add	r12, r12
0x413d82:	call	0x4039e0
0x413d87:	lea	rdi, [r12 + rax + 1]
0x413d8c:	call	0x42db10
0x413d91:	mov	r12, rax
0x413d94:	mov	rdi, rax
0x413d97:	cmp	byte ptr [rbx], 0
0x413d9a:	je	0x413dae
0x413d9c:	inc	rbx
0x413d9f:	mov	byte ptr [rdi], 0x5c
0x413da2:	add	rdi, 2
0x413da6:	mov	al, byte ptr [rbx - 1]
0x413da9:	mov	byte ptr [rdi - 1], al
0x413dac:	jmp	0x413d97
0x413dae:	mov	rsi, rbp
0x413db1:	call	0x4038f0
0x413db6:	jmp	0x413dbb
0x413db8:	xor	r12d, r12d
0x413dbb:	pop	rdx
0x413dbc:	mov	rax, r12
0x413dbf:	pop	rbx
0x413dc0:	pop	rbp
0x413dc1:	pop	r12
0x413dc3:	pop	r13
0x413dc5:	ret	
0x413dc6:	endbr64	
0x413dca:	test	edi, edi
0x413dcc:	je	0x413ddd
0x413dce:	push	rax
0x413dcf:	mov	esi, 0x4c7080
0x413dd4:	xor	edi, edi
0x413dd6:	xor	eax, eax
0x413dd8:	call	0x43f5d0
0x413ddd:	cmp	dword ptr [rip + 0xd225c], 0
0x413de4:	jns	0x413dfb
0x413de6:	mov	rsi, qword ptr [rip + 0xcf443]
0x413ded:	xor	edx, edx
0x413def:	mov	edi, 0x4c70b0
0x413df4:	xor	eax, eax
0x413df6:	jmp	0x42d870
0x413dfb:	xor	eax, eax
0x413dfd:	ret	
0x413dfe:	endbr64	
0x413e02:	push	rax
0x413e03:	mov	edi, 0x4c7130
0x413e08:	call	0x403a20
0x413e0d:	mov	edi, 1
0x413e12:	mov	rsi, rax
0x413e15:	xor	eax, eax
0x413e17:	call	0x403d70
0x413e1c:	mov	edi, 0x4c7158
0x413e21:	call	0x403a20
0x413e26:	mov	edi, 1
0x413e2b:	mov	rsi, rax
0x413e2e:	xor	eax, eax
0x413e30:	call	0x403d70
0x413e35:	mov	rdi, qword ptr [rip + 0xcf224]
0x413e3c:	call	0x403cb0
0x413e41:	xor	eax, eax
0x413e43:	pop	rdx
0x413e44:	ret	
0x413e45:	endbr64	
0x413e49:	push	r12
0x413e4b:	xor	r12d, r12d
0x413e4e:	push	rbp
0x413e4f:	push	rbx
0x413e50:	sub	rsp, 0x20
0x413e54:	cmp	edi, 3
0x413e57:	jne	0x413fc2
0x413e5d:	mov	rbx, rsi
0x413e60:	mov	rsi, qword ptr [rsi + 0x10]
0x413e64:	xor	r9d, r9d
0x413e67:	xor	r8d, r8d
0x413e6a:	xor	ecx, ecx
0x413e6c:	xor	edx, edx
0x413e6e:	lea	rdi, [rsp + 8]
0x413e73:	mov	r12d, 0x4c6bac
0x413e79:	mov	qword ptr [rsp + 8], 0
0x413e82:	mov	dword ptr [rsp + 0x10], 0
0x413e8a:	mov	qword ptr [rsp + 0x18], 0x4c6bc3
0x413e93:	call	0x438670
0x413e98:	xor	edx, edx
0x413e9a:	xor	r9d, r9d
0x413e9d:	xor	r8d, r8d
0x413ea0:	xor	ecx, ecx
0x413ea2:	mov	esi, 0x4c7190
0x413ea7:	lea	rdi, [rsp + 8]
0x413eac:	call	0x438670
0x413eb1:	mov	rdx, qword ptr [rip + 0xd0b30]
0x413eb8:	test	rdx, rdx
0x413ebb:	je	0x413f2c
0x413ebd:	mov	rdi, rdx
0x413ec0:	call	0x42db40
0x413ec5:	mov	r12, qword ptr [rip + 0xd0b1c]
0x413ecc:	mov	rbp, rax
0x413ecf:	mov	rdi, r12
0x413ed2:	call	0x4039e0
0x413ed7:	test	rax, rax
0x413eda:	je	0x413ee9
0x413edc:	cmp	byte ptr [r12 + rax - 1], 0x2f
0x413ee2:	jne	0x413ee9
0x413ee4:	mov	byte ptr [rbp + rax - 1], 0
0x413ee9:	mov	rsi, qword ptr [rip + 0xd0ae0]
0x413ef0:	test	rsi, rsi
0x413ef3:	je	0x413f0b
0x413ef5:	xor	ecx, ecx
0x413ef7:	mov	edx, 0x4c6bac
0x413efc:	mov	rdi, rbp
0x413eff:	xor	eax, eax
0x413f01:	call	0x42d870
0x413f06:	mov	r12, rax
0x413f09:	jmp	0x413f1f
0x413f0b:	xor	edx, edx
0x413f0d:	mov	esi, 0x4c6bac
0x413f12:	mov	rdi, rbp
0x413f15:	xor	eax, eax
0x413f17:	call	0x42d870
0x413f1c:	mov	r12, rax
0x413f1f:	mov	rdi, rbp
0x413f22:	call	0x403830
0x413f27:	mov	edx, 0x45b496
0x413f2c:	xor	r9d, r9d
0x413f2f:	xor	r8d, r8d
0x413f32:	xor	ecx, ecx
0x413f34:	mov	rsi, r12
0x413f37:	lea	rdi, [rsp + 8]
0x413f3c:	call	0x438670
0x413f41:	mov	rsi, qword ptr [rbx + 8]
0x413f45:	xor	ecx, ecx
0x413f47:	mov	edx, 4
0x413f4c:	mov	edi, 0x4e2420
0x413f51:	call	0x439620
0x413f56:	mov	rsi, rax
0x413f59:	test	rax, rax
0x413f5c:	je	0x413f6f
0x413f5e:	mov	rdi, qword ptr [rbx]
0x413f61:	xor	edx, edx
0x413f63:	xor	eax, eax
0x413f65:	call	0x42d870
0x413f6a:	mov	r12, rax
0x413f6d:	jmp	0x413f9e
0x413f6f:	mov	rsi, qword ptr [rbx + 8]
0x413f73:	xor	ecx, ecx
0x413f75:	mov	edx, 4
0x413f7a:	lea	rdi, [rsp + 8]
0x413f7f:	call	0x439620
0x413f84:	mov	r12, rax
0x413f87:	test	rax, rax
0x413f8a:	je	0x413f9e
0x413f8c:	mov	rdi, qword ptr [rbx]
0x413f8f:	mov	rsi, rax
0x413f92:	xor	edx, edx
0x413f94:	xor	eax, eax
0x413f96:	call	0x42d870
0x413f9b:	mov	r12, rax
0x413f9e:	mov	rbp, qword ptr [rsp + 8]
0x413fa3:	test	rbp, rbp
0x413fa6:	je	0x413fc2
0x413fa8:	mov	rdi, qword ptr [rbp]
0x413fac:	mov	rbx, qword ptr [rbp + 8]
0x413fb0:	call	0x403830
0x413fb5:	mov	rdi, rbp
0x413fb8:	mov	rbp, rbx
0x413fbb:	call	0x403830
0x413fc0:	jmp	0x413fa3
0x413fc2:	add	rsp, 0x20
0x413fc6:	mov	rax, r12
0x413fc9:	pop	rbx
0x413fca:	pop	rbp
0x413fcb:	pop	r12
0x413fcd:	ret	
0x413fce:	push	r15
0x413fd0:	push	r14
0x413fd2:	push	r13
0x413fd4:	push	r12
0x413fd6:	push	rbp
0x413fd7:	push	rbx
0x413fd8:	sub	rsp, 0x1c8
0x413fdf:	cmp	qword ptr [r8 + 0x60], 0
0x413fe4:	mov	dword ptr [rsp + 0x10], edi
0x413fe8:	mov	dword ptr [rsp + 0x24], esi
0x413fec:	mov	dword ptr [rsp + 0x38], edx
0x413ff0:	mov	dword ptr [rsp + 0x1c], ecx
0x413ff4:	mov	qword ptr [rsp], r8
0x413ff8:	mov	dword ptr [rsp + 0x20], r9d
0x413ffd:	jne	0x414016
0x413fff:	mov	esi, 0x823
0x414004:	mov	edi, 1
0x414009:	call	0x42d6b0
0x41400e:	mov	rcx, qword ptr [rsp]
0x414012:	mov	qword ptr [rcx + 0x60], rax
0x414016:	mov	rax, qword ptr [rsp]
0x41401a:	cmp	qword ptr [rax + 0x58], 0
0x41401f:	jne	0x414038
0x414021:	mov	esi, 0x35
0x414026:	mov	edi, 1
0x41402b:	call	0x42d6b0
0x414030:	mov	rdx, qword ptr [rsp]
0x414034:	mov	qword ptr [rdx + 0x58], rax
0x414038:	mov	esi, dword ptr [rsp + 0x10]
0x41403c:	mov	ebx, dword ptr [rsp + 0x24]
0x414040:	xor	ebp, ebp
0x414042:	xor	r11d, r11d
0x414045:	mov	qword ptr [rsp + 8], 0
0x41404e:	xor	r8d, r8d
0x414051:	and	esi, 0x200000
0x414057:	and	ebx, 0x1000000
0x41405d:	mov	dword ptr [rsp + 0x28], esi
0x414061:	mov	dword ptr [rsp + 0x2c], ebx
0x414065:	mov	ebx, 0x48baa0
0x41406a:	cmp	dword ptr [rsp + 0x10], 0
0x41406f:	mov	eax, dword ptr [rbx + 0x3c]
0x414072:	je	0x414080
0x414074:	mov	edi, dword ptr [rsp + 0x10]
0x414078:	and	edi, eax
0x41407a:	cmp	edi, dword ptr [rsp + 0x10]
0x41407e:	je	0x41408a
0x414080:	test	dword ptr [rsp + 0x38], eax
0x414084:	je	0x414909
0x41408a:	test	dword ptr [rsp + 0x24], eax
0x41408e:	jne	0x414909
0x414094:	bt	eax, 0x13
0x414098:	jae	0x4140a6
0x41409a:	test	eax, 0x303fff
0x41409f:	jne	0x4140bf
0x4140a1:	jmp	0x414909
0x4140a6:	cmp	dword ptr [rsp + 0x28], 0
0x4140ab:	je	0x4140bf
0x4140ad:	and	eax, 0x3fff
0x4140b2:	je	0x4140bf
0x4140b4:	cmp	eax, 0x3fff
0x4140b9:	jne	0x414909
0x4140bf:	mov	r8, qword ptr [rsp]
0x4140c3:	mov	r9, qword ptr [rsp + 8]
0x4140c8:	add	r9, qword ptr [r8 + 0x60]
0x4140cc:	mov	r8b, 1
0x4140cf:	cmp	byte ptr [r9], 0
0x4140d3:	jne	0x414909
0x4140d9:	mov	byte ptr [r9], 1
0x4140dd:	mov	rdi, qword ptr [rbx + 8]
0x4140e1:	test	rdi, rdi
0x4140e4:	jne	0x4140f6
0x4140e6:	cmp	dword ptr [rsp + 0x2c], 0
0x4140eb:	jne	0x414909
0x4140f1:	mov	edi, 0x4c82e0
0x4140f6:	call	0x403a20
0x4140fb:	movzx	r10d, word ptr [rbx + 0x30]
0x414100:	mov	r15, rax
0x414103:	cmp	r10w, 0x822
0x414109:	ja	0x414225
0x41410f:	movzx	r11d, r10w
0x414113:	imul	r12, r11, 0x60
0x414117:	cmp	qword ptr [r12 + 0x48baa8], 0
0x414120:	je	0x414225
0x414126:	cmp	qword ptr [rbx + 8], 0
0x41412b:	jne	0x4141df
0x414131:	mov	r13, qword ptr [rbx + 0x20]
0x414135:	mov	r12, qword ptr [r12 + 0x48baa0]
0x41413d:	test	r13, r13
0x414140:	je	0x4141a7
0x414142:	mov	r14, qword ptr [rbx + 0x28]
0x414146:	test	r14, r14
0x414149:	je	0x414191
0x41414b:	mov	edi, 0x4c71e0
0x414150:	call	0x403a20
0x414155:	mov	r9, r12
0x414158:	mov	ecx, 0x100
0x41415d:	mov	edx, 1
0x414162:	mov	r8, rax
0x414165:	push	rax
0x414166:	mov	esi, 0x100
0x41416b:	xor	eax, eax
0x41416d:	push	r14
0x41416f:	push	r12
0x414171:	push	r13
0x414173:	lea	rdi, [rsp + 0xe0]
0x41417b:	call	0x403820
0x414180:	add	rsp, 0x20
0x414184:	lea	r15, [rsp + 0xc0]
0x41418c:	jmp	0x414225
0x414191:	mov	edi, 0x4c6bce
0x414196:	call	0x403a20
0x41419b:	mov	r9, r12
0x41419e:	push	r15
0x4141a0:	mov	r8, rax
0x4141a3:	push	r13
0x4141a5:	jmp	0x4141fb
0x4141a7:	mov	edi, 0x4c6be0
0x4141ac:	lea	r15, [rsp + 0xc0]
0x4141b4:	call	0x403a20
0x4141b9:	mov	r9, r12
0x4141bc:	mov	ecx, 0x100
0x4141c1:	mov	edx, 1
0x4141c6:	mov	r8, rax
0x4141c9:	mov	esi, 0x100
0x4141ce:	lea	rdi, [rsp + 0xc0]
0x4141d6:	xor	eax, eax
0x4141d8:	call	0x403820
0x4141dd:	jmp	0x414225
0x4141df:	mov	r13, qword ptr [r12 + 0x48baa0]
0x4141e7:	mov	edi, 0x4c6bdc
0x4141ec:	call	0x403a20
0x4141f1:	push	r14
0x4141f3:	mov	r9, r15
0x4141f6:	push	r13
0x4141f8:	mov	r8, rax
0x4141fb:	lea	rdi, [rsp + 0xd0]
0x414203:	mov	ecx, 0x100
0x414208:	mov	edx, 1
0x41420d:	xor	eax, eax
0x41420f:	mov	esi, 0x100
0x414214:	call	0x403820
0x414219:	pop	r12
0x41421b:	pop	r13
0x41421d:	lea	r15, [rsp + 0xc0]
0x414225:	cmp	qword ptr [rbx + 0x18], 0
0x41422a:	je	0x4142a6
0x41422c:	lea	r13, [rsp + 0xc0]
0x414234:	mov	edi, 0x4c82a0
0x414239:	cmp	r15, r13
0x41423c:	jne	0x414275
0x41423e:	call	0x403a20
0x414243:	mov	rdi, r15
0x414246:	mov	r12, rax
0x414249:	call	0x4039e0
0x41424e:	mov	esi, 0x100
0x414253:	mov	r9, r12
0x414256:	or	rcx, 0xffffffffffffffff
0x41425a:	sub	rsi, rax
0x41425d:	lea	rdi, [r15 + rax]
0x414261:	mov	r8d, 0x4c6bee
0x414267:	xor	eax, eax
0x414269:	mov	edx, 1
0x41426e:	call	0x403820
0x414273:	jmp	0x4142a6
0x414275:	call	0x403a20
0x41427a:	mov	r8d, 0x4c6bec
0x414280:	mov	ecx, 0x100
0x414285:	mov	rdi, r13
0x414288:	push	r9
0x41428a:	mov	edx, 1
0x41428f:	mov	r9, r15
0x414292:	mov	esi, 0x100
0x414297:	push	rax
0x414298:	xor	eax, eax
0x41429a:	mov	r15, r13
0x41429d:	call	0x403820
0x4142a2:	pop	r10
0x4142a4:	pop	r11
0x4142a6:	mov	esi, 9
0x4142ab:	mov	rdi, r15
0x4142ae:	call	0x403a40
0x4142b3:	test	rax, rax
0x4142b6:	je	0x4142c7
0x4142b8:	mov	r12d, eax
0x4142bb:	mov	r13, r15
0x4142be:	sub	r12d, r15d
0x4142c1:	lea	r15, [rax + 1]
0x4142c5:	jmp	0x4142d5
0x4142c7:	mov	r13, qword ptr [rbx]
0x4142ca:	mov	rdi, r13
0x4142cd:	call	0x4039e0
0x4142d2:	mov	r12d, eax
0x4142d5:	mov	rcx, qword ptr [rsp]
0x4142d9:	cmp	dword ptr [rcx + 0x1578], 0
0x4142e0:	jne	0x414698
0x4142e6:	movzx	esi, word ptr [rbx + 0x42]
0x4142ea:	mov	edi, dword ptr [rsp + 8]
0x4142ee:	xor	r15d, r15d
0x4142f1:	cmp	si, -1
0x4142f5:	je	0x4142ff
0x4142f7:	mov	r15, qword ptr [rsp]
0x4142fb:	lea	r15, [r15 + rsi]
0x4142ff:	cmp	r12d, 0x1c
0x414303:	ja	0x414319
0x414305:	mov	word ptr [rsp + 0xc0], 0x909
0x41430f:	mov	byte ptr [rsp + 0xc2], 0
0x414317:	jmp	0x414323
0x414319:	mov	word ptr [rsp + 0xc0], 9
0x414323:	mov	eax, dword ptr [rbx + 0x3c]
0x414326:	test	r15, r15
0x414329:	je	0x414597
0x41432f:	mov	r9d, dword ptr [rbx + 0x48]
0x414333:	cmp	r9d, 7
0x414337:	je	0x414597
0x41433d:	mov	r14d, eax
0x414340:	and	r14d, 0x3fff
0x414347:	je	0x414411
0x41434d:	mov	r8d, dword ptr [rsp + 0x20]
0x414352:	and	r8d, r14d
0x414355:	jne	0x414411
0x41435b:	mov	edi, 0x4c6bf3
0x414360:	mov	dword ptr [rsp + 0x30], r8d
0x414365:	mov	r15, rbp
0x414368:	mov	rbp, rbx
0x41436b:	call	0x403a20
0x414370:	mov	edx, 0x100
0x414375:	lea	rdi, [rsp + 0xc0]
0x41437d:	mov	rsi, rax
0x414380:	call	0x4037e0
0x414385:	xor	ecx, ecx
0x414387:	mov	r11d, dword ptr [rsp + 0x30]
0x41438c:	mov	rbx, rcx
0x41438f:	mov	eax, r14d
0x414392:	mov	ecx, ebx
0x414394:	shr	eax, cl
0x414396:	test	al, 1
0x414398:	je	0x4143de
0x41439a:	lea	r10d, [r11 + 1]
0x41439e:	mov	dword ptr [rsp + 0x30], r10d
0x4143a3:	test	r11d, r11d
0x4143a6:	je	0x4143bf
0x4143a8:	mov	edx, 0x100
0x4143ad:	mov	esi, 0x4cd62a
0x4143b2:	lea	rdi, [rsp + 0xc0]
0x4143ba:	call	0x4037e0
0x4143bf:	mov	rsi, qword ptr [rbx*8 + 0x4c8220]
0x4143c7:	mov	edx, 0x100
0x4143cc:	lea	rdi, [rsp + 0xc0]
0x4143d4:	call	0x4037e0
0x4143d9:	mov	r11d, dword ptr [rsp + 0x30]
0x4143de:	inc	rbx
0x4143e1:	cmp	rbx, 0xe
0x4143e5:	jne	0x41438f
0x4143e7:	mov	edx, 0x100
0x4143ec:	mov	esi, 0x4cd8a0
0x4143f1:	lea	rdi, [rsp + 0xc0]
0x4143f9:	mov	rbx, rbp
0x4143fc:	call	0x4037e0
0x414401:	mov	rbp, r15
0x414404:	lea	r15, [rsp + 0xc0]
0x41440c:	jmp	0x414698
0x414411:	bt	eax, 0x16
0x414415:	jae	0x4145a9
0x41441b:	cmp	r9d, 5
0x41441f:	jne	0x414472
0x414421:	mov	r14, qword ptr [r15]
0x414424:	lea	r15, [rsp + 0xc0]
0x41442c:	test	r14, r14
0x41442f:	je	0x414698
0x414435:	lea	rdi, [rsp + 0xc0]
0x41443d:	lea	r15, [rsp + 0xc0]
0x414445:	call	0x4039e0
0x41444a:	lea	r8, [rsp + 0xc0]
0x414452:	mov	esi, 0x100
0x414457:	mov	rcx, r14
0x41445a:	sub	rsi, rax
0x41445d:	lea	rdi, [r8 + rax]
0x414461:	mov	edx, 0x4c6bf0
0x414466:	xor	eax, eax
0x414468:	call	0x403a50
0x41446d:	jmp	0x414698
0x414472:	cmp	r9d, 6
0x414476:	jne	0x414507
0x41447c:	mov	qword ptr [rsp + 0x40], 0
0x414485:	movzx	esi, word ptr [rbx + 0x44]
0x414489:	mov	rdi, r15
0x41448c:	imul	rax, rsi, 0x30
0x414490:	lea	r14, [rax + 0x48ad60]
0x414497:	call	qword ptr [rax + 0x48ad88]
0x41449d:	mov	ecx, dword ptr [rsp + 0x20]
0x4144a1:	mov	rdi, qword ptr [r14 + 0x10]
0x4144a5:	lea	rsi, [rsp + 0x40]
0x4144aa:	mov	edx, eax
0x4144ac:	call	0x436bc0
0x4144b1:	cmp	qword ptr [rsp + 0x40], 0
0x4144b7:	jne	0x4144c8
0x4144b9:	mov	edi, 0x4c6c02
0x4144be:	call	0x403a20
0x4144c3:	mov	qword ptr [rsp + 0x40], rax
0x4144c8:	lea	rdi, [rsp + 0xc0]
0x4144d0:	lea	r15, [rsp + 0xc0]
0x4144d8:	call	0x4039e0
0x4144dd:	mov	rcx, qword ptr [rsp + 0x40]
0x4144e2:	mov	esi, 0x100
0x4144e7:	lea	r9, [rsp + 0xc0]
0x4144ef:	sub	rsi, rax
0x4144f2:	lea	rdi, [r9 + rax]
0x4144f6:	mov	edx, 0x4c6bf0
0x4144fb:	xor	eax, eax
0x4144fd:	call	0x403a50
0x414502:	jmp	0x414698
0x414507:	test	byte ptr [rbx + 0x41], 4
0x41450b:	je	0x414559
0x41450d:	mov	edi, 0x4c6c0c
0x414512:	mov	r15, qword ptr [r15]
0x414515:	call	0x403a20
0x41451a:	lea	rdi, [rsp + 0xc0]
0x414522:	mov	r14, rax
0x414525:	call	0x4039e0
0x41452a:	lea	rcx, [rsp + 0xc0]
0x414532:	mov	r8, r15
0x414535:	or	rdx, 0xffffffffffffffff
0x414539:	lea	rdi, [rcx + rax]
0x41453d:	mov	esi, 1
0x414542:	mov	rcx, r14
0x414545:	xor	eax, eax
0x414547:	call	0x403f60
0x41454c:	lea	r15, [rsp + 0xc0]
0x414554:	jmp	0x414698
0x414559:	lea	rdi, [rsp + 0xc0]
0x414561:	call	0x4039e0
0x414566:	mov	r8d, dword ptr [r15]
0x414569:	mov	ecx, 0x4c4266
0x41456e:	lea	rdx, [rsp + 0xc0]
0x414576:	lea	rdi, [rdx + rax]
0x41457a:	mov	esi, 1
0x41457f:	or	rdx, 0xffffffffffffffff
0x414583:	xor	eax, eax
0x414585:	call	0x403f60
0x41458a:	lea	r15, [rsp + 0xc0]
0x414592:	jmp	0x414698
0x414597:	bt	eax, 0x16
0x41459b:	lea	r15, [rsp + 0xc0]
0x4145a3:	jb	0x414698
0x4145a9:	movzx	r14d, word ptr [rbx + 0x30]
0x4145ae:	cmp	r14w, 0x822
0x4145b4:	ja	0x414611
0x4145b6:	mov	r15, qword ptr [rbx + 0x20]
0x4145ba:	test	r15, r15
0x4145bd:	jne	0x4145c5
0x4145bf:	mov	r15d, 0x4c4893
0x4145c5:	lea	rdi, [rsp + 0xc0]
0x4145cd:	call	0x4039e0
0x4145d2:	movsxd	rdi, r14d
0x4145d5:	mov	r9, r15
0x4145d8:	mov	ecx, 0x4c43af
0x4145dd:	imul	r10, rdi, 0x60
0x4145e1:	or	rdx, 0xffffffffffffffff
0x4145e5:	lea	r11, [rsp + 0xc0]
0x4145ed:	mov	esi, 1
0x4145f2:	lea	rdi, [r11 + rax]
0x4145f6:	xor	eax, eax
0x4145f8:	lea	r15, [rsp + 0xc0]
0x414600:	mov	r8, qword ptr [r10 + 0x48baa0]
0x414607:	call	0x403f60
0x41460c:	jmp	0x414698
0x414611:	cmp	r14w, 0x825
0x414617:	jne	0x41463a
0x414619:	mov	edx, 0x100
0x41461e:	mov	esi, 0x4c6c17
0x414623:	lea	rdi, [rsp + 0xc0]
0x41462b:	call	0x4037e0
0x414630:	lea	r15, [rsp + 0xc0]
0x414638:	jmp	0x414698
0x41463a:	mov	rdx, qword ptr [rsp]
0x41463e:	mov	esi, dword ptr [rsp + 0x20]
0x414642:	call	0x430c00
0x414647:	test	eax, eax
0x414649:	jle	0x414674
0x41464b:	mov	edi, 0x4c6c21
0x414650:	lea	r15, [rsp + 0xc0]
0x414658:	call	0x403a20
0x41465d:	mov	edx, 0x100
0x414662:	lea	rdi, [rsp + 0xc0]
0x41466a:	mov	rsi, rax
0x41466d:	call	0x4037e0
0x414672:	jmp	0x414698
0x414674:	lea	r15, [rsp + 0xc0]
0x41467c:	jne	0x414698
0x41467e:	mov	edi, 0x4c6c2b
0x414683:	call	0x403a20
0x414688:	mov	edx, 0x100
0x41468d:	mov	rdi, r15
0x414690:	mov	rsi, rax
0x414693:	call	0x4037e0
0x414698:	mov	edx, dword ptr [rbx + 0x5c]
0x41469b:	cmp	edx, -1
0x41469e:	je	0x4146eb
0x4146a0:	push	rsi
0x4146a1:	mov	r8d, 0x4c6c36
0x4146a7:	mov	ecx, 0x80
0x4146ac:	xor	eax, eax
0x4146ae:	push	rdx
0x4146af:	mov	r9d, dword ptr [rbx + 0x58]
0x4146b3:	mov	edx, 1
0x4146b8:	mov	esi, 0x80
0x4146bd:	lea	rdi, [rsp + 0x50]
0x4146c2:	call	0x403820
0x4146c7:	lea	rsi, [rsp + 0x50]
0x4146cc:	mov	rdi, r13
0x4146cf:	xor	edx, edx
0x4146d1:	xor	eax, eax
0x4146d3:	call	0x42d870
0x4146d8:	lea	rdi, [rsp + 0x50]
0x4146dd:	mov	r13, rax
0x4146e0:	call	0x4039e0
0x4146e5:	pop	rdi
0x4146e6:	pop	r8
0x4146e8:	add	r12d, eax
0x4146eb:	mov	rdi, r15
0x4146ee:	call	0x4039e0
0x4146f3:	mov	r9d, dword ptr [rsp + 0x1c]
0x4146f8:	mov	r8, r13
0x4146fb:	mov	r10d, r12d
0x4146fe:	mov	r13, rbp
0x414701:	mov	r12, rbx
0x414704:	mov	ebp, eax
0x414706:	lea	r14d, [r9 - 3]
0x41470a:	mov	edi, 0x1b
0x41470f:	mov	ecx, r14d
0x414712:	cmp	r10d, edi
0x414715:	cmovae	edi, r10d
0x414719:	sub	ecx, edi
0x41471b:	cmp	dword ptr [rsp + 0x1c], ecx
0x41471f:	jae	0x414723
0x414721:	xor	ecx, ecx
0x414723:	mov	ebx, ebp
0x414725:	cmp	ebp, ecx
0x414727:	jbe	0x414776
0x414729:	xor	eax, eax
0x41472b:	mov	r11d, eax
0x41472e:	mov	dl, byte ptr [r15 + r11]
0x414732:	test	dl, dl
0x414734:	je	0x414776
0x414736:	cmp	ecx, eax
0x414738:	ja	0x41473e
0x41473a:	cmp	ebp, ebx
0x41473c:	jne	0x414776
0x41473e:	lea	esi, [rax + 1]
0x414741:	cmp	dl, 0x20
0x414744:	je	0x414770
0x414746:	and	edx, 0xfffffffd
0x414749:	cmp	dl, 0x2d
0x41474c:	jne	0x414772
0x41474e:	mov	r9d, esi
0x414751:	cmp	byte ptr [r15 + r9], 0x20
0x414756:	je	0x414772
0x414758:	test	eax, eax
0x41475a:	je	0x414772
0x41475c:	dec	eax
0x41475e:	movzx	edi, byte ptr [r15 + rax]
0x414763:	test	byte ptr [rdi + rdi + 0x4bc840], 0x88
0x41476b:	cmovne	ebx, esi
0x41476e:	jmp	0x414772
0x414770:	mov	ebx, eax
0x414772:	mov	eax, esi
0x414774:	jmp	0x41472b
0x414776:	push	rax
0x414777:	mov	ecx, r10d
0x41477a:	mov	edx, 0x1b
0x41477f:	mov	r9d, ebx
0x414782:	push	r15
0x414784:	mov	esi, 0x4c6c3e
0x414789:	mov	edi, 1
0x41478e:	xor	eax, eax
0x414790:	mov	qword ptr [rsp + 0x40], r8
0x414795:	call	0x403d70
0x41479a:	pop	rdx
0x41479b:	pop	rcx
0x41479c:	mov	r8, qword ptr [rsp + 0x30]
0x4147a1:	mov	ecx, ebx
0x4147a3:	add	rcx, r15
0x4147a6:	cmp	byte ptr [rcx], 0x20
0x4147a9:	jne	0x4147af
0x4147ab:	inc	ebx
0x4147ad:	jmp	0x4147a1
0x4147af:	sub	ebp, ebx
0x4147b1:	je	0x4147be
0x4147b3:	xor	r10d, r10d
0x4147b6:	mov	r15, rcx
0x4147b9:	jmp	0x41470a
0x4147be:	mov	rbx, r12
0x4147c1:	mov	r12d, ebp
0x4147c4:	mov	rbp, r13
0x4147c7:	cmp	dword ptr [rbx + 0x48], 6
0x4147cb:	jne	0x4147ef
0x4147cd:	mov	r8, qword ptr [rsp]
0x4147d1:	movzx	r14d, word ptr [rbx + 0x44]
0x4147d6:	add	r14, qword ptr [r8 + 0x58]
0x4147da:	cmp	byte ptr [r14], 2
0x4147de:	je	0x4147ef
0x4147e0:	mov	byte ptr [r14], 1
0x4147e4:	mov	r11b, 1
0x4147e7:	mov	r8b, 1
0x4147ea:	jmp	0x414909
0x4147ef:	mov	dword ptr [rsp + 0x30], r12d
0x4147f4:	mov	r12d, dword ptr [rsp + 8]
0x4147f9:	xor	esi, esi
0x4147fb:	mov	edi, r12d
0x4147fe:	call	0x43c870
0x414803:	mov	r13, rax
0x414806:	test	rax, rax
0x414809:	je	0x414903
0x41480f:	cmp	dword ptr [rax + 4], 0
0x414813:	je	0x414903
0x414819:	test	rbp, rbp
0x41481c:	mov	r11d, dword ptr [rsp + 0x30]
0x414821:	je	0x41484f
0x414823:	mov	r15d, dword ptr [rbp]
0x414827:	mov	r14d, dword ptr [rbp + 4]
0x41482b:	mov	rax, rbp
0x41482e:	and	r15d, 0x7fffffff
0x414835:	cmp	r15d, r14d
0x414838:	jne	0x4148e8
0x41483e:	cmp	byte ptr [rbp + 3], 0
0x414842:	jns	0x41485e
0x414844:	lea	esi, [r14 + 1]
0x414848:	xor	edi, edi
0x41484a:	mov	r15b, 1
0x41484d:	jmp	0x41486c
0x41484f:	xor	edi, edi
0x414851:	xor	r14d, r14d
0x414854:	xor	r15d, r15d
0x414857:	mov	esi, 1
0x41485c:	jmp	0x41486c
0x41485e:	mov	rdi, rbp
0x414861:	xor	r14d, r14d
0x414864:	xor	r15d, r15d
0x414867:	mov	esi, 1
0x41486c:	xor	edx, edx
0x41486e:	mov	qword ptr [rsp + 0x30], rdi
0x414873:	mov	dword ptr [rsp + 0x3c], r11d
0x414878:	call	0x436e30
0x41487d:	mov	rdi, qword ptr [rsp + 0x30]
0x414882:	mov	edx, dword ptr [rsp + 0x3c]
0x414886:	mov	esi, eax
0x414888:	mov	rax, rsi
0x41488b:	shl	rsi, 4
0x41488f:	add	rsi, 8
0x414893:	test	rdi, rdi
0x414896:	je	0x41489b
0x414898:	mov	edx, dword ptr [rdi + 4]
0x41489b:	mov	dword ptr [rsp + 0x3c], eax
0x41489f:	mov	dword ptr [rsp + 0x30], edx
0x4148a3:	call	0x42db80
0x4148a8:	mov	r10d, dword ptr [rsp + 0x3c]
0x4148ad:	mov	esi, dword ptr [rsp + 0x30]
0x4148b1:	and	r10d, 0x7fffffff
0x4148b8:	mov	dword ptr [rax + 4], esi
0x4148bb:	mov	dword ptr [rax], r10d
0x4148be:	test	r15b, r15b
0x4148c1:	je	0x4148e8
0x4148c3:	mov	edi, r14d
0x4148c6:	xor	r9d, r9d
0x4148c9:	shl	rdi, 4
0x4148cd:	cmp	rdi, r9
0x4148d0:	je	0x4148e4
0x4148d2:	movups	xmm0, xmmword ptr [rbp + r9 + 8]
0x4148d8:	movups	xmmword ptr [rax + r9 + 8], xmm0
0x4148de:	add	r9, 0x10
0x4148e2:	jmp	0x4148cd
0x4148e4:	mov	dword ptr [rax + 4], r14d
0x4148e8:	mov	ebp, dword ptr [rax + 4]
0x4148eb:	lea	ecx, [rbp + 1]
0x4148ee:	shl	rbp, 4
0x4148f2:	add	rbp, rax
0x4148f5:	mov	dword ptr [rax + 4], ecx
0x4148f8:	mov	dword ptr [rbp + 8], r12d
0x4148fc:	mov	qword ptr [rbp + 0x10], r13
0x414900:	mov	rbp, rax
0x414903:	mov	r11b, 1
0x414906:	mov	r8b, 1
0x414909:	inc	qword ptr [rsp + 8]
0x41490e:	add	rbx, 0x60
0x414912:	cmp	qword ptr [rsp + 8], 0x823
0x41491b:	jne	0x41406a
0x414921:	test	r8b, r8b
0x414924:	jne	0x414978
0x414926:	mov	r12d, dword ptr [rsp + 0x10]
0x41492b:	xor	ebx, ebx
0x41492d:	mov	edi, 0x4c7210
0x414932:	and	r12d, 0x3fff
0x414939:	je	0x414982
0x41493b:	mov	eax, r12d
0x41493e:	mov	ecx, ebx
0x414940:	shr	eax, cl
0x414942:	test	al, 1
0x414944:	je	0x41496d
0x414946:	mov	r13, qword ptr [rbx*8 + 0x4c8220]
0x41494e:	mov	edi, 0x4c7250
0x414953:	call	0x403a20
0x414958:	mov	edi, 1
0x41495d:	mov	rsi, rax
0x414960:	mov	rdx, r13
0x414963:	mov	rcx, r13
0x414966:	xor	eax, eax
0x414968:	call	0x403d70
0x41496d:	inc	rbx
0x414970:	cmp	rbx, 0xe
0x414974:	jne	0x41493b
0x414976:	jmp	0x414996
0x414978:	test	r11b, r11b
0x41497b:	jne	0x414996
0x41497d:	mov	edi, 0x4c72a8
0x414982:	call	0x403a20
0x414987:	mov	edi, 1
0x41498c:	mov	rsi, rax
0x41498f:	xor	eax, eax
0x414991:	call	0x403d70
0x414996:	mov	rsi, qword ptr [rip + 0xce6c3]
0x41499d:	mov	edi, 0xa
0x4149a2:	mov	r13d, 0x48ad60
0x4149a8:	xor	r12d, r12d
0x4149ab:	call	0x403bf0
0x4149b0:	mov	qword ptr [rsp + 8], rbp
0x4149b5:	mov	rdx, qword ptr [rsp]
0x4149b9:	mov	r10, qword ptr [rdx + 0x58]
0x4149bd:	cmp	byte ptr [r10 + r12], 1
0x4149c2:	jne	0x414a89
0x4149c8:	mov	rdi, qword ptr [r13]
0x4149cc:	test	rdi, rdi
0x4149cf:	je	0x414a89
0x4149d5:	call	0x403a20
0x4149da:	mov	esi, 0x4c6c4d
0x4149df:	mov	edi, 1
0x4149e4:	xor	r15d, r15d
0x4149e7:	mov	rdx, rax
0x4149ea:	xor	eax, eax
0x4149ec:	mov	ebp, 4
0x4149f1:	call	0x403d70
0x4149f6:	mov	ebx, r15d
0x4149f9:	shl	rbx, 4
0x4149fd:	add	rbx, qword ptr [r13 + 0x10]
0x414a01:	mov	rsi, qword ptr [rbx]
0x414a04:	test	rsi, rsi
0x414a07:	je	0x414a72
0x414a09:	mov	rdi, rsi
0x414a0c:	mov	qword ptr [rsp + 0x10], rsi
0x414a11:	call	0x4039e0
0x414a16:	mov	r14, rax
0x414a19:	cmp	ebp, 4
0x414a1c:	jbe	0x414a56
0x414a1e:	lea	ebp, [rbp + rax + 1]
0x414a22:	cmp	ebp, dword ptr [rsp + 0x1c]
0x414a26:	mov	rdx, qword ptr [rsp + 0x10]
0x414a2b:	ja	0x414a40
0x414a2d:	mov	esi, 0x4c6bef
0x414a32:	mov	edi, 1
0x414a37:	xor	eax, eax
0x414a39:	call	0x403d70
0x414a3e:	jmp	0x414a6d
0x414a40:	mov	esi, 0x4c6c51
0x414a45:	mov	edi, 1
0x414a4a:	xor	eax, eax
0x414a4c:	mov	ebp, 4
0x414a51:	call	0x403d70
0x414a56:	mov	rdx, qword ptr [rbx]
0x414a59:	mov	esi, 0x4c6bf0
0x414a5e:	mov	edi, 1
0x414a63:	xor	eax, eax
0x414a65:	add	ebp, r14d
0x414a68:	call	0x403d70
0x414a6d:	inc	r15d
0x414a70:	jmp	0x4149f6
0x414a72:	mov	edi, 0x45b64d
0x414a77:	call	0x403910
0x414a7c:	mov	r9, qword ptr [rsp]
0x414a80:	mov	rdi, qword ptr [r9 + 0x58]
0x414a84:	mov	byte ptr [rdi + r12], 2
0x414a89:	inc	r12
0x414a8c:	add	r13, 0x30
0x414a90:	cmp	r12, 0x35
0x414a94:	jne	0x4149b5
0x414a9a:	mov	r15, qword ptr [rsp + 8]
0x414a9f:	xor	r12d, r12d
0x414aa2:	test	r15, r15
0x414aa5:	je	0x414b41
0x414aab:	cmp	r12d, dword ptr [r15 + 4]
0x414aaf:	jae	0x414b28
0x414ab1:	mov	ebx, r12d
0x414ab4:	mov	edi, 0x4c72f8
0x414ab9:	xor	r14d, r14d
0x414abc:	shl	rbx, 4
0x414ac0:	add	rbx, r15
0x414ac3:	movsxd	r11, dword ptr [rbx + 8]
0x414ac7:	imul	r8, r11, 0x60
0x414acb:	mov	r13, qword ptr [r8 + 0x48baa0]
0x414ad2:	call	0x403a20
0x414ad7:	mov	edi, 1
0x414adc:	mov	rsi, rax
0x414adf:	mov	rdx, r13
0x414ae2:	xor	eax, eax
0x414ae4:	call	0x403d70
0x414ae9:	mov	rax, qword ptr [rbx + 0x10]
0x414aed:	test	rax, rax
0x414af0:	je	0x414b16
0x414af2:	cmp	r14d, dword ptr [rax + 4]
0x414af6:	jae	0x414b16
0x414af8:	mov	ecx, r14d
0x414afb:	mov	esi, 0x4c6bef
0x414b00:	mov	edi, 1
0x414b05:	inc	r14d
0x414b08:	mov	rdx, qword ptr [rax + rcx*8 + 8]
0x414b0d:	xor	eax, eax
0x414b0f:	call	0x403d70
0x414b14:	jmp	0x414ae9
0x414b16:	mov	edi, 0x45b64d
0x414b1b:	inc	r12d
0x414b1e:	call	0x403910
0x414b23:	jmp	0x414aa2
0x414b28:	cmp	byte ptr [r15 + 3], 0
0x414b2d:	jns	0x414b39
0x414b2f:	mov	dword ptr [r15 + 4], 0
0x414b37:	jmp	0x414b41
0x414b39:	mov	rdi, r15
0x414b3c:	call	0x403830
0x414b41:	add	rsp, 0x1c8
0x414b48:	pop	rbx
0x414b49:	pop	rbp
0x414b4a:	pop	r12
0x414b4c:	pop	r13
0x414b4e:	pop	r14
0x414b50:	pop	r15
0x414b52:	ret	
0x414b53:	endbr64	
0x414b57:	mov	rax, rdx
0x414b5a:	or	rax, r8
0x414b5d:	je	0x414ccd
0x414b63:	push	r15
0x414b65:	mov	r15, rdi
0x414b68:	push	r14
0x414b6a:	mov	r14d, ecx
0x414b6d:	push	r13
0x414b6f:	mov	r13, rsi
0x414b72:	push	r12
0x414b74:	mov	r12, rdx
0x414b77:	push	rbp
0x414b78:	push	rbx
0x414b79:	mov	rbx, r8
0x414b7c:	sub	rsp, 0x38
0x414b80:	mov	ebp, dword ptr [rdi]
0x414b82:	test	ebp, ebp
0x414b84:	jne	0x414ba9
0x414b86:	test	rdx, rdx
0x414b89:	je	0x414bb2
0x414b8b:	mov	rdi, rdx
0x414b8e:	call	0x4322e0
0x414b93:	mov	esi, 0x4c439d
0x414b98:	mov	rdi, rax
0x414b9b:	call	0x403be0
0x414ba0:	test	eax, eax
0x414ba2:	jne	0x414bb2
0x414ba4:	jmp	0x414ca4
0x414ba9:	cmp	ebp, 0x13
0x414bac:	jg	0x414c4f
0x414bb2:	inc	ebp
0x414bb4:	mov	dword ptr [r15], ebp
0x414bb7:	test	rbx, rbx
0x414bba:	je	0x414c61
0x414bc0:	xorps	xmm0, xmm0
0x414bc3:	mov	rdi, rbx
0x414bc6:	lea	rsi, [rsp + 0x10]
0x414bcb:	mov	qword ptr [rsp + 0x10], 0
0x414bd4:	mov	dword ptr [rsp + 0x28], 0
0x414bdc:	movups	xmmword ptr [rsp + 0x18], xmm0
0x414be1:	call	0x42b698
0x414be6:	mov	rdi, qword ptr [rsp + 0x10]
0x414beb:	test	eax, eax
0x414bed:	jne	0x414bf8
0x414bef:	call	0x403830
0x414bf4:	xor	ebp, ebp
0x414bf6:	jmp	0x414c02
0x414bf8:	test	rdi, rdi
0x414bfb:	mov	rbp, rdi
0x414bfe:	cmovne	rbx, rdi
0x414c02:	xor	r15d, r15d
0x414c05:	mov	rsi, qword ptr [r15*8 + 0x4c8200]
0x414c0d:	mov	rdi, rsi
0x414c10:	mov	qword ptr [rsp + 8], rsi
0x414c15:	call	0x4039e0
0x414c1a:	mov	rsi, qword ptr [rsp + 8]
0x414c1f:	mov	rdi, rbx
0x414c22:	mov	rdx, rax
0x414c25:	mov	qword ptr [rsp], rax
0x414c29:	call	0x4038d0
0x414c2e:	test	eax, eax
0x414c30:	jne	0x414c56
0x414c32:	mov	rdx, qword ptr [rsp]
0x414c36:	mov	cl, byte ptr [rbx + rdx]
0x414c39:	test	cl, cl
0x414c3b:	je	0x414c42
0x414c3d:	cmp	cl, 0x28
0x414c40:	jne	0x414c56
0x414c42:	test	rbp, rbp
0x414c45:	je	0x414c4f
0x414c47:	mov	rdi, rbp
0x414c4a:	call	0x403830
0x414c4f:	mov	eax, 1
0x414c54:	jmp	0x414cbe
0x414c56:	inc	r15
0x414c59:	cmp	r15, 4
0x414c5d:	jne	0x414c05
0x414c5f:	jmp	0x414cb1
0x414c61:	test	r12, r12
0x414c64:	jne	0x414ca8
0x414c66:	mov	r12d, 0x4c6c57
0x414c6c:	xor	ebp, ebp
0x414c6e:	mov	rbx, r12
0x414c71:	push	rax
0x414c72:	mov	rdi, qword ptr [rip + 0xce427]
0x414c79:	mov	rcx, r13
0x414c7c:	mov	edx, 0x4c6c5b
0x414c81:	push	r14
0x414c83:	mov	r9, r12
0x414c86:	mov	r8, rbx
0x414c89:	mov	esi, 1
0x414c8e:	xor	eax, eax
0x414c90:	call	0x403e90
0x414c95:	pop	rdx
0x414c96:	pop	rcx
0x414c97:	test	rbp, rbp
0x414c9a:	je	0x414ca4
0x414c9c:	mov	rdi, rbp
0x414c9f:	call	0x403830
0x414ca4:	xor	eax, eax
0x414ca6:	jmp	0x414cbe
0x414ca8:	xor	ebp, ebp
0x414caa:	mov	ebx, 0x4c6c57
0x414caf:	jmp	0x414c71
0x414cb1:	test	r12, r12
0x414cb4:	jne	0x414c71
0x414cb6:	mov	r12d, 0x4c6c57
0x414cbc:	jmp	0x414c71
0x414cbe:	add	rsp, 0x38
0x414cc2:	pop	rbx
0x414cc3:	pop	rbp
0x414cc4:	pop	r12
0x414cc6:	pop	r13
0x414cc8:	pop	r14
0x414cca:	pop	r15
0x414ccc:	ret	
0x414ccd:	xor	eax, eax
0x414ccf:	ret	
0x414cd0:	endbr64	
0x414cd4:	test	edx, edx
0x414cd6:	js	0x414d17
0x414cd8:	push	r12
0x414cda:	mov	r12, rsi
0x414cdd:	je	0x414cf1
0x414cdf:	mov	edi, edx
0x414ce1:	call	0x43fbb0
0x414ce6:	mov	r8d, 0x4cd64a
0x414cec:	mov	r9, rax
0x414cef:	jmp	0x414cfa
0x414cf1:	mov	r9d, 0x4c4893
0x414cf7:	mov	r8, r9
0x414cfa:	mov	rcx, r12
0x414cfd:	mov	rdi, qword ptr [rip + 0xce39c]
0x414d04:	xor	eax, eax
0x414d06:	pop	r12
0x414d08:	mov	edx, 0x4c6c6c
0x414d0d:	mov	esi, 1
0x414d12:	jmp	0x403e90
0x414d17:	ret	
0x414d18:	endbr64	
0x414d1c:	push	rbp
0x414d1d:	mov	r8d, 0x4c42ee
0x414d23:	mov	rbp, rsi
0x414d26:	mov	ecx, 0x400
0x414d2b:	mov	edx, 1
0x414d30:	mov	esi, 0x400
0x414d35:	xor	eax, eax
0x414d37:	sub	rsp, 0x400
0x414d3e:	mov	r9, qword ptr [rdi + 8]
0x414d42:	mov	rdi, rsp
0x414d45:	call	0x403820
0x414d4a:	mov	rsi, rsp
0x414d4d:	mov	rdi, rbp
0x414d50:	call	0x430480
0x414d55:	add	rsp, 0x400
0x414d5c:	pop	rbp
0x414d5d:	ret	
0x414d5e:	endbr64	
0x414d62:	push	rbp
0x414d63:	push	rbx
0x414d64:	mov	rbx, rdi
0x414d67:	push	rax
0x414d68:	mov	ecx, dword ptr [rsp + 0x2c]
0x414d6c:	mov	edx, dword ptr [rsp + 0x28]
0x414d70:	mov	rsi, qword ptr [rsp + 0x20]
0x414d75:	call	0x40db60
0x414d7a:	mov	rdi, qword ptr [rbx]
0x414d7d:	mov	rbp, rax
0x414d80:	mov	rsi, rax
0x414d83:	call	0x430480
0x414d88:	mov	rdi, rbp
0x414d8b:	call	0x403830
0x414d90:	mov	rdi, qword ptr [rbx]
0x414d93:	pop	rdx
0x414d94:	pop	rbx
0x414d95:	pop	rbp
0x414d96:	jmp	0x43f440
0x414d9b:	nop	
0x414d9c:	endbr64	
0x414da0:	push	r14
0x414da2:	push	r13
0x414da4:	push	r12
0x414da6:	push	rbp
0x414da7:	mov	rbp, rsi
0x414daa:	mov	esi, 0x7b
0x414daf:	push	rbx
0x414db0:	mov	rbx, rdi
0x414db3:	mov	rdi, rbp
0x414db6:	add	rbx, 8
0x414dba:	sub	rsp, 0x10
0x414dbe:	call	0x431ef0
0x414dc3:	mov	rdi, rbx
0x414dc6:	call	0x4138d2
0x414dcb:	mov	qword ptr [rsp], rax
0x414dcf:	mov	qword ptr [rsp + 8], rdx
0x414dd4:	mov	r13, qword ptr [rsp]
0x414dd8:	test	r13, r13
0x414ddb:	je	0x414e5c
0x414ddd:	mov	rdi, rbx
0x414de0:	call	0x4138d2
0x414de5:	cmp	r13, rax
0x414de8:	je	0x414df9
0x414dea:	mov	esi, 0x4cd62a
0x414def:	mov	rdi, rbp
0x414df2:	call	0x430480
0x414df7:	jmp	0x414e00
0x414df9:	cmp	qword ptr [rsp + 8], rdx
0x414dfe:	jne	0x414dea
0x414e00:	mov	r14, qword ptr [r13]
0x414e04:	mov	rdi, rbp
0x414e07:	mov	esi, 0x22
0x414e0c:	mov	r12, qword ptr [r13 + 8]
0x414e10:	call	0x431ef0
0x414e15:	mov	rdi, rbp
0x414e18:	add	r13, 0x10
0x414e1c:	mov	rsi, r14
0x414e1f:	call	0x430480
0x414e24:	mov	rdi, rbp
0x414e27:	mov	esi, 0x22
0x414e2c:	call	0x431ef0
0x414e31:	mov	rdi, rbp
0x414e34:	mov	esi, 0x4cd64a
0x414e39:	call	0x430480
0x414e3e:	mov	rax, qword ptr [r12]
0x414e42:	mov	rdi, r12
0x414e45:	mov	rsi, rbp
0x414e48:	call	qword ptr [rax + 0x18]
0x414e4b:	mov	rdi, rsp
0x414e4e:	mov	qword ptr [rsp], r13
0x414e52:	call	0x4138b0
0x414e57:	jmp	0x414dd4
0x414e5c:	cmp	qword ptr [rsp + 8], 0
0x414e62:	jne	0x414ddd
0x414e68:	add	rsp, 0x10
0x414e6c:	mov	rdi, rbp
0x414e6f:	mov	esi, 0x7d
0x414e74:	pop	rbx
0x414e75:	pop	rbp
0x414e76:	pop	r12
0x414e78:	pop	r13
0x414e7a:	pop	r14
0x414e7c:	jmp	0x431ef0
0x414e81:	nop	
0x414e82:	endbr64	
0x414e86:	push	r13
0x414e88:	push	r12
0x414e8a:	mov	r12, rdi
0x414e8d:	push	rbp
0x414e8e:	mov	rbp, rsi
0x414e91:	mov	esi, 0x5b
0x414e96:	push	rbx
0x414e97:	mov	rdi, rbp
0x414e9a:	xor	ebx, ebx
0x414e9c:	push	rdx
0x414e9d:	call	0x431ef0
0x414ea2:	mov	rax, qword ptr [r12 + 8]
0x414ea7:	test	rax, rax
0x414eaa:	je	0x414eda
0x414eac:	cmp	ebx, dword ptr [rax + 4]
0x414eaf:	jae	0x414eda
0x414eb1:	mov	edx, ebx
0x414eb3:	mov	r13, qword ptr [rax + rdx*8 + 8]
0x414eb8:	test	ebx, ebx
0x414eba:	je	0x414ec9
0x414ebc:	mov	esi, 0x4cd62a
0x414ec1:	mov	rdi, rbp
0x414ec4:	call	0x430480
0x414ec9:	mov	rcx, qword ptr [r13]
0x414ecd:	mov	rsi, rbp
0x414ed0:	mov	rdi, r13
0x414ed3:	inc	ebx
0x414ed5:	call	qword ptr [rcx + 0x18]
0x414ed8:	jmp	0x414ea2
0x414eda:	pop	rax
0x414edb:	mov	rdi, rbp
0x414ede:	pop	rbx
0x414edf:	mov	esi, 0x5d
0x414ee4:	pop	rbp
0x414ee5:	pop	r12
0x414ee7:	pop	r13
0x414ee9:	jmp	0x431ef0
0x414eee:	endbr64	
0x414ef2:	push	rbp
0x414ef3:	mov	rbp, rsi
0x414ef6:	mov	esi, 0x22
0x414efb:	push	rbx
0x414efc:	mov	rbx, rdi
0x414eff:	mov	rdi, rbp
0x414f02:	push	rdx
0x414f03:	call	0x431ef0
0x414f08:	mov	rbx, qword ptr [rbx + 8]
0x414f0c:	movsx	esi, byte ptr [rbx]
0x414f0f:	test	sil, sil
0x414f12:	je	0x414fae
0x414f18:	cmp	sil, 0xd
0x414f1c:	jg	0x414f36
0x414f1e:	cmp	sil, 7
0x414f22:	jle	0x414f9e
0x414f24:	lea	eax, [rsi - 8]
0x414f27:	cmp	al, 5
0x414f29:	ja	0x414f9e
0x414f2b:	movzx	edx, al
0x414f2e:	notrack jmp	qword ptr ds:[rdx*8 + 0x4c7960]
0x414f36:	cmp	sil, 0x22
0x414f3a:	je	0x414f44
0x414f3c:	cmp	sil, 0x5c
0x414f40:	je	0x414f53
0x414f42:	jmp	0x414f9e
0x414f44:	mov	esi, 0x4c6c74
0x414f49:	mov	rdi, rbp
0x414f4c:	call	0x430480
0x414f51:	jmp	0x414fa6
0x414f53:	mov	esi, 0x4c6c77
0x414f58:	mov	rdi, rbp
0x414f5b:	call	0x430480
0x414f60:	jmp	0x414fa6
0x414f62:	mov	esi, 0x4c6c7a
0x414f67:	mov	rdi, rbp
0x414f6a:	call	0x430480
0x414f6f:	jmp	0x414fa6
0x414f71:	mov	esi, 0x4c6c7d
0x414f76:	mov	rdi, rbp
0x414f79:	call	0x430480
0x414f7e:	jmp	0x414fa6
0x414f80:	mov	esi, 0x4c6c80
0x414f85:	mov	rdi, rbp
0x414f88:	call	0x430480
0x414f8d:	jmp	0x414fa6
0x414f8f:	mov	esi, 0x4c6c83
0x414f94:	mov	rdi, rbp
0x414f97:	call	0x430480
0x414f9c:	jmp	0x414fa6
0x414f9e:	mov	rdi, rbp
0x414fa1:	call	0x431ef0
0x414fa6:	inc	rbx
0x414fa9:	jmp	0x414f0c
0x414fae:	pop	rax
0x414faf:	mov	rdi, rbp
0x414fb2:	pop	rbx
0x414fb3:	mov	esi, 0x22
0x414fb8:	pop	rbp
0x414fb9:	jmp	0x431ef0
0x414fbe:	push	r12
0x414fc0:	xorps	xmm0, xmm0
0x414fc3:	push	rbp
0x414fc4:	push	rbx
0x414fc5:	mov	rbx, rdi
0x414fc8:	mov	qword ptr [rdi], 0x4c81b0
0x414fcf:	mov	qword ptr [rdi + 0x28], 0
0x414fd7:	mov	word ptr [rdi + 0x34], 0x100
0x414fdd:	movups	xmmword ptr [rdi + 0x18], xmm0
0x414fe1:	mov	edi, 0xd
0x414fe6:	call	0x42d5a0
0x414feb:	xor	edi, edi
0x414fed:	mov	ebp, eax
0x414fef:	mov	eax, eax
0x414ff1:	shl	rax, 4
0x414ff5:	mov	r12d, dword ptr [rax + 0x4be180]
0x414ffc:	mov	rsi, r12
0x414fff:	call	0x42c5c2
0x415004:	mov	qword ptr [rbx + 0x10], r12
0x415008:	mov	dword ptr [rbx + 0x30], ebp
0x41500b:	mov	qword ptr [rbx + 8], rax
0x41500f:	pop	rbx
0x415010:	pop	rbp
0x415011:	pop	r12
0x415013:	ret	
0x415014:	endbr64	
0x415018:	push	rbp
0x415019:	mov	rbp, rdi
0x41501c:	mov	rdi, qword ptr [rdi + 8]
0x415020:	call	0x403830
0x415025:	mov	rdi, rbp
0x415028:	mov	esi, 0x10
0x41502d:	pop	rbp
0x41502e:	jmp	0x440230
0x415033:	nop	
0x415034:	endbr64	
0x415038:	push	rbp
0x415039:	mov	rbp, rdi
0x41503c:	call	0x413928
0x415041:	mov	rdi, rbp
0x415044:	mov	esi, 0x38
0x415049:	pop	rbp
0x41504a:	jmp	0x440230
0x41504f:	nop	
0x415050:	endbr64	
0x415054:	push	rbp
0x415055:	mov	rbp, rdi
0x415058:	call	0x413998
0x41505d:	mov	rdi, rbp
0x415060:	mov	esi, 0x10
0x415065:	pop	rbp
0x415066:	jmp	0x440230
0x41506b:	nop	
0x41506c:	endbr64	
0x415070:	mov	esi, 0x10
0x415075:	jmp	0x440230
0x41507a:	endbr64	
0x41507e:	push	rbp
0x41507f:	push	rbx
0x415080:	sub	rsp, 0x58
0x415084:	mov	rbp, qword ptr [rip + 0xd1435]
0x41508b:	mov	rbx, qword ptr [rip + 0xce00e]
0x415092:	lea	rdi, [rsp + 8]
0x415097:	call	0x432320
0x41509c:	mov	rax, qword ptr [rsp + 0x10]
0x4150a1:	lea	rsi, [rsp + 8]
0x4150a6:	mov	rdi, rbp
0x4150a9:	mov	qword ptr [rax + 0xc0], rbx
0x4150b0:	mov	rdx, qword ptr [rbp]
0x4150b4:	call	qword ptr [rdx + 0x18]
0x4150b7:	lea	rdi, [rsp + 8]
0x4150bc:	call	0x43f490
0x4150c1:	lea	rdi, [rsp + 8]
0x4150c6:	call	0x430b50
0x4150cb:	mov	rsi, qword ptr [rip + 0xcdfce]
0x4150d2:	mov	edi, 0xa
0x4150d7:	call	0x403b30
0x4150dc:	mov	rdi, qword ptr [rip + 0xd13dd]
0x4150e3:	test	rdi, rdi
0x4150e6:	je	0x4150ee
0x4150e8:	mov	rcx, qword ptr [rdi]
0x4150eb:	call	qword ptr [rcx + 8]
0x4150ee:	mov	qword ptr [rip + 0xd13c7], 0
0x4150f9:	add	rsp, 0x58
0x4150fd:	pop	rbx
0x4150fe:	pop	rbp
0x4150ff:	ret	
0x415100:	endbr64	
0x415104:	sub	rsp, 0x18
0x415108:	call	0x438640
0x41510d:	lea	rsi, [rsp + 8]
0x415112:	mov	edi, 0x4e6208
0x415117:	mov	qword ptr [rsp + 8], rax
0x41511c:	call	0x439540
0x415121:	add	rsp, 0x18
0x415125:	ret	
0x415126:	endbr64	
0x41512a:	push	rbp
0x41512b:	mov	rbp, rsp
0x41512e:	push	r15
0x415130:	mov	r15, rdi
0x415133:	push	r14
0x415135:	push	r13
0x415137:	push	r12
0x415139:	push	rbx
0x41513a:	sub	rsp, 0x168
0x415141:	mov	rdi, qword ptr [rip + 0xd0f10]
0x415148:	test	rdi, rdi
0x41514b:	je	0x41564f
0x415151:	mov	esi, 0x4cd89a
0x415156:	call	0x403be0
0x41515b:	test	eax, eax
0x41515d:	je	0x41564f
0x415163:	xor	ebx, ebx
0x415165:	xor	r14d, r14d
0x415168:	or	r13, 0xffffffffffffffff
0x41516c:	mov	r12, qword ptr [r15 + rbx*8]
0x415170:	mov	edx, ebx
0x415172:	lea	r8, [rbx*8]
0x41517a:	test	r12, r12
0x41517d:	je	0x4151e3
0x41517f:	mov	esi, 0x45cd8e
0x415184:	mov	rdi, r12
0x415187:	call	0x403be0
0x41518c:	test	eax, eax
0x41518e:	je	0x41564f
0x415194:	cmp	byte ptr [r12], 0x2d
0x415199:	jne	0x4151b1
0x41519b:	cmp	byte ptr [r12 + 1], 0x6f
0x4151a1:	jne	0x4151b1
0x4151a3:	inc	r13d
0x4151a6:	jne	0x41564f
0x4151ac:	movsxd	r13, ebx
0x4151af:	jmp	0x4151de
0x4151b1:	mov	esi, 0x46356f
0x4151b6:	mov	rdi, r12
0x4151b9:	call	0x403be0
0x4151be:	test	eax, eax
0x4151c0:	je	0x4151d8
0x4151c2:	mov	esi, 0x461d40
0x4151c7:	mov	rdi, r12
0x4151ca:	call	0x403be0
0x4151cf:	test	eax, eax
0x4151d1:	jne	0x4151de
0x4151d3:	jmp	0x41564f
0x4151d8:	mov	r14d, 1
0x4151de:	inc	rbx
0x4151e1:	jmp	0x41516c
0x4151e3:	cmp	r13d, -1
0x4151e7:	je	0x41564f
0x4151ed:	test	r14d, r14d
0x4151f0:	je	0x41564f
0x4151f6:	lea	rbx, [rbp - 0x160]
0x4151fd:	xor	eax, eax
0x4151ff:	lea	r14d, [rdx + 4]
0x415203:	mov	rsi, rsp
0x415206:	mov	ecx, 0xc
0x41520b:	mov	rdi, rbx
0x41520e:	movsxd	r14, r14d
0x415211:	rep stosd	dword ptr [rdi], eax
0x415213:	shl	r14, 3
0x415217:	lea	r9, [r14 + 0x17]
0x41521b:	mov	r10, r9
0x41521e:	and	r9, 0xfffffffffffff000
0x415225:	and	r10, 0xfffffffffffffff0
0x415229:	sub	rsi, r9
0x41522c:	cmp	rsp, rsi
0x41522f:	je	0x415243
0x415231:	sub	rsp, 0x1000
0x415238:	or	qword ptr [rsp + 0xff8], 0
0x415241:	jmp	0x41522c
0x415243:	and	r10d, 0xfff
0x41524a:	sub	rsp, r10
0x41524d:	test	r10, r10
0x415250:	je	0x415258
0x415252:	or	qword ptr [rsp + r10 - 8], 0
0x415258:	lea	r12, [rsp + 0xf]
0x41525d:	mov	rsi, r15
0x415260:	shl	r13, 3
0x415264:	lea	rcx, [r14 - 0x18]
0x415268:	and	r12, 0xfffffffffffffff0
0x41526c:	lea	r11d, [rdx + 2]
0x415270:	mov	rdi, r12
0x415273:	lea	r15, [r12 + r14 - 0x10]
0x415278:	mov	dword ptr [rbp - 0x184], r11d
0x41527f:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x415281:	mov	qword ptr [r12 + r8], 0x4c6c86
0x415289:	lea	r8, [r12 + r13]
0x41528d:	mov	qword ptr [r12 + r14 - 0x18], 0x45fa7c
0x415296:	mov	qword ptr [r15], 0
0x41529d:	mov	rdx, qword ptr [r8]
0x4152a0:	mov	qword ptr [rbp - 0x180], r15
0x4152a7:	cmp	byte ptr [rdx + 2], 0
0x4152ab:	jne	0x4152b8
0x4152ad:	mov	qword ptr [r12 + r13 + 8], 0x4cd89a
0x4152b6:	jmp	0x4152bf
0x4152b8:	mov	qword ptr [r8], 0x4c6c96
0x4152bf:	xor	r13d, r13d
0x4152c2:	mov	edi, 0x4c9340
0x4152c7:	call	0x436980
0x4152cc:	mov	edi, 0x4c6c9a
0x4152d1:	mov	qword ptr [rbx + r13*8], rax
0x4152d5:	call	0x436980
0x4152da:	xor	ecx, ecx
0x4152dc:	cmp	r13d, 2
0x4152e0:	mov	rsi, qword ptr [rbx + r13*8]
0x4152e4:	mov	qword ptr [rbx + r13*8 + 0x18], rax
0x4152e9:	sete	cl
0x4152ec:	mov	rdx, rax
0x4152ef:	mov	rdi, r12
0x4152f2:	mov	r8d, ecx
0x4152f5:	call	0x413b22
0x4152fa:	cmp	eax, 2
0x4152fd:	jne	0x41531f
0x4152ff:	inc	r13
0x415302:	cmp	r13, 3
0x415306:	jne	0x4152c2
0x415308:	mov	rsi, qword ptr [rbp - 0x158]
0x41530f:	mov	rdi, qword ptr [rbp - 0x160]
0x415316:	call	0x4139ea
0x41531b:	test	al, al
0x41531d:	jne	0x415337
0x41531f:	mov	rdi, qword ptr [rip + 0xcdd7a]
0x415326:	mov	esi, 0x4c7328
0x41532b:	xor	eax, eax
0x41532d:	call	0x43a390
0x415332:	jmp	0x415627
0x415337:	mov	rsi, qword ptr [rbp - 0x140]
0x41533e:	mov	rdi, qword ptr [rbp - 0x148]
0x415345:	call	0x4139ea
0x41534a:	mov	byte ptr [rbp - 0x168], al
0x415350:	test	al, al
0x415352:	je	0x41531f
0x415354:	mov	rdi, qword ptr [rbp - 0x138]
0x41535b:	mov	r13, qword ptr [rbp - 0x150]
0x415362:	mov	esi, 0x4c6c9f
0x415367:	mov	qword ptr [rbp - 0x170], rdi
0x41536e:	call	0x403dd0
0x415373:	mov	esi, 0x462ba0
0x415378:	mov	rdi, r13
0x41537b:	mov	qword ptr [rbp - 0x178], rax
0x415382:	call	0x403dd0
0x415387:	mov	r15, rax
0x41538a:	mov	rdx, qword ptr [rbp - 0x178]
0x415391:	mov	esi, 0x100
0x415396:	lea	rdi, [rbp - 0x130]
0x41539d:	call	0x403b90
0x4153a2:	test	rax, rax
0x4153a5:	je	0x4153f3
0x4153a7:	cmp	byte ptr [rbp - 0x168], 0
0x4153ae:	je	0x4153c7
0x4153b0:	mov	rcx, r15
0x4153b3:	mov	edx, 3
0x4153b8:	mov	esi, 1
0x4153bd:	mov	edi, 0x4c6ca2
0x4153c2:	call	0x403e80
0x4153c7:	mov	rsi, r15
0x4153ca:	lea	rdi, [rbp - 0x130]
0x4153d1:	call	0x403aa0
0x4153d6:	mov	esi, 0xa
0x4153db:	lea	rdi, [rbp - 0x130]
0x4153e2:	call	0x403a40
0x4153e7:	test	rax, rax
0x4153ea:	setne	byte ptr [rbp - 0x168]
0x4153f1:	jmp	0x41538a
0x4153f3:	mov	rdi, qword ptr [rbp - 0x178]
0x4153fa:	call	0x4039c0
0x4153ff:	mov	rdi, r15
0x415402:	call	0x4039c0
0x415407:	mov	esi, 0x402
0x41540c:	mov	rdi, r13
0x41540f:	xor	eax, eax
0x415411:	call	0x403db0
0x415416:	mov	r15d, eax
0x415419:	test	eax, eax
0x41541b:	js	0x415627
0x415421:	mov	edx, 3
0x415426:	mov	esi, 0x4c6ca6
0x41542b:	mov	edi, eax
0x41542d:	call	0x403980
0x415432:	xor	r10d, r10d
0x415435:	mov	edx, 1
0x41543a:	mov	esi, 0x4c6c55
0x41543f:	mov	edi, r15d
0x415442:	mov	qword ptr [rbp - 0x168], r10
0x415449:	call	0x403980
0x41544e:	mov	rax, qword ptr [rbp - 0x168]
0x415455:	mov	r9, qword ptr [r12 + rax*8]
0x415459:	mov	qword ptr [rbp - 0x178], rax
0x415460:	mov	rdi, r9
0x415463:	mov	qword ptr [rbp - 0x168], r9
0x41546a:	call	0x4039e0
0x41546f:	mov	rsi, qword ptr [rbp - 0x168]
0x415476:	mov	edi, r15d
0x415479:	mov	rdx, rax
0x41547c:	call	0x403980
0x415481:	mov	r10, qword ptr [rbp - 0x178]
0x415488:	inc	r10
0x41548b:	cmp	dword ptr [rbp - 0x184], r10d
0x415492:	jg	0x415435
0x415494:	mov	edx, 2
0x415499:	mov	esi, 0x45b64c
0x41549e:	mov	edi, r15d
0x4154a1:	call	0x403980
0x4154a6:	mov	edi, r15d
0x4154a9:	call	0x403b00
0x4154ae:	mov	rcx, qword ptr [rbp - 0x180]
0x4154b5:	mov	rsi, r13
0x4154b8:	mov	rdi, r12
0x4154bb:	mov	rdx, qword ptr [rbp - 0x170]
0x4154c2:	mov	r8d, 1
0x4154c8:	mov	qword ptr [rcx], 0x45cd8e
0x4154cf:	xor	ecx, ecx
0x4154d1:	mov	qword ptr [r12 + r14 - 8], 0
0x4154da:	call	0x413b22
0x4154df:	dec	eax
0x4154e1:	jne	0x415627
0x4154e7:	mov	edi, 0x4be7cc
0x4154ec:	call	0x4383f0
0x4154f1:	mov	rdi, qword ptr [rip + 0xcdba8]
0x4154f8:	mov	rdx, r13
0x4154fb:	mov	esi, 0x4c7370
0x415500:	mov	r14, rax
0x415503:	xor	eax, eax
0x415505:	call	0x43a390
0x41550a:	test	r14, r14
0x41550d:	je	0x4155a0
0x415513:	mov	rdi, r13
0x415516:	call	0x4039e0
0x41551b:	lea	rdi, [rax + 0x32]
0x41551f:	call	0x42db10
0x415524:	mov	r15, rax
0x415527:	call	0x403990
0x41552c:	mov	r9, r13
0x41552f:	mov	ecx, 0x4c73c0
0x415534:	mov	rdi, r15
0x415537:	mov	r8d, eax
0x41553a:	or	rdx, 0xffffffffffffffff
0x41553e:	mov	esi, 1
0x415543:	xor	eax, eax
0x415545:	call	0x403f60
0x41554a:	mov	rsi, qword ptr [rip + 0xcdb4f]
0x415551:	mov	edi, 0x4c6caa
0x415556:	call	0x403aa0
0x41555b:	mov	rdi, qword ptr [rip + 0xcdb3e]
0x415562:	call	0x403cb0
0x415567:	mov	rdi, r15
0x41556a:	call	0x403a10
0x41556f:	mov	rdi, qword ptr [rip + 0xcdb2a]
0x415576:	call	0x403cb0
0x41557b:	mov	rsi, qword ptr [rip + 0xcdb1e]
0x415582:	mov	edi, 0x4c6cc2
0x415587:	call	0x403aa0
0x41558c:	mov	rdi, qword ptr [rip + 0xcdb0d]
0x415593:	call	0x403cb0
0x415598:	mov	rdi, r15
0x41559b:	call	0x403830
0x4155a0:	mov	edi, 0x4c6cd8
0x4155a5:	call	0x4383f0
0x4155aa:	test	rax, rax
0x4155ad:	jne	0x415614
0x4155af:	mov	esi, 5
0x4155b4:	mov	edi, 0x4c73e8
0x4155b9:	call	0x403dc0
0x4155be:	test	eax, eax
0x4155c0:	jne	0x415614
0x4155c2:	mov	rdi, r13
0x4155c5:	call	0x4039e0
0x4155ca:	mov	r15, qword ptr [r12]
0x4155ce:	mov	r14, rax
0x4155d1:	mov	rdi, r15
0x4155d4:	call	0x4039e0
0x4155d9:	lea	rdi, [r14 + rax + 0x32]
0x4155de:	call	0x42db10
0x4155e3:	mov	r9, r13
0x4155e6:	mov	r8, r15
0x4155e9:	mov	ecx, 0x4c7408
0x4155ee:	mov	r12, rax
0x4155f1:	mov	rdi, rax
0x4155f4:	or	rdx, 0xffffffffffffffff
0x4155f8:	mov	esi, 1
0x4155fd:	xor	eax, eax
0x4155ff:	call	0x403f60
0x415604:	mov	rdi, r12
0x415607:	call	0x403a10
0x41560c:	mov	rdi, r12
0x41560f:	call	0x403830
0x415614:	mov	rdi, r13
0x415617:	call	0x403830
0x41561c:	mov	qword ptr [rbp - 0x150], 0
0x415627:	lea	r13, [rbp - 0x130]
0x41562e:	mov	r12, qword ptr [rbx]
0x415631:	test	r12, r12
0x415634:	je	0x415646
0x415636:	mov	rdi, r12
0x415639:	call	0x4038a0
0x41563e:	mov	rdi, r12
0x415641:	call	0x403830
0x415646:	add	rbx, 8
0x41564a:	cmp	rbx, r13
0x41564d:	jne	0x41562e
0x41564f:	lea	rsp, [rbp - 0x28]
0x415653:	pop	rbx
0x415654:	pop	r12
0x415656:	pop	r13
0x415658:	pop	r14
0x41565a:	pop	r15
0x41565c:	pop	rbp
0x41565d:	ret	
0x41565e:	endbr64	
0x415662:	push	r13
0x415664:	mov	r13, rsi
0x415667:	push	r12
0x415669:	mov	r12, rdi
0x41566c:	push	rbp
0x41566d:	push	rbx
0x41566e:	sub	rsp, 0x18
0x415672:	mov	rbp, qword ptr [rdi]
0x415675:	test	rbp, rbp
0x415678:	jne	0x41569b
0x41567a:	mov	edi, 8
0x41567f:	call	0x440420
0x415684:	mov	esi, 1
0x415689:	mov	qword ptr [rax], 0
0x415690:	mov	rdi, rax
0x415693:	mov	rbp, rax
0x415696:	call	0x439570
0x41569b:	mov	rdi, r13
0x41569e:	call	0x42db40
0x4156a3:	mov	qword ptr [rsp + 8], rax
0x4156a8:	mov	rbx, rax
0x4156ab:	mov	rdi, rax
0x4156ae:	mov	dl, byte ptr [rbx]
0x4156b0:	test	dl, dl
0x4156b2:	je	0x4156fd
0x4156b4:	cmp	dl, 0x2c
0x4156b7:	jne	0x4156d8
0x4156b9:	mov	byte ptr [rdi], 0
0x4156bc:	lea	r13, [rdi + 1]
0x4156c0:	lea	rsi, [rsp + 8]
0x4156c5:	mov	rdi, rbp
0x4156c8:	inc	rbx
0x4156cb:	call	0x439540
0x4156d0:	mov	qword ptr [rsp + 8], r13
0x4156d5:	mov	rdi, r13
0x4156d8:	mov	cl, byte ptr [rbx]
0x4156da:	lea	rsi, [rdi + 1]
0x4156de:	cmp	cl, 0x5c
0x4156e1:	jne	0x4156f1
0x4156e3:	mov	dl, byte ptr [rbx + 1]
0x4156e6:	cmp	dl, 0x2c
0x4156e9:	jne	0x4156f1
0x4156eb:	add	rbx, 2
0x4156ef:	jmp	0x4156f6
0x4156f1:	inc	rbx
0x4156f4:	mov	edx, ecx
0x4156f6:	mov	byte ptr [rdi], dl
0x4156f8:	mov	rdi, rsi
0x4156fb:	jmp	0x4156ae
0x4156fd:	mov	rax, qword ptr [rsp + 8]
0x415702:	mov	byte ptr [rdi], 0
0x415705:	cmp	byte ptr [rax], 0
0x415708:	je	0x415717
0x41570a:	lea	rsi, [rsp + 8]
0x41570f:	mov	rdi, rbp
0x415712:	call	0x439540
0x415717:	mov	qword ptr [r12], rbp
0x41571b:	add	rsp, 0x18
0x41571f:	pop	rbx
0x415720:	pop	rbp
0x415721:	pop	r12
0x415723:	pop	r13
0x415725:	ret	
0x415726:	endbr64	
0x41572a:	cmp	dword ptr [rsi + 0xbec], 0
0x415731:	jne	0x415739
0x415733:	mov	dword ptr [rdi + 0xbec], edx
0x415739:	cmp	dword ptr [rsi + 0x111c], 0
0x415740:	jne	0x415748
0x415742:	mov	dword ptr [rdi + 0x111c], edx
0x415748:	cmp	dword ptr [rsi + 0x1368], 0
0x41574f:	jne	0x415757
0x415751:	mov	dword ptr [rdi + 0x1368], edx
0x415757:	cmp	dword ptr [rsi + 0x107c], 0
0x41575e:	jne	0x415766
0x415760:	mov	dword ptr [rdi + 0x107c], edx
0x415766:	cmp	dword ptr [rsi + 0x12b8], 0
0x41576d:	jne	0x415775
0x41576f:	mov	dword ptr [rdi + 0x12b8], edx
0x415775:	cmp	dword ptr [rsi + 0x13ac], 0
0x41577c:	jne	0x415784
0x41577e:	mov	dword ptr [rdi + 0x13ac], edx
0x415784:	cmp	dword ptr [rsi + 0xe9c], 0
0x41578b:	jne	0x415793
0x41578d:	mov	dword ptr [rdi + 0xe9c], edx
0x415793:	cmp	dword ptr [rsi + 0xebc], 0
0x41579a:	jne	0x4157a2
0x41579c:	mov	dword ptr [rdi + 0xebc], edx
0x4157a2:	test	edx, edx
0x4157a4:	je	0x4157cc
0x4157a6:	cmp	dword ptr [rsi + 0xec0], 0
0x4157ad:	jne	0x4157b9
0x4157af:	mov	dword ptr [rdi + 0xec0], 1
0x4157b9:	cmp	dword ptr [rsi + 0xeb8], 0
0x4157c0:	jne	0x4157cc
0x4157c2:	mov	dword ptr [rdi + 0xeb8], 1
0x4157cc:	cmp	dword ptr [rsi + 0x10b0], 0
0x4157d3:	jne	0x4157db
0x4157d5:	mov	dword ptr [rdi + 0x10b0], edx
0x4157db:	cmp	dword ptr [rsi + 0x1234], 0
0x4157e2:	jne	0x4157ea
0x4157e4:	mov	dword ptr [rdi + 0x1234], edx
0x4157ea:	cmp	dword ptr [rsi + 0x1370], 0
0x4157f1:	jne	0x4157f9
0x4157f3:	mov	dword ptr [rdi + 0x1370], edx
0x4157f9:	cmp	dword ptr [rsi + 0xe0c], 0
0x415800:	jne	0x415808
0x415802:	mov	dword ptr [rdi + 0xe0c], edx
0x415808:	cmp	dword ptr [rsi + 0x1310], 0
0x41580f:	jne	0x415817
0x415811:	mov	dword ptr [rdi + 0x1310], edx
0x415817:	cmp	dword ptr [rsi + 0x1338], 0
0x41581e:	jne	0x415826
0x415820:	mov	dword ptr [rdi + 0x1338], edx
0x415826:	cmp	dword ptr [rsi + 0x13a0], 0
0x41582d:	jne	0x415835
0x41582f:	mov	dword ptr [rdi + 0x13a0], edx
0x415835:	cmp	dword ptr [rsi + 0x1398], 0
0x41583c:	jne	0x415848
0x41583e:	mov	dword ptr [rdi + 0x1398], 0xffffffff
0x415848:	cmp	dword ptr [rsi + 0x12f8], 0
0x41584f:	jne	0x415857
0x415851:	mov	dword ptr [rdi + 0x12f8], edx
0x415857:	cmp	dword ptr [rsi + 0xf6c], 0
0x41585e:	jne	0x415866
0x415860:	mov	dword ptr [rdi + 0xf6c], edx
0x415866:	cmp	dword ptr [rsi + 0xf78], 0
0x41586d:	jne	0x415875
0x41586f:	mov	dword ptr [rdi + 0xf78], edx
0x415875:	cmp	dword ptr [rsi + 0x12fc], 0
0x41587c:	jne	0x415884
0x41587e:	mov	dword ptr [rdi + 0x12fc], edx
0x415884:	ret	
0x415885:	endbr64	
0x415889:	push	r15
0x41588b:	xor	r15d, r15d
0x41588e:	push	r14
0x415890:	push	r13
0x415892:	mov	r13, rsi
0x415895:	push	r12
0x415897:	mov	r12, rdx
0x41589a:	push	rbp
0x41589b:	mov	ebp, edi
0x41589d:	mov	rdi, rsi
0x4158a0:	push	rbx
0x4158a1:	sub	rsp, 0x48
0x4158a5:	mov	qword ptr [rsp + 0x10], rcx
0x4158aa:	mov	qword ptr [rsp + 0x18], r8
0x4158af:	call	0x42db40
0x4158b4:	mov	esi, 0x4cd4ec
0x4158b9:	mov	rdi, rax
0x4158bc:	mov	r14, rax
0x4158bf:	call	0x403df0
0x4158c4:	mov	rdi, rax
0x4158c7:	test	rdi, rdi
0x4158ca:	je	0x415a08
0x4158d0:	lea	rsi, [rsp + 0x38]
0x4158d5:	mov	edx, 0xa
0x4158da:	call	0x403c50
0x4158df:	mov	rbx, qword ptr [rsp + 0x38]
0x4158e4:	mov	qword ptr [rsp + 8], rax
0x4158e9:	mov	edi, dword ptr [rsp + 8]
0x4158ed:	cmp	byte ptr [rbx], 0
0x4158f0:	setne	sil
0x4158f4:	shr	edi, 0x1f
0x4158f7:	or	sil, dil
0x4158fa:	mov	byte ptr [rsp + 0x2b], sil
0x4158ff:	je	0x41591a
0x415901:	mov	rcx, r13
0x415904:	mov	rdx, r12
0x415907:	mov	esi, 0x4c7430
0x41590c:	mov	edi, ebp
0x41590e:	xor	eax, eax
0x415910:	call	0x43fe20
0x415915:	jmp	0x415a63
0x41591a:	test	r15, r15
0x41591d:	je	0x41594c
0x41591f:	mov	r8d, dword ptr [r15]
0x415922:	mov	ebx, dword ptr [r15 + 4]
0x415926:	mov	rdx, r15
0x415929:	and	r8d, 0x7fffffff
0x415930:	cmp	r8d, ebx
0x415933:	jne	0x4159d4
0x415939:	cmp	byte ptr [r15 + 3], 0
0x41593e:	jns	0x415957
0x415940:	mov	byte ptr [rsp + 0x2b], 1
0x415945:	lea	esi, [rbx + 1]
0x415948:	xor	edi, edi
0x41594a:	jmp	0x415961
0x41594c:	xor	edi, edi
0x41594e:	xor	ebx, ebx
0x415950:	mov	esi, 1
0x415955:	jmp	0x415961
0x415957:	mov	rdi, r15
0x41595a:	xor	ebx, ebx
0x41595c:	mov	esi, 1
0x415961:	xor	edx, edx
0x415963:	mov	qword ptr [rsp + 0x20], rdi
0x415968:	call	0x436e30
0x41596d:	mov	rdi, qword ptr [rsp + 0x20]
0x415972:	xor	r11d, r11d
0x415975:	mov	r10d, eax
0x415978:	mov	r9d, eax
0x41597b:	lea	rsi, [r10*4 + 8]
0x415983:	test	rdi, rdi
0x415986:	je	0x41598c
0x415988:	mov	r11d, dword ptr [rdi + 4]
0x41598c:	mov	dword ptr [rsp + 0x2c], r11d
0x415991:	mov	dword ptr [rsp + 0x20], r9d
0x415996:	call	0x42db80
0x41599b:	mov	ecx, dword ptr [rsp + 0x20]
0x41599f:	xor	r8d, r8d
0x4159a2:	mov	esi, ebx
0x4159a4:	mov	rdx, rax
0x4159a7:	and	ecx, 0x7fffffff
0x4159ad:	cmp	byte ptr [rsp + 0x2b], 0
0x4159b2:	mov	dword ptr [rax], ecx
0x4159b4:	mov	eax, dword ptr [rsp + 0x2c]
0x4159b8:	mov	dword ptr [rdx + 4], eax
0x4159bb:	je	0x4159d4
0x4159bd:	cmp	rsi, r8
0x4159c0:	je	0x4159d1
0x4159c2:	mov	edi, dword ptr [r15 + r8*4 + 8]
0x4159c7:	mov	dword ptr [rdx + r8*4 + 8], edi
0x4159cc:	inc	r8
0x4159cf:	jmp	0x4159bd
0x4159d1:	mov	dword ptr [rdx + 4], ebx
0x4159d4:	mov	r15d, dword ptr [rdx + 4]
0x4159d8:	mov	r10d, dword ptr [rsp + 8]
0x4159dd:	xor	edi, edi
0x4159df:	mov	esi, 0x4cd4ec
0x4159e4:	mov	qword ptr [rsp + 8], rdx
0x4159e9:	lea	r9d, [r15 + 1]
0x4159ed:	mov	dword ptr [rdx + 4], r9d
0x4159f1:	mov	dword ptr [rdx + r15*4 + 8], r10d
0x4159f6:	call	0x403df0
0x4159fb:	mov	r15, qword ptr [rsp + 8]
0x415a00:	mov	rdi, rax
0x415a03:	jmp	0x4158c7
0x415a08:	mov	rdi, r14
0x415a0b:	call	0x403830
0x415a10:	test	r15, r15
0x415a13:	je	0x415a23
0x415a15:	mov	edx, dword ptr [r15 + 4]
0x415a19:	xor	eax, eax
0x415a1b:	lea	ecx, [rdx - 1]
0x415a1e:	cmp	ecx, 3
0x415a21:	jbe	0x415a40
0x415a23:	mov	rcx, r13
0x415a26:	mov	rdx, r12
0x415a29:	mov	esi, 0x4c7468
0x415a2e:	mov	edi, ebp
0x415a30:	xor	eax, eax
0x415a32:	call	0x43fe20
0x415a37:	jmp	0x415a63
0x415a39:	inc	rax
0x415a3c:	cmp	edx, eax
0x415a3e:	jbe	0x415a68
0x415a40:	cmp	dword ptr [r15 + rax*4 + 8], 0x10000
0x415a49:	jbe	0x415a39
0x415a4b:	mov	ecx, 0x10000
0x415a50:	mov	rdx, r12
0x415a53:	mov	esi, 0x4c74a8
0x415a58:	mov	edi, ebp
0x415a5a:	xor	eax, eax
0x415a5c:	call	0x43fe20
0x415a61:	jmp	0x415a68
0x415a63:	test	r15, r15
0x415a66:	je	0x415ab5
0x415a68:	cmp	dword ptr [r15 + 4], 0
0x415a6d:	je	0x415a8e
0x415a6f:	cmp	dword ptr [r15 + 8], 0
0x415a74:	jne	0x415a8e
0x415a76:	mov	r11, qword ptr [rsp + 0x10]
0x415a7b:	mov	rcx, qword ptr [rsp + 0x18]
0x415a80:	mov	dword ptr [r11], 1
0x415a87:	mov	qword ptr [rcx], 0
0x415a8e:	cmp	byte ptr [r15 + 3], 0
0x415a93:	jns	0x415a9f
0x415a95:	mov	dword ptr [r15 + 4], 0
0x415a9d:	jmp	0x415ab5
0x415a9f:	add	rsp, 0x48
0x415aa3:	mov	rdi, r15
0x415aa6:	pop	rbx
0x415aa7:	pop	rbp
0x415aa8:	pop	r12
0x415aaa:	pop	r13
0x415aac:	pop	r14
0x415aae:	pop	r15
0x415ab0:	jmp	0x403830
0x415ab5:	add	rsp, 0x48
0x415ab9:	pop	rbx
0x415aba:	pop	rbp
0x415abb:	pop	r12
0x415abd:	pop	r13
0x415abf:	pop	r14
0x415ac1:	pop	r15
0x415ac3:	ret	
0x415ac4:	endbr64	
0x415ac8:	push	rbp
0x415ac9:	mov	rbp, rdi
0x415acc:	push	rbx
0x415acd:	xor	ebx, ebx
0x415acf:	push	rcx
0x415ad0:	mov	rdi, qword ptr [rbp]
0x415ad4:	test	rdi, rdi
0x415ad7:	je	0x415b05
0x415ad9:	cmp	dword ptr [rdi + 4], ebx
0x415adc:	jbe	0x415aee
0x415ade:	mov	eax, ebx
0x415ae0:	inc	ebx
0x415ae2:	mov	rdi, qword ptr [rdi + rax*8 + 8]
0x415ae7:	call	0x403830
0x415aec:	jmp	0x415ad0
0x415aee:	cmp	byte ptr [rdi + 3], 0
0x415af2:	jns	0x415afd
0x415af4:	mov	dword ptr [rdi + 4], 0
0x415afb:	jmp	0x415b05
0x415afd:	pop	rdx
0x415afe:	pop	rbx
0x415aff:	pop	rbp
0x415b00:	jmp	0x403830
0x415b05:	pop	rax
0x415b06:	pop	rbx
0x415b07:	pop	rbp
0x415b08:	ret	
0x415b09:	endbr64	
0x415b0d:	push	r12
0x415b0f:	mov	r12d, esi
0x415b12:	push	rbp
0x415b13:	mov	rbp, rdi
0x415b16:	mov	edi, 6
0x415b1b:	push	rbx
0x415b1c:	call	0x42db10
0x415b21:	mov	ecx, r12d
0x415b24:	mov	r8d, 1
0x415b2a:	mov	edx, 6
0x415b2f:	mov	rbx, rax
0x415b32:	shl	r8d, cl
0x415b35:	mov	rdi, rax
0x415b38:	mov	ecx, 0x4c90c1
0x415b3d:	mov	esi, 1
0x415b42:	xor	eax, eax
0x415b44:	call	0x403f60
0x415b49:	mov	qword ptr [rbp], rbx
0x415b4d:	pop	rbx
0x415b4e:	pop	rbp
0x415b4f:	pop	r12
0x415b51:	ret	
0x415b52:	endbr64	
0x415b56:	sub	rsp, 0x18
0x415b5a:	mov	edi, 0x4c6ce5
0x415b5f:	call	0x403800
0x415b64:	test	rax, rax
0x415b67:	jne	0x415b8e
0x415b69:	xor	edi, edi
0x415b6b:	xor	eax, eax
0x415b6d:	lea	rdx, [rsp + 8]
0x415b72:	mov	esi, 0x5413
0x415b77:	mov	word ptr [rsp + 0xa], 0
0x415b7e:	call	0x403ad0
0x415b83:	test	eax, eax
0x415b85:	je	0x415ba3
0x415b87:	mov	eax, 0x7fffffff
0x415b8c:	jmp	0x415bb5
0x415b8e:	xor	esi, esi
0x415b90:	mov	rdi, rax
0x415b93:	mov	edx, 0xa
0x415b98:	call	0x403c50
0x415b9d:	test	eax, eax
0x415b9f:	jle	0x415b69
0x415ba1:	jmp	0x415bb5
0x415ba3:	mov	cx, word ptr [rsp + 0xa]
0x415ba8:	mov	eax, 0x7fffffff
0x415bad:	test	cx, cx
0x415bb0:	je	0x415bb5
0x415bb2:	movzx	eax, cx
0x415bb5:	add	rsp, 0x18
0x415bb9:	ret	
0x415bba:	endbr64	
0x415bbe:	push	r13
0x415bc0:	mov	r13d, esi
0x415bc3:	push	r12
0x415bc5:	mov	r12, rdx
0x415bc8:	push	rbp
0x415bc9:	mov	rbp, rdi
0x415bcc:	sub	rsp, 0x10
0x415bd0:	cmp	qword ptr [rip + 0xcd4e8], 0
0x415bd8:	jne	0x415c46
0x415bda:	mov	rdi, qword ptr [rip + 0xcd4bf]
0x415be1:	mov	esi, 0x4c4764
0x415be6:	xor	eax, eax
0x415be8:	call	0x43a390
0x415bed:	mov	rdi, rbp
0x415bf0:	call	0x4137a3
0x415bf5:	mov	r8d, r13d
0x415bf8:	mov	rdx, r12
0x415bfb:	mov	esi, 0x4c6ced
0x415c00:	mov	rdi, qword ptr [rip + 0xcd499]
0x415c07:	mov	rcx, rax
0x415c0a:	xor	eax, eax
0x415c0c:	call	0x43a390
0x415c11:	mov	rsi, qword ptr [rip + 0xcd488]
0x415c18:	mov	edi, 0xa
0x415c1d:	call	0x403b30
0x415c22:	call	0x42c159
0x415c27:	mov	dword ptr [rsp + 0xc], 0
0x415c2f:	mov	rdi, rax
0x415c32:	test	rax, rax
0x415c35:	je	0x415c41
0x415c37:	lea	rsi, [rsp + 0xc]
0x415c3c:	call	0x42c295
0x415c41:	call	0x403880
0x415c46:	call	0x4137a3
0x415c4b:	mov	ecx, r13d
0x415c4e:	mov	rsi, r12
0x415c51:	mov	edi, 0x4c6ced
0x415c56:	mov	rdx, rax
0x415c59:	xor	eax, eax
0x415c5b:	call	0x41a7b5
0x415c60:	endbr64	
0x415c64:	push	r12
0x415c66:	push	rbp
0x415c67:	push	rbx
0x415c68:	cmp	edi, 2
0x415c6b:	je	0x415c81
0x415c6d:	mov	edx, 0x4c6cfd
0x415c72:	mov	esi, 0x2918
0x415c77:	mov	edi, 0x45b1e2
0x415c7c:	call	0x415bba
0x415c81:	mov	rbp, rsi
0x415c84:	xor	ebx, ebx
0x415c86:	cmp	dword ptr [rip + 0xced8c], ebx
0x415c8c:	jle	0x415cc1
0x415c8e:	mov	rax, qword ptr [rip + 0xd03cb]
0x415c95:	lea	r12, [rax + rbx*8]
0x415c99:	mov	rdi, qword ptr [r12]
0x415c9d:	test	rdi, rdi
0x415ca0:	je	0x415cbc
0x415ca2:	mov	rsi, qword ptr [rbp]
0x415ca6:	call	0x403be0
0x415cab:	test	eax, eax
0x415cad:	jne	0x415cbc
0x415caf:	mov	rdi, qword ptr [rbp + 8]
0x415cb3:	call	0x42db40
0x415cb8:	mov	qword ptr [r12], rax
0x415cbc:	inc	rbx
0x415cbf:	jmp	0x415c86
0x415cc1:	pop	rbx
0x415cc2:	xor	eax, eax
0x415cc4:	pop	rbp
0x415cc5:	pop	r12
0x415cc7:	ret	
0x415cc8:	endbr64	
0x415ccc:	dec	edi
0x415cce:	push	r13
0x415cd0:	push	r12
0x415cd2:	push	rbp
0x415cd3:	push	rbx
0x415cd4:	push	rcx
0x415cd5:	jne	0x415cec
0x415cd7:	mov	r13d, dword ptr [rip + 0xced3a]
0x415cde:	mov	r12, qword ptr [rip + 0xd037b]
0x415ce5:	mov	rbp, rsi
0x415ce8:	xor	ebx, ebx
0x415cea:	jmp	0x415d0c
0x415cec:	mov	edx, 0x4c6d1b
0x415cf1:	mov	esi, 0x292d
0x415cf6:	mov	edi, 0x45b1e2
0x415cfb:	call	0x415bba
0x415d00:	mov	rdi, qword ptr [r12 + rbx*8]
0x415d04:	test	rdi, rdi
0x415d07:	jne	0x415d13
0x415d09:	inc	rbx
0x415d0c:	cmp	r13d, ebx
0x415d0f:	jg	0x415d00
0x415d11:	jmp	0x415d2a
0x415d13:	mov	rsi, qword ptr [rbp]
0x415d17:	call	0x403be0
0x415d1c:	test	eax, eax
0x415d1e:	jne	0x415d09
0x415d20:	mov	qword ptr [r12 + rbx*8], 0
0x415d28:	jmp	0x415d09
0x415d2a:	pop	rdx
0x415d2b:	xor	eax, eax
0x415d2d:	pop	rbx
0x415d2e:	pop	rbp
0x415d2f:	pop	r12
0x415d31:	pop	r13
0x415d33:	ret	
0x415d34:	push	r15
0x415d36:	xorps	xmm0, xmm0
0x415d39:	push	r14
0x415d3b:	push	r13
0x415d3d:	push	r12
0x415d3f:	push	rbp
0x415d40:	push	rbx
0x415d41:	sub	rsp, 0x168
0x415d48:	mov	qword ptr [rsp + 0x28], rdi
0x415d4d:	mov	edi, 0x100
0x415d52:	mov	qword ptr [rsp + 0x30], rsi
0x415d57:	movups	xmmword ptr [rsp + 0xa8], xmm0
0x415d5f:	mov	qword ptr [rsp + 0xa0], 0
0x415d6b:	call	0x403ca0
0x415d70:	mov	edi, 0x500
0x415d75:	mov	qword ptr [rsp + 0xc8], 0
0x415d81:	mov	qword ptr [rsp + 0xc0], rax
0x415d89:	mov	al, byte ptr [rsp + 0xd8]
0x415d90:	mov	qword ptr [rsp + 0x98], 0x4c74d0
0x415d9c:	and	eax, 0x6f
0x415d9f:	or	eax, 0x10
0x415da2:	mov	byte ptr [rsp + 0xd8], al
0x415da9:	call	0x403ca0
0x415dae:	mov	qword ptr [rsp + 0x10], rax
0x415db3:	test	rax, rax
0x415db6:	je	0x417c44
0x415dbc:	and	byte ptr [rsp + 0xd8], 0x97
0x415dc4:	cmp	dword ptr [rip + 0xd0729], 0
0x415dcb:	mov	qword ptr [rsp + 0xb8], 0x3b2fc
0x415dd7:	mov	qword ptr [rsp + 0xd0], 0
0x415de3:	jne	0x415e27
0x415de5:	xor	eax, eax
0x415de7:	mov	edi, 0x4e63c0
0x415dec:	mov	ecx, 0x40
0x415df1:	rep stosd	dword ptr [rdi], eax
0x415df3:	call	0x403f50
0x415df8:	xor	edx, edx
0x415dfa:	mov	rbx, qword ptr [rax]
0x415dfd:	test	byte ptr [rbx + rdx*2], 8
0x415e01:	je	0x415e0a
0x415e03:	mov	byte ptr [rdx + 0x4e63c0], 1
0x415e0a:	inc	rdx
0x415e0d:	cmp	rdx, 0x100
0x415e14:	jne	0x415dfa
0x415e16:	mov	byte ptr [rip + 0xd0602], 1
0x415e1d:	mov	dword ptr [rip + 0xd06cd], 1
0x415e27:	mov	edi, 0x20
0x415e2c:	call	0x403ca0
0x415e31:	mov	qword ptr [rsp + 0xa0], rax
0x415e39:	mov	rbp, rax
0x415e3c:	test	rax, rax
0x415e3f:	je	0x415f2a
0x415e45:	mov	qword ptr [rsp + 8], rax
0x415e4a:	xor	r14d, r14d
0x415e4d:	xor	r15d, r15d
0x415e50:	xor	r13d, r13d
0x415e53:	mov	qword ptr [rsp + 0xa8], 0x20
0x415e5f:	mov	dword ptr [rsp + 0x1c], 0
0x415e67:	mov	dword ptr [rsp + 0x24], 0x20
0x415e6f:	mov	dword ptr [rsp + 0x20], 0
0x415e77:	jmp	0x415ee5
0x415e79:	cmp	rsi, 0x10000
0x415e80:	je	0x417c44
0x415e86:	mov	r10d, 0x10000
0x415e8c:	add	rsi, rsi
0x415e8f:	mov	rdi, r12
0x415e92:	cmp	rsi, r10
0x415e95:	cmova	rsi, r10
0x415e99:	mov	qword ptr [rsp + 0xa8], rsi
0x415ea1:	call	0x403d20
0x415ea6:	mov	qword ptr [rsp + 0xa0], rax
0x415eae:	test	rax, rax
0x415eb1:	je	0x417c44
0x415eb7:	cmp	r12, rax
0x415eba:	jne	0x415f98
0x415ec0:	mov	r12, qword ptr [rsp + 0xa0]
0x415ec8:	mov	r8, rbp
0x415ecb:	mov	rsi, qword ptr [rsp + 0xa8]
0x415ed3:	sub	r8, r12
0x415ed6:	inc	r8
0x415ed9:	cmp	rsi, r8
0x415edc:	jb	0x415e79
0x415ede:	mov	byte ptr [rbp], 9
0x415ee2:	inc	rbp
0x415ee5:	mov	rbx, qword ptr [rsp + 0x98]
0x415eed:	cmp	rbx, 0x4c74f5
0x415ef4:	je	0x417bcd
0x415efa:	mov	r12b, byte ptr [rbx]
0x415efd:	lea	r9, [rbx + 1]
0x415f01:	mov	qword ptr [rsp + 0x98], r9
0x415f09:	cmp	r12b, 0x2e
0x415f0d:	jle	0x415f39
0x415f0f:	cmp	r12b, 0x5e
0x415f13:	je	0x415ec0
0x415f15:	jg	0x415f7f
0x415f17:	cmp	r12b, 0x5b
0x415f1b:	jne	0x415f66
0x415f1d:	cmp	r9, 0x4c74f5
0x415f24:	jne	0x41637a
0x415f2a:	mov	rdi, qword ptr [rsp + 0x10]
0x415f2f:	call	0x403830
0x415f34:	jmp	0x417c44
0x415f39:	cmp	r12b, 0x23
0x415f3d:	jle	0x417a56
0x415f43:	lea	r11d, [r12 - 0x24]
0x415f48:	cmp	r11b, 0xa
0x415f4c:	ja	0x417a56
0x415f52:	movzx	esi, r11b
0x415f56:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c7990]
0x415f5e:	mov	r12b, 0x2a
0x415f61:	jmp	0x416058
0x415f66:	cmp	r12b, 0x5c
0x415f6a:	je	0x416d0e
0x415f70:	cmp	r12b, 0x3f
0x415f74:	je	0x416058
0x415f7a:	jmp	0x417a56
0x415f7f:	cmp	r12b, 0x7b
0x415f83:	je	0x4171ea
0x415f89:	cmp	r12b, 0x7c
0x415f8d:	je	0x4170d1
0x415f93:	jmp	0x417a56
0x415f98:	sub	rax, r12
0x415f9b:	add	qword ptr [rsp + 8], rax
0x415fa0:	add	rbp, rax
0x415fa3:	test	r14, r14
0x415fa6:	je	0x415fab
0x415fa8:	add	r14, rax
0x415fab:	test	r15, r15
0x415fae:	je	0x415fb3
0x415fb0:	add	r15, rax
0x415fb3:	test	r13, r13
0x415fb6:	je	0x415ec0
0x415fbc:	add	r13, rax
0x415fbf:	jmp	0x415ec0
0x415fc4:	cmp	rsi, 0x10000
0x415fcb:	je	0x417c44
0x415fd1:	mov	r10d, 0x10000
0x415fd7:	add	rsi, rsi
0x415fda:	mov	rdi, rbx
0x415fdd:	cmp	rsi, r10
0x415fe0:	cmova	rsi, r10
0x415fe4:	mov	qword ptr [rsp + 0xa8], rsi
0x415fec:	call	0x403d20
0x415ff1:	mov	qword ptr [rsp + 0xa0], rax
0x415ff9:	test	rax, rax
0x415ffc:	je	0x417c44
0x416002:	cmp	rbx, rax
0x416005:	jne	0x416027
0x416007:	mov	rbx, qword ptr [rsp + 0xa0]
0x41600f:	mov	rax, rbp
0x416012:	mov	rsi, qword ptr [rsp + 0xa8]
0x41601a:	sub	rax, rbx
0x41601d:	inc	rax
0x416020:	cmp	rsi, rax
0x416023:	jb	0x415fc4
0x416025:	jmp	0x41604c
0x416027:	sub	rax, rbx
0x41602a:	add	qword ptr [rsp + 8], rax
0x41602f:	add	rbp, rax
0x416032:	test	r14, r14
0x416035:	je	0x41603a
0x416037:	add	r14, rax
0x41603a:	test	r15, r15
0x41603d:	je	0x416042
0x41603f:	add	r15, rax
0x416042:	test	r13, r13
0x416045:	je	0x416007
0x416047:	add	r13, rax
0x41604a:	jmp	0x416007
0x41604c:	mov	byte ptr [rbp], 0xa
0x416050:	inc	rbp
0x416053:	jmp	0x415ee5
0x416058:	test	r15, r15
0x41605b:	je	0x415f2a
0x416061:	xor	r8d, r8d
0x416064:	xor	eax, eax
0x416066:	xor	ebx, ebx
0x416068:	cmp	r12b, 0x2b
0x41606c:	setne	r10b
0x416070:	or	ebx, r10d
0x416073:	cmp	r12b, 0x3f
0x416077:	setne	cl
0x41607a:	or	eax, ecx
0x41607c:	cmp	r9, 0x4c74f5
0x416083:	jne	0x416098
0x416085:	test	r8b, r8b
0x416088:	je	0x4160c1
0x41608a:	mov	qword ptr [rsp + 0x98], 0x4c74f5
0x416096:	jmp	0x4160c1
0x416098:	mov	r12b, byte ptr [r9]
0x41609b:	lea	rdx, [r9 + 1]
0x41609f:	cmp	r12b, 0x2a
0x4160a3:	jne	0x4160ad
0x4160a5:	mov	r9, rdx
0x4160a8:	mov	r8b, 1
0x4160ab:	jmp	0x416068
0x4160ad:	cmp	r12b, 0x2b
0x4160b1:	je	0x4160a5
0x4160b3:	cmp	r12b, 0x3f
0x4160b7:	je	0x4160a5
0x4160b9:	mov	qword ptr [rsp + 0x98], r9
0x4160c1:	test	al, al
0x4160c3:	je	0x41619f
0x4160c9:	mov	r12, qword ptr [rsp + 0xa0]
0x4160d1:	mov	r11, rbp
0x4160d4:	mov	rsi, qword ptr [rsp + 0xa8]
0x4160dc:	sub	r11, r12
0x4160df:	add	r11, 3
0x4160e3:	cmp	rsi, r11
0x4160e6:	jae	0x416147
0x4160e8:	cmp	rsi, 0x10000
0x4160ef:	je	0x417c44
0x4160f5:	mov	r10d, 0x10000
0x4160fb:	add	rsi, rsi
0x4160fe:	mov	rdi, r12
0x416101:	cmp	rsi, r10
0x416104:	cmova	rsi, r10
0x416108:	mov	qword ptr [rsp + 0xa8], rsi
0x416110:	call	0x403d20
0x416115:	mov	qword ptr [rsp + 0xa0], rax
0x41611d:	test	rax, rax
0x416120:	je	0x417c44
0x416126:	cmp	r12, rax
0x416129:	je	0x4160c9
0x41612b:	sub	rax, r12
0x41612e:	add	qword ptr [rsp + 8], rax
0x416133:	add	rbp, rax
0x416136:	test	r14, r14
0x416139:	je	0x417cfe
0x41613f:	add	r14, rax
0x416142:	jmp	0x417cfe
0x416147:	mov	esi, r15d
0x41614a:	mov	byte ptr [rbp], 0x12
0x41614e:	sub	esi, ebp
0x416150:	add	rbp, 3
0x416154:	sub	esi, 6
0x416157:	mov	word ptr [rbp - 2], si
0x41615b:	jmp	0x41619f
0x41615d:	cmp	rsi, 0x10000
0x416164:	je	0x417c44
0x41616a:	mov	eax, 0x10000
0x41616f:	add	rsi, rsi
0x416172:	mov	rdi, r12
0x416175:	cmp	rsi, rax
0x416178:	cmova	rsi, rax
0x41617c:	mov	qword ptr [rsp + 0xa8], rsi
0x416184:	call	0x403d20
0x416189:	mov	qword ptr [rsp + 0xa0], rax
0x416191:	test	rax, rax
0x416194:	je	0x417c44
0x41619a:	cmp	r12, rax
0x41619d:	jne	0x4161c0
0x41619f:	mov	r12, qword ptr [rsp + 0xa0]
0x4161a7:	mov	r9, rbp
0x4161aa:	mov	rsi, qword ptr [rsp + 0xa8]
0x4161b2:	sub	r9, r12
0x4161b5:	add	r9, 3
0x4161b9:	cmp	rsi, r9
0x4161bc:	jb	0x41615d
0x4161be:	jmp	0x4161dc
0x4161c0:	sub	rax, r12
0x4161c3:	add	qword ptr [rsp + 8], rax
0x4161c8:	add	rbp, rax
0x4161cb:	test	r14, r14
0x4161ce:	je	0x417d12
0x4161d4:	add	r14, rax
0x4161d7:	jmp	0x417d12
0x4161dc:	mov	rdx, rbp
0x4161df:	add	rbp, 3
0x4161e3:	lea	rdi, [r15 + 3]
0x4161e7:	mov	rsi, r15
0x4161ea:	mov	r13, rbp
0x4161ed:	sub	rdx, r15
0x4161f0:	call	0x403d90
0x4161f5:	sub	r13, r15
0x4161f8:	mov	byte ptr [r15], 0xf
0x4161fc:	sub	r13d, 3
0x416200:	mov	word ptr [r15 + 1], r13w
0x416205:	test	bl, bl
0x416207:	jne	0x4162a4
0x41620d:	mov	rbx, qword ptr [rsp + 0xa0]
0x416215:	mov	rdi, rbp
0x416218:	mov	rsi, qword ptr [rsp + 0xa8]
0x416220:	sub	rdi, rbx
0x416223:	add	rdi, 3
0x416227:	cmp	rsi, rdi
0x41622a:	jae	0x416283
0x41622c:	cmp	rsi, 0x10000
0x416233:	je	0x417c44
0x416239:	mov	r8d, 0x10000
0x41623f:	add	rsi, rsi
0x416242:	mov	rdi, rbx
0x416245:	cmp	rsi, r8
0x416248:	cmova	rsi, r8
0x41624c:	mov	qword ptr [rsp + 0xa8], rsi
0x416254:	call	0x403d20
0x416259:	mov	qword ptr [rsp + 0xa0], rax
0x416261:	test	rax, rax
0x416264:	je	0x417c44
0x41626a:	cmp	rbx, rax
0x41626d:	je	0x41620d
0x41626f:	sub	rax, rbx
0x416272:	test	r14, r14
0x416275:	je	0x417d26
0x41627b:	add	r14, rax
0x41627e:	jmp	0x417d26
0x416283:	mov	rdx, rbp
0x416286:	lea	rdi, [r15 + 3]
0x41628a:	mov	rsi, r15
0x41628d:	add	rbp, 3
0x416291:	sub	rdx, r15
0x416294:	call	0x403d90
0x416299:	mov	word ptr [r15], 0x313
0x41629f:	mov	byte ptr [r15 + 2], 0
0x4162a4:	xor	r13d, r13d
0x4162a7:	jmp	0x415ee5
0x4162ac:	mov	r15, rbp
0x4162af:	mov	r12, qword ptr [rsp + 0xa0]
0x4162b7:	mov	r9, rbp
0x4162ba:	mov	rsi, qword ptr [rsp + 0xa8]
0x4162c2:	sub	r9, r12
0x4162c5:	inc	r9
0x4162c8:	cmp	rsi, r9
0x4162cb:	jae	0x41632b
0x4162cd:	cmp	rsi, 0x10000
0x4162d4:	je	0x417c44
0x4162da:	mov	edi, 0x10000
0x4162df:	add	rsi, rsi
0x4162e2:	cmp	rsi, rdi
0x4162e5:	cmova	rsi, rdi
0x4162e9:	mov	rdi, r12
0x4162ec:	mov	qword ptr [rsp + 0xa8], rsi
0x4162f4:	call	0x403d20
0x4162f9:	mov	qword ptr [rsp + 0xa0], rax
0x416301:	test	rax, rax
0x416304:	je	0x417c44
0x41630a:	cmp	r12, rax
0x41630d:	je	0x4162af
0x41630f:	sub	rax, r12
0x416312:	add	qword ptr [rsp + 8], rax
0x416317:	add	rbp, rax
0x41631a:	test	r14, r14
0x41631d:	je	0x417d72
0x416323:	add	r14, rax
0x416326:	jmp	0x417d72
0x41632b:	mov	byte ptr [rbp], 3
0x41632f:	inc	rbp
0x416332:	jmp	0x415ee5
0x416337:	cmp	rsi, 0x10000
0x41633e:	je	0x417c44
0x416344:	mov	r11d, 0x10000
0x41634a:	add	rsi, rsi
0x41634d:	mov	rdi, r15
0x416350:	cmp	rsi, r11
0x416353:	cmova	rsi, r11
0x416357:	mov	qword ptr [rsp + 0xa8], rsi
0x41635f:	call	0x403d20
0x416364:	mov	qword ptr [rsp + 0xa0], rax
0x41636c:	test	rax, rax
0x41636f:	je	0x417c44
0x416375:	cmp	r15, rax
0x416378:	jne	0x41639b
0x41637a:	mov	r15, qword ptr [rsp + 0xa0]
0x416382:	mov	r8, rbp
0x416385:	mov	rsi, qword ptr [rsp + 0xa8]
0x41638d:	sub	r8, r15
0x416390:	add	r8, 0x22
0x416394:	cmp	rsi, r8
0x416397:	jb	0x416337
0x416399:	jmp	0x4163b8
0x41639b:	sub	rax, r15
0x41639e:	add	qword ptr [rsp + 8], rax
0x4163a3:	add	rbp, rax
0x4163a6:	test	r14, r14
0x4163a9:	je	0x4163ae
0x4163ab:	add	r14, rax
0x4163ae:	test	r13, r13
0x4163b1:	je	0x41637a
0x4163b3:	add	r13, rax
0x4163b6:	jmp	0x41637a
0x4163b8:	mov	r15, rbp
0x4163bb:	mov	r12, qword ptr [rsp + 0xa0]
0x4163c3:	mov	r10, rbp
0x4163c6:	mov	rsi, qword ptr [rsp + 0xa8]
0x4163ce:	sub	r10, r12
0x4163d1:	inc	r10
0x4163d4:	cmp	rsi, r10
0x4163d7:	jae	0x416438
0x4163d9:	cmp	rsi, 0x10000
0x4163e0:	je	0x417c44
0x4163e6:	mov	r9d, 0x10000
0x4163ec:	add	rsi, rsi
0x4163ef:	mov	rdi, r12
0x4163f2:	cmp	rsi, r9
0x4163f5:	cmova	rsi, r9
0x4163f9:	mov	qword ptr [rsp + 0xa8], rsi
0x416401:	call	0x403d20
0x416406:	mov	qword ptr [rsp + 0xa0], rax
0x41640e:	test	rax, rax
0x416411:	je	0x417c44
0x416417:	cmp	r12, rax
0x41641a:	je	0x4163bb
0x41641c:	sub	rax, r12
0x41641f:	add	qword ptr [rsp + 8], rax
0x416424:	add	rbp, rax
0x416427:	test	r14, r14
0x41642a:	je	0x417dc2
0x416430:	add	r14, rax
0x416433:	jmp	0x417dc2
0x416438:	cmp	byte ptr [rbx + 1], 0x5e
0x41643c:	lea	r12, [rbp + 1]
0x416440:	sete	sil
0x416444:	add	esi, 4
0x416447:	mov	byte ptr [rbp], sil
0x41644b:	cmp	byte ptr [rbx + 1], 0x5e
0x41644f:	jne	0x41645d
0x416451:	add	rbx, 2
0x416455:	mov	qword ptr [rsp + 0x98], rbx
0x41645d:	mov	r9, qword ptr [rsp + 0x98]
0x416465:	mov	qword ptr [rsp + 0x70], r9
0x41646a:	mov	rbp, qword ptr [rsp + 0xa0]
0x416472:	mov	rcx, r12
0x416475:	mov	rsi, qword ptr [rsp + 0xa8]
0x41647d:	sub	rcx, rbp
0x416480:	inc	rcx
0x416483:	cmp	rsi, rcx
0x416486:	jae	0x4164e6
0x416488:	cmp	rsi, 0x10000
0x41648f:	je	0x417c44
0x416495:	mov	edx, 0x10000
0x41649a:	add	rsi, rsi
0x41649d:	mov	rdi, rbp
0x4164a0:	cmp	rsi, rdx
0x4164a3:	cmova	rsi, rdx
0x4164a7:	mov	qword ptr [rsp + 0xa8], rsi
0x4164af:	call	0x403d20
0x4164b4:	mov	qword ptr [rsp + 0xa0], rax
0x4164bc:	test	rax, rax
0x4164bf:	je	0x417c44
0x4164c5:	cmp	rbp, rax
0x4164c8:	je	0x41646a
0x4164ca:	sub	rax, rbp
0x4164cd:	add	qword ptr [rsp + 8], rax
0x4164d2:	add	r12, rax
0x4164d5:	test	r14, r14
0x4164d8:	je	0x417dd6
0x4164de:	add	r14, rax
0x4164e1:	jmp	0x417dd6
0x4164e6:	mov	ecx, 8
0x4164eb:	xor	eax, eax
0x4164ed:	lea	rdi, [r12 + 1]
0x4164f2:	or	edx, 0xffffffff
0x4164f5:	mov	byte ptr [r12], 0x20
0x4164fa:	lea	r11, [r12 + 1]
0x4164ff:	xor	ebx, ebx
0x416501:	rep stosd	dword ptr [rdi], eax
0x416503:	mov	qword ptr [rsp + 0x78], r15
0x416508:	mov	qword ptr [rsp + 0x80], r13
0x416510:	mov	qword ptr [rsp + 0x38], r11
0x416515:	mov	rbp, qword ptr [rsp + 0x38]
0x41651a:	mov	qword ptr [rsp + 0x88], r14
0x416522:	mov	r14d, edx
0x416525:	mov	rax, qword ptr [rsp + 0x98]
0x41652d:	cmp	rax, 0x4c74f5
0x416533:	je	0x415f2a
0x416539:	mov	dl, byte ptr [rax]
0x41653b:	lea	r13, [rax + 1]
0x41653f:	mov	qword ptr [rsp + 0x98], r13
0x416547:	cmp	dl, 0x5d
0x41654a:	jne	0x416578
0x41654c:	mov	rsi, qword ptr [rsp + 0x70]
0x416551:	lea	r9, [rsi + 1]
0x416555:	cmp	r13, r9
0x416558:	je	0x4165f8
0x41655e:	mov	r15, qword ptr [rsp + 0x78]
0x416563:	mov	r13, qword ptr [rsp + 0x80]
0x41656b:	mov	r14, qword ptr [rsp + 0x88]
0x416573:	jmp	0x416cf7
0x416578:	mov	r15b, byte ptr [rax + 1]
0x41657c:	test	bl, bl
0x41657e:	je	0x416590
0x416580:	cmp	dl, 0x2d
0x416583:	jne	0x4165f8
0x416585:	cmp	r15b, 0x5d
0x416589:	je	0x416595
0x41658b:	jmp	0x415f2a
0x416590:	cmp	dl, 0x2d
0x416593:	jne	0x4165f8
0x416595:	lea	r8, [rax - 1]
0x416599:	cmp	r8, 0x4c74d0
0x4165a0:	jb	0x4165a8
0x4165a2:	cmp	byte ptr [rax - 1], 0x5b
0x4165a6:	je	0x4165f8
0x4165a8:	lea	r10, [rax - 2]
0x4165ac:	cmp	r10, 0x4c74d0
0x4165b3:	jb	0x4165c1
0x4165b5:	cmp	byte ptr [rax - 2], 0x5b
0x4165b9:	jne	0x4165c1
0x4165bb:	cmp	byte ptr [rax - 1], 0x5e
0x4165bf:	je	0x4165f8
0x4165c1:	cmp	r15b, 0x5d
0x4165c5:	je	0x4165f8
0x4165c7:	xor	ecx, ecx
0x4165c9:	mov	r9, rbp
0x4165cc:	mov	r8d, 0x3b2fc
0x4165d2:	mov	edx, 0x4c74f5
0x4165d7:	lea	rsi, [rsp + 0x98]
0x4165df:	mov	edi, r14d
0x4165e2:	call	0x42458d
0x4165e7:	test	eax, eax
0x4165e9:	jne	0x415f2a
0x4165ef:	or	r14d, 0xffffffff
0x4165f3:	jmp	0x416525
0x4165f8:	mov	r11b, byte ptr [rax + 1]
0x4165fc:	cmp	r11b, 0x2d
0x416600:	jne	0x41664e
0x416602:	cmp	byte ptr [rax + 2], 0x5d
0x416606:	je	0x416cc3
0x41660c:	cmp	r13, 0x4c74f5
0x416613:	je	0x417c44
0x416619:	add	rax, 2
0x41661d:	movzx	edi, dl
0x416620:	xor	ecx, ecx
0x416622:	mov	r9, rbp
0x416625:	mov	r8d, 0x3b2fc
0x41662b:	mov	edx, 0x4c74f5
0x416630:	lea	rsi, [rsp + 0x98]
0x416638:	mov	qword ptr [rsp + 0x98], rax
0x416640:	call	0x42458d
0x416645:	test	eax, eax
0x416647:	je	0x4165ef
0x416649:	jmp	0x415f2a
0x41664e:	cmp	dl, 0x5b
0x416651:	jne	0x416cc3
0x416657:	cmp	r11b, 0x3a
0x41665b:	jne	0x416a79
0x416661:	cmp	r13, 0x4c74f5
0x416668:	je	0x417c44
0x41666e:	lea	rbx, [rax + 2]
0x416672:	mov	qword ptr [rsp + 0x98], rbx
0x41667a:	cmp	rbx, 0x4c74f5
0x416681:	je	0x415f2a
0x416687:	xor	eax, eax
0x416689:	mov	r9b, byte ptr [rbx]
0x41668c:	lea	r13, [rbx + 1]
0x416690:	cmp	r9b, 0x3a
0x416694:	jne	0x41669c
0x416696:	cmp	byte ptr [rbx + 1], 0x5d
0x41669a:	je	0x4166c9
0x41669c:	cmp	r13, 0x4c74f5
0x4166a3:	je	0x4166ce
0x4166a5:	cmp	al, 5
0x4166a7:	ja	0x4166bc
0x4166a9:	movzx	r11d, al
0x4166ad:	inc	eax
0x4166af:	mov	byte ptr [rsp + r11 + 0xe0], r9b
0x4166b7:	jmp	0x417dea
0x4166bc:	mov	byte ptr [rsp + 0xe0], 0
0x4166c4:	jmp	0x417dea
0x4166c9:	mov	rdx, r13
0x4166cc:	jmp	0x4166d3
0x4166ce:	mov	edx, 0x4c74f5
0x4166d3:	movzx	edi, al
0x4166d6:	mov	qword ptr [rsp + 0x98], rdx
0x4166de:	mov	byte ptr [rsp + rdi + 0xe0], 0
0x4166e6:	cmp	r9b, 0x3a
0x4166ea:	jne	0x416a3a
0x4166f0:	cmp	byte ptr [rbx + 1], 0x5d
0x4166f4:	jne	0x416a3a
0x4166fa:	mov	esi, 0x4c6d38
0x4166ff:	lea	rdi, [rsp + 0xe0]
0x416707:	call	0x403be0
0x41670c:	mov	esi, 0x4c6d3e
0x416711:	lea	rdi, [rsp + 0xe0]
0x416719:	mov	dword ptr [rsp + 0x40], eax
0x41671d:	call	0x403be0
0x416722:	mov	esi, 0x4c6d44
0x416727:	lea	rdi, [rsp + 0xe0]
0x41672f:	mov	dword ptr [rsp + 0x48], eax
0x416733:	call	0x403be0
0x416738:	mov	esi, 0x4c6d4a
0x41673d:	lea	rdi, [rsp + 0xe0]
0x416745:	mov	dword ptr [rsp + 0x4c], eax
0x416749:	call	0x403be0
0x41674e:	mov	esi, 0x4c6d63
0x416753:	lea	rdi, [rsp + 0xe0]
0x41675b:	mov	dword ptr [rsp + 0x50], eax
0x41675f:	call	0x403be0
0x416764:	mov	esi, 0x45f941
0x416769:	lea	rdi, [rsp + 0xe0]
0x416771:	mov	dword ptr [rsp + 0x54], eax
0x416775:	call	0x403be0
0x41677a:	mov	esi, 0x4c6d50
0x41677f:	lea	rdi, [rsp + 0xe0]
0x416787:	mov	dword ptr [rsp + 0x58], eax
0x41678b:	call	0x403be0
0x416790:	mov	esi, 0x4c6d56
0x416795:	lea	rdi, [rsp + 0xe0]
0x41679d:	mov	dword ptr [rsp + 0x5c], eax
0x4167a1:	call	0x403be0
0x4167a6:	mov	esi, 0x4c6d5c
0x4167ab:	lea	rdi, [rsp + 0xe0]
0x4167b3:	mov	dword ptr [rsp + 0x60], eax
0x4167b7:	call	0x403be0
0x4167bc:	mov	esi, 0x45f2d2
0x4167c1:	lea	rdi, [rsp + 0xe0]
0x4167c9:	mov	dword ptr [rsp + 0x64], eax
0x4167cd:	call	0x403be0
0x4167d2:	mov	esi, 0x4633d0
0x4167d7:	lea	rdi, [rsp + 0xe0]
0x4167df:	mov	dword ptr [rsp + 0x68], eax
0x4167e3:	call	0x403be0
0x4167e8:	mov	esi, 0x4c6d62
0x4167ed:	lea	rdi, [rsp + 0xe0]
0x4167f5:	mov	dword ptr [rsp + 0x6c], eax
0x4167f9:	call	0x403be0
0x4167fe:	cmp	dword ptr [rsp + 0x6c], 0
0x416803:	setne	sil
0x416807:	cmp	dword ptr [rsp + 0x48], 0
0x41680c:	mov	r15d, eax
0x41680f:	setne	r8b
0x416813:	and	esi, r8d
0x416816:	cmp	dword ptr [rsp + 0x5c], 0
0x41681b:	setne	r10b
0x41681f:	and	esi, r10d
0x416822:	cmp	dword ptr [rsp + 0x54], 0
0x416827:	setne	r9b
0x41682b:	and	esi, r9d
0x41682e:	cmp	dword ptr [rsp + 0x40], 0
0x416833:	setne	r11b
0x416837:	and	esi, r11d
0x41683a:	test	eax, eax
0x41683c:	setne	dil
0x416840:	and	esi, edi
0x416842:	cmp	dword ptr [rsp + 0x68], 0
0x416847:	setne	cl
0x41684a:	and	esi, ecx
0x41684c:	cmp	dword ptr [rsp + 0x60], 0
0x416851:	setne	al
0x416854:	and	esi, eax
0x416856:	cmp	dword ptr [rsp + 0x64], 0
0x41685b:	setne	dl
0x41685e:	and	esi, edx
0x416860:	cmp	dword ptr [rsp + 0x58], 0
0x416865:	setne	r8b
0x416869:	and	esi, r8d
0x41686c:	cmp	dword ptr [rsp + 0x50], 0
0x416871:	setne	r10b
0x416875:	test	sil, r10b
0x416878:	je	0x416885
0x41687a:	cmp	dword ptr [rsp + 0x4c], 0
0x41687f:	jne	0x415f2a
0x416885:	cmp	r13, 0x4c74f5
0x41688c:	je	0x417c44
0x416892:	lea	r13, [rbx + 2]
0x416896:	mov	qword ptr [rsp + 0x98], r13
0x41689e:	cmp	r13, 0x4c74f5
0x4168a5:	je	0x415f2a
0x4168ab:	xor	ebx, ebx
0x4168ad:	xor	r13d, r13d
0x4168b0:	cmp	dword ptr [rsp + 0x40], 0
0x4168b5:	jne	0x4168c5
0x4168b7:	call	0x403f50
0x4168bc:	mov	rsi, qword ptr [rax]
0x4168bf:	test	byte ptr [rsi + rbx], 8
0x4168c3:	jne	0x416909
0x4168c5:	cmp	dword ptr [rsp + 0x48], 0
0x4168ca:	jne	0x4168de
0x4168cc:	call	0x403f50
0x4168d1:	mov	r9, qword ptr [rax]
0x4168d4:	mov	cx, word ptr [r9 + rbx]
0x4168d9:	test	ch, 4
0x4168dc:	jne	0x416909
0x4168de:	cmp	dword ptr [rsp + 0x4c], 0
0x4168e3:	jne	0x4168f4
0x4168e5:	call	0x403f50
0x4168ea:	mov	r11, qword ptr [rax]
0x4168ed:	test	byte ptr [r11 + rbx], 1
0x4168f2:	jne	0x416909
0x4168f4:	cmp	dword ptr [rsp + 0x50], 0
0x4168f9:	jne	0x416925
0x4168fb:	call	0x403f50
0x416900:	mov	rdi, qword ptr [rax]
0x416903:	test	byte ptr [rdi + rbx], 2
0x416907:	je	0x416925
0x416909:	mov	eax, r13d
0x41690c:	mov	ecx, r13d
0x41690f:	mov	edx, 1
0x416914:	shr	al, 3
0x416917:	and	ecx, 7
0x41691a:	movzx	r8d, al
0x41691e:	shl	edx, cl
0x416920:	or	byte ptr [rbp + r8], dl
0x416925:	cmp	dword ptr [rsp + 0x54], 0
0x41692a:	jne	0x41693e
0x41692c:	call	0x403f50
0x416931:	mov	r10, qword ptr [rax]
0x416934:	mov	ax, word ptr [r10 + rbx]
0x416939:	test	ah, 8
0x41693c:	jne	0x416986
0x41693e:	cmp	dword ptr [rsp + 0x58], 0
0x416943:	jne	0x416954
0x416945:	call	0x403f50
0x41694a:	mov	rsi, qword ptr [rax]
0x41694d:	cmp	word ptr [rsi + rbx], 0
0x416952:	js	0x416986
0x416954:	cmp	dword ptr [rsp + 0x5c], 0
0x416959:	jne	0x41696d
0x41695b:	call	0x403f50
0x416960:	mov	r9, qword ptr [rax]
0x416963:	mov	cx, word ptr [r9 + rbx]
0x416968:	test	ch, 2
0x41696b:	jne	0x416986
0x41696d:	cmp	dword ptr [rsp + 0x60], 0
0x416972:	jne	0x4169a5
0x416974:	call	0x403f50
0x416979:	mov	r11, qword ptr [rax]
0x41697c:	mov	dx, word ptr [r11 + rbx]
0x416981:	test	dh, 0x40
0x416984:	je	0x4169a5
0x416986:	mov	edi, r13d
0x416989:	mov	ecx, r13d
0x41698c:	mov	r10d, 1
0x416992:	shr	dil, 3
0x416996:	and	ecx, 7
0x416999:	movzx	r8d, dil
0x41699d:	shl	r10d, cl
0x4169a0:	or	byte ptr [rbp + r8], r10b
0x4169a5:	cmp	dword ptr [rsp + 0x64], 0
0x4169aa:	jne	0x4169ba
0x4169ac:	call	0x403f50
0x4169b1:	mov	rax, qword ptr [rax]
0x4169b4:	test	byte ptr [rax + rbx], 4
0x4169b8:	jne	0x416a02
0x4169ba:	cmp	dword ptr [rsp + 0x68], 0
0x4169bf:	jne	0x4169d2
0x4169c1:	call	0x403f50
0x4169c6:	mov	rsi, qword ptr [rax]
0x4169c9:	mov	dx, word ptr [rsi + rbx]
0x4169cd:	test	dh, 0x20
0x4169d0:	jne	0x416a02
0x4169d2:	cmp	dword ptr [rsp + 0x6c], 0
0x4169d7:	jne	0x4169eb
0x4169d9:	call	0x403f50
0x4169de:	mov	r9, qword ptr [rax]
0x4169e1:	mov	cx, word ptr [r9 + rbx]
0x4169e6:	test	ch, 1
0x4169e9:	jne	0x416a02
0x4169eb:	test	r15d, r15d
0x4169ee:	jne	0x416a21
0x4169f0:	call	0x403f50
0x4169f5:	mov	r11, qword ptr [rax]
0x4169f8:	mov	ax, word ptr [r11 + rbx]
0x4169fd:	test	ah, 0x10
0x416a00:	je	0x416a21
0x416a02:	mov	edi, r13d
0x416a05:	mov	ecx, r13d
0x416a08:	mov	r10d, 1
0x416a0e:	shr	dil, 3
0x416a12:	and	ecx, 7
0x416a15:	movzx	r8d, dil
0x416a19:	shl	r10d, cl
0x416a1c:	or	byte ptr [rbp + r8], r10b
0x416a21:	inc	r13d
0x416a24:	add	rbx, 2
0x416a28:	cmp	r13d, 0x100
0x416a2f:	jne	0x4168b0
0x416a35:	jmp	0x416b5b
0x416a3a:	inc	eax
0x416a3c:	xor	r14d, r14d
0x416a3f:	mov	ebx, eax
0x416a41:	dec	ebx
0x416a43:	cmp	bl, 0xff
0x416a46:	je	0x416a4d
0x416a48:	mov	r14b, 1
0x416a4b:	jmp	0x416a41
0x416a4d:	movzx	ecx, al
0x416a50:	sub	rdx, rcx
0x416a53:	test	r14b, r14b
0x416a56:	je	0x416a60
0x416a58:	mov	qword ptr [rsp + 0x98], rdx
0x416a60:	or	byte ptr [r12 + 0xc], 8
0x416a66:	mov	r14d, 0x3a
0x416a6c:	xor	ebx, ebx
0x416a6e:	or	byte ptr [r12 + 8], 4
0x416a74:	jmp	0x416525
0x416a79:	cmp	r11b, 0x3d
0x416a7d:	jne	0x416ba2
0x416a83:	cmp	r13, 0x4c74f5
0x416a8a:	je	0x417c44
0x416a90:	add	rax, 2
0x416a94:	mov	qword ptr [rsp + 0x98], rax
0x416a9c:	cmp	rax, 0x4c74f5
0x416aa2:	je	0x415f2a
0x416aa8:	xor	edx, edx
0x416aaa:	mov	dil, byte ptr [rax]
0x416aad:	lea	r11, [rax + 1]
0x416ab1:	cmp	dil, 0x3d
0x416ab5:	jne	0x416abd
0x416ab7:	cmp	byte ptr [rax + 1], 0x5d
0x416abb:	je	0x416aea
0x416abd:	cmp	r11, 0x4c74f5
0x416ac4:	je	0x416aef
0x416ac6:	cmp	dl, 0xf
0x416ac9:	ja	0x416add
0x416acb:	movzx	eax, dl
0x416ace:	inc	edx
0x416ad0:	mov	byte ptr [rsp + rax + 0xe0], dil
0x416ad8:	jmp	0x417df2
0x416add:	mov	byte ptr [rsp + 0xe0], 0
0x416ae5:	jmp	0x417df2
0x416aea:	mov	rsi, r11
0x416aed:	jmp	0x416af4
0x416aef:	mov	esi, 0x4c74f5
0x416af4:	movzx	r13d, dl
0x416af8:	mov	qword ptr [rsp + 0x98], rsi
0x416b00:	mov	byte ptr [rsp + r13 + 0xe0], 0
0x416b09:	cmp	dil, 0x3d
0x416b0d:	jne	0x416b62
0x416b0f:	cmp	byte ptr [rax + 1], 0x5d
0x416b13:	jne	0x416b62
0x416b15:	mov	cl, byte ptr [rsp + 0xe0]
0x416b1c:	test	cl, cl
0x416b1e:	je	0x416b62
0x416b20:	dec	dl
0x416b22:	jne	0x415f2a
0x416b28:	cmp	r11, 0x4c74f5
0x416b2f:	je	0x417c44
0x416b35:	add	rax, 2
0x416b39:	mov	r10d, 1
0x416b3f:	mov	qword ptr [rsp + 0x98], rax
0x416b47:	mov	eax, ecx
0x416b49:	and	ecx, 7
0x416b4c:	shr	al, 3
0x416b4f:	shl	r10d, cl
0x416b52:	movzx	r8d, al
0x416b56:	or	byte ptr [rbp + r8], r10b
0x416b5b:	mov	bl, 1
0x416b5d:	jmp	0x416525
0x416b62:	inc	edx
0x416b64:	xor	r15d, r15d
0x416b67:	mov	ebx, edx
0x416b69:	dec	ebx
0x416b6b:	cmp	bl, 0xff
0x416b6e:	je	0x416b75
0x416b70:	mov	r15b, 1
0x416b73:	jmp	0x416b69
0x416b75:	movzx	r14d, dl
0x416b79:	sub	rsi, r14
0x416b7c:	test	r15b, r15b
0x416b7f:	je	0x416b89
0x416b81:	mov	qword ptr [rsp + 0x98], rsi
0x416b89:	or	byte ptr [r12 + 0xc], 8
0x416b8f:	mov	r14d, 0x3d
0x416b95:	xor	ebx, ebx
0x416b97:	or	byte ptr [r12 + 8], 0x20
0x416b9d:	jmp	0x416525
0x416ba2:	cmp	r11b, 0x2e
0x416ba6:	jne	0x416cc3
0x416bac:	cmp	r13, 0x4c74f5
0x416bb3:	je	0x417c44
0x416bb9:	add	rax, 2
0x416bbd:	mov	qword ptr [rsp + 0x98], rax
0x416bc5:	cmp	rax, 0x4c74f5
0x416bcb:	je	0x415f2a
0x416bd1:	xor	edx, edx
0x416bd3:	mov	bl, byte ptr [rax]
0x416bd5:	lea	r14, [rax + 1]
0x416bd9:	cmp	bl, 0x2e
0x416bdc:	jne	0x416be4
0x416bde:	cmp	byte ptr [rax + 1], 0x5d
0x416be2:	je	0x416c0f
0x416be4:	cmp	r14, 0x4c74f5
0x416beb:	je	0x416c14
0x416bed:	test	dl, dl
0x416bef:	js	0x416c02
0x416bf1:	movzx	ecx, dl
0x416bf4:	inc	edx
0x416bf6:	mov	byte ptr [rsp + rcx + 0xe0], bl
0x416bfd:	jmp	0x417dfa
0x416c02:	mov	byte ptr [rsp + 0xe0], 0
0x416c0a:	jmp	0x417dfa
0x416c0f:	mov	r15, r14
0x416c12:	jmp	0x416c1a
0x416c14:	mov	r15d, 0x4c74f5
0x416c1a:	movzx	edi, dl
0x416c1d:	mov	qword ptr [rsp + 0x98], r15
0x416c25:	mov	byte ptr [rsp + rdi + 0xe0], 0
0x416c2d:	cmp	bl, 0x2e
0x416c30:	jne	0x416c88
0x416c32:	cmp	byte ptr [rax + 1], 0x5d
0x416c36:	jne	0x416c88
0x416c38:	mov	sil, byte ptr [rsp + 0xe0]
0x416c40:	test	sil, sil
0x416c43:	je	0x416c88
0x416c45:	dec	dl
0x416c47:	jne	0x415f2a
0x416c4d:	cmp	r14, 0x4c74f5
0x416c54:	je	0x417c44
0x416c5a:	mov	ecx, esi
0x416c5c:	add	rax, 2
0x416c60:	mov	r9d, 1
0x416c66:	movzx	r14d, sil
0x416c6a:	shr	cl, 3
0x416c6d:	mov	qword ptr [rsp + 0x98], rax
0x416c75:	movzx	r10d, cl
0x416c79:	mov	ecx, esi
0x416c7b:	and	ecx, 7
0x416c7e:	shl	r9d, cl
0x416c81:	or	byte ptr [rbp + r10], r9b
0x416c86:	jmp	0x416ce3
0x416c88:	inc	edx
0x416c8a:	xor	r8d, r8d
0x416c8d:	mov	ebx, edx
0x416c8f:	dec	ebx
0x416c91:	cmp	bl, 0xff
0x416c94:	je	0x416c9b
0x416c96:	mov	r8b, 1
0x416c99:	jmp	0x416c8f
0x416c9b:	movzx	r13d, dl
0x416c9f:	sub	r15, r13
0x416ca2:	test	r8b, r8b
0x416ca5:	je	0x416caf
0x416ca7:	mov	qword ptr [rsp + 0x98], r15
0x416caf:	or	byte ptr [r12 + 0xc], 8
0x416cb5:	mov	r14d, 0x2e
0x416cbb:	or	byte ptr [r12 + 6], 0x40
0x416cc1:	jmp	0x416ce3
0x416cc3:	mov	ebx, edx
0x416cc5:	mov	ecx, edx
0x416cc7:	mov	r15d, 1
0x416ccd:	shr	bl, 3
0x416cd0:	and	ecx, 7
0x416cd3:	movzx	r14d, bl
0x416cd7:	shl	r15d, cl
0x416cda:	or	byte ptr [rbp + r14], r15b
0x416cdf:	movzx	r14d, dl
0x416ce3:	xor	ebx, ebx
0x416ce5:	jmp	0x416525
0x416cea:	cmp	byte ptr [r12 + rbp], 0
0x416cef:	jne	0x416d04
0x416cf1:	dec	esi
0x416cf3:	mov	byte ptr [r12], sil
0x416cf7:	movzx	ebp, byte ptr [r12]
0x416cfc:	mov	rsi, rbp
0x416cff:	test	bpl, bpl
0x416d02:	jne	0x416cea
0x416d04:	add	rbp, qword ptr [rsp + 0x38]
0x416d09:	jmp	0x415ee5
0x416d0e:	cmp	r9, 0x4c74f5
0x416d15:	je	0x415f2a
0x416d1b:	lea	rax, [rbx + 2]
0x416d1f:	mov	bl, byte ptr [rbx + 1]
0x416d22:	mov	qword ptr [rsp + 0x98], rax
0x416d2a:	mov	r12d, ebx
0x416d2d:	cmp	bl, 0x42
0x416d30:	je	0x41782f
0x416d36:	jg	0x416d86
0x416d38:	cmp	bl, 0x3c
0x416d3b:	je	0x417674
0x416d41:	jg	0x416d78
0x416d43:	cmp	bl, 0x27
0x416d46:	je	0x417956
0x416d4c:	lea	esi, [rbx - 0x31]
0x416d4f:	cmp	sil, 8
0x416d53:	ja	0x417a56
0x416d59:	sub	ebx, 0x30
0x416d5c:	movzx	r10d, bl
0x416d60:	cmp	dword ptr [rsp + 0x20], r10d
0x416d65:	jb	0x415f2a
0x416d6b:	mov	eax, dword ptr [rsp + 0x1c]
0x416d6f:	dec	eax
0x416d71:	cdqe	
0x416d73:	jmp	0x4179be
0x416d78:	cmp	bl, 0x3e
0x416d7b:	jne	0x417a56
0x416d81:	jmp	0x417708
0x416d86:	cmp	bl, 0x62
0x416d89:	je	0x41779b
0x416d8f:	jg	0x416da8
0x416d91:	cmp	bl, 0x57
0x416d94:	je	0x4175a7
0x416d9a:	cmp	bl, 0x60
0x416d9d:	je	0x4178c3
0x416da3:	jmp	0x417a56
0x416da8:	cmp	bl, 0x77
0x416dab:	jne	0x417a56
0x416db1:	mov	r15, rbp
0x416db4:	jmp	0x41755f
0x416db9:	inc	qword ptr [rsp + 0xd0]
0x416dc1:	mov	r10d, dword ptr [rsp + 0x1c]
0x416dc6:	inc	dword ptr [rsp + 0x20]
0x416dca:	cmp	dword ptr [rsp + 0x24], r10d
0x416dcf:	jne	0x416df5
0x416dd1:	shl	dword ptr [rsp + 0x24], 1
0x416dd5:	mov	ecx, dword ptr [rsp + 0x24]
0x416dd9:	mov	rdi, qword ptr [rsp + 0x10]
0x416dde:	imul	rsi, rcx, 0x28
0x416de2:	call	0x403d20
0x416de7:	mov	qword ptr [rsp + 0x10], rax
0x416dec:	test	rax, rax
0x416def:	je	0x417c44
0x416df5:	mov	r11, qword ptr [rsp + 0xa0]
0x416dfd:	mov	edx, dword ptr [rsp + 0x1c]
0x416e01:	xor	r9d, r9d
0x416e04:	mov	r15, qword ptr [rsp + 8]
0x416e09:	imul	rsi, rdx, 0x28
0x416e0d:	add	rsi, qword ptr [rsp + 0x10]
0x416e12:	sub	r15, r11
0x416e15:	mov	qword ptr [rsi], r15
0x416e18:	test	r14, r14
0x416e1b:	je	0x416e26
0x416e1d:	mov	r9, r14
0x416e20:	sub	r9, r11
0x416e23:	inc	r9
0x416e26:	mov	edi, dword ptr [rsp + 0x20]
0x416e2a:	mov	r14, rbp
0x416e2d:	mov	qword ptr [rsi + 8], r9
0x416e31:	sub	r14, r11
0x416e34:	mov	qword ptr [rsi + 0x18], r14
0x416e38:	mov	dword ptr [rsi + 0x20], edi
0x416e3b:	cmp	edi, 0xff
0x416e41:	ja	0x416ed6
0x416e47:	add	r14, 2
0x416e4b:	mov	qword ptr [rsi + 0x10], r14
0x416e4f:	mov	rbx, qword ptr [rsp + 0xa0]
0x416e57:	mov	r12, rbp
0x416e5a:	mov	rsi, qword ptr [rsp + 0xa8]
0x416e62:	sub	r12, rbx
0x416e65:	add	r12, 3
0x416e69:	cmp	rsi, r12
0x416e6c:	jae	0x416ec1
0x416e6e:	cmp	rsi, 0x10000
0x416e75:	je	0x417c44
0x416e7b:	mov	r8d, 0x10000
0x416e81:	add	rsi, rsi
0x416e84:	mov	rdi, rbx
0x416e87:	cmp	rsi, r8
0x416e8a:	cmova	rsi, r8
0x416e8e:	mov	qword ptr [rsp + 0xa8], rsi
0x416e96:	call	0x403d20
0x416e9b:	mov	qword ptr [rsp + 0xa0], rax
0x416ea3:	test	rax, rax
0x416ea6:	je	0x417c44
0x416eac:	cmp	rbx, rax
0x416eaf:	je	0x416e4f
0x416eb1:	sub	rax, rbx
0x416eb4:	add	rbp, rax
0x416eb7:	test	r13, r13
0x416eba:	je	0x416e4f
0x416ebc:	add	r13, rax
0x416ebf:	jmp	0x416e4f
0x416ec1:	mov	r13b, byte ptr [rsp + 0x20]
0x416ec6:	mov	byte ptr [rbp], 6
0x416eca:	add	rbp, 3
0x416ece:	mov	byte ptr [rbp - 1], 0
0x416ed2:	mov	byte ptr [rbp - 2], r13b
0x416ed6:	inc	dword ptr [rsp + 0x1c]
0x416eda:	xor	r14d, r14d
0x416edd:	xor	r15d, r15d
0x416ee0:	xor	r13d, r13d
0x416ee3:	mov	qword ptr [rsp + 8], rbp
0x416ee8:	jmp	0x415ee5
0x416eed:	test	r14, r14
0x416ef0:	je	0x416f8f
0x416ef6:	mov	r12, qword ptr [rsp + 0xa0]
0x416efe:	mov	rcx, rbp
0x416f01:	mov	rsi, qword ptr [rsp + 0xa8]
0x416f09:	sub	rcx, r12
0x416f0c:	inc	rcx
0x416f0f:	cmp	rsi, rcx
0x416f12:	jae	0x416f76
0x416f14:	cmp	rsi, 0x10000
0x416f1b:	je	0x417c44
0x416f21:	mov	eax, 0x10000
0x416f26:	add	rsi, rsi
0x416f29:	mov	rdi, r12
0x416f2c:	cmp	rsi, rax
0x416f2f:	cmova	rsi, rax
0x416f33:	mov	qword ptr [rsp + 0xa8], rsi
0x416f3b:	call	0x403d20
0x416f40:	mov	qword ptr [rsp + 0xa0], rax
0x416f48:	test	rax, rax
0x416f4b:	je	0x417c44
0x416f51:	cmp	r12, rax
0x416f54:	je	0x416ef6
0x416f56:	sub	rax, r12
0x416f59:	add	qword ptr [rsp + 8], rax
0x416f5e:	add	rbp, rax
0x416f61:	add	r14, rax
0x416f64:	test	r15, r15
0x416f67:	je	0x416f6c
0x416f69:	add	r15, rax
0x416f6c:	test	r13, r13
0x416f6f:	je	0x416ef6
0x416f71:	add	r13, rax
0x416f74:	jmp	0x416ef6
0x416f76:	mov	rdx, rbp
0x416f79:	mov	byte ptr [rbp], 0x14
0x416f7d:	inc	rbp
0x416f80:	sub	rdx, r14
0x416f83:	mov	byte ptr [r14], 0xe
0x416f87:	sub	edx, 3
0x416f8a:	mov	word ptr [r14 + 1], dx
0x416f8f:	cmp	dword ptr [rsp + 0x1c], 0
0x416f94:	mov	r11, qword ptr [rsp + 0xa0]
0x416f9c:	je	0x417a53
0x416fa2:	dec	dword ptr [rsp + 0x1c]
0x416fa6:	mov	r14d, dword ptr [rsp + 0x1c]
0x416fab:	imul	rsi, r14, 0x28
0x416faf:	add	rsi, qword ptr [rsp + 0x10]
0x416fb4:	xor	r14d, r14d
0x416fb7:	mov	r15, qword ptr [rsi]
0x416fba:	mov	r9, qword ptr [rsi + 8]
0x416fbe:	add	r15, r11
0x416fc1:	mov	qword ptr [rsp + 8], r15
0x416fc6:	test	r9, r9
0x416fc9:	je	0x416fd0
0x416fcb:	lea	r14, [r11 + r9 - 1]
0x416fd0:	mov	r15, qword ptr [rsi + 0x18]
0x416fd4:	mov	ebx, dword ptr [rsi + 0x20]
0x416fd7:	xor	r13d, r13d
0x416fda:	add	r15, r11
0x416fdd:	cmp	ebx, 0xff
0x416fe3:	ja	0x415ee5
0x416fe9:	mov	r12b, byte ptr [rsp + 0x20]
0x416fee:	mov	r13, qword ptr [rsi + 0x10]
0x416ff2:	sub	r12d, ebx
0x416ff5:	mov	byte ptr [r11 + r13], r12b
0x416ff9:	mov	r13, qword ptr [rsp + 0xa0]
0x417001:	mov	rdi, rbp
0x417004:	mov	rsi, qword ptr [rsp + 0xa8]
0x41700c:	sub	rdi, r13
0x41700f:	add	rdi, 3
0x417013:	cmp	rsi, rdi
0x417016:	jae	0x417078
0x417018:	cmp	rsi, 0x10000
0x41701f:	je	0x417c44
0x417025:	mov	r8d, 0x10000
0x41702b:	add	rsi, rsi
0x41702e:	mov	rdi, r13
0x417031:	cmp	rsi, r8
0x417034:	cmova	rsi, r8
0x417038:	mov	qword ptr [rsp + 0xa8], rsi
0x417040:	call	0x403d20
0x417045:	mov	qword ptr [rsp + 0xa0], rax
0x41704d:	test	rax, rax
0x417050:	je	0x417c44
0x417056:	cmp	r13, rax
0x417059:	je	0x416ff9
0x41705b:	sub	rax, r13
0x41705e:	add	qword ptr [rsp + 8], rax
0x417063:	add	rbp, rax
0x417066:	test	r14, r14
0x417069:	je	0x41706e
0x41706b:	add	r14, rax
0x41706e:	test	r15, r15
0x417071:	je	0x416ff9
0x417073:	add	r15, rax
0x417076:	jmp	0x416ff9
0x417078:	mov	byte ptr [rbp], 7
0x41707c:	xor	r13d, r13d
0x41707f:	add	rbp, 3
0x417083:	mov	byte ptr [rbp - 2], bl
0x417086:	mov	byte ptr [rbp - 1], r12b
0x41708a:	jmp	0x415ee5
0x41708f:	cmp	rsi, 0x10000
0x417096:	je	0x417c44
0x41709c:	mov	edi, 0x10000
0x4170a1:	add	rsi, rsi
0x4170a4:	cmp	rsi, rdi
0x4170a7:	cmova	rsi, rdi
0x4170ab:	mov	rdi, r12
0x4170ae:	mov	qword ptr [rsp + 0xa8], rsi
0x4170b6:	call	0x403d20
0x4170bb:	mov	qword ptr [rsp + 0xa0], rax
0x4170c3:	test	rax, rax
0x4170c6:	je	0x417c44
0x4170cc:	cmp	r12, rax
0x4170cf:	jne	0x4170f2
0x4170d1:	mov	r12, qword ptr [rsp + 0xa0]
0x4170d9:	mov	r10, rbp
0x4170dc:	mov	rsi, qword ptr [rsp + 0xa8]
0x4170e4:	sub	r10, r12
0x4170e7:	add	r10, 3
0x4170eb:	cmp	rsi, r10
0x4170ee:	jb	0x41708f
0x4170f0:	jmp	0x417117
0x4170f2:	sub	rax, r12
0x4170f5:	add	qword ptr [rsp + 8], rax
0x4170fa:	add	rbp, rax
0x4170fd:	test	r14, r14
0x417100:	je	0x417105
0x417102:	add	r14, rax
0x417105:	test	r15, r15
0x417108:	je	0x41710d
0x41710a:	add	r15, rax
0x41710d:	test	r13, r13
0x417110:	je	0x4170d1
0x417112:	add	r13, rax
0x417115:	jmp	0x4170d1
0x417117:	mov	rsi, qword ptr [rsp + 8]
0x41711c:	mov	rdx, rbp
0x41711f:	sub	rdx, qword ptr [rsp + 8]
0x417124:	lea	r13, [rbp + 3]
0x417128:	lea	rdi, [rsi + 3]
0x41712c:	call	0x403d90
0x417131:	mov	r9, qword ptr [rsp + 8]
0x417136:	mov	r11, qword ptr [rsp + 8]
0x41713b:	sub	ebp, dword ptr [rsp + 8]
0x41713f:	lea	ecx, [rbp + 3]
0x417142:	mov	byte ptr [r9], 0xf
0x417146:	mov	word ptr [r11 + 1], cx
0x41714b:	test	r14, r14
0x41714e:	je	0x417162
0x417150:	mov	rax, r13
0x417153:	mov	byte ptr [r14], 0xe
0x417157:	sub	rax, r14
0x41715a:	sub	eax, 3
0x41715d:	mov	word ptr [r14 + 1], ax
0x417162:	mov	r14, r13
0x417165:	mov	rbp, qword ptr [rsp + 0xa0]
0x41716d:	mov	rdx, r14
0x417170:	mov	rsi, qword ptr [rsp + 0xa8]
0x417178:	sub	rdx, rbp
0x41717b:	add	rdx, 3
0x41717f:	cmp	rsi, rdx
0x417182:	jae	0x4171d6
0x417184:	cmp	rsi, 0x10000
0x41718b:	je	0x417c44
0x417191:	add	rsi, rsi
0x417194:	mov	ebx, 0x10000
0x417199:	mov	rdi, rbp
0x41719c:	cmp	rsi, rbx
0x41719f:	cmova	rsi, rbx
0x4171a3:	mov	qword ptr [rsp + 0xa8], rsi
0x4171ab:	call	0x403d20
0x4171b0:	mov	qword ptr [rsp + 0xa0], rax
0x4171b8:	test	rax, rax
0x4171bb:	je	0x417c44
0x4171c1:	cmp	rbp, rax
0x4171c4:	je	0x417165
0x4171c6:	sub	rax, rbp
0x4171c9:	add	r14, rax
0x4171cc:	test	r15, r15
0x4171cf:	je	0x417165
0x4171d1:	add	r15, rax
0x4171d4:	jmp	0x417165
0x4171d6:	lea	rbp, [r14 + 3]
0x4171da:	xor	r15d, r15d
0x4171dd:	xor	r13d, r13d
0x4171e0:	mov	qword ptr [rsp + 8], rbp
0x4171e5:	jmp	0x415ee5
0x4171ea:	cmp	r9, 0x4c74f5
0x4171f1:	je	0x415f2a
0x4171f7:	or	edx, 0xffffffff
0x4171fa:	mov	r11b, byte ptr [r9]
0x4171fd:	inc	r9
0x417200:	lea	ecx, [r11 - 0x30]
0x417204:	cmp	cl, 9
0x417207:	ja	0x41723d
0x417209:	cmp	edx, 0x7fff
0x41720f:	jg	0x417223
0x417211:	cmp	edx, -1
0x417214:	jne	0x417218
0x417216:	xor	edx, edx
0x417218:	imul	eax, edx, 0xa
0x41721b:	movzx	edi, r11b
0x41721f:	lea	edx, [rax + rdi - 0x30]
0x417223:	cmp	r9, 0x4c74f5
0x41722a:	jne	0x4171fa
0x41722c:	mov	qword ptr [rsp + 0x98], 0x4c74f5
0x417238:	mov	r10d, edx
0x41723b:	jmp	0x4172b6
0x41723d:	mov	qword ptr [rsp + 0x98], r9
0x417245:	mov	r10d, edx
0x417248:	cmp	r11b, 0x2c
0x41724c:	jne	0x4172b6
0x41724e:	xor	ebx, ebx
0x417250:	or	r10d, 0xffffffff
0x417254:	cmp	r9, 0x4c74f5
0x41725b:	je	0x41729a
0x41725d:	mov	r11b, byte ptr [r9]
0x417260:	inc	r9
0x417263:	lea	esi, [r11 - 0x30]
0x417267:	cmp	sil, 9
0x41726b:	jbe	0x417277
0x41726d:	mov	qword ptr [rsp + 0x98], r9
0x417275:	jmp	0x4172aa
0x417277:	cmp	r10d, 0x7fff
0x41727e:	jg	0x417296
0x417280:	cmp	r10d, -1
0x417284:	jne	0x417289
0x417286:	xor	r10d, r10d
0x417289:	imul	r12d, r10d, 0xa
0x41728d:	movzx	r8d, r11b
0x417291:	lea	r10d, [r12 + r8 - 0x30]
0x417296:	mov	bl, 1
0x417298:	jmp	0x417254
0x41729a:	test	bl, bl
0x41729c:	je	0x4172aa
0x41729e:	mov	qword ptr [rsp + 0x98], 0x4c74f5
0x4172aa:	cmp	r10d, -1
0x4172ae:	jne	0x4172b6
0x4172b0:	mov	r10d, 0x7fff
0x4172b6:	mov	r9d, edx
0x4172b9:	shr	r9d, 0x1f
0x4172bd:	cmp	edx, r10d
0x4172c0:	setg	cl
0x4172c3:	or	cl, r9b
0x4172c6:	jne	0x415f2a
0x4172cc:	cmp	r11b, 0x7d
0x4172d0:	jne	0x415f2a
0x4172d6:	test	r15, r15
0x4172d9:	je	0x415f2a
0x4172df:	cmp	r10d, 0x7fff
0x4172e6:	jg	0x415f2a
0x4172ec:	test	r10d, r10d
0x4172ef:	jne	0x4173a3
0x4172f5:	mov	rbx, qword ptr [rsp + 0xa0]
0x4172fd:	mov	rdi, rbp
0x417300:	mov	rsi, qword ptr [rsp + 0xa8]
0x417308:	sub	rdi, rbx
0x41730b:	add	rdi, 3
0x41730f:	cmp	rsi, rdi
0x417312:	jae	0x417373
0x417314:	cmp	rsi, 0x10000
0x41731b:	je	0x417c44
0x417321:	mov	r8d, 0x10000
0x417327:	add	rsi, rsi
0x41732a:	mov	rdi, rbx
0x41732d:	cmp	rsi, r8
0x417330:	cmova	rsi, r8
0x417334:	mov	qword ptr [rsp + 0xa8], rsi
0x41733c:	call	0x403d20
0x417341:	mov	qword ptr [rsp + 0xa0], rax
0x417349:	test	rax, rax
0x41734c:	je	0x417c44
0x417352:	cmp	rbx, rax
0x417355:	je	0x4172f5
0x417357:	sub	rax, rbx
0x41735a:	add	qword ptr [rsp + 8], rax
0x41735f:	add	rbp, rax
0x417362:	test	r14, r14
0x417365:	je	0x417d36
0x41736b:	add	r14, rax
0x41736e:	jmp	0x417d36
0x417373:	mov	rdx, rbp
0x417376:	mov	rsi, r15
0x417379:	add	rbp, 3
0x41737d:	xor	r13d, r13d
0x417380:	sub	rdx, r15
0x417383:	lea	rdi, [r15 + 3]
0x417387:	call	0x403d90
0x41738c:	mov	rsi, rbp
0x41738f:	mov	byte ptr [r15], 0xd
0x417393:	sub	rsi, r15
0x417396:	sub	esi, 3
0x417399:	mov	word ptr [r15 + 1], si
0x41739e:	jmp	0x415ee5
0x4173a3:	cmp	r10d, 1
0x4173a7:	mov	ebx, 0x14
0x4173ac:	mov	dword ptr [rsp + 0x38], r10d
0x4173b1:	mov	r12d, edx
0x4173b4:	mov	r11d, 0xa
0x4173ba:	cmove	rbx, r11
0x4173be:	mov	rdx, qword ptr [rsp + 0xa0]
0x4173c6:	mov	rax, rbp
0x4173c9:	mov	rsi, qword ptr [rsp + 0xa8]
0x4173d1:	sub	rax, rdx
0x4173d4:	add	rax, rbx
0x4173d7:	cmp	rsi, rax
0x4173da:	jae	0x417444
0x4173dc:	cmp	rsi, 0x10000
0x4173e3:	je	0x417c44
0x4173e9:	mov	eax, 0x10000
0x4173ee:	add	rsi, rsi
0x4173f1:	mov	rdi, rdx
0x4173f4:	mov	qword ptr [rsp + 0x40], rdx
0x4173f9:	cmp	rsi, rax
0x4173fc:	cmova	rsi, rax
0x417400:	mov	qword ptr [rsp + 0xa8], rsi
0x417408:	call	0x403d20
0x41740d:	mov	qword ptr [rsp + 0xa0], rax
0x417415:	test	rax, rax
0x417418:	je	0x417c44
0x41741e:	mov	rdx, qword ptr [rsp + 0x40]
0x417423:	cmp	rdx, rax
0x417426:	je	0x4173be
0x417428:	sub	rax, rdx
0x41742b:	add	qword ptr [rsp + 8], rax
0x417430:	add	rbp, rax
0x417433:	test	r14, r14
0x417436:	je	0x417d4a
0x41743c:	add	r14, rax
0x41743f:	jmp	0x417d4a
0x417444:	mov	dword ptr [rsp + 0x40], r12d
0x417449:	mov	r12d, dword ptr [rsp + 0x38]
0x41744e:	xor	r13d, r13d
0x417451:	mov	rdx, rbp
0x417454:	lea	rdi, [r15 + 5]
0x417458:	mov	rsi, r15
0x41745b:	mov	qword ptr [rsp + 0x38], rbp
0x417460:	cmp	r12d, 1
0x417464:	setne	r13b
0x417468:	sub	rdx, r15
0x41746b:	call	0x403d90
0x417470:	mov	r9, qword ptr [rsp + 0x38]
0x417475:	lea	rbx, [r13 + r13*4 + 5]
0x41747a:	mov	ecx, dword ptr [rsp + 0x40]
0x41747e:	mov	byte ptr [r15], 0x15
0x417482:	lea	r13, [rbp + 5]
0x417486:	add	rbx, r9
0x417489:	mov	word ptr [r15 + 3], cx
0x41748e:	lea	rbp, [r9 + 0xa]
0x417492:	sub	rbx, r15
0x417495:	sub	ebx, 3
0x417498:	mov	word ptr [r15 + 1], bx
0x41749d:	cmp	r15, r13
0x4174a0:	je	0x4174af
0x4174a2:	mov	r11b, byte ptr [r13 - 1]
0x4174a6:	dec	r13
0x4174a9:	mov	byte ptr [r13 + 5], r11b
0x4174ad:	jmp	0x41749d
0x4174af:	mov	word ptr [r15], 0x517
0x4174b5:	xor	r13d, r13d
0x4174b8:	mov	byte ptr [r15 + 2], 0
0x4174bd:	mov	word ptr [r15 + 3], cx
0x4174c2:	cmp	r12d, 1
0x4174c6:	je	0x415ee5
0x4174cc:	mov	edi, r15d
0x4174cf:	dec	r12d
0x4174d2:	lea	rsi, [r9 + 0xf]
0x4174d6:	mov	byte ptr [r9 + 0xa], 0x16
0x4174db:	sub	edi, ebp
0x4174dd:	mov	word ptr [r9 + 0xd], r12w
0x4174e2:	mov	r8, rsi
0x4174e5:	lea	rbp, [r9 + 0x14]
0x4174e9:	add	edi, 2
0x4174ec:	sub	r8, r15
0x4174ef:	mov	word ptr [r9 + 0xb], di
0x4174f4:	cmp	r15, rsi
0x4174f7:	je	0x417506
0x4174f9:	mov	r10b, byte ptr [rsi - 1]
0x4174fd:	dec	rsi
0x417500:	mov	byte ptr [rsi + 5], r10b
0x417504:	jmp	0x4174f4
0x417506:	mov	byte ptr [r15], 0x17
0x41750a:	xor	r13d, r13d
0x41750d:	mov	word ptr [r15 + 1], r8w
0x417512:	mov	word ptr [r15 + 3], r12w
0x417517:	jmp	0x415ee5
0x41751c:	cmp	rsi, 0x10000
0x417523:	je	0x417c44
0x417529:	mov	r9d, 0x10000
0x41752f:	add	rsi, rsi
0x417532:	mov	rdi, rbx
0x417535:	cmp	rsi, r9
0x417538:	cmova	rsi, r9
0x41753c:	mov	qword ptr [rsp + 0xa8], rsi
0x417544:	call	0x403d20
0x417549:	mov	qword ptr [rsp + 0xa0], rax
0x417551:	test	rax, rax
0x417554:	je	0x417c44
0x41755a:	cmp	rbx, rax
0x41755d:	jne	0x41757f
0x41755f:	mov	rbx, qword ptr [rsp + 0xa0]
0x417567:	mov	rdx, rbp
0x41756a:	mov	rsi, qword ptr [rsp + 0xa8]
0x417572:	sub	rdx, rbx
0x417575:	inc	rdx
0x417578:	cmp	rsi, rdx
0x41757b:	jb	0x41751c
0x41757d:	jmp	0x41759b
0x41757f:	sub	rax, rbx
0x417582:	add	qword ptr [rsp + 8], rax
0x417587:	add	rbp, rax
0x41758a:	test	r14, r14
0x41758d:	je	0x417dae
0x417593:	add	r14, rax
0x417596:	jmp	0x417dae
0x41759b:	mov	byte ptr [rbp], 0x18
0x41759f:	inc	rbp
0x4175a2:	jmp	0x415ee5
0x4175a7:	mov	r15, rbp
0x4175aa:	mov	r12, qword ptr [rsp + 0xa0]
0x4175b2:	mov	r11, rbp
0x4175b5:	mov	rsi, qword ptr [rsp + 0xa8]
0x4175bd:	sub	r11, r12
0x4175c0:	inc	r11
0x4175c3:	cmp	rsi, r11
0x4175c6:	jae	0x417626
0x4175c8:	cmp	rsi, 0x10000
0x4175cf:	je	0x417c44
0x4175d5:	mov	eax, 0x10000
0x4175da:	add	rsi, rsi
0x4175dd:	mov	rdi, r12
0x4175e0:	cmp	rsi, rax
0x4175e3:	cmova	rsi, rax
0x4175e7:	mov	qword ptr [rsp + 0xa8], rsi
0x4175ef:	call	0x403d20
0x4175f4:	mov	qword ptr [rsp + 0xa0], rax
0x4175fc:	test	rax, rax
0x4175ff:	je	0x417c44
0x417605:	cmp	r12, rax
0x417608:	je	0x4175aa
0x41760a:	sub	rax, r12
0x41760d:	add	qword ptr [rsp + 8], rax
0x417612:	add	rbp, rax
0x417615:	test	r14, r14
0x417618:	je	0x417d9a
0x41761e:	add	r14, rax
0x417621:	jmp	0x417d9a
0x417626:	mov	byte ptr [rbp], 0x19
0x41762a:	inc	rbp
0x41762d:	jmp	0x415ee5
0x417632:	cmp	rsi, 0x10000
0x417639:	je	0x417c44
0x41763f:	mov	ecx, 0x10000
0x417644:	add	rsi, rsi
0x417647:	mov	rdi, r12
0x41764a:	cmp	rsi, rcx
0x41764d:	cmova	rsi, rcx
0x417651:	mov	qword ptr [rsp + 0xa8], rsi
0x417659:	call	0x403d20
0x41765e:	mov	qword ptr [rsp + 0xa0], rax
0x417666:	test	rax, rax
0x417669:	je	0x417c44
0x41766f:	cmp	r12, rax
0x417672:	jne	0x417694
0x417674:	mov	r12, qword ptr [rsp + 0xa0]
0x41767c:	mov	r10, rbp
0x41767f:	mov	rsi, qword ptr [rsp + 0xa8]
0x417687:	sub	r10, r12
0x41768a:	inc	r10
0x41768d:	cmp	rsi, r10
0x417690:	jb	0x417632
0x417692:	jmp	0x4176b9
0x417694:	sub	rax, r12
0x417697:	add	qword ptr [rsp + 8], rax
0x41769c:	add	rbp, rax
0x41769f:	test	r14, r14
0x4176a2:	je	0x4176a7
0x4176a4:	add	r14, rax
0x4176a7:	test	r15, r15
0x4176aa:	je	0x4176af
0x4176ac:	add	r15, rax
0x4176af:	test	r13, r13
0x4176b2:	je	0x417674
0x4176b4:	add	r13, rax
0x4176b7:	jmp	0x417674
0x4176b9:	mov	byte ptr [rbp], 0x1a
0x4176bd:	inc	rbp
0x4176c0:	jmp	0x415ee5
0x4176c5:	cmp	rsi, 0x10000
0x4176cc:	je	0x417c44
0x4176d2:	mov	r9d, 0x10000
0x4176d8:	add	rsi, rsi
0x4176db:	mov	rdi, rbx
0x4176de:	cmp	rsi, r9
0x4176e1:	cmova	rsi, r9
0x4176e5:	mov	qword ptr [rsp + 0xa8], rsi
0x4176ed:	call	0x403d20
0x4176f2:	mov	qword ptr [rsp + 0xa0], rax
0x4176fa:	test	rax, rax
0x4176fd:	je	0x417c44
0x417703:	cmp	rbx, rax
0x417706:	jne	0x417728
0x417708:	mov	rbx, qword ptr [rsp + 0xa0]
0x417710:	mov	rdx, rbp
0x417713:	mov	rsi, qword ptr [rsp + 0xa8]
0x41771b:	sub	rdx, rbx
0x41771e:	inc	rdx
0x417721:	cmp	rsi, rdx
0x417724:	jb	0x4176c5
0x417726:	jmp	0x41774d
0x417728:	sub	rax, rbx
0x41772b:	add	qword ptr [rsp + 8], rax
0x417730:	add	rbp, rax
0x417733:	test	r14, r14
0x417736:	je	0x41773b
0x417738:	add	r14, rax
0x41773b:	test	r15, r15
0x41773e:	je	0x417743
0x417740:	add	r15, rax
0x417743:	test	r13, r13
0x417746:	je	0x417708
0x417748:	add	r13, rax
0x41774b:	jmp	0x417708
0x41774d:	mov	byte ptr [rbp], 0x1b
0x417751:	inc	rbp
0x417754:	jmp	0x415ee5
0x417759:	cmp	rsi, 0x10000
0x417760:	je	0x417c44
0x417766:	mov	ecx, 0x10000
0x41776b:	add	rsi, rsi
0x41776e:	mov	rdi, r12
0x417771:	cmp	rsi, rcx
0x417774:	cmova	rsi, rcx
0x417778:	mov	qword ptr [rsp + 0xa8], rsi
0x417780:	call	0x403d20
0x417785:	mov	qword ptr [rsp + 0xa0], rax
0x41778d:	test	rax, rax
0x417790:	je	0x417c44
0x417796:	cmp	r12, rax
0x417799:	jne	0x4177bb
0x41779b:	mov	r12, qword ptr [rsp + 0xa0]
0x4177a3:	mov	r10, rbp
0x4177a6:	mov	rsi, qword ptr [rsp + 0xa8]
0x4177ae:	sub	r10, r12
0x4177b1:	inc	r10
0x4177b4:	cmp	rsi, r10
0x4177b7:	jb	0x417759
0x4177b9:	jmp	0x4177e0
0x4177bb:	sub	rax, r12
0x4177be:	add	qword ptr [rsp + 8], rax
0x4177c3:	add	rbp, rax
0x4177c6:	test	r14, r14
0x4177c9:	je	0x4177ce
0x4177cb:	add	r14, rax
0x4177ce:	test	r15, r15
0x4177d1:	je	0x4177d6
0x4177d3:	add	r15, rax
0x4177d6:	test	r13, r13
0x4177d9:	je	0x41779b
0x4177db:	add	r13, rax
0x4177de:	jmp	0x41779b
0x4177e0:	mov	byte ptr [rbp], 0x1c
0x4177e4:	inc	rbp
0x4177e7:	jmp	0x415ee5
0x4177ec:	cmp	rsi, 0x10000
0x4177f3:	je	0x417c44
0x4177f9:	mov	r8d, 0x10000
0x4177ff:	add	rsi, rsi
0x417802:	mov	rdi, rbx
0x417805:	cmp	rsi, r8
0x417808:	cmova	rsi, r8
0x41780c:	mov	qword ptr [rsp + 0xa8], rsi
0x417814:	call	0x403d20
0x417819:	mov	qword ptr [rsp + 0xa0], rax
0x417821:	test	rax, rax
0x417824:	je	0x417c44
0x41782a:	cmp	rbx, rax
0x41782d:	jne	0x41784f
0x41782f:	mov	rbx, qword ptr [rsp + 0xa0]
0x417837:	mov	rdi, rbp
0x41783a:	mov	rsi, qword ptr [rsp + 0xa8]
0x417842:	sub	rdi, rbx
0x417845:	inc	rdi
0x417848:	cmp	rsi, rdi
0x41784b:	jb	0x4177ec
0x41784d:	jmp	0x417874
0x41784f:	sub	rax, rbx
0x417852:	add	qword ptr [rsp + 8], rax
0x417857:	add	rbp, rax
0x41785a:	test	r14, r14
0x41785d:	je	0x417862
0x41785f:	add	r14, rax
0x417862:	test	r15, r15
0x417865:	je	0x41786a
0x417867:	add	r15, rax
0x41786a:	test	r13, r13
0x41786d:	je	0x41782f
0x41786f:	add	r13, rax
0x417872:	jmp	0x41782f
0x417874:	mov	byte ptr [rbp], 0x1d
0x417878:	inc	rbp
0x41787b:	jmp	0x415ee5
0x417880:	cmp	rsi, 0x10000
0x417887:	je	0x417c44
0x41788d:	mov	r8d, 0x10000
0x417893:	add	rsi, rsi
0x417896:	mov	rdi, rbx
0x417899:	cmp	rsi, r8
0x41789c:	cmova	rsi, r8
0x4178a0:	mov	qword ptr [rsp + 0xa8], rsi
0x4178a8:	call	0x403d20
0x4178ad:	mov	qword ptr [rsp + 0xa0], rax
0x4178b5:	test	rax, rax
0x4178b8:	je	0x417c44
0x4178be:	cmp	rbx, rax
0x4178c1:	jne	0x4178e3
0x4178c3:	mov	rbx, qword ptr [rsp + 0xa0]
0x4178cb:	mov	rdi, rbp
0x4178ce:	mov	rsi, qword ptr [rsp + 0xa8]
0x4178d6:	sub	rdi, rbx
0x4178d9:	inc	rdi
0x4178dc:	cmp	rsi, rdi
0x4178df:	jb	0x417880
0x4178e1:	jmp	0x417908
0x4178e3:	sub	rax, rbx
0x4178e6:	add	qword ptr [rsp + 8], rax
0x4178eb:	add	rbp, rax
0x4178ee:	test	r14, r14
0x4178f1:	je	0x4178f6
0x4178f3:	add	r14, rax
0x4178f6:	test	r15, r15
0x4178f9:	je	0x4178fe
0x4178fb:	add	r15, rax
0x4178fe:	test	r13, r13
0x417901:	je	0x4178c3
0x417903:	add	r13, rax
0x417906:	jmp	0x4178c3
0x417908:	mov	byte ptr [rbp], 0xb
0x41790c:	inc	rbp
0x41790f:	jmp	0x415ee5
0x417914:	cmp	rsi, 0x10000
0x41791b:	je	0x417c44
0x417921:	mov	eax, 0x10000
0x417926:	add	rsi, rsi
0x417929:	mov	rdi, r12
0x41792c:	cmp	rsi, rax
0x41792f:	cmova	rsi, rax
0x417933:	mov	qword ptr [rsp + 0xa8], rsi
0x41793b:	call	0x403d20
0x417940:	mov	qword ptr [rsp + 0xa0], rax
0x417948:	test	rax, rax
0x41794b:	je	0x417c44
0x417951:	cmp	r12, rax
0x417954:	jne	0x417976
0x417956:	mov	r12, qword ptr [rsp + 0xa0]
0x41795e:	mov	r11, rbp
0x417961:	mov	rsi, qword ptr [rsp + 0xa8]
0x417969:	sub	r11, r12
0x41796c:	inc	r11
0x41796f:	cmp	rsi, r11
0x417972:	jb	0x417914
0x417974:	jmp	0x41799b
0x417976:	sub	rax, r12
0x417979:	add	qword ptr [rsp + 8], rax
0x41797e:	add	rbp, rax
0x417981:	test	r14, r14
0x417984:	je	0x417989
0x417986:	add	r14, rax
0x417989:	test	r15, r15
0x41798c:	je	0x417991
0x41798e:	add	r15, rax
0x417991:	test	r13, r13
0x417994:	je	0x417956
0x417996:	add	r13, rax
0x417999:	jmp	0x417956
0x41799b:	mov	byte ptr [rbp], 0xc
0x41799f:	inc	rbp
0x4179a2:	jmp	0x415ee5
0x4179a7:	dec	rax
0x4179aa:	mov	rdx, qword ptr [rsp + 0x10]
0x4179af:	imul	rcx, rax, 0x28
0x4179b3:	cmp	r10d, dword ptr [rdx + rcx + 0x48]
0x4179b8:	je	0x417a56
0x4179be:	test	eax, eax
0x4179c0:	jns	0x4179a7
0x4179c2:	mov	r15, rbp
0x4179c5:	mov	r12, qword ptr [rsp + 0xa0]
0x4179cd:	mov	rdi, rbp
0x4179d0:	mov	rsi, qword ptr [rsp + 0xa8]
0x4179d8:	sub	rdi, r12
0x4179db:	add	rdi, 2
0x4179df:	cmp	rsi, rdi
0x4179e2:	jae	0x417a43
0x4179e4:	cmp	rsi, 0x10000
0x4179eb:	je	0x417c44
0x4179f1:	mov	r8d, 0x10000
0x4179f7:	add	rsi, rsi
0x4179fa:	mov	rdi, r12
0x4179fd:	cmp	rsi, r8
0x417a00:	cmova	rsi, r8
0x417a04:	mov	qword ptr [rsp + 0xa8], rsi
0x417a0c:	call	0x403d20
0x417a11:	mov	qword ptr [rsp + 0xa0], rax
0x417a19:	test	rax, rax
0x417a1c:	je	0x417c44
0x417a22:	cmp	r12, rax
0x417a25:	je	0x4179c5
0x417a27:	sub	rax, r12
0x417a2a:	add	qword ptr [rsp + 8], rax
0x417a2f:	add	rbp, rax
0x417a32:	test	r14, r14
0x417a35:	je	0x417d86
0x417a3b:	add	r14, rax
0x417a3e:	jmp	0x417d86
0x417a43:	mov	byte ptr [rbp], 8
0x417a47:	add	rbp, 2
0x417a4b:	mov	byte ptr [rbp - 1], bl
0x417a4e:	jmp	0x415ee5
0x417a53:	mov	r12b, 0x29
0x417a56:	test	r13, r13
0x417a59:	jne	0x417a63
0x417a5b:	mov	r15, rbp
0x417a5e:	jmp	0x417af2
0x417a63:	movzx	ecx, byte ptr [r13]
0x417a68:	lea	rdx, [r13 + rcx + 1]
0x417a6d:	mov	r11, rcx
0x417a70:	cmp	rbp, rdx
0x417a73:	jne	0x417a5b
0x417a75:	inc	r11b
0x417a78:	je	0x417a5b
0x417a7a:	mov	rsi, qword ptr [rsp + 0x98]
0x417a82:	mov	r9b, byte ptr [rsi]
0x417a85:	lea	ecx, [r9 - 0x2a]
0x417a89:	cmp	cl, 0x34
0x417a8c:	ja	0x417aa4
0x417a8e:	movabs	rax, 0xffefffffffdffffc
0x417a98:	sar	rax, cl
0x417a9b:	test	al, 1
0x417a9d:	je	0x417a5b
0x417a9f:	jmp	0x417b3d
0x417aa4:	cmp	r9b, 0x7b
0x417aa8:	je	0x417a5b
0x417aaa:	jmp	0x417b3d
0x417aaf:	cmp	rsi, 0x10000
0x417ab6:	je	0x417c44
0x417abc:	mov	r11d, 0x10000
0x417ac2:	add	rsi, rsi
0x417ac5:	mov	rdi, rbx
0x417ac8:	cmp	rsi, r11
0x417acb:	cmova	rsi, r11
0x417acf:	mov	qword ptr [rsp + 0xa8], rsi
0x417ad7:	call	0x403d20
0x417adc:	mov	qword ptr [rsp + 0xa0], rax
0x417ae4:	test	rax, rax
0x417ae7:	je	0x417c44
0x417aed:	cmp	rbx, rax
0x417af0:	jne	0x417b13
0x417af2:	mov	rbx, qword ptr [rsp + 0xa0]
0x417afa:	mov	rdi, rbp
0x417afd:	mov	rsi, qword ptr [rsp + 0xa8]
0x417b05:	sub	rdi, rbx
0x417b08:	add	rdi, 2
0x417b0c:	cmp	rsi, rdi
0x417b0f:	jb	0x417aaf
0x417b11:	jmp	0x417b2f
0x417b13:	sub	rax, rbx
0x417b16:	add	qword ptr [rsp + 8], rax
0x417b1b:	add	rbp, rax
0x417b1e:	test	r14, r14
0x417b21:	je	0x417d5e
0x417b27:	add	r14, rax
0x417b2a:	jmp	0x417d5e
0x417b2f:	mov	word ptr [rbp], 2
0x417b35:	lea	r13, [rbp + 1]
0x417b39:	add	rbp, 2
0x417b3d:	mov	rbx, rbp
0x417b40:	mov	rbp, qword ptr [rsp + 0xa0]
0x417b48:	mov	r8, rbx
0x417b4b:	mov	rsi, qword ptr [rsp + 0xa8]
0x417b53:	sub	r8, rbp
0x417b56:	inc	r8
0x417b59:	cmp	rsi, r8
0x417b5c:	jae	0x417bbd
0x417b5e:	cmp	rsi, 0x10000
0x417b65:	je	0x417c44
0x417b6b:	mov	r10d, 0x10000
0x417b71:	add	rsi, rsi
0x417b74:	mov	rdi, rbp
0x417b77:	cmp	rsi, r10
0x417b7a:	cmova	rsi, r10
0x417b7e:	mov	qword ptr [rsp + 0xa8], rsi
0x417b86:	call	0x403d20
0x417b8b:	mov	qword ptr [rsp + 0xa0], rax
0x417b93:	test	rax, rax
0x417b96:	je	0x417c44
0x417b9c:	cmp	rbp, rax
0x417b9f:	je	0x417b40
0x417ba1:	sub	rax, rbp
0x417ba4:	test	r14, r14
0x417ba7:	je	0x417bac
0x417ba9:	add	r14, rax
0x417bac:	test	r15, r15
0x417baf:	je	0x417cee
0x417bb5:	add	r15, rax
0x417bb8:	jmp	0x417cee
0x417bbd:	mov	byte ptr [rbx], r12b
0x417bc0:	lea	rbp, [rbx + 1]
0x417bc4:	inc	byte ptr [r13]
0x417bc8:	jmp	0x415ee5
0x417bcd:	test	r14, r14
0x417bd0:	je	0x417be4
0x417bd2:	mov	rsi, rbp
0x417bd5:	mov	byte ptr [r14], 0xe
0x417bd9:	sub	rsi, r14
0x417bdc:	sub	esi, 3
0x417bdf:	mov	word ptr [r14 + 1], si
0x417be4:	cmp	dword ptr [rsp + 0x1c], 0
0x417be9:	mov	rdi, qword ptr [rsp + 0x10]
0x417bee:	je	0x417bf7
0x417bf0:	call	0x403830
0x417bf5:	jmp	0x417c44
0x417bf7:	call	0x403830
0x417bfc:	sub	rbp, qword ptr [rsp + 0xa0]
0x417c04:	cmp	qword ptr [rsp + 0xc0], 0
0x417c0d:	mov	qword ptr [rsp + 0xb0], rbp
0x417c15:	je	0x417c58
0x417c17:	lea	rdi, [rsp + 0xa0]
0x417c1f:	call	0x424644
0x417c24:	cmp	eax, -2
0x417c27:	jne	0x417c58
0x417c29:	mov	rdi, qword ptr [rsp + 0xc0]
0x417c31:	call	0x403830
0x417c36:	mov	qword ptr [rsp + 0xc0], 0
0x417c42:	jmp	0x417c58
0x417c44:	mov	edx, 0x4c6d69
0x417c49:	mov	esi, 0x2943
0x417c4e:	mov	edi, 0x45b1e2
0x417c53:	call	0x415bba
0x417c58:	mov	rsi, qword ptr [rsp + 0x28]
0x417c5d:	xor	r8d, r8d
0x417c60:	xor	ecx, ecx
0x417c62:	xor	edx, edx
0x417c64:	lea	rdi, [rsp + 0xa0]
0x417c6c:	call	0x42bf91
0x417c71:	cmp	eax, 1
0x417c74:	jne	0x417c89
0x417c76:	mov	rdx, qword ptr [rsp + 0x28]
0x417c7b:	mov	esi, 0x4c6d81
0x417c80:	xor	edi, edi
0x417c82:	xor	eax, eax
0x417c84:	call	0x43f5d0
0x417c89:	test	eax, eax
0x417c8b:	je	0x417ca1
0x417c8d:	mov	edx, 0x4c6d69
0x417c92:	mov	esi, 0x2948
0x417c97:	mov	edi, 0x45b1e2
0x417c9c:	call	0x415bba
0x417ca1:	mov	rsi, qword ptr [rsp + 0x30]
0x417ca6:	xor	r8d, r8d
0x417ca9:	xor	ecx, ecx
0x417cab:	xor	edx, edx
0x417cad:	lea	rdi, [rsp + 0xa0]
0x417cb5:	call	0x42bf91
0x417cba:	cmp	eax, 1
0x417cbd:	jne	0x417cd2
0x417cbf:	mov	rdx, qword ptr [rsp + 0x30]
0x417cc4:	mov	esi, 0x4c6d81
0x417cc9:	xor	edi, edi
0x417ccb:	xor	eax, eax
0x417ccd:	call	0x43f5d0
0x417cd2:	test	eax, eax
0x417cd4:	je	0x417e02
0x417cda:	mov	edx, 0x4c6d69
0x417cdf:	mov	esi, 0x294d
0x417ce4:	mov	edi, 0x45b1e2
0x417ce9:	call	0x415bba
0x417cee:	add	qword ptr [rsp + 8], rax
0x417cf3:	add	rbx, rax
0x417cf6:	add	r13, rax
0x417cf9:	jmp	0x417b40
0x417cfe:	add	r15, rax
0x417d01:	test	r13, r13
0x417d04:	je	0x4160c9
0x417d0a:	add	r13, rax
0x417d0d:	jmp	0x4160c9
0x417d12:	add	r15, rax
0x417d15:	test	r13, r13
0x417d18:	je	0x41619f
0x417d1e:	add	r13, rax
0x417d21:	jmp	0x41619f
0x417d26:	add	qword ptr [rsp + 8], rax
0x417d2b:	add	rbp, rax
0x417d2e:	add	r15, rax
0x417d31:	jmp	0x41620d
0x417d36:	add	r15, rax
0x417d39:	test	r13, r13
0x417d3c:	je	0x4172f5
0x417d42:	add	r13, rax
0x417d45:	jmp	0x4172f5
0x417d4a:	add	r15, rax
0x417d4d:	test	r13, r13
0x417d50:	je	0x4173be
0x417d56:	add	r13, rax
0x417d59:	jmp	0x4173be
0x417d5e:	add	r15, rax
0x417d61:	test	r13, r13
0x417d64:	je	0x417af2
0x417d6a:	add	r13, rax
0x417d6d:	jmp	0x417af2
0x417d72:	add	r15, rax
0x417d75:	test	r13, r13
0x417d78:	je	0x4162af
0x417d7e:	add	r13, rax
0x417d81:	jmp	0x4162af
0x417d86:	add	r15, rax
0x417d89:	test	r13, r13
0x417d8c:	je	0x4179c5
0x417d92:	add	r13, rax
0x417d95:	jmp	0x4179c5
0x417d9a:	add	r15, rax
0x417d9d:	test	r13, r13
0x417da0:	je	0x4175aa
0x417da6:	add	r13, rax
0x417da9:	jmp	0x4175aa
0x417dae:	add	r15, rax
0x417db1:	test	r13, r13
0x417db4:	je	0x41755f
0x417dba:	add	r13, rax
0x417dbd:	jmp	0x41755f
0x417dc2:	add	r15, rax
0x417dc5:	test	r13, r13
0x417dc8:	je	0x4163bb
0x417dce:	add	r13, rax
0x417dd1:	jmp	0x4163bb
0x417dd6:	add	r15, rax
0x417dd9:	test	r13, r13
0x417ddc:	je	0x41646a
0x417de2:	add	r13, rax
0x417de5:	jmp	0x41646a
0x417dea:	mov	rbx, r13
0x417ded:	jmp	0x416689
0x417df2:	mov	rax, r11
0x417df5:	jmp	0x416aaa
0x417dfa:	mov	rax, r14
0x417dfd:	jmp	0x416bd3
0x417e02:	mov	rsi, qword ptr [rsp + 0x30]
0x417e07:	mov	rdi, qword ptr [rsp + 0x28]
0x417e0c:	call	0x403870
0x417e11:	add	rsp, 0x168
0x417e18:	pop	rbx
0x417e19:	pop	rbp
0x417e1a:	pop	r12
0x417e1c:	pop	r13
0x417e1e:	pop	r14
0x417e20:	pop	r15
0x417e22:	ret	
0x417e23:	endbr64	
0x417e27:	push	r15
0x417e29:	push	r14
0x417e2b:	push	r13
0x417e2d:	push	r12
0x417e2f:	push	rbp
0x417e30:	push	rbx
0x417e31:	sub	rsp, 0x28
0x417e35:	cmp	edi, 2
0x417e38:	jg	0x417e48
0x417e3a:	mov	esi, 0x4c74f8
0x417e3f:	xor	edi, edi
0x417e41:	xor	eax, eax
0x417e43:	call	0x43f5d0
0x417e48:	mov	rax, qword ptr [rsi]
0x417e4b:	mov	rbp, rsi
0x417e4e:	mov	dl, byte ptr [rax]
0x417e50:	test	dl, dl
0x417e52:	jne	0x417e68
0x417e54:	mov	edx, 0x4c6d9c
0x417e59:	mov	esi, 0x2978
0x417e5e:	mov	edi, 0x45b1e2
0x417e63:	call	0x415bba
0x417e68:	mov	cl, byte ptr [rax + 1]
0x417e6b:	and	ecx, 0xfffffffd
0x417e6e:	cmp	cl, 0x3c
0x417e71:	sete	bl
0x417e74:	xor	eax, eax
0x417e76:	cmp	dl, 0x21
0x417e79:	setne	al
0x417e7c:	and	eax, ebx
0x417e7e:	lea	esi, [rax + 1]
0x417e81:	lea	r8d, [rax + 4]
0x417e85:	mov	dword ptr [rsp + 0x14], esi
0x417e89:	cmp	r8d, edi
0x417e8c:	je	0x417e9c
0x417e8e:	mov	esi, 0x4c7520
0x417e93:	xor	edi, edi
0x417e95:	xor	eax, eax
0x417e97:	call	0x43f5d0
0x417e9c:	add	eax, 2
0x417e9f:	xor	r15d, r15d
0x417ea2:	xor	r13d, r13d
0x417ea5:	cdqe	
0x417ea7:	mov	rbx, qword ptr [rbp + rax*8]
0x417eac:	lea	rdi, [rax*8]
0x417eb4:	mov	qword ptr [rsp + 8], rdi
0x417eb9:	mov	rdi, rbx
0x417ebc:	call	0x4039e0
0x417ec1:	mov	dword ptr [rsp + 0x18], eax
0x417ec5:	mov	r12, rax
0x417ec8:	cmp	dword ptr [rip + 0xccb61], r15d
0x417ecf:	mov	r9d, r15d
0x417ed2:	jle	0x417f15
0x417ed4:	imul	rdx, r15, 0x18
0x417ed8:	add	rdx, qword ptr [rip + 0xccb49]
0x417edf:	mov	rsi, rbx
0x417ee2:	mov	dword ptr [rsp + 0x1c], r9d
0x417ee7:	mov	r14, qword ptr [rdx]
0x417eea:	mov	rdx, r12
0x417eed:	mov	rdi, r14
0x417ef0:	call	0x4038d0
0x417ef5:	mov	ecx, dword ptr [rsp + 0x1c]
0x417ef9:	test	eax, eax
0x417efb:	jne	0x417f10
0x417efd:	mov	esi, dword ptr [rsp + 0x18]
0x417f01:	mov	edi, ecx
0x417f03:	call	0x43b250
0x417f08:	test	eax, eax
0x417f0a:	je	0x417f10
0x417f0c:	lea	r13, [r14 + r12]
0x417f10:	inc	r15
0x417f13:	jmp	0x417ec8
0x417f15:	test	r13, r13
0x417f18:	je	0x417f41
0x417f1a:	mov	rsi, qword ptr [rbp + 8]
0x417f1e:	mov	rdi, r13
0x417f21:	call	0x415d34
0x417f26:	mov	r12d, eax
0x417f29:	or	eax, 0xffffffff
0x417f2c:	cmp	dword ptr [rsp + 0x14], 2
0x417f31:	jne	0x417f48
0x417f33:	mov	rsi, qword ptr [rbp + 0x10]
0x417f37:	mov	rdi, r13
0x417f3a:	call	0x415d34
0x417f3f:	jmp	0x417f48
0x417f41:	or	eax, 0xffffffff
0x417f44:	or	r12d, 0xffffffff
0x417f48:	mov	r10, qword ptr [rbp]
0x417f4c:	movsx	r11d, byte ptr [r10]
0x417f50:	movsx	r14d, byte ptr [r10 + 1]
0x417f55:	shl	r11d, 8
0x417f59:	or	r11d, r14d
0x417f5c:	cmp	r11d, 0x3c3e
0x417f63:	je	0x417fd6
0x417f65:	jg	0x417f97
0x417f67:	cmp	r11d, 0x213e
0x417f6e:	je	0x417fb7
0x417f70:	cmp	r11d, 0x3c00
0x417f77:	je	0x417fb0
0x417f79:	cmp	r11d, 0x213c
0x417f80:	jne	0x417fe0
0x417f82:	not	r12d
0x417f85:	mov	ebx, r12d
0x417f88:	shr	ebx, 0x1f
0x417f8b:	test	r13, r13
0x417f8e:	sete	r12b
0x417f92:	or	r12d, ebx
0x417f95:	jmp	0x417ff1
0x417f97:	cmp	r11d, 0x3e3c
0x417f9e:	je	0x417fc7
0x417fa0:	cmp	r11d, 0x3e3d
0x417fa7:	jne	0x417fe0
0x417fa9:	test	r12d, r12d
0x417fac:	jns	0x417ff8
0x417fae:	jmp	0x418008
0x417fb0:	test	r12d, r12d
0x417fb3:	js	0x417ff8
0x417fb5:	jmp	0x418008
0x417fb7:	shr	r12d, 0x1f
0x417fbb:	test	r13, r13
0x417fbe:	sete	r13b
0x417fc2:	or	r12d, r13d
0x417fc5:	jmp	0x417ff1
0x417fc7:	not	r12d
0x417fca:	and	r12d, eax
0x417fcd:	shr	r12d, 0x1f
0x417fd1:	mov	eax, r12d
0x417fd4:	jmp	0x418004
0x417fd6:	not	eax
0x417fd8:	or	eax, r12d
0x417fdb:	shr	eax, 0x1f
0x417fde:	jmp	0x418004
0x417fe0:	mov	rdx, r10
0x417fe3:	mov	esi, 0x4c7550
0x417fe8:	xor	edi, edi
0x417fea:	xor	eax, eax
0x417fec:	call	0x43f5d0
0x417ff1:	xor	eax, eax
0x417ff3:	test	r12b, r12b
0x417ff6:	je	0x41800a
0x417ff8:	mov	r15, qword ptr [rsp + 8]
0x417ffd:	mov	rax, qword ptr [rbp + r15 + 8]
0x418002:	jmp	0x41800a
0x418004:	test	al, al
0x418006:	jne	0x417ff8
0x418008:	xor	eax, eax
0x41800a:	add	rsp, 0x28
0x41800e:	pop	rbx
0x41800f:	pop	rbp
0x418010:	pop	r12
0x418012:	pop	r13
0x418014:	pop	r14
0x418016:	pop	r15
0x418018:	ret	
0x418019:	endbr64	
0x41801d:	dec	edi
0x41801f:	push	rbx
0x418020:	je	0x418036
0x418022:	mov	edx, 0x4c6dba
0x418027:	mov	esi, 0x29b9
0x41802c:	mov	edi, 0x45b1e2
0x418031:	call	0x415bba
0x418036:	mov	rbx, rsi
0x418039:	mov	rsi, qword ptr [rsi]
0x41803c:	mov	edi, 0x4e24b0
0x418041:	mov	ecx, 1
0x418046:	mov	edx, 4
0x41804b:	call	0x439620
0x418050:	mov	rdi, rax
0x418053:	test	rax, rax
0x418056:	jne	0x41805b
0x418058:	mov	rdi, qword ptr [rbx]
0x41805b:	xor	edx, edx
0x41805d:	xor	esi, esi
0x41805f:	call	0x439ab0
0x418064:	xor	eax, eax
0x418066:	pop	rbx
0x418067:	ret	
0x418068:	endbr64	
0x41806c:	dec	edi
0x41806e:	je	0x418085
0x418070:	push	rax
0x418071:	mov	edx, 0x4c6dd0
0x418076:	mov	esi, 0x29ca
0x41807b:	mov	edi, 0x45b1e2
0x418080:	call	0x415bba
0x418085:	mov	rdi, qword ptr [rsi]
0x418088:	jmp	0x43f250
0x41808d:	endbr64	
0x418091:	push	rsi
0x418092:	test	edi, edi
0x418094:	je	0x4180aa
0x418096:	mov	edx, 0x4c6de8
0x41809b:	mov	esi, 0x29da
0x4180a0:	mov	edi, 0x45b1e2
0x4180a5:	call	0x415bba
0x4180aa:	mov	edi, 0x460c60
0x4180af:	call	0x43f250
0x4180b4:	xor	edx, edx
0x4180b6:	mov	edi, 0x462753
0x4180bb:	pop	rcx
0x4180bc:	mov	rsi, rax
0x4180bf:	xor	eax, eax
0x4180c1:	jmp	0x42d870
0x4180c6:	endbr64	
0x4180ca:	push	r13
0x4180cc:	push	r12
0x4180ce:	push	rbp
0x4180cf:	push	rbx
0x4180d0:	sub	rsp, 0x28
0x4180d4:	test	edi, edi
0x4180d6:	je	0x4180e6
0x4180d8:	mov	esi, 0x4c7580
0x4180dd:	xor	edi, edi
0x4180df:	xor	eax, eax
0x4180e1:	call	0x43f5d0
0x4180e6:	mov	edi, 0x4c6e05
0x4180eb:	mov	rbx, rsi
0x4180ee:	xor	esi, esi
0x4180f0:	call	0x43a440
0x4180f5:	xor	edx, edx
0x4180f7:	xor	esi, esi
0x4180f9:	mov	edi, 0x4c6c55
0x4180fe:	call	0x43a4f0
0x418103:	mov	rax, qword ptr [rip + 0xcb1be]
0x41810a:	test	rax, rax
0x41810d:	je	0x41815b
0x41810f:	mov	edx, dword ptr [rax + 4]
0x418112:	test	edx, edx
0x418114:	je	0x41815b
0x418116:	dec	edx
0x418118:	mov	esi, 0x4cd754
0x41811d:	mov	rbp, qword ptr [rbx + rdx*8]
0x418121:	mov	rdi, rbp
0x418124:	call	0x403be0
0x418129:	test	eax, eax
0x41812b:	je	0x41814d
0x41812d:	xor	r12d, r12d
0x418130:	cmp	dword ptr [rip + 0xcdf09], 0
0x418137:	je	0x4182e6
0x41813d:	mov	rdi, rbp
0x418140:	call	0x42db40
0x418145:	mov	r13, rax
0x418148:	jmp	0x4181ec
0x41814d:	xor	esi, esi
0x41814f:	mov	edi, 0x4c6e1f
0x418154:	call	0x43a440
0x418159:	jmp	0x418174
0x41815b:	cmp	dword ptr [rip + 0xcdede], 0
0x418162:	je	0x4182e3
0x418168:	xor	esi, esi
0x41816a:	mov	edi, 0x4c75b0
0x41816f:	call	0x43a440
0x418174:	xor	edx, edx
0x418176:	xor	esi, esi
0x418178:	mov	edi, 0x4c6c55
0x41817d:	call	0x43a4f0
0x418182:	mov	rcx, qword ptr [rip + 0xcb13f]
0x418189:	test	rcx, rcx
0x41818c:	je	0x418195
0x41818e:	mov	esi, dword ptr [rcx + 4]
0x418191:	test	esi, esi
0x418193:	jne	0x4181a9
0x418195:	mov	edx, 0x4c75e0
0x41819a:	mov	esi, 0x2a3b
0x41819f:	mov	edi, 0x45b1e2
0x4181a4:	call	0x415bba
0x4181a9:	dec	esi
0x4181ab:	mov	rdi, qword ptr [rcx + rsi*8 + 8]
0x4181b0:	call	0x42db40
0x4181b5:	mov	rdi, rax
0x4181b8:	mov	r13, rax
0x4181bb:	call	0x42db40
0x4181c0:	mov	esi, 0x4303e0
0x4181c5:	mov	rdi, rax
0x4181c8:	call	0x43bbb0
0x4181cd:	mov	edi, 0x45f9f7
0x4181d2:	xor	edx, edx
0x4181d4:	mov	rbx, rax
0x4181d7:	mov	rsi, rax
0x4181da:	xor	eax, eax
0x4181dc:	call	0x42d870
0x4181e1:	mov	rdi, rbx
0x4181e4:	mov	r12, rax
0x4181e7:	call	0x403830
0x4181ec:	mov	edi, dword ptr [rip + 0xcde4e]
0x4181f2:	mov	ebp, edi
0x4181f4:	shr	ebp, 0x1f
0x4181f7:	movsxd	r8, ebp
0x4181fa:	mov	qword ptr [r8*8 + 0x4e6030], r13
0x418202:	test	edi, edi
0x418204:	js	0x4182a2
0x41820a:	xor	esi, esi
0x41820c:	mov	edi, 0x4ccc0a
0x418211:	xor	eax, eax
0x418213:	mov	qword ptr [rsp + 8], 0
0x41821c:	call	0x403db0
0x418221:	mov	r13d, eax
0x418224:	test	eax, eax
0x418226:	jns	0x418264
0x418228:	xor	esi, esi
0x41822a:	lea	rdi, [rsp + 0x10]
0x41822f:	call	0x403a70
0x418234:	mov	rax, qword ptr [rsp + 0x18]
0x418239:	mov	r10d, 0x3e8
0x41823f:	imul	r9, qword ptr [rsp + 0x10], 0x3e8
0x418248:	cqo	
0x41824a:	idiv	r10
0x41824d:	add	r9, rax
0x418250:	mov	qword ptr [rsp + 8], r9
0x418255:	call	0x403990
0x41825a:	movsxd	r8, eax
0x41825d:	xor	r8, qword ptr [rsp + 8]
0x418262:	jmp	0x418287
0x418264:	mov	edx, 8
0x418269:	lea	rsi, [rsp + 8]
0x41826e:	mov	edi, eax
0x418270:	call	0x403b50
0x418275:	mov	edi, r13d
0x418278:	call	0x403b00
0x41827d:	mov	r8, qword ptr [rsp + 8]
0x418282:	test	r8, r8
0x418285:	je	0x418228
0x418287:	mov	ecx, 0x4c430d
0x41828c:	mov	edx, 0x13
0x418291:	mov	esi, 1
0x418296:	xor	eax, eax
0x418298:	mov	edi, 0x4e64e0
0x41829d:	call	0x403f60
0x4182a2:	cmp	byte ptr [rip + 0xce237], 0
0x4182a9:	je	0x4182d5
0x4182ab:	mov	rcx, r12
0x4182ae:	xor	r8d, r8d
0x4182b1:	mov	edx, 0x4c6e26
0x4182b6:	mov	esi, 0x4e64e0
0x4182bb:	mov	edi, 0x4c7608
0x4182c0:	xor	eax, eax
0x4182c2:	call	0x42d870
0x4182c7:	mov	rdi, r12
0x4182ca:	mov	rbx, rax
0x4182cd:	call	0x403830
0x4182d2:	mov	r12, rbx
0x4182d5:	test	bpl, bpl
0x4182d8:	je	0x4182e6
0x4182da:	mov	byte ptr [rip + 0xce1ff], 0
0x4182e1:	jmp	0x4182e6
0x4182e3:	xor	r12d, r12d
0x4182e6:	add	rsp, 0x28
0x4182ea:	mov	rax, r12
0x4182ed:	pop	rbx
0x4182ee:	pop	rbp
0x4182ef:	pop	r12
0x4182f1:	pop	r13
0x4182f3:	ret	
0x4182f4:	endbr64	
0x4182f8:	push	rbx
0x4182f9:	sub	rsp, 0x10
0x4182fd:	dec	edi
0x4182ff:	je	0x41830f
0x418301:	mov	esi, 0x4c7630
0x418306:	xor	edi, edi
0x418308:	xor	eax, eax
0x41830a:	call	0x43f5d0
0x41830f:	mov	rbx, rsi
0x418312:	mov	edx, 0xa
0x418317:	lea	rsi, [rsp + 8]
0x41831c:	mov	rdi, qword ptr [rbx]
0x41831f:	call	0x403c50
0x418324:	mov	rcx, qword ptr [rsp + 8]
0x418329:	cmp	qword ptr [rbx], rcx
0x41832c:	jne	0x418342
0x41832e:	mov	edx, 0x4c7668
0x418333:	mov	esi, 0x2b3d
0x418338:	mov	edi, 0x45b1e2
0x41833d:	call	0x415bba
0x418342:	movsxd	rdx, dword ptr [rip + 0xcdaef]
0x418349:	mov	esi, 0
0x41834e:	cmp	rdx, rax
0x418351:	mov	eax, 0x4c4893
0x418356:	cmovle	rax, rsi
0x41835a:	add	rsp, 0x10
0x41835e:	pop	rbx
0x41835f:	ret	
0x418360:	mov	ecx, edx
0x418362:	cmp	edx, 0x1f
0x418365:	jle	0x41838b
0x418367:	cmp	edx, 0x3f
0x41836a:	jbe	0x418396
0x41836c:	mov	edx, 1
0x418371:	cmp	ecx, 0x5f
0x418374:	jbe	0x418398
0x418376:	push	rax
0x418377:	mov	edx, 0x4c6e29
0x41837c:	mov	esi, 0x43
0x418381:	mov	edi, 0x4c7690
0x418386:	call	0x415bba
0x41838b:	mov	eax, 1
0x418390:	shl	eax, cl
0x418392:	and	eax, dword ptr [rdi + 0xc]
0x418395:	ret	
0x418396:	xor	edx, edx
0x418398:	mov	eax, 1
0x41839d:	shl	eax, cl
0x41839f:	and	eax, dword ptr [rsi + rdx*4]
0x4183a2:	ret	
0x4183a3:	xor	eax, eax
0x4183a5:	cmp	dword ptr [rsi], 6
0x4183a8:	jne	0x41866a
0x4183ae:	mov	ecx, dword ptr [rsi + 4]
0x4183b1:	cmp	ecx, 0xa7
0x4183b7:	ja	0x41866a
0x4183bd:	push	rbp
0x4183be:	push	rbx
0x4183bf:	mov	rbx, rdi
0x4183c2:	push	rsi
0x4183c3:	cmp	ecx, 0x46
0x4183c6:	ja	0x4183e1
0x4183c8:	cmp	ecx, 0x37
0x4183cb:	ja	0x418437
0x4183cd:	cmp	ecx, 0x24
0x4183d0:	ja	0x4183f5
0x4183d2:	lea	r8d, [rcx - 0xf]
0x4183d6:	cmp	r8d, 0x10
0x4183da:	jbe	0x418409
0x4183dc:	jmp	0x418664
0x4183e1:	sub	ecx, 0x47
0x4183e4:	cmp	ecx, 0x60
0x4183e7:	ja	0x418664
0x4183ed:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c79e8]
0x4183f5:	sub	ecx, 0x25
0x4183f8:	cmp	ecx, 0x12
0x4183fb:	ja	0x418664
0x418401:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c7cf0]
0x418409:	mov	r9d, 1
0x41840f:	shl	r9, cl
0x418412:	test	r9d, 0x20808000
0x418419:	jne	0x418656
0x41841f:	test	r9d, 0xc4000000
0x418426:	jne	0x4184e3
0x41842c:	cmp	ecx, 0x1c
0x41842f:	jne	0x418664
0x418435:	jmp	0x41846c
0x418437:	sub	ecx, 0x3a
0x41843a:	cmp	ecx, 0xc
0x41843d:	ja	0x418664
0x418443:	mov	eax, 1
0x418448:	shl	rax, cl
0x41844b:	test	eax, 0x1824
0x418450:	jne	0x418537
0x418456:	test	al, 0x11
0x418458:	jne	0x418522
0x41845e:	cmp	ecx, 3
0x418461:	jne	0x418664
0x418467:	jmp	0x41854c
0x41846c:	mov	dword ptr [rbx + 4], 1
0x418473:	mov	eax, 0x4be863
0x418478:	jmp	0x418666
0x41847d:	mov	dword ptr [rbx + 4], 6
0x418484:	mov	eax, 0x4be86b
0x418489:	jmp	0x418666
0x41848e:	mov	dword ptr [rdi + 4], 0xc
0x418495:	mov	eax, 0x4be876
0x41849a:	jmp	0x418666
0x41849f:	mov	dword ptr [rdi + 4], 0xd
0x4184a6:	mov	eax, 0x4be87f
0x4184ab:	jmp	0x418666
0x4184b0:	mov	dword ptr [rdi + 4], 0xe
0x4184b7:	mov	eax, 0x4be88d
0x4184bc:	jmp	0x418666
0x4184c1:	mov	dword ptr [rdi + 4], 7
0x4184c8:	mov	eax, 0x4be895
0x4184cd:	jmp	0x418666
0x4184d2:	mov	dword ptr [rdi + 4], 0xb
0x4184d9:	mov	eax, 0x4be899
0x4184de:	jmp	0x418666
0x4184e3:	mov	rbp, qword ptr [rip + 0xb0706]
0x4184ea:	mov	eax, 0x4be847
0x4184ef:	mov	qword ptr [rbx + 4], rbp
0x4184f3:	jmp	0x418666
0x4184f8:	mov	rdi, qword ptr [rip + 0xb06f9]
0x4184ff:	mov	eax, 0x4bea08
0x418504:	mov	qword ptr [rbx + 4], rdi
0x418508:	jmp	0x418666
0x41850d:	mov	rsi, qword ptr [rip + 0xb06ec]
0x418514:	mov	eax, 0x4be84f
0x418519:	mov	qword ptr [rdi + 4], rsi
0x41851d:	jmp	0x418666
0x418522:	mov	rcx, qword ptr [rip + 0xb06df]
0x418529:	mov	eax, 0x4bea1c
0x41852e:	mov	qword ptr [rbx + 4], rcx
0x418532:	jmp	0x418666
0x418537:	mov	r11, qword ptr [rip + 0xb06d2]
0x41853e:	mov	eax, 0x4be85b
0x418543:	mov	qword ptr [rbx + 4], r11
0x418547:	jmp	0x418666
0x41854c:	mov	rdx, qword ptr [rip + 0xb06c5]
0x418553:	mov	eax, 0x4bea3b
0x418558:	mov	qword ptr [rbx + 4], rdx
0x41855c:	jmp	0x418666
0x418561:	mov	r10, qword ptr [rip + 0xb06b8]
0x418568:	mov	eax, 0x4be89d
0x41856d:	mov	qword ptr [rdi + 4], r10
0x418571:	jmp	0x418666
0x418576:	mov	rax, qword ptr [rip + 0xb06ab]
0x41857d:	mov	qword ptr [rdi + 4], rax
0x418581:	mov	eax, 0x4be917
0x418586:	jmp	0x418666
0x41858b:	mov	dword ptr [rdi + 4], 3
0x418592:	mov	rbp, rdx
0x418595:	mov	edx, 0x24
0x41859a:	mov	rsi, rbp
0x41859d:	call	0x418360
0x4185a2:	test	eax, eax
0x4185a4:	je	0x4185b7
0x4185a6:	mov	dword ptr [rbx + 8], 0x17
0x4185ad:	mov	eax, 0x4be8f3
0x4185b2:	jmp	0x418666
0x4185b7:	mov	edx, 0x22
0x4185bc:	mov	rsi, rbp
0x4185bf:	mov	rdi, rbx
0x4185c2:	call	0x418360
0x4185c7:	test	eax, eax
0x4185c9:	je	0x4185dc
0x4185cb:	mov	dword ptr [rbx + 8], 0x15
0x4185d2:	mov	eax, 0x4be8dd
0x4185d7:	jmp	0x418666
0x4185dc:	mov	dword ptr [rbx + 8], 0x10
0x4185e3:	mov	eax, 0x4be8a5
0x4185e8:	jmp	0x418666
0x4185ea:	mov	r9, qword ptr [rip + 0xb063f]
0x4185f1:	mov	eax, 0x4be8b4
0x4185f6:	mov	qword ptr [rdi + 4], r9
0x4185fa:	jmp	0x418666
0x4185fc:	mov	r8, qword ptr [rip + 0xb0635]
0x418603:	mov	eax, 0x4be8ce
0x418608:	mov	qword ptr [rdi + 4], r8
0x41860c:	jmp	0x418666
0x41860e:	mov	rbp, qword ptr [rip + 0xb062b]
0x418615:	mov	eax, 0x4be8bf
0x41861a:	mov	qword ptr [rdi + 4], rbp
0x41861e:	jmp	0x418666
0x418620:	mov	rdi, qword ptr [rip + 0xb0621]
0x418627:	mov	eax, 0x4be8e9
0x41862c:	mov	qword ptr [rbx + 4], rdi
0x418630:	jmp	0x418666
0x418632:	mov	rdx, qword ptr [rip + 0xb0617]
0x418639:	mov	eax, 0x4be90d
0x41863e:	mov	qword ptr [rdi + 4], rdx
0x418642:	jmp	0x418666
0x418644:	mov	rsi, qword ptr [rip + 0xb060d]
0x41864b:	mov	eax, 0x4be8fe
0x418650:	mov	qword ptr [rdi + 4], rsi
0x418654:	jmp	0x418666
0x418656:	mov	dword ptr [rdi + 4], 2
0x41865d:	mov	eax, 0x4be841
0x418662:	jmp	0x418666
0x418664:	xor	eax, eax
0x418666:	pop	rdx
0x418667:	pop	rbx
0x418668:	pop	rbp
0x418669:	ret	
0x41866a:	ret	
0x41866b:	cmp	edx, 0x40
0x41866e:	mov	ecx, edx
0x418670:	mov	edx, 1
0x418675:	sbb	rax, rax
0x418678:	shl	edx, cl
0x41867a:	not	rax
0x41867d:	and	eax, 4
0x418680:	or	dword ptr [rsi + rax], edx
0x418683:	ret	
0x418684:	endbr64	
0x418688:	push	r15
0x41868a:	push	r14
0x41868c:	push	r13
0x41868e:	push	r12
0x418690:	push	rbp
0x418691:	push	rbx
0x418692:	sub	rsp, 0xb8
0x418699:	dec	edi
0x41869b:	mov	qword ptr [rsp + 0x20], rsi
0x4186a0:	jle	0x41a49c
0x4186a6:	mov	r13, qword ptr [rsi]
0x4186a9:	mov	esi, 0x45cbe6
0x4186ae:	mov	rdi, r13
0x4186b1:	call	0x403be0
0x4186b6:	mov	dword ptr [rsp + 0xc], eax
0x4186ba:	test	eax, eax
0x4186bc:	je	0x4186d3
0x4186be:	mov	esi, 0x45b9f0
0x4186c3:	mov	rdi, r13
0x4186c6:	call	0x403be0
0x4186cb:	test	eax, eax
0x4186cd:	jne	0x41a49c
0x4186d3:	mov	rdx, qword ptr [rsp + 0x20]
0x4186d8:	mov	esi, 0x45b9fa
0x4186dd:	mov	rbx, qword ptr [rdx + 8]
0x4186e1:	mov	rdi, rbx
0x4186e4:	call	0x403be0
0x4186e9:	test	eax, eax
0x4186eb:	je	0x418709
0x4186ed:	mov	esi, 0x4bea86
0x4186f2:	mov	rdi, rbx
0x4186f5:	call	0x403be0
0x4186fa:	test	eax, eax
0x4186fc:	jne	0x41a49c
0x418702:	mov	byte ptr [rsp + 0x2f], 1
0x418707:	jmp	0x41870e
0x418709:	mov	byte ptr [rsp + 0x2f], 0
0x41870e:	mov	qword ptr [rsp + 0x48], 0
0x418717:	xorps	xmm0, xmm0
0x41871a:	xor	esi, esi
0x41871c:	movups	xmmword ptr [rsp + 0x90], xmm0
0x418724:	mov	eax, esi
0x418726:	movups	xmmword ptr [rsp + 0x80], xmm0
0x41872e:	cpuid	
0x418730:	test	eax, eax
0x418732:	je	0x418743
0x418734:	mov	eax, esi
0x418736:	cpuid	
0x418738:	mov	dword ptr [rsp + 0x14], ebx
0x41873c:	mov	r10d, eax
0x41873f:	test	eax, eax
0x418741:	jg	0x418761
0x418743:	mov	ebp, 0x4c4893
0x418748:	mov	r12d, 0x4be80b
0x41874e:	mov	dword ptr [rsp + 0x90], 3
0x418759:	mov	r14, rbp
0x41875c:	jmp	0x41a473
0x418761:	mov	eax, esi
0x418763:	cpuid	
0x418765:	test	eax, eax
0x418767:	je	0x418743
0x418769:	mov	eax, 1
0x41876e:	cpuid	
0x418770:	mov	edi, eax
0x418772:	mov	r14d, eax
0x418775:	mov	r9d, eax
0x418778:	shr	eax, 0x14
0x41877b:	shr	edi, 8
0x41877e:	shr	r14d, 0xc
0x418782:	movzx	r13d, al
0x418786:	mov	ebx, ecx
0x418788:	shr	r9d, 4
0x41878c:	and	edi, 0xf
0x41878f:	mov	dword ptr [rsp + 0x38], r13d
0x418794:	mov	r11d, edx
0x418797:	and	r14d, 0xf0
0x41879e:	mov	dword ptr [rsp + 0x10], edi
0x4187a2:	mov	r8d, ecx
0x4187a5:	and	r9d, 0xf
0x4187a9:	mov	dword ptr [rsp + 0x88], r10d
0x4187b1:	mov	dword ptr [rsp + 0x1c], r14d
0x4187b6:	and	ebx, 0x8000000
0x4187bc:	je	0x418810
0x4187be:	mov	ecx, esi
0x4187c0:	xgetbv	
0x4187c3:	mov	esi, eax
0x4187c5:	and	esi, 6
0x4187c8:	cmp	esi, 6
0x4187cb:	jne	0x4187ed
0x4187cd:	mov	edx, eax
0x4187cf:	xor	edi, edi
0x4187d1:	mov	r14d, 1
0x4187d7:	and	edx, 0xe6
0x4187dd:	cmp	edx, 0xe6
0x4187e3:	sete	dil
0x4187e7:	mov	dword ptr [rsp + 0x18], edi
0x4187eb:	jmp	0x4187f8
0x4187ed:	mov	dword ptr [rsp + 0x18], 0
0x4187f5:	xor	r14d, r14d
0x4187f8:	and	eax, 0x60000
0x4187fd:	cmp	eax, 0x60000
0x418802:	sete	r13b
0x418806:	movzx	ecx, r13b
0x41880a:	mov	dword ptr [rsp + 0x3c], ecx
0x41880e:	jmp	0x418823
0x418810:	mov	dword ptr [rsp + 0x3c], 0
0x418818:	xor	r14d, r14d
0x41881b:	mov	dword ptr [rsp + 0x18], 0
0x418823:	bt	r11d, 0xf
0x418828:	jae	0x418835
0x41882a:	mov	dword ptr [rsp + 0x9c], 1
0x418835:	bt	r11d, 0x17
0x41883a:	jae	0x418844
0x41883c:	or	dword ptr [rsp + 0x9c], 2
0x418844:	bt	r11d, 0x19
0x418849:	jae	0x418853
0x41884b:	or	dword ptr [rsp + 0x9c], 8
0x418853:	bt	r11d, 0x1a
0x418858:	jae	0x418862
0x41885a:	or	dword ptr [rsp + 0x9c], 0x10
0x418862:	bt	r11d, 8
0x418867:	jae	0x418880
0x418869:	mov	edx, 0x2f
0x41886e:	lea	rsi, [rsp + 0x48]
0x418873:	lea	rdi, [rsp + 0x90]
0x41887b:	call	0x41866b
0x418880:	bt	r11d, 0x18
0x418885:	jae	0x41889e
0x418887:	mov	edx, 0x33
0x41888c:	lea	rsi, [rsp + 0x48]
0x418891:	lea	rdi, [rsp + 0x90]
0x418899:	call	0x41866b
0x41889e:	bt	r8d, 0x17
0x4188a3:	jae	0x4188ad
0x4188a5:	or	dword ptr [rsp + 0x9c], 4
0x4188ad:	mov	r11d, r8d
0x4188b0:	and	r11d, 0x2000000
0x4188b7:	je	0x4188c4
0x4188b9:	or	dword ptr [rsp + 0x9c], 0x40000
0x4188c4:	test	r8b, 2
0x4188c8:	je	0x4188d5
0x4188ca:	or	dword ptr [rsp + 0x9c], 0x80000
0x4188d5:	test	r8b, 1
0x4188d9:	je	0x4188e3
0x4188db:	or	dword ptr [rsp + 0x9c], 0x20
0x4188e3:	bt	r8d, 9
0x4188e8:	jae	0x4188f2
0x4188ea:	or	dword ptr [rsp + 0x9c], 0x40
0x4188f2:	bt	r8d, 0x13
0x4188f7:	jae	0x418904
0x4188f9:	or	dword ptr [rsp + 0x9c], 0x80
0x418904:	bt	r8d, 0x14
0x418909:	jae	0x418916
0x41890b:	or	dword ptr [rsp + 0x9c], 0x100
0x418916:	test	ebx, ebx
0x418918:	je	0x418931
0x41891a:	mov	edx, 0x3e
0x41891f:	lea	rsi, [rsp + 0x48]
0x418924:	lea	rdi, [rsp + 0x90]
0x41892c:	call	0x41866b
0x418931:	bt	r8d, 0xd
0x418936:	jae	0x41894f
0x418938:	mov	edx, 0x2e
0x41893d:	lea	rsi, [rsp + 0x48]
0x418942:	lea	rdi, [rsp + 0x90]
0x41894a:	call	0x41866b
0x41894f:	bt	r8d, 0x16
0x418954:	jae	0x41896d
0x418956:	mov	edx, 0x3a
0x41895b:	lea	rsi, [rsp + 0x48]
0x418960:	lea	rdi, [rsp + 0x90]
0x418968:	call	0x41866b
0x41896d:	test	r11d, r11d
0x418970:	je	0x41897d
0x418972:	or	dword ptr [rsp + 0x9c], 0x40000
0x41897d:	bt	r8d, 0x1e
0x418982:	jae	0x41899b
0x418984:	mov	edx, 0x45
0x418989:	lea	rsi, [rsp + 0x48]
0x41898e:	lea	rdi, [rsp + 0x90]
0x418996:	call	0x41866b
0x41899b:	bt	r8d, 0x1a
0x4189a0:	jae	0x4189b9
0x4189a2:	mov	edx, 0x51
0x4189a7:	lea	rsi, [rsp + 0x48]
0x4189ac:	lea	rdi, [rsp + 0x90]
0x4189b4:	call	0x41866b
0x4189b9:	test	r14d, r14d
0x4189bc:	je	0x418a00
0x4189be:	bt	r8d, 0x1c
0x4189c3:	jae	0x4189d0
0x4189c5:	or	dword ptr [rsp + 0x9c], 0x200
0x4189d0:	bt	r8d, 0xc
0x4189d5:	jae	0x4189e2
0x4189d7:	or	dword ptr [rsp + 0x9c], 0x4000
0x4189e2:	bt	r8d, 0x1d
0x4189e7:	jae	0x418a00
0x4189e9:	mov	edx, 0x31
0x4189ee:	lea	rsi, [rsp + 0x48]
0x4189f3:	lea	rdi, [rsp + 0x90]
0x4189fb:	call	0x41866b
0x418a00:	xor	r13d, r13d
0x418a03:	cmp	r10d, 6
0x418a07:	jbe	0x418f6a
0x418a0d:	mov	eax, 7
0x418a12:	mov	ecx, r13d
0x418a15:	cpuid	
0x418a17:	mov	r11d, edx
0x418a1a:	mov	r8d, ecx
0x418a1d:	test	bl, 8
0x418a20:	je	0x418a2d
0x418a22:	or	dword ptr [rsp + 0x9c], 0x10000
0x418a2d:	test	bl, 4
0x418a30:	je	0x418a49
0x418a32:	mov	edx, 0x49
0x418a37:	lea	rsi, [rsp + 0x48]
0x418a3c:	lea	rdi, [rsp + 0x90]
0x418a44:	call	0x41866b
0x418a49:	test	bl, 0x10
0x418a4c:	je	0x418a65
0x418a4e:	mov	edx, 0x34
0x418a53:	lea	rsi, [rsp + 0x48]
0x418a58:	lea	rdi, [rsp + 0x90]
0x418a60:	call	0x41866b
0x418a65:	bt	ebx, 0xb
0x418a69:	jae	0x418a82
0x418a6b:	mov	edx, 0x47
0x418a70:	lea	rsi, [rsp + 0x48]
0x418a75:	lea	rdi, [rsp + 0x90]
0x418a7d:	call	0x41866b
0x418a82:	test	r14d, r14d
0x418a85:	je	0x418ad3
0x418a87:	test	bl, 0x20
0x418a8a:	je	0x418a97
0x418a8c:	or	dword ptr [rsp + 0x9c], 0x400
0x418a97:	bt	r8d, 0xa
0x418a9c:	jae	0x418ab5
0x418a9e:	mov	edx, 0x21
0x418aa3:	lea	rsi, [rsp + 0x48]
0x418aa8:	lea	rdi, [rsp + 0x90]
0x418ab0:	call	0x41866b
0x418ab5:	bt	r8d, 9
0x418aba:	jae	0x418ad3
0x418abc:	mov	edx, 0x4e
0x418ac1:	lea	rsi, [rsp + 0x48]
0x418ac6:	lea	rdi, [rsp + 0x90]
0x418ace:	call	0x41866b
0x418ad3:	bt	ebx, 8
0x418ad7:	jae	0x418ae4
0x418ad9:	or	dword ptr [rsp + 0x9c], 0x20000
0x418ae4:	test	bl, 1
0x418ae7:	je	0x418b00
0x418ae9:	mov	edx, 0x32
0x418aee:	lea	rsi, [rsp + 0x48]
0x418af3:	lea	rdi, [rsp + 0x90]
0x418afb:	call	0x41866b
0x418b00:	bt	ebx, 0x12
0x418b04:	jae	0x418b1d
0x418b06:	mov	edx, 0x46
0x418b0b:	lea	rsi, [rsp + 0x48]
0x418b10:	lea	rdi, [rsp + 0x90]
0x418b18:	call	0x41866b
0x418b1d:	bt	ebx, 0x13
0x418b21:	jae	0x418b3a
0x418b23:	mov	edx, 0x28
0x418b28:	lea	rsi, [rsp + 0x48]
0x418b2d:	lea	rdi, [rsp + 0x90]
0x418b35:	call	0x41866b
0x418b3a:	bt	ebx, 0x1d
0x418b3e:	jae	0x418b57
0x418b40:	mov	edx, 0x4a
0x418b45:	lea	rsi, [rsp + 0x48]
0x418b4a:	lea	rdi, [rsp + 0x90]
0x418b52:	call	0x41866b
0x418b57:	bt	ebx, 0x17
0x418b5b:	jae	0x418b74
0x418b5d:	mov	edx, 0x2b
0x418b62:	lea	rsi, [rsp + 0x48]
0x418b67:	lea	rdi, [rsp + 0x90]
0x418b6f:	call	0x41866b
0x418b74:	bt	ebx, 0x18
0x418b78:	jae	0x418b91
0x418b7a:	mov	edx, 0x2c
0x418b7f:	lea	rsi, [rsp + 0x48]
0x418b84:	lea	rdi, [rsp + 0x90]
0x418b8c:	call	0x41866b
0x418b91:	test	r8b, 1
0x418b95:	je	0x418bae
0x418b97:	mov	edx, 0x41
0x418b9c:	lea	rsi, [rsp + 0x48]
0x418ba1:	lea	rdi, [rsp + 0x90]
0x418ba9:	call	0x41866b
0x418bae:	test	r8b, 0x10
0x418bb2:	je	0x418bcb
0x418bb4:	mov	edx, 0x40
0x418bb9:	lea	rsi, [rsp + 0x48]
0x418bbe:	lea	rdi, [rsp + 0x90]
0x418bc6:	call	0x41866b
0x418bcb:	bt	r8d, 0x16
0x418bd0:	jae	0x418be9
0x418bd2:	mov	edx, 0x44
0x418bd7:	lea	rsi, [rsp + 0x48]
0x418bdc:	lea	rdi, [rsp + 0x90]
0x418be4:	call	0x41866b
0x418be9:	bt	r8d, 8
0x418bee:	jae	0x418c07
0x418bf0:	mov	edx, 0x20
0x418bf5:	lea	rsi, [rsp + 0x48]
0x418bfa:	lea	rdi, [rsp + 0x90]
0x418c02:	call	0x41866b
0x418c07:	bt	r8d, 0x1b
0x418c0c:	jae	0x418c25
0x418c0e:	mov	edx, 0x3c
0x418c13:	lea	rsi, [rsp + 0x48]
0x418c18:	lea	rdi, [rsp + 0x90]
0x418c20:	call	0x41866b
0x418c25:	bt	r8d, 0x1c
0x418c2a:	jae	0x418c43
0x418c2c:	mov	edx, 0x3b
0x418c31:	lea	rsi, [rsp + 0x48]
0x418c36:	lea	rdi, [rsp + 0x90]
0x418c3e:	call	0x41866b
0x418c43:	bt	r8d, 0x1d
0x418c48:	jae	0x418c61
0x418c4a:	mov	edx, 0x30
0x418c4f:	lea	rsi, [rsp + 0x48]
0x418c54:	lea	rdi, [rsp + 0x90]
0x418c5c:	call	0x41866b
0x418c61:	bt	r8d, 0x19
0x418c66:	jae	0x418c7f
0x418c68:	mov	edx, 0x2a
0x418c6d:	lea	rsi, [rsp + 0x48]
0x418c72:	lea	rdi, [rsp + 0x90]
0x418c7a:	call	0x41866b
0x418c7f:	test	r8b, 0x20
0x418c83:	je	0x418c9c
0x418c85:	mov	edx, 0x4f
0x418c8a:	lea	rsi, [rsp + 0x48]
0x418c8f:	lea	rdi, [rsp + 0x90]
0x418c97:	call	0x41866b
0x418c9c:	test	r8b, 0x80
0x418ca0:	je	0x418cb9
0x418ca2:	mov	edx, 0x4b
0x418ca7:	lea	rsi, [rsp + 0x48]
0x418cac:	lea	rdi, [rsp + 0x90]
0x418cb4:	call	0x41866b
0x418cb9:	mov	r13d, r8d
0x418cbc:	shr	r13d, 0x17
0x418cc0:	and	r13d, 1
0x418cc4:	bt	r11d, 0xe
0x418cc9:	jae	0x418ce2
0x418ccb:	mov	edx, 0x48
0x418cd0:	lea	rsi, [rsp + 0x48]
0x418cd5:	lea	rdi, [rsp + 0x90]
0x418cdd:	call	0x41866b
0x418ce2:	bt	r11d, 0x10
0x418ce7:	jae	0x418d00
0x418ce9:	mov	edx, 0x4d
0x418cee:	lea	rsi, [rsp + 0x48]
0x418cf3:	lea	rdi, [rsp + 0x90]
0x418cfb:	call	0x41866b
0x418d00:	bt	r11d, 0x12
0x418d05:	jae	0x418d1e
0x418d07:	mov	edx, 0x3f
0x418d0c:	lea	rsi, [rsp + 0x48]
0x418d11:	lea	rdi, [rsp + 0x90]
0x418d19:	call	0x41866b
0x418d1e:	bt	r11d, 0x14
0x418d23:	jae	0x418d3c
0x418d25:	mov	edx, 0x35
0x418d2a:	lea	rsi, [rsp + 0x48]
0x418d2f:	lea	rdi, [rsp + 0x90]
0x418d37:	call	0x41866b
0x418d3c:	test	r11b, 0x20
0x418d40:	je	0x418d59
0x418d42:	mov	edx, 0x58
0x418d47:	lea	rsi, [rsp + 0x48]
0x418d4c:	lea	rdi, [rsp + 0x90]
0x418d54:	call	0x41866b
0x418d59:	cmp	dword ptr [rsp + 0x3c], 0
0x418d5e:	je	0x418dba
0x418d60:	bt	r11d, 0x18
0x418d65:	jae	0x418d7e
0x418d67:	mov	edx, 0x55
0x418d6c:	lea	rsi, [rsp + 0x48]
0x418d71:	lea	rdi, [rsp + 0x90]
0x418d79:	call	0x41866b
0x418d7e:	bt	r11d, 0x19
0x418d83:	jae	0x418d9c
0x418d85:	mov	edx, 0x56
0x418d8a:	lea	rsi, [rsp + 0x48]
0x418d8f:	lea	rdi, [rsp + 0x90]
0x418d97:	call	0x41866b
0x418d9c:	bt	r11d, 0x16
0x418da1:	jae	0x418dba
0x418da3:	mov	edx, 0x57
0x418da8:	lea	rsi, [rsp + 0x48]
0x418dad:	lea	rdi, [rsp + 0x90]
0x418db5:	call	0x41866b
0x418dba:	cmp	dword ptr [rsp + 0x18], 0
0x418dbf:	je	0x418efb
0x418dc5:	bt	ebx, 0x10
0x418dc9:	jae	0x418dd6
0x418dcb:	or	dword ptr [rsp + 0x9c], 0x8000
0x418dd6:	test	ebx, ebx
0x418dd8:	jns	0x418de5
0x418dda:	or	dword ptr [rsp + 0x9c], 0x100000
0x418de5:	bt	ebx, 0x1e
0x418de9:	jae	0x418df6
0x418deb:	or	dword ptr [rsp + 0x9c], 0x200000
0x418df6:	bt	ebx, 0x11
0x418dfa:	jae	0x418e07
0x418dfc:	or	dword ptr [rsp + 0x9c], 0x400000
0x418e07:	bt	ebx, 0x1c
0x418e0b:	jae	0x418e18
0x418e0d:	or	dword ptr [rsp + 0x9c], 0x800000
0x418e18:	bt	ebx, 0x1a
0x418e1c:	jae	0x418e29
0x418e1e:	or	dword ptr [rsp + 0x9c], 0x2000000
0x418e29:	bt	ebx, 0x1b
0x418e2d:	jae	0x418e3a
0x418e2f:	or	dword ptr [rsp + 0x9c], 0x1000000
0x418e3a:	bt	ebx, 0x15
0x418e3e:	jae	0x418e4b
0x418e40:	or	dword ptr [rsp + 0x9c], 0x8000000
0x418e4b:	test	r8b, 2
0x418e4f:	je	0x418e5c
0x418e51:	or	dword ptr [rsp + 0x9c], 0x4000000
0x418e5c:	test	r8b, 0x40
0x418e60:	je	0x418e6d
0x418e62:	or	dword ptr [rsp + 0x9c], 0x80000000
0x418e6d:	bt	r8d, 0xb
0x418e72:	jae	0x418e8b
0x418e74:	mov	edx, 0x22
0x418e79:	lea	rsi, [rsp + 0x48]
0x418e7e:	lea	rdi, [rsp + 0x90]
0x418e86:	call	0x41866b
0x418e8b:	bt	r8d, 0xc
0x418e90:	jae	0x418ea9
0x418e92:	mov	edx, 0x23
0x418e97:	lea	rsi, [rsp + 0x48]
0x418e9c:	lea	rdi, [rsp + 0x90]
0x418ea4:	call	0x41866b
0x418ea9:	bt	r8d, 0xe
0x418eae:	jae	0x418ebb
0x418eb0:	or	dword ptr [rsp + 0x9c], 0x40000000
0x418ebb:	test	r11b, 4
0x418ebf:	je	0x418ecc
0x418ec1:	or	dword ptr [rsp + 0x9c], 0x10000000
0x418ecc:	test	r11b, 8
0x418ed0:	je	0x418edd
0x418ed2:	or	dword ptr [rsp + 0x9c], 0x20000000
0x418edd:	bt	r11d, 8
0x418ee2:	jae	0x418efb
0x418ee4:	mov	edx, 0x25
0x418ee9:	lea	rsi, [rsp + 0x48]
0x418eee:	lea	rdi, [rsp + 0x90]
0x418ef6:	call	0x41866b
0x418efb:	mov	eax, 7
0x418f00:	mov	ecx, 1
0x418f05:	cpuid	
0x418f07:	bt	eax, 0x16
0x418f0b:	mov	ebx, eax
0x418f0d:	jae	0x418f26
0x418f0f:	mov	edx, 0x59
0x418f14:	lea	rsi, [rsp + 0x48]
0x418f19:	lea	rdi, [rsp + 0x90]
0x418f21:	call	0x41866b
0x418f26:	test	r14d, r14d
0x418f29:	je	0x418f47
0x418f2b:	test	bl, 0x10
0x418f2e:	je	0x418f47
0x418f30:	mov	edx, 0x5d
0x418f35:	lea	rsi, [rsp + 0x48]
0x418f3a:	lea	rdi, [rsp + 0x90]
0x418f42:	call	0x41866b
0x418f47:	cmp	dword ptr [rsp + 0x18], 0
0x418f4c:	je	0x418f6a
0x418f4e:	and	bl, 0x20
0x418f51:	je	0x418f6a
0x418f53:	mov	edx, 0x24
0x418f58:	lea	rsi, [rsp + 0x48]
0x418f5d:	lea	rdi, [rsp + 0x90]
0x418f65:	call	0x41866b
0x418f6a:	cmp	r10d, 0xc
0x418f6e:	jbe	0x418fd4
0x418f70:	mov	eax, 0xd
0x418f75:	mov	ecx, 1
0x418f7a:	cpuid	
0x418f7c:	mov	r11d, eax
0x418f7f:	test	al, 1
0x418f81:	je	0x418f9a
0x418f83:	mov	edx, 0x53
0x418f88:	lea	rsi, [rsp + 0x48]
0x418f8d:	lea	rdi, [rsp + 0x90]
0x418f95:	call	0x41866b
0x418f9a:	test	r11b, 2
0x418f9e:	je	0x418fb7
0x418fa0:	mov	edx, 0x52
0x418fa5:	lea	rsi, [rsp + 0x48]
0x418faa:	lea	rdi, [rsp + 0x90]
0x418fb2:	call	0x41866b
0x418fb7:	and	r11b, 8
0x418fbb:	je	0x418fd4
0x418fbd:	mov	edx, 0x54
0x418fc2:	lea	rsi, [rsp + 0x48]
0x418fc7:	lea	rdi, [rsp + 0x90]
0x418fcf:	call	0x41866b
0x418fd4:	cmp	r10d, 0x13
0x418fd8:	jbe	0x418fff
0x418fda:	mov	eax, 0x14
0x418fdf:	xor	ecx, ecx
0x418fe1:	cpuid	
0x418fe3:	and	bl, 0x10
0x418fe6:	je	0x418fff
0x418fe8:	mov	edx, 0x43
0x418fed:	lea	rsi, [rsp + 0x48]
0x418ff2:	lea	rdi, [rsp + 0x90]
0x418ffa:	call	0x41866b
0x418fff:	cmp	r10d, 0x18
0x419003:	jbe	0x419053
0x419005:	mov	eax, 0x19
0x41900a:	cpuid	
0x41900c:	test	bl, 1
0x41900f:	je	0x419053
0x419011:	mov	edx, 0x5b
0x419016:	lea	rsi, [rsp + 0x48]
0x41901b:	lea	rdi, [rsp + 0x90]
0x419023:	call	0x41866b
0x419028:	and	bl, 4
0x41902b:	je	0x419037
0x41902d:	mov	edx, 0x5c
0x419032:	call	0x41866b
0x419037:	test	r13d, r13d
0x41903a:	je	0x419053
0x41903c:	mov	edx, 0x5a
0x419041:	lea	rsi, [rsp + 0x48]
0x419046:	lea	rdi, [rsp + 0x90]
0x41904e:	call	0x41866b
0x419053:	mov	eax, 0x80000000
0x419058:	cpuid	
0x41905a:	mov	dword ptr [rsp + 0x8c], eax
0x419061:	mov	r10d, eax
0x419064:	cmp	eax, 0x80000000
0x419069:	jbe	0x419227
0x41906f:	mov	eax, 0x80000001
0x419074:	cpuid	
0x419076:	mov	r13d, edx
0x419079:	mov	r8d, ecx
0x41907c:	test	cl, 0x40
0x41907f:	je	0x41908c
0x419081:	or	dword ptr [rsp + 0x9c], 0x800
0x41908c:	test	r8b, 1
0x419090:	je	0x4190a9
0x419092:	mov	edx, 0x36
0x419097:	lea	rsi, [rsp + 0x48]
0x41909c:	lea	rdi, [rsp + 0x90]
0x4190a4:	call	0x41866b
0x4190a9:	mov	r11d, r8d
0x4190ac:	and	r11d, 0x20
0x4190b0:	je	0x4190c9
0x4190b2:	mov	edx, 0x29
0x4190b7:	lea	rsi, [rsp + 0x48]
0x4190bc:	lea	rdi, [rsp + 0x90]
0x4190c4:	call	0x41866b
0x4190c9:	bt	r8d, 0xf
0x4190ce:	jae	0x4190e7
0x4190d0:	mov	edx, 0x38
0x4190d5:	lea	rsi, [rsp + 0x48]
0x4190da:	lea	rdi, [rsp + 0x90]
0x4190e2:	call	0x41866b
0x4190e7:	bt	r8d, 0x15
0x4190ec:	jae	0x419105
0x4190ee:	mov	edx, 0x4c
0x4190f3:	lea	rsi, [rsp + 0x48]
0x4190f8:	lea	rdi, [rsp + 0x90]
0x419100:	call	0x41866b
0x419105:	test	r11d, r11d
0x419108:	je	0x419121
0x41910a:	mov	edx, 0x39
0x41910f:	lea	rsi, [rsp + 0x48]
0x419114:	lea	rdi, [rsp + 0x90]
0x41911c:	call	0x41866b
0x419121:	bt	r8d, 8
0x419126:	jae	0x41913f
0x419128:	mov	edx, 0x42
0x41912d:	lea	rsi, [rsp + 0x48]
0x419132:	lea	rdi, [rsp + 0x90]
0x41913a:	call	0x41866b
0x41913f:	bt	r8d, 0x1d
0x419144:	jae	0x41915d
0x419146:	mov	edx, 0x3d
0x41914b:	lea	rsi, [rsp + 0x48]
0x419150:	lea	rdi, [rsp + 0x90]
0x419158:	call	0x41866b
0x41915d:	bt	r13d, 0x1d
0x419162:	jae	0x41917b
0x419164:	mov	edx, 0x37
0x419169:	lea	rsi, [rsp + 0x48]
0x41916e:	lea	rdi, [rsp + 0x90]
0x419176:	call	0x41866b
0x41917b:	bt	r13d, 0x1e
0x419180:	jae	0x419199
0x419182:	mov	edx, 0x27
0x419187:	lea	rsi, [rsp + 0x48]
0x41918c:	lea	rdi, [rsp + 0x90]
0x419194:	call	0x41866b
0x419199:	test	r13d, r13d
0x41919c:	jns	0x4191b5
0x41919e:	mov	edx, 0x26
0x4191a3:	lea	rsi, [rsp + 0x48]
0x4191a8:	lea	rdi, [rsp + 0x90]
0x4191b0:	call	0x41866b
0x4191b5:	test	r14d, r14d
0x4191b8:	je	0x4191de
0x4191ba:	bt	r8d, 0x10
0x4191bf:	jae	0x4191cc
0x4191c1:	or	dword ptr [rsp + 0x9c], 0x1000
0x4191cc:	bt	r8d, 0xb
0x4191d1:	jae	0x4191de
0x4191d3:	or	dword ptr [rsp + 0x9c], 0x2000
0x4191de:	cmp	r10d, 0x80000007
0x4191e5:	jbe	0x419227
0x4191e7:	mov	eax, 0x80000008
0x4191ec:	cpuid	
0x4191ee:	test	bl, 1
0x4191f1:	je	0x41920a
0x4191f3:	mov	edx, 0x2d
0x4191f8:	lea	rsi, [rsp + 0x48]
0x4191fd:	lea	rdi, [rsp + 0x90]
0x419205:	call	0x41866b
0x41920a:	bt	ebx, 9
0x41920e:	jae	0x419227
0x419210:	mov	edx, 0x50
0x419215:	lea	rsi, [rsp + 0x48]
0x41921a:	lea	rdi, [rsp + 0x90]
0x419222:	call	0x41866b
0x419227:	cmp	dword ptr [rsp + 0x14], 0x756e6547
0x41922f:	jne	0x41929e
0x419231:	cmp	dword ptr [rsp + 0x10], 0xf
0x419236:	jne	0x41924a
0x419238:	mov	edi, dword ptr [rsp + 0x38]
0x41923c:	or	r9d, dword ptr [rsp + 0x1c]
0x419241:	add	edi, 0xf
0x419244:	mov	dword ptr [rsp + 0x10], edi
0x419248:	jmp	0x419256
0x41924a:	cmp	dword ptr [rsp + 0x10], 6
0x41924f:	jne	0x419256
0x419251:	or	r9d, dword ptr [rsp + 0x1c]
0x419256:	movd	xmm2, dword ptr [rsp + 0x10]
0x41925c:	movd	xmm1, r9d
0x419261:	lea	rdx, [rsp + 0x48]
0x419266:	lea	rsi, [rsp + 0x80]
0x41926e:	lea	rdi, [rsp + 0x90]
0x419276:	mov	r13d, 1
0x41927c:	punpckldq	xmm2, xmm1
0x419280:	movq	qword ptr [rsp + 0x80], xmm2
0x419289:	call	0x4183a3
0x41928e:	mov	dword ptr [rsp + 0x90], 1
0x419299:	jmp	0x419528
0x41929e:	cmp	dword ptr [rsp + 0x14], 0x68747541
0x4192a6:	jne	0x4194c0
0x4192ac:	cmp	dword ptr [rsp + 0x10], 0xf
0x4192b1:	jne	0x4192c6
0x4192b3:	mov	r14d, dword ptr [rsp + 0x38]
0x4192b8:	or	r9d, dword ptr [rsp + 0x1c]
0x4192bd:	add	r14d, 0xf
0x4192c1:	mov	dword ptr [rsp + 0x10], r14d
0x4192c6:	mov	esi, dword ptr [rsp + 0x10]
0x4192ca:	mov	dword ptr [rsp + 0x84], r9d
0x4192d2:	mov	dword ptr [rsp + 0x80], esi
0x4192d9:	sub	esi, 0x10
0x4192dc:	cmp	esi, 9
0x4192df:	ja	0x4194ad
0x4192e5:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c7d88]
0x4192ed:	mov	dword ptr [rsp + 0x94], 4
0x4192f8:	cmp	r9d, 4
0x4192fc:	je	0x41931e
0x4192fe:	cmp	r9d, 8
0x419302:	je	0x41932e
0x419304:	cmp	r9d, 2
0x419308:	jne	0x4194ad
0x41930e:	mov	dword ptr [rsp + 0x98], 4
0x419319:	jmp	0x4194ad
0x41931e:	mov	dword ptr [rsp + 0x98], 5
0x419329:	jmp	0x4194ad
0x41932e:	mov	dword ptr [rsp + 0x98], 6
0x419339:	jmp	0x4194ad
0x41933e:	mov	dword ptr [rsp + 0x94], 8
0x419349:	jmp	0x4194ad
0x41934e:	mov	dword ptr [rsp + 0x94], 5
0x419359:	cmp	r9d, 2
0x41935d:	jne	0x41936f
0x41935f:	mov	dword ptr [rsp + 0x98], 8
0x41936a:	jmp	0x4194ad
0x41936f:	cmp	r9d, 0xf
0x419373:	ja	0x419385
0x419375:	mov	dword ptr [rsp + 0x98], 7
0x419380:	jmp	0x4194ad
0x419385:	cmp	r9d, 0x2f
0x419389:	jbe	0x41935f
0x41938b:	cmp	r9d, 0x4f
0x41938f:	ja	0x4193a1
0x419391:	mov	dword ptr [rsp + 0x98], 9
0x41939c:	jmp	0x4194ad
0x4193a1:	cmp	r9d, 0x7f
0x4193a5:	ja	0x4193b7
0x4193a7:	mov	dword ptr [rsp + 0x98], 0xa
0x4193b2:	jmp	0x4194ad
0x4193b7:	mov	r13d, dword ptr [rsp + 0x9c]
0x4193bf:	bt	r13d, 0xa
0x4193c4:	jb	0x4193a7
0x4193c6:	mov	edx, 0x53
0x4193cb:	lea	rsi, [rsp + 0x48]
0x4193d0:	lea	rdi, [rsp + 0x90]
0x4193d8:	call	0x418360
0x4193dd:	test	eax, eax
0x4193df:	jne	0x419391
0x4193e1:	bt	r13d, 0x10
0x4193e6:	jb	0x41935f
0x4193ec:	bt	r13d, 0xd
0x4193f1:	jb	0x419375
0x4193f3:	jmp	0x4194ad
0x4193f8:	mov	dword ptr [rsp + 0x94], 9
0x419403:	jmp	0x4194ad
0x419408:	mov	dword ptr [rsp + 0x94], 0xa
0x419413:	cmp	r9d, 0x1f
0x419417:	ja	0x419429
0x419419:	mov	dword ptr [rsp + 0x98], 0xb
0x419424:	jmp	0x4194ad
0x419429:	cmp	r9d, 0x2f
0x41942d:	jbe	0x41943c
0x41942f:	mov	dword ptr [rsp + 0x98], 0x14
0x41943a:	jmp	0x4194ad
0x41943c:	mov	edx, 0x2c
0x419441:	lea	rsi, [rsp + 0x48]
0x419446:	lea	rdi, [rsp + 0x90]
0x41944e:	call	0x418360
0x419453:	test	eax, eax
0x419455:	jne	0x41942f
0x419457:	mov	edx, 0x2d
0x41945c:	lea	rsi, [rsp + 0x48]
0x419461:	lea	rdi, [rsp + 0x90]
0x419469:	call	0x418360
0x41946e:	test	eax, eax
0x419470:	jne	0x419419
0x419472:	jmp	0x4194ad
0x419474:	mov	dword ptr [rsp + 0x94], 0xf
0x41947f:	cmp	r9d, 0xf
0x419483:	ja	0x419492
0x419485:	mov	dword ptr [rsp + 0x98], 0x1a
0x419490:	jmp	0x4194ad
0x419492:	mov	edx, 0x4e
0x419497:	lea	rsi, [rsp + 0x48]
0x41949c:	lea	rdi, [rsp + 0x90]
0x4194a4:	call	0x418360
0x4194a9:	test	eax, eax
0x4194ab:	jne	0x419485
0x4194ad:	mov	dword ptr [rsp + 0x90], 2
0x4194b8:	mov	r13d, 2
0x4194be:	jmp	0x419528
0x4194c0:	cmp	dword ptr [rsp + 0x14], 0x746e6543
0x4194c8:	je	0x419517
0x4194ca:	cmp	dword ptr [rsp + 0x14], 0x69727943
0x4194d2:	je	0x419504
0x4194d4:	cmp	dword ptr [rsp + 0x14], 0x646f6547
0x4194dc:	je	0x4194f1
0x4194de:	mov	dword ptr [rsp + 0x90], 3
0x4194e9:	mov	r13d, 3
0x4194ef:	jmp	0x419528
0x4194f1:	mov	dword ptr [rsp + 0x90], 6
0x4194fc:	mov	r13d, 6
0x419502:	jmp	0x419528
0x419504:	mov	dword ptr [rsp + 0x90], 5
0x41950f:	mov	r13d, 5
0x419515:	jmp	0x419528
0x419517:	mov	dword ptr [rsp + 0x90], 4
0x419522:	mov	r13d, 4
0x419528:	cmp	dword ptr [rsp + 0x94], 0xf
0x419530:	jbe	0x419546
0x419532:	mov	edx, 0x4c6e39
0x419537:	mov	esi, 0x3a5
0x41953c:	mov	edi, 0x4c7690
0x419541:	call	0x415bba
0x419546:	cmp	dword ptr [rsp + 0x98], 0x1b
0x41954e:	jbe	0x419564
0x419550:	mov	edx, 0x4c6e39
0x419555:	mov	esi, 0x3a6
0x41955a:	mov	edi, 0x4c7690
0x41955f:	call	0x415bba
0x419564:	mov	r9d, dword ptr [rsp + 0x80]
0x41956c:	mov	r10d, dword ptr [rsp + 0x84]
0x419574:	mov	ecx, dword ptr [rsp + 0x8c]
0x41957b:	cmp	dword ptr [rsp + 0xc], 0
0x419580:	mov	dword ptr [rsp + 0x10], r9d
0x419585:	mov	r8d, dword ptr [rsp + 0x88]
0x41958d:	mov	dword ptr [rsp + 0x14], r10d
0x419592:	mov	dword ptr [rsp + 0x18], ecx
0x419596:	je	0x419c28
0x41959c:	lea	edx, [r13 - 2]
0x4195a0:	and	edx, 0xfffffffd
0x4195a3:	je	0x4195af
0x4195a5:	lea	r11d, [r13 - 5]
0x4195a9:	cmp	r11d, 1
0x4195ad:	ja	0x41961a
0x4195af:	cmp	dword ptr [rsp + 0x18], 0x80000004
0x4195b7:	mov	r14d, 0x4c4893
0x4195bd:	mov	qword ptr [rsp + 0xa0], 0
0x4195c9:	mov	dword ptr [rsp + 0xa8], 0
0x4195d4:	jbe	0x419c2e
0x4195da:	mov	eax, 0x80000005
0x4195df:	cpuid	
0x4195e1:	mov	ebp, ecx
0x4195e3:	movzx	r12d, cl
0x4195e7:	shr	ebp, 0x18
0x4195ea:	cmp	dword ptr [rsp + 0x18], 0x80000005
0x4195f2:	je	0x419601
0x4195f4:	lea	rdi, [rsp + 0xa0]
0x4195fc:	call	0x413508
0x419601:	mov	edx, dword ptr [rsp + 0xa0]
0x419608:	mov	esi, r12d
0x41960b:	mov	edi, ebp
0x41960d:	call	0x42c5e9
0x419612:	mov	r14, rax
0x419615:	jmp	0x419c2e
0x41961a:	mov	r14d, 0x4c4893
0x419620:	cmp	r13d, 1
0x419624:	jne	0x419e58
0x41962a:	mov	qword ptr [rsp + 0x50], 0
0x419633:	mov	dword ptr [rsp + 0x58], 0
0x41963b:	mov	qword ptr [rsp + 0x60], 0
0x419644:	mov	dword ptr [rsp + 0x68], 0
0x41964c:	mov	qword ptr [rsp + 0x70], 0
0x419655:	mov	dword ptr [rsp + 0x78], 0
0x41965d:	cmp	r8d, 3
0x419661:	jbe	0x419702
0x419667:	xor	ebp, ebp
0x419669:	mov	r12d, 4
0x41966f:	mov	eax, r12d
0x419672:	mov	ecx, ebp
0x419674:	cpuid	
0x419676:	mov	edi, eax
0x419678:	mov	r15d, eax
0x41967b:	and	edi, 0x1d
0x41967e:	and	r15d, 0x1f
0x419682:	dec	edi
0x419684:	je	0x419690
0x419686:	test	r15d, r15d
0x419689:	jne	0x4196fb
0x41968b:	jmp	0x419bcc
0x419690:	shr	eax, 5
0x419693:	and	eax, 7
0x419696:	cmp	eax, 2
0x419699:	je	0x4196ab
0x41969b:	cmp	eax, 3
0x41969e:	je	0x4196b2
0x4196a0:	dec	eax
0x4196a2:	lea	r9, [rsp + 0x50]
0x4196a7:	jne	0x4196fb
0x4196a9:	jmp	0x4196b7
0x4196ab:	lea	r9, [rsp + 0x60]
0x4196b0:	jmp	0x4196b7
0x4196b2:	lea	r9, [rsp + 0x70]
0x4196b7:	mov	r14d, ebx
0x4196ba:	mov	esi, ebx
0x4196bc:	inc	ecx
0x4196be:	shr	ebx, 0xc
0x4196c1:	shr	r14d, 0x16
0x4196c5:	and	esi, 0xfff
0x4196cb:	and	ebx, 0x3ff
0x4196d1:	inc	r14d
0x4196d4:	inc	esi
0x4196d6:	inc	ebx
0x4196d8:	mov	dword ptr [r9 + 8], esi
0x4196dc:	imul	esi, r14d
0x4196e0:	movd	xmm4, r14d
0x4196e5:	imul	esi, ecx
0x4196e8:	imul	ebx, esi
0x4196eb:	shr	ebx, 0xa
0x4196ee:	movd	xmm3, ebx
0x4196f2:	punpckldq	xmm3, xmm4
0x4196f6:	movq	qword ptr [r9], xmm3
0x4196fb:	inc	ebp
0x4196fd:	jmp	0x41966f
0x419702:	cmp	r8d, 1
0x419706:	ja	0x419713
0x419708:	mov	r14d, 0x4c4893
0x41970e:	jmp	0x419e58
0x419713:	cmp	dword ptr [rsp + 0x10], 0xf
0x419718:	sete	r8b
0x41971c:	cmp	dword ptr [rsp + 0x14], 6
0x419721:	sete	al
0x419724:	and	r8d, eax
0x419727:	mov	eax, 2
0x41972c:	mov	r14d, r8d
0x41972f:	cpuid	
0x419731:	mov	edi, eax
0x419733:	and	eax, 0xfffffff0
0x419736:	mov	dword ptr [rsp + 0xa4], ebx
0x41973d:	mov	r10d, dword ptr [rsp + 0x30]
0x419742:	mov	dword ptr [rsp + 0xa8], ecx
0x419749:	mov	r8d, dword ptr [rsp + 0x28]
0x41974e:	and	edi, 0xf
0x419751:	lea	r9, [rsp + 0xb0]
0x419759:	mov	dword ptr [rsp + 0xac], edx
0x419760:	mov	r11d, dword ptr [rsp + 0x34]
0x419765:	mov	dword ptr [rsp + 0xa0], eax
0x41976c:	mov	dword ptr [rsp + 0x38], r13d
0x419771:	xor	eax, eax
0x419773:	xor	edx, edx
0x419775:	sub	edi, 1
0x419778:	jb	0x419b86
0x41977e:	lea	r13, [rsp + 0xa0]
0x419786:	mov	ebx, dword ptr [r13]
0x41978a:	test	ebx, ebx
0x41978c:	jle	0x419b24
0x419792:	mov	ecx, 0x18
0x419797:	mov	esi, ebx
0x419799:	shr	esi, cl
0x41979b:	mov	dword ptr [rsp + 0x1c], esi
0x41979f:	cmp	byte ptr [rsp + 0x1c], 0x87
0x4197a4:	movzx	esi, byte ptr [rsp + 0x1c]
0x4197a9:	ja	0x419b18
0x4197af:	cmp	esi, 0x20
0x4197b2:	ja	0x4197ea
0x4197b4:	cmp	esi, 0xd
0x4197b7:	je	0x419ad9
0x4197bd:	ja	0x4197fe
0x4197bf:	cmp	esi, 0xa
0x4197c2:	je	0x419aef
0x4197c8:	cmp	esi, 0xc
0x4197cb:	jne	0x419b18
0x4197d1:	mov	r11d, 0x20
0x4197d7:	mov	r8d, 4
0x4197dd:	mov	dl, 1
0x4197df:	mov	r10d, 0x10
0x4197e5:	jmp	0x419b18
0x4197ea:	sub	esi, 0x21
0x4197ed:	cmp	esi, 0x66
0x4197f0:	ja	0x419b18
0x4197f6:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c7dd8]
0x4197fe:	cmp	esi, 0xe
0x419801:	jne	0x419b18
0x419807:	mov	r11d, 0x40
0x41980d:	mov	r8d, 6
0x419813:	mov	dl, 1
0x419815:	mov	r10d, 0x18
0x41981b:	jmp	0x419b18
0x419820:	mov	r15d, 0x40
0x419826:	mov	r12d, 0x10
0x41982c:	mov	al, 1
0x41982e:	mov	ebp, 0x400
0x419833:	jmp	0x419b18
0x419838:	mov	r11d, 0x40
0x41983e:	mov	r8d, 8
0x419844:	mov	dl, 1
0x419846:	mov	r10d, 0x20
0x41984c:	jmp	0x419b18
0x419851:	mov	r15d, 0x40
0x419857:	mov	r12d, 4
0x41985d:	mov	al, 1
0x41985f:	mov	ebp, 0x80
0x419864:	jmp	0x419b18
0x419869:	mov	r15d, 0x40
0x41986f:	mov	r12d, 6
0x419875:	mov	al, 1
0x419877:	mov	ebp, 0xc0
0x41987c:	jmp	0x419b18
0x419881:	mov	r15d, 0x40
0x419887:	mov	r12d, 2
0x41988d:	mov	al, 1
0x41988f:	mov	ebp, 0x80
0x419894:	jmp	0x419b18
0x419899:	mov	r15d, 0x40
0x41989f:	mov	r12d, 4
0x4198a5:	mov	al, 1
0x4198a7:	mov	ebp, 0x100
0x4198ac:	jmp	0x419b18
0x4198b1:	mov	r15d, 0x40
0x4198b7:	mov	r12d, 6
0x4198bd:	mov	al, 1
0x4198bf:	mov	ebp, 0x180
0x4198c4:	jmp	0x419b18
0x4198c9:	mov	r15d, 0x20
0x4198cf:	mov	r12d, 4
0x4198d5:	mov	al, 1
0x4198d7:	mov	ebp, 0x80
0x4198dc:	jmp	0x419b18
0x4198e1:	mov	r15d, 0x20
0x4198e7:	mov	r12d, 4
0x4198ed:	mov	al, 1
0x4198ef:	mov	ebp, 0x100
0x4198f4:	jmp	0x419b18
0x4198f9:	mov	r15d, 0x20
0x4198ff:	mov	r12d, 4
0x419905:	mov	al, 1
0x419907:	mov	ebp, 0x200
0x41990c:	jmp	0x419b18
0x419911:	mov	r15d, 0x20
0x419917:	mov	r12d, 4
0x41991d:	mov	al, 1
0x41991f:	mov	ebp, 0x400
0x419924:	jmp	0x419b18
0x419929:	mov	r15d, 0x20
0x41992f:	mov	r12d, 4
0x419935:	mov	al, 1
0x419937:	mov	ebp, 0x800
0x41993c:	jmp	0x419b18
0x419941:	mov	r15d, 0x40
0x419947:	mov	r12d, 0xc
0x41994d:	mov	al, 1
0x41994f:	mov	ebp, 0xc00
0x419954:	jmp	0x419b18
0x419959:	test	r14b, r14b
0x41995c:	jne	0x419b18
0x419962:	mov	r15d, 0x40
0x419968:	mov	r12d, 0x10
0x41996e:	mov	al, 1
0x419970:	mov	ebp, 0x1000
0x419975:	jmp	0x419b18
0x41997a:	mov	r15d, 0x40
0x419980:	mov	r12d, 0x18
0x419986:	mov	al, 1
0x419988:	mov	ebp, 0x1800
0x41998d:	jmp	0x419b18
0x419992:	mov	r11d, 0x40
0x419998:	mov	r8d, 8
0x41999e:	mov	dl, 1
0x4199a0:	mov	r10d, 0x10
0x4199a6:	jmp	0x419b18
0x4199ab:	mov	r11d, 0x40
0x4199b1:	mov	r8d, 4
0x4199b7:	mov	dl, 1
0x4199b9:	mov	r10d, 8
0x4199bf:	jmp	0x419b18
0x4199c4:	mov	r11d, 0x40
0x4199ca:	mov	r8d, 4
0x4199d0:	mov	dl, 1
0x4199d2:	mov	r10d, 0x20
0x4199d8:	jmp	0x419b18
0x4199dd:	mov	r15d, 0x40
0x4199e3:	mov	r12d, 4
0x4199e9:	mov	al, 1
0x4199eb:	mov	ebp, 0x400
0x4199f0:	jmp	0x419b18
0x4199f5:	mov	r15d, 0x40
0x4199fb:	mov	r12d, 8
0x419a01:	mov	al, 1
0x419a03:	mov	ebp, 0x80
0x419a08:	jmp	0x419b18
0x419a0d:	mov	r15d, 0x40
0x419a13:	mov	r12d, 8
0x419a19:	mov	al, 1
0x419a1b:	mov	ebp, 0x800
0x419a20:	jmp	0x419b18
0x419a25:	mov	r15d, 0x40
0x419a2b:	mov	r12d, 2
0x419a31:	mov	al, 1
0x419a33:	mov	ebp, 0x200
0x419a38:	jmp	0x419b18
0x419a3d:	mov	r15d, 0x40
0x419a43:	mov	r12d, 8
0x419a49:	mov	al, 1
0x419a4b:	mov	ebp, 0x200
0x419a50:	jmp	0x419b18
0x419a55:	mov	r15d, 0x20
0x419a5b:	mov	r12d, 8
0x419a61:	mov	al, 1
0x419a63:	mov	ebp, 0x100
0x419a68:	jmp	0x419b18
0x419a6d:	mov	r15d, 0x20
0x419a73:	mov	r12d, 8
0x419a79:	mov	al, 1
0x419a7b:	mov	ebp, 0x200
0x419a80:	jmp	0x419b18
0x419a85:	mov	r15d, 0x20
0x419a8b:	mov	r12d, 8
0x419a91:	mov	al, 1
0x419a93:	mov	ebp, 0x400
0x419a98:	jmp	0x419b18
0x419a9a:	mov	r15d, 0x20
0x419aa0:	mov	r12d, 8
0x419aa6:	mov	al, 1
0x419aa8:	mov	ebp, 0x800
0x419aad:	jmp	0x419b18
0x419aaf:	mov	r15d, 0x40
0x419ab5:	mov	r12d, 4
0x419abb:	mov	al, 1
0x419abd:	mov	ebp, 0x200
0x419ac2:	jmp	0x419b18
0x419ac4:	mov	r15d, 0x40
0x419aca:	mov	r12d, 8
0x419ad0:	mov	al, 1
0x419ad2:	mov	ebp, 0x400
0x419ad7:	jmp	0x419b18
0x419ad9:	mov	r11d, 0x40
0x419adf:	mov	r8d, 4
0x419ae5:	mov	dl, 1
0x419ae7:	mov	r10d, 0x10
0x419aed:	jmp	0x419b18
0x419aef:	mov	r11d, 0x20
0x419af5:	mov	r8d, 2
0x419afb:	mov	dl, 1
0x419afd:	mov	r10d, 8
0x419b03:	jmp	0x419b18
0x419b05:	mov	r15d, 0x40
0x419b0b:	mov	r12d, 8
0x419b11:	mov	al, 1
0x419b13:	mov	ebp, 0x100
0x419b18:	sub	ecx, 8
0x419b1b:	cmp	ecx, -8
0x419b1e:	jne	0x419797
0x419b24:	add	r13, 4
0x419b28:	cmp	r9, r13
0x419b2b:	jne	0x419786
0x419b31:	test	edi, edi
0x419b33:	je	0x419775
0x419b39:	test	al, al
0x419b3b:	je	0x419b4b
0x419b3d:	mov	dword ptr [rsp + 0x68], r15d
0x419b42:	mov	dword ptr [rsp + 0x64], r12d
0x419b47:	mov	dword ptr [rsp + 0x60], ebp
0x419b4b:	test	dl, dl
0x419b4d:	je	0x419b5e
0x419b4f:	mov	dword ptr [rsp + 0x58], r11d
0x419b54:	mov	dword ptr [rsp + 0x54], r8d
0x419b59:	mov	dword ptr [rsp + 0x50], r10d
0x419b5e:	mov	eax, 2
0x419b63:	cpuid	
0x419b65:	mov	dword ptr [rsp + 0xa0], eax
0x419b6c:	mov	dword ptr [rsp + 0xa4], ebx
0x419b73:	mov	dword ptr [rsp + 0xa8], ecx
0x419b7a:	mov	dword ptr [rsp + 0xac], edx
0x419b81:	jmp	0x419771
0x419b86:	mov	dword ptr [rsp + 0x28], r8d
0x419b8b:	mov	r13d, dword ptr [rsp + 0x38]
0x419b90:	mov	dword ptr [rsp + 0x30], r10d
0x419b95:	mov	dword ptr [rsp + 0x34], r11d
0x419b9a:	test	al, al
0x419b9c:	je	0x419bac
0x419b9e:	mov	dword ptr [rsp + 0x68], r15d
0x419ba3:	mov	dword ptr [rsp + 0x64], r12d
0x419ba8:	mov	dword ptr [rsp + 0x60], ebp
0x419bac:	test	dl, dl
0x419bae:	je	0x419bcc
0x419bb0:	mov	ebp, dword ptr [rsp + 0x34]
0x419bb4:	mov	r12d, dword ptr [rsp + 0x28]
0x419bb9:	mov	r15d, dword ptr [rsp + 0x30]
0x419bbe:	mov	dword ptr [rsp + 0x58], ebp
0x419bc2:	mov	dword ptr [rsp + 0x54], r12d
0x419bc7:	mov	dword ptr [rsp + 0x50], r15d
0x419bcc:	mov	r11d, dword ptr [rsp + 0x50]
0x419bd1:	test	r11d, r11d
0x419bd4:	je	0x419708
0x419bda:	cmp	dword ptr [rsp + 0x70], 0
0x419bdf:	je	0x419bf5
0x419be1:	mov	r8, qword ptr [rsp + 0x70]
0x419be6:	mov	r10d, dword ptr [rsp + 0x78]
0x419beb:	mov	qword ptr [rsp + 0x60], r8
0x419bf0:	mov	dword ptr [rsp + 0x68], r10d
0x419bf5:	cmp	dword ptr [rsp + 0x60], 0
0x419bfa:	jne	0x419c10
0x419bfc:	cmp	dword ptr [rsp + 0x18], 0x80000005
0x419c04:	jbe	0x419c10
0x419c06:	lea	rdi, [rsp + 0x60]
0x419c0b:	call	0x413508
0x419c10:	mov	edx, dword ptr [rsp + 0x60]
0x419c14:	mov	esi, dword ptr [rsp + 0x58]
0x419c18:	mov	edi, r11d
0x419c1b:	call	0x42c5e9
0x419c20:	mov	r14, rax
0x419c23:	jmp	0x419e58
0x419c28:	mov	r14d, 0x4c4893
0x419c2e:	cmp	r13d, 2
0x419c32:	jne	0x419dd8
0x419c38:	cmp	dword ptr [rsp + 0x18], 0x80000001
0x419c40:	jbe	0x419c54
0x419c42:	mov	eax, 0x80000002
0x419c47:	cpuid	
0x419c49:	cmp	eax, 0x646f6547
0x419c4e:	je	0x41a380
0x419c54:	mov	edx, 0x3a
0x419c59:	lea	rsi, [rsp + 0x48]
0x419c5e:	lea	rdi, [rsp + 0x90]
0x419c66:	call	0x418360
0x419c6b:	cmp	dword ptr [rsp + 0x10], 0x16
0x419c70:	jne	0x419c7a
0x419c72:	test	eax, eax
0x419c74:	jne	0x41a388
0x419c7a:	mov	edx, 0x4e
0x419c7f:	lea	rsi, [rsp + 0x48]
0x419c84:	lea	rdi, [rsp + 0x90]
0x419c8c:	mov	r12d, 0x4be973
0x419c92:	call	0x418360
0x419c97:	test	eax, eax
0x419c99:	jne	0x41a3b6
0x419c9f:	mov	edx, 0x2c
0x419ca4:	lea	rsi, [rsp + 0x48]
0x419ca9:	lea	rdi, [rsp + 0x90]
0x419cb1:	mov	r12d, 0x4be96c
0x419cb7:	call	0x418360
0x419cbc:	test	eax, eax
0x419cbe:	jne	0x41a3b6
0x419cc4:	mov	edx, 0x2d
0x419cc9:	lea	rsi, [rsp + 0x48]
0x419cce:	lea	rdi, [rsp + 0x90]
0x419cd6:	call	0x418360
0x419cdb:	test	eax, eax
0x419cdd:	jne	0x41a390
0x419ce3:	mov	ebp, dword ptr [rsp + 0x9c]
0x419cea:	mov	r12d, 0x4be950
0x419cf0:	bt	ebp, 0xa
0x419cf4:	jb	0x41a3b6
0x419cfa:	mov	edx, 0x53
0x419cff:	lea	rsi, [rsp + 0x48]
0x419d04:	lea	rdi, [rsp + 0x90]
0x419d0c:	call	0x418360
0x419d11:	test	eax, eax
0x419d13:	jne	0x41a398
0x419d19:	bt	ebp, 0x10
0x419d1d:	jb	0x41a3a0
0x419d23:	bt	ebp, 0xd
0x419d27:	jb	0x41a3a8
0x419d2d:	bt	ebp, 0xb
0x419d31:	jae	0x419d4c
0x419d33:	and	bpl, 0x40
0x419d37:	mov	r12d, 0x4be957
0x419d3d:	mov	r11d, 0x4be932
0x419d43:	cmove	r12, r11
0x419d47:	jmp	0x41a3b6
0x419d4c:	test	bpl, 0x10
0x419d50:	jne	0x41a4a0
0x419d56:	mov	edx, 0x37
0x419d5b:	lea	rsi, [rsp + 0x48]
0x419d60:	lea	rdi, [rsp + 0x90]
0x419d68:	call	0x418360
0x419d6d:	test	eax, eax
0x419d6f:	jne	0x41a4a0
0x419d75:	mov	edx, 0x27
0x419d7a:	lea	rsi, [rsp + 0x48]
0x419d7f:	lea	rdi, [rsp + 0x90]
0x419d87:	call	0x418360
0x419d8c:	test	eax, eax
0x419d8e:	je	0x419d97
0x419d90:	cmp	dword ptr [rsp + 0x10], 6
0x419d95:	je	0x419da2
0x419d97:	and	bpl, 2
0x419d9b:	jne	0x419dbd
0x419d9d:	jmp	0x41a4f1
0x419da2:	cmp	dword ptr [rsp + 0xc], 0
0x419da7:	je	0x41a2aa
0x419dad:	mov	ebp, 0x4c4893
0x419db2:	mov	r12d, 0x4be92b
0x419db8:	jmp	0x41a473
0x419dbd:	cmp	dword ptr [rsp + 0xc], 0
0x419dc2:	je	0x41a27c
0x419dc8:	mov	ebp, 0x4c4893
0x419dcd:	mov	r12d, 0x4be928
0x419dd3:	jmp	0x41a473
0x419dd8:	cmp	r13d, 4
0x419ddc:	jne	0x419e58
0x419dde:	cmp	dword ptr [rsp + 0x10], 5
0x419de3:	je	0x419df1
0x419de5:	cmp	dword ptr [rsp + 0x10], 6
0x419dea:	je	0x419e22
0x419dec:	jmp	0x41a2c2
0x419df1:	mov	edx, 0x26
0x419df6:	lea	rsi, [rsp + 0x48]
0x419dfb:	lea	rdi, [rsp + 0x90]
0x419e03:	call	0x418360
0x419e08:	mov	r15d, dword ptr [rsp + 0x9c]
0x419e10:	and	r15d, 2
0x419e14:	or	r15d, eax
0x419e17:	jne	0x419ec9
0x419e1d:	jmp	0x41a2c2
0x419e22:	mov	edx, 0x37
0x419e27:	lea	rsi, [rsp + 0x48]
0x419e2c:	lea	rdi, [rsp + 0x90]
0x419e34:	call	0x418360
0x419e39:	test	eax, eax
0x419e3b:	jne	0x41a3c8
0x419e41:	cmp	dword ptr [rsp + 0x14], 8
0x419e46:	ja	0x419f43
0x419e4c:	cmp	dword ptr [rsp + 0x14], 5
0x419e51:	ja	0x419ec9
0x419e53:	jmp	0x41a2c2
0x419e58:	cmp	dword ptr [rsp + 0x10], 6
0x419e5d:	je	0x419f43
0x419e63:	ja	0x419e7c
0x419e65:	cmp	dword ptr [rsp + 0x10], 4
0x419e6a:	je	0x419ec9
0x419e6c:	cmp	dword ptr [rsp + 0x10], 5
0x419e71:	je	0x419f1c
0x419e77:	jmp	0x41a2c2
0x419e7c:	cmp	dword ptr [rsp + 0x10], 0xf
0x419e81:	jne	0x41a2c2
0x419e87:	mov	r12d, 0x4be831
0x419e8d:	test	byte ptr [rsp + 0x9c], 0x20
0x419e95:	je	0x41a3b6
0x419e9b:	mov	edx, 0x37
0x419ea0:	lea	rsi, [rsp + 0x48]
0x419ea5:	lea	rdi, [rsp + 0x90]
0x419ead:	mov	r12d, 0x4be83a
0x419eb3:	call	0x418360
0x419eb8:	mov	r13d, 0x4be9f8
0x419ebe:	test	eax, eax
0x419ec0:	cmove	r12, r13
0x419ec4:	jmp	0x41a3b6
0x419ec9:	cmp	r13d, 4
0x419ecd:	jne	0x41a3b0
0x419ed3:	cmp	dword ptr [rsp + 0xc], 0
0x419ed8:	jne	0x41a3b0
0x419ede:	cmp	dword ptr [rsp + 0x14], 5
0x419ee3:	mov	r12d, 0x4be99f
0x419ee9:	ja	0x41a3e8
0x419eef:	mov	edx, 0x26
0x419ef4:	lea	rdi, [rsp + 0x90]
0x419efc:	lea	rsi, [rsp + 0x48]
0x419f01:	mov	r12d, 0x4be996
0x419f07:	call	0x418360
0x419f0c:	mov	edi, 0x4be98b
0x419f11:	test	eax, eax
0x419f13:	cmove	r12, rdi
0x419f17:	jmp	0x41a3e8
0x419f1c:	cmp	dword ptr [rsp + 0xc], 0
0x419f21:	jne	0x41a503
0x419f27:	test	byte ptr [rsp + 0x9c], 2
0x419f2f:	mov	r12d, 0x4be97f
0x419f35:	mov	edx, 0x4be815
0x419f3a:	cmove	r12, rdx
0x419f3e:	jmp	0x41a3e8
0x419f43:	lea	rdx, [rsp + 0x48]
0x419f48:	lea	rsi, [rsp + 0x80]
0x419f50:	lea	rdi, [rsp + 0x90]
0x419f58:	call	0x4183a3
0x419f5d:	mov	r12, rax
0x419f60:	test	rax, rax
0x419f63:	jne	0x41a3b6
0x419f69:	cmp	dword ptr [rsp + 0xc], 0
0x419f6e:	jne	0x41a468
0x419f74:	mov	ebp, dword ptr [rsp + 0x9c]
0x419f7b:	bt	ebp, 9
0x419f7f:	jae	0x41a105
0x419f85:	mov	edx, 0x25
0x419f8a:	lea	rsi, [rsp + 0x48]
0x419f8f:	lea	rdi, [rsp + 0x90]
0x419f97:	call	0x418360
0x419f9c:	test	eax, eax
0x419f9e:	je	0x419fcd
0x419fa0:	mov	edx, 0x4d
0x419fa5:	lea	rsi, [rsp + 0x48]
0x419faa:	lea	rdi, [rsp + 0x90]
0x419fb2:	mov	r12d, 0x4be8fe
0x419fb8:	call	0x418360
0x419fbd:	mov	ecx, 0x4be8e9
0x419fc2:	test	eax, eax
0x419fc4:	cmove	r12, rcx
0x419fc8:	jmp	0x41a3e8
0x419fcd:	mov	edx, 0x24
0x419fd2:	lea	rsi, [rsp + 0x48]
0x419fd7:	lea	rdi, [rsp + 0x90]
0x419fdf:	mov	r12d, 0x4be8f3
0x419fe5:	call	0x418360
0x419fea:	test	eax, eax
0x419fec:	jne	0x41a3e8
0x419ff2:	mov	edx, 0x50
0x419ff7:	lea	rsi, [rsp + 0x48]
0x419ffc:	lea	rdi, [rsp + 0x90]
0x41a004:	mov	r12d, 0x4be8ce
0x41a00a:	call	0x418360
0x41a00f:	test	eax, eax
0x41a011:	jne	0x41a3e8
0x41a017:	mov	edx, 0x23
0x41a01c:	lea	rsi, [rsp + 0x48]
0x41a021:	lea	rdi, [rsp + 0x90]
0x41a029:	mov	r12d, 0x4be8bf
0x41a02f:	call	0x418360
0x41a034:	test	eax, eax
0x41a036:	jne	0x41a3e8
0x41a03c:	bt	ebp, 0x1a
0x41a040:	mov	r12d, 0x4be8b4
0x41a046:	jb	0x41a3e8
0x41a04c:	bt	ebp, 0x1c
0x41a050:	mov	r12d, 0x4be899
0x41a056:	jb	0x41a3e8
0x41a05c:	bt	ebp, 0x18
0x41a060:	mov	r12d, 0x4be895
0x41a066:	jb	0x41a3e8
0x41a06c:	bt	ebp, 0xf
0x41a070:	mov	r12d, 0x4be8a5
0x41a076:	jb	0x41a3e8
0x41a07c:	mov	edx, 0x48
0x41a081:	lea	rsi, [rsp + 0x48]
0x41a086:	lea	rdi, [rsp + 0x90]
0x41a08e:	mov	r12d, 0x4be90d
0x41a094:	call	0x418360
0x41a099:	test	eax, eax
0x41a09b:	jne	0x41a3e8
0x41a0a1:	mov	edx, 0x2b
0x41a0a6:	lea	rsi, [rsp + 0x48]
0x41a0ab:	lea	rdi, [rsp + 0x90]
0x41a0b3:	mov	r12d, 0x4be89d
0x41a0b9:	call	0x418360
0x41a0be:	test	eax, eax
0x41a0c0:	jne	0x41a3e8
0x41a0c6:	mov	edx, 0x28
0x41a0cb:	lea	rsi, [rsp + 0x48]
0x41a0d0:	lea	rdi, [rsp + 0x90]
0x41a0d8:	mov	r12d, 0x4bea3b
0x41a0de:	call	0x418360
0x41a0e3:	test	eax, eax
0x41a0e5:	jne	0x41a3e8
0x41a0eb:	and	ebp, 0x400
0x41a0f1:	mov	r12d, 0x4be85b
0x41a0f7:	mov	eax, 0x4be84f
0x41a0fc:	cmove	r12, rax
0x41a100:	jmp	0x41a3e8
0x41a105:	bt	ebp, 8
0x41a109:	jae	0x41a1ac
0x41a10f:	mov	edx, 0x20
0x41a114:	lea	rsi, [rsp + 0x48]
0x41a119:	lea	rdi, [rsp + 0x90]
0x41a121:	mov	r12d, 0x4be88d
0x41a127:	call	0x418360
0x41a12c:	test	eax, eax
0x41a12e:	jne	0x41a3e8
0x41a134:	mov	edx, 0x49
0x41a139:	lea	rsi, [rsp + 0x48]
0x41a13e:	lea	rdi, [rsp + 0x90]
0x41a146:	mov	r12d, 0x4be87f
0x41a14c:	call	0x418360
0x41a151:	test	eax, eax
0x41a153:	jne	0x41a3e8
0x41a159:	mov	edx, 0x51
0x41a15e:	lea	rsi, [rsp + 0x48]
0x41a163:	lea	rdi, [rsp + 0x90]
0x41a16b:	mov	r12d, 0x4be876
0x41a171:	call	0x418360
0x41a176:	test	eax, eax
0x41a178:	jne	0x41a3e8
0x41a17e:	mov	edx, 0x3a
0x41a183:	lea	rsi, [rsp + 0x48]
0x41a188:	lea	rdi, [rsp + 0x90]
0x41a190:	mov	r12d, 0x4be86b
0x41a196:	call	0x418360
0x41a19b:	mov	r10d, 0x4be847
0x41a1a1:	test	eax, eax
0x41a1a3:	cmove	r12, r10
0x41a1a7:	jmp	0x41a3e8
0x41a1ac:	test	bpl, 0x40
0x41a1b0:	je	0x41a1e0
0x41a1b2:	mov	edx, 0x3a
0x41a1b7:	lea	rsi, [rsp + 0x48]
0x41a1bc:	lea	rdi, [rsp + 0x90]
0x41a1c4:	mov	r12d, 0x4be863
0x41a1ca:	call	0x418360
0x41a1cf:	mov	r8d, 0x4be841
0x41a1d5:	test	eax, eax
0x41a1d7:	cmove	r12, r8
0x41a1db:	jmp	0x41a3e8
0x41a1e0:	mov	edx, 0x37
0x41a1e5:	lea	rsi, [rsp + 0x48]
0x41a1ea:	lea	rdi, [rsp + 0x90]
0x41a1f2:	mov	r12d, 0x4bea82
0x41a1f8:	call	0x418360
0x41a1fd:	test	eax, eax
0x41a1ff:	jne	0x41a3e8
0x41a205:	test	bpl, 0x20
0x41a209:	je	0x41a224
0x41a20b:	cmp	r13d, 4
0x41a20f:	mov	r12d, 0x4be9b9
0x41a215:	mov	r11d, 0x4be9e4
0x41a21b:	cmovne	r12, r11
0x41a21f:	jmp	0x41a3e8
0x41a224:	mov	r12d, 0x4be9e4
0x41a22a:	test	bpl, 0x10
0x41a22e:	jne	0x41a3e8
0x41a234:	test	bpl, 8
0x41a238:	je	0x41a263
0x41a23a:	mov	r12d, 0x4be9d1
0x41a240:	cmp	r13d, 4
0x41a244:	jne	0x41a3e8
0x41a24a:	cmp	dword ptr [rsp + 0x14], 8
0x41a24f:	mov	r12d, 0x4be9b0
0x41a255:	mov	esi, 0x4be9ab
0x41a25a:	cmovbe	r12, rsi
0x41a25e:	jmp	0x41a3e8
0x41a263:	and	bpl, 2
0x41a267:	mov	r12d, 0x4be9c8
0x41a26d:	mov	r9d, 0x4be826
0x41a273:	cmove	r12, r9
0x41a277:	jmp	0x41a3e8
0x41a27c:	mov	edx, 0x26
0x41a281:	lea	rsi, [rsp + 0x48]
0x41a286:	lea	rdi, [rsp + 0x90]
0x41a28e:	mov	r12d, 0x4bea53
0x41a294:	call	0x418360
0x41a299:	mov	r9d, 0x4be928
0x41a29f:	test	eax, eax
0x41a2a1:	cmove	r12, r9
0x41a2a5:	jmp	0x41a3e8
0x41a2aa:	and	bpl, 8
0x41a2ae:	mov	r12d, 0x4bea65
0x41a2b4:	mov	edi, 0x4be92b
0x41a2b9:	cmove	r12, rdi
0x41a2bd:	jmp	0x41a3e8
0x41a2c2:	cmp	dword ptr [rsp + 0xc], 0
0x41a2c7:	jne	0x41a468
0x41a2cd:	mov	ebx, dword ptr [rsp + 0x9c]
0x41a2d4:	mov	r12d, 0x4be841
0x41a2da:	test	bl, 0x40
0x41a2dd:	jne	0x41a3e8
0x41a2e3:	mov	edx, 0x37
0x41a2e8:	lea	rsi, [rsp + 0x48]
0x41a2ed:	lea	rdi, [rsp + 0x90]
0x41a2f5:	test	bl, 0x20
0x41a2f8:	je	0x41a316
0x41a2fa:	call	0x418360
0x41a2ff:	mov	r12d, 0x4be83a
0x41a305:	mov	r15d, 0x4be9f8
0x41a30b:	test	eax, eax
0x41a30d:	cmove	r12, r15
0x41a311:	jmp	0x41a3e8
0x41a316:	call	0x418360
0x41a31b:	mov	r12d, 0x4bea82
0x41a321:	test	eax, eax
0x41a323:	jne	0x41a3e8
0x41a329:	mov	r12d, 0x4be831
0x41a32f:	test	bl, 0x10
0x41a332:	jne	0x41a3e8
0x41a338:	mov	r12d, 0x4be826
0x41a33e:	test	bl, 1
0x41a341:	jne	0x41a3e8
0x41a347:	and	bl, 2
0x41a34a:	mov	r12d, 0x4be97f
0x41a350:	jne	0x41a3e8
0x41a356:	mov	edx, 0x2f
0x41a35b:	lea	rsi, [rsp + 0x48]
0x41a360:	lea	rdi, [rsp + 0x90]
0x41a368:	mov	r12d, 0x4be80b
0x41a36e:	call	0x418360
0x41a373:	mov	edx, 0x4be815
0x41a378:	test	eax, eax
0x41a37a:	cmovne	r12, rdx
0x41a37e:	jmp	0x41a3e8
0x41a380:	mov	r12d, 0x4be922
0x41a386:	jmp	0x41a3b6
0x41a388:	mov	r12d, 0x4be95e
0x41a38e:	jmp	0x41a3b6
0x41a390:	mov	r12d, 0x4be965
0x41a396:	jmp	0x41a3b6
0x41a398:	mov	r12d, 0x4be949
0x41a39e:	jmp	0x41a3b6
0x41a3a0:	mov	r12d, 0x4be942
0x41a3a6:	jmp	0x41a3b6
0x41a3a8:	mov	r12d, 0x4be93b
0x41a3ae:	jmp	0x41a3b6
0x41a3b0:	mov	r12d, 0x4be810
0x41a3b6:	cmp	dword ptr [rsp + 0xc], 0
0x41a3bb:	mov	ebp, 0x4c4893
0x41a3c0:	jne	0x41a473
0x41a3c6:	jmp	0x41a3e8
0x41a3c8:	cmp	dword ptr [rsp + 0xc], 0
0x41a3cd:	jne	0x41a4e4
0x41a3d3:	mov	eax, dword ptr [rsp + 0x9c]
0x41a3da:	mov	r12d, 0x4beac8
0x41a3e0:	test	al, 0x80
0x41a3e2:	je	0x41a4bf
0x41a3e8:	xor	ebx, ebx
0x41a3ea:	mov	ebp, 0x4c4893
0x41a3ef:	mov	r13, qword ptr [rbx + 0x4c8330]
0x41a3f6:	test	r13, r13
0x41a3f9:	je	0x41a459
0x41a3fb:	mov	r15d, dword ptr [rbx + 0x4c8328]
0x41a402:	lea	rsi, [rsp + 0x48]
0x41a407:	lea	rdi, [rsp + 0x90]
0x41a40f:	mov	edx, r15d
0x41a412:	call	0x418360
0x41a417:	test	eax, eax
0x41a419:	je	0x41a441
0x41a41b:	cmp	r15d, 0x58
0x41a41f:	jne	0x41a428
0x41a421:	cmp	byte ptr [rsp + 0x2f], 0
0x41a426:	je	0x41a459
0x41a428:	mov	rdi, rbp
0x41a42b:	xor	ecx, ecx
0x41a42d:	mov	rdx, r13
0x41a430:	mov	esi, 0x4c6c55
0x41a435:	xor	eax, eax
0x41a437:	call	0x42d870
0x41a43c:	mov	rbp, rax
0x41a43f:	jmp	0x41a459
0x41a441:	mov	rdi, rbp
0x41a444:	lea	rdx, [r13 + 2]
0x41a448:	xor	ecx, ecx
0x41a44a:	mov	esi, 0x4c6e4c
0x41a44f:	xor	eax, eax
0x41a451:	call	0x42d870
0x41a456:	mov	rbp, rax
0x41a459:	add	rbx, 0x18
0x41a45d:	cmp	rbx, 0x8d0
0x41a464:	jne	0x41a3ef
0x41a466:	jmp	0x41a473
0x41a468:	mov	ebp, 0x4c4893
0x41a46d:	mov	r12d, 0x4cc06e
0x41a473:	push	rax
0x41a474:	mov	ecx, 0x4cd8a3
0x41a479:	mov	r9, rbp
0x41a47c:	mov	r8, r12
0x41a47f:	push	0
0x41a481:	mov	r10, qword ptr [rsp + 0x30]
0x41a486:	mov	esi, 0x4be9eb
0x41a48b:	mov	rdi, r14
0x41a48e:	xor	eax, eax
0x41a490:	mov	rdx, qword ptr [r10]
0x41a493:	call	0x42d870
0x41a498:	pop	rdx
0x41a499:	pop	rcx
0x41a49a:	jmp	0x41a513
0x41a49c:	xor	eax, eax
0x41a49e:	jmp	0x41a513
0x41a4a0:	cmp	dword ptr [rsp + 0xc], 0
0x41a4a5:	jne	0x41a4e4
0x41a4a7:	and	bpl, 0x20
0x41a4ab:	mov	r12d, 0x4beaea
0x41a4b1:	mov	esi, 0x4627a5
0x41a4b6:	cmove	r12, rsi
0x41a4ba:	jmp	0x41a3e8
0x41a4bf:	mov	r12d, 0x4beaaf
0x41a4c5:	test	al, 0x40
0x41a4c7:	jne	0x41a3e8
0x41a4cd:	test	al, 0x20
0x41a4cf:	mov	r12d, 0x4beaa7
0x41a4d5:	mov	r13d, 0x4627a5
0x41a4db:	cmove	r12, r13
0x41a4df:	jmp	0x41a3e8
0x41a4e4:	mov	ebp, 0x4c4893
0x41a4e9:	mov	r12d, 0x4627a5
0x41a4ef:	jmp	0x41a473
0x41a4f1:	cmp	dword ptr [rsp + 0xc], 0
0x41a4f6:	jne	0x41a503
0x41a4f8:	mov	r12d, 0x4be815
0x41a4fe:	jmp	0x41a3e8
0x41a503:	mov	ebp, 0x4c4893
0x41a508:	mov	r12d, 0x4be815
0x41a50e:	jmp	0x41a473
0x41a513:	add	rsp, 0xb8
0x41a51a:	pop	rbx
0x41a51b:	pop	rbp
0x41a51c:	pop	r12
0x41a51e:	pop	r13
0x41a520:	pop	r14
0x41a522:	pop	r15
0x41a524:	ret	
0x41a525:	push	rax
0x41a526:	mov	edx, 0x4c6e53
0x41a52b:	mov	esi, 0x3a
0x41a530:	mov	edi, 0x4c6e5e
0x41a535:	call	0x415bba
0x41a53a:	push	rbp
0x41a53b:	push	rbx
0x41a53c:	push	rdx
0x41a53d:	test	rdi, rdi
0x41a540:	jne	0x41a556
0x41a542:	mov	edx, 0x4c6e79
0x41a547:	mov	esi, 0x392
0x41a54c:	mov	edi, 0x4c438f
0x41a551:	call	0x415bba
0x41a556:	mov	rbx, rsi
0x41a559:	test	rsi, rsi
0x41a55c:	jne	0x41a572
0x41a55e:	mov	edx, 0x4c6e79
0x41a563:	mov	esi, 0x393
0x41a568:	mov	edi, 0x4c438f
0x41a56d:	call	0x415bba
0x41a572:	mov	esi, 0x22
0x41a577:	mov	rbp, rdi
0x41a57a:	call	0x431ef0
0x41a57f:	mov	r8b, byte ptr [rbx]
0x41a582:	test	r8b, r8b
0x41a585:	je	0x41a62a
0x41a58b:	cmp	r8b, 0x22
0x41a58f:	je	0x41a5d2
0x41a591:	jg	0x41a5ae
0x41a593:	cmp	r8b, 9
0x41a597:	je	0x41a5c3
0x41a599:	cmp	r8b, 0xa
0x41a59d:	jne	0x41a5e1
0x41a59f:	mov	esi, 0x4c6c77
0x41a5a4:	mov	rdi, rbp
0x41a5a7:	call	0x430480
0x41a5ac:	jmp	0x41a622
0x41a5ae:	cmp	r8b, 0x5c
0x41a5b2:	jne	0x41a5e1
0x41a5b4:	mov	esi, 0x4c6e8e
0x41a5b9:	mov	rdi, rbp
0x41a5bc:	call	0x430480
0x41a5c1:	jmp	0x41a622
0x41a5c3:	mov	esi, 0x4c6c83
0x41a5c8:	mov	rdi, rbp
0x41a5cb:	call	0x430480
0x41a5d0:	jmp	0x41a622
0x41a5d2:	mov	esi, 0x4c6c74
0x41a5d7:	mov	rdi, rbp
0x41a5da:	call	0x430480
0x41a5df:	jmp	0x41a622
0x41a5e1:	movzx	eax, r8b
0x41a5e5:	movsx	esi, r8b
0x41a5e9:	test	byte ptr [rax + rax + 0x4bc840], 0x10
0x41a5f1:	je	0x41a5fd
0x41a5f3:	mov	rdi, rbp
0x41a5f6:	call	0x431ef0
0x41a5fb:	jmp	0x41a622
0x41a5fd:	mov	ecx, r8d
0x41a600:	mov	edx, r8d
0x41a603:	mov	esi, 0x4c6e91
0x41a608:	and	r8d, 7
0x41a60c:	shr	cl, 3
0x41a60f:	shr	dl, 6
0x41a612:	mov	rdi, rbp
0x41a615:	xor	eax, eax
0x41a617:	and	ecx, 7
0x41a61a:	movzx	edx, dl
0x41a61d:	call	0x43fd30
0x41a622:	inc	rbx
0x41a625:	jmp	0x41a57f
0x41a62a:	pop	rax
0x41a62b:	mov	rdi, rbp
0x41a62e:	pop	rbx
0x41a62f:	mov	esi, 0x22
0x41a634:	pop	rbp
0x41a635:	jmp	0x431ef0
0x41a63a:	endbr64	
0x41a63e:	push	r15
0x41a640:	push	r14
0x41a642:	push	r13
0x41a644:	push	r12
0x41a646:	push	rbp
0x41a647:	push	rbx
0x41a648:	sub	rsp, 0x68
0x41a64c:	test	rdi, rdi
0x41a64f:	jne	0x41a665
0x41a651:	mov	edx, 0x4c6e99
0x41a656:	mov	esi, 0x3c4
0x41a65b:	mov	edi, 0x4c438f
0x41a660:	call	0x415bba
0x41a665:	mov	rbx, rsi
0x41a668:	test	rsi, rsi
0x41a66b:	jne	0x41a681
0x41a66d:	mov	edx, 0x4c6e99
0x41a672:	mov	esi, 0x3c5
0x41a677:	mov	edi, 0x4c438f
0x41a67c:	call	0x415bba
0x41a681:	mov	rax, qword ptr [rdi + 0x10]
0x41a685:	xor	esi, esi
0x41a687:	mov	r13d, edx
0x41a68a:	mov	rbp, rdi
0x41a68d:	mov	qword ptr [rdi + 0x10], 0
0x41a695:	mov	r14d, ecx
0x41a698:	xor	r12d, r12d
0x41a69b:	mov	qword ptr [rsp], rax
0x41a69f:	call	0x4325a0
0x41a6a4:	lea	rdx, [rbx + 0x78]
0x41a6a8:	mov	r11, rbx
0x41a6ab:	mov	ebx, r13d
0x41a6ae:	mov	qword ptr [rsp + 8], rdx
0x41a6b3:	cmp	r12d, dword ptr [r11 + 0x78]
0x41a6b7:	jae	0x41a79b
0x41a6bd:	movsxd	rsi, r12d
0x41a6c0:	cmp	r12d, 1
0x41a6c4:	jg	0x41a6d2
0x41a6c6:	mov	r8, qword ptr [rsp + 8]
0x41a6cb:	lea	rdi, [r8 + rsi*8 + 8]
0x41a6d0:	jmp	0x41a6de
0x41a6d2:	mov	rcx, qword ptr [r11 + 0x98]
0x41a6d9:	lea	rdi, [rcx + rsi*8 - 0x10]
0x41a6de:	mov	r15, qword ptr [rdi]
0x41a6e1:	lea	rdi, [rsp + 0x40]
0x41a6e6:	mov	qword ptr [rsp + 0x18], r11
0x41a6eb:	inc	r12d
0x41a6ee:	mov	esi, dword ptr [r15]
0x41a6f1:	call	0x430be0
0x41a6f6:	mov	esi, 0x4c6eb0
0x41a6fb:	mov	rdi, rbp
0x41a6fe:	call	0x430480
0x41a703:	mov	r13, qword ptr [rsp + 0x40]
0x41a708:	mov	rdi, rbp
0x41a70b:	mov	rsi, r13
0x41a70e:	call	0x41a53a
0x41a713:	mov	esi, dword ptr [r15 + 4]
0x41a717:	lea	rdi, [rsp + 0x20]
0x41a71c:	call	0x430be0
0x41a721:	mov	r10d, dword ptr [rsp + 0x48]
0x41a726:	mov	edx, dword ptr [rsp + 0x4c]
0x41a72a:	mov	edi, ebx
0x41a72c:	mov	rcx, r13
0x41a72f:	mov	esi, r14d
0x41a732:	mov	r8d, r10d
0x41a735:	mov	dword ptr [rsp + 0x14], r10d
0x41a73a:	call	0x411f4d
0x41a73f:	mov	r8d, dword ptr [rsp + 0x28]
0x41a744:	mov	edx, dword ptr [rsp + 0x2c]
0x41a748:	mov	edi, ebx
0x41a74a:	mov	rcx, qword ptr [rsp + 0x20]
0x41a74f:	mov	esi, r14d
0x41a752:	mov	r13d, eax
0x41a755:	mov	dword ptr [rsp + 0x10], r8d
0x41a75a:	call	0x411f4d
0x41a75f:	mov	r8d, dword ptr [rsp + 0x10]
0x41a764:	mov	ecx, r13d
0x41a767:	mov	rdi, rbp
0x41a76a:	mov	edx, dword ptr [rsp + 0x14]
0x41a76e:	mov	r9d, eax
0x41a771:	mov	esi, 0x4c6eb8
0x41a776:	xor	eax, eax
0x41a778:	call	0x43fd30
0x41a77d:	mov	rsi, qword ptr [r15 + 8]
0x41a781:	mov	rdi, rbp
0x41a784:	call	0x41a53a
0x41a789:	mov	rdi, rbp
0x41a78c:	call	0x43f440
0x41a791:	mov	r11, qword ptr [rsp + 0x18]
0x41a796:	jmp	0x41a6b3
0x41a79b:	mov	rsi, qword ptr [rsp]
0x41a79f:	add	rsp, 0x68
0x41a7a3:	mov	rdi, rbp
0x41a7a6:	pop	rbx
0x41a7a7:	pop	rbp
0x41a7a8:	pop	r12
0x41a7aa:	pop	r13
0x41a7ac:	pop	r14
0x41a7ae:	pop	r15
0x41a7b0:	jmp	0x4325a0
0x41a7b5:	push	r12
0x41a7b7:	mov	r12, rdi
0x41a7ba:	sub	rsp, 0x180
0x41a7c1:	mov	qword ptr [rsp + 0xd8], rsi
0x41a7c9:	mov	qword ptr [rsp + 0xe0], rdx
0x41a7d1:	mov	qword ptr [rsp + 0xe8], rcx
0x41a7d9:	mov	qword ptr [rsp + 0xf0], r8
0x41a7e1:	mov	qword ptr [rsp + 0xf8], r9
0x41a7e9:	test	al, al
0x41a7eb:	je	0x41a82d
0x41a7ed:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x41a7f5:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x41a7fd:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x41a805:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x41a80d:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x41a815:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x41a81d:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x41a825:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x41a82d:	mov	rsi, qword ptr [rip + 0xac32c]
0x41a834:	lea	rdi, [rsp + 0x20]
0x41a839:	lea	rdx, [rsp + 0xd0]
0x41a841:	inc	dword ptr [rip + 0xc89a9]
0x41a847:	lea	rax, [rsp + 0x190]
0x41a84f:	mov	qword ptr [rsp + 0x18], rdx
0x41a854:	xor	edx, edx
0x41a856:	mov	qword ptr [rsp + 0x10], rax
0x41a85b:	mov	dword ptr [rsp + 8], 8
0x41a863:	mov	dword ptr [rsp + 0xc], 0x30
0x41a86b:	call	0x43de80
0x41a870:	or	edx, 0xffffffff
0x41a873:	xor	esi, esi
0x41a875:	lea	rdi, [rsp + 0x20]
0x41a87a:	mov	r9d, 3
0x41a880:	lea	r8, [rsp + 8]
0x41a885:	mov	rcx, r12
0x41a888:	call	0x43def0
0x41a88d:	mov	edx, 0x4c6ec8
0x41a892:	mov	esi, 0x713
0x41a897:	mov	edi, 0x4c438f
0x41a89c:	call	0x415bba
0x41a8a1:	endbr64	
0x41a8a5:	push	r15
0x41a8a7:	push	r14
0x41a8a9:	push	r13
0x41a8ab:	push	r12
0x41a8ad:	mov	r12d, edx
0x41a8b0:	push	rbp
0x41a8b1:	mov	ebp, edi
0x41a8b3:	push	rbx
0x41a8b4:	mov	rbx, rcx
0x41a8b7:	sub	rsp, 0x18
0x41a8bb:	cmp	dword ptr [rcx + 0x100], 0
0x41a8c2:	mov	dword ptr [rsp + 4], esi
0x41a8c6:	mov	dword ptr [rsp + 0xc], r8d
0x41a8cb:	jne	0x41a8e5
0x41a8cd:	call	0x415b52
0x41a8d2:	mov	edx, 0x50
0x41a8d7:	cmp	eax, 0x7fffffff
0x41a8dc:	cmove	eax, edx
0x41a8df:	mov	dword ptr [rbx + 0x100], eax
0x41a8e5:	mov	eax, dword ptr [rsp + 4]
0x41a8e9:	mov	r14d, 1
0x41a8ef:	xor	r13d, r13d
0x41a8f2:	mov	r15d, 0x4c4893
0x41a8f8:	and	eax, 0x3fff
0x41a8fd:	mov	dword ptr [rsp + 8], eax
0x41a901:	xor	eax, eax
0x41a903:	mov	ecx, ebp
0x41a905:	and	ecx, r14d
0x41a908:	cmp	ecx, 0x40000
0x41a90e:	je	0x41a95e
0x41a910:	ja	0x41a92c
0x41a912:	cmp	ecx, 0x10000
0x41a918:	je	0x41a976
0x41a91a:	cmp	ecx, 0x20000
0x41a920:	je	0x41a952
0x41a922:	test	ecx, ecx
0x41a924:	je	0x41a9ad
0x41a92a:	jmp	0x41a982
0x41a92c:	cmp	ecx, 0x100000
0x41a932:	je	0x41a946
0x41a934:	cmp	ecx, 0x200000
0x41a93a:	je	0x41a96a
0x41a93c:	cmp	ecx, 0x80000
0x41a942:	je	0x41a9ad
0x41a944:	jmp	0x41a982
0x41a946:	mov	edi, 0x4c76c0
0x41a94b:	call	0x403a20
0x41a950:	jmp	0x41a9ad
0x41a952:	mov	edi, 0x4c76f0
0x41a957:	call	0x403a20
0x41a95c:	jmp	0x41a9ad
0x41a95e:	mov	edi, 0x4c7728
0x41a963:	call	0x403a20
0x41a968:	jmp	0x41a9ad
0x41a96a:	mov	edi, 0x4c7758
0x41a96f:	call	0x403a20
0x41a974:	jmp	0x41a9ad
0x41a976:	mov	edi, 0x4c7788
0x41a97b:	call	0x403a20
0x41a980:	jmp	0x41a9ad
0x41a982:	cmp	r13, 0xd
0x41a986:	ja	0x41a9ad
0x41a988:	cmp	dword ptr [rsp + 8], 0
0x41a98d:	je	0x41a99b
0x41a98f:	mov	edi, 0x4c77b8
0x41a994:	call	0x403a20
0x41a999:	jmp	0x41a9a5
0x41a99b:	mov	edi, 0x4c77f8
0x41a9a0:	call	0x403a20
0x41a9a5:	mov	r15, qword ptr [r13*8 + 0x4c8220]
0x41a9ad:	inc	r13
0x41a9b0:	add	r14d, r14d
0x41a9b3:	cmp	r13, 0x16
0x41a9b7:	jne	0x41a903
0x41a9bd:	test	rax, rax
0x41a9c0:	jne	0x41aa2a
0x41a9c2:	test	r12d, r12d
0x41a9c5:	jne	0x41aa0b
0x41a9c7:	bt	ebp, 0x18
0x41a9cb:	jae	0x41a9d9
0x41a9cd:	mov	edi, 0x4c7830
0x41a9d2:	call	0x403a20
0x41a9d7:	jmp	0x41aa2a
0x41a9d9:	bt	ebp, 0x17
0x41a9dd:	jae	0x41a9eb
0x41a9df:	mov	edi, 0x4c7860
0x41a9e4:	call	0x403a20
0x41a9e9:	jmp	0x41aa2a
0x41a9eb:	bt	ebp, 0x16
0x41a9ef:	jae	0x41a9fd
0x41a9f1:	mov	edi, 0x4c7890
0x41a9f6:	call	0x403a20
0x41a9fb:	jmp	0x41aa2a
0x41a9fd:	mov	esi, ebp
0x41a9ff:	mov	edi, 0x4c78c0
0x41aa04:	xor	eax, eax
0x41aa06:	call	0x41a7b5
0x41aa0b:	test	r12d, 0x3fff
0x41aa12:	je	0x41aa20
0x41aa14:	mov	edi, 0x4c7908
0x41aa19:	call	0x403a20
0x41aa1e:	jmp	0x41aa2a
0x41aa20:	mov	edi, 0x4c7758
0x41aa25:	call	0x403a20
0x41aa2a:	mov	rcx, r15
0x41aa2d:	mov	rdx, rax
0x41aa30:	mov	esi, 0x4c6ed7
0x41aa35:	mov	edi, 1
0x41aa3a:	xor	eax, eax
0x41aa3c:	call	0x403d70
0x41aa41:	mov	ecx, dword ptr [rbx + 0x100]
0x41aa47:	mov	r8, rbx
0x41aa4a:	mov	edi, ebp
0x41aa4c:	mov	r9d, dword ptr [rsp + 0xc]
0x41aa51:	mov	esi, dword ptr [rsp + 4]
0x41aa55:	add	rsp, 0x18
0x41aa59:	mov	edx, r12d
0x41aa5c:	pop	rbx
0x41aa5d:	pop	rbp
0x41aa5e:	pop	r12
0x41aa60:	pop	r13
0x41aa62:	pop	r14
0x41aa64:	pop	r15
0x41aa66:	jmp	0x413fce
0x41aa6b:	nop	
0x41aa6c:	push	r15
0x41aa6e:	push	r14
0x41aa70:	push	r13
0x41aa72:	push	r12
0x41aa74:	push	rbp
0x41aa75:	push	rbx
0x41aa76:	sub	rsp, 0x48
0x41aa7a:	mov	qword ptr [rsp], rdx
0x41aa7e:	test	rsi, rsi
0x41aa81:	jne	0x41aa97
0x41aa83:	mov	edx, 0x462d75
0x41aa88:	mov	esi, 0x58
0x41aa8d:	mov	edi, 0x4c6ede
0x41aa92:	call	0x415bba
0x41aa97:	cmp	qword ptr [rsp], 0
0x41aa9c:	jne	0x41aab2
0x41aa9e:	mov	edx, 0x462d75
0x41aaa3:	mov	esi, 0x59
0x41aaa8:	mov	edi, 0x4c6ede
0x41aaad:	call	0x415bba
0x41aab2:	mov	rbx, rdi
0x41aab5:	mov	rdi, rsi
0x41aab8:	mov	r15, rsi
0x41aabb:	call	0x430ba0
0x41aac0:	inc	dword ptr [rbx + 0x28]
0x41aac3:	mov	r14d, dword ptr [rbx + 0x30]
0x41aac7:	mov	edi, eax
0x41aac9:	mov	r12d, eax
0x41aacc:	mov	esi, r14d
0x41aacf:	call	0x413730
0x41aad4:	mov	ebp, eax
0x41aad6:	mov	rax, qword ptr [rbx + 8]
0x41aada:	mov	r13, rbp
0x41aadd:	shl	rbp, 4
0x41aae1:	add	rbp, rax
0x41aae4:	mov	qword ptr [rsp + 0x10], rax
0x41aae9:	mov	rdi, qword ptr [rbp]
0x41aaed:	test	rdi, rdi
0x41aaf0:	je	0x41ab59
0x41aaf2:	cmp	rdi, 1
0x41aaf6:	je	0x41ab04
0x41aaf8:	mov	rsi, r15
0x41aafb:	call	0x403be0
0x41ab00:	test	eax, eax
0x41ab02:	je	0x41ab59
0x41ab04:	mov	rdx, qword ptr [rbx + 0x10]
0x41ab08:	mov	edi, r12d
0x41ab0b:	mov	esi, r14d
0x41ab0e:	mov	qword ptr [rsp + 8], rdx
0x41ab13:	call	0x413763
0x41ab18:	mov	r12d, eax
0x41ab1b:	lea	ecx, [r13 + r12]
0x41ab20:	inc	dword ptr [rbx + 0x2c]
0x41ab23:	mov	r13, rcx
0x41ab26:	cmp	qword ptr [rsp + 8], rcx
0x41ab2b:	ja	0x41ab32
0x41ab2d:	sub	r13d, dword ptr [rsp + 8]
0x41ab32:	mov	ebp, r13d
0x41ab35:	shl	rbp, 4
0x41ab39:	add	rbp, qword ptr [rsp + 0x10]
0x41ab3e:	mov	rdi, qword ptr [rbp]
0x41ab42:	test	rdi, rdi
0x41ab45:	je	0x41ab59
0x41ab47:	cmp	rdi, 1
0x41ab4b:	je	0x41ab1b
0x41ab4d:	mov	rsi, r15
0x41ab50:	call	0x403be0
0x41ab55:	test	eax, eax
0x41ab57:	jne	0x41ab1b
0x41ab59:	cmp	qword ptr [rbp], 0
0x41ab5e:	je	0x41ab7c
0x41ab60:	mov	rdi, qword ptr [rbp + 8]
0x41ab64:	test	rdi, rdi
0x41ab67:	je	0x41ab6f
0x41ab69:	mov	rsi, qword ptr [rdi]
0x41ab6c:	call	qword ptr [rsi + 8]
0x41ab6f:	mov	rdi, qword ptr [rsp]
0x41ab73:	mov	qword ptr [rbp + 8], rdi
0x41ab77:	jmp	0x41adb8
0x41ab7c:	mov	rdi, r15
0x41ab7f:	call	0x42db40
0x41ab84:	movq	xmm1, rax
0x41ab89:	mov	rdi, rax
0x41ab8c:	mov	r12, rax
0x41ab8f:	movhps	xmm1, qword ptr [rsp]
0x41ab93:	movaps	xmmword ptr [rsp + 0x20], xmm1
0x41ab98:	call	0x430ba0
0x41ab9d:	mov	r13, qword ptr [rbx + 0x10]
0x41aba1:	mov	r15, qword ptr [rbx + 0x18]
0x41aba5:	mov	dword ptr [rsp + 0x10], eax
0x41aba9:	lea	r8, [r13 + r13*2]
0x41abae:	lea	r9, [r15*4]
0x41abb6:	cmp	r8, r9
0x41abb9:	ja	0x41acca
0x41abbf:	mov	r14, qword ptr [rbx + 8]
0x41abc3:	mov	r10, r13
0x41abc6:	sub	r15, qword ptr [rbx + 0x20]
0x41abca:	shl	r10, 4
0x41abce:	lea	rdi, [r15 + r15]
0x41abd2:	mov	ebp, dword ptr [rbx + 0x30]
0x41abd5:	add	r10, r14
0x41abd8:	mov	qword ptr [rsp + 0x18], r10
0x41abdd:	cmp	r13, rdi
0x41abe0:	jb	0x41abfb
0x41abe2:	lea	r11d, [r15*8]
0x41abea:	mov	eax, 0x20
0x41abef:	cmp	r11, rax
0x41abf2:	cmovb	r11, rax
0x41abf6:	cmp	r13, r11
0x41abf9:	jbe	0x41ac0f
0x41abfb:	call	0x42d5a0
0x41ac00:	mov	edx, eax
0x41ac02:	mov	ebp, eax
0x41ac04:	shl	rdx, 4
0x41ac08:	mov	r13d, dword ptr [rdx + 0x4be180]
0x41ac0f:	movq	xmm2, r15
0x41ac14:	mov	dil, byte ptr [rbx + 0x34]
0x41ac18:	movq	xmm0, r13
0x41ac1d:	mov	rsi, r13
0x41ac20:	punpcklqdq	xmm0, xmm2
0x41ac24:	mov	r15, r14
0x41ac27:	mov	byte ptr [rsp + 8], dil
0x41ac2c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x41ac31:	call	0x42c5c2
0x41ac36:	movaps	xmm3, xmmword ptr [rsp + 0x30]
0x41ac3b:	mov	dword ptr [rbx + 0x30], ebp
0x41ac3e:	mov	qword ptr [rbx + 8], rax
0x41ac42:	mov	r10, rax
0x41ac45:	mov	qword ptr [rbx + 0x20], 0
0x41ac4d:	movups	xmmword ptr [rbx + 0x10], xmm3
0x41ac51:	mov	rdi, qword ptr [r15]
0x41ac54:	cmp	rdi, 1
0x41ac58:	jbe	0x41acb7
0x41ac5a:	mov	qword ptr [rsp + 0x30], r10
0x41ac5f:	call	0x430ba0
0x41ac64:	mov	esi, ebp
0x41ac66:	mov	edi, eax
0x41ac68:	mov	r8d, eax
0x41ac6b:	call	0x413730
0x41ac70:	mov	r10, qword ptr [rsp + 0x30]
0x41ac75:	mov	esi, eax
0x41ac77:	mov	r9, rsi
0x41ac7a:	shl	rsi, 4
0x41ac7e:	add	rsi, r10
0x41ac81:	cmp	qword ptr [rsi], 0
0x41ac85:	je	0x41acb0
0x41ac87:	mov	esi, ebp
0x41ac89:	mov	edi, r8d
0x41ac8c:	call	0x413763
0x41ac91:	lea	ecx, [r9 + rax]
0x41ac95:	mov	r9, rcx
0x41ac98:	cmp	r13, rcx
0x41ac9b:	ja	0x41aca0
0x41ac9d:	sub	r9d, r13d
0x41aca0:	mov	esi, r9d
0x41aca3:	shl	rsi, 4
0x41aca7:	add	rsi, r10
0x41acaa:	cmp	qword ptr [rsi], 0
0x41acae:	jne	0x41ac91
0x41acb0:	movups	xmm4, xmmword ptr [r15]
0x41acb4:	movups	xmmword ptr [rsi], xmm4
0x41acb7:	add	r15, 0x10
0x41acbb:	cmp	qword ptr [rsp + 0x18], r15
0x41acc0:	ja	0x41ac51
0x41acc2:	mov	rdi, r14
0x41acc5:	call	0x403830
0x41acca:	inc	dword ptr [rbx + 0x28]
0x41accd:	mov	ebp, dword ptr [rbx + 0x30]
0x41acd0:	mov	edi, dword ptr [rsp + 0x10]
0x41acd4:	mov	esi, ebp
0x41acd6:	call	0x413730
0x41acdb:	mov	r11, qword ptr [rbx + 8]
0x41acdf:	mov	r15d, eax
0x41ace2:	mov	rax, qword ptr [rbx + 0x10]
0x41ace6:	mov	r14, r15
0x41ace9:	shl	r15, 4
0x41aced:	mov	qword ptr [rsp + 8], r11
0x41acf2:	add	r15, r11
0x41acf5:	mov	qword ptr [rsp + 0x18], rax
0x41acfa:	mov	rdi, qword ptr [r15]
0x41acfd:	test	rdi, rdi
0x41ad00:	je	0x41ad8c
0x41ad06:	cmp	rdi, 1
0x41ad0a:	jne	0x41ad1e
0x41ad0c:	mov	edi, dword ptr [rsp + 0x10]
0x41ad10:	mov	esi, ebp
0x41ad12:	mov	r13, r15
0x41ad15:	call	0x413763
0x41ad1a:	mov	ebp, eax
0x41ad1c:	jmp	0x41ad50
0x41ad1e:	mov	rsi, r12
0x41ad21:	call	0x403be0
0x41ad26:	test	eax, eax
0x41ad28:	je	0x41ad9f
0x41ad2a:	xor	r15d, r15d
0x41ad2d:	jmp	0x41ad0c
0x41ad2f:	mov	r15d, r14d
0x41ad32:	shl	r15, 4
0x41ad36:	add	r15, qword ptr [rsp + 8]
0x41ad3b:	mov	rdi, qword ptr [r15]
0x41ad3e:	test	rdi, rdi
0x41ad41:	je	0x41ad76
0x41ad43:	cmp	rdi, 1
0x41ad47:	jne	0x41ad68
0x41ad49:	test	r13, r13
0x41ad4c:	cmove	r13, r15
0x41ad50:	lea	edx, [r14 + rbp]
0x41ad54:	inc	dword ptr [rbx + 0x2c]
0x41ad57:	mov	r14, rdx
0x41ad5a:	cmp	qword ptr [rsp + 0x18], rdx
0x41ad5f:	ja	0x41ad2f
0x41ad61:	sub	r14d, dword ptr [rsp + 0x18]
0x41ad66:	jmp	0x41ad2f
0x41ad68:	mov	rsi, r12
0x41ad6b:	call	0x403be0
0x41ad70:	test	eax, eax
0x41ad72:	jne	0x41ad50
0x41ad74:	jmp	0x41ad9f
0x41ad76:	test	r13, r13
0x41ad79:	je	0x41ad8c
0x41ad7b:	dec	qword ptr [rbx + 0x20]
0x41ad7f:	mov	r15, r13
0x41ad82:	mov	qword ptr [r13], 0
0x41ad8a:	jmp	0x41ad9f
0x41ad8c:	inc	qword ptr [rbx + 0x18]
0x41ad90:	mov	r15, qword ptr [rsp + 8]
0x41ad95:	mov	ebx, r14d
0x41ad98:	shl	rbx, 4
0x41ad9c:	add	r15, rbx
0x41ad9f:	cmp	qword ptr [r15], 0
0x41ada3:	jne	0x41adb0
0x41ada5:	movaps	xmm5, xmmword ptr [rsp + 0x20]
0x41adaa:	movups	xmmword ptr [r15], xmm5
0x41adae:	jmp	0x41adb8
0x41adb0:	mov	r12, qword ptr [rsp]
0x41adb4:	mov	qword ptr [r15 + 8], r12
0x41adb8:	add	rsp, 0x48
0x41adbc:	pop	rbx
0x41adbd:	pop	rbp
0x41adbe:	pop	r12
0x41adc0:	pop	r13
0x41adc2:	pop	r14
0x41adc4:	pop	r15
0x41adc6:	ret	
0x41adc7:	nop	
0x41adc8:	push	r15
0x41adca:	push	r14
0x41adcc:	push	r13
0x41adce:	push	r12
0x41add0:	push	rbp
0x41add1:	push	rbx
0x41add2:	sub	rsp, 0x18
0x41add6:	mov	qword ptr [rsp], rsi
0x41adda:	test	rsi, rsi
0x41addd:	jne	0x41adf3
0x41addf:	mov	edx, 0x4cc6cc
0x41ade4:	mov	esi, 0x9c
0x41ade9:	mov	edi, 0x4c6ede
0x41adee:	call	0x415bba
0x41adf3:	mov	r14, qword ptr [rdi + 8]
0x41adf7:	mov	rbx, rdi
0x41adfa:	test	r14, r14
0x41adfd:	je	0x41ae2a
0x41adff:	mov	eax, dword ptr [r14]
0x41ae02:	mov	ebp, dword ptr [r14 + 4]
0x41ae06:	and	eax, 0x7fffffff
0x41ae0b:	cmp	eax, ebp
0x41ae0d:	jne	0x41ae9c
0x41ae13:	cmp	byte ptr [r14 + 3], 0
0x41ae18:	jns	0x41ae2a
0x41ae1a:	mov	qword ptr [rdi + 8], 0
0x41ae22:	lea	esi, [rbp + 1]
0x41ae25:	mov	r13b, 1
0x41ae28:	jmp	0x41ae34
0x41ae2a:	xor	r13d, r13d
0x41ae2d:	xor	ebp, ebp
0x41ae2f:	mov	esi, 1
0x41ae34:	mov	r15, qword ptr [rbx + 8]
0x41ae38:	xor	edx, edx
0x41ae3a:	mov	rdi, r15
0x41ae3d:	call	0x436e30
0x41ae42:	xor	ecx, ecx
0x41ae44:	mov	edx, eax
0x41ae46:	mov	r12d, eax
0x41ae49:	lea	rsi, [rdx*8 + 8]
0x41ae51:	test	r15, r15
0x41ae54:	je	0x41ae5a
0x41ae56:	mov	ecx, dword ptr [r15 + 4]
0x41ae5a:	mov	rdi, r15
0x41ae5d:	mov	dword ptr [rsp + 0xc], ecx
0x41ae61:	and	r12d, 0x7fffffff
0x41ae68:	call	0x42db80
0x41ae6d:	mov	esi, dword ptr [rsp + 0xc]
0x41ae71:	mov	r8d, ebp
0x41ae74:	xor	edi, edi
0x41ae76:	mov	qword ptr [rbx + 8], rax
0x41ae7a:	mov	dword ptr [rax], r12d
0x41ae7d:	mov	dword ptr [rax + 4], esi
0x41ae80:	test	r13b, r13b
0x41ae83:	je	0x41ae9c
0x41ae85:	cmp	rdi, r8
0x41ae88:	je	0x41ae99
0x41ae8a:	mov	r9, qword ptr [r14 + rdi*8 + 8]
0x41ae8f:	mov	qword ptr [rax + rdi*8 + 8], r9
0x41ae94:	inc	rdi
0x41ae97:	jmp	0x41ae85
0x41ae99:	mov	dword ptr [rax + 4], ebp
0x41ae9c:	mov	r10, qword ptr [rbx + 8]
0x41aea0:	mov	r13, qword ptr [rsp]
0x41aea4:	mov	r11d, dword ptr [r10 + 4]
0x41aea8:	lea	eax, [r11 + 1]
0x41aeac:	mov	dword ptr [r10 + 4], eax
0x41aeb0:	mov	qword ptr [r10 + r11*8 + 8], r13
0x41aeb5:	add	rsp, 0x18
0x41aeb9:	pop	rbx
0x41aeba:	pop	rbp
0x41aebb:	pop	r12
0x41aebd:	pop	r13
0x41aebf:	pop	r14
0x41aec1:	pop	r15
0x41aec3:	ret	
0x41aec4:	push	rbx
0x41aec5:	mov	rbx, rdi
0x41aec8:	mov	qword ptr [rdi], 0x4c8120
0x41aecf:	test	rsi, rsi
0x41aed2:	jne	0x41aee8
0x41aed4:	mov	edx, 0x4cd787
0x41aed9:	mov	esi, 0xbf
0x41aede:	mov	edi, 0x4c6ede
0x41aee3:	call	0x415bba
0x41aee8:	mov	rdi, rsi
0x41aeeb:	call	0x42db40
0x41aef0:	mov	qword ptr [rbx + 8], rax
0x41aef4:	pop	rbx
0x41aef5:	ret	
0x41aef6:	push	r15
0x41aef8:	push	r14
0x41aefa:	push	r13
0x41aefc:	push	r12
0x41aefe:	push	rbp
0x41aeff:	push	rbx
0x41af00:	mov	rbx, rdi
0x41af03:	sub	rsp, 0x58
0x41af07:	lea	r15, [rsp + 0x30]
0x41af0c:	mov	rdi, r15
0x41af0f:	call	0x430be0
0x41af14:	mov	edi, 0x38
0x41af19:	mov	rbp, qword ptr [rsp + 0x30]
0x41af1e:	call	0x440420
0x41af23:	mov	ecx, 0xe
0x41af28:	mov	r12, rax
0x41af2b:	xor	eax, eax
0x41af2d:	mov	rdi, r12
0x41af30:	rep stosd	dword ptr [rdi], eax
0x41af32:	mov	rdi, r12
0x41af35:	call	0x414fbe
0x41af3a:	test	rbp, rbp
0x41af3d:	je	0x41af67
0x41af3f:	mov	edi, 0x10
0x41af44:	call	0x440420
0x41af49:	mov	rsi, rbp
0x41af4c:	mov	r13, rax
0x41af4f:	mov	rdi, rax
0x41af52:	call	0x41aec4
0x41af57:	mov	rdx, r13
0x41af5a:	mov	esi, 0x45b289
0x41af5f:	mov	rdi, r12
0x41af62:	call	0x41aa6c
0x41af67:	mov	edi, 0x10
0x41af6c:	lea	r14, [rsp + 0x10]
0x41af71:	mov	r13d, 0x80000000
0x41af77:	call	0x440420
0x41af7c:	movsxd	rsi, dword ptr [rsp + 0x38]
0x41af81:	mov	rdi, r12
0x41af84:	mov	qword ptr [rax], 0x4c8180
0x41af8b:	mov	rdx, rax
0x41af8e:	mov	qword ptr [rax + 8], rsi
0x41af92:	mov	dword ptr [rsp], esi
0x41af95:	mov	esi, 0x45b97a
0x41af9a:	call	0x41aa6c
0x41af9f:	mov	edx, dword ptr [rbx + 0x118]
0x41afa5:	mov	qword ptr [rsp + 0x10], 0x4c6ef4
0x41afae:	mov	dword ptr [rsp + 0x18], 0
0x41afb6:	mov	dword ptr [rsp + 4], edx
0x41afba:	mov	qword ptr [rsp + 0x20], 0x4c6f03
0x41afc3:	mov	dword ptr [rsp + 0x28], 1
0x41afcb:	mov	r10d, dword ptr [r14 + 8]
0x41afcf:	mov	ecx, dword ptr [rsp]
0x41afd2:	mov	rdx, rbp
0x41afd5:	mov	rdi, rbx
0x41afd8:	mov	esi, dword ptr [rsp + 0x3c]
0x41afdc:	mov	dword ptr [rbx + 0x118], r10d
0x41afe3:	mov	dword ptr [rsp + 0xc], r10d
0x41afe8:	call	0x411f10
0x41afed:	mov	edi, 0x10
0x41aff2:	mov	dword ptr [rsp + 8], eax
0x41aff6:	call	0x440420
0x41affb:	movsxd	r8, dword ptr [rsp + 8]
0x41b000:	mov	rsi, qword ptr [r14]
0x41b003:	mov	rdi, r12
0x41b006:	mov	qword ptr [rax], 0x4c8180
0x41b00d:	mov	rdx, rax
0x41b010:	mov	qword ptr [rax + 8], r8
0x41b014:	call	0x41aa6c
0x41b019:	mov	r9d, dword ptr [rsp + 0xc]
0x41b01e:	cmp	r9d, dword ptr [rsp + 4]
0x41b023:	cmove	r13d, dword ptr [rsp + 8]
0x41b029:	add	r14, 0x10
0x41b02d:	cmp	r14, r15
0x41b030:	jne	0x41afcb
0x41b032:	cmp	r13d, 0x80000000
0x41b039:	jne	0x41b04f
0x41b03b:	mov	edx, 0x4c6f0f
0x41b040:	mov	esi, 0x49
0x41b045:	mov	edi, 0x4c7938
0x41b04a:	call	0x415bba
0x41b04f:	mov	edi, 0x10
0x41b054:	call	0x440420
0x41b059:	movsxd	r11, r13d
0x41b05c:	mov	rdi, r12
0x41b05f:	mov	esi, 0x4c6f08
0x41b064:	mov	qword ptr [rax], 0x4c8180
0x41b06b:	mov	rdx, rax
0x41b06e:	mov	qword ptr [rax + 8], r11
0x41b072:	call	0x41aa6c
0x41b077:	mov	r15d, dword ptr [rsp + 4]
0x41b07c:	mov	rax, r12
0x41b07f:	mov	dword ptr [rbx + 0x118], r15d
0x41b086:	add	rsp, 0x58
0x41b08a:	pop	rbx
0x41b08b:	pop	rbp
0x41b08c:	pop	r12
0x41b08e:	pop	r13
0x41b090:	pop	r14
0x41b092:	pop	r15
0x41b094:	ret	
0x41b095:	endbr64	
0x41b099:	push	r15
0x41b09b:	mov	edi, 0x4c6f2b
0x41b0a0:	push	r14
0x41b0a2:	push	r13
0x41b0a4:	push	r12
0x41b0a6:	push	rbp
0x41b0a7:	push	rbx
0x41b0a8:	push	rcx
0x41b0a9:	call	0x403800
0x41b0ae:	test	rax, rax
0x41b0b1:	je	0x41b1b8
0x41b0b7:	mov	rbp, rax
0x41b0ba:	xor	eax, eax
0x41b0bc:	cmp	byte ptr [rbp], 0
0x41b0c0:	je	0x41b1ba
0x41b0c6:	lea	r13, [rbp + 1]
0x41b0ca:	xor	r14d, r14d
0x41b0cd:	xor	r15d, r15d
0x41b0d0:	xor	ebx, ebx
0x41b0d2:	mov	al, byte ptr [r13 - 1]
0x41b0d6:	lea	rdx, [r13 - 1]
0x41b0da:	test	al, al
0x41b0dc:	je	0x41b0e6
0x41b0de:	cmp	al, 0x3a
0x41b0e0:	jne	0x41b18f
0x41b0e6:	test	rbx, rbx
0x41b0e9:	je	0x41b0f3
0x41b0eb:	sub	rdx, rbx
0x41b0ee:	mov	r14, rdx
0x41b0f1:	jmp	0x41b0f9
0x41b0f3:	sub	rdx, rbp
0x41b0f6:	mov	r15, rdx
0x41b0f9:	mov	r12d, 0x4e2ea0
0x41b0ff:	mov	rdi, qword ptr [r12]
0x41b103:	test	rdi, rdi
0x41b106:	je	0x41b122
0x41b108:	movzx	ecx, byte ptr [r12 + 0x10]
0x41b10e:	cmp	rcx, r15
0x41b111:	jne	0x41b133
0x41b113:	mov	rdx, r15
0x41b116:	mov	rsi, rbp
0x41b119:	call	0x403b70
0x41b11e:	test	eax, eax
0x41b120:	jne	0x41b133
0x41b122:	mov	rdi, qword ptr [r12 + 8]
0x41b127:	test	rbx, rbx
0x41b12a:	je	0x41b17b
0x41b12c:	test	rdi, rdi
0x41b12f:	jne	0x41b139
0x41b131:	jmp	0x41b17b
0x41b133:	add	r12, 0x18
0x41b137:	jmp	0x41b0ff
0x41b139:	cmp	byte ptr [r12 + 0x11], 0
0x41b13f:	je	0x41b146
0x41b141:	call	0x403830
0x41b146:	lea	rdi, [r14 + 7]
0x41b14a:	call	0x42db10
0x41b14f:	mov	rsi, rbx
0x41b152:	mov	rcx, r14
0x41b155:	lea	rbp, [rax + r14 + 2]
0x41b15a:	mov	word ptr [rax], 0x5b1b
0x41b15f:	lea	rdi, [rax + 2]
0x41b163:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41b165:	mov	dword ptr [rbp], 0x4b5b1b6d
0x41b16c:	mov	byte ptr [rbp + 4], 0
0x41b170:	mov	qword ptr [r12 + 8], rax
0x41b175:	mov	byte ptr [r12 + 0x11], 1
0x41b17b:	cmp	byte ptr [r13 - 1], 0
0x41b180:	je	0x41b1b8
0x41b182:	mov	rbp, r13
0x41b185:	xor	ebx, ebx
0x41b187:	inc	r13
0x41b18a:	jmp	0x41b0d2
0x41b18f:	cmp	al, 0x3d
0x41b191:	jne	0x41b1a8
0x41b193:	cmp	rbp, rdx
0x41b196:	je	0x41b1b8
0x41b198:	test	rbx, rbx
0x41b19b:	jne	0x41b1b8
0x41b19d:	sub	rdx, rbp
0x41b1a0:	mov	rbx, r13
0x41b1a3:	mov	r15, rdx
0x41b1a6:	jmp	0x41b187
0x41b1a8:	test	rbx, rbx
0x41b1ab:	je	0x41b187
0x41b1ad:	cmp	al, 0x3b
0x41b1af:	je	0x41b187
0x41b1b1:	sub	eax, 0x30
0x41b1b4:	cmp	al, 9
0x41b1b6:	jbe	0x41b187
0x41b1b8:	mov	al, 1
0x41b1ba:	pop	rdx
0x41b1bb:	pop	rbx
0x41b1bc:	pop	rbp
0x41b1bd:	pop	r12
0x41b1bf:	pop	r13
0x41b1c1:	pop	r14
0x41b1c3:	pop	r15
0x41b1c5:	ret	
0x41b1c6:	endbr64	
0x41b1ca:	push	rbp
0x41b1cb:	mov	edi, 0x45b411
0x41b1d0:	call	0x403800
0x41b1d5:	mov	rbp, rax
0x41b1d8:	test	rax, rax
0x41b1db:	jne	0x41b1ef
0x41b1dd:	mov	edi, 0x45b41a
0x41b1e2:	call	0x403800
0x41b1e7:	mov	rbp, rax
0x41b1ea:	test	rax, rax
0x41b1ed:	je	0x41b226
0x41b1ef:	xor	eax, eax
0x41b1f1:	cmp	byte ptr [rbp], 0
0x41b1f5:	je	0x41b22b
0x41b1f7:	mov	esi, 0x4beab1
0x41b1fc:	mov	rdi, rbp
0x41b1ff:	call	0x403be0
0x41b204:	mov	r8d, eax
0x41b207:	xor	eax, eax
0x41b209:	test	r8d, r8d
0x41b20c:	je	0x41b22b
0x41b20e:	mov	esi, 0x45df55
0x41b213:	mov	rdi, rbp
0x41b216:	call	0x403be0
0x41b21b:	mov	edx, eax
0x41b21d:	mov	eax, 1
0x41b222:	test	edx, edx
0x41b224:	je	0x41b22b
0x41b226:	mov	eax, 2
0x41b22b:	pop	rbp
0x41b22c:	ret	
0x41b22d:	nop	
0x41b22e:	endbr64	
0x41b232:	push	rcx
0x41b233:	test	esi, esi
0x41b235:	jns	0x41b24b
0x41b237:	mov	edx, 0x4c6f36
0x41b23c:	mov	esi, 0x83b
0x41b241:	mov	edi, 0x4c4a40
0x41b246:	call	0x415bba
0x41b24b:	mov	rcx, qword ptr [rdx + 8]
0x41b24f:	movsxd	rax, esi
0x41b252:	lea	rsi, [rax + rcx]
0x41b256:	cmp	rsi, qword ptr [rdi + 0x30]
0x41b25a:	jb	0x41b270
0x41b25c:	mov	edx, 0x4c6f36
0x41b261:	mov	esi, 0x83c
0x41b266:	mov	edi, 0x4c4a40
0x41b26b:	call	0x415bba
0x41b270:	add	rax, qword ptr [rdi + 0x18]
0x41b274:	mov	rsi, qword ptr [rdx]
0x41b277:	mov	rdi, rax
0x41b27a:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41b27c:	pop	rax
0x41b27d:	ret	
0x41b27e:	endbr64	
0x41b282:	test	esi, esi
0x41b284:	je	0x41b328
0x41b28a:	dec	esi
0x41b28c:	push	rbx
0x41b28d:	je	0x41b2a3
0x41b28f:	mov	edx, 0x4c6f40
0x41b294:	mov	esi, 0x132
0x41b299:	mov	edi, 0x4c7938
0x41b29e:	call	0x415bba
0x41b2a3:	cmp	qword ptr [rip + 0xcb215], 0
0x41b2ab:	mov	rbx, rdi
0x41b2ae:	jne	0x41b2d0
0x41b2b0:	mov	edi, 0x10
0x41b2b5:	call	0x440420
0x41b2ba:	mov	qword ptr [rax], 0x4c8150
0x41b2c1:	mov	qword ptr [rax + 8], 0
0x41b2c9:	mov	qword ptr [rip + 0xcb1f0], rax
0x41b2d0:	mov	eax, 0x41386a
0x41b2d5:	mov	rdx, qword ptr [rbx]
0x41b2d8:	mov	qword ptr [rbx + 0x98], 0x413865
0x41b2e3:	movq	xmm0, rax
0x41b2e8:	mov	byte ptr [rbx + 0x7f], 0
0x41b2ec:	movhps	xmm0, qword ptr [rip + 0xad96d]
0x41b2f3:	mov	qword ptr [rbx + 0xa8], 0x41b3cf
0x41b2fe:	mov	qword ptr [rbx + 0x148], 0x41507a
0x41b309:	mov	qword ptr [rbx + 0xd8], 0
0x41b314:	mov	byte ptr [rbx + 0x85], 0
0x41b31b:	movups	xmmword ptr [rbx + 0x138], xmm0
0x41b322:	mov	byte ptr [rdx + 0x43], 0
0x41b326:	pop	rbx
0x41b327:	ret	
0x41b328:	ret	
0x41b329:	nop	
0x41b32a:	endbr64	
0x41b32e:	push	r12
0x41b330:	push	rbp
0x41b331:	xor	ebp, ebp
0x41b333:	push	rbx
0x41b334:	mov	rbx, rdi
0x41b337:	mov	rdi, qword ptr [rdi + 8]
0x41b33b:	call	0x403830
0x41b340:	mov	rdi, qword ptr [rbx + 0x20]
0x41b344:	test	rdi, rdi
0x41b347:	je	0x41b381
0x41b349:	cmp	ebp, dword ptr [rdi + 4]
0x41b34c:	jae	0x41b374
0x41b34e:	mov	eax, ebp
0x41b350:	mov	r12, qword ptr [rdi + rax*8 + 8]
0x41b355:	test	r12, r12
0x41b358:	je	0x41b370
0x41b35a:	mov	rdi, qword ptr [r12]
0x41b35e:	call	0x403830
0x41b363:	mov	esi, 0x10
0x41b368:	mov	rdi, r12
0x41b36b:	call	0x440230
0x41b370:	inc	ebp
0x41b372:	jmp	0x41b340
0x41b374:	cmp	byte ptr [rdi + 3], 0
0x41b378:	jns	0x41b3a2
0x41b37a:	mov	dword ptr [rdi + 4], 0
0x41b381:	mov	rdi, qword ptr [rbx + 0x18]
0x41b385:	test	rdi, rdi
0x41b388:	je	0x41b3a9
0x41b38a:	cmp	byte ptr [rdi + 3], 0
0x41b38e:	jns	0x41b399
0x41b390:	mov	dword ptr [rdi + 4], 0
0x41b397:	jmp	0x41b3a9
0x41b399:	pop	rbx
0x41b39a:	pop	rbp
0x41b39b:	pop	r12
0x41b39d:	jmp	0x403830
0x41b3a2:	call	0x403830
0x41b3a7:	jmp	0x41b381
0x41b3a9:	pop	rbx
0x41b3aa:	pop	rbp
0x41b3ab:	pop	r12
0x41b3ad:	ret	
0x41b3ae:	endbr64	
0x41b3b2:	test	rdi, rdi
0x41b3b5:	je	0x41b3ce
0x41b3b7:	push	rbp
0x41b3b8:	mov	rbp, rdi
0x41b3bb:	call	0x41b32a
0x41b3c0:	mov	rdi, rbp
0x41b3c3:	mov	esi, 0x28
0x41b3c8:	pop	rbp
0x41b3c9:	jmp	0x440230
0x41b3ce:	ret	
0x41b3cf:	endbr64	
0x41b3d3:	push	r15
0x41b3d5:	push	r14
0x41b3d7:	push	r13
0x41b3d9:	mov	r13d, edx
0x41b3dc:	push	r12
0x41b3de:	mov	r12, rdi
0x41b3e1:	mov	edi, 0x38
0x41b3e6:	push	rbp
0x41b3e7:	push	rbx
0x41b3e8:	sub	rsp, 0x48
0x41b3ec:	mov	qword ptr [rsp + 8], rsi
0x41b3f1:	call	0x440420
0x41b3f6:	mov	ecx, 0xe
0x41b3fb:	mov	rbp, rax
0x41b3fe:	xor	eax, eax
0x41b400:	mov	rdi, rbp
0x41b403:	rep stosd	dword ptr [rdi], eax
0x41b405:	mov	rdi, rbp
0x41b408:	call	0x414fbe
0x41b40d:	mov	rdx, qword ptr [rsp + 8]
0x41b412:	movsxd	rbx, dword ptr [rdx + 0x40]
0x41b416:	mov	r14, qword ptr [rbx*8 + 0x4c6a40]
0x41b41e:	mov	rdi, r14
0x41b421:	call	0x4039e0
0x41b426:	cmp	rax, 2
0x41b42a:	ja	0x41b440
0x41b42c:	mov	edx, 0x4c6f5e
0x41b431:	mov	esi, 0xac
0x41b436:	mov	edi, 0x4c7938
0x41b43b:	call	0x415bba
0x41b440:	cmp	byte ptr [r14 + rax - 2], 0x3a
0x41b446:	mov	r15, rax
0x41b449:	je	0x41b45f
0x41b44b:	mov	edx, 0x4c6f5e
0x41b450:	mov	esi, 0xad
0x41b455:	mov	edi, 0x4c7938
0x41b45a:	call	0x415bba
0x41b45f:	cmp	byte ptr [r14 + rax - 1], 0x20
0x41b465:	je	0x41b47b
0x41b467:	mov	edx, 0x4c6f5e
0x41b46c:	mov	esi, 0xae
0x41b471:	mov	edi, 0x4c7938
0x41b476:	call	0x415bba
0x41b47b:	mov	rdi, r14
0x41b47e:	call	0x42db40
0x41b483:	mov	edi, 0x10
0x41b488:	mov	byte ptr [rax + r15 - 2], 0
0x41b48e:	mov	rbx, rax
0x41b491:	call	0x440420
0x41b496:	mov	rsi, rbx
0x41b499:	mov	r14, rax
0x41b49c:	mov	rdi, rax
0x41b49f:	call	0x41aec4
0x41b4a4:	mov	esi, 0x4c6f72
0x41b4a9:	mov	rdx, r14
0x41b4ac:	mov	rdi, rbp
0x41b4af:	call	0x41aa6c
0x41b4b4:	mov	rdi, rbx
0x41b4b7:	call	0x403830
0x41b4bc:	mov	rsi, qword ptr [r12]
0x41b4c0:	mov	r15, qword ptr [rsi + 8]
0x41b4c4:	mov	rbx, qword ptr [r15 + 0xb0]
0x41b4cb:	mov	r8, qword ptr [rbx + 0x18]
0x41b4cf:	cmp	qword ptr [rbx + 0x20], r8
0x41b4d3:	jne	0x41b4e2
0x41b4d5:	mov	esi, 1
0x41b4da:	mov	rdi, rbx
0x41b4dd:	call	0x4316f0
0x41b4e2:	mov	r9, qword ptr [rbx + 0x18]
0x41b4e6:	mov	edi, 0x10
0x41b4eb:	lea	r10, [r9 + 1]
0x41b4ef:	mov	qword ptr [rbx + 0x18], r10
0x41b4f3:	mov	byte ptr [r9], 0
0x41b4f7:	mov	r11, qword ptr [r15 + 0xb0]
0x41b4fe:	mov	r15, qword ptr [r11 + 0x10]
0x41b502:	call	0x440420
0x41b507:	mov	r14, rax
0x41b50a:	mov	rdi, rax
0x41b50d:	mov	rsi, r15
0x41b510:	call	0x41aec4
0x41b515:	mov	rdx, r14
0x41b518:	mov	esi, 0x4c6f77
0x41b51d:	mov	rdi, rbp
0x41b520:	call	0x41aa6c
0x41b525:	mov	rdi, qword ptr [r12]
0x41b529:	call	0x430a90
0x41b52e:	mov	rax, qword ptr [rsp + 8]
0x41b533:	mov	edx, r13d
0x41b536:	mov	rdi, r12
0x41b539:	mov	ecx, dword ptr [rax + 0x40]
0x41b53c:	mov	esi, dword ptr [rax + 0x44]
0x41b53f:	call	qword ptr [r12 + 0xc8]
0x41b547:	mov	r13, rax
0x41b54a:	test	rax, rax
0x41b54d:	je	0x41b57f
0x41b54f:	mov	edi, 0x10
0x41b554:	call	0x440420
0x41b559:	mov	rsi, r13
0x41b55c:	mov	rbx, rax
0x41b55f:	mov	rdi, rax
0x41b562:	call	0x41aec4
0x41b567:	mov	rdi, rbp
0x41b56a:	mov	rdx, rbx
0x41b56d:	mov	esi, 0x45f826
0x41b572:	call	0x41aa6c
0x41b577:	mov	rdi, r13
0x41b57a:	call	0x403830
0x41b57f:	mov	r15, qword ptr [r12 + 0xd0]
0x41b587:	test	r15, r15
0x41b58a:	je	0x41b5d2
0x41b58c:	mov	rcx, qword ptr [rsp + 8]
0x41b591:	mov	rdi, r12
0x41b594:	mov	esi, dword ptr [rcx + 0x44]
0x41b597:	call	r15
0x41b59a:	mov	r13, rax
0x41b59d:	test	rax, rax
0x41b5a0:	je	0x41b5d2
0x41b5a2:	mov	edi, 0x10
0x41b5a7:	call	0x440420
0x41b5ac:	mov	rsi, r13
0x41b5af:	mov	r14, rax
0x41b5b2:	mov	rdi, rax
0x41b5b5:	call	0x41aec4
0x41b5ba:	mov	rdi, rbp
0x41b5bd:	mov	rdx, r14
0x41b5c0:	mov	esi, 0x4c6f7f
0x41b5c5:	call	0x41aa6c
0x41b5ca:	mov	rdi, r13
0x41b5cd:	call	0x403830
0x41b5d2:	cmp	qword ptr [rip + 0xcaef6], 0
0x41b5da:	je	0x41b606
0x41b5dc:	mov	rdi, qword ptr [rip + 0xcaee5]
0x41b5e3:	test	rdi, rdi
0x41b5e6:	jne	0x41b5fc
0x41b5e8:	mov	edx, 0x4c6f5e
0x41b5ed:	mov	esi, 0xd2
0x41b5f2:	mov	edi, 0x4c7938
0x41b5f7:	call	0x415bba
0x41b5fc:	mov	rsi, rbp
0x41b5ff:	call	0x41adc8
0x41b604:	jmp	0x41b679
0x41b606:	mov	rdi, qword ptr [rip + 0xcaeb3]
0x41b60d:	mov	rsi, rbp
0x41b610:	call	0x41adc8
0x41b615:	mov	edi, 0x10
0x41b61a:	mov	qword ptr [rip + 0xcaeaf], rbp
0x41b621:	call	0x440420
0x41b626:	mov	esi, 0x4c6f8a
0x41b62b:	mov	rdi, rbp
0x41b62e:	mov	qword ptr [rax], 0x4c8150
0x41b635:	mov	rdx, rax
0x41b638:	mov	qword ptr [rax + 8], 0
0x41b640:	mov	qword ptr [rip + 0xcae81], rax
0x41b647:	call	0x41aa6c
0x41b64c:	mov	edi, 0x10
0x41b651:	call	0x440420
0x41b656:	movsxd	rdi, dword ptr [r12 + 0x11c]
0x41b65e:	mov	esi, 0x4c6f93
0x41b663:	mov	qword ptr [rax], 0x4c8180
0x41b66a:	mov	rdx, rax
0x41b66d:	mov	qword ptr [rax + 8], rdi
0x41b671:	mov	rdi, rbp
0x41b674:	call	0x41aa6c
0x41b679:	mov	rdx, qword ptr [rsp + 8]
0x41b67e:	mov	edi, 0x10
0x41b683:	mov	rsi, qword ptr [rdx + 0x28]
0x41b687:	mov	qword ptr [rsp], rsi
0x41b68b:	call	0x440420
0x41b690:	mov	rdi, rbp
0x41b693:	mov	esi, 0x45fa72
0x41b698:	mov	qword ptr [rax], 0x4c8150
0x41b69f:	mov	rdx, rax
0x41b6a2:	mov	qword ptr [rax + 8], 0
0x41b6aa:	mov	qword ptr [rsp + 0x10], rax
0x41b6af:	call	0x41aa6c
0x41b6b4:	mov	r9, qword ptr [rsp]
0x41b6b8:	xor	r8d, r8d
0x41b6bb:	mov	qword ptr [rsp + 0x28], rbp
0x41b6c0:	mov	ebp, r8d
0x41b6c3:	add	r9, 8
0x41b6c7:	mov	qword ptr [rsp + 0x20], r9
0x41b6cc:	mov	r10, qword ptr [rsp]
0x41b6d0:	cmp	ebp, dword ptr [r10 + 8]
0x41b6d4:	jae	0x41b880
0x41b6da:	movsxd	r14, ebp
0x41b6dd:	shl	r14, 4
0x41b6e1:	cmp	ebp, 2
0x41b6e4:	jg	0x41b6f2
0x41b6e6:	mov	r9, qword ptr [rsp + 0x20]
0x41b6eb:	lea	rbx, [r9 + r14 + 8]
0x41b6f0:	jmp	0x41b6ff
0x41b6f2:	mov	r15, qword ptr [rsp]
0x41b6f6:	mov	rsi, qword ptr [r15 + 0x48]
0x41b6fa:	lea	rbx, [rsi + r14 - 0x30]
0x41b6ff:	mov	r15d, dword ptr [rbx]
0x41b702:	mov	r13, qword ptr [rip + 0xab457]
0x41b709:	test	r15d, r15d
0x41b70c:	jns	0x41b720
0x41b70e:	and	r15d, 0x7fffffff
0x41b715:	imul	r10, r15, 0x18
0x41b719:	add	r10, qword ptr [r13 + 0x68]
0x41b71d:	mov	r15d, dword ptr [r10]
0x41b720:	mov	eax, dword ptr [r13 + 0x24]
0x41b724:	mov	r11d, 0x80000000
0x41b72a:	test	eax, eax
0x41b72c:	je	0x41b73d
0x41b72e:	dec	eax
0x41b730:	cdqe	
0x41b732:	shl	rax, 5
0x41b736:	add	rax, qword ptr [r13 + 0x18]
0x41b73a:	mov	r11d, dword ptr [rax]
0x41b73d:	cmp	r15d, r11d
0x41b740:	jae	0x41b75f
0x41b742:	cmp	r15d, 1
0x41b746:	jbe	0x41b75f
0x41b748:	mov	esi, r15d
0x41b74b:	mov	rdi, r13
0x41b74e:	call	0x430cf0
0x41b753:	or	edi, 0xffffffff
0x41b756:	movzx	ecx, byte ptr [rax + 7]
0x41b75a:	shl	edi, cl
0x41b75c:	and	r15d, edi
0x41b75f:	test	r15d, r15d
0x41b762:	je	0x41b879
0x41b768:	mov	esi, dword ptr [rbx]
0x41b76a:	mov	rdi, r13
0x41b76d:	call	0x431800
0x41b772:	mov	esi, dword ptr [rbx]
0x41b774:	mov	rdi, r13
0x41b777:	mov	qword ptr [rsp + 0x38], rax
0x41b77c:	mov	dword ptr [rsp + 0x34], eax
0x41b780:	call	0x431800
0x41b785:	mov	edi, 0x38
0x41b78a:	shr	rax, 0x20
0x41b78e:	mov	dword ptr [rsp + 0x18], eax
0x41b792:	mov	r14, rax
0x41b795:	call	0x440420
0x41b79a:	mov	ecx, 0xe
0x41b79f:	mov	r13, rax
0x41b7a2:	xor	eax, eax
0x41b7a4:	mov	rdi, r13
0x41b7a7:	rep stosd	dword ptr [rdi], eax
0x41b7a9:	mov	rdi, r13
0x41b7ac:	call	0x414fbe
0x41b7b1:	mov	esi, r15d
0x41b7b4:	mov	rdi, r12
0x41b7b7:	call	0x41aef6
0x41b7bc:	mov	esi, 0x45b2d9
0x41b7c1:	mov	rdi, r13
0x41b7c4:	mov	rdx, rax
0x41b7c7:	call	0x41aa6c
0x41b7cc:	mov	rsi, qword ptr [rsp + 0x38]
0x41b7d1:	cmp	r15d, esi
0x41b7d4:	je	0x41b7f6
0x41b7d6:	test	esi, esi
0x41b7d8:	je	0x41b7f6
0x41b7da:	mov	esi, dword ptr [rsp + 0x34]
0x41b7de:	mov	rdi, r12
0x41b7e1:	call	0x41aef6
0x41b7e6:	mov	esi, 0x4c6fa1
0x41b7eb:	mov	rdi, r13
0x41b7ee:	mov	rdx, rax
0x41b7f1:	call	0x41aa6c
0x41b7f6:	cmp	r15d, r14d
0x41b7f9:	je	0x41b81c
0x41b7fb:	test	r14, r14
0x41b7fe:	je	0x41b81c
0x41b800:	mov	esi, dword ptr [rsp + 0x18]
0x41b804:	mov	rdi, r12
0x41b807:	call	0x41aef6
0x41b80c:	mov	esi, 0x4c6fa7
0x41b811:	mov	rdi, r13
0x41b814:	mov	rdx, rax
0x41b817:	call	0x41aa6c
0x41b81c:	mov	rdi, qword ptr [rbx + 8]
0x41b820:	test	rdi, rdi
0x41b823:	je	0x41b86c
0x41b825:	mov	rbx, qword ptr [rdi]
0x41b828:	mov	esi, ebp
0x41b82a:	call	qword ptr [rbx + 0x10]
0x41b82d:	mov	r14, rax
0x41b830:	mov	rbx, rdx
0x41b833:	test	rax, rax
0x41b836:	je	0x41b860
0x41b838:	mov	edi, 0x10
0x41b83d:	call	0x440420
0x41b842:	mov	rsi, r14
0x41b845:	mov	r15, rax
0x41b848:	mov	rdi, rax
0x41b84b:	call	0x41aec4
0x41b850:	mov	rdx, r15
0x41b853:	mov	esi, 0x45e754
0x41b858:	mov	rdi, r13
0x41b85b:	call	0x41aa6c
0x41b860:	test	bl, bl
0x41b862:	je	0x41b86c
0x41b864:	mov	rdi, r14
0x41b867:	call	0x403830
0x41b86c:	mov	rdi, qword ptr [rsp + 0x10]
0x41b871:	mov	rsi, r13
0x41b874:	call	0x41adc8
0x41b879:	inc	ebp
0x41b87b:	jmp	0x41b6cc
0x41b880:	cmp	dword ptr [r10 + 0x78], 0
0x41b885:	mov	rbp, qword ptr [rsp + 0x28]
0x41b88a:	jne	0x41b8a3
0x41b88c:	mov	rbx, qword ptr [rsp + 8]
0x41b891:	mov	r15, qword ptr [rbx + 0x30]
0x41b895:	test	r15, r15
0x41b898:	jne	0x41b9ad
0x41b89e:	jmp	0x41ba0b
0x41b8a3:	mov	edi, 0x10
0x41b8a8:	xor	r15d, r15d
0x41b8ab:	call	0x440420
0x41b8b0:	mov	esi, 0x4c6ea9
0x41b8b5:	mov	rdi, rbp
0x41b8b8:	mov	qword ptr [rax], 0x4c8150
0x41b8bf:	mov	rdx, rax
0x41b8c2:	mov	r14, rax
0x41b8c5:	mov	qword ptr [rax + 8], 0
0x41b8cd:	call	0x41aa6c
0x41b8d2:	mov	r11, qword ptr [rsp]
0x41b8d6:	lea	rdx, [r11 + 0x78]
0x41b8da:	mov	rax, qword ptr [rsp]
0x41b8de:	cmp	r15d, dword ptr [rax + 0x78]
0x41b8e2:	jae	0x41b88c
0x41b8e4:	movsxd	rsi, r15d
0x41b8e7:	cmp	r15d, 1
0x41b8eb:	jg	0x41b8f4
0x41b8ed:	lea	r11, [rdx + rsi*8 + 8]
0x41b8f2:	jmp	0x41b904
0x41b8f4:	mov	r9, qword ptr [rsp]
0x41b8f8:	mov	r10, qword ptr [r9 + 0x98]
0x41b8ff:	lea	r11, [r10 + rsi*8 - 0x10]
0x41b904:	mov	edi, 0x38
0x41b909:	mov	rbx, qword ptr [r11]
0x41b90c:	mov	qword ptr [rsp + 0x18], rdx
0x41b911:	inc	r15d
0x41b914:	call	0x440420
0x41b919:	mov	ecx, 0xe
0x41b91e:	mov	r13, rax
0x41b921:	xor	eax, eax
0x41b923:	mov	rdi, r13
0x41b926:	rep stosd	dword ptr [rdi], eax
0x41b928:	mov	rdi, r13
0x41b92b:	call	0x414fbe
0x41b930:	mov	esi, dword ptr [rbx]
0x41b932:	mov	rdi, r12
0x41b935:	call	0x41aef6
0x41b93a:	mov	esi, 0x4c6fa1
0x41b93f:	mov	rdi, r13
0x41b942:	mov	rdx, rax
0x41b945:	call	0x41aa6c
0x41b94a:	mov	esi, dword ptr [rbx + 4]
0x41b94d:	mov	rdi, r12
0x41b950:	call	0x41aef6
0x41b955:	mov	esi, 0x4c6fae
0x41b95a:	mov	rdi, r13
0x41b95d:	mov	rdx, rax
0x41b960:	call	0x41aa6c
0x41b965:	mov	r8, qword ptr [rbx + 8]
0x41b969:	mov	edi, 0x10
0x41b96e:	mov	qword ptr [rsp + 0x10], r8
0x41b973:	call	0x440420
0x41b978:	mov	rsi, qword ptr [rsp + 0x10]
0x41b97d:	mov	rbx, rax
0x41b980:	mov	rdi, rax
0x41b983:	call	0x41aec4
0x41b988:	mov	rdx, rbx
0x41b98b:	mov	esi, 0x4cd787
0x41b990:	mov	rdi, r13
0x41b993:	call	0x41aa6c
0x41b998:	mov	rsi, r13
0x41b99b:	mov	rdi, r14
0x41b99e:	call	0x41adc8
0x41b9a3:	mov	rdx, qword ptr [rsp + 0x18]
0x41b9a8:	jmp	0x41b8da
0x41b9ad:	mov	edi, 0x38
0x41b9b2:	call	0x440420
0x41b9b7:	mov	ecx, 0xe
0x41b9bc:	mov	r13, rax
0x41b9bf:	xor	eax, eax
0x41b9c1:	mov	rdi, r13
0x41b9c4:	rep stosd	dword ptr [rdi], eax
0x41b9c6:	mov	rdi, r13
0x41b9c9:	call	0x414fbe
0x41b9ce:	movsxd	r14, dword ptr [r15]
0x41b9d1:	test	r14d, r14d
0x41b9d4:	je	0x41b9fb
0x41b9d6:	mov	edi, 0x10
0x41b9db:	call	0x440420
0x41b9e0:	mov	esi, 0x45f7d8
0x41b9e5:	mov	rdi, r13
0x41b9e8:	mov	qword ptr [rax], 0x4c8180
0x41b9ef:	mov	rdx, rax
0x41b9f2:	mov	qword ptr [rax + 8], r14
0x41b9f6:	call	0x41aa6c
0x41b9fb:	mov	rdx, r13
0x41b9fe:	mov	esi, 0x4c6fb3
0x41ba03:	mov	rdi, rbp
0x41ba06:	call	0x41aa6c
0x41ba0b:	mov	rdx, qword ptr [rsp]
0x41ba0f:	mov	rsi, qword ptr [rdx + 0xa8]
0x41ba16:	test	rsi, rsi
0x41ba19:	je	0x41ba4b
0x41ba1b:	mov	rbx, qword ptr [r12 + 0xe0]
0x41ba23:	test	rbx, rbx
0x41ba26:	je	0x41ba4b
0x41ba28:	mov	rdi, r12
0x41ba2b:	call	rbx
0x41ba2d:	add	rsp, 0x48
0x41ba31:	mov	rdi, rbp
0x41ba34:	mov	esi, 0x4c4697
0x41ba39:	pop	rbx
0x41ba3a:	mov	rdx, rax
0x41ba3d:	pop	rbp
0x41ba3e:	pop	r12
0x41ba40:	pop	r13
0x41ba42:	pop	r14
0x41ba44:	pop	r15
0x41ba46:	jmp	0x41aa6c
0x41ba4b:	add	rsp, 0x48
0x41ba4f:	pop	rbx
0x41ba50:	pop	rbp
0x41ba51:	pop	r12
0x41ba53:	pop	r13
0x41ba55:	pop	r14
0x41ba57:	pop	r15
0x41ba59:	ret	
0x41ba5a:	endbr64	
0x41ba5e:	push	rbx
0x41ba5f:	xor	edx, edx
0x41ba61:	mov	rbx, rdi
0x41ba64:	sub	rsp, 0xb0
0x41ba6b:	mov	rsi, qword ptr [rip + 0xab0ee]
0x41ba72:	mov	rdi, rsp
0x41ba75:	call	0x43de80
0x41ba7a:	mov	rdi, rsp
0x41ba7d:	mov	esi, 0x4c4691
0x41ba82:	xor	eax, eax
0x41ba84:	mov	qword ptr [rsp + 0xa8], rbx
0x41ba8c:	call	0x412ea4
0x41ba91:	mov	rdi, rsp
0x41ba94:	call	0x430ad0
0x41ba99:	add	rsp, 0xb0
0x41baa0:	pop	rbx
0x41baa1:	ret	
0x41baa2:	endbr64	
0x41baa6:	mov	r9, rdi
0x41baa9:	sub	rsp, 0x28
0x41baad:	movq	xmm0, rdx
0x41bab2:	mov	rdi, r8
0x41bab5:	mov	rax, qword ptr [r9 + 0x28]
0x41bab9:	movq	xmm1, rcx
0x41babe:	punpcklqdq	xmm0, xmm1
0x41bac2:	test	rax, rax
0x41bac5:	je	0x41baf8
0x41bac7:	cmp	rax, 0x41bb09
0x41bacd:	je	0x41baf8
0x41bacf:	mov	qword ptr [rsp + 0x10], r8
0x41bad4:	mov	ecx, 0x41bb34
0x41bad9:	mov	r8, rsp
0x41badc:	mov	rdi, r9
0x41badf:	mov	dword ptr [rsp + 0x18], 0
0x41bae7:	mov	edx, 0x41bb1a
0x41baec:	movaps	xmmword ptr [rsp], xmm0
0x41baf0:	call	rax
0x41baf2:	mov	eax, dword ptr [rsp + 0x18]
0x41baf6:	jmp	0x41bb04
0x41baf8:	or	edx, 0xffffffff
0x41bafb:	mov	esi, 0x4c8c68
0x41bb00:	call	rcx
0x41bb02:	xor	eax, eax
0x41bb04:	add	rsp, 0x28
0x41bb08:	ret	
0x41bb09:	endbr64	
0x41bb0d:	mov	rdi, r8
0x41bb10:	or	edx, 0xffffffff
0x41bb13:	mov	esi, 0x4c8c88
0x41bb18:	jmp	rcx
0x41bb1a:	endbr64	
0x41bb1e:	push	rbx
0x41bb1f:	mov	rbx, rdi
0x41bb22:	mov	r8, rdx
0x41bb25:	mov	rdi, qword ptr [rdi + 0x10]
0x41bb29:	xor	ecx, ecx
0x41bb2b:	xor	edx, edx
0x41bb2d:	call	qword ptr [rbx]
0x41bb2f:	mov	dword ptr [rbx + 0x18], eax
0x41bb32:	pop	rbx
0x41bb33:	ret	
0x41bb34:	endbr64	
0x41bb38:	mov	r8, qword ptr [rdi + 0x10]
0x41bb3c:	mov	rax, qword ptr [rdi + 8]
0x41bb40:	mov	rdi, r8
0x41bb43:	jmp	rax
0x41bb45:	endbr64	
0x41bb49:	mov	rdx, qword ptr [rsi + 8]
0x41bb4d:	or	eax, 0xffffffff
0x41bb50:	cmp	qword ptr [rdi + 8], rdx
0x41bb54:	jb	0x41bb5c
0x41bb56:	seta	al
0x41bb59:	movzx	eax, al
0x41bb5c:	ret	
0x41bb5d:	endbr64	
0x41bb61:	mov	rdx, qword ptr [rsi]
0x41bb64:	or	eax, 0xffffffff
0x41bb67:	cmp	qword ptr [rdi], rdx
0x41bb6a:	jb	0x41bb9c
0x41bb6c:	mov	eax, 1
0x41bb71:	ja	0x41bb9c
0x41bb73:	mov	rcx, qword ptr [rsi + 8]
0x41bb77:	cmp	qword ptr [rdi + 8], rcx
0x41bb7b:	jb	0x41bb9c
0x41bb7d:	mov	eax, 0xffffffff
0x41bb82:	ja	0x41bb9c
0x41bb84:	mov	rsi, qword ptr [rsi + 0x10]
0x41bb88:	mov	rdi, qword ptr [rdi + 0x10]
0x41bb8c:	mov	r8, qword ptr [rsi + 0x38]
0x41bb90:	cmp	qword ptr [rdi + 0x38], r8
0x41bb94:	jl	0x41bb9c
0x41bb96:	setg	al
0x41bb99:	movzx	eax, al
0x41bb9c:	ret	
0x41bb9d:	endbr64	
0x41bba1:	mov	rdx, qword ptr [rsi]
0x41bba4:	or	eax, 0xffffffff
0x41bba7:	cmp	qword ptr [rdi], rdx
0x41bbaa:	jb	0x41bbb2
0x41bbac:	seta	al
0x41bbaf:	movzx	eax, al
0x41bbb2:	ret	
0x41bbb3:	xor	ecx, ecx
0x41bbb5:	cmp	rsi, rcx
0x41bbb8:	jbe	0x41bbdc
0x41bbba:	lea	rax, [rsi + rcx]
0x41bbbe:	shr	rax, 1
0x41bbc1:	mov	r8, qword ptr [rdi + rax*8]
0x41bbc5:	cmp	qword ptr [r8 + 0x18], rdx
0x41bbc9:	ja	0x41bbd7
0x41bbcb:	cmp	qword ptr [r8 + 0x20], rdx
0x41bbcf:	ja	0x41bbdf
0x41bbd1:	lea	rcx, [rax + 1]
0x41bbd5:	jmp	0x41bbb5
0x41bbd7:	mov	rsi, rax
0x41bbda:	jmp	0x41bbb5
0x41bbdc:	xor	r8d, r8d
0x41bbdf:	mov	rax, r8
0x41bbe2:	ret	
0x41bbe3:	endbr64	
0x41bbe7:	mov	rdx, qword ptr [rsi]
0x41bbea:	or	eax, 0xffffffff
0x41bbed:	cmp	qword ptr [rdi], rdx
0x41bbf0:	jb	0x41bc0a
0x41bbf2:	mov	eax, 1
0x41bbf7:	ja	0x41bc0a
0x41bbf9:	mov	ecx, dword ptr [rsi + 0x14]
0x41bbfc:	or	eax, 0xffffffff
0x41bbff:	cmp	dword ptr [rdi + 0x14], ecx
0x41bc02:	jl	0x41bc0a
0x41bc04:	setg	al
0x41bc07:	movzx	eax, al
0x41bc0a:	ret	
0x41bc0b:	mov	rax, rdi
0x41bc0e:	mov	r10, rdx
0x41bc11:	lea	rdx, [rsi - 1]
0x41bc15:	mov	rdi, rcx
0x41bc18:	mov	r9, qword ptr [rax]
0x41bc1b:	mov	rcx, qword ptr [rax + 8]
0x41bc1f:	cmp	rdx, r9
0x41bc22:	jae	0x41bc35
0x41bc24:	mov	r8, rsi
0x41bc27:	shl	r8, 5
0x41bc2b:	lea	rax, [rcx + r8 - 0x20]
0x41bc30:	cmp	qword ptr [rax], rsi
0x41bc33:	je	0x41bc6f
0x41bc35:	xor	r11d, r11d
0x41bc38:	cmp	r11, r9
0x41bc3b:	jae	0x41bc60
0x41bc3d:	lea	rdx, [r11 + r9]
0x41bc41:	shr	rdx, 1
0x41bc44:	mov	rax, rdx
0x41bc47:	shl	rax, 5
0x41bc4b:	add	rax, rcx
0x41bc4e:	cmp	rsi, qword ptr [rax]
0x41bc51:	jb	0x41bc5b
0x41bc53:	jbe	0x41bc6f
0x41bc55:	lea	r11, [rdx + 1]
0x41bc59:	jmp	0x41bc38
0x41bc5b:	mov	r9, rdx
0x41bc5e:	jmp	0x41bc38
0x41bc60:	xor	edx, edx
0x41bc62:	mov	esi, 0x4c909b
0x41bc67:	push	rax
0x41bc68:	call	r10
0x41bc6b:	xor	eax, eax
0x41bc6d:	pop	rdx
0x41bc6e:	ret	
0x41bc6f:	ret	
0x41bc70:	push	r15
0x41bc72:	push	r14
0x41bc74:	push	r13
0x41bc76:	mov	r13, rcx
0x41bc79:	push	r12
0x41bc7b:	push	rbp
0x41bc7c:	push	rbx
0x41bc7d:	push	r10
0x41bc7f:	mov	r10, qword ptr [rsi + 0x20]
0x41bc83:	cmp	rdi, -1
0x41bc87:	je	0x41bcef
0x41bc89:	test	r10, r10
0x41bc8c:	je	0x41bcef
0x41bc8e:	mov	rbx, r8
0x41bc91:	mov	rbp, rdi
0x41bc94:	mov	r8, qword ptr [rsi + 0x18]
0x41bc98:	mov	r12, rdx
0x41bc9b:	mov	r14, r9
0x41bc9e:	xor	esi, esi
0x41bca0:	cmp	r10, rsi
0x41bca3:	jbe	0x41bcef
0x41bca5:	lea	rdx, [r10 + rsi]
0x41bca9:	shr	rdx, 1
0x41bcac:	imul	rax, rdx, 0x18
0x41bcb0:	add	rax, r8
0x41bcb3:	cmp	qword ptr [rax], rbp
0x41bcb6:	ja	0x41bcc4
0x41bcb8:	cmp	qword ptr [rax + 0x18], rbp
0x41bcbc:	jae	0x41bcc9
0x41bcbe:	lea	rsi, [rdx + 1]
0x41bcc2:	jmp	0x41bca0
0x41bcc4:	mov	r10, rdx
0x41bcc7:	jmp	0x41bca0
0x41bcc9:	cmp	qword ptr [rax + 0x18], rbp
0x41bccd:	jne	0x41bce7
0x41bccf:	add	rax, 0x18
0x41bcd3:	jmp	0x41bcc9
0x41bcd5:	cmp	r8, rax
0x41bcd8:	je	0x41bcef
0x41bcda:	mov	rcx, qword ptr [rax]
0x41bcdd:	cmp	qword ptr [rax - 0x18], rcx
0x41bce1:	jb	0x41bcef
0x41bce3:	sub	rax, 0x18
0x41bce7:	cmp	qword ptr [rax + 8], rbp
0x41bceb:	jbe	0x41bcd5
0x41bced:	jmp	0x41bcf3
0x41bcef:	xor	eax, eax
0x41bcf1:	jmp	0x41bd36
0x41bcf3:	mov	r15, qword ptr [rax + 0x10]
0x41bcf7:	mov	r9, r14
0x41bcfa:	mov	r8, rbx
0x41bcfd:	mov	rcx, r13
0x41bd00:	mov	rdx, r12
0x41bd03:	mov	rdi, rbp
0x41bd06:	mov	rsi, r15
0x41bd09:	call	0x41bc70
0x41bd0e:	test	eax, eax
0x41bd10:	jne	0x41bd36
0x41bd12:	mov	r8, qword ptr [r15]
0x41bd15:	mov	ecx, dword ptr [r14]
0x41bd18:	mov	rsi, rbp
0x41bd1b:	mov	rdi, r13
0x41bd1e:	mov	rdx, qword ptr [rbx]
0x41bd21:	call	r12
0x41bd24:	test	eax, eax
0x41bd26:	jne	0x41bd36
0x41bd28:	mov	rdi, qword ptr [r15 + 8]
0x41bd2c:	mov	qword ptr [rbx], rdi
0x41bd2f:	mov	ebx, dword ptr [r15 + 0x10]
0x41bd33:	mov	dword ptr [r14], ebx
0x41bd36:	pop	rdx
0x41bd37:	pop	rbx
0x41bd38:	pop	rbp
0x41bd39:	pop	r12
0x41bd3b:	pop	r13
0x41bd3d:	pop	r14
0x41bd3f:	pop	r15
0x41bd41:	ret	
0x41bd42:	push	r15
0x41bd44:	mov	r15, rdx
0x41bd47:	push	r14
0x41bd49:	mov	r14, rcx
0x41bd4c:	push	r13
0x41bd4e:	push	r12
0x41bd50:	push	rbp
0x41bd51:	mov	rbp, rdi
0x41bd54:	push	rbx
0x41bd55:	mov	rbx, rsi
0x41bd58:	sub	rsp, 0x28
0x41bd5c:	cmp	rbx, 1
0x41bd60:	jbe	0x41be88
0x41bd66:	mov	rax, rbx
0x41bd69:	xor	r12d, r12d
0x41bd6c:	shr	rax, 1
0x41bd6f:	imul	rax, r15
0x41bd73:	add	rax, rbp
0x41bd76:	mov	dl, byte ptr [rbp + r12]
0x41bd7b:	mov	cl, byte ptr [rax + r12]
0x41bd7f:	mov	r11, r12
0x41bd82:	mov	byte ptr [rbp + r12], cl
0x41bd87:	mov	byte ptr [rax + r12], dl
0x41bd8b:	inc	r12
0x41bd8e:	cmp	r15, r12
0x41bd91:	jne	0x41bd76
0x41bd93:	lea	r10, [rbp + r15]
0x41bd98:	xor	r13d, r13d
0x41bd9b:	mov	r8d, 1
0x41bda1:	mov	qword ptr [rsp + 0x18], r11
0x41bda6:	mov	rsi, r10
0x41bda9:	mov	rdi, rbp
0x41bdac:	mov	qword ptr [rsp + 0x10], r8
0x41bdb1:	mov	qword ptr [rsp + 8], r10
0x41bdb6:	call	r14
0x41bdb9:	mov	r10, qword ptr [rsp + 8]
0x41bdbe:	mov	r8, qword ptr [rsp + 0x10]
0x41bdc3:	test	eax, eax
0x41bdc5:	mov	r11, qword ptr [rsp + 0x18]
0x41bdca:	jle	0x41bdfb
0x41bdcc:	inc	r13
0x41bdcf:	cmp	r13, r8
0x41bdd2:	je	0x41bdfb
0x41bdd4:	mov	rsi, r12
0x41bdd7:	xor	eax, eax
0x41bdd9:	imul	rsi, r13
0x41bddd:	add	rsi, rbp
0x41bde0:	mov	dil, byte ptr [rsi + rax]
0x41bde4:	mov	r9b, byte ptr [r10 + rax]
0x41bde8:	mov	rdx, rax
0x41bdeb:	mov	byte ptr [rsi + rax], r9b
0x41bdef:	mov	byte ptr [r10 + rax], dil
0x41bdf3:	inc	rax
0x41bdf6:	cmp	r11, rdx
0x41bdf9:	jne	0x41bde0
0x41bdfb:	inc	r8
0x41bdfe:	add	r10, r12
0x41be01:	cmp	rbx, r8
0x41be04:	jne	0x41bda1
0x41be06:	test	r13, r13
0x41be09:	jne	0x41be38
0x41be0b:	mov	rdi, rbp
0x41be0e:	mov	rsi, r13
0x41be11:	mov	rcx, r14
0x41be14:	mov	rdx, r12
0x41be17:	call	0x41bd42
0x41be1c:	lea	rdi, [r13 + 1]
0x41be20:	dec	rbx
0x41be23:	imul	rdi, r12
0x41be27:	sub	rbx, r13
0x41be2a:	mov	r13, rbx
0x41be2d:	add	rbp, rdi
0x41be30:	mov	rbx, r13
0x41be33:	jmp	0x41bd5c
0x41be38:	mov	rdi, r13
0x41be3b:	xor	r10d, r10d
0x41be3e:	imul	rdi, r12
0x41be42:	lea	rcx, [rbp + rdi]
0x41be47:	mov	sil, byte ptr [rbp + r10]
0x41be4c:	mov	r8b, byte ptr [rcx + r10]
0x41be50:	mov	rax, r10
0x41be53:	mov	byte ptr [rbp + r10], r8b
0x41be58:	mov	byte ptr [rcx + r10], sil
0x41be5c:	inc	r10
0x41be5f:	cmp	r11, rax
0x41be62:	jne	0x41be47
0x41be64:	lea	r11, [r13 + r13]
0x41be69:	cmp	r11, rbx
0x41be6c:	jb	0x41be0b
0x41be6e:	lea	rsi, [rbx - 1]
0x41be72:	add	rdi, r12
0x41be75:	mov	rcx, r14
0x41be78:	mov	rdx, r12
0x41be7b:	sub	rsi, r13
0x41be7e:	add	rdi, rbp
0x41be81:	call	0x41bd42
0x41be86:	jmp	0x41be30
0x41be88:	add	rsp, 0x28
0x41be8c:	pop	rbx
0x41be8d:	pop	rbp
0x41be8e:	pop	r12
0x41be90:	pop	r13
0x41be92:	pop	r14
0x41be94:	pop	r15
0x41be96:	ret	
0x41be97:	push	r12
0x41be99:	mov	r9, rsi
0x41be9c:	mov	r12d, edx
0x41be9f:	mov	r8d, 0x4c90b5
0x41bea5:	push	rbx
0x41bea6:	mov	ecx, 0xc8
0x41beab:	mov	rbx, rdi
0x41beae:	mov	edx, 1
0x41beb3:	mov	esi, 0xc8
0x41beb8:	sub	rsp, 0xd8
0x41bebf:	mov	rax, qword ptr [rdi + 0x10]
0x41bec3:	sub	rax, qword ptr [rdi + 8]
0x41bec7:	push	rax
0x41bec8:	xor	eax, eax
0x41beca:	push	qword ptr [rdi]
0x41becc:	lea	rdi, [rsp + 0x18]
0x41bed1:	call	0x403820
0x41bed6:	mov	rdi, qword ptr [rbx + 0x30]
0x41beda:	mov	edx, r12d
0x41bedd:	lea	rsi, [rsp + 0x18]
0x41bee2:	call	qword ptr [rbx + 0x28]
0x41bee5:	add	rsp, 0xe8
0x41beec:	pop	rbx
0x41beed:	pop	r12
0x41beef:	ret	
0x41bef0:	push	r12
0x41bef2:	push	rbx
0x41bef3:	mov	rbx, rdi
0x41bef6:	push	rcx
0x41bef7:	mov	rax, qword ptr [rdi + 0x18]
0x41befb:	cmp	rsi, rax
0x41befe:	ja	0x41bf13
0x41bf00:	sub	rax, rsi
0x41bf03:	add	qword ptr [rdi + 0x10], rsi
0x41bf07:	mov	r12d, 1
0x41bf0d:	mov	qword ptr [rdi + 0x18], rax
0x41bf11:	jmp	0x41bf34
0x41bf13:	mov	r12d, dword ptr [rdi + 0x38]
0x41bf17:	test	r12d, r12d
0x41bf1a:	jne	0x41bf31
0x41bf1c:	xor	edx, edx
0x41bf1e:	mov	esi, 0x4c90c4
0x41bf23:	call	0x41be97
0x41bf28:	mov	dword ptr [rbx + 0x38], 1
0x41bf2f:	jmp	0x41bf34
0x41bf31:	xor	r12d, r12d
0x41bf34:	mov	eax, r12d
0x41bf37:	pop	rdx
0x41bf38:	pop	rbx
0x41bf39:	pop	r12
0x41bf3b:	ret	
0x41bf3c:	push	rbx
0x41bf3d:	mov	esi, 1
0x41bf42:	mov	rbx, qword ptr [rdi + 0x10]
0x41bf46:	call	0x41bef0
0x41bf4b:	mov	r8d, eax
0x41bf4e:	xor	eax, eax
0x41bf50:	test	r8d, r8d
0x41bf53:	je	0x41bf57
0x41bf55:	mov	al, byte ptr [rbx]
0x41bf57:	pop	rbx
0x41bf58:	ret	
0x41bf59:	push	rbp
0x41bf5a:	mov	esi, 2
0x41bf5f:	push	rbx
0x41bf60:	mov	rbx, rdi
0x41bf63:	push	rcx
0x41bf64:	mov	rbp, qword ptr [rdi + 0x10]
0x41bf68:	call	0x41bef0
0x41bf6d:	mov	r8d, eax
0x41bf70:	xor	eax, eax
0x41bf72:	test	r8d, r8d
0x41bf75:	je	0x41bf83
0x41bf77:	cmp	dword ptr [rbx + 0x20], 0
0x41bf7b:	mov	ax, word ptr [rbp]
0x41bf7f:	je	0x41bf83
0x41bf81:	xchg	al, ah
0x41bf83:	pop	rdx
0x41bf84:	pop	rbx
0x41bf85:	pop	rbp
0x41bf86:	ret	
0x41bf87:	push	rbp
0x41bf88:	mov	esi, 3
0x41bf8d:	push	rbx
0x41bf8e:	mov	rbx, rdi
0x41bf91:	push	rcx
0x41bf92:	mov	rbp, qword ptr [rdi + 0x10]
0x41bf96:	call	0x41bef0
0x41bf9b:	mov	r8d, eax
0x41bf9e:	xor	eax, eax
0x41bfa0:	test	r8d, r8d
0x41bfa3:	je	0x41bfca
0x41bfa5:	movzx	ecx, byte ptr [rbp + 1]
0x41bfa9:	movzx	eax, byte ptr [rbp + 2]
0x41bfad:	movzx	edx, byte ptr [rbp]
0x41bfb1:	shl	ecx, 8
0x41bfb4:	cmp	dword ptr [rbx + 0x20], 0
0x41bfb8:	je	0x41bfc3
0x41bfba:	shl	edx, 0x10
0x41bfbd:	or	edx, ecx
0x41bfbf:	or	eax, edx
0x41bfc1:	jmp	0x41bfca
0x41bfc3:	shl	eax, 0x10
0x41bfc6:	or	eax, ecx
0x41bfc8:	or	eax, edx
0x41bfca:	pop	rdx
0x41bfcb:	pop	rbx
0x41bfcc:	pop	rbp
0x41bfcd:	ret	
0x41bfce:	push	rbp
0x41bfcf:	mov	esi, 4
0x41bfd4:	push	rbx
0x41bfd5:	mov	rbx, rdi
0x41bfd8:	push	rcx
0x41bfd9:	mov	rbp, qword ptr [rdi + 0x10]
0x41bfdd:	call	0x41bef0
0x41bfe2:	mov	r8d, eax
0x41bfe5:	xor	eax, eax
0x41bfe7:	test	r8d, r8d
0x41bfea:	je	0x41bff7
0x41bfec:	cmp	dword ptr [rbx + 0x20], 0
0x41bff0:	mov	eax, dword ptr [rbp]
0x41bff3:	je	0x41bff7
0x41bff5:	bswap	eax
0x41bff7:	pop	rdx
0x41bff8:	pop	rbx
0x41bff9:	pop	rbp
0x41bffa:	ret	
0x41bffb:	push	rbp
0x41bffc:	mov	esi, 8
0x41c001:	push	rbx
0x41c002:	mov	rbx, rdi
0x41c005:	push	rcx
0x41c006:	mov	rbp, qword ptr [rdi + 0x10]
0x41c00a:	call	0x41bef0
0x41c00f:	mov	r8d, eax
0x41c012:	xor	eax, eax
0x41c014:	test	r8d, r8d
0x41c017:	je	0x41c026
0x41c019:	cmp	dword ptr [rbx + 0x20], 0
0x41c01d:	mov	rax, qword ptr [rbp]
0x41c021:	je	0x41c026
0x41c023:	bswap	rax
0x41c026:	pop	rdx
0x41c027:	pop	rbx
0x41c028:	pop	rbp
0x41c029:	ret	
0x41c02a:	test	esi, esi
0x41c02c:	je	0x41c030
0x41c02e:	jmp	0x41bffb
0x41c030:	push	rax
0x41c031:	call	0x41bfce
0x41c036:	pop	rdx
0x41c037:	mov	eax, eax
0x41c039:	ret	
0x41c03a:	push	r8
0x41c03c:	cmp	esi, 4
0x41c03f:	je	0x41c069
0x41c041:	jg	0x41c057
0x41c043:	cmp	esi, 1
0x41c046:	je	0x41c05f
0x41c048:	cmp	esi, 2
0x41c04b:	jne	0x41c072
0x41c04d:	call	0x41bf59
0x41c052:	movzx	eax, ax
0x41c055:	jmp	0x41c080
0x41c057:	cmp	esi, 8
0x41c05a:	jne	0x41c072
0x41c05c:	pop	rcx
0x41c05d:	jmp	0x41bffb
0x41c05f:	call	0x41bf3c
0x41c064:	movzx	eax, al
0x41c067:	jmp	0x41c080
0x41c069:	call	0x41bfce
0x41c06e:	mov	eax, eax
0x41c070:	jmp	0x41c080
0x41c072:	xor	edx, edx
0x41c074:	mov	esi, 0x4c90d4
0x41c079:	call	0x41be97
0x41c07e:	xor	eax, eax
0x41c080:	pop	rdx
0x41c081:	ret	
0x41c082:	movsxd	rdx, edx
0x41c085:	mov	r11, rsi
0x41c088:	sub	rsp, 0x48
0x41c08c:	mov	rax, qword ptr [rdi + 0x70]
0x41c090:	imul	r8, rdx
0x41c094:	mov	rsi, rdx
0x41c097:	mov	r10, qword ptr [rsp + 0x50]
0x41c09c:	add	r8, r11
0x41c09f:	add	rdx, r8
0x41c0a2:	cmp	rdx, rax
0x41c0a5:	jbe	0x41c0b8
0x41c0a7:	xor	edx, edx
0x41c0a9:	mov	esi, 0x4c8cb0
0x41c0ae:	mov	rdi, r10
0x41c0b1:	call	r9
0x41c0b4:	xor	eax, eax
0x41c0b6:	jmp	0x41c104
0x41c0b8:	mov	rdi, qword ptr [rdi + 0x28]
0x41c0bc:	sub	rax, r8
0x41c0bf:	mov	dword ptr [rsp + 0x20], ecx
0x41c0c3:	mov	qword ptr [rsp], 0x4c90ee
0x41c0cb:	mov	qword ptr [rsp + 8], rdi
0x41c0d0:	add	rdi, r8
0x41c0d3:	mov	qword ptr [rsp + 0x10], rdi
0x41c0d8:	mov	rdi, rsp
0x41c0db:	mov	qword ptr [rsp + 0x18], rax
0x41c0e0:	mov	qword ptr [rsp + 0x28], r9
0x41c0e5:	mov	qword ptr [rsp + 0x30], r10
0x41c0ea:	mov	dword ptr [rsp + 0x38], 0
0x41c0f2:	call	0x41c03a
0x41c0f7:	mov	rcx, qword ptr [rsp + 0x58]
0x41c0fc:	mov	qword ptr [rcx], rax
0x41c0ff:	mov	eax, 1
0x41c104:	add	rsp, 0x48
0x41c108:	ret	
0x41c109:	push	r14
0x41c10b:	push	r13
0x41c10d:	xor	r13d, r13d
0x41c110:	push	r12
0x41c112:	xor	r12d, r12d
0x41c115:	push	rbp
0x41c116:	xor	ebp, ebp
0x41c118:	push	rbx
0x41c119:	mov	rbx, rdi
0x41c11c:	mov	esi, 1
0x41c121:	mov	rdi, rbx
0x41c124:	mov	r14, qword ptr [rbx + 0x10]
0x41c128:	call	0x41bef0
0x41c12d:	test	eax, eax
0x41c12f:	je	0x41c16d
0x41c131:	mov	r14b, byte ptr [r14]
0x41c134:	cmp	ebp, 0x3f
0x41c137:	ja	0x41c149
0x41c139:	mov	rax, r14
0x41c13c:	mov	ecx, ebp
0x41c13e:	and	eax, 0x7f
0x41c141:	shl	rax, cl
0x41c144:	or	r12, rax
0x41c147:	jmp	0x41c163
0x41c149:	test	r13d, r13d
0x41c14c:	jne	0x41c163
0x41c14e:	xor	edx, edx
0x41c150:	mov	esi, 0x4c90fa
0x41c155:	mov	rdi, rbx
0x41c158:	mov	r13d, 1
0x41c15e:	call	0x41be97
0x41c163:	add	ebp, 7
0x41c166:	test	r14b, r14b
0x41c169:	js	0x41c11c
0x41c16b:	jmp	0x41c170
0x41c16d:	xor	r12d, r12d
0x41c170:	pop	rbx
0x41c171:	mov	rax, r12
0x41c174:	pop	rbp
0x41c175:	pop	r12
0x41c177:	pop	r13
0x41c179:	pop	r14
0x41c17b:	ret	
0x41c17c:	push	r14
0x41c17e:	xor	r14d, r14d
0x41c181:	push	r13
0x41c183:	push	r12
0x41c185:	mov	r12, rdi
0x41c188:	push	rbp
0x41c189:	xor	ebp, ebp
0x41c18b:	push	rbx
0x41c18c:	xor	ebx, ebx
0x41c18e:	mov	esi, 1
0x41c193:	mov	rdi, r12
0x41c196:	mov	r13, qword ptr [r12 + 0x10]
0x41c19b:	call	0x41bef0
0x41c1a0:	test	eax, eax
0x41c1a2:	je	0x41c1fb
0x41c1a4:	mov	r13b, byte ptr [r13]
0x41c1a8:	cmp	ebp, 0x3f
0x41c1ab:	ja	0x41c1bd
0x41c1ad:	mov	rax, r13
0x41c1b0:	mov	ecx, ebp
0x41c1b2:	and	eax, 0x7f
0x41c1b5:	shl	rax, cl
0x41c1b8:	or	rbx, rax
0x41c1bb:	jmp	0x41c1d7
0x41c1bd:	test	r14d, r14d
0x41c1c0:	jne	0x41c1d7
0x41c1c2:	xor	edx, edx
0x41c1c4:	mov	esi, 0x4c8cd8
0x41c1c9:	mov	rdi, r12
0x41c1cc:	mov	r14d, 1
0x41c1d2:	call	0x41be97
0x41c1d7:	add	ebp, 7
0x41c1da:	test	r13b, r13b
0x41c1dd:	js	0x41c18e
0x41c1df:	and	r13b, 0x40
0x41c1e3:	je	0x41c1f6
0x41c1e5:	cmp	ebp, 0x3f
0x41c1e8:	ja	0x41c1f6
0x41c1ea:	or	rdx, 0xffffffffffffffff
0x41c1ee:	mov	ecx, ebp
0x41c1f0:	shl	rdx, cl
0x41c1f3:	or	rbx, rdx
0x41c1f6:	mov	rax, rbx
0x41c1f9:	jmp	0x41c1fd
0x41c1fb:	xor	eax, eax
0x41c1fd:	pop	rbx
0x41c1fe:	pop	rbp
0x41c1ff:	pop	r12
0x41c201:	pop	r13
0x41c203:	pop	r14
0x41c205:	ret	
0x41c206:	push	rbp
0x41c207:	push	rbx
0x41c208:	sub	rsp, 0x48
0x41c20c:	mov	eax, dword ptr [r8]
0x41c20f:	mov	r10, qword ptr [rsp + 0x60]
0x41c214:	mov	rbx, qword ptr [rsp + 0x68]
0x41c219:	cmp	eax, 5
0x41c21c:	je	0x41c228
0x41c21e:	cmp	eax, 6
0x41c221:	je	0x41c239
0x41c223:	jmp	0x41c2d1
0x41c228:	mov	rdx, qword ptr [r8 + 8]
0x41c22c:	mov	eax, 1
0x41c231:	mov	qword ptr [rbx], rdx
0x41c234:	jmp	0x41c2d6
0x41c239:	cmp	esi, 1
0x41c23c:	mov	r8, qword ptr [r8 + 8]
0x41c240:	mov	rbp, rdi
0x41c243:	sbb	r11, r11
0x41c246:	and	r11, 0xfffffffffffffffc
0x41c24a:	add	r11, 8
0x41c24e:	imul	r8, r11
0x41c252:	add	r8, rcx
0x41c255:	mov	rcx, qword ptr [rbp + 0x78]
0x41c259:	add	r11, r8
0x41c25c:	cmp	r11, rcx
0x41c25f:	jbe	0x41c272
0x41c261:	xor	edx, edx
0x41c263:	mov	esi, 0x4c8d00
0x41c268:	mov	rdi, r10
0x41c26b:	call	r9
0x41c26e:	xor	eax, eax
0x41c270:	jmp	0x41c2d6
0x41c272:	mov	rax, qword ptr [rbp + 0x30]
0x41c276:	sub	rcx, r8
0x41c279:	mov	rdi, rsp
0x41c27c:	mov	dword ptr [rsp + 0x20], edx
0x41c280:	mov	qword ptr [rsp], 0x4c9114
0x41c288:	mov	qword ptr [rsp + 8], rax
0x41c28d:	add	rax, r8
0x41c290:	mov	qword ptr [rsp + 0x10], rax
0x41c295:	mov	qword ptr [rsp + 0x18], rcx
0x41c29a:	mov	qword ptr [rsp + 0x28], r9
0x41c29f:	mov	qword ptr [rsp + 0x30], r10
0x41c2a4:	mov	dword ptr [rsp + 0x38], 0
0x41c2ac:	call	0x41c02a
0x41c2b1:	cmp	qword ptr [rbp + 0x68], rax
0x41c2b5:	ja	0x41c2ca
0x41c2b7:	xor	edx, edx
0x41c2b9:	mov	esi, 0x4c8d20
0x41c2be:	mov	rdi, rsp
0x41c2c1:	call	0x41be97
0x41c2c6:	xor	eax, eax
0x41c2c8:	jmp	0x41c2d6
0x41c2ca:	add	rax, qword ptr [rbp + 0x20]
0x41c2ce:	mov	qword ptr [rbx], rax
0x41c2d1:	mov	eax, 1
0x41c2d6:	add	rsp, 0x48
0x41c2da:	pop	rbx
0x41c2db:	pop	rbp
0x41c2dc:	ret	
0x41c2dd:	push	r15
0x41c2df:	mov	r11, r9
0x41c2e2:	push	r14
0x41c2e4:	mov	r14, r8
0x41c2e7:	push	r13
0x41c2e9:	mov	r13d, ecx
0x41c2ec:	push	r12
0x41c2ee:	mov	r12, rsi
0x41c2f1:	push	rbp
0x41c2f2:	push	rbx
0x41c2f3:	sub	rsp, 0x98
0x41c2fa:	mov	r15, qword ptr [rsp + 0xd0]
0x41c302:	mov	qword ptr [rsp + 8], rdx
0x41c307:	mov	rax, qword ptr [rsp + 0xd8]
0x41c30f:	mov	rdx, qword ptr [rsp + 0xe0]
0x41c317:	mov	qword ptr [rsp + 0x28], rdi
0x41c31c:	mov	rcx, qword ptr [rsp + 0xf8]
0x41c324:	cmp	dword ptr [r15 + 8], 0
0x41c329:	mov	qword ptr [rsp + 0x10], rax
0x41c32e:	mov	rbx, qword ptr [rsp + 0xe8]
0x41c336:	mov	qword ptr [rsp + 0x18], rdx
0x41c33b:	mov	rbp, qword ptr [rsp + 0xf0]
0x41c343:	mov	qword ptr [rsp + 0x20], rcx
0x41c348:	je	0x41c421
0x41c34e:	cmp	dword ptr [r15 + 0x18], 0
0x41c353:	je	0x41c421
0x41c359:	mov	r8, qword ptr [r15]
0x41c35c:	cmp	dword ptr [r15 + 0xc], 0
0x41c361:	mov	qword ptr [rsp + 0x48], r8
0x41c366:	jne	0x41c37a
0x41c368:	mov	r8, qword ptr [r15 + 0x10]
0x41c36c:	cmp	dword ptr [r15 + 0x20], 0
0x41c371:	mov	qword ptr [rsp + 0x50], r8
0x41c376:	je	0x41c3cc
0x41c378:	jmp	0x41c3a3
0x41c37a:	lea	rcx, [rsp + 0x48]
0x41c37f:	mov	edx, dword ptr [r14 + 0x30]
0x41c383:	mov	rsi, qword ptr [r14 + 0x48]
0x41c387:	mov	r9, rbx
0x41c38a:	push	rcx
0x41c38b:	mov	rdi, r12
0x41c38e:	mov	ecx, r13d
0x41c391:	push	rbp
0x41c392:	call	0x41c082
0x41c397:	pop	r11
0x41c399:	pop	rdx
0x41c39a:	test	eax, eax
0x41c39c:	jne	0x41c368
0x41c39e:	jmp	0x41c846
0x41c3a3:	lea	rdi, [rsp + 0x50]
0x41c3a8:	mov	edx, dword ptr [r14 + 0x30]
0x41c3ac:	mov	rsi, qword ptr [r14 + 0x48]
0x41c3b0:	mov	r9, rbx
0x41c3b3:	push	rdi
0x41c3b4:	mov	ecx, r13d
0x41c3b7:	mov	rdi, r12
0x41c3ba:	push	rbp
0x41c3bb:	call	0x41c082
0x41c3c0:	pop	r9
0x41c3c2:	pop	r10
0x41c3c4:	test	eax, eax
0x41c3c6:	je	0x41c846
0x41c3cc:	cmp	dword ptr [r15 + 0x1c], 0
0x41c3d1:	mov	rdx, qword ptr [rsp + 0x48]
0x41c3d6:	je	0x41c3dd
0x41c3d8:	add	qword ptr [rsp + 0x50], rdx
0x41c3dd:	mov	r9, qword ptr [rsp + 0x20]
0x41c3e2:	mov	rcx, qword ptr [rsp + 8]
0x41c3e7:	mov	r8, rbx
0x41c3ea:	mov	rsi, qword ptr [rsp + 0x18]
0x41c3ef:	mov	rdi, qword ptr [rsp + 0x28]
0x41c3f4:	mov	qword ptr [rsp + 0xd0], r9
0x41c3fc:	mov	rax, qword ptr [rsp + 0x10]
0x41c401:	mov	r9, rbp
0x41c404:	add	rcx, qword ptr [rsp + 0x50]
0x41c409:	add	rdx, qword ptr [rsp + 8]
0x41c40e:	add	rsp, 0x98
0x41c415:	pop	rbx
0x41c416:	pop	rbp
0x41c417:	pop	r12
0x41c419:	pop	r13
0x41c41b:	pop	r14
0x41c41d:	pop	r15
0x41c41f:	jmp	rax
0x41c421:	cmp	dword ptr [r15 + 0x30], 0
0x41c426:	mov	eax, 1
0x41c42b:	je	0x41c857
0x41c431:	cmp	dword ptr [r14 + 0x28], 4
0x41c436:	mov	rdi, qword ptr [r15 + 0x28]
0x41c43a:	jg	0x41c55d
0x41c440:	mov	rdx, qword ptr [r12 + 0x60]
0x41c445:	cmp	rdx, rdi
0x41c448:	ja	0x41c45b
0x41c44a:	xor	edx, edx
0x41c44c:	mov	esi, 0x4c9127
0x41c451:	mov	rdi, rbp
0x41c454:	call	rbx
0x41c456:	jmp	0x41c846
0x41c45b:	mov	r12, qword ptr [r12 + 0x18]
0x41c460:	sub	rdx, rdi
0x41c463:	mov	dword ptr [rsp + 0x70], r13d
0x41c468:	mov	r15, r11
0x41c46b:	mov	qword ptr [rsp + 0x50], 0x4c9142
0x41c474:	mov	qword ptr [rsp + 0x68], rdx
0x41c479:	mov	qword ptr [rsp + 0x78], rbx
0x41c47e:	mov	qword ptr [rsp + 0x80], rbp
0x41c486:	mov	dword ptr [rsp + 0x88], 0
0x41c491:	mov	qword ptr [rsp + 0x58], r12
0x41c496:	add	r12, rdi
0x41c499:	mov	qword ptr [rsp + 0x60], r12
0x41c49e:	mov	r12d, 0xffffffff
0x41c4a4:	cmp	dword ptr [rsp + 0x88], 0
0x41c4ac:	jne	0x41c846
0x41c4b2:	mov	esi, dword ptr [r14 + 0x30]
0x41c4b6:	lea	rdi, [rsp + 0x50]
0x41c4bb:	call	0x41c03a
0x41c4c0:	mov	esi, dword ptr [r14 + 0x30]
0x41c4c4:	lea	rdi, [rsp + 0x50]
0x41c4c9:	mov	r13, rax
0x41c4cc:	call	0x41c03a
0x41c4d1:	mov	r8, r13
0x41c4d4:	or	r8, rax
0x41c4d7:	je	0x41c84a
0x41c4dd:	mov	esi, dword ptr [r14 + 0x30]
0x41c4e1:	cmp	esi, 4
0x41c4e4:	je	0x41c514
0x41c4e6:	jg	0x41c4f4
0x41c4e8:	cmp	esi, 1
0x41c4eb:	je	0x41c4fb
0x41c4ed:	cmp	esi, 2
0x41c4f0:	je	0x41c509
0x41c4f2:	jmp	0x41c521
0x41c4f4:	cmp	esi, 8
0x41c4f7:	je	0x41c51b
0x41c4f9:	jmp	0x41c521
0x41c4fb:	cmp	r13, 0xff
0x41c502:	jne	0x41c521
0x41c504:	mov	r15, rax
0x41c507:	jmp	0x41c4a4
0x41c509:	cmp	r13, 0xffff
0x41c510:	je	0x41c504
0x41c512:	jmp	0x41c521
0x41c514:	cmp	r13, r12
0x41c517:	je	0x41c504
0x41c519:	jmp	0x41c521
0x41c51b:	cmp	r13, -1
0x41c51f:	je	0x41c504
0x41c521:	mov	r11, qword ptr [rsp + 8]
0x41c526:	mov	r8, rbx
0x41c529:	mov	r9, rbp
0x41c52c:	push	rsi
0x41c52d:	push	qword ptr [rsp + 0x28]
0x41c531:	mov	rsi, qword ptr [rsp + 0x28]
0x41c536:	lea	rdx, [r11 + r15]
0x41c53a:	mov	rdi, qword ptr [rsp + 0x38]
0x41c53f:	lea	rcx, [rax + rdx]
0x41c543:	mov	rax, qword ptr [rsp + 0x20]
0x41c548:	add	rdx, r13
0x41c54b:	call	rax
0x41c54d:	pop	rdi
0x41c54e:	pop	r8
0x41c550:	test	eax, eax
0x41c552:	jne	0x41c4a4
0x41c558:	jmp	0x41c846
0x41c55d:	mov	r8d, dword ptr [r15 + 0x34]
0x41c561:	mov	qword ptr [rsp + 0x38], r11
0x41c566:	test	r8d, r8d
0x41c569:	je	0x41c583
0x41c56b:	cmp	dword ptr [r14 + 0x2c], 1
0x41c570:	sbb	rsi, rsi
0x41c573:	and	rsi, 0xfffffffffffffffc
0x41c577:	add	rsi, 8
0x41c57b:	imul	rdi, rsi
0x41c57f:	add	rdi, qword ptr [r14 + 0x50]
0x41c583:	mov	r9, qword ptr [r12 + 0x88]
0x41c58b:	cmp	r9, rdi
0x41c58e:	ja	0x41c5a3
0x41c590:	xor	edx, edx
0x41c592:	mov	esi, 0x4c9150
0x41c597:	mov	rdi, rbp
0x41c59a:	call	rbx
0x41c59c:	xor	eax, eax
0x41c59e:	jmp	0x41c857
0x41c5a3:	mov	r10, qword ptr [r12 + 0x40]
0x41c5a8:	sub	r9, rdi
0x41c5ab:	mov	qword ptr [rsp + 0x50], 0x4c916d
0x41c5b4:	mov	qword ptr [rsp + 0x68], r9
0x41c5b9:	mov	qword ptr [rsp + 0x58], r10
0x41c5be:	add	r10, rdi
0x41c5c1:	mov	qword ptr [rsp + 0x60], r10
0x41c5c6:	mov	dword ptr [rsp + 0x70], r13d
0x41c5cb:	mov	qword ptr [rsp + 0x78], rbx
0x41c5d0:	mov	qword ptr [rsp + 0x80], rbp
0x41c5d8:	mov	dword ptr [rsp + 0x88], 0
0x41c5e3:	test	r8d, r8d
0x41c5e6:	je	0x41c62f
0x41c5e8:	mov	esi, dword ptr [r14 + 0x2c]
0x41c5ec:	lea	rdi, [rsp + 0x50]
0x41c5f1:	call	0x41c02a
0x41c5f6:	mov	r11, qword ptr [r12 + 0x88]
0x41c5fe:	add	rax, qword ptr [r14 + 0x50]
0x41c602:	cmp	rax, r11
0x41c605:	jb	0x41c61a
0x41c607:	xor	edx, edx
0x41c609:	mov	esi, 0x4c8d48
0x41c60e:	mov	rdi, rbp
0x41c611:	call	rbx
0x41c613:	xor	eax, eax
0x41c615:	jmp	0x41c857
0x41c61a:	mov	r15, qword ptr [r12 + 0x40]
0x41c61f:	sub	r11, rax
0x41c622:	mov	qword ptr [rsp + 0x68], r11
0x41c627:	add	r15, rax
0x41c62a:	mov	qword ptr [rsp + 0x60], r15
0x41c62f:	mov	r15, qword ptr [rsp + 0x28]
0x41c634:	lea	rdi, [rsp + 0x50]
0x41c639:	call	0x41bf3c
0x41c63e:	test	al, al
0x41c640:	je	0x41c84a
0x41c646:	dec	eax
0x41c648:	cmp	al, 6
0x41c64a:	ja	0x41c834
0x41c650:	movzx	eax, al
0x41c653:	notrack jmp	qword ptr ds:[rax*8 + 0x4c93a0]
0x41c65b:	lea	rdi, [rsp + 0x50]
0x41c660:	call	0x41c109
0x41c665:	lea	r10, [rsp + 0x38]
0x41c66a:	mov	ecx, r13d
0x41c66d:	mov	r9, rbx
0x41c670:	push	r10
0x41c672:	mov	edx, dword ptr [r14 + 0x30]
0x41c676:	mov	r8, rax
0x41c679:	mov	rdi, r12
0x41c67c:	push	rbp
0x41c67d:	mov	rsi, qword ptr [r14 + 0x48]
0x41c681:	call	0x41c082
0x41c686:	pop	rdx
0x41c687:	pop	rcx
0x41c688:	test	eax, eax
0x41c68a:	jne	0x41c634
0x41c68c:	jmp	0x41c846
0x41c691:	lea	rdi, [rsp + 0x50]
0x41c696:	call	0x41c109
0x41c69b:	lea	rdi, [rsp + 0x40]
0x41c6a0:	mov	r9, rbx
0x41c6a3:	mov	ecx, r13d
0x41c6a6:	mov	edx, dword ptr [r14 + 0x30]
0x41c6aa:	mov	rsi, qword ptr [r14 + 0x48]
0x41c6ae:	push	rdi
0x41c6af:	mov	r8, rax
0x41c6b2:	push	rbp
0x41c6b3:	mov	rdi, r12
0x41c6b6:	call	0x41c082
0x41c6bb:	pop	r10
0x41c6bd:	pop	r11
0x41c6bf:	test	eax, eax
0x41c6c1:	je	0x41c846
0x41c6c7:	lea	rdi, [rsp + 0x50]
0x41c6cc:	call	0x41c109
0x41c6d1:	lea	r9, [rsp + 0x48]
0x41c6d6:	mov	ecx, r13d
0x41c6d9:	mov	rdi, r12
0x41c6dc:	mov	edx, dword ptr [r14 + 0x30]
0x41c6e0:	mov	rsi, qword ptr [r14 + 0x48]
0x41c6e4:	push	r9
0x41c6e6:	mov	r8, rax
0x41c6e9:	push	rbp
0x41c6ea:	mov	r9, rbx
0x41c6ed:	call	0x41c082
0x41c6f2:	pop	r8
0x41c6f4:	pop	r9
0x41c6f6:	test	eax, eax
0x41c6f8:	je	0x41c846
0x41c6fe:	mov	rcx, qword ptr [rsp + 8]
0x41c703:	mov	rdx, qword ptr [rsp + 8]
0x41c708:	add	rcx, qword ptr [rsp + 0x48]
0x41c70d:	add	rdx, qword ptr [rsp + 0x40]
0x41c712:	jmp	0x41c80e
0x41c717:	lea	rdi, [rsp + 0x50]
0x41c71c:	call	0x41c109
0x41c721:	lea	rcx, [rsp + 0x48]
0x41c726:	mov	rdi, r12
0x41c729:	mov	r9, rbx
0x41c72c:	mov	rsi, qword ptr [r14 + 0x48]
0x41c730:	mov	edx, dword ptr [r14 + 0x30]
0x41c734:	push	rcx
0x41c735:	mov	r8, rax
0x41c738:	push	rbp
0x41c739:	mov	ecx, r13d
0x41c73c:	call	0x41c082
0x41c741:	pop	rsi
0x41c742:	pop	rdi
0x41c743:	test	eax, eax
0x41c745:	je	0x41c846
0x41c74b:	lea	rdi, [rsp + 0x50]
0x41c750:	call	0x41c109
0x41c755:	mov	rdx, qword ptr [rsp + 8]
0x41c75a:	add	rdx, qword ptr [rsp + 0x48]
0x41c75f:	lea	rcx, [rax + rdx]
0x41c763:	jmp	0x41c80e
0x41c768:	lea	rdi, [rsp + 0x50]
0x41c76d:	call	0x41c109
0x41c772:	lea	rdi, [rsp + 0x50]
0x41c777:	mov	qword ptr [rsp + 0x28], rax
0x41c77c:	call	0x41c109
0x41c781:	mov	rdx, qword ptr [rsp + 8]
0x41c786:	add	rdx, qword ptr [rsp + 0x38]
0x41c78b:	lea	rcx, [rdx + rax]
0x41c78f:	add	rdx, qword ptr [rsp + 0x28]
0x41c794:	jmp	0x41c80e
0x41c796:	mov	esi, dword ptr [r14 + 0x30]
0x41c79a:	lea	rdi, [rsp + 0x50]
0x41c79f:	call	0x41c03a
0x41c7a4:	mov	qword ptr [rsp + 0x38], rax
0x41c7a9:	jmp	0x41c634
0x41c7ae:	mov	esi, dword ptr [r14 + 0x30]
0x41c7b2:	lea	rdi, [rsp + 0x50]
0x41c7b7:	call	0x41c03a
0x41c7bc:	mov	esi, dword ptr [r14 + 0x30]
0x41c7c0:	lea	rdi, [rsp + 0x50]
0x41c7c5:	mov	qword ptr [rsp + 0x28], rax
0x41c7ca:	call	0x41c03a
0x41c7cf:	mov	rcx, qword ptr [rsp + 8]
0x41c7d4:	mov	rdx, qword ptr [rsp + 0x28]
0x41c7d9:	add	rdx, qword ptr [rsp + 8]
0x41c7de:	add	rcx, rax
0x41c7e1:	jmp	0x41c80e
0x41c7e3:	mov	esi, dword ptr [r14 + 0x30]
0x41c7e7:	lea	rdi, [rsp + 0x50]
0x41c7ec:	call	0x41c03a
0x41c7f1:	lea	rdi, [rsp + 0x50]
0x41c7f6:	mov	qword ptr [rsp + 0x28], rax
0x41c7fb:	call	0x41c109
0x41c800:	mov	rdx, qword ptr [rsp + 0x28]
0x41c805:	add	rdx, qword ptr [rsp + 8]
0x41c80a:	lea	rcx, [rax + rdx]
0x41c80e:	mov	r9, rbp
0x41c811:	push	rax
0x41c812:	mov	r8, rbx
0x41c815:	mov	rdi, r15
0x41c818:	push	qword ptr [rsp + 0x28]
0x41c81c:	mov	rsi, qword ptr [rsp + 0x28]
0x41c821:	mov	rax, qword ptr [rsp + 0x20]
0x41c826:	call	rax
0x41c828:	pop	rdx
0x41c829:	pop	rcx
0x41c82a:	test	eax, eax
0x41c82c:	jne	0x41c634
0x41c832:	jmp	0x41c846
0x41c834:	or	edx, 0xffffffff
0x41c837:	mov	esi, 0x4c917d
0x41c83c:	lea	rdi, [rsp + 0x50]
0x41c841:	call	0x41be97
0x41c846:	xor	eax, eax
0x41c848:	jmp	0x41c857
0x41c84a:	xor	eax, eax
0x41c84c:	cmp	dword ptr [rsp + 0x88], 0
0x41c854:	sete	al
0x41c857:	add	rsp, 0x98
0x41c85e:	pop	rbx
0x41c85f:	pop	rbp
0x41c860:	pop	r12
0x41c862:	pop	r13
0x41c864:	pop	r14
0x41c866:	pop	r15
0x41c868:	ret	
0x41c869:	endbr64	
0x41c86d:	push	rbx
0x41c86e:	cmp	dword ptr [rdi + 8], 0
0x41c872:	mov	r9, rdx
0x41c875:	mov	r10, r8
0x41c878:	jne	0x41c8c6
0x41c87a:	mov	rdx, qword ptr [rdi + 0x30]
0x41c87e:	test	rdx, rdx
0x41c881:	je	0x41c90d
0x41c887:	mov	r11, qword ptr [rdx + 0x10]
0x41c88b:	mov	rbx, qword ptr [rdx + 8]
0x41c88f:	xor	r8d, r8d
0x41c892:	cmp	r11, r8
0x41c895:	jbe	0x41c92d
0x41c89b:	lea	rcx, [r11 + r8]
0x41c89f:	shr	rcx, 1
0x41c8a2:	imul	rax, rcx, 0x18
0x41c8a6:	add	rax, rbx
0x41c8a9:	mov	rdi, qword ptr [rax + 8]
0x41c8ad:	cmp	rdi, rsi
0x41c8b0:	ja	0x41c8c1
0x41c8b2:	add	rdi, qword ptr [rax + 0x10]
0x41c8b6:	cmp	rdi, rsi
0x41c8b9:	ja	0x41c91b
0x41c8bb:	lea	r8, [rcx + 1]
0x41c8bf:	jmp	0x41c892
0x41c8c1:	mov	r11, rcx
0x41c8c4:	jmp	0x41c892
0x41c8c6:	add	rdi, 0x30
0x41c8ca:	mov	rdi, qword ptr [rdi]
0x41c8cd:	test	rdi, rdi
0x41c8d0:	je	0x41c90d
0x41c8d2:	mov	r11, qword ptr [rdi + 0x10]
0x41c8d6:	mov	rbx, qword ptr [rdi + 8]
0x41c8da:	xor	r8d, r8d
0x41c8dd:	cmp	r11, r8
0x41c8e0:	jbe	0x41c8ca
0x41c8e2:	lea	rdx, [r11 + r8]
0x41c8e6:	shr	rdx, 1
0x41c8e9:	imul	rax, rdx, 0x18
0x41c8ed:	add	rax, rbx
0x41c8f0:	mov	rcx, qword ptr [rax + 8]
0x41c8f4:	cmp	rcx, rsi
0x41c8f7:	ja	0x41c908
0x41c8f9:	add	rcx, qword ptr [rax + 0x10]
0x41c8fd:	cmp	rcx, rsi
0x41c900:	ja	0x41c91b
0x41c902:	lea	r8, [rdx + 1]
0x41c906:	jmp	0x41c8dd
0x41c908:	mov	r11, rdx
0x41c90b:	jmp	0x41c8dd
0x41c90d:	xor	r8d, r8d
0x41c910:	xor	ecx, ecx
0x41c912:	xor	edx, edx
0x41c914:	mov	rdi, r10
0x41c917:	pop	rbx
0x41c918:	jmp	r9
0x41c91b:	mov	rcx, qword ptr [rax + 8]
0x41c91f:	mov	r8, qword ptr [rax + 0x10]
0x41c923:	mov	rdi, r10
0x41c926:	mov	rdx, qword ptr [rax]
0x41c929:	pop	rbx
0x41c92a:	jmp	r9
0x41c92d:	mov	rdx, qword ptr [rdx]
0x41c930:	jmp	0x41c87e
0x41c935:	push	r14
0x41c937:	xor	eax, eax
0x41c939:	mov	r14, rdx
0x41c93c:	push	r13
0x41c93e:	mov	r13, rsi
0x41c941:	mov	esi, 0x80000
0x41c946:	push	r12
0x41c948:	mov	dword ptr [rcx], 0
0x41c94e:	push	rbp
0x41c94f:	mov	rbp, rdi
0x41c952:	push	rbx
0x41c953:	mov	rbx, rcx
0x41c956:	call	0x403db0
0x41c95b:	test	eax, eax
0x41c95d:	jns	0x41c98b
0x41c95f:	call	0x403890
0x41c964:	mov	edx, dword ptr [rax]
0x41c966:	cmp	edx, 2
0x41c969:	je	0x41c970
0x41c96b:	cmp	edx, 0xd
0x41c96e:	jne	0x41c97c
0x41c970:	mov	dword ptr [rbx], 1
0x41c976:	or	r12d, 0xffffffff
0x41c97a:	jmp	0x41c9a1
0x41c97c:	mov	rsi, rbp
0x41c97f:	mov	rdi, r14
0x41c982:	or	r12d, 0xffffffff
0x41c986:	call	r13
0x41c989:	jmp	0x41c9a1
0x41c98b:	mov	r12d, eax
0x41c98e:	mov	edi, eax
0x41c990:	mov	edx, 1
0x41c995:	mov	esi, 2
0x41c99a:	xor	eax, eax
0x41c99c:	call	0x403960
0x41c9a1:	pop	rbx
0x41c9a2:	mov	eax, r12d
0x41c9a5:	pop	rbp
0x41c9a6:	pop	r12
0x41c9a8:	pop	r13
0x41c9aa:	pop	r14
0x41c9ac:	ret	
0x41c9ad:	push	rbp
0x41c9ae:	mov	rbp, rdx
0x41c9b1:	push	rbx
0x41c9b2:	mov	rbx, rsi
0x41c9b5:	push	rcx
0x41c9b6:	call	0x403b00
0x41c9bb:	mov	r8d, eax
0x41c9be:	mov	eax, 1
0x41c9c3:	test	r8d, r8d
0x41c9c6:	jns	0x41c9db
0x41c9c8:	call	0x403890
0x41c9cd:	mov	esi, 0x45cfc2
0x41c9d2:	mov	rdi, rbp
0x41c9d5:	mov	edx, dword ptr [rax]
0x41c9d7:	call	rbx
0x41c9d9:	xor	eax, eax
0x41c9db:	pop	rdx
0x41c9dc:	pop	rbx
0x41c9dd:	pop	rbp
0x41c9de:	ret	
0x41c9df:	mov	r8, rdi
0x41c9e2:	mov	rdi, rcx
0x41c9e5:	mov	ecx, dword ptr [rcx]
0x41c9e7:	mov	r9d, 1
0x41c9ed:	cmp	ecx, 0xe
0x41c9f0:	ja	0x41ca24
0x41c9f2:	mov	rax, qword ptr [r8]
0x41c9f5:	mov	r10, qword ptr [rdx]
0x41c9f8:	xor	r9d, r9d
0x41c9fb:	sub	rsi, rax
0x41c9fe:	cmp	rsi, 3
0x41ca02:	jle	0x41ca24
0x41ca04:	mov	esi, dword ptr [rax]
0x41ca06:	add	rax, 4
0x41ca0a:	mov	r9d, 1
0x41ca10:	prefetchnta	byte ptr [rax]
0x41ca13:	mov	qword ptr [r8], rax
0x41ca16:	shl	rsi, cl
0x41ca19:	add	ecx, 0x20
0x41ca1c:	or	rsi, r10
0x41ca1f:	mov	qword ptr [rdx], rsi
0x41ca22:	mov	dword ptr [rdi], ecx
0x41ca24:	mov	eax, r9d
0x41ca27:	ret	
0x41ca28:	mov	rax, qword ptr [rdx]
0x41ca2b:	mov	r8, rcx
0x41ca2e:	mov	r10, rdi
0x41ca31:	xor	ecx, ecx
0x41ca33:	xor	r9d, r9d
0x41ca36:	cmp	rax, rsi
0x41ca39:	jae	0x41ca69
0x41ca3b:	mov	r11b, byte ptr [r10 + rax]
0x41ca3f:	inc	rax
0x41ca42:	mov	edi, r11d
0x41ca45:	and	edi, 0x7f
0x41ca48:	shl	edi, cl
0x41ca4a:	movsxd	rdi, edi
0x41ca4d:	or	r9, rdi
0x41ca50:	test	r11b, r11b
0x41ca53:	js	0x41ca61
0x41ca55:	mov	qword ptr [rdx], rax
0x41ca58:	mov	eax, 1
0x41ca5d:	mov	qword ptr [r8], r9
0x41ca60:	ret	
0x41ca61:	add	ecx, 7
0x41ca64:	cmp	ecx, 0x3f
0x41ca67:	jne	0x41ca36
0x41ca69:	xor	eax, eax
0x41ca6b:	ret	
0x41ca6c:	mov	r9, rdi
0x41ca6f:	mov	edi, dword ptr [rcx]
0x41ca71:	cmp	edi, 0xffffff
0x41ca77:	ja	0x41ca9f
0x41ca79:	mov	rax, qword ptr [rdx]
0x41ca7c:	cmp	rax, rsi
0x41ca7f:	jae	0x41ca9f
0x41ca81:	shl	edi, 8
0x41ca84:	mov	dword ptr [rcx], edi
0x41ca86:	mov	ecx, dword ptr [r8]
0x41ca89:	shl	ecx, 8
0x41ca8c:	mov	dword ptr [r8], ecx
0x41ca8f:	movzx	esi, byte ptr [r9 + rax]
0x41ca94:	inc	rax
0x41ca97:	add	ecx, esi
0x41ca99:	mov	dword ptr [r8], ecx
0x41ca9c:	mov	qword ptr [rdx], rax
0x41ca9f:	ret	
0x41caa0:	mov	r10, r8
0x41caa3:	mov	r11, rdx
0x41caa6:	mov	r8, r9
0x41caa9:	mov	rdx, rcx
0x41caac:	mov	rcx, r10
0x41caaf:	call	0x41ca6c
0x41cab4:	mov	ecx, dword ptr [r10]
0x41cab7:	movzx	esi, word ptr [r11]
0x41cabb:	mov	edx, ecx
0x41cabd:	mov	eax, esi
0x41cabf:	shr	edx, 0xb
0x41cac2:	imul	edx, esi
0x41cac5:	cmp	dword ptr [r8], edx
0x41cac8:	jae	0x41cae2
0x41caca:	mov	r9d, 0x800
0x41cad0:	mov	dword ptr [r10], edx
0x41cad3:	xor	r8d, r8d
0x41cad6:	sub	r9d, esi
0x41cad9:	shr	r9d, 5
0x41cadd:	add	eax, r9d
0x41cae0:	jmp	0x41caf8
0x41cae2:	mov	edi, esi
0x41cae4:	sub	ecx, edx
0x41cae6:	shr	di, 5
0x41caea:	mov	dword ptr [r10], ecx
0x41caed:	sub	eax, edi
0x41caef:	sub	dword ptr [r8], edx
0x41caf2:	mov	r8d, 1
0x41caf8:	mov	word ptr [r11], ax
0x41cafc:	mov	eax, r8d
0x41caff:	ret	
0x41cb00:	push	r15
0x41cb02:	mov	r15, rdx
0x41cb05:	push	r14
0x41cb07:	mov	r14, r8
0x41cb0a:	push	r13
0x41cb0c:	mov	r13, r9
0x41cb0f:	push	r12
0x41cb11:	xor	r12d, r12d
0x41cb14:	push	rbp
0x41cb15:	mov	ebp, ecx
0x41cb17:	push	rbx
0x41cb18:	mov	ebx, 1
0x41cb1d:	sub	rsp, 0x10
0x41cb21:	mov	edx, ebx
0x41cb23:	mov	r9, qword ptr [rsp + 0x48]
0x41cb28:	mov	r8, r13
0x41cb2b:	mov	rcx, r14
0x41cb2e:	add	rdx, rdx
0x41cb31:	inc	r12d
0x41cb34:	mov	qword ptr [rsp + 8], rsi
0x41cb39:	add	rdx, r15
0x41cb3c:	mov	qword ptr [rsp], rdi
0x41cb40:	call	0x41caa0
0x41cb45:	cmp	ebp, r12d
0x41cb48:	mov	rdi, qword ptr [rsp]
0x41cb4c:	mov	rsi, qword ptr [rsp + 8]
0x41cb51:	lea	ebx, [rax + rbx*2]
0x41cb54:	jne	0x41cb21
0x41cb56:	mov	ecx, ebp
0x41cb58:	mov	edx, 1
0x41cb5d:	add	rsp, 0x10
0x41cb61:	mov	eax, ebx
0x41cb63:	shl	edx, cl
0x41cb65:	pop	rbx
0x41cb66:	pop	rbp
0x41cb67:	sub	eax, edx
0x41cb69:	pop	r12
0x41cb6b:	pop	r13
0x41cb6d:	pop	r14
0x41cb6f:	pop	r15
0x41cb71:	ret	
0x41cb72:	cmp	ecx, 1
0x41cb75:	push	r15
0x41cb77:	mov	r15, r9
0x41cb7a:	push	r14
0x41cb7c:	sbb	rax, rax
0x41cb7f:	mov	r14, rsi
0x41cb82:	push	r13
0x41cb84:	and	rax, 0xfffffffffffffbfc
0x41cb8a:	mov	r13, rdi
0x41cb8d:	push	r12
0x41cb8f:	mov	r12d, ecx
0x41cb92:	mov	rcx, r15
0x41cb95:	push	rbp
0x41cb96:	mov	rbp, rdx
0x41cb99:	lea	rdx, [rdx + rax + 0xa68]
0x41cba1:	push	rbx
0x41cba2:	mov	ebx, r8d
0x41cba5:	mov	r9, qword ptr [rsp + 0x40]
0x41cbaa:	mov	r8, qword ptr [rsp + 0x38]
0x41cbaf:	call	0x41caa0
0x41cbb4:	mov	r8, qword ptr [rsp + 0x38]
0x41cbb9:	mov	r9, qword ptr [rsp + 0x40]
0x41cbbe:	test	eax, eax
0x41cbc0:	je	0x41cc49
0x41cbc6:	cmp	r12d, 1
0x41cbca:	mov	rsi, r14
0x41cbcd:	mov	rdi, r13
0x41cbd0:	sbb	rcx, rcx
0x41cbd3:	and	rcx, 0xfffffffffffffbfc
0x41cbda:	lea	rdx, [rbp + rcx + 0xa6a]
0x41cbe2:	mov	rcx, r15
0x41cbe5:	call	0x41caa0
0x41cbea:	mov	r8, qword ptr [rsp + 0x38]
0x41cbef:	mov	r9, qword ptr [rsp + 0x40]
0x41cbf4:	test	eax, eax
0x41cbf6:	je	0x41cc1b
0x41cbf8:	cmp	r12d, 1
0x41cbfc:	mov	r10d, 8
0x41cc02:	sbb	rdi, rdi
0x41cc05:	and	rdi, 0xfffffffffffffbfc
0x41cc0c:	lea	rdx, [rbp + rdi + 0xc6c]
0x41cc14:	mov	ebp, 0x12
0x41cc19:	jmp	0x41cc75
0x41cc1b:	shl	ebx, 3
0x41cc1e:	mov	r10d, 3
0x41cc24:	lea	esi, [rbx + 0x3b4]
0x41cc2a:	add	ebx, 0x5b6
0x41cc30:	add	rsi, rsi
0x41cc33:	add	rbx, rbx
0x41cc36:	test	r12d, r12d
0x41cc39:	cmove	rbx, rsi
0x41cc3d:	lea	rdx, [rbp + rbx]
0x41cc42:	mov	ebp, 0xa
0x41cc47:	jmp	0x41cc75
0x41cc49:	shl	ebx, 3
0x41cc4c:	mov	r10d, 3
0x41cc52:	lea	edx, [rbx + 0x334]
0x41cc58:	add	ebx, 0x536
0x41cc5e:	add	rdx, rdx
0x41cc61:	add	rbx, rbx
0x41cc64:	test	r12d, r12d
0x41cc67:	cmove	rbx, rdx
0x41cc6b:	lea	rdx, [rbp + rbx]
0x41cc70:	mov	ebp, 2
0x41cc75:	push	r9
0x41cc77:	mov	rsi, r14
0x41cc7a:	mov	r9, r8
0x41cc7d:	mov	rdi, r13
0x41cc80:	mov	r8, r15
0x41cc83:	mov	ecx, r10d
0x41cc86:	call	0x41cb00
0x41cc8b:	pop	rdx
0x41cc8c:	pop	rbx
0x41cc8d:	add	eax, ebp
0x41cc8f:	pop	rbp
0x41cc90:	pop	r12
0x41cc92:	pop	r13
0x41cc94:	pop	r14
0x41cc96:	pop	r15
0x41cc98:	ret	
0x41cc99:	push	r15
0x41cc9b:	lea	rax, [rdx + 0x1000]
0x41cca2:	mov	r9, rdi
0x41cca5:	push	r14
0x41cca7:	push	r13
0x41cca9:	mov	r13, rcx
0x41ccac:	mov	ecx, 8
0x41ccb1:	push	r12
0x41ccb3:	push	rbp
0x41ccb4:	xor	ebp, ebp
0x41ccb6:	push	rbx
0x41ccb7:	sub	rsp, 0x20
0x41ccbb:	mov	r8, rsp
0x41ccbe:	mov	qword ptr [rsp - 0x78], rax
0x41ccc3:	xor	eax, eax
0x41ccc5:	mov	rdi, r8
0x41ccc8:	rep stosd	dword ptr [rdi], eax
0x41ccca:	movzx	edx, byte ptr [r9 + rbp]
0x41cccf:	cmp	dl, 0xf
0x41ccd2:	jbe	0x41ccdb
0x41ccd4:	xor	eax, eax
0x41ccd6:	jmp	0x41cfe4
0x41ccdb:	cmp	word ptr [rsp + rdx*2], 0
0x41cce0:	jne	0x41ccee
0x41cce2:	mov	word ptr [rsp + rdx*2 - 0x20], bp
0x41cce7:	mov	word ptr [rsp + rdx*2 - 0x40], bp
0x41ccec:	jmp	0x41cd09
0x41ccee:	movzx	r10d, word ptr [rsp + rdx*2 - 0x40]
0x41ccf4:	mov	rbx, qword ptr [rsp - 0x78]
0x41ccf9:	mov	word ptr [rbx + r10*2], bp
0x41ccfe:	movzx	r11d, byte ptr [r9 + rbp]
0x41cd03:	mov	word ptr [rsp + r11*2 - 0x40], bp
0x41cd09:	movzx	r12d, byte ptr [r9 + rbp]
0x41cd0e:	inc	rbp
0x41cd11:	inc	word ptr [rsp + r12*2]
0x41cd16:	cmp	rsi, rbp
0x41cd19:	jne	0x41ccca
0x41cd1b:	mov	ecx, 0x200
0x41cd20:	xor	eax, eax
0x41cd22:	mov	rdi, r13
0x41cd25:	xor	edx, edx
0x41cd27:	rep stosd	dword ptr [rdi], eax
0x41cd29:	mov	r11d, 1
0x41cd2f:	movzx	esi, word ptr [r8 + rdx*2 + 2]
0x41cd35:	mov	r14d, esi
0x41cd38:	test	esi, esi
0x41cd3a:	je	0x41cdd3
0x41cd40:	lea	ecx, [rdx + 1]
0x41cd43:	mov	r15d, r11d
0x41cd46:	shl	r15d, cl
0x41cd49:	cmp	r15d, esi
0x41cd4c:	jb	0x41ccd4
0x41cd4e:	mov	ebx, edx
0x41cd50:	mov	ebp, r11d
0x41cd53:	mov	ecx, edx
0x41cd55:	movzx	esi, word ptr [rsp + rdx*2 - 0x1e]
0x41cd5a:	shl	ebx, 9
0x41cd5d:	shl	ebp, cl
0x41cd5f:	movsxd	r10, r15d
0x41cd62:	xor	r9d, r9d
0x41cd65:	movzx	r12d, r14w
0x41cd69:	cmp	r12, r9
0x41cd6c:	jbe	0x41cdd3
0x41cd6e:	test	esi, 0xfe00
0x41cd74:	jne	0x41ccd4
0x41cd7a:	mov	edi, ebx
0x41cd7c:	mov	ecx, eax
0x41cd7e:	or	edi, esi
0x41cd80:	cmp	rcx, 0xff
0x41cd87:	ja	0x41cda1
0x41cd89:	cmp	word ptr [r13 + rcx*2], 0
0x41cd90:	jne	0x41ccd4
0x41cd96:	mov	word ptr [r13 + rcx*2], di
0x41cd9c:	add	rcx, r10
0x41cd9f:	jmp	0x41cd80
0x41cda1:	inc	r9
0x41cda4:	cmp	r9, r12
0x41cda7:	jae	0x41cdb2
0x41cda9:	mov	rdi, qword ptr [rsp - 0x78]
0x41cdae:	movzx	esi, word ptr [rdi + rsi*2]
0x41cdb2:	mov	r15d, ebp
0x41cdb5:	test	eax, r15d
0x41cdb8:	je	0x41cdbf
0x41cdba:	shr	r15d, 1
0x41cdbd:	jmp	0x41cdb5
0x41cdbf:	test	r15d, r15d
0x41cdc2:	je	0x41cdce
0x41cdc4:	lea	r14d, [r15 - 1]
0x41cdc8:	and	eax, r14d
0x41cdcb:	add	r15d, eax
0x41cdce:	mov	eax, r15d
0x41cdd1:	jmp	0x41cd69
0x41cdd3:	inc	rdx
0x41cdd6:	cmp	rdx, 8
0x41cdda:	jne	0x41cd2f
0x41cde0:	mov	edx, 9
0x41cde5:	mov	r10d, 1
0x41cdeb:	movzx	edi, word ptr [r8 + rdx*2]
0x41cdf0:	test	edi, edi
0x41cdf2:	je	0x41ce61
0x41cdf4:	mov	word ptr [rsp + rdx*2 - 0x60], ax
0x41cdf9:	mov	rsi, rdx
0x41cdfc:	mov	r15d, edx
0x41cdff:	mov	r14d, esi
0x41ce02:	sub	r15d, esi
0x41ce05:	test	rsi, rsi
0x41ce08:	je	0x41ce59
0x41ce0a:	mov	ebx, edi
0x41ce0c:	mov	ecx, r15d
0x41ce0f:	shr	ebx, cl
0x41ce11:	and	bl, 1
0x41ce14:	je	0x41ce54
0x41ce16:	lea	ecx, [r14 - 1]
0x41ce1a:	mov	ebp, r10d
0x41ce1d:	xor	r9d, r9d
0x41ce20:	shl	ebp, cl
0x41ce22:	mov	r12d, ebp
0x41ce25:	mov	r11d, r9d
0x41ce28:	cmp	r11, rsi
0x41ce2b:	jae	0x41ce48
0x41ce2d:	test	eax, r12d
0x41ce30:	jne	0x41ce37
0x41ce32:	add	eax, r12d
0x41ce35:	jmp	0x41ce48
0x41ce37:	mov	r14d, r12d
0x41ce3a:	inc	r9d
0x41ce3d:	shr	r12d, 1
0x41ce40:	not	r14d
0x41ce43:	and	eax, r14d
0x41ce46:	jmp	0x41ce25
0x41ce48:	mov	ebx, r10d
0x41ce4b:	mov	ecx, r15d
0x41ce4e:	shl	ebx, cl
0x41ce50:	not	ebx
0x41ce52:	and	edi, ebx
0x41ce54:	dec	rsi
0x41ce57:	jmp	0x41cdfc
0x41ce59:	test	edi, edi
0x41ce5b:	jne	0x41ccd4
0x41ce61:	inc	rdx
0x41ce64:	cmp	rdx, 0x10
0x41ce68:	jne	0x41cdeb
0x41ce6a:	mov	ebx, 0xe00
0x41ce6f:	mov	r15d, 7
0x41ce75:	xor	r14d, r14d
0x41ce78:	mov	ebp, 1
0x41ce7d:	mov	r11w, word ptr [rsp + r15*2 + 0x10]
0x41ce83:	test	r11w, r11w
0x41ce87:	je	0x41cfd1
0x41ce8d:	mov	ecx, r15d
0x41ce90:	mov	edx, ebp
0x41ce92:	mov	r9d, ebp
0x41ce95:	movzx	esi, word ptr [rsp + r15*2 - 0x10]
0x41ce9b:	shl	edx, cl
0x41ce9d:	lea	ecx, [r15 + 7]
0x41cea1:	movzx	r11d, r11w
0x41cea5:	movzx	eax, word ptr [rsp + r15*2 - 0x50]
0x41ceab:	shl	r9d, cl
0x41ceae:	movsxd	rdi, edx
0x41ceb1:	mov	edx, edx
0x41ceb3:	xor	ecx, ecx
0x41ceb5:	mov	dword ptr [rsp - 0x5c], r9d
0x41ceba:	lea	r8d, [rbx + 0x1000]
0x41cec1:	mov	r10d, 0x100
0x41cec7:	mov	r12, rdx
0x41ceca:	mov	qword ptr [rsp - 0x70], rdi
0x41cecf:	xor	edi, edi
0x41ced1:	mov	word ptr [rsp - 0x56], r8w
0x41ced7:	xor	r8d, r8d
0x41ceda:	cmp	r11, rdi
0x41cedd:	jbe	0x41cfd1
0x41cee3:	movzx	r9d, al
0x41cee7:	cmp	r9, r10
0x41ceea:	je	0x41cf49
0x41ceec:	lea	r10, [r9 + r9]
0x41cef0:	add	r10, r13
0x41cef3:	mov	cx, word ptr [r10]
0x41cef7:	test	cx, cx
0x41cefa:	jne	0x41cf26
0x41cefc:	test	r14, -0x200
0x41cf03:	jne	0x41ccd4
0x41cf09:	mov	r8w, word ptr [rsp - 0x56]
0x41cf0f:	mov	rdx, qword ptr [rsp - 0x70]
0x41cf14:	mov	rcx, r15
0x41cf17:	add	r8d, r14d
0x41cf1a:	mov	word ptr [r10], r8w
0x41cf1e:	mov	r8, r14
0x41cf21:	add	r14, rdx
0x41cf24:	jmp	0x41cf49
0x41cf26:	test	ch, 0x10
0x41cf29:	je	0x41ccd4
0x41cf2f:	mov	r8, rcx
0x41cf32:	shr	cx, 9
0x41cf36:	and	ecx, 7
0x41cf39:	and	r8d, 0x1ff
0x41cf40:	cmp	r15, rcx
0x41cf43:	ja	0x41ccd4
0x41cf49:	mov	r10d, ebx
0x41cf4c:	mov	dword ptr [rsp - 0x54], eax
0x41cf50:	mov	edx, eax
0x41cf52:	or	r10d, esi
0x41cf55:	shr	edx, 8
0x41cf58:	mov	word ptr [rsp - 0x58], r10w
0x41cf5e:	mov	r10d, ebp
0x41cf61:	shl	r10d, cl
0x41cf64:	mov	qword ptr [rsp - 0x68], r10
0x41cf69:	lea	r10, [r8 + r8]
0x41cf6d:	add	r10, r13
0x41cf70:	cmp	qword ptr [rsp - 0x68], rdx
0x41cf75:	jbe	0x41cf99
0x41cf77:	cmp	word ptr [r10 + rdx*2 + 0x200], 0
0x41cf81:	jne	0x41ccd4
0x41cf87:	mov	eax, dword ptr [rsp - 0x58]
0x41cf8b:	mov	word ptr [r10 + rdx*2 + 0x200], ax
0x41cf94:	add	rdx, r12
0x41cf97:	jmp	0x41cf70
0x41cf99:	inc	rdi
0x41cf9c:	mov	eax, dword ptr [rsp - 0x54]
0x41cfa0:	cmp	rdi, r11
0x41cfa3:	jae	0x41cfae
0x41cfa5:	mov	rdx, qword ptr [rsp - 0x78]
0x41cfaa:	movzx	esi, word ptr [rdx + rsi*2]
0x41cfae:	mov	edx, dword ptr [rsp - 0x5c]
0x41cfb2:	test	eax, edx
0x41cfb4:	je	0x41cfba
0x41cfb6:	shr	edx, 1
0x41cfb8:	jmp	0x41cfb2
0x41cfba:	test	edx, edx
0x41cfbc:	je	0x41cfc7
0x41cfbe:	lea	r10d, [rdx - 1]
0x41cfc2:	and	eax, r10d
0x41cfc5:	add	edx, eax
0x41cfc7:	mov	r10, r9
0x41cfca:	mov	eax, edx
0x41cfcc:	jmp	0x41ceda
0x41cfd1:	sub	bx, 0x200
0x41cfd6:	dec	r15
0x41cfd9:	jne	0x41ce7d
0x41cfdf:	mov	eax, 1
0x41cfe4:	add	rsp, 0x20
0x41cfe8:	pop	rbx
0x41cfe9:	pop	rbp
0x41cfea:	pop	r12
0x41cfec:	pop	r13
0x41cfee:	pop	r14
0x41cff0:	pop	r15
0x41cff2:	ret	
0x41cff3:	push	r15
0x41cff5:	mov	rax, rcx
0x41cff8:	lea	r15, [rdx + 0x1278]
0x41cfff:	push	r14
0x41d001:	add	rax, r8
0x41d004:	push	r13
0x41d006:	push	r12
0x41d008:	mov	r12, rdx
0x41d00b:	push	rbp
0x41d00c:	lea	rbp, [rdi + rsi]
0x41d010:	push	rbx
0x41d011:	mov	rbx, rcx
0x41d014:	sub	rsp, 0x60
0x41d018:	mov	qword ptr [rsp], rcx
0x41d01c:	mov	qword ptr [rsp + 8], r8
0x41d021:	mov	qword ptr [rsp + 0x38], rdi
0x41d026:	mov	qword ptr [rsp + 0x10], rax
0x41d02b:	mov	rcx, qword ptr [rsp + 0x38]
0x41d030:	mov	rdx, rbp
0x41d033:	sub	rdx, rcx
0x41d036:	cmp	rdx, 4
0x41d03a:	jle	0x41db80
0x41d040:	mov	al, byte ptr [rcx]
0x41d042:	mov	edx, eax
0x41d044:	and	edx, 0xf
0x41d047:	cmp	dl, 8
0x41d04a:	jne	0x41db79
0x41d050:	test	al, al
0x41d052:	js	0x41db79
0x41d058:	mov	ax, word ptr [rcx]
0x41d05b:	xchg	al, ah
0x41d05d:	test	byte ptr [rcx + 1], 0x20
0x41d061:	jne	0x41db79
0x41d067:	movzx	eax, ax
0x41d06a:	mov	r13d, 0x1f
0x41d070:	xor	edx, edx
0x41d072:	div	r13
0x41d075:	test	rdx, rdx
0x41d078:	jne	0x41db79
0x41d07e:	add	rcx, 2
0x41d082:	mov	dword ptr [rsp + 0x34], 0
0x41d08a:	mov	qword ptr [rsp + 0x38], rcx
0x41d08f:	mov	qword ptr [rsp + 0x40], 0
0x41d098:	mov	rax, qword ptr [rsp + 0x38]
0x41d09d:	test	al, 3
0x41d09f:	je	0x41d312
0x41d0a5:	movzx	r13d, byte ptr [rax]
0x41d0a9:	mov	ecx, dword ptr [rsp + 0x34]
0x41d0ad:	inc	rax
0x41d0b0:	mov	qword ptr [rsp + 0x38], rax
0x41d0b5:	shl	r13, cl
0x41d0b8:	add	ecx, 8
0x41d0bb:	or	qword ptr [rsp + 0x40], r13
0x41d0c0:	mov	dword ptr [rsp + 0x34], ecx
0x41d0c4:	jmp	0x41d098
0x41d0c6:	dec	r10d
0x41d0c9:	je	0x41d8a2
0x41d0cf:	lea	rcx, [rsp + 0x34]
0x41d0d4:	lea	rdx, [rsp + 0x40]
0x41d0d9:	mov	rsi, rbp
0x41d0dc:	lea	rdi, [rsp + 0x38]
0x41d0e1:	call	0x41c9df
0x41d0e6:	test	eax, eax
0x41d0e8:	je	0x41db79
0x41d0ee:	mov	r9, qword ptr [rsp + 0x40]
0x41d0f3:	sub	dword ptr [rsp + 0x34], 0xe
0x41d0f8:	mov	r13d, r9d
0x41d0fb:	mov	r14, r9
0x41d0fe:	mov	r11, r9
0x41d101:	shr	r9, 0xe
0x41d105:	and	r13d, 0x1f
0x41d109:	shr	r14, 5
0x41d10d:	mov	qword ptr [rsp + 0x40], r9
0x41d112:	shr	r11, 0xa
0x41d116:	and	r14d, 0x1f
0x41d11a:	add	r13d, 0x101
0x41d121:	and	r11d, 0xf
0x41d125:	inc	r14d
0x41d128:	add	r11d, 4
0x41d12c:	cmp	r13d, 0x11e
0x41d133:	ja	0x41db79
0x41d139:	cmp	r14d, 0x1e
0x41d13d:	seta	al
0x41d140:	ja	0x41db79
0x41d146:	lea	rdi, [rsp + 0x4c]
0x41d14b:	mov	ecx, 0x13
0x41d150:	lea	rdx, [rsp + 0x40]
0x41d155:	mov	rsi, rbp
0x41d158:	rep stosb	byte ptr [rdi], al
0x41d15a:	lea	rcx, [rsp + 0x34]
0x41d15f:	lea	rdi, [rsp + 0x38]
0x41d164:	call	0x41c9df
0x41d169:	test	eax, eax
0x41d16b:	je	0x41db79
0x41d171:	mov	rax, qword ptr [rsp + 0x40]
0x41d176:	xor	edx, edx
0x41d178:	mov	r9d, dword ptr [rsp + 0x34]
0x41d17d:	mov	ecx, eax
0x41d17f:	mov	r8, rax
0x41d182:	mov	rsi, rax
0x41d185:	mov	r10, rax
0x41d188:	shr	r8, 6
0x41d18c:	and	ecx, 7
0x41d18f:	shr	rsi, 9
0x41d193:	lea	edi, [r9 - 0xc]
0x41d197:	mov	dl, cl
0x41d199:	mov	rcx, rax
0x41d19c:	and	r8d, 7
0x41d1a0:	and	esi, 7
0x41d1a3:	shr	rcx, 3
0x41d1a7:	shr	r10, 0xc
0x41d1ab:	mov	byte ptr [rsp + 0x5e], r8b
0x41d1b0:	and	ecx, 7
0x41d1b3:	mov	byte ptr [rsp + 0x4c], sil
0x41d1b8:	mov	dh, cl
0x41d1ba:	mov	qword ptr [rsp + 0x40], r10
0x41d1bf:	mov	word ptr [rsp + 0x5c], dx
0x41d1c4:	mov	dword ptr [rsp + 0x34], edi
0x41d1c8:	cmp	r11d, 4
0x41d1cc:	jne	0x41d436
0x41d1d2:	mov	rcx, r12
0x41d1d5:	mov	rdx, r12
0x41d1d8:	lea	rdi, [rsp + 0x4c]
0x41d1dd:	mov	esi, 0x13
0x41d1e2:	call	0x41cc99
0x41d1e7:	test	eax, eax
0x41d1e9:	je	0x41db79
0x41d1ef:	mov	eax, r13d
0x41d1f2:	mov	rsi, rbp
0x41d1f5:	mov	r11, r15
0x41d1f8:	mov	rbp, rbx
0x41d1fb:	lea	r13, [rax + r14]
0x41d1ff:	mov	rbx, rax
0x41d202:	add	r13, r15
0x41d205:	cmp	r13, r11
0x41d208:	ja	0x41d6e2
0x41d20e:	cmp	byte ptr [r12 + 0x1378], 0
0x41d217:	mov	r13, rbx
0x41d21a:	mov	rbx, rbp
0x41d21d:	mov	rbp, rsi
0x41d220:	je	0x41db79
0x41d226:	mov	rcx, r12
0x41d229:	mov	rdx, r12
0x41d22c:	mov	rsi, r13
0x41d22f:	mov	rdi, r15
0x41d232:	mov	qword ptr [rsp + 0x20], r13
0x41d237:	call	0x41cc99
0x41d23c:	test	eax, eax
0x41d23e:	je	0x41db79
0x41d244:	mov	r10, qword ptr [rsp + 0x20]
0x41d249:	lea	r13, [r12 + 0x800]
0x41d251:	mov	rdx, r12
0x41d254:	mov	rsi, r14
0x41d257:	mov	rcx, r13
0x41d25a:	lea	rdi, [r15 + r10]
0x41d25e:	call	0x41cc99
0x41d263:	test	eax, eax
0x41d265:	je	0x41db79
0x41d26b:	mov	r14, r12
0x41d26e:	mov	qword ptr [rsp + 0x20], r12
0x41d273:	mov	r12, rbp
0x41d276:	mov	rbp, rbx
0x41d279:	mov	rbx, r14
0x41d27c:	lea	rcx, [rsp + 0x34]
0x41d281:	lea	rdx, [rsp + 0x40]
0x41d286:	mov	rsi, r12
0x41d289:	lea	rdi, [rsp + 0x38]
0x41d28e:	call	0x41c9df
0x41d293:	test	eax, eax
0x41d295:	je	0x41db79
0x41d29b:	mov	r11, qword ptr [rsp + 0x40]
0x41d2a0:	mov	r10d, dword ptr [rsp + 0x34]
0x41d2a5:	movzx	esi, r11b
0x41d2a9:	mov	dx, word ptr [rbx + rsi*2]
0x41d2ad:	mov	esi, edx
0x41d2af:	mov	r8d, edx
0x41d2b2:	shr	si, 9
0x41d2b6:	and	r8w, 0x1ff
0x41d2bc:	and	esi, 7
0x41d2bf:	and	dh, 0x10
0x41d2c2:	jne	0x41d8c1
0x41d2c8:	lea	ecx, [rsi + 1]
0x41d2cb:	dec	r10d
0x41d2ce:	movzx	r14d, r8w
0x41d2d2:	shr	r11, cl
0x41d2d5:	sub	r10d, esi
0x41d2d8:	mov	dword ptr [rsp + 0x34], r10d
0x41d2dd:	mov	qword ptr [rsp + 0x40], r11
0x41d2e2:	cmp	r14d, 0xff
0x41d2e9:	jbe	0x41d90d
0x41d2ef:	cmp	r14d, 0x100
0x41d2f6:	jne	0x41d92c
0x41d2fc:	mov	rbx, rbp
0x41d2ff:	mov	rbp, r12
0x41d302:	mov	r12, qword ptr [rsp + 0x20]
0x41d307:	test	byte ptr [rsp + 0x18], 1
0x41d30c:	jne	0x41d02b
0x41d312:	lea	rcx, [rsp + 0x34]
0x41d317:	lea	rdx, [rsp + 0x40]
0x41d31c:	mov	rsi, rbp
0x41d31f:	lea	rdi, [rsp + 0x38]
0x41d324:	call	0x41c9df
0x41d329:	test	eax, eax
0x41d32b:	je	0x41db79
0x41d331:	mov	r11, qword ptr [rsp + 0x40]
0x41d336:	mov	esi, dword ptr [rsp + 0x34]
0x41d33a:	mov	r10, r11
0x41d33d:	mov	qword ptr [rsp + 0x18], r11
0x41d342:	sub	esi, 3
0x41d345:	shr	r11, 3
0x41d349:	shr	r10, 1
0x41d34c:	mov	qword ptr [rsp + 0x40], r11
0x41d351:	and	r10d, 3
0x41d355:	mov	dword ptr [rsp + 0x34], esi
0x41d359:	cmp	r10d, 3
0x41d35d:	je	0x41db79
0x41d363:	test	r10d, r10d
0x41d366:	jne	0x41d0c6
0x41d36c:	mov	r14, qword ptr [rsp + 0x38]
0x41d371:	xor	r11d, r11d
0x41d374:	mov	r13, r14
0x41d377:	dec	r14
0x41d37a:	cmp	esi, 8
0x41d37d:	jbe	0x41d387
0x41d37f:	sub	esi, 8
0x41d382:	mov	r11b, 1
0x41d385:	jmp	0x41d374
0x41d387:	test	r11b, r11b
0x41d38a:	je	0x41d391
0x41d38c:	mov	qword ptr [rsp + 0x38], r13
0x41d391:	mov	rsi, qword ptr [rsp + 0x38]
0x41d396:	mov	r14, rbp
0x41d399:	mov	qword ptr [rsp + 0x40], 0
0x41d3a2:	mov	dword ptr [rsp + 0x34], 0
0x41d3aa:	sub	r14, rsi
0x41d3ad:	cmp	r14, 3
0x41d3b1:	jle	0x41db79
0x41d3b7:	mov	r9w, word ptr [rsi + 2]
0x41d3bc:	mov	r11w, word ptr [rsi]
0x41d3c0:	add	rsi, 4
0x41d3c4:	mov	qword ptr [rsp + 0x38], rsi
0x41d3c9:	not	r9d
0x41d3cc:	cmp	r9w, r11w
0x41d3d0:	jne	0x41db79
0x41d3d6:	mov	r8, rbp
0x41d3d9:	movzx	edx, r9w
0x41d3dd:	sub	r8, rsi
0x41d3e0:	cmp	edx, r8d
0x41d3e3:	ja	0x41db79
0x41d3e9:	mov	rcx, qword ptr [rsp + 0x10]
0x41d3ee:	sub	rcx, rbx
0x41d3f1:	cmp	edx, ecx
0x41d3f3:	ja	0x41db79
0x41d3f9:	movzx	eax, r9w
0x41d3fd:	mov	rdi, rbx
0x41d400:	mov	rcx, rax
0x41d403:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41d405:	add	rax, qword ptr [rsp + 0x38]
0x41d40a:	mov	rbx, rdi
0x41d40d:	mov	qword ptr [rsp + 0x38], rax
0x41d412:	test	al, 3
0x41d414:	je	0x41d307
0x41d41a:	movzx	r10d, byte ptr [rax]
0x41d41e:	mov	ecx, dword ptr [rsp + 0x34]
0x41d422:	inc	rax
0x41d425:	shl	r10, cl
0x41d428:	add	ecx, 8
0x41d42b:	or	qword ptr [rsp + 0x40], r10
0x41d430:	mov	dword ptr [rsp + 0x34], ecx
0x41d434:	jmp	0x41d40d
0x41d436:	and	r10d, 7
0x41d43a:	shr	rax, 0xf
0x41d43e:	sub	r9d, 0xf
0x41d442:	mov	byte ptr [rsp + 0x54], r10b
0x41d447:	mov	qword ptr [rsp + 0x40], rax
0x41d44c:	mov	dword ptr [rsp + 0x34], r9d
0x41d451:	cmp	r11d, 5
0x41d455:	je	0x41d1d2
0x41d45b:	lea	rcx, [rsp + 0x34]
0x41d460:	lea	rdx, [rsp + 0x40]
0x41d465:	mov	rsi, rbp
0x41d468:	lea	rdi, [rsp + 0x38]
0x41d46d:	call	0x41c9df
0x41d472:	test	eax, eax
0x41d474:	je	0x41db79
0x41d47a:	mov	rax, qword ptr [rsp + 0x40]
0x41d47f:	mov	r8d, dword ptr [rsp + 0x34]
0x41d484:	mov	edx, eax
0x41d486:	mov	rcx, rax
0x41d489:	lea	esi, [r8 - 3]
0x41d48d:	and	edx, 7
0x41d490:	shr	rcx, 3
0x41d494:	mov	dword ptr [rsp + 0x34], esi
0x41d498:	mov	byte ptr [rsp + 0x53], dl
0x41d49c:	mov	qword ptr [rsp + 0x40], rcx
0x41d4a1:	cmp	r11d, 6
0x41d4a5:	je	0x41d1d2
0x41d4ab:	mov	r10, rax
0x41d4ae:	and	ecx, 7
0x41d4b1:	lea	r9d, [r8 - 6]
0x41d4b5:	shr	r10, 6
0x41d4b9:	mov	byte ptr [rsp + 0x55], cl
0x41d4bd:	mov	qword ptr [rsp + 0x40], r10
0x41d4c2:	mov	dword ptr [rsp + 0x34], r9d
0x41d4c7:	cmp	r11d, 7
0x41d4cb:	je	0x41d1d2
0x41d4d1:	mov	rdi, rax
0x41d4d4:	and	r10d, 7
0x41d4d8:	lea	edx, [r8 - 9]
0x41d4dc:	shr	rdi, 9
0x41d4e0:	mov	byte ptr [rsp + 0x52], r10b
0x41d4e5:	mov	qword ptr [rsp + 0x40], rdi
0x41d4ea:	mov	dword ptr [rsp + 0x34], edx
0x41d4ee:	cmp	r11d, 8
0x41d4f2:	je	0x41d1d2
0x41d4f8:	mov	rcx, rax
0x41d4fb:	and	edi, 7
0x41d4fe:	lea	esi, [r8 - 0xc]
0x41d502:	shr	rcx, 0xc
0x41d506:	mov	byte ptr [rsp + 0x56], dil
0x41d50b:	mov	qword ptr [rsp + 0x40], rcx
0x41d510:	mov	dword ptr [rsp + 0x34], esi
0x41d514:	cmp	r11d, 9
0x41d518:	je	0x41d1d2
0x41d51e:	shr	rax, 0xf
0x41d522:	and	ecx, 7
0x41d525:	mov	qword ptr [rsp + 0x40], rax
0x41d52a:	lea	eax, [r8 - 0xf]
0x41d52e:	mov	byte ptr [rsp + 0x51], cl
0x41d532:	mov	dword ptr [rsp + 0x34], eax
0x41d536:	cmp	r11d, 0xa
0x41d53a:	je	0x41d1d2
0x41d540:	lea	rcx, [rsp + 0x34]
0x41d545:	lea	rdx, [rsp + 0x40]
0x41d54a:	mov	rsi, rbp
0x41d54d:	lea	rdi, [rsp + 0x38]
0x41d552:	call	0x41c9df
0x41d557:	test	eax, eax
0x41d559:	je	0x41db79
0x41d55f:	mov	rax, qword ptr [rsp + 0x40]
0x41d564:	mov	r10d, dword ptr [rsp + 0x34]
0x41d569:	mov	edx, eax
0x41d56b:	mov	r8, rax
0x41d56e:	lea	r9d, [r10 - 3]
0x41d572:	and	edx, 7
0x41d575:	shr	r8, 3
0x41d579:	mov	dword ptr [rsp + 0x34], r9d
0x41d57e:	mov	byte ptr [rsp + 0x57], dl
0x41d582:	mov	qword ptr [rsp + 0x40], r8
0x41d587:	cmp	r11d, 0xb
0x41d58b:	je	0x41d1d2
0x41d591:	mov	rdi, rax
0x41d594:	and	r8d, 7
0x41d598:	lea	ecx, [r10 - 6]
0x41d59c:	shr	rdi, 6
0x41d5a0:	mov	byte ptr [rsp + 0x50], r8b
0x41d5a5:	mov	qword ptr [rsp + 0x40], rdi
0x41d5aa:	mov	dword ptr [rsp + 0x34], ecx
0x41d5ae:	cmp	r11d, 0xc
0x41d5b2:	je	0x41d1d2
0x41d5b8:	mov	rdx, rax
0x41d5bb:	and	edi, 7
0x41d5be:	lea	esi, [r10 - 9]
0x41d5c2:	shr	rdx, 9
0x41d5c6:	mov	byte ptr [rsp + 0x58], dil
0x41d5cb:	mov	qword ptr [rsp + 0x40], rdx
0x41d5d0:	mov	dword ptr [rsp + 0x34], esi
0x41d5d4:	cmp	r11d, 0xd
0x41d5d8:	je	0x41d1d2
0x41d5de:	mov	r8, rax
0x41d5e1:	and	edx, 7
0x41d5e4:	lea	r9d, [r10 - 0xc]
0x41d5e8:	shr	r8, 0xc
0x41d5ec:	mov	byte ptr [rsp + 0x4f], dl
0x41d5f0:	mov	qword ptr [rsp + 0x40], r8
0x41d5f5:	mov	dword ptr [rsp + 0x34], r9d
0x41d5fa:	cmp	r11d, 0xe
0x41d5fe:	je	0x41d1d2
0x41d604:	shr	rax, 0xf
0x41d608:	and	r8d, 7
0x41d60c:	mov	qword ptr [rsp + 0x40], rax
0x41d611:	lea	eax, [r10 - 0xf]
0x41d615:	mov	byte ptr [rsp + 0x59], r8b
0x41d61a:	mov	dword ptr [rsp + 0x34], eax
0x41d61e:	cmp	r11d, 0xf
0x41d622:	je	0x41d1d2
0x41d628:	lea	rcx, [rsp + 0x34]
0x41d62d:	lea	rdx, [rsp + 0x40]
0x41d632:	mov	rsi, rbp
0x41d635:	lea	rdi, [rsp + 0x38]
0x41d63a:	call	0x41c9df
0x41d63f:	test	eax, eax
0x41d641:	je	0x41db79
0x41d647:	mov	rax, qword ptr [rsp + 0x40]
0x41d64c:	mov	edi, dword ptr [rsp + 0x34]
0x41d650:	mov	ecx, eax
0x41d652:	mov	r10, rax
0x41d655:	lea	edx, [rdi - 3]
0x41d658:	and	ecx, 7
0x41d65b:	shr	r10, 3
0x41d65f:	mov	dword ptr [rsp + 0x34], edx
0x41d663:	mov	byte ptr [rsp + 0x4e], cl
0x41d667:	mov	qword ptr [rsp + 0x40], r10
0x41d66c:	cmp	r11d, 0x10
0x41d670:	je	0x41d1d2
0x41d676:	mov	r8, rax
0x41d679:	and	r10d, 7
0x41d67d:	lea	esi, [rdi - 6]
0x41d680:	shr	r8, 6
0x41d684:	mov	byte ptr [rsp + 0x5a], r10b
0x41d689:	mov	qword ptr [rsp + 0x40], r8
0x41d68e:	mov	dword ptr [rsp + 0x34], esi
0x41d692:	cmp	r11d, 0x11
0x41d696:	je	0x41d1d2
0x41d69c:	mov	r9, rax
0x41d69f:	and	r8d, 7
0x41d6a3:	lea	ecx, [rdi - 9]
0x41d6a6:	shr	r9, 9
0x41d6aa:	mov	byte ptr [rsp + 0x4d], r8b
0x41d6af:	mov	qword ptr [rsp + 0x40], r9
0x41d6b4:	mov	dword ptr [rsp + 0x34], ecx
0x41d6b8:	cmp	r11d, 0x12
0x41d6bc:	je	0x41d1d2
0x41d6c2:	and	r9d, 7
0x41d6c6:	shr	rax, 0xc
0x41d6ca:	lea	r11d, [rdi - 0xc]
0x41d6ce:	mov	byte ptr [rsp + 0x5b], r9b
0x41d6d3:	mov	qword ptr [rsp + 0x40], rax
0x41d6d8:	mov	dword ptr [rsp + 0x34], r11d
0x41d6dd:	jmp	0x41d1d2
0x41d6e2:	lea	rcx, [rsp + 0x34]
0x41d6e7:	lea	rdx, [rsp + 0x40]
0x41d6ec:	mov	qword ptr [rsp + 0x20], rsi
0x41d6f1:	lea	rdi, [rsp + 0x38]
0x41d6f6:	call	0x41c9df
0x41d6fb:	test	eax, eax
0x41d6fd:	je	0x41db79
0x41d703:	mov	r9, qword ptr [rsp + 0x40]
0x41d708:	movzx	edi, r9b
0x41d70c:	mov	si, word ptr [r12 + rdi*2]
0x41d711:	test	si, 0x1000
0x41d716:	jne	0x41db79
0x41d71c:	mov	r8d, esi
0x41d71f:	mov	edx, dword ptr [rsp + 0x34]
0x41d723:	mov	r10d, esi
0x41d726:	shr	r8w, 9
0x41d72b:	and	r10w, 0x1ff
0x41d731:	and	r8d, 7
0x41d735:	sub	edx, r8d
0x41d738:	lea	ecx, [r8 + 1]
0x41d73c:	shr	r9, cl
0x41d73f:	lea	eax, [rdx - 1]
0x41d742:	test	si, 0x1f0
0x41d747:	mov	rsi, qword ptr [rsp + 0x20]
0x41d74c:	mov	qword ptr [rsp + 0x40], r9
0x41d751:	mov	dword ptr [rsp + 0x34], eax
0x41d755:	jne	0x41d762
0x41d757:	mov	byte ptr [r11], r10b
0x41d75a:	inc	r11
0x41d75d:	jmp	0x41d205
0x41d762:	cmp	r10w, 0x10
0x41d767:	jne	0x41d7d5
0x41d769:	cmp	r15, r11
0x41d76c:	je	0x41db79
0x41d772:	mov	edi, r9d
0x41d775:	shr	r9, 2
0x41d779:	sub	edx, 3
0x41d77c:	mov	qword ptr [rsp + 0x40], r9
0x41d781:	and	edi, 3
0x41d784:	mov	r9, r13
0x41d787:	add	edi, 3
0x41d78a:	sub	r9, r11
0x41d78d:	mov	dword ptr [rsp + 0x34], edx
0x41d791:	cmp	edi, r9d
0x41d794:	ja	0x41db79
0x41d79a:	mov	al, byte ptr [r11 - 1]
0x41d79e:	cmp	edi, 5
0x41d7a1:	je	0x41d7b5
0x41d7a3:	cmp	edi, 6
0x41d7a6:	je	0x41d7af
0x41d7a8:	cmp	edi, 4
0x41d7ab:	jne	0x41d7c1
0x41d7ad:	jmp	0x41d7bb
0x41d7af:	mov	byte ptr [r11], al
0x41d7b2:	inc	r11
0x41d7b5:	mov	byte ptr [r11], al
0x41d7b8:	inc	r11
0x41d7bb:	mov	byte ptr [r11], al
0x41d7be:	inc	r11
0x41d7c1:	mov	byte ptr [r11], al
0x41d7c4:	add	r11, 3
0x41d7c8:	mov	byte ptr [r11 - 2], al
0x41d7cc:	mov	byte ptr [r11 - 1], al
0x41d7d0:	jmp	0x41d205
0x41d7d5:	cmp	r10w, 0x11
0x41d7da:	jne	0x41d860
0x41d7e0:	mov	r8d, r9d
0x41d7e3:	sub	edx, 4
0x41d7e6:	shr	r9, 3
0x41d7ea:	mov	dword ptr [rsp + 0x34], edx
0x41d7ee:	and	r8d, 7
0x41d7f2:	mov	rdx, r13
0x41d7f5:	lea	r10d, [r8 + 3]
0x41d7f9:	sub	rdx, r11
0x41d7fc:	mov	qword ptr [rsp + 0x40], r9
0x41d801:	cmp	r10d, edx
0x41d804:	ja	0x41db79
0x41d80a:	lea	ecx, [r8 - 1]
0x41d80e:	cmp	ecx, 6
0x41d811:	ja	0x41d84c
0x41d813:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c93d8]
0x41d81b:	mov	byte ptr [r11], 0
0x41d81f:	inc	r11
0x41d822:	mov	byte ptr [r11], 0
0x41d826:	inc	r11
0x41d829:	mov	byte ptr [r11], 0
0x41d82d:	inc	r11
0x41d830:	mov	byte ptr [r11], 0
0x41d834:	inc	r11
0x41d837:	mov	byte ptr [r11], 0
0x41d83b:	inc	r11
0x41d83e:	mov	byte ptr [r11], 0
0x41d842:	inc	r11
0x41d845:	mov	byte ptr [r11], 0
0x41d849:	inc	r11
0x41d84c:	mov	word ptr [r11], 0
0x41d852:	add	r11, 3
0x41d856:	mov	byte ptr [r11 - 1], 0
0x41d85b:	jmp	0x41d205
0x41d860:	cmp	r10w, 0x12
0x41d865:	jne	0x41db79
0x41d86b:	mov	ecx, r9d
0x41d86e:	shr	r9, 7
0x41d872:	sub	edx, 8
0x41d875:	mov	qword ptr [rsp + 0x40], r9
0x41d87a:	and	ecx, 0x7f
0x41d87d:	mov	r9, r13
0x41d880:	add	ecx, 0xb
0x41d883:	sub	r9, r11
0x41d886:	mov	dword ptr [rsp + 0x34], edx
0x41d88a:	cmp	ecx, r9d
0x41d88d:	ja	0x41db79
0x41d893:	mov	rdi, r11
0x41d896:	xor	eax, eax
0x41d898:	rep stosb	byte ptr [rdi], al
0x41d89a:	mov	r11, rdi
0x41d89d:	jmp	0x41d205
0x41d8a2:	mov	r14d, 0x4c9aa0
0x41d8a8:	mov	qword ptr [rsp + 0x20], r12
0x41d8ad:	mov	r12, rbp
0x41d8b0:	mov	r13d, 0x4c98a0
0x41d8b6:	mov	rbp, rbx
0x41d8b9:	mov	rbx, r14
0x41d8bc:	jmp	0x41d27c
0x41d8c1:	mov	ecx, esi
0x41d8c3:	mov	edi, 1
0x41d8c8:	mov	rax, r11
0x41d8cb:	add	r8w, 0x100
0x41d8d1:	shl	edi, cl
0x41d8d3:	shr	rax, 8
0x41d8d7:	movzx	r14d, r8w
0x41d8db:	sub	r10d, 8
0x41d8df:	lea	r9d, [rdi - 1]
0x41d8e3:	and	r9, rax
0x41d8e6:	add	r9, r14
0x41d8e9:	mov	r14w, word ptr [rbx + r9*2]
0x41d8ee:	mov	edx, r14d
0x41d8f1:	and	r14d, 0x1ff
0x41d8f8:	shr	dx, 9
0x41d8fc:	and	edx, 7
0x41d8ff:	lea	ecx, [rdx + 8]
0x41d902:	sub	r10d, edx
0x41d905:	shr	r11, cl
0x41d908:	jmp	0x41d2d8
0x41d90d:	cmp	qword ptr [rsp + 0x10], rbp
0x41d912:	je	0x41db79
0x41d918:	lea	r10, [rbp + 1]
0x41d91c:	mov	byte ptr [rbp], r14b
0x41d920:	prefetcht0	byte ptr [r10]
0x41d924:	mov	rbp, r10
0x41d927:	jmp	0x41d27c
0x41d92c:	cmp	r14d, 0x108
0x41d933:	ja	0x41d941
0x41d935:	sub	r14d, 0xfe
0x41d93c:	jmp	0x41d9c3
0x41d941:	cmp	r14d, 0x11d
0x41d948:	je	0x41d9bd
0x41d94a:	ja	0x41db79
0x41d950:	lea	rcx, [rsp + 0x34]
0x41d955:	lea	rdx, [rsp + 0x40]
0x41d95a:	mov	rsi, r12
0x41d95d:	lea	rdi, [rsp + 0x38]
0x41d962:	call	0x41c9df
0x41d967:	test	eax, eax
0x41d969:	je	0x41db79
0x41d96f:	sub	r14d, 0x109
0x41d976:	mov	r11d, 1
0x41d97c:	mov	r10, qword ptr [rsp + 0x40]
0x41d981:	mov	esi, r14d
0x41d984:	and	r14d, 3
0x41d988:	shr	esi, 2
0x41d98b:	lea	eax, [rsi + 1]
0x41d98e:	sub	dword ptr [rsp + 0x34], eax
0x41d992:	mov	ecx, eax
0x41d994:	shl	r14d, cl
0x41d997:	mov	ecx, esi
0x41d999:	shl	r11d, cl
0x41d99c:	mov	ecx, eax
0x41d99e:	lea	r8d, [r14 + r11*8 + 3]
0x41d9a3:	or	r14d, 0xffffffff
0x41d9a7:	shl	r14d, cl
0x41d9aa:	not	r14d
0x41d9ad:	and	r14d, r10d
0x41d9b0:	shr	r10, cl
0x41d9b3:	mov	qword ptr [rsp + 0x40], r10
0x41d9b8:	add	r14d, r8d
0x41d9bb:	jmp	0x41d9c3
0x41d9bd:	mov	r14d, 0x102
0x41d9c3:	lea	rcx, [rsp + 0x34]
0x41d9c8:	lea	rdx, [rsp + 0x40]
0x41d9cd:	mov	rsi, r12
0x41d9d0:	lea	rdi, [rsp + 0x38]
0x41d9d5:	call	0x41c9df
0x41d9da:	test	eax, eax
0x41d9dc:	je	0x41db79
0x41d9e2:	mov	r9, qword ptr [rsp + 0x40]
0x41d9e7:	mov	eax, dword ptr [rsp + 0x34]
0x41d9eb:	movzx	edi, r9b
0x41d9ef:	mov	dx, word ptr [r13 + rdi*2]
0x41d9f5:	mov	esi, edx
0x41d9f7:	mov	r11d, edx
0x41d9fa:	shr	si, 9
0x41d9fe:	and	r11w, 0x1ff
0x41da04:	and	esi, 7
0x41da07:	and	dh, 0x10
0x41da0a:	jne	0x41da1c
0x41da0c:	lea	ecx, [rsi + 1]
0x41da0f:	dec	eax
0x41da11:	movzx	r11d, r11w
0x41da15:	shr	r9, cl
0x41da18:	sub	eax, esi
0x41da1a:	jmp	0x41da64
0x41da1c:	mov	ecx, esi
0x41da1e:	mov	r8d, 1
0x41da24:	mov	rdi, r9
0x41da27:	sub	eax, 8
0x41da2a:	shl	r8d, cl
0x41da2d:	add	r11w, 0x100
0x41da33:	shr	rdi, 8
0x41da37:	lea	r10d, [r8 - 1]
0x41da3b:	movzx	edx, r11w
0x41da3f:	and	r10, rdi
0x41da42:	add	r10, rdx
0x41da45:	mov	r11w, word ptr [r13 + r10*2]
0x41da4b:	mov	esi, r11d
0x41da4e:	and	r11d, 0x1ff
0x41da55:	shr	si, 9
0x41da59:	and	esi, 7
0x41da5c:	lea	ecx, [rsi + 8]
0x41da5f:	sub	eax, esi
0x41da61:	shr	r9, cl
0x41da64:	mov	dword ptr [rsp + 0x34], eax
0x41da68:	mov	qword ptr [rsp + 0x40], r9
0x41da6d:	test	r11d, r11d
0x41da70:	jne	0x41daa0
0x41da72:	cmp	qword ptr [rsp], rbp
0x41da76:	je	0x41db79
0x41da7c:	mov	r8, qword ptr [rsp + 0x10]
0x41da81:	sub	r8, rbp
0x41da84:	cmp	r14d, r8d
0x41da87:	ja	0x41db79
0x41da8d:	mov	al, byte ptr [rbp - 1]
0x41da90:	mov	rdi, rbp
0x41da93:	mov	ecx, r14d
0x41da96:	rep stosb	byte ptr [rdi], al
0x41da98:	mov	rbp, rdi
0x41da9b:	jmp	0x41d27c
0x41daa0:	cmp	r11d, 0x1d
0x41daa4:	ja	0x41db79
0x41daaa:	cmp	r11d, 3
0x41daae:	ja	0x41dab5
0x41dab0:	inc	r11d
0x41dab3:	jmp	0x41db1c
0x41dab5:	lea	rcx, [rsp + 0x34]
0x41daba:	lea	rdx, [rsp + 0x40]
0x41dabf:	mov	rsi, r12
0x41dac2:	lea	rdi, [rsp + 0x38]
0x41dac7:	call	0x41c9df
0x41dacc:	test	eax, eax
0x41dace:	je	0x41db79
0x41dad4:	sub	r11d, 4
0x41dad8:	mov	r9d, 1
0x41dade:	mov	r10, qword ptr [rsp + 0x40]
0x41dae3:	mov	edi, r11d
0x41dae6:	and	r11d, 1
0x41daea:	shr	edi, 1
0x41daec:	lea	eax, [rdi + 1]
0x41daef:	sub	dword ptr [rsp + 0x34], eax
0x41daf3:	mov	ecx, eax
0x41daf5:	shl	r11d, cl
0x41daf8:	mov	ecx, edi
0x41dafa:	shl	r9d, cl
0x41dafd:	mov	ecx, eax
0x41daff:	lea	r8d, [r11 + r9*4 + 1]
0x41db04:	or	r11d, 0xffffffff
0x41db08:	shl	r11d, cl
0x41db0b:	not	r11d
0x41db0e:	and	r11d, r10d
0x41db11:	shr	r10, cl
0x41db14:	mov	qword ptr [rsp + 0x40], r10
0x41db19:	add	r11d, r8d
0x41db1c:	mov	rdx, rbp
0x41db1f:	sub	rdx, qword ptr [rsp]
0x41db23:	cmp	r11d, edx
0x41db26:	ja	0x41db79
0x41db28:	mov	rsi, qword ptr [rsp + 0x10]
0x41db2d:	sub	rsi, rbp
0x41db30:	cmp	r14d, esi
0x41db33:	ja	0x41db79
0x41db35:	mov	eax, r11d
0x41db38:	neg	rax
0x41db3b:	cmp	r14d, r11d
0x41db3e:	ja	0x41db55
0x41db40:	lea	rsi, [rbp + rax]
0x41db45:	mov	rdi, rbp
0x41db48:	mov	ecx, r14d
0x41db4b:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41db4d:	mov	rbp, rdi
0x41db50:	jmp	0x41d27c
0x41db55:	cmp	r11d, r14d
0x41db58:	mov	r9d, r14d
0x41db5b:	lea	rsi, [rbp + rax]
0x41db60:	mov	rdi, rbp
0x41db63:	cmovbe	r9d, r11d
0x41db67:	mov	ecx, r9d
0x41db6a:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41db6c:	mov	rbp, rdi
0x41db6f:	sub	r14d, r9d
0x41db72:	jne	0x41db55
0x41db74:	jmp	0x41d27c
0x41db79:	xor	eax, eax
0x41db7b:	jmp	0x41ddef
0x41db80:	mov	dword ptr [rsp + 0x18], 0
0x41db88:	xor	eax, eax
0x41db8a:	cmp	qword ptr [rsp + 0x10], rbx
0x41db8f:	jne	0x41ddef
0x41db95:	mov	ebx, dword ptr [rsp + 0x18]
0x41db99:	movzx	esi, byte ptr [rbp + rax - 4]
0x41db9e:	inc	rax
0x41dba1:	shl	ebx, 8
0x41dba4:	or	esi, ebx
0x41dba6:	mov	dword ptr [rsp + 0x18], esi
0x41dbaa:	cmp	rax, 4
0x41dbae:	jne	0x41db95
0x41dbb0:	xor	ecx, ecx
0x41dbb2:	mov	r15d, 1
0x41dbb8:	cmp	qword ptr [rsp + 8], 0x15af
0x41dbc1:	jbe	0x41dcc5
0x41dbc7:	mov	rdx, qword ptr [rsp]
0x41dbcb:	lea	r14, [rdx + 0x15b0]
0x41dbd2:	mov	qword ptr [rsp + 0x28], r14
0x41dbd7:	movzx	eax, byte ptr [rdx]
0x41dbda:	movzx	r14d, byte ptr [rdx + 1]
0x41dbdf:	add	rdx, 0x10
0x41dbe3:	movzx	r13d, byte ptr [rdx - 0xe]
0x41dbe8:	movzx	r12d, byte ptr [rdx - 0xd]
0x41dbed:	add	eax, r15d
0x41dbf0:	movzx	ebp, byte ptr [rdx - 0xc]
0x41dbf4:	movzx	ebx, byte ptr [rdx - 0xb]
0x41dbf8:	add	r14d, eax
0x41dbfb:	movzx	r11d, byte ptr [rdx - 0xa]
0x41dc00:	movzx	r10d, byte ptr [rdx - 9]
0x41dc05:	add	r13d, r14d
0x41dc08:	add	eax, r14d
0x41dc0b:	movzx	r15d, byte ptr [rdx - 8]
0x41dc10:	movzx	edi, byte ptr [rdx - 7]
0x41dc14:	add	r12d, r13d
0x41dc17:	add	eax, r13d
0x41dc1a:	movzx	r9d, byte ptr [rdx - 5]
0x41dc1f:	movzx	esi, byte ptr [rdx - 2]
0x41dc23:	add	ebp, r12d
0x41dc26:	add	eax, r12d
0x41dc29:	add	ebx, ebp
0x41dc2b:	add	eax, ebp
0x41dc2d:	add	r11d, ebx
0x41dc30:	add	eax, ebx
0x41dc32:	lea	r8d, [r10 + r11]
0x41dc36:	movzx	r10d, byte ptr [rdx - 6]
0x41dc3b:	add	eax, r11d
0x41dc3e:	add	r15d, r8d
0x41dc41:	mov	dword ptr [rsp], r8d
0x41dc45:	movzx	r8d, byte ptr [rdx - 4]
0x41dc4a:	mov	dword ptr [rsp + 0x10], r15d
0x41dc4f:	add	edi, dword ptr [rsp + 0x10]
0x41dc53:	add	r10d, edi
0x41dc56:	mov	dword ptr [rsp + 0x20], edi
0x41dc5a:	add	eax, dword ptr [rsp]
0x41dc5d:	add	eax, dword ptr [rsp + 0x10]
0x41dc61:	add	eax, dword ptr [rsp + 0x20]
0x41dc65:	add	r9d, r10d
0x41dc68:	movzx	edi, byte ptr [rdx - 3]
0x41dc6c:	add	eax, r10d
0x41dc6f:	add	r8d, r9d
0x41dc72:	movzx	r15d, byte ptr [rdx - 1]
0x41dc77:	add	eax, r9d
0x41dc7a:	add	edi, r8d
0x41dc7d:	add	eax, r8d
0x41dc80:	add	esi, edi
0x41dc82:	add	eax, edi
0x41dc84:	add	r15d, esi
0x41dc87:	add	eax, esi
0x41dc89:	add	eax, r15d
0x41dc8c:	add	ecx, eax
0x41dc8e:	cmp	rdx, qword ptr [rsp + 0x28]
0x41dc93:	jne	0x41dbd7
0x41dc99:	mov	eax, r15d
0x41dc9c:	mov	r14d, 0xfff1
0x41dca2:	mov	qword ptr [rsp], rdx
0x41dca6:	xor	edx, edx
0x41dca8:	div	r14d
0x41dcab:	sub	qword ptr [rsp + 8], 0x15b0
0x41dcb4:	mov	eax, ecx
0x41dcb6:	mov	r15d, edx
0x41dcb9:	xor	edx, edx
0x41dcbb:	div	r14d
0x41dcbe:	mov	ecx, edx
0x41dcc0:	jmp	0x41dbb8
0x41dcc5:	mov	rbp, qword ptr [rsp]
0x41dcc9:	mov	r14d, ecx
0x41dccc:	mov	rcx, qword ptr [rsp + 8]
0x41dcd1:	add	rcx, rbp
0x41dcd4:	mov	rdi, rcx
0x41dcd7:	sub	rdi, rbp
0x41dcda:	cmp	rdi, 0xf
0x41dcde:	jbe	0x41dd93
0x41dce4:	movzx	esi, byte ptr [rbp]
0x41dce8:	movzx	edi, byte ptr [rbp + 1]
0x41dcec:	add	rbp, 0x10
0x41dcf0:	movzx	r9d, byte ptr [rbp - 0xe]
0x41dcf5:	movzx	r10d, byte ptr [rbp - 0xd]
0x41dcfa:	add	r15d, esi
0x41dcfd:	movzx	r8d, byte ptr [rbp - 0xc]
0x41dd02:	movzx	edx, byte ptr [rbp - 0xb]
0x41dd06:	add	edi, r15d
0x41dd09:	movzx	eax, byte ptr [rbp - 0xa]
0x41dd0d:	movzx	r11d, byte ptr [rbp - 9]
0x41dd12:	add	r15d, edi
0x41dd15:	add	r9d, edi
0x41dd18:	movzx	r12d, byte ptr [rbp - 8]
0x41dd1d:	movzx	r13d, byte ptr [rbp - 7]
0x41dd22:	add	r14d, r15d
0x41dd25:	add	r10d, r9d
0x41dd28:	movzx	r15d, byte ptr [rbp - 6]
0x41dd2d:	movzx	ebx, byte ptr [rbp - 5]
0x41dd31:	add	r14d, r9d
0x41dd34:	add	r8d, r10d
0x41dd37:	movzx	edi, byte ptr [rbp - 4]
0x41dd3b:	movzx	esi, byte ptr [rbp - 3]
0x41dd3f:	add	r14d, r10d
0x41dd42:	add	edx, r8d
0x41dd45:	movzx	r9d, byte ptr [rbp - 2]
0x41dd4a:	add	r14d, r8d
0x41dd4d:	add	eax, edx
0x41dd4f:	add	r14d, edx
0x41dd52:	add	r11d, eax
0x41dd55:	add	r14d, eax
0x41dd58:	add	r12d, r11d
0x41dd5b:	add	r14d, r11d
0x41dd5e:	add	r13d, r12d
0x41dd61:	add	r14d, r12d
0x41dd64:	add	r15d, r13d
0x41dd67:	add	r14d, r13d
0x41dd6a:	add	ebx, r15d
0x41dd6d:	add	r14d, r15d
0x41dd70:	add	edi, ebx
0x41dd72:	movzx	r15d, byte ptr [rbp - 1]
0x41dd77:	add	r14d, ebx
0x41dd7a:	add	esi, edi
0x41dd7c:	add	r14d, edi
0x41dd7f:	add	r9d, esi
0x41dd82:	add	r14d, esi
0x41dd85:	add	r15d, r9d
0x41dd88:	add	r14d, r9d
0x41dd8b:	add	r14d, r15d
0x41dd8e:	jmp	0x41dcd4
0x41dd93:	mov	rbp, qword ptr [rsp + 8]
0x41dd98:	mov	r11, qword ptr [rsp]
0x41dd9c:	xor	r13d, r13d
0x41dd9f:	mov	r12, qword ptr [rsp + 8]
0x41dda4:	and	rbp, 0xfffffffffffffff0
0x41dda8:	add	r11, rbp
0x41ddab:	sub	r12, rbp
0x41ddae:	mov	r9d, r13d
0x41ddb1:	cmp	r9, r12
0x41ddb4:	jae	0x41ddc6
0x41ddb6:	movzx	ebx, byte ptr [r11 + r13]
0x41ddbb:	inc	r13
0x41ddbe:	add	r15d, ebx
0x41ddc1:	add	r14d, r15d
0x41ddc4:	jmp	0x41ddae
0x41ddc6:	mov	r10d, 0xfff1
0x41ddcc:	xor	edx, edx
0x41ddce:	mov	eax, r14d
0x41ddd1:	div	r10d
0x41ddd4:	mov	eax, r15d
0x41ddd7:	shl	edx, 0x10
0x41ddda:	mov	r8d, edx
0x41dddd:	xor	edx, edx
0x41dddf:	div	r10d
0x41dde2:	xor	eax, eax
0x41dde4:	add	r8d, edx
0x41dde7:	cmp	r8d, dword ptr [rsp + 0x18]
0x41ddec:	sete	al
0x41ddef:	add	rsp, 0x60
0x41ddf3:	pop	rbx
0x41ddf4:	pop	rbp
0x41ddf5:	pop	r12
0x41ddf7:	pop	r13
0x41ddf9:	pop	r14
0x41ddfb:	pop	r15
0x41ddfd:	ret	
0x41ddfe:	endbr64	
0x41de02:	mov	rax, qword ptr [rsi]
0x41de05:	cmp	qword ptr [rdi], rax
0x41de08:	jb	0x41de31
0x41de0a:	ja	0x41de2b
0x41de0c:	mov	rdx, qword ptr [rsi + 8]
0x41de10:	cmp	qword ptr [rdi + 8], rdx
0x41de14:	jb	0x41de2b
0x41de16:	ja	0x41de31
0x41de18:	mov	rcx, qword ptr [rsi + 0x10]
0x41de1c:	mov	rdi, qword ptr [rdi + 0x10]
0x41de20:	mov	rsi, qword ptr [rcx]
0x41de23:	mov	rdi, qword ptr [rdi]
0x41de26:	jmp	0x403be0
0x41de2b:	mov	eax, 1
0x41de30:	ret	
0x41de31:	or	eax, 0xffffffff
0x41de34:	ret	
0x41de35:	push	rbp
0x41de36:	mov	rbp, rdi
0x41de39:	push	rbx
0x41de3a:	push	rax
0x41de3b:	mov	rbx, qword ptr [rdi + 0x10]
0x41de3f:	mov	rsi, qword ptr [rdi + 0x18]
0x41de43:	mov	rdi, rbx
0x41de46:	call	0x403ae0
0x41de4b:	mov	rdi, rbp
0x41de4e:	lea	rsi, [rax + 1]
0x41de52:	call	0x41bef0
0x41de57:	pop	rdx
0x41de58:	test	eax, eax
0x41de5a:	mov	eax, 0
0x41de5f:	cmovne	rax, rbx
0x41de63:	pop	rbx
0x41de64:	pop	rbp
0x41de65:	ret	
0x41de66:	push	r14
0x41de68:	mov	eax, edi
0x41de6a:	mov	r10, rsi
0x41de6d:	mov	rdi, rdx
0x41de70:	push	r13
0x41de72:	mov	esi, ecx
0x41de74:	mov	r13d, r8d
0x41de77:	mov	r14d, r9d
0x41de7a:	push	r12
0x41de7c:	push	rbp
0x41de7d:	push	rbx
0x41de7e:	sub	rsp, 0x10
0x41de82:	mov	r12, qword ptr [rsp + 0x40]
0x41de87:	mov	rbp, qword ptr [rsp + 0x48]
0x41de8c:	mov	rbx, qword ptr [rsp + 0x50]
0x41de91:	xorps	xmm0, xmm0
0x41de94:	movups	xmmword ptr [rbx], xmm0
0x41de97:	cmp	eax, 0x2c
0x41de9a:	ja	0x41deb8
0x41de9c:	test	eax, eax
0x41de9e:	je	0x41e38b
0x41dea4:	lea	edx, [rax - 1]
0x41dea7:	cmp	edx, 0x2b
0x41deaa:	ja	0x41e38b
0x41deb0:	notrack jmp	qword ptr ds:[rdx*8 + 0x4c9410]
0x41deb8:	cmp	eax, 0x1f02
0x41debd:	je	0x41e30d
0x41dec3:	ja	0x41ded5
0x41dec5:	cmp	eax, 0x1f01
0x41deca:	je	0x41e30d
0x41ded0:	jmp	0x41e38b
0x41ded5:	cmp	eax, 0x1f20
0x41deda:	je	0x41e323
0x41dee0:	cmp	eax, 0x1f21
0x41dee5:	je	0x41e34b
0x41deeb:	jmp	0x41e38b
0x41def0:	mov	dword ptr [rbx], 1
0x41def6:	mov	esi, r14d
0x41def9:	call	0x41c03a
0x41defe:	mov	qword ptr [rbx + 8], rax
0x41df02:	mov	eax, 1
0x41df07:	jmp	0x41e39e
0x41df0c:	mov	dword ptr [rbx], 0xd
0x41df12:	mov	qword ptr [rsp], rdi
0x41df16:	call	0x41bf59
0x41df1b:	movzx	esi, ax
0x41df1e:	jmp	0x41e1ba
0x41df23:	mov	dword ptr [rbx], 0xd
0x41df29:	mov	qword ptr [rsp], rdi
0x41df2d:	call	0x41bfce
0x41df32:	mov	esi, eax
0x41df34:	jmp	0x41e1ba
0x41df39:	mov	dword ptr [rbx], 3
0x41df3f:	call	0x41bf59
0x41df44:	movzx	r13d, ax
0x41df48:	mov	eax, 1
0x41df4d:	mov	qword ptr [rbx + 8], r13
0x41df51:	jmp	0x41e39e
0x41df56:	mov	dword ptr [rbx], 3
0x41df5c:	call	0x41bfce
0x41df61:	mov	r11d, eax
0x41df64:	mov	eax, 1
0x41df69:	mov	qword ptr [rbx + 8], r11
0x41df6d:	jmp	0x41e39e
0x41df72:	mov	dword ptr [rbx], 3
0x41df78:	call	0x41bffb
0x41df7d:	mov	qword ptr [rbx + 8], rax
0x41df81:	mov	eax, 1
0x41df86:	jmp	0x41e39e
0x41df8b:	mov	dword ptr [rbx], 0xd
0x41df91:	mov	esi, 0x10
0x41df96:	jmp	0x41e1be
0x41df9b:	mov	dword ptr [rbx], 5
0x41dfa1:	call	0x41de35
0x41dfa6:	test	rax, rax
0x41dfa9:	mov	qword ptr [rbx + 8], rax
0x41dfad:	setne	r9b
0x41dfb1:	movzx	eax, r9b
0x41dfb5:	jmp	0x41e39e
0x41dfba:	mov	dword ptr [rbx], 0xd
0x41dfc0:	jmp	0x41e1ae
0x41dfc5:	mov	dword ptr [rbx], 0xd
0x41dfcb:	mov	qword ptr [rsp], rdi
0x41dfcf:	call	0x41bf3c
0x41dfd4:	movzx	esi, al
0x41dfd7:	jmp	0x41e1ba
0x41dfdc:	mov	dword ptr [rbx], 3
0x41dfe2:	call	0x41bf3c
0x41dfe7:	movzx	r8d, al
0x41dfeb:	mov	eax, 1
0x41dff0:	mov	qword ptr [rbx + 8], r8
0x41dff4:	jmp	0x41e39e
0x41dff9:	mov	dword ptr [rbx], 4
0x41dfff:	call	0x41c17c
0x41e004:	mov	qword ptr [rbx + 8], rax
0x41e008:	mov	eax, 1
0x41e00d:	jmp	0x41e39e
0x41e012:	mov	qword ptr [rsp], rdi
0x41e016:	call	0x41c02a
0x41e01b:	cmp	qword ptr [r12 + 0x68], rax
0x41e020:	mov	rdi, qword ptr [rsp]
0x41e024:	ja	0x41e039
0x41e026:	xor	edx, edx
0x41e028:	mov	esi, 0x4c9197
0x41e02d:	call	0x41be97
0x41e032:	xor	eax, eax
0x41e034:	jmp	0x41e39e
0x41e039:	add	rax, qword ptr [r12 + 0x20]
0x41e03e:	mov	dword ptr [rbx], 5
0x41e044:	mov	qword ptr [rbx + 8], rax
0x41e048:	mov	eax, 1
0x41e04d:	jmp	0x41e39e
0x41e052:	mov	qword ptr [rsp], rdi
0x41e056:	call	0x41c02a
0x41e05b:	cmp	qword ptr [r12 + 0x80], rax
0x41e063:	mov	rdi, qword ptr [rsp]
0x41e067:	ja	0x41e07c
0x41e069:	xor	edx, edx
0x41e06b:	mov	esi, 0x4c8d70
0x41e070:	call	0x41be97
0x41e075:	xor	eax, eax
0x41e077:	jmp	0x41e39e
0x41e07c:	add	rax, qword ptr [r12 + 0x38]
0x41e081:	mov	dword ptr [rbx], 5
0x41e087:	mov	qword ptr [rbx + 8], rax
0x41e08b:	mov	eax, 1
0x41e090:	jmp	0x41e39e
0x41e095:	mov	dword ptr [rbx], 3
0x41e09b:	call	0x41c109
0x41e0a0:	mov	qword ptr [rbx + 8], rax
0x41e0a4:	mov	eax, 1
0x41e0a9:	jmp	0x41e39e
0x41e0ae:	mov	dword ptr [rbx], 8
0x41e0b4:	cmp	r13d, 2
0x41e0b8:	jne	0x41e195
0x41e0be:	mov	esi, r14d
0x41e0c1:	call	0x41c03a
0x41e0c6:	mov	qword ptr [rbx + 8], rax
0x41e0ca:	mov	eax, 1
0x41e0cf:	jmp	0x41e39e
0x41e0d4:	mov	dword ptr [rbx], 7
0x41e0da:	call	0x41bf3c
0x41e0df:	movzx	edi, al
0x41e0e2:	mov	eax, 1
0x41e0e7:	mov	qword ptr [rbx + 8], rdi
0x41e0eb:	jmp	0x41e39e
0x41e0f0:	mov	dword ptr [rbx], 7
0x41e0f6:	call	0x41bf59
0x41e0fb:	movzx	esi, ax
0x41e0fe:	mov	eax, 1
0x41e103:	mov	qword ptr [rbx + 8], rsi
0x41e107:	jmp	0x41e39e
0x41e10c:	mov	dword ptr [rbx], 7
0x41e112:	call	0x41bfce
0x41e117:	mov	ecx, eax
0x41e119:	mov	eax, 1
0x41e11e:	mov	qword ptr [rbx + 8], rcx
0x41e122:	jmp	0x41e39e
0x41e127:	mov	dword ptr [rbx], 7
0x41e12d:	call	0x41bffb
0x41e132:	mov	qword ptr [rbx + 8], rax
0x41e136:	mov	eax, 1
0x41e13b:	jmp	0x41e39e
0x41e140:	mov	dword ptr [rbx], 7
0x41e146:	call	0x41c109
0x41e14b:	mov	qword ptr [rbx + 8], rax
0x41e14f:	mov	eax, 1
0x41e154:	jmp	0x41e39e
0x41e159:	mov	dword ptr [rsp + 0xc], esi
0x41e15d:	mov	qword ptr [rsp], rdi
0x41e161:	call	0x41c109
0x41e166:	mov	rdi, qword ptr [rsp]
0x41e16a:	mov	esi, dword ptr [rsp + 0xc]
0x41e16e:	cmp	rax, 0x21
0x41e172:	jne	0x41e187
0x41e174:	xor	edx, edx
0x41e176:	mov	esi, 0x4c8d90
0x41e17b:	call	0x41be97
0x41e180:	xor	eax, eax
0x41e182:	jmp	0x41e39e
0x41e187:	xor	r10d, r10d
0x41e18a:	jmp	0x41de91
0x41e18f:	mov	dword ptr [rbx], 0xa
0x41e195:	call	0x41c02a
0x41e19a:	mov	qword ptr [rbx + 8], rax
0x41e19e:	mov	eax, 1
0x41e1a3:	jmp	0x41e39e
0x41e1a8:	mov	dword ptr [rbx], 0xe
0x41e1ae:	mov	qword ptr [rsp], rdi
0x41e1b2:	call	0x41c109
0x41e1b7:	mov	rsi, rax
0x41e1ba:	mov	rdi, qword ptr [rsp]
0x41e1be:	add	rsp, 0x10
0x41e1c2:	pop	rbx
0x41e1c3:	pop	rbp
0x41e1c4:	pop	r12
0x41e1c6:	pop	r13
0x41e1c8:	pop	r14
0x41e1ca:	jmp	0x41bef0
0x41e1cf:	mov	dword ptr [rbx], 3
0x41e1d5:	mov	eax, 1
0x41e1da:	mov	qword ptr [rbx + 8], 1
0x41e1e2:	jmp	0x41e39e
0x41e1e7:	mov	dword ptr [rbx], 0xb
0x41e1ed:	call	0x41bffb
0x41e1f2:	mov	qword ptr [rbx + 8], rax
0x41e1f6:	mov	eax, 1
0x41e1fb:	jmp	0x41e39e
0x41e200:	sub	eax, 0x1a
0x41e203:	cmp	eax, 0xe
0x41e206:	ja	0x41e39c
0x41e20c:	notrack jmp	qword ptr ds:[rax*8 + 0x4c9570]
0x41e214:	call	0x41c109
0x41e219:	jmp	0x41e23f
0x41e21b:	call	0x41bf3c
0x41e220:	movzx	eax, al
0x41e223:	jmp	0x41e23f
0x41e225:	call	0x41bf59
0x41e22a:	movzx	eax, ax
0x41e22d:	jmp	0x41e23f
0x41e22f:	call	0x41bf87
0x41e234:	mov	eax, eax
0x41e236:	jmp	0x41e23f
0x41e238:	call	0x41bfce
0x41e23d:	mov	eax, eax
0x41e23f:	mov	qword ptr [rbx + 8], rax
0x41e243:	mov	eax, 1
0x41e248:	mov	dword ptr [rbx], 6
0x41e24e:	jmp	0x41e39e
0x41e253:	cmp	eax, 0x2a
0x41e256:	je	0x41e287
0x41e258:	ja	0x41e272
0x41e25a:	cmp	eax, 0x1b
0x41e25d:	je	0x41e280
0x41e25f:	cmp	eax, 0x29
0x41e262:	jne	0x41e39c
0x41e268:	call	0x41bf3c
0x41e26d:	movzx	eax, al
0x41e270:	jmp	0x41e298
0x41e272:	cmp	eax, 0x2b
0x41e275:	jne	0x41e291
0x41e277:	call	0x41bf87
0x41e27c:	mov	eax, eax
0x41e27e:	jmp	0x41e298
0x41e280:	call	0x41c109
0x41e285:	jmp	0x41e298
0x41e287:	call	0x41bf59
0x41e28c:	movzx	eax, ax
0x41e28f:	jmp	0x41e298
0x41e291:	call	0x41bfce
0x41e296:	mov	eax, eax
0x41e298:	mov	qword ptr [rbx + 8], rax
0x41e29c:	mov	eax, 1
0x41e2a1:	mov	dword ptr [rbx], 2
0x41e2a7:	jmp	0x41e39e
0x41e2ac:	mov	dword ptr [rbx], 0xa
0x41e2b2:	call	0x41bfce
0x41e2b7:	mov	eax, eax
0x41e2b9:	mov	qword ptr [rbx + 8], rax
0x41e2bd:	mov	eax, 1
0x41e2c2:	jmp	0x41e39e
0x41e2c7:	mov	dword ptr [rbx], 0xa
0x41e2cd:	call	0x41bffb
0x41e2d2:	mov	qword ptr [rbx + 8], rax
0x41e2d6:	mov	eax, 1
0x41e2db:	jmp	0x41e39e
0x41e2e0:	mov	dword ptr [rbx], 3
0x41e2e6:	mov	eax, 1
0x41e2eb:	mov	qword ptr [rbx + 8], r10
0x41e2ef:	jmp	0x41e39e
0x41e2f4:	mov	dword ptr [rbx], 0xc
0x41e2fa:	call	0x41c109
0x41e2ff:	mov	qword ptr [rbx + 8], rax
0x41e303:	mov	eax, 1
0x41e308:	jmp	0x41e39e
0x41e30d:	mov	dword ptr [rbx], 0xa
0x41e313:	call	0x41c109
0x41e318:	mov	qword ptr [rbx + 8], rax
0x41e31c:	mov	eax, 1
0x41e321:	jmp	0x41e39e
0x41e323:	call	0x41c02a
0x41e328:	mov	qword ptr [rbx + 8], rax
0x41e32c:	test	rbp, rbp
0x41e32f:	jne	0x41e33e
0x41e331:	mov	dword ptr [rbx], 0
0x41e337:	mov	eax, 1
0x41e33c:	jmp	0x41e39e
0x41e33e:	mov	dword ptr [rbx], 9
0x41e344:	mov	eax, 1
0x41e349:	jmp	0x41e39e
0x41e34b:	mov	qword ptr [rsp], rdi
0x41e34f:	call	0x41c02a
0x41e354:	test	rbp, rbp
0x41e357:	je	0x41e331
0x41e359:	cmp	qword ptr [rbp + 0xa0], rax
0x41e360:	mov	rdi, qword ptr [rsp]
0x41e364:	ja	0x41e376
0x41e366:	xor	edx, edx
0x41e368:	mov	esi, 0x4c91b1
0x41e36d:	call	0x41be97
0x41e372:	xor	eax, eax
0x41e374:	jmp	0x41e39e
0x41e376:	add	rax, qword ptr [rbp + 0x58]
0x41e37a:	mov	dword ptr [rbx], 5
0x41e380:	mov	qword ptr [rbx + 8], rax
0x41e384:	mov	eax, 1
0x41e389:	jmp	0x41e39e
0x41e38b:	or	edx, 0xffffffff
0x41e38e:	mov	esi, 0x4c91cf
0x41e393:	call	0x41be97
0x41e398:	xor	eax, eax
0x41e39a:	jmp	0x41e39e
0x41e39c:	xor	eax, eax
0x41e39e:	add	rsp, 0x10
0x41e3a2:	pop	rbx
0x41e3a3:	pop	rbp
0x41e3a4:	pop	r12
0x41e3a6:	pop	r13
0x41e3a8:	pop	r14
0x41e3aa:	ret	
0x41e3ab:	push	r15
0x41e3ad:	push	r14
0x41e3af:	push	r13
0x41e3b1:	push	r12
0x41e3b3:	mov	r12, r8
0x41e3b6:	push	rbp
0x41e3b7:	mov	rbp, rcx
0x41e3ba:	push	rbx
0x41e3bb:	sub	rsp, 0x88
0x41e3c2:	mov	rax, qword ptr [rsi + 0x10]
0x41e3c6:	cmp	rax, rdx
0x41e3c9:	ja	0x41e3dd
0x41e3cb:	mov	rbx, rsi
0x41e3ce:	mov	rcx, rdx
0x41e3d1:	mov	rsi, qword ptr [rsi + 8]
0x41e3d5:	sub	rcx, rax
0x41e3d8:	cmp	rcx, rsi
0x41e3db:	jb	0x41e3f1
0x41e3dd:	xor	edx, edx
0x41e3df:	mov	esi, 0x4c8dc0
0x41e3e4:	mov	rdi, r12
0x41e3e7:	xor	r14d, r14d
0x41e3ea:	call	rbp
0x41e3ec:	jmp	0x41e5db
0x41e3f1:	add	rax, rsi
0x41e3f4:	mov	r15, rdi
0x41e3f7:	mov	rdi, qword ptr [rdi + 0x38]
0x41e3fb:	add	rcx, qword ptr [rbx]
0x41e3fe:	sub	rax, rdx
0x41e401:	mov	edx, dword ptr [r15 + 0xc8]
0x41e408:	mov	qword ptr [rsp + 0x50], rcx
0x41e40d:	mov	qword ptr [rsp + 0x48], rdi
0x41e412:	lea	rdi, [rsp + 0x40]
0x41e417:	mov	qword ptr [rsp + 0x40], 0x4c91e7
0x41e420:	mov	qword ptr [rsp + 0x58], rax
0x41e425:	mov	dword ptr [rsp + 0x60], edx
0x41e429:	mov	qword ptr [rsp + 0x68], rbp
0x41e42e:	mov	qword ptr [rsp + 0x70], r8
0x41e433:	mov	dword ptr [rsp + 0x78], 0
0x41e43b:	call	0x41c109
0x41e440:	mov	rsi, rax
0x41e443:	test	rax, rax
0x41e446:	jne	0x41e461
0x41e448:	xor	edx, edx
0x41e44a:	mov	esi, 0x4c8df0
0x41e44f:	lea	rdi, [rsp + 0x40]
0x41e454:	xor	r14d, r14d
0x41e457:	call	0x41be97
0x41e45c:	jmp	0x41e5db
0x41e461:	lea	rdi, [rbx + 0x70]
0x41e465:	mov	rcx, r12
0x41e468:	mov	rdx, rbp
0x41e46b:	call	0x41bc0b
0x41e470:	mov	r14, rax
0x41e473:	test	rax, rax
0x41e476:	je	0x41e5db
0x41e47c:	lea	r8, [r15 + 0x38]
0x41e480:	lea	r13, [rsp + 0x30]
0x41e485:	mov	qword ptr [rsp + 0x20], 0
0x41e48e:	mov	qword ptr [rsp + 8], 0
0x41e497:	mov	qword ptr [rsp + 0x10], r8
0x41e49c:	mov	r9, qword ptr [rsp + 8]
0x41e4a1:	cmp	qword ptr [r14 + 0x10], r9
0x41e4a5:	jbe	0x41e5d6
0x41e4ab:	mov	r10, qword ptr [rsp + 8]
0x41e4b0:	mov	ecx, dword ptr [rbx + 0x2c]
0x41e4b3:	shl	r10, 4
0x41e4b7:	mov	r11, r10
0x41e4ba:	add	r11, qword ptr [r14 + 0x18]
0x41e4be:	mov	qword ptr [rsp + 0x18], r10
0x41e4c3:	mov	rsi, qword ptr [r11 + 8]
0x41e4c7:	mov	edi, dword ptr [r11 + 4]
0x41e4cb:	push	r8
0x41e4cd:	mov	r9d, dword ptr [rbx + 0x30]
0x41e4d1:	mov	r8d, dword ptr [rbx + 0x28]
0x41e4d5:	push	r13
0x41e4d7:	push	qword ptr [r15 + 8]
0x41e4db:	push	qword ptr [rsp + 0x28]
0x41e4df:	lea	rdx, [rsp + 0x60]
0x41e4e4:	call	0x41de66
0x41e4e9:	add	rsp, 0x20
0x41e4ed:	test	eax, eax
0x41e4ef:	je	0x41e5d1
0x41e4f5:	mov	rdx, qword ptr [rsp + 0x18]
0x41e4fa:	add	rdx, qword ptr [r14 + 0x18]
0x41e4fe:	mov	eax, dword ptr [rdx]
0x41e500:	cmp	eax, 0x47
0x41e503:	je	0x41e5a9
0x41e509:	ja	0x41e515
0x41e50b:	cmp	eax, 3
0x41e50e:	je	0x41e526
0x41e510:	jmp	0x41e5c7
0x41e515:	cmp	eax, 0x6e
0x41e518:	je	0x41e561
0x41e51a:	cmp	eax, 0x2007
0x41e51f:	je	0x41e561
0x41e521:	jmp	0x41e5c7
0x41e526:	cmp	qword ptr [rsp + 0x20], 0
0x41e52c:	jne	0x41e5c7
0x41e532:	lea	r8, [rsp + 0x20]
0x41e537:	mov	esi, dword ptr [rbx + 0x2c]
0x41e53a:	mov	rcx, qword ptr [rbx + 0x40]
0x41e53e:	mov	r9, rbp
0x41e541:	mov	edx, dword ptr [r15 + 0xc8]
0x41e548:	push	r8
0x41e54a:	mov	r8, r13
0x41e54d:	push	r12
0x41e54f:	mov	rdi, qword ptr [rsp + 0x20]
0x41e554:	call	0x41c206
0x41e559:	pop	rsi
0x41e55a:	pop	rdi
0x41e55b:	test	eax, eax
0x41e55d:	jne	0x41e5c7
0x41e55f:	jmp	0x41e5d1
0x41e561:	lea	rdi, [rsp + 0x28]
0x41e566:	mov	rcx, qword ptr [rbx + 0x40]
0x41e56a:	mov	esi, dword ptr [rbx + 0x2c]
0x41e56d:	mov	r9, rbp
0x41e570:	mov	qword ptr [rsp + 0x28], 0
0x41e579:	mov	edx, dword ptr [r15 + 0xc8]
0x41e580:	mov	r8, r13
0x41e583:	push	rdi
0x41e584:	push	r12
0x41e586:	mov	rdi, qword ptr [rsp + 0x20]
0x41e58b:	call	0x41c206
0x41e590:	pop	rdx
0x41e591:	pop	rcx
0x41e592:	test	eax, eax
0x41e594:	je	0x41e5a2
0x41e596:	mov	rcx, qword ptr [rsp + 0x28]
0x41e59b:	test	rcx, rcx
0x41e59e:	je	0x41e5c7
0x41e5a0:	jmp	0x41e5a4
0x41e5a2:	xor	ecx, ecx
0x41e5a4:	mov	r14, rcx
0x41e5a7:	jmp	0x41e5db
0x41e5a9:	mov	r9, r12
0x41e5ac:	mov	r8, rbp
0x41e5af:	mov	rcx, r13
0x41e5b2:	mov	rsi, rbx
0x41e5b5:	mov	rdi, r15
0x41e5b8:	call	0x41e5f0
0x41e5bd:	test	rax, rax
0x41e5c0:	je	0x41e5c7
0x41e5c2:	mov	qword ptr [rsp + 0x20], rax
0x41e5c7:	inc	qword ptr [rsp + 8]
0x41e5cc:	jmp	0x41e49c
0x41e5d1:	xor	r14d, r14d
0x41e5d4:	jmp	0x41e5db
0x41e5d6:	mov	r14, qword ptr [rsp + 0x20]
0x41e5db:	add	rsp, 0x88
0x41e5e2:	mov	rax, r14
0x41e5e5:	pop	rbx
0x41e5e6:	pop	rbp
0x41e5e7:	pop	r12
0x41e5e9:	pop	r13
0x41e5eb:	pop	r14
0x41e5ed:	pop	r15
0x41e5ef:	ret	
0x41e5f0:	mov	eax, dword ptr [rdx]
0x41e5f2:	mov	r10, rdi
0x41e5f5:	mov	r11, r8
0x41e5f8:	cmp	eax, 0x31
0x41e5fb:	je	0x41e602
0x41e5fd:	cmp	eax, 0x47
0x41e600:	jne	0x41e660
0x41e602:	cmp	dword ptr [rdx + 4], 0x20
0x41e606:	je	0x41e660
0x41e608:	push	rax
0x41e609:	mov	edi, dword ptr [rcx]
0x41e60b:	cmp	edi, 8
0x41e60e:	jne	0x41e616
0x41e610:	mov	rdx, qword ptr [rcx + 8]
0x41e614:	jmp	0x41e633
0x41e616:	mov	edx, edi
0x41e618:	and	edx, 0xfffffffb
0x41e61b:	cmp	edx, 3
0x41e61e:	jne	0x41e626
0x41e620:	mov	rdx, qword ptr [rcx + 8]
0x41e624:	jmp	0x41e64c
0x41e626:	cmp	edi, 9
0x41e629:	jne	0x41e65c
0x41e62b:	mov	rdx, qword ptr [rcx + 8]
0x41e62f:	mov	r10, qword ptr [r10 + 8]
0x41e633:	mov	rsi, qword ptr [r10 + 0x30]
0x41e637:	mov	rdi, qword ptr [r10 + 0x28]
0x41e63b:	call	0x41bbb3
0x41e640:	mov	rsi, rax
0x41e643:	test	rax, rax
0x41e646:	je	0x41e65c
0x41e648:	sub	rdx, qword ptr [rax + 0x18]
0x41e64c:	mov	r8, r9
0x41e64f:	mov	rcx, r11
0x41e652:	mov	rdi, r10
0x41e655:	pop	r9
0x41e657:	jmp	0x41e3ab
0x41e65c:	xor	eax, eax
0x41e65e:	pop	rdx
0x41e65f:	ret	
0x41e660:	xor	eax, eax
0x41e662:	ret	
0x41e663:	push	r15
0x41e665:	mov	r15, rdx
0x41e668:	push	r14
0x41e66a:	push	r13
0x41e66c:	mov	r13d, r8d
0x41e66f:	push	r12
0x41e671:	mov	r12, rcx
0x41e674:	push	rbp
0x41e675:	push	rbx
0x41e676:	sub	rsp, 0xb8
0x41e67d:	mov	rbx, qword ptr [rsp + 0x100]
0x41e685:	mov	qword ptr [rsp + 0x10], rdi
0x41e68a:	mov	qword ptr [rsp + 0x18], rsi
0x41e68f:	mov	r14, qword ptr [rsp + 0xf0]
0x41e697:	lea	rax, [rbx + 0x70]
0x41e69b:	mov	qword ptr [rsp + 0x20], r9
0x41e6a0:	mov	qword ptr [rsp + 0x28], rax
0x41e6a5:	cmp	qword ptr [r15 + 0x18], 0
0x41e6aa:	je	0x41e9dc
0x41e6b0:	mov	rdi, r15
0x41e6b3:	call	0x41c109
0x41e6b8:	mov	rsi, rax
0x41e6bb:	test	rax, rax
0x41e6be:	je	0x41e9dc
0x41e6c4:	mov	rcx, qword ptr [rsp + 0xf8]
0x41e6cc:	mov	rdi, qword ptr [rsp + 0x28]
0x41e6d1:	mov	rdx, r14
0x41e6d4:	call	0x41bc0b
0x41e6d9:	mov	rbp, rax
0x41e6dc:	test	rax, rax
0x41e6df:	jne	0x41e6e8
0x41e6e1:	xor	eax, eax
0x41e6e3:	jmp	0x41e9e1
0x41e6e8:	cmp	qword ptr [rsp + 0x110], 0
0x41e6f1:	je	0x41e700
0x41e6f3:	mov	ecx, dword ptr [rax + 8]
0x41e6f6:	mov	rdx, qword ptr [rsp + 0x110]
0x41e6fe:	mov	dword ptr [rdx], ecx
0x41e700:	mov	ecx, 0xe
0x41e705:	xor	eax, eax
0x41e707:	lea	rdi, [rsp + 0x78]
0x41e70c:	xor	r10d, r10d
0x41e70f:	rep stosd	dword ptr [rdi], eax
0x41e711:	mov	dword ptr [rsp + 0x30], 0
0x41e719:	xorps	xmm0, xmm0
0x41e71c:	mov	dword ptr [rsp + 0xc], 0
0x41e724:	mov	dword ptr [rsp + 0x34], r13d
0x41e729:	mov	r13, r10
0x41e72c:	movups	xmmword ptr [rsp + 0x58], xmm0
0x41e731:	movups	xmmword ptr [rsp + 0x48], xmm0
0x41e736:	cmp	qword ptr [rbp + 0x10], r13
0x41e73a:	jbe	0x41e897
0x41e740:	mov	rdx, r13
0x41e743:	mov	ecx, dword ptr [rbx + 0x2c]
0x41e746:	shl	rdx, 4
0x41e74a:	mov	rax, rdx
0x41e74d:	add	rax, qword ptr [rbp + 0x18]
0x41e751:	mov	qword ptr [rsp + 0x38], rdx
0x41e756:	mov	rdx, r15
0x41e759:	mov	rsi, qword ptr [rax + 8]
0x41e75d:	mov	edi, dword ptr [rax + 4]
0x41e760:	push	r8
0x41e762:	mov	r9d, dword ptr [rbx + 0x30]
0x41e766:	mov	r8d, dword ptr [rbx + 0x28]
0x41e76a:	lea	r10, [rsp + 0x70]
0x41e76f:	push	r10
0x41e771:	push	qword ptr [rsp + 0x30]
0x41e775:	push	r12
0x41e777:	call	0x41de66
0x41e77c:	add	rsp, 0x20
0x41e780:	test	eax, eax
0x41e782:	je	0x41e9e1
0x41e788:	mov	rcx, qword ptr [rbp + 0x18]
0x41e78c:	mov	rdi, qword ptr [rsp + 0x38]
0x41e791:	mov	edi, dword ptr [rcx + rdi]
0x41e794:	cmp	edi, 0x55
0x41e797:	je	0x41e7d7
0x41e799:	ja	0x41e7bb
0x41e79b:	cmp	edi, 0x10
0x41e79e:	je	0x41e7eb
0x41e7a0:	ja	0x41e7ac
0x41e7a2:	cmp	edi, 3
0x41e7a5:	je	0x41e815
0x41e7a7:	jmp	0x41e88f
0x41e7ac:	cmp	edi, 0x12
0x41e7af:	jbe	0x41e7d7
0x41e7b1:	cmp	edi, 0x1b
0x41e7b4:	je	0x41e82f
0x41e7b6:	jmp	0x41e88f
0x41e7bb:	cmp	edi, 0x73
0x41e7be:	je	0x41e861
0x41e7c4:	cmp	edi, 0x74
0x41e7c7:	je	0x41e879
0x41e7cd:	cmp	edi, 0x72
0x41e7d0:	je	0x41e849
0x41e7d2:	jmp	0x41e88f
0x41e7d7:	lea	rdx, [rsp + 0x78]
0x41e7dc:	lea	rsi, [rsp + 0x68]
0x41e7e1:	call	0x42c440
0x41e7e6:	jmp	0x41e88f
0x41e7eb:	cmp	dword ptr [rbp + 8], 0x11
0x41e7ef:	jne	0x41e88f
0x41e7f5:	mov	r11d, dword ptr [rsp + 0x68]
0x41e7fa:	cmp	r11d, 3
0x41e7fe:	je	0x41e80a
0x41e800:	cmp	r11d, 0xa
0x41e804:	jne	0x41e88f
0x41e80a:	mov	rdx, qword ptr [rsp + 0x70]
0x41e80f:	mov	qword ptr [rbx + 0x38], rdx
0x41e813:	jmp	0x41e88f
0x41e815:	cmp	dword ptr [rbp + 8], 0x11
0x41e819:	jne	0x41e88f
0x41e81b:	movups	xmm1, xmmword ptr [rsp + 0x68]
0x41e820:	mov	dword ptr [rsp + 0xc], 1
0x41e828:	movups	xmmword ptr [rsp + 0x58], xmm1
0x41e82d:	jmp	0x41e88f
0x41e82f:	cmp	dword ptr [rbp + 8], 0x11
0x41e833:	jne	0x41e88f
0x41e835:	movups	xmm2, xmmword ptr [rsp + 0x68]
0x41e83a:	mov	dword ptr [rsp + 0x30], 1
0x41e842:	movups	xmmword ptr [rsp + 0x48], xmm2
0x41e847:	jmp	0x41e88f
0x41e849:	cmp	dword ptr [rbp + 8], 0x11
0x41e84d:	jne	0x41e88f
0x41e84f:	cmp	dword ptr [rsp + 0x68], 0xa
0x41e854:	jne	0x41e88f
0x41e856:	mov	rsi, qword ptr [rsp + 0x70]
0x41e85b:	mov	qword ptr [rbx + 0x40], rsi
0x41e85f:	jmp	0x41e88f
0x41e861:	cmp	dword ptr [rbp + 8], 0x11
0x41e865:	jne	0x41e88f
0x41e867:	cmp	dword ptr [rsp + 0x68], 0xa
0x41e86c:	jne	0x41e88f
0x41e86e:	mov	r8, qword ptr [rsp + 0x70]
0x41e873:	mov	qword ptr [rbx + 0x48], r8
0x41e877:	jmp	0x41e88f
0x41e879:	cmp	dword ptr [rbp + 8], 0x11
0x41e87d:	jne	0x41e88f
0x41e87f:	cmp	dword ptr [rsp + 0x68], 0xa
0x41e884:	jne	0x41e88f
0x41e886:	mov	r9, qword ptr [rsp + 0x70]
0x41e88b:	mov	qword ptr [rbx + 0x50], r9
0x41e88f:	inc	r13
0x41e892:	jmp	0x41e736
0x41e897:	cmp	dword ptr [rsp + 0xc], 0
0x41e89c:	mov	r13d, dword ptr [rsp + 0x34]
0x41e8a1:	jne	0x41e8ac
0x41e8a3:	cmp	dword ptr [rsp + 0x30], 0
0x41e8a8:	je	0x41e90f
0x41e8aa:	jmp	0x41e8de
0x41e8ac:	lea	r8, [rbx + 0x58]
0x41e8b0:	mov	esi, dword ptr [rbx + 0x2c]
0x41e8b3:	mov	rcx, qword ptr [rbx + 0x40]
0x41e8b7:	mov	rdi, r12
0x41e8ba:	push	r8
0x41e8bc:	mov	r9, r14
0x41e8bf:	mov	edx, r13d
0x41e8c2:	push	qword ptr [rsp + 0x100]
0x41e8c9:	lea	r8, [rsp + 0x68]
0x41e8ce:	call	0x41c206
0x41e8d3:	pop	rsi
0x41e8d4:	pop	rdi
0x41e8d5:	test	eax, eax
0x41e8d7:	jne	0x41e8a3
0x41e8d9:	jmp	0x41e6e1
0x41e8de:	lea	r9, [rbx + 0x60]
0x41e8e2:	mov	rcx, qword ptr [rbx + 0x40]
0x41e8e6:	mov	esi, dword ptr [rbx + 0x2c]
0x41e8e9:	mov	edx, r13d
0x41e8ec:	push	r9
0x41e8ee:	mov	rdi, r12
0x41e8f1:	mov	r9, r14
0x41e8f4:	push	qword ptr [rsp + 0x100]
0x41e8fb:	lea	r8, [rsp + 0x58]
0x41e900:	call	0x41c206
0x41e905:	pop	rdx
0x41e906:	pop	rcx
0x41e907:	test	eax, eax
0x41e909:	je	0x41e6e1
0x41e90f:	mov	esi, dword ptr [rbp + 8]
0x41e912:	cmp	esi, 0x11
0x41e915:	je	0x41e91c
0x41e917:	cmp	esi, 0x2e
0x41e91a:	jne	0x41e96e
0x41e91c:	push	qword ptr [rsp + 0x108]
0x41e923:	mov	r8, rbx
0x41e926:	mov	ecx, r13d
0x41e929:	mov	rsi, r12
0x41e92c:	push	qword ptr [rsp + 0x100]
0x41e933:	push	r14
0x41e935:	push	rbx
0x41e936:	push	0x422d6a
0x41e93b:	lea	r11, [rsp + 0xa0]
0x41e943:	push	r11
0x41e945:	mov	r9, qword ptr [rsp + 0xa8]
0x41e94d:	mov	rdx, qword ptr [rsp + 0x48]
0x41e952:	mov	rdi, qword ptr [rsp + 0x40]
0x41e957:	call	0x41c2dd
0x41e95c:	add	rsp, 0x30
0x41e960:	test	eax, eax
0x41e962:	je	0x41e6e1
0x41e968:	cmp	dword ptr [rbp + 8], 0x11
0x41e96c:	je	0x41e97a
0x41e96e:	cmp	dword ptr [rbp + 0xc], 0
0x41e972:	je	0x41e6a5
0x41e978:	jmp	0x41e99a
0x41e97a:	cmp	dword ptr [rsp + 0xa8], 0
0x41e982:	jne	0x41e9dc
0x41e984:	cmp	dword ptr [rsp + 0x80], 0
0x41e98c:	je	0x41e96e
0x41e98e:	cmp	dword ptr [rsp + 0x90], 0
0x41e996:	je	0x41e96e
0x41e998:	jmp	0x41e9dc
0x41e99a:	push	rax
0x41e99b:	mov	r8d, r13d
0x41e99e:	mov	rcx, r12
0x41e9a1:	mov	rdx, r15
0x41e9a4:	push	0
0x41e9a6:	push	qword ptr [rsp + 0x118]
0x41e9ad:	push	rbx
0x41e9ae:	push	qword ptr [rsp + 0x118]
0x41e9b5:	push	r14
0x41e9b7:	mov	r9, qword ptr [rsp + 0x50]
0x41e9bc:	mov	rsi, qword ptr [rsp + 0x48]
0x41e9c1:	mov	rdi, qword ptr [rsp + 0x40]
0x41e9c6:	call	0x41e663
0x41e9cb:	add	rsp, 0x30
0x41e9cf:	test	eax, eax
0x41e9d1:	jne	0x41e6a5
0x41e9d7:	jmp	0x41e6e1
0x41e9dc:	mov	eax, 1
0x41e9e1:	add	rsp, 0xb8
0x41e9e8:	pop	rbx
0x41e9e9:	pop	rbp
0x41e9ea:	pop	r12
0x41e9ec:	pop	r13
0x41e9ee:	pop	r14
0x41e9f0:	pop	r15
0x41e9f2:	ret	
0x41e9f3:	nop	
0x41e9f4:	endbr64	
0x41e9f8:	push	rbp
0x41e9f9:	mov	rbp, rdi
0x41e9fc:	call	0x430b50
0x41ea01:	mov	rdi, rbp
0x41ea04:	mov	esi, 0x48
0x41ea09:	pop	rbp
0x41ea0a:	jmp	0x440230
0x41ea0f:	nop	
0x41ea10:	endbr64	
0x41ea14:	mov	rcx, qword ptr [rdi + 0x18]
0x41ea18:	mov	eax, esi
0x41ea1a:	xor	edx, edx
0x41ea1c:	test	rcx, rcx
0x41ea1f:	je	0x41ea35
0x41ea21:	cmp	dword ptr [rcx + 4], edx
0x41ea24:	jbe	0x41ea35
0x41ea26:	cmp	eax, dword ptr [rcx + rdx*8 + 8]
0x41ea2a:	jl	0x41ea30
0x41ea2c:	add	eax, dword ptr [rcx + rdx*8 + 0xc]
0x41ea30:	inc	rdx
0x41ea33:	jmp	0x41ea1c
0x41ea35:	ret	
0x41ea36:	endbr64	
0x41ea3a:	movsxd	rax, dword ptr [rdi + 0x10]
0x41ea3e:	cmp	eax, dword ptr [rdi + 0x14]
0x41ea41:	jl	0x41ea58
0x41ea43:	push	rax
0x41ea44:	mov	edx, 0x4c4577
0x41ea49:	mov	esi, 0x372
0x41ea4e:	mov	edi, 0x4c427c
0x41ea53:	call	0x415bba
0x41ea58:	mov	rdx, qword ptr [rdi + 8]
0x41ea5c:	mov	byte ptr [rdx + rax], 0
0x41ea60:	ret	
0x41ea61:	nop	
0x41ea62:	endbr64	
0x41ea66:	push	r14
0x41ea68:	mov	r14, rsi
0x41ea6b:	push	r13
0x41ea6d:	push	r12
0x41ea6f:	mov	r12, rdi
0x41ea72:	push	rbp
0x41ea73:	push	rbx
0x41ea74:	cmp	qword ptr [rdi], 0
0x41ea78:	je	0x41ebaf
0x41ea7e:	mov	rbp, qword ptr [r12]
0x41ea82:	mov	rdi, r14
0x41ea85:	mov	rsi, qword ptr [rbp]
0x41ea89:	call	qword ptr [r12 + 8]
0x41ea8e:	mov	r13d, eax
0x41ea91:	test	eax, eax
0x41ea93:	je	0x41ebaf
0x41ea99:	mov	rbx, qword ptr [rbp + 0x18]
0x41ea9d:	cmovs	rbx, qword ptr [rbp + 0x10]
0x41eaa2:	test	rbx, rbx
0x41eaa5:	je	0x41ebaf
0x41eaab:	mov	rsi, qword ptr [rbx]
0x41eaae:	mov	rdi, r14
0x41eab1:	call	qword ptr [r12 + 8]
0x41eab6:	test	eax, eax
0x41eab8:	jne	0x41ead4
0x41eaba:	test	r13d, r13d
0x41eabd:	jns	0x41eae8
0x41eabf:	mov	rcx, qword ptr [rbx + 0x18]
0x41eac3:	mov	qword ptr [rbx + 0x18], rbp
0x41eac7:	mov	qword ptr [rbp + 0x10], rcx
0x41eacb:	mov	qword ptr [r12], rbx
0x41eacf:	jmp	0x41ebaf
0x41ead4:	jns	0x41eadf
0x41ead6:	cmp	qword ptr [rbx + 0x10], 0
0x41eadb:	jne	0x41eafd
0x41eadd:	jmp	0x41eaba
0x41eadf:	cmp	qword ptr [rbx + 0x18], 0
0x41eae4:	jne	0x41eafd
0x41eae6:	jmp	0x41eaba
0x41eae8:	mov	r14, qword ptr [rbx + 0x10]
0x41eaec:	mov	qword ptr [rbx + 0x10], rbp
0x41eaf0:	mov	qword ptr [rbp + 0x18], r14
0x41eaf4:	mov	qword ptr [r12], rbx
0x41eaf8:	jmp	0x41ebaf
0x41eafd:	mov	esi, r13d
0x41eb00:	mov	ecx, eax
0x41eb02:	shr	esi, 0x1f
0x41eb05:	shr	ecx, 0x1f
0x41eb08:	test	r13d, eax
0x41eb0b:	jns	0x41eb1f
0x41eb0d:	mov	r8, qword ptr [rbx + 0x10]
0x41eb11:	mov	rsi, qword ptr [r8 + 0x18]
0x41eb15:	mov	qword ptr [r8 + 0x18], rbx
0x41eb19:	mov	qword ptr [rbx + 0x10], rsi
0x41eb1d:	jmp	0x41eb5d
0x41eb1f:	test	r13d, r13d
0x41eb22:	setg	dl
0x41eb25:	test	eax, eax
0x41eb27:	setg	al
0x41eb2a:	test	dl, dl
0x41eb2c:	je	0x41eb44
0x41eb2e:	test	al, al
0x41eb30:	je	0x41eb44
0x41eb32:	mov	r10, qword ptr [rbx + 0x18]
0x41eb36:	mov	rdi, qword ptr [r10 + 0x10]
0x41eb3a:	mov	qword ptr [r10 + 0x10], rbx
0x41eb3e:	mov	qword ptr [rbx + 0x18], rdi
0x41eb42:	jmp	0x41eb96
0x41eb44:	test	sil, sil
0x41eb47:	je	0x41eb76
0x41eb49:	test	al, al
0x41eb4b:	je	0x41eb76
0x41eb4d:	mov	r8, qword ptr [rbx + 0x18]
0x41eb51:	mov	r9, qword ptr [r8 + 0x10]
0x41eb55:	mov	qword ptr [r8 + 0x10], rbx
0x41eb59:	mov	qword ptr [rbx + 0x18], r9
0x41eb5d:	mov	qword ptr [rbp + 0x10], r8
0x41eb61:	mov	rbx, qword ptr [r8 + 0x18]
0x41eb65:	mov	qword ptr [r8 + 0x18], rbp
0x41eb69:	mov	qword ptr [rbp + 0x10], rbx
0x41eb6d:	mov	qword ptr [r12], r8
0x41eb71:	jmp	0x41ea7e
0x41eb76:	test	cl, cl
0x41eb78:	je	0x41ea7e
0x41eb7e:	test	dl, dl
0x41eb80:	je	0x41ea7e
0x41eb86:	mov	r10, qword ptr [rbx + 0x10]
0x41eb8a:	mov	r11, qword ptr [r10 + 0x18]
0x41eb8e:	mov	qword ptr [r10 + 0x18], rbx
0x41eb92:	mov	qword ptr [rbx + 0x10], r11
0x41eb96:	mov	qword ptr [rbp + 0x18], r10
0x41eb9a:	mov	r13, qword ptr [r10 + 0x10]
0x41eb9e:	mov	qword ptr [r10 + 0x10], rbp
0x41eba2:	mov	qword ptr [rbp + 0x18], r13
0x41eba6:	mov	qword ptr [r12], r10
0x41ebaa:	jmp	0x41ea7e
0x41ebaf:	pop	rbx
0x41ebb0:	pop	rbp
0x41ebb1:	pop	r12
0x41ebb3:	pop	r13
0x41ebb5:	pop	r14
0x41ebb7:	ret	
0x41ebb8:	endbr64	
0x41ebbc:	push	r14
0x41ebbe:	mov	r14d, esi
0x41ebc1:	push	r13
0x41ebc3:	push	r12
0x41ebc5:	mov	r12, rdi
0x41ebc8:	push	rbp
0x41ebc9:	push	rbx
0x41ebca:	cmp	qword ptr [rdi], 0
0x41ebce:	je	0x41ed03
0x41ebd4:	mov	rbp, qword ptr [r12]
0x41ebd8:	mov	edi, r14d
0x41ebdb:	mov	esi, dword ptr [rbp]
0x41ebde:	call	qword ptr [r12 + 8]
0x41ebe3:	mov	r13d, eax
0x41ebe6:	test	eax, eax
0x41ebe8:	je	0x41ed03
0x41ebee:	mov	rbx, qword ptr [rbp + 0x18]
0x41ebf2:	cmovs	rbx, qword ptr [rbp + 0x10]
0x41ebf7:	test	rbx, rbx
0x41ebfa:	je	0x41ed03
0x41ec00:	mov	esi, dword ptr [rbx]
0x41ec02:	mov	edi, r14d
0x41ec05:	call	qword ptr [r12 + 8]
0x41ec0a:	test	eax, eax
0x41ec0c:	jne	0x41ec28
0x41ec0e:	test	r13d, r13d
0x41ec11:	jns	0x41ec3c
0x41ec13:	mov	rcx, qword ptr [rbx + 0x18]
0x41ec17:	mov	qword ptr [rbx + 0x18], rbp
0x41ec1b:	mov	qword ptr [rbp + 0x10], rcx
0x41ec1f:	mov	qword ptr [r12], rbx
0x41ec23:	jmp	0x41ed03
0x41ec28:	jns	0x41ec33
0x41ec2a:	cmp	qword ptr [rbx + 0x10], 0
0x41ec2f:	jne	0x41ec51
0x41ec31:	jmp	0x41ec0e
0x41ec33:	cmp	qword ptr [rbx + 0x18], 0
0x41ec38:	jne	0x41ec51
0x41ec3a:	jmp	0x41ec0e
0x41ec3c:	mov	r14, qword ptr [rbx + 0x10]
0x41ec40:	mov	qword ptr [rbx + 0x10], rbp
0x41ec44:	mov	qword ptr [rbp + 0x18], r14
0x41ec48:	mov	qword ptr [r12], rbx
0x41ec4c:	jmp	0x41ed03
0x41ec51:	mov	esi, r13d
0x41ec54:	mov	ecx, eax
0x41ec56:	shr	esi, 0x1f
0x41ec59:	shr	ecx, 0x1f
0x41ec5c:	test	r13d, eax
0x41ec5f:	jns	0x41ec73
0x41ec61:	mov	r8, qword ptr [rbx + 0x10]
0x41ec65:	mov	rsi, qword ptr [r8 + 0x18]
0x41ec69:	mov	qword ptr [r8 + 0x18], rbx
0x41ec6d:	mov	qword ptr [rbx + 0x10], rsi
0x41ec71:	jmp	0x41ecb1
0x41ec73:	test	r13d, r13d
0x41ec76:	setg	dl
0x41ec79:	test	eax, eax
0x41ec7b:	setg	al
0x41ec7e:	test	dl, dl
0x41ec80:	je	0x41ec98
0x41ec82:	test	al, al
0x41ec84:	je	0x41ec98
0x41ec86:	mov	r10, qword ptr [rbx + 0x18]
0x41ec8a:	mov	rdi, qword ptr [r10 + 0x10]
0x41ec8e:	mov	qword ptr [r10 + 0x10], rbx
0x41ec92:	mov	qword ptr [rbx + 0x18], rdi
0x41ec96:	jmp	0x41ecea
0x41ec98:	test	sil, sil
0x41ec9b:	je	0x41ecca
0x41ec9d:	test	al, al
0x41ec9f:	je	0x41ecca
0x41eca1:	mov	r8, qword ptr [rbx + 0x18]
0x41eca5:	mov	r9, qword ptr [r8 + 0x10]
0x41eca9:	mov	qword ptr [r8 + 0x10], rbx
0x41ecad:	mov	qword ptr [rbx + 0x18], r9
0x41ecb1:	mov	qword ptr [rbp + 0x10], r8
0x41ecb5:	mov	rbx, qword ptr [r8 + 0x18]
0x41ecb9:	mov	qword ptr [r8 + 0x18], rbp
0x41ecbd:	mov	qword ptr [rbp + 0x10], rbx
0x41ecc1:	mov	qword ptr [r12], r8
0x41ecc5:	jmp	0x41ebd4
0x41ecca:	test	cl, cl
0x41eccc:	je	0x41ebd4
0x41ecd2:	test	dl, dl
0x41ecd4:	je	0x41ebd4
0x41ecda:	mov	r10, qword ptr [rbx + 0x10]
0x41ecde:	mov	r11, qword ptr [r10 + 0x18]
0x41ece2:	mov	qword ptr [r10 + 0x18], rbx
0x41ece6:	mov	qword ptr [rbx + 0x10], r11
0x41ecea:	mov	qword ptr [rbp + 0x18], r10
0x41ecee:	mov	r13, qword ptr [r10 + 0x10]
0x41ecf2:	mov	qword ptr [r10 + 0x10], rbp
0x41ecf6:	mov	qword ptr [rbp + 0x18], r13
0x41ecfa:	mov	qword ptr [r12], r10
0x41ecfe:	jmp	0x41ebd4
0x41ed03:	pop	rbx
0x41ed04:	pop	rbp
0x41ed05:	pop	r12
0x41ed07:	pop	r13
0x41ed09:	pop	r14
0x41ed0b:	ret	
0x41ed0c:	endbr64	
0x41ed10:	push	r14
0x41ed12:	push	r13
0x41ed14:	mov	r13, rdx
0x41ed17:	push	r12
0x41ed19:	mov	r12, rsi
0x41ed1c:	push	rbp
0x41ed1d:	mov	rbp, rdi
0x41ed20:	push	rbx
0x41ed21:	mov	r14d, dword ptr [rdi + 0x28]
0x41ed25:	cmp	r12, r13
0x41ed28:	je	0x41edc2
0x41ed2e:	mov	rbx, r12
0x41ed31:	movzx	edx, byte ptr [rbx]
0x41ed34:	test	byte ptr [rdx + rdx + 0x4bc840], 1
0x41ed3c:	jne	0x41ed4b
0x41ed3e:	cmp	dl, 0xa
0x41ed41:	je	0x41ed4b
0x41ed43:	inc	rbx
0x41ed46:	cmp	r13, rbx
0x41ed49:	jne	0x41ed31
0x41ed4b:	test	r14d, r14d
0x41ed4e:	jle	0x41ed72
0x41ed50:	mov	rcx, qword ptr [rbp + 8]
0x41ed54:	mov	eax, dword ptr [rbp + 0x1c]
0x41ed57:	mov	rsi, rbx
0x41ed5a:	sub	rsi, r12
0x41ed5d:	sub	eax, dword ptr [rcx + 0xc8]
0x41ed63:	cdqe	
0x41ed65:	cmp	rsi, rax
0x41ed68:	jl	0x41ed72
0x41ed6a:	mov	rdi, rbp
0x41ed6d:	call	0x43f440
0x41ed72:	mov	rsi, r12
0x41ed75:	mov	rdx, rbx
0x41ed78:	mov	rdi, rbp
0x41ed7b:	mov	r12, r13
0x41ed7e:	call	0x4304c0
0x41ed83:	cmp	r13, rbx
0x41ed86:	je	0x41ed25
0x41ed88:	movzx	edi, byte ptr [rbx]
0x41ed8b:	test	byte ptr [rdi + rdi + 0x4bc840], 1
0x41ed93:	je	0x41edaa
0x41ed95:	mov	esi, 0x20
0x41ed9a:	mov	rdi, rbp
0x41ed9d:	inc	rbx
0x41eda0:	call	0x431ef0
0x41eda5:	cmp	r13, rbx
0x41eda8:	je	0x41edba
0x41edaa:	cmp	byte ptr [rbx], 0xa
0x41edad:	jne	0x41edba
0x41edaf:	mov	rdi, rbp
0x41edb2:	inc	rbx
0x41edb5:	call	0x43f440
0x41edba:	mov	r12, rbx
0x41edbd:	jmp	0x41ed25
0x41edc2:	pop	rbx
0x41edc3:	pop	rbp
0x41edc4:	pop	r12
0x41edc6:	pop	r13
0x41edc8:	pop	r14
0x41edca:	ret	
0x41edcb:	endbr64	
0x41edcf:	push	r12
0x41edd1:	mov	r12, rsi
0x41edd4:	push	rbp
0x41edd5:	mov	rbp, rdi
0x41edd8:	push	rcx
0x41edd9:	mov	eax, dword ptr [rdi + 0x44]
0x41eddc:	cmp	eax, 1
0x41eddf:	je	0x41edfe
0x41ede1:	cmp	eax, 2
0x41ede4:	je	0x41ee1a
0x41ede6:	test	eax, eax
0x41ede8:	je	0x41ee40
0x41edea:	mov	edx, 0x4c91f9
0x41edef:	mov	esi, 0x89e
0x41edf4:	mov	edi, 0x4c42b8
0x41edf9:	call	0x415bba
0x41edfe:	mov	esi, 0x4c91f3
0x41ee03:	call	0x430480
0x41ee08:	mov	rsi, r12
0x41ee0b:	mov	rdi, rbp
0x41ee0e:	call	0x430480
0x41ee13:	mov	esi, 0x4c488a
0x41ee18:	jmp	0x41ee34
0x41ee1a:	mov	esi, 0x4c91f3
0x41ee1f:	call	0x430480
0x41ee24:	mov	rsi, r12
0x41ee27:	mov	rdi, rbp
0x41ee2a:	call	0x430480
0x41ee2f:	mov	esi, 0x4c4892
0x41ee34:	pop	rdx
0x41ee35:	mov	rdi, rbp
0x41ee38:	pop	rbp
0x41ee39:	pop	r12
0x41ee3b:	jmp	0x430480
0x41ee40:	pop	rax
0x41ee41:	pop	rbp
0x41ee42:	pop	r12
0x41ee44:	ret	
0x41ee45:	endbr64	
0x41ee49:	mov	eax, dword ptr [rdi + 0x44]
0x41ee4c:	test	eax, eax
0x41ee4e:	je	0x41ee77
0x41ee50:	cmp	eax, 2
0x41ee53:	ja	0x41ee62
0x41ee55:	mov	rsi, qword ptr [rax*8 + 0x4c6ac0]
0x41ee5d:	jmp	0x430480
0x41ee62:	push	rax
0x41ee63:	mov	edx, 0x4c42d5
0x41ee68:	mov	esi, 0x8b1
0x41ee6d:	mov	edi, 0x4c42b8
0x41ee72:	call	0x415bba
0x41ee77:	ret	
0x41ee78:	endbr64	
0x41ee7c:	mov	rax, rdi
0x41ee7f:	cmp	rdx, 0xf
0x41ee83:	jbe	0x41eee0
0x41ee85:	lea	r8, [rdi + 0x40]
0x41ee89:	mov	rdi, qword ptr [rdi + 0x40]
0x41ee8d:	xor	ecx, ecx
0x41ee8f:	xor	r9d, r9d
0x41ee92:	test	rdi, rdi
0x41ee95:	je	0x41eebc
0x41ee97:	test	rcx, rcx
0x41ee9a:	je	0x41eeab
0x41ee9c:	mov	r10, qword ptr [rcx]
0x41ee9f:	mov	r11, qword ptr [r10 + 8]
0x41eea3:	cmp	qword ptr [rdi + 8], r11
0x41eea7:	cmovae	r8, rcx
0x41eeab:	mov	r10, rdi
0x41eeae:	mov	rcx, r8
0x41eeb1:	mov	rdi, qword ptr [rdi]
0x41eeb4:	inc	r9
0x41eeb7:	mov	r8, r10
0x41eeba:	jmp	0x41ee92
0x41eebc:	cmp	r9, 0xf
0x41eec0:	jbe	0x41eed1
0x41eec2:	mov	rdi, qword ptr [rcx]
0x41eec5:	cmp	qword ptr [rdi + 8], rdx
0x41eec9:	jae	0x41eee0
0x41eecb:	mov	r8, qword ptr [rdi]
0x41eece:	mov	qword ptr [rcx], r8
0x41eed1:	mov	rcx, qword ptr [rax + 0x40]
0x41eed5:	mov	qword ptr [rsi + 8], rdx
0x41eed9:	mov	qword ptr [rsi], rcx
0x41eedc:	mov	qword ptr [rax + 0x40], rsi
0x41eee0:	ret	
0x41eee1:	endbr64	
0x41eee5:	push	r15
0x41eee7:	mov	r15, rcx
0x41eeea:	push	r14
0x41eeec:	mov	r14, rdx
0x41eeef:	push	r13
0x41eef1:	push	r12
0x41eef3:	push	rbp
0x41eef4:	mov	rbp, rdi
0x41eef7:	push	rbx
0x41eef8:	mov	rbx, rsi
0x41eefb:	push	r8
0x41eefd:	cmp	dword ptr [rdi + 8], 0
0x41ef01:	jne	0x41ef0d
0x41ef03:	mov	r12, qword ptr [rbp + 0x40]
0x41ef07:	lea	rsi, [rbp + 0x40]
0x41ef0b:	jmp	0x41ef2f
0x41ef0d:	mov	eax, 1
0x41ef12:	xchg	dword ptr [rdi + 0x3c], eax
0x41ef15:	test	eax, eax
0x41ef17:	je	0x41ef03
0x41ef19:	jmp	0x41ef67
0x41ef1b:	mov	rdx, qword ptr [r12 + 8]
0x41ef20:	mov	rcx, qword ptr [r12]
0x41ef24:	cmp	rdx, rbx
0x41ef27:	jae	0x41ef36
0x41ef29:	mov	rsi, r12
0x41ef2c:	mov	r12, rcx
0x41ef2f:	test	r12, r12
0x41ef32:	jne	0x41ef1b
0x41ef34:	jmp	0x41ef55
0x41ef36:	add	rbx, 7
0x41ef3a:	mov	qword ptr [rsi], rcx
0x41ef3d:	and	rbx, 0xfffffffffffffff8
0x41ef41:	cmp	rdx, rbx
0x41ef44:	jbe	0x41ef55
0x41ef46:	sub	rdx, rbx
0x41ef49:	lea	rsi, [r12 + rbx]
0x41ef4d:	mov	rdi, rbp
0x41ef50:	call	0x41ee78
0x41ef55:	cmp	dword ptr [rbp + 8], 0
0x41ef59:	je	0x41ef62
0x41ef5b:	mov	dword ptr [rbp + 0x3c], 0
0x41ef62:	test	r12, r12
0x41ef65:	jne	0x41efd8
0x41ef67:	call	0x403e50
0x41ef6c:	xor	r9d, r9d
0x41ef6f:	or	r8d, 0xffffffff
0x41ef73:	xor	edi, edi
0x41ef75:	cdqe	
0x41ef77:	mov	ecx, 0x22
0x41ef7c:	mov	edx, 3
0x41ef81:	lea	r13, [rax + rbx - 1]
0x41ef86:	neg	rax
0x41ef89:	and	r13, rax
0x41ef8c:	mov	rsi, r13
0x41ef8f:	call	0x403a00
0x41ef94:	mov	r12, rax
0x41ef97:	cmp	rax, -1
0x41ef9b:	jne	0x41efb9
0x41ef9d:	xor	r12d, r12d
0x41efa0:	test	r14, r14
0x41efa3:	je	0x41efd8
0x41efa5:	call	0x403890
0x41efaa:	mov	esi, 0x4c9206
0x41efaf:	mov	rdi, r15
0x41efb2:	mov	edx, dword ptr [rax]
0x41efb4:	call	r14
0x41efb7:	jmp	0x41efd8
0x41efb9:	add	rbx, 7
0x41efbd:	and	rbx, 0xfffffffffffffff8
0x41efc1:	cmp	r13, rbx
0x41efc4:	jbe	0x41efd8
0x41efc6:	mov	rdx, r13
0x41efc9:	lea	rsi, [rax + rbx]
0x41efcd:	mov	rdi, rbp
0x41efd0:	sub	rdx, rbx
0x41efd3:	call	0x42c1a8
0x41efd8:	pop	rdx
0x41efd9:	mov	rax, r12
0x41efdc:	pop	rbx
0x41efdd:	pop	rbp
0x41efde:	pop	r12
0x41efe0:	pop	r13
0x41efe2:	pop	r14
0x41efe4:	pop	r15
0x41efe6:	ret	
0x41efe7:	push	r15
0x41efe9:	mov	rax, rcx
0x41efec:	mov	r10, rsi
0x41efef:	mov	esi, 0x18
0x41eff4:	push	r14
0x41eff6:	push	r13
0x41eff8:	mov	r13, rdi
0x41effb:	push	r12
0x41effd:	xor	r12d, r12d
0x41f000:	push	rbp
0x41f001:	push	rbx
0x41f002:	mov	rbx, rdx
0x41f005:	xor	edx, edx
0x41f007:	div	rsi
0x41f00a:	sub	rsp, 0x28
0x41f00e:	mov	qword ptr [rsp], r9
0x41f012:	mov	r14, qword ptr [rsp + 0x78]
0x41f017:	mov	r9, qword ptr [rsp + 0x68]
0x41f01c:	imul	rcx, rax, 0x18
0x41f020:	lea	rbp, [rbx + rcx]
0x41f024:	mov	rcx, rbx
0x41f027:	cmp	rcx, rbp
0x41f02a:	je	0x41f04d
0x41f02c:	mov	r11b, byte ptr [rcx + 4]
0x41f030:	and	r11d, 0xf
0x41f034:	dec	r11d
0x41f037:	cmp	r11d, 1
0x41f03b:	ja	0x41f047
0x41f03d:	cmp	word ptr [rcx + 6], 0
0x41f042:	je	0x41f047
0x41f044:	inc	r12
0x41f047:	add	rcx, 0x18
0x41f04b:	jmp	0x41f027
0x41f04d:	mov	qword ptr [rsp + 0x18], rbp
0x41f052:	imul	rbp, r12, 0x18
0x41f056:	mov	rcx, r9
0x41f059:	mov	rdi, r13
0x41f05c:	mov	rdx, qword ptr [rsp + 0x60]
0x41f061:	mov	qword ptr [rsp + 0x10], r10
0x41f066:	mov	qword ptr [rsp + 8], r8
0x41f06b:	mov	rsi, rbp
0x41f06e:	mov	qword ptr [rsp + 0x68], r9
0x41f073:	call	0x41eee1
0x41f078:	mov	r15, rax
0x41f07b:	xor	eax, eax
0x41f07d:	test	r15, r15
0x41f080:	je	0x41f165
0x41f086:	mov	r9, qword ptr [rsp + 0x18]
0x41f08b:	mov	r11, qword ptr [rsp + 0x10]
0x41f090:	xor	ecx, ecx
0x41f092:	mov	r8, qword ptr [rsp + 8]
0x41f097:	mov	r10, qword ptr [rsp + 0x68]
0x41f09c:	cmp	rbx, r9
0x41f09f:	je	0x41f137
0x41f0a5:	mov	dil, byte ptr [rbx + 4]
0x41f0a9:	and	edi, 0xf
0x41f0ac:	dec	edi
0x41f0ae:	cmp	edi, 1
0x41f0b1:	ja	0x41f12e
0x41f0b3:	cmp	word ptr [rbx + 6], 0
0x41f0b8:	je	0x41f12e
0x41f0ba:	mov	esi, dword ptr [rbx]
0x41f0bc:	cmp	rsi, qword ptr [rsp]
0x41f0c0:	jb	0x41f0e5
0x41f0c2:	mov	rdi, r10
0x41f0c5:	xor	edx, edx
0x41f0c7:	mov	esi, 0x4c8e20
0x41f0cc:	call	qword ptr [rsp + 0x60]
0x41f0d0:	mov	rdx, rbp
0x41f0d3:	mov	rsi, r15
0x41f0d6:	mov	rdi, r13
0x41f0d9:	call	0x42c1a8
0x41f0de:	xor	eax, eax
0x41f0e0:	jmp	0x41f165
0x41f0e5:	mov	eax, ecx
0x41f0e7:	add	rsi, r8
0x41f0ea:	imul	rdx, rax, 0x18
0x41f0ee:	mov	rax, qword ptr [rbx + 8]
0x41f0f2:	add	rdx, r15
0x41f0f5:	mov	qword ptr [rdx], rsi
0x41f0f8:	test	r14, r14
0x41f0fb:	je	0x41f11c
0x41f0fd:	mov	rsi, qword ptr [r14]
0x41f100:	cmp	rsi, rax
0x41f103:	ja	0x41f11c
0x41f105:	mov	rdi, qword ptr [r14 + 0x10]
0x41f109:	add	rdi, rsi
0x41f10c:	cmp	rdi, rax
0x41f10f:	jbe	0x41f11c
0x41f111:	sub	rax, rsi
0x41f114:	mov	rsi, qword ptr [r14 + 8]
0x41f118:	mov	rax, qword ptr [rsi + rax]
0x41f11c:	add	rax, r11
0x41f11f:	inc	ecx
0x41f121:	movq	xmm0, rax
0x41f126:	movhps	xmm0, qword ptr [rbx + 0x10]
0x41f12a:	movups	xmmword ptr [rdx + 8], xmm0
0x41f12e:	add	rbx, 0x18
0x41f132:	jmp	0x41f09c
0x41f137:	mov	ecx, 0x41bb45
0x41f13c:	mov	edx, 0x18
0x41f141:	mov	rsi, r12
0x41f144:	mov	rdi, r15
0x41f147:	call	0x41bd42
0x41f14c:	mov	rbx, qword ptr [rsp + 0x70]
0x41f151:	mov	eax, 1
0x41f156:	mov	qword ptr [rbx], 0
0x41f15d:	mov	qword ptr [rbx + 8], r15
0x41f161:	mov	qword ptr [rbx + 0x10], r12
0x41f165:	add	rsp, 0x28
0x41f169:	pop	rbx
0x41f16a:	pop	rbp
0x41f16b:	pop	r12
0x41f16d:	pop	r13
0x41f16f:	pop	r14
0x41f171:	pop	r15
0x41f173:	ret	
0x41f174:	push	r15
0x41f176:	push	r14
0x41f178:	mov	r14, rdi
0x41f17b:	mov	rdi, r9
0x41f17e:	push	r13
0x41f180:	mov	r13, rdx
0x41f183:	push	r12
0x41f185:	mov	r12, r8
0x41f188:	push	rbp
0x41f189:	push	rbx
0x41f18a:	sub	rsp, 0x48
0x41f18e:	mov	qword ptr [rsp + 8], rsi
0x41f193:	mov	qword ptr [rsp + 0x10], rcx
0x41f198:	mov	qword ptr [rsp + 0x28], r9
0x41f19d:	call	0x4039e0
0x41f1a2:	lea	r8, [r13 + r12]
0x41f1a7:	mov	rcx, qword ptr [rsp + 0x88]
0x41f1af:	mov	rdi, r14
0x41f1b2:	lea	r11, [r8 + rax]
0x41f1b6:	mov	rdx, qword ptr [rsp + 0x80]
0x41f1be:	mov	qword ptr [rsp + 0x20], r8
0x41f1c3:	mov	rbx, rax
0x41f1c6:	lea	r15, [r11 + 1]
0x41f1ca:	mov	qword ptr [rsp + 0x18], r11
0x41f1cf:	mov	rsi, r15
0x41f1d2:	call	0x41eee1
0x41f1d7:	mov	rbp, rax
0x41f1da:	or	eax, 0xffffffff
0x41f1dd:	test	rbp, rbp
0x41f1e0:	je	0x41f248
0x41f1e2:	mov	rsi, qword ptr [rsp + 8]
0x41f1e7:	mov	rdi, rbp
0x41f1ea:	mov	rcx, r13
0x41f1ed:	mov	rax, qword ptr [rsp + 0x18]
0x41f1f2:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f1f4:	mov	rsi, qword ptr [rsp + 0x10]
0x41f1f9:	mov	rcx, r12
0x41f1fc:	mov	rdx, qword ptr [rsp + 0x88]
0x41f204:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f206:	mov	rdi, qword ptr [rsp + 0x20]
0x41f20b:	mov	rsi, qword ptr [rsp + 0x28]
0x41f210:	mov	rcx, rbx
0x41f213:	add	rdi, rbp
0x41f216:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f218:	lea	rcx, [rsp + 0x3c]
0x41f21d:	mov	rdi, rbp
0x41f220:	mov	byte ptr [rbp + rax], 0
0x41f225:	mov	rsi, qword ptr [rsp + 0x80]
0x41f22d:	call	0x41c935
0x41f232:	mov	rdx, r15
0x41f235:	mov	rsi, rbp
0x41f238:	mov	rdi, r14
0x41f23b:	mov	dword ptr [rsp + 8], eax
0x41f23f:	call	0x42c1a8
0x41f244:	mov	eax, dword ptr [rsp + 8]
0x41f248:	add	rsp, 0x48
0x41f24c:	pop	rbx
0x41f24d:	pop	rbp
0x41f24e:	pop	r12
0x41f250:	pop	r13
0x41f252:	pop	r14
0x41f254:	pop	r15
0x41f256:	ret	
0x41f257:	push	r15
0x41f259:	push	r14
0x41f25b:	xor	r14d, r14d
0x41f25e:	push	r13
0x41f260:	push	r12
0x41f262:	mov	r12, rsi
0x41f265:	push	rbp
0x41f266:	mov	rbp, rdi
0x41f269:	push	rbx
0x41f26a:	mov	rbx, rcx
0x41f26d:	sub	rsp, 0xc8
0x41f274:	mov	qword ptr [rsp + 0x10], rdx
0x41f279:	mov	qword ptr [rsp], r8
0x41f27d:	mov	qword ptr [rsp + 8], 0
0x41f286:	lea	rsi, [rsp + 0x30]
0x41f28b:	mov	rdi, r12
0x41f28e:	call	0x403b60
0x41f293:	test	eax, eax
0x41f295:	js	0x41f3d9
0x41f29b:	mov	eax, dword ptr [rsp + 0x48]
0x41f29f:	and	eax, 0xf000
0x41f2a4:	cmp	eax, 0xa000
0x41f2a9:	jne	0x41f3d9
0x41f2af:	mov	r13d, 0x80
0x41f2b5:	mov	rcx, qword ptr [rsp]
0x41f2b9:	mov	rdx, rbx
0x41f2bc:	mov	rsi, r13
0x41f2bf:	mov	rdi, rbp
0x41f2c2:	call	0x41eee1
0x41f2c7:	mov	r15, rax
0x41f2ca:	test	rax, rax
0x41f2cd:	je	0x41f3d9
0x41f2d3:	mov	rdx, r13
0x41f2d6:	mov	rsi, rax
0x41f2d9:	mov	rdi, r12
0x41f2dc:	call	0x403950
0x41f2e1:	test	rax, rax
0x41f2e4:	jns	0x41f2f9
0x41f2e6:	mov	rdx, r13
0x41f2e9:	mov	rsi, r15
0x41f2ec:	mov	rdi, rbp
0x41f2ef:	call	0x42c1a8
0x41f2f4:	jmp	0x41f3d9
0x41f2f9:	lea	rdx, [r13 - 1]
0x41f2fd:	cmp	rdx, rax
0x41f300:	jbe	0x41f312
0x41f302:	mov	byte ptr [r15 + rax], 0
0x41f307:	cmp	byte ptr [r15], 0x2f
0x41f30b:	jne	0x41f325
0x41f30d:	jmp	0x41f3b4
0x41f312:	mov	rdx, r13
0x41f315:	mov	rsi, r15
0x41f318:	mov	rdi, rbp
0x41f31b:	add	r13, r13
0x41f31e:	call	0x42c1a8
0x41f323:	jmp	0x41f2b5
0x41f325:	mov	esi, 0x2f
0x41f32a:	mov	rdi, r12
0x41f32d:	call	0x403a60
0x41f332:	test	rax, rax
0x41f335:	je	0x41f3b4
0x41f337:	inc	rax
0x41f33a:	mov	rdi, r15
0x41f33d:	sub	rax, r12
0x41f340:	mov	qword ptr [rsp + 0x18], rax
0x41f345:	call	0x4039e0
0x41f34a:	mov	rcx, qword ptr [rsp + 0x18]
0x41f34f:	mov	rdx, rbx
0x41f352:	mov	rdi, rbp
0x41f355:	lea	rsi, [rcx + rax + 1]
0x41f35a:	mov	rcx, qword ptr [rsp]
0x41f35e:	mov	qword ptr [rsp + 0x20], rsi
0x41f363:	call	0x41eee1
0x41f368:	test	rax, rax
0x41f36b:	je	0x41f487
0x41f371:	mov	rcx, qword ptr [rsp + 0x18]
0x41f376:	mov	rdi, rax
0x41f379:	mov	rsi, r12
0x41f37c:	mov	qword ptr [rsp + 0x28], rax
0x41f381:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f383:	mov	r12, rdi
0x41f386:	mov	rdi, r15
0x41f389:	call	0x4039e0
0x41f38e:	mov	rsi, r15
0x41f391:	mov	rdi, r12
0x41f394:	mov	rdx, r13
0x41f397:	mov	rcx, rax
0x41f39a:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f39c:	mov	rsi, r15
0x41f39f:	mov	byte ptr [rdi], 0
0x41f3a2:	mov	rdi, rbp
0x41f3a5:	call	0x42c1a8
0x41f3aa:	mov	r13, qword ptr [rsp + 0x20]
0x41f3af:	mov	r15, qword ptr [rsp + 0x28]
0x41f3b4:	test	r14, r14
0x41f3b7:	je	0x41f3c9
0x41f3b9:	mov	rdx, qword ptr [rsp + 8]
0x41f3be:	mov	rsi, r14
0x41f3c1:	mov	rdi, rbp
0x41f3c4:	call	0x42c1a8
0x41f3c9:	mov	qword ptr [rsp + 8], r13
0x41f3ce:	mov	r14, r15
0x41f3d1:	mov	r12, r15
0x41f3d4:	jmp	0x41f286
0x41f3d9:	mov	esi, 0x2f
0x41f3de:	mov	rdi, r12
0x41f3e1:	call	0x403a60
0x41f3e6:	test	rax, rax
0x41f3e9:	je	0x41f3f4
0x41f3eb:	lea	rdx, [rax + 1]
0x41f3ef:	sub	rdx, r12
0x41f3f2:	jmp	0x41f3fc
0x41f3f4:	xor	edx, edx
0x41f3f6:	mov	r12d, 0x4c4893
0x41f3fc:	push	qword ptr [rsp]
0x41f3ff:	xor	r8d, r8d
0x41f402:	mov	ecx, 0x4c4893
0x41f407:	mov	rsi, r12
0x41f40a:	push	rbx
0x41f40b:	mov	rdi, rbp
0x41f40e:	mov	r9, qword ptr [rsp + 0x20]
0x41f413:	mov	qword ptr [rsp + 0x28], rdx
0x41f418:	call	0x41f174
0x41f41d:	pop	r8
0x41f41f:	pop	r9
0x41f421:	test	eax, eax
0x41f423:	mov	rdx, qword ptr [rsp + 0x18]
0x41f428:	jns	0x41f48a
0x41f42a:	push	qword ptr [rsp]
0x41f42d:	mov	r8d, 7
0x41f433:	mov	rsi, r12
0x41f436:	mov	rdi, rbp
0x41f439:	push	rbx
0x41f43a:	mov	ecx, 0x4c920b
0x41f43f:	mov	r9, qword ptr [rsp + 0x20]
0x41f444:	mov	qword ptr [rsp + 0x28], rdx
0x41f449:	call	0x41f174
0x41f44e:	pop	rsi
0x41f44f:	pop	rdi
0x41f450:	test	eax, eax
0x41f452:	mov	r8, qword ptr [rsp + 0x18]
0x41f457:	jns	0x41f48a
0x41f459:	push	qword ptr [rsp]
0x41f45c:	mov	rcx, r12
0x41f45f:	mov	edx, 0xf
0x41f464:	mov	esi, 0x4c9213
0x41f469:	push	rbx
0x41f46a:	mov	rdi, rbp
0x41f46d:	mov	r9, qword ptr [rsp + 0x20]
0x41f472:	call	0x41f174
0x41f477:	mov	r9d, 0xffffffff
0x41f47d:	pop	rdx
0x41f47e:	pop	rcx
0x41f47f:	test	eax, eax
0x41f481:	cmovs	eax, r9d
0x41f485:	jmp	0x41f48a
0x41f487:	or	eax, 0xffffffff
0x41f48a:	test	r14, r14
0x41f48d:	je	0x41f4ad
0x41f48f:	cmp	qword ptr [rsp + 8], 0
0x41f495:	je	0x41f4ad
0x41f497:	mov	rdx, qword ptr [rsp + 8]
0x41f49c:	mov	rsi, r14
0x41f49f:	mov	rdi, rbp
0x41f4a2:	mov	dword ptr [rsp], eax
0x41f4a5:	call	0x42c1a8
0x41f4aa:	mov	eax, dword ptr [rsp]
0x41f4ad:	add	rsp, 0xc8
0x41f4b4:	pop	rbx
0x41f4b5:	pop	rbp
0x41f4b6:	pop	r12
0x41f4b8:	pop	r13
0x41f4ba:	pop	r14
0x41f4bc:	pop	r15
0x41f4be:	ret	
0x41f4bf:	push	r15
0x41f4c1:	push	r14
0x41f4c3:	push	r13
0x41f4c5:	mov	r13, rdi
0x41f4c8:	mov	rdi, rcx
0x41f4cb:	push	r12
0x41f4cd:	push	rbp
0x41f4ce:	mov	rbp, rcx
0x41f4d1:	push	rbx
0x41f4d2:	mov	rbx, rdx
0x41f4d5:	sub	rsp, 0x88
0x41f4dc:	mov	qword ptr [rsp + 0x30], rsi
0x41f4e1:	mov	qword ptr [rsp + 0x50], r8
0x41f4e6:	mov	qword ptr [rsp + 0x40], r9
0x41f4eb:	call	0x41bf3c
0x41f4f0:	movzx	eax, al
0x41f4f3:	mov	qword ptr [rsp + 0x18], rax
0x41f4f8:	test	rax, rax
0x41f4fb:	je	0x41f54c
0x41f4fd:	mov	rcx, qword ptr [rbp + 0x30]
0x41f501:	mov	rdx, qword ptr [rbp + 0x28]
0x41f505:	mov	rdi, r13
0x41f508:	xor	r15d, r15d
0x41f50b:	lea	rsi, [rax*8]
0x41f513:	call	0x41eee1
0x41f518:	mov	r12, rax
0x41f51b:	test	rax, rax
0x41f51e:	je	0x41f7c2
0x41f524:	xor	r14d, r14d
0x41f527:	mov	rdi, rbp
0x41f52a:	call	0x41c109
0x41f52f:	mov	rdi, rbp
0x41f532:	mov	dword ptr [r12 + r14*8], eax
0x41f536:	call	0x41c109
0x41f53b:	mov	dword ptr [r12 + r14*8 + 4], eax
0x41f540:	inc	r14
0x41f543:	cmp	qword ptr [rsp + 0x18], r14
0x41f548:	ja	0x41f527
0x41f54a:	jmp	0x41f54f
0x41f54c:	xor	r12d, r12d
0x41f54f:	mov	rdi, rbp
0x41f552:	call	0x41c109
0x41f557:	mov	qword ptr [rsp + 0x20], rax
0x41f55c:	test	rax, rax
0x41f55f:	jne	0x41f588
0x41f561:	mov	rdx, qword ptr [rsp + 0x40]
0x41f566:	mov	rbp, qword ptr [rsp + 0xc0]
0x41f56e:	mov	r15d, 1
0x41f574:	mov	qword ptr [rdx], 0
0x41f57b:	mov	qword ptr [rbp], 0
0x41f583:	jmp	0x41f7a9
0x41f588:	mov	rsi, qword ptr [rsp + 0x20]
0x41f58d:	mov	rcx, qword ptr [rbp + 0x30]
0x41f591:	mov	rdi, r13
0x41f594:	xor	r15d, r15d
0x41f597:	mov	rdx, qword ptr [rbp + 0x28]
0x41f59b:	shl	rsi, 3
0x41f59f:	mov	qword ptr [rsp + 0x38], rsi
0x41f5a4:	call	0x41eee1
0x41f5a9:	test	rax, rax
0x41f5ac:	je	0x41f7a9
0x41f5b2:	mov	rcx, qword ptr [rsp + 0x30]
0x41f5b7:	mov	qword ptr [rsp + 8], rax
0x41f5bc:	mov	r14, rbx
0x41f5bf:	mov	qword ptr [rsp + 0x28], 0
0x41f5c8:	add	rcx, 0x38
0x41f5cc:	mov	qword ptr [rsp + 0x10], r13
0x41f5d1:	mov	qword ptr [rsp + 0x48], rcx
0x41f5d6:	mov	qword ptr [rsp + 0x68], 0
0x41f5df:	mov	r13, qword ptr [rsp + 0x50]
0x41f5e4:	xor	r15d, r15d
0x41f5e7:	xor	ebx, ebx
0x41f5e9:	cmp	qword ptr [rsp + 0x18], rbx
0x41f5ee:	jbe	0x41f6be
0x41f5f4:	mov	ecx, dword ptr [r14 + 0x2c]
0x41f5f8:	mov	edi, dword ptr [r12 + rbx*8 + 4]
0x41f5fd:	push	rsi
0x41f5fe:	mov	rdx, rbp
0x41f601:	xor	esi, esi
0x41f603:	lea	r8, [rsp + 0x78]
0x41f608:	push	r8
0x41f60a:	mov	r9, qword ptr [rsp + 0x40]
0x41f60f:	mov	r8d, dword ptr [r14 + 0x28]
0x41f613:	push	qword ptr [r9 + 8]
0x41f617:	mov	r9d, dword ptr [r13 + 4]
0x41f61b:	push	qword ptr [rsp + 0x60]
0x41f61f:	call	0x41de66
0x41f624:	add	rsp, 0x20
0x41f628:	test	eax, eax
0x41f62a:	je	0x41f744
0x41f630:	mov	ecx, dword ptr [r12 + rbx*8]
0x41f634:	lea	rdi, [rsp + 0x70]
0x41f639:	cmp	ecx, 1
0x41f63c:	je	0x41f645
0x41f63e:	cmp	ecx, 2
0x41f641:	je	0x41f67e
0x41f643:	jmp	0x41f6b6
0x41f645:	mov	rsi, qword ptr [rsp + 0x30]
0x41f64a:	lea	r10, [rsp + 0x68]
0x41f64f:	mov	rcx, qword ptr [r14 + 0x40]
0x41f653:	mov	r8, rdi
0x41f656:	mov	edx, dword ptr [rsi + 0xc8]
0x41f65c:	mov	esi, dword ptr [r14 + 0x2c]
0x41f660:	push	r10
0x41f662:	push	qword ptr [rbp + 0x30]
0x41f665:	mov	rdi, qword ptr [rsp + 0x58]
0x41f66a:	mov	r9, qword ptr [rbp + 0x28]
0x41f66e:	call	0x41c206
0x41f673:	pop	rdx
0x41f674:	pop	rcx
0x41f675:	test	eax, eax
0x41f677:	jne	0x41f6b6
0x41f679:	jmp	0x41f744
0x41f67e:	cmp	dword ptr [rsp + 0x70], 3
0x41f683:	jne	0x41f6b6
0x41f685:	mov	r11, qword ptr [rsp + 0x78]
0x41f68a:	cmp	r11, qword ptr [r13 + 0x28]
0x41f68e:	jb	0x41f6ae
0x41f690:	xor	edx, edx
0x41f692:	mov	esi, 0x4c8e48
0x41f697:	mov	rdi, rbp
0x41f69a:	mov	rbx, qword ptr [rsp + 8]
0x41f69f:	mov	r13, qword ptr [rsp + 0x10]
0x41f6a4:	call	0x41be97
0x41f6a9:	jmp	0x41f74e
0x41f6ae:	mov	rax, qword ptr [r13 + 0x30]
0x41f6b2:	mov	r15, qword ptr [rax + r11*8]
0x41f6b6:	inc	rbx
0x41f6b9:	jmp	0x41f5e9
0x41f6be:	mov	rbx, qword ptr [rsp + 0x68]
0x41f6c3:	test	rbx, rbx
0x41f6c6:	jne	0x41f6e3
0x41f6c8:	xor	edx, edx
0x41f6ca:	mov	esi, 0x4c8e80
0x41f6cf:	mov	rdi, rbp
0x41f6d2:	mov	rbx, qword ptr [rsp + 8]
0x41f6d7:	mov	r13, qword ptr [rsp + 0x10]
0x41f6dc:	call	0x41be97
0x41f6e1:	jmp	0x41f74e
0x41f6e3:	test	r15, r15
0x41f6e6:	je	0x41f763
0x41f6e8:	mov	rdi, r15
0x41f6eb:	call	0x4039e0
0x41f6f0:	mov	rdi, rbx
0x41f6f3:	mov	r13, rax
0x41f6f6:	call	0x4039e0
0x41f6fb:	mov	rcx, qword ptr [rbp + 0x30]
0x41f6ff:	mov	rdx, qword ptr [rbp + 0x28]
0x41f703:	mov	rdi, qword ptr [rsp + 0x10]
0x41f708:	lea	rsi, [r13 + rax + 2]
0x41f70d:	mov	qword ptr [rsp + 0x58], rax
0x41f712:	call	0x41eee1
0x41f717:	test	rax, rax
0x41f71a:	je	0x41f744
0x41f71c:	mov	r9, qword ptr [rsp + 0x58]
0x41f721:	mov	rdi, rax
0x41f724:	mov	rsi, r15
0x41f727:	mov	rcx, r13
0x41f72a:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f72c:	mov	rsi, rbx
0x41f72f:	mov	byte ptr [rax + r13], 0x2f
0x41f734:	lea	rdi, [rax + r13 + 1]
0x41f739:	lea	rcx, [r9 + 1]
0x41f73d:	mov	rbx, rax
0x41f740:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f742:	jmp	0x41f763
0x41f744:	mov	rbx, qword ptr [rsp + 8]
0x41f749:	mov	r13, qword ptr [rsp + 0x10]
0x41f74e:	mov	rdx, qword ptr [rsp + 0x38]
0x41f753:	mov	rsi, rbx
0x41f756:	mov	rdi, r13
0x41f759:	xor	r15d, r15d
0x41f75c:	call	0x42c1a8
0x41f761:	jmp	0x41f7a9
0x41f763:	mov	r11, qword ptr [rsp + 0x28]
0x41f768:	mov	r10, qword ptr [rsp + 8]
0x41f76d:	inc	qword ptr [rsp + 0x28]
0x41f772:	mov	r15, qword ptr [rsp + 0x28]
0x41f777:	mov	qword ptr [r10 + r11*8], rbx
0x41f77b:	cmp	qword ptr [rsp + 0x20], r15
0x41f780:	jne	0x41f5d6
0x41f786:	mov	rax, qword ptr [rsp + 0x40]
0x41f78b:	mov	r14, qword ptr [rsp + 0x20]
0x41f790:	mov	r15d, 1
0x41f796:	mov	rdx, qword ptr [rsp + 0xc0]
0x41f79e:	mov	r13, qword ptr [rsp + 0x10]
0x41f7a3:	mov	qword ptr [rax], r14
0x41f7a6:	mov	qword ptr [rdx], r10
0x41f7a9:	test	r12, r12
0x41f7ac:	je	0x41f7c2
0x41f7ae:	mov	rdx, qword ptr [rsp + 0x18]
0x41f7b3:	mov	rsi, r12
0x41f7b6:	mov	rdi, r13
0x41f7b9:	shl	rdx, 3
0x41f7bd:	call	0x42c1a8
0x41f7c2:	add	rsp, 0x88
0x41f7c9:	mov	eax, r15d
0x41f7cc:	pop	rbx
0x41f7cd:	pop	rbp
0x41f7ce:	pop	r12
0x41f7d0:	pop	r13
0x41f7d2:	pop	r14
0x41f7d4:	pop	r15
0x41f7d6:	ret	
0x41f7d7:	endbr64	
0x41f7db:	push	r14
0x41f7dd:	movq	xmm2, rsi
0x41f7e2:	push	r13
0x41f7e4:	punpcklqdq	xmm2, xmm2
0x41f7e8:	push	r12
0x41f7ea:	push	rbp
0x41f7eb:	mov	rbp, r8
0x41f7ee:	push	rbx
0x41f7ef:	sub	rsp, 0x10
0x41f7f3:	mov	rax, qword ptr [r8 + 8]
0x41f7f7:	movaps	xmmword ptr [rsp], xmm2
0x41f7fb:	cmp	qword ptr [r8 + 0x10], rsi
0x41f7ff:	jae	0x41f892
0x41f805:	mov	rbx, rsi
0x41f808:	mov	r13, rdi
0x41f80b:	mov	r12, rdx
0x41f80e:	mov	r14, rcx
0x41f811:	add	rbx, rax
0x41f814:	test	rax, rax
0x41f817:	jne	0x41f81f
0x41f819:	shl	rbx, 4
0x41f81d:	jmp	0x41f846
0x41f81f:	call	0x403e50
0x41f824:	lea	rdx, [rbx + rbx]
0x41f828:	cdqe	
0x41f82a:	cmp	rax, rbx
0x41f82d:	jbe	0x41f83b
0x41f82f:	cmp	rax, rdx
0x41f832:	cmovbe	rdx, rax
0x41f836:	mov	rbx, rdx
0x41f839:	jmp	0x41f846
0x41f83b:	lea	rbx, [rax + rdx - 1]
0x41f840:	neg	rax
0x41f843:	and	rbx, rax
0x41f846:	mov	rdx, r12
0x41f849:	mov	rcx, r14
0x41f84c:	mov	rsi, rbx
0x41f84f:	mov	rdi, r13
0x41f852:	call	0x41eee1
0x41f857:	mov	r12, rax
0x41f85a:	test	rax, rax
0x41f85d:	je	0x41f8b5
0x41f85f:	mov	r8, qword ptr [rbp]
0x41f863:	test	r8, r8
0x41f866:	je	0x41f886
0x41f868:	mov	rdx, qword ptr [rbp + 8]
0x41f86c:	mov	rdi, rax
0x41f86f:	mov	rsi, r8
0x41f872:	mov	rcx, rdx
0x41f875:	add	rdx, qword ptr [rbp + 0x10]
0x41f879:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x41f87b:	mov	rsi, r8
0x41f87e:	mov	rdi, r13
0x41f881:	call	0x42c1a8
0x41f886:	sub	rbx, qword ptr [rbp + 8]
0x41f88a:	mov	qword ptr [rbp], r12
0x41f88e:	mov	qword ptr [rbp + 0x10], rbx
0x41f892:	movups	xmm1, xmmword ptr [rbp + 8]
0x41f896:	movups	xmm0, xmmword ptr [rbp + 8]
0x41f89a:	paddq	xmm1, xmmword ptr [rsp]
0x41f89f:	psubq	xmm0, xmmword ptr [rsp]
0x41f8a4:	mov	r12, qword ptr [rbp + 8]
0x41f8a8:	add	r12, qword ptr [rbp]
0x41f8ac:	shufpd	xmm1, xmm0, 2
0x41f8b1:	movups	xmmword ptr [rbp + 8], xmm1
0x41f8b5:	add	rsp, 0x10
0x41f8b9:	mov	rax, r12
0x41f8bc:	pop	rbx
0x41f8bd:	pop	rbp
0x41f8be:	pop	r12
0x41f8c0:	pop	r13
0x41f8c2:	pop	r14
0x41f8c4:	ret	
0x41f8c5:	push	r15
0x41f8c7:	push	r14
0x41f8c9:	push	r13
0x41f8cb:	push	r12
0x41f8cd:	push	rbp
0x41f8ce:	push	rbx
0x41f8cf:	sub	rsp, 0x818
0x41f8d6:	cmp	dword ptr [rsp + 0x888], 0
0x41f8de:	mov	qword ptr [rsp + 8], rdi
0x41f8e3:	mov	qword ptr [rsp + 0x90], rsi
0x41f8eb:	mov	r14, qword ptr [rsp + 0x850]
0x41f8f3:	mov	dword ptr [rsp + 0x1c], edx
0x41f8f7:	mov	r15, qword ptr [rsp + 0x858]
0x41f8ff:	mov	qword ptr [rsp + 0x30], rcx
0x41f904:	mov	qword ptr [rsp + 0x48], r8
0x41f909:	mov	qword ptr [rsp + 0x68], r9
0x41f90e:	jne	0x41f92c
0x41f910:	mov	rax, qword ptr [rsp + 0x868]
0x41f918:	mov	rdx, qword ptr [rsp + 0x870]
0x41f920:	mov	dword ptr [rax], 0
0x41f926:	mov	dword ptr [rdx], 0
0x41f92c:	xor	eax, eax
0x41f92e:	mov	ecx, 9
0x41f933:	mov	r9, r14
0x41f936:	mov	r8d, 0x40
0x41f93c:	lea	rdi, [rsp + 0x107]
0x41f944:	lea	rbp, [rsp + 0x248]
0x41f94c:	rep stosb	byte ptr [rdi], al
0x41f94e:	push	rbp
0x41f94f:	push	r15
0x41f951:	mov	rdx, qword ptr [rsp + 0x58]
0x41f956:	mov	rsi, qword ptr [rsp + 0x40]
0x41f95b:	mov	edi, dword ptr [rsp + 0x2c]
0x41f95f:	call	0x42c515
0x41f964:	pop	rsi
0x41f965:	pop	rdi
0x41f966:	test	eax, eax
0x41f968:	je	0x421c21
0x41f96e:	cmp	dword ptr [rsp + 0x260], 0
0x41f976:	mov	rsi, qword ptr [rsp + 0x248]
0x41f97e:	mov	ecx, 0x10
0x41f983:	lea	rdi, [rsp + 0x2e0]
0x41f98b:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x41f98d:	je	0x41f99d
0x41f98f:	mov	rdx, r15
0x41f992:	mov	rsi, r14
0x41f995:	mov	rdi, rbp
0x41f998:	call	0x42b65e
0x41f99d:	cmp	dword ptr [rsp + 0x2e0], 0x464c457f
0x41f9a8:	je	0x41f9c4
0x41f9aa:	xor	edx, edx
0x41f9ac:	mov	esi, 0x4c9223
0x41f9b1:	mov	rdi, r15
0x41f9b4:	call	r14
0x41f9b7:	mov	dword ptr [rsp + 0x10], 0
0x41f9bf:	jmp	0x421c29
0x41f9c4:	cmp	byte ptr [rsp + 0x2e6], 1
0x41f9cc:	je	0x41f9e8
0x41f9ce:	xor	edx, edx
0x41f9d0:	mov	esi, 0x4c8eb0
0x41f9d5:	mov	rdi, r15
0x41f9d8:	call	r14
0x41f9db:	mov	dword ptr [rsp + 0x10], 0
0x41f9e3:	jmp	0x421c29
0x41f9e8:	cmp	byte ptr [rsp + 0x2e4], 2
0x41f9f0:	je	0x41fa0c
0x41f9f2:	xor	edx, edx
0x41f9f4:	mov	esi, 0x4c8ee0
0x41f9f9:	mov	rdi, r15
0x41f9fc:	call	r14
0x41f9ff:	mov	dword ptr [rsp + 0x10], 0
0x41fa07:	jmp	0x421c29
0x41fa0c:	mov	bl, byte ptr [rsp + 0x2e5]
0x41fa13:	mov	byte ptr [rsp + 0xde], bl
0x41fa1a:	dec	ebx
0x41fa1c:	cmp	bl, 1
0x41fa1f:	jbe	0x41fa3b
0x41fa21:	xor	edx, edx
0x41fa23:	mov	esi, 0x4c8f08
0x41fa28:	mov	rdi, r15
0x41fa2b:	call	r14
0x41fa2e:	mov	dword ptr [rsp + 0x10], 0
0x41fa36:	jmp	0x421c29
0x41fa3b:	cmp	dword ptr [rsp + 0x880], 0
0x41fa43:	je	0x41fa58
0x41fa45:	or	r12d, 0xffffffff
0x41fa49:	cmp	word ptr [rsp + 0x2f0], 3
0x41fa52:	je	0x422990
0x41fa58:	movzx	ebp, word ptr [rsp + 0x31e]
0x41fa60:	mov	r12, qword ptr [rsp + 0x308]
0x41fa68:	movzx	r8d, word ptr [rsp + 0x31c]
0x41fa71:	test	r8d, r8d
0x41fa74:	mov	dword ptr [rsp + 0x60], r8d
0x41fa79:	sete	r9b
0x41fa7d:	cmp	ebp, 0xffff
0x41fa83:	sete	r10b
0x41fa87:	or	r9b, r10b
0x41fa8a:	je	0x41fb26
0x41fa90:	test	r12, r12
0x41fa93:	je	0x41fb26
0x41fa99:	lea	r11, [rsp + 0x6f0]
0x41faa1:	mov	rcx, r12
0x41faa4:	mov	r9, r14
0x41faa7:	mov	r8d, 8
0x41faad:	push	r11
0x41faaf:	push	r15
0x41fab1:	mov	rdx, qword ptr [rsp + 0x58]
0x41fab6:	mov	rsi, qword ptr [rsp + 0x40]
0x41fabb:	mov	edi, dword ptr [rsp + 0x2c]
0x41fabf:	call	0x42c515
0x41fac4:	mov	dword ptr [rsp + 0x20], eax
0x41fac8:	pop	rdx
0x41fac9:	pop	rcx
0x41faca:	test	eax, eax
0x41facc:	je	0x421c29
0x41fad2:	cmp	dword ptr [rsp + 0x60], 0
0x41fad7:	mov	r13, qword ptr [rsp + 0x6f0]
0x41fadf:	jne	0x41faf1
0x41fae1:	mov	edx, dword ptr [r13 + 0x20]
0x41fae5:	mov	dword ptr [rsp + 0x60], edx
0x41fae9:	cmp	ebp, 0xffff
0x41faef:	jne	0x41fb09
0x41faf1:	mov	ebp, dword ptr [r13 + 0x28]
0x41faf5:	cmp	ebp, dword ptr [rsp + 0x60]
0x41faf9:	jb	0x41fb09
0x41fafb:	cmp	ebp, 0xffff
0x41fb01:	jbe	0x41fb09
0x41fb03:	sub	ebp, 0x100
0x41fb09:	cmp	dword ptr [rsp + 0x708], 0
0x41fb11:	je	0x41fb26
0x41fb13:	mov	rdx, r15
0x41fb16:	mov	rsi, r14
0x41fb19:	lea	rdi, [rsp + 0x6f0]
0x41fb21:	call	0x42b65e
0x41fb26:	cmp	dword ptr [rsp + 0x60], 0
0x41fb2b:	je	0x421c21
0x41fb31:	test	ebp, ebp
0x41fb33:	je	0x421c21
0x41fb39:	mov	eax, dword ptr [rsp + 0x60]
0x41fb3d:	lea	rsi, [rsp + 0x228]
0x41fb45:	lea	rcx, [r12 + 0x40]
0x41fb4a:	mov	r9, r14
0x41fb4d:	push	rsi
0x41fb4e:	push	r15
0x41fb50:	lea	r8d, [rax - 1]
0x41fb54:	mov	rdx, qword ptr [rsp + 0x58]
0x41fb59:	mov	rsi, qword ptr [rsp + 0x40]
0x41fb5e:	mov	edi, dword ptr [rsp + 0x2c]
0x41fb62:	shl	r8, 6
0x41fb66:	call	0x42c515
0x41fb6b:	pop	r12
0x41fb6d:	pop	r13
0x41fb6f:	test	eax, eax
0x41fb71:	je	0x421c21
0x41fb77:	mov	rcx, qword ptr [rsp + 0x228]
0x41fb7f:	lea	edi, [rbp - 1]
0x41fb82:	lea	r12, [rsp + 0x208]
0x41fb8a:	mov	r9, r14
0x41fb8d:	shl	rdi, 6
0x41fb91:	mov	qword ptr [rsp + 0x88], rcx
0x41fb99:	add	rdi, qword ptr [rsp + 0x88]
0x41fba1:	mov	rbx, qword ptr [rdi + 0x20]
0x41fba5:	mov	rcx, qword ptr [rdi + 0x18]
0x41fba9:	mov	qword ptr [rsp + 0xc8], rbx
0x41fbb1:	push	r12
0x41fbb3:	push	r15
0x41fbb5:	mov	r8, qword ptr [rsp + 0xd8]
0x41fbbd:	mov	rdx, qword ptr [rsp + 0x58]
0x41fbc2:	mov	rsi, qword ptr [rsp + 0x40]
0x41fbc7:	mov	edi, dword ptr [rsp + 0x2c]
0x41fbcb:	call	0x42c515
0x41fbd0:	pop	r11
0x41fbd2:	pop	rbp
0x41fbd3:	mov	r13d, eax
0x41fbd6:	test	eax, eax
0x41fbd8:	je	0x4218ed
0x41fbde:	mov	r9d, 0x48
0x41fbe4:	xor	eax, eax
0x41fbe6:	mov	r10d, dword ptr [rsp + 0x888]
0x41fbee:	lea	rdi, [rsp + 0x6f0]
0x41fbf6:	mov	rcx, r9
0x41fbf9:	mov	r12, qword ptr [rsp + 0x48]
0x41fbfe:	mov	r8, qword ptr [rsp + 0x208]
0x41fc06:	mov	qword ptr [rsp + 0x28], 0
0x41fc0f:	rep stosd	dword ptr [rdi], eax
0x41fc11:	mov	rcx, r9
0x41fc14:	lea	rdi, [rsp + 0x5d0]
0x41fc1c:	xor	r10d, 1
0x41fc20:	rep stosd	dword ptr [rdi], eax
0x41fc22:	and	r10d, 1
0x41fc26:	cmp	qword ptr [rsp + 0x890], 0
0x41fc2f:	mov	rdx, qword ptr [rsp + 0x88]
0x41fc37:	setne	r11b
0x41fc3b:	mov	byte ptr [rsp + 0xb0], r10b
0x41fc43:	or	r11d, dword ptr [rsp + 0xb0]
0x41fc4b:	xor	r13d, r13d
0x41fc4e:	mov	qword ptr [rsp + 0xe0], r8
0x41fc56:	mov	byte ptr [rsp + 0xdf], r11b
0x41fc5e:	mov	dword ptr [rsp + 0x64], 0
0x41fc66:	mov	dword ptr [rsp + 0xc0], 0
0x41fc71:	mov	qword ptr [rsp + 0xb8], 0
0x41fc7d:	mov	qword ptr [rsp + 0x70], 0
0x41fc86:	mov	dword ptr [rsp + 0x58], 0
0x41fc8e:	mov	dword ptr [rsp + 0xd8], 0
0x41fc99:	mov	qword ptr [rsp + 0xa8], 0
0x41fca5:	mov	dword ptr [rsp + 0x50], 0
0x41fcad:	mov	dword ptr [rsp + 0x80], 0
0x41fcb8:	mov	qword ptr [rsp + 0x78], 0
0x41fcc1:	mov	dword ptr [rsp + 0x40], 0
0x41fcc9:	mov	dword ptr [rsp + 0x10], 1
0x41fcd1:	mov	dword ptr [rsp + 0xa0], 0
0x41fcdc:	mov	dword ptr [rsp + 0x98], 0
0x41fce7:	mov	qword ptr [rsp + 0xd0], r13
0x41fcef:	mov	r13, rdx
0x41fcf2:	mov	ebp, dword ptr [rsp + 0x10]
0x41fcf6:	cmp	dword ptr [rsp + 0x60], ebp
0x41fcfa:	jbe	0x420191
0x41fd00:	mov	r9d, dword ptr [r13 + 4]
0x41fd04:	cmp	r9d, 2
0x41fd08:	je	0x41fd26
0x41fd0a:	mov	r11d, dword ptr [rsp + 0xa0]
0x41fd12:	cmp	r9d, 0xb
0x41fd16:	cmove	r11d, dword ptr [rsp + 0x10]
0x41fd1c:	mov	dword ptr [rsp + 0xa0], r11d
0x41fd24:	jmp	0x41fd33
0x41fd26:	mov	r8d, dword ptr [rsp + 0x10]
0x41fd2b:	mov	dword ptr [rsp + 0x98], r8d
0x41fd33:	mov	ebp, dword ptr [r13]
0x41fd37:	cmp	rbp, qword ptr [rsp + 0xc8]
0x41fd3f:	jb	0x41fd4d
0x41fd41:	xor	edx, edx
0x41fd43:	mov	esi, 0x4c923e
0x41fd48:	jmp	0x4201e5
0x41fd4d:	add	rbp, qword ptr [rsp + 0xe0]
0x41fd55:	xor	ebx, ebx
0x41fd57:	mov	rsi, qword ptr [rbx*8 + 0x4c9840]
0x41fd5f:	mov	rdi, rbp
0x41fd62:	mov	dword ptr [rsp + 0xe8], ebx
0x41fd69:	call	0x403be0
0x41fd6e:	test	eax, eax
0x41fd70:	jne	0x41fda6
0x41fd72:	mov	rax, qword ptr [r13 + 0x18]
0x41fd76:	movsxd	r10, ebx
0x41fd79:	shl	r10, 5
0x41fd7d:	mov	qword ptr [rsp + r10 + 0x6f0], rax
0x41fd85:	mov	rcx, qword ptr [r13 + 0x20]
0x41fd89:	mov	qword ptr [rsp + r10 + 0x6f8], rcx
0x41fd91:	mov	rdi, qword ptr [r13 + 8]
0x41fd95:	shr	rdi, 0xb
0x41fd99:	and	edi, 1
0x41fd9c:	mov	dword ptr [rsp + r10 + 0x708], edi
0x41fda4:	jmp	0x41fdaf
0x41fda6:	inc	rbx
0x41fda9:	cmp	rbx, 9
0x41fdad:	jne	0x41fd57
0x41fdaf:	cmp	byte ptr [rbp], 0x2e
0x41fdb3:	jne	0x41fe4b
0x41fdb9:	cmp	byte ptr [rbp + 1], 0x7a
0x41fdbd:	jne	0x41fe4b
0x41fdc3:	xor	esi, esi
0x41fdc5:	lea	rdx, [rbp + 2]
0x41fdc9:	mov	qword ptr [rsp + 0x858], r15
0x41fdd1:	mov	r15, r14
0x41fdd4:	mov	rbx, rsi
0x41fdd7:	mov	r14, r12
0x41fdda:	mov	r12, rbp
0x41fddd:	mov	rbp, rdx
0x41fde0:	mov	r9, qword ptr [rbx*8 + 0x4c9840]
0x41fde8:	mov	rdi, rbp
0x41fdeb:	mov	dword ptr [rsp + 0xe8], ebx
0x41fdf2:	lea	rsi, [r9 + 1]
0x41fdf6:	call	0x403be0
0x41fdfb:	test	eax, eax
0x41fdfd:	jne	0x41fe31
0x41fdff:	mov	r8, qword ptr [r13 + 0x18]
0x41fe03:	movsxd	r11, ebx
0x41fe06:	mov	rbp, r12
0x41fe09:	mov	r12, r14
0x41fe0c:	shl	r11, 5
0x41fe10:	mov	r14, r15
0x41fe13:	mov	r15, qword ptr [rsp + 0x858]
0x41fe1b:	mov	qword ptr [rsp + r11 + 0x5d0], r8
0x41fe23:	mov	r10, qword ptr [r13 + 0x20]
0x41fe27:	mov	qword ptr [rsp + r11 + 0x5d8], r10
0x41fe2f:	jmp	0x41fe4b
0x41fe31:	inc	rbx
0x41fe34:	cmp	rbx, 9
0x41fe38:	jne	0x41fde0
0x41fe3a:	mov	rbp, r12
0x41fe3d:	mov	r12, r14
0x41fe40:	mov	r14, r15
0x41fe43:	mov	r15, qword ptr [rsp + 0x858]
0x41fe4b:	cmp	byte ptr [rsp + 0xdf], 0
0x41fe53:	je	0x41ff3e
0x41fe59:	cmp	dword ptr [rsp + 0x40], 0
0x41fe5e:	jne	0x41ff3e
0x41fe64:	mov	esi, 0x4c925c
0x41fe69:	mov	rdi, rbp
0x41fe6c:	call	0x403be0
0x41fe71:	mov	ebx, eax
0x41fe73:	test	eax, eax
0x41fe75:	jne	0x41ff3e
0x41fe7b:	mov	r8, qword ptr [r13 + 0x20]
0x41fe7f:	mov	rcx, qword ptr [r13 + 0x18]
0x41fe83:	mov	r9, r14
0x41fe86:	mov	rdx, r12
0x41fe89:	lea	rax, [rsp + 0x1a8]
0x41fe91:	push	rax
0x41fe92:	push	r15
0x41fe94:	mov	rsi, qword ptr [rsp + 0x40]
0x41fe99:	mov	edi, dword ptr [rsp + 0x2c]
0x41fe9d:	call	0x42c515
0x41fea2:	pop	r9
0x41fea4:	pop	r10
0x41fea6:	test	eax, eax
0x41fea8:	je	0x4219f5
0x41feae:	mov	rcx, qword ptr [rsp + 0x1a8]
0x41feb6:	cmp	dword ptr [rcx + 8], 3
0x41feba:	jne	0x41fef9
0x41febc:	cmp	dword ptr [rcx], 4
0x41febf:	jne	0x41fef9
0x41fec1:	lea	rdi, [rcx + 0xc]
0x41fec5:	mov	esi, 0x4c926f
0x41feca:	mov	qword ptr [rsp + 0x40], rcx
0x41fecf:	call	0x403be0
0x41fed4:	test	eax, eax
0x41fed6:	jne	0x41fef9
0x41fed8:	mov	rdi, qword ptr [rsp + 0x40]
0x41fedd:	mov	esi, dword ptr [rdi + 4]
0x41fee0:	lea	edx, [rsi + 0x10]
0x41fee3:	cmp	qword ptr [r13 + 0x20], rdx
0x41fee7:	ja	0x41fef9
0x41fee9:	lea	r9, [rdi + 0x10]
0x41feed:	mov	dword ptr [rsp + 0x80], esi
0x41fef4:	mov	qword ptr [rsp + 0x78], r9
0x41fef9:	cmp	dword ptr [rsp + 0x898], 0
0x41ff01:	je	0x41ff36
0x41ff03:	mov	r11d, dword ptr [rsp + 0x80]
0x41ff0b:	cmp	r11d, dword ptr [rsp + 0x898]
0x41ff13:	jne	0x421a06
0x41ff19:	mov	rsi, qword ptr [rsp + 0x890]
0x41ff21:	mov	rdi, qword ptr [rsp + 0x78]
0x41ff26:	mov	edx, r11d
0x41ff29:	call	0x403b70
0x41ff2e:	test	eax, eax
0x41ff30:	jne	0x421a06
0x41ff36:	mov	dword ptr [rsp + 0x40], 1
0x41ff3e:	mov	r8d, dword ptr [rsp + 0x50]
0x41ff43:	or	r8d, dword ptr [rsp + 0x888]
0x41ff4b:	jne	0x41fff5
0x41ff51:	mov	esi, 0x4c9273
0x41ff56:	mov	rdi, rbp
0x41ff59:	call	0x403be0
0x41ff5e:	mov	dword ptr [rsp + 0x50], 0
0x41ff66:	test	eax, eax
0x41ff68:	jne	0x41fff5
0x41ff6e:	mov	r8, qword ptr [r13 + 0x20]
0x41ff72:	mov	rcx, qword ptr [r13 + 0x18]
0x41ff76:	mov	r9, r14
0x41ff79:	mov	rdx, r12
0x41ff7c:	lea	r10, [rsp + 0x188]
0x41ff84:	push	r10
0x41ff86:	push	r15
0x41ff88:	mov	rsi, qword ptr [rsp + 0x40]
0x41ff8d:	mov	edi, dword ptr [rsp + 0x2c]
0x41ff91:	call	0x42c515
0x41ff96:	pop	rdi
0x41ff97:	pop	r8
0x41ff99:	mov	ebx, eax
0x41ff9b:	test	eax, eax
0x41ff9d:	je	0x421a23
0x41ffa3:	mov	rax, qword ptr [r13 + 0x20]
0x41ffa7:	mov	rbx, qword ptr [rsp + 0x188]
0x41ffaf:	mov	rsi, rax
0x41ffb2:	mov	rdi, rbx
0x41ffb5:	mov	qword ptr [rsp + 0xe8], rax
0x41ffbd:	call	0x403ae0
0x41ffc2:	mov	rdi, qword ptr [rsp + 0xe8]
0x41ffca:	mov	dword ptr [rsp + 0x50], 1
0x41ffd2:	add	rax, 3
0x41ffd6:	and	rax, 0xfffffffffffffffc
0x41ffda:	lea	rcx, [rax + 4]
0x41ffde:	cmp	rdi, rcx
0x41ffe1:	jb	0x41fff5
0x41ffe3:	mov	esi, dword ptr [rbx + rax]
0x41ffe6:	mov	qword ptr [rsp + 0xa8], rbx
0x41ffee:	mov	dword ptr [rsp + 0xd8], esi
0x41fff5:	cmp	dword ptr [rsp + 0x58], 0
0x41fffa:	jne	0x420087
0x420000:	mov	esi, 0x4c9282
0x420005:	mov	rdi, rbp
0x420008:	call	0x403be0
0x42000d:	test	eax, eax
0x42000f:	jne	0x420087
0x420011:	lea	rdx, [rsp + 0x168]
0x420019:	mov	rcx, qword ptr [r13 + 0x18]
0x42001d:	mov	r8, qword ptr [r13 + 0x20]
0x420021:	mov	r9, r14
0x420024:	push	rdx
0x420025:	mov	rdx, r12
0x420028:	push	r15
0x42002a:	mov	rsi, qword ptr [rsp + 0x40]
0x42002f:	mov	edi, dword ptr [rsp + 0x2c]
0x420033:	call	0x42c515
0x420038:	pop	rcx
0x420039:	pop	rsi
0x42003a:	mov	ebx, eax
0x42003c:	test	eax, eax
0x42003e:	je	0x421a23
0x420044:	mov	rbx, qword ptr [r13 + 0x20]
0x420048:	mov	rdi, qword ptr [rsp + 0x168]
0x420050:	mov	rsi, rbx
0x420053:	mov	qword ptr [rsp + 0x70], rdi
0x420058:	call	0x403ae0
0x42005d:	mov	dword ptr [rsp + 0x58], 1
0x420065:	cmp	rbx, rax
0x420068:	jbe	0x420087
0x42006a:	mov	r9, qword ptr [rsp + 0x70]
0x42006f:	inc	rax
0x420072:	sub	ebx, eax
0x420074:	lea	r11, [r9 + rax]
0x420078:	mov	dword ptr [rsp + 0xc0], ebx
0x42007f:	mov	qword ptr [rsp + 0xb8], r11
0x420087:	cmp	dword ptr [rsp + 0x64], 0
0x42008c:	jne	0x4200e7
0x42008e:	mov	esi, 0x4c9294
0x420093:	mov	rdi, rbp
0x420096:	call	0x403be0
0x42009b:	test	eax, eax
0x42009d:	jne	0x4200e7
0x42009f:	mov	r8, qword ptr [r13 + 0x20]
0x4200a3:	mov	rcx, qword ptr [r13 + 0x18]
0x4200a7:	mov	rdx, r12
0x4200aa:	mov	r9, r14
0x4200ad:	lea	r10, [rsp + 0x148]
0x4200b5:	push	r10
0x4200b7:	push	r15
0x4200b9:	mov	rsi, qword ptr [rsp + 0x40]
0x4200be:	mov	edi, dword ptr [rsp + 0x2c]
0x4200c2:	call	0x42c515
0x4200c7:	mov	ebx, eax
0x4200c9:	pop	rax
0x4200ca:	pop	rdx
0x4200cb:	test	ebx, ebx
0x4200cd:	je	0x421a23
0x4200d3:	mov	r8, qword ptr [r13 + 0x20]
0x4200d7:	mov	dword ptr [rsp + 0x64], 1
0x4200df:	mov	qword ptr [rsp + 0xd0], r8
0x4200e7:	cmp	word ptr [rsp + 0x2f2], 0x15
0x4200f0:	jne	0x420184
0x4200f6:	test	byte ptr [rsp + 0x310], 2
0x4200fe:	jne	0x420184
0x420104:	cmp	dword ptr [r13 + 4], 1
0x420109:	jne	0x420184
0x42010b:	mov	esi, 0x4c92a3
0x420110:	mov	rdi, rbp
0x420113:	call	0x403be0
0x420118:	test	eax, eax
0x42011a:	jne	0x420184
0x42011c:	mov	r8, qword ptr [r13 + 0x20]
0x420120:	mov	rcx, qword ptr [r13 + 0x18]
0x420124:	mov	r9, r14
0x420127:	mov	rdx, r12
0x42012a:	lea	rbp, [rsp + 0x2c0]
0x420132:	push	rbp
0x420133:	push	r15
0x420135:	mov	rsi, qword ptr [rsp + 0x40]
0x42013a:	mov	edi, dword ptr [rsp + 0x2c]
0x42013e:	call	0x42c515
0x420143:	pop	rbp
0x420144:	mov	ebx, eax
0x420146:	pop	rax
0x420147:	test	ebx, ebx
0x420149:	je	0x421a23
0x42014f:	mov	rax, qword ptr [r13 + 0x10]
0x420153:	mov	rcx, qword ptr [rsp + 0x2c0]
0x42015b:	lea	rdx, [rsp + 0x2a8]
0x420163:	mov	qword ptr [rsp + 0x28], rdx
0x420168:	mov	qword ptr [rsp + 0x2a8], rax
0x420170:	mov	rsi, qword ptr [r13 + 0x20]
0x420174:	mov	qword ptr [rsp + 0x2b0], rcx
0x42017c:	mov	qword ptr [rsp + 0x2b8], rsi
0x420184:	inc	dword ptr [rsp + 0x10]
0x420188:	add	r13, 0x40
0x42018c:	jmp	0x41fcf2
0x420191:	mov	esi, dword ptr [rsp + 0xa0]
0x420198:	cmp	dword ptr [rsp + 0x98], 0
0x4201a0:	cmovne	esi, dword ptr [rsp + 0x98]
0x4201a8:	mov	r13, qword ptr [rsp + 0xd0]
0x4201b0:	test	esi, esi
0x4201b2:	je	0x42036d
0x4201b8:	cmp	byte ptr [rsp + 0xb0], 0
0x4201c0:	je	0x42036d
0x4201c6:	lea	ebx, [rsi - 1]
0x4201c9:	shl	rbx, 6
0x4201cd:	add	rbx, qword ptr [rsp + 0x88]
0x4201d5:	mov	ebp, dword ptr [rbx + 0x28]
0x4201d8:	cmp	dword ptr [rsp + 0x60], ebp
0x4201dc:	ja	0x420200
0x4201de:	xor	edx, edx
0x4201e0:	mov	esi, 0x4c8f30
0x4201e5:	mov	rdi, r15
0x4201e8:	mov	r13d, 1
0x4201ee:	call	r14
0x4201f1:	mov	dword ptr [rsp + 0x10], 0
0x4201f9:	xor	edx, edx
0x4201fb:	jmp	0x421920
0x420200:	lea	r12, [rsp + 0x1e8]
0x420208:	mov	r8, qword ptr [rbx + 0x20]
0x42020c:	mov	rcx, qword ptr [rbx + 0x18]
0x420210:	mov	r9, r14
0x420213:	push	r12
0x420215:	push	r15
0x420217:	mov	rdx, qword ptr [rsp + 0x58]
0x42021c:	mov	rsi, qword ptr [rsp + 0x40]
0x420221:	mov	edi, dword ptr [rsp + 0x2c]
0x420225:	call	0x42c515
0x42022a:	pop	r9
0x42022c:	pop	r11
0x42022e:	mov	edx, eax
0x420230:	test	eax, eax
0x420232:	je	0x421a38
0x420238:	dec	ebp
0x42023a:	lea	rax, [rsp + 0x1c8]
0x420242:	mov	r9, r14
0x420245:	shl	rbp, 6
0x420249:	add	rbp, qword ptr [rsp + 0x88]
0x420251:	mov	r8, qword ptr [rbp + 0x20]
0x420255:	mov	rcx, qword ptr [rbp + 0x18]
0x420259:	push	rax
0x42025a:	push	r15
0x42025c:	mov	rdx, qword ptr [rsp + 0x58]
0x420261:	mov	rsi, qword ptr [rsp + 0x40]
0x420266:	mov	edi, dword ptr [rsp + 0x2c]
0x42026a:	call	0x42c515
0x42026f:	mov	dword ptr [rsp + 0x20], eax
0x420273:	pop	rdi
0x420274:	pop	r8
0x420276:	test	eax, eax
0x420278:	je	0x421a53
0x42027e:	mov	rdi, qword ptr [rsp + 8]
0x420283:	mov	rcx, r15
0x420286:	mov	rdx, r14
0x420289:	mov	esi, 0x18
0x42028e:	call	0x41eee1
0x420293:	mov	r12, rax
0x420296:	test	rax, rax
0x420299:	je	0x421a4b
0x42029f:	mov	r9, qword ptr [rbp + 0x20]
0x4202a3:	mov	rcx, qword ptr [rbx + 0x20]
0x4202a7:	push	qword ptr [rsp + 0x28]
0x4202ab:	push	rax
0x4202ac:	push	r15
0x4202ae:	push	r14
0x4202b0:	mov	r8, qword ptr [rsp + 0x1e8]
0x4202b8:	mov	rdx, qword ptr [rsp + 0x208]
0x4202c0:	mov	rsi, qword ptr [rsp + 0x88]
0x4202c8:	mov	rdi, qword ptr [rsp + 0x28]
0x4202cd:	call	0x41efe7
0x4202d2:	add	rsp, 0x20
0x4202d6:	test	eax, eax
0x4202d8:	jne	0x420304
0x4202da:	mov	rdi, qword ptr [rsp + 8]
0x4202df:	mov	edx, 0x18
0x4202e4:	mov	rsi, r12
0x4202e7:	mov	r13d, 1
0x4202ed:	call	0x42c1a8
0x4202f2:	mov	dword ptr [rsp + 0x10], 1
0x4202fa:	mov	edx, 1
0x4202ff:	jmp	0x421920
0x420304:	cmp	dword ptr [rsp + 0x200], 0
0x42030c:	je	0x420321
0x42030e:	mov	rdx, r15
0x420311:	mov	rsi, r14
0x420314:	lea	rdi, [rsp + 0x1e8]
0x42031c:	call	0x42b65e
0x420321:	mov	r9, qword ptr [rsp + 8]
0x420326:	mov	r8, qword ptr [rsp + 0x868]
0x42032e:	mov	dword ptr [r8], 1
0x420335:	cmp	dword ptr [r9 + 8], 0
0x42033a:	lea	rcx, [r9 + 0x30]
0x42033e:	jne	0x42035d
0x420340:	mov	r10, qword ptr [r9 + 0x30]
0x420344:	test	r10, r10
0x420347:	je	0x420351
0x420349:	mov	rcx, r10
0x42034c:	mov	r10, qword ptr [r10]
0x42034f:	jmp	0x420344
0x420351:	mov	qword ptr [rcx], r12
0x420354:	jmp	0x42036d
0x420356:	lock cmpxchg	qword ptr [rdi], r12
0x42035b:	je	0x42036d
0x42035d:	mov	rdi, rcx
0x420360:	mov	rax, qword ptr [rdi]
0x420363:	test	rax, rax
0x420366:	je	0x420356
0x420368:	mov	rdi, rax
0x42036b:	jmp	0x420360
0x42036d:	cmp	dword ptr [rsp + 0x240], 0
0x420375:	je	0x42038a
0x420377:	mov	rdx, r15
0x42037a:	mov	rsi, r14
0x42037d:	lea	rdi, [rsp + 0x228]
0x420385:	call	0x42b65e
0x42038a:	cmp	dword ptr [rsp + 0x220], 0
0x420392:	je	0x4203a7
0x420394:	mov	rdx, r15
0x420397:	mov	rsi, r14
0x42039a:	lea	rdi, [rsp + 0x208]
0x4203a2:	call	0x42b65e
0x4203a7:	cmp	qword ptr [rsp + 0x78], 0
0x4203ad:	je	0x4204c1
0x4203b3:	mov	ebx, dword ptr [rsp + 0x80]
0x4203ba:	mov	rdi, qword ptr [rsp + 8]
0x4203bf:	mov	rcx, r15
0x4203c2:	mov	rdx, r14
0x4203c5:	lea	r11, [rbx + rbx]
0x4203c9:	lea	rbp, [r11 + 0x21]
0x4203cd:	mov	rsi, rbp
0x4203d0:	mov	qword ptr [rsp + 0x10], rbp
0x4203d5:	call	0x41eee1
0x4203da:	mov	r12, rax
0x4203dd:	test	rax, rax
0x4203e0:	je	0x4204c1
0x4203e6:	mov	esi, 0x4c92a8
0x4203eb:	mov	ecx, 0x19
0x4203f0:	mov	rdi, rax
0x4203f3:	mov	r8, qword ptr [rsp + 0x10]
0x4203f8:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x4203fa:	mov	r9, rdi
0x4203fd:	cmp	rbx, rcx
0x420400:	jbe	0x42044e
0x420402:	mov	rax, qword ptr [rsp + 0x78]
0x420407:	mov	dl, byte ptr [rax + rcx]
0x42040a:	mov	ebp, edx
0x42040c:	shr	bpl, 4
0x420410:	lea	r10d, [rbp + 0x57]
0x420414:	cmp	bpl, 9
0x420418:	ja	0x42041e
0x42041a:	lea	r10d, [rbp + 0x30]
0x42041e:	and	edx, 0xf
0x420421:	mov	byte ptr [r9], r10b
0x420424:	lea	r11d, [rdx + 0x57]
0x420428:	cmp	dl, 9
0x42042b:	ja	0x420431
0x42042d:	lea	r11d, [rdx + 0x30]
0x420431:	mov	byte ptr [r9 + 1], r11b
0x420435:	test	rcx, rcx
0x420438:	je	0x420440
0x42043a:	add	r9, 2
0x42043e:	jmp	0x420449
0x420440:	mov	byte ptr [r9 + 2], 0x2f
0x420445:	add	r9, 3
0x420449:	inc	rcx
0x42044c:	jmp	0x4203fd
0x42044e:	mov	dword ptr [r9], 0x6265642e
0x420455:	mov	rdx, r15
0x420458:	mov	rsi, r14
0x42045b:	mov	rdi, r12
0x42045e:	mov	word ptr [r9 + 4], 0x6775
0x420465:	lea	rcx, [rsp + 0x4b0]
0x42046d:	mov	byte ptr [r9 + 6], 0
0x420472:	mov	qword ptr [rsp + 0x10], r8
0x420477:	call	0x41c935
0x42047c:	mov	rdx, qword ptr [rsp + 0x10]
0x420481:	mov	rdi, qword ptr [rsp + 8]
0x420486:	mov	rsi, r12
0x420489:	mov	ebp, eax
0x42048b:	call	0x42c1a8
0x420490:	test	ebp, ebp
0x420492:	js	0x4204c1
0x420494:	cmp	dword ptr [rsp + 0x1c0], 0
0x42049c:	je	0x4204b1
0x42049e:	mov	rdx, r15
0x4204a1:	mov	rsi, r14
0x4204a4:	lea	rdi, [rsp + 0x1a8]
0x4204ac:	call	0x42b65e
0x4204b1:	cmp	dword ptr [rsp + 0x50], 0
0x4204b6:	je	0x4205fd
0x4204bc:	jmp	0x4205e0
0x4204c1:	cmp	dword ptr [rsp + 0x40], 0
0x4204c6:	je	0x4204e5
0x4204c8:	cmp	dword ptr [rsp + 0x1c0], 0
0x4204d0:	je	0x4204e5
0x4204d2:	mov	rdx, r15
0x4204d5:	mov	rsi, r14
0x4204d8:	lea	rdi, [rsp + 0x1a8]
0x4204e0:	call	0x42b65e
0x4204e5:	cmp	qword ptr [rsp + 0x28], 0
0x4204eb:	je	0x42050a
0x4204ed:	mov	rsi, qword ptr [rsp + 0x28]
0x4204f2:	cmp	dword ptr [rsi + 0x30], 0
0x4204f6:	je	0x42050a
0x4204f8:	mov	rdi, rsi
0x4204fb:	mov	rdx, r15
0x4204fe:	mov	rsi, r14
0x420501:	add	rdi, 0x18
0x420505:	call	0x42b65e
0x42050a:	cmp	qword ptr [rsp + 0xa8], 0
0x420513:	je	0x420676
0x420519:	mov	rdx, qword ptr [rsp + 0xa8]
0x420521:	mov	rdi, qword ptr [rsp + 8]
0x420526:	mov	r8, r15
0x420529:	mov	rcx, r14
0x42052c:	mov	rsi, qword ptr [rsp + 0x90]
0x420534:	call	0x41f257
0x420539:	mov	ebp, eax
0x42053b:	test	eax, eax
0x42053d:	js	0x420676
0x420543:	cmp	dword ptr [rsp + 0xd8], 0
0x42054b:	je	0x4205e0
0x420551:	lea	rsi, [rsp + 0x4b0]
0x420559:	mov	edi, eax
0x42055b:	call	0x403ef0
0x420560:	test	eax, eax
0x420562:	jns	0x420578
0x420564:	call	0x403890
0x420569:	mov	esi, 0x4c92c2
0x42056e:	mov	rdi, r15
0x420571:	mov	edx, dword ptr [rax]
0x420573:	call	r14
0x420576:	jmp	0x4205ce
0x420578:	mov	rdx, qword ptr [rsp + 0x4e0]
0x420580:	xor	esi, esi
0x420582:	mov	r8, r15
0x420585:	mov	rcx, r14
0x420588:	lea	r9, [rsp + 0x420]
0x420590:	mov	edi, ebp
0x420592:	call	0x42b5ac
0x420597:	test	eax, eax
0x420599:	je	0x4205ce
0x42059b:	mov	rsi, qword ptr [rsp + 0x4e0]
0x4205a3:	mov	rdi, qword ptr [rsp + 0x420]
0x4205ab:	call	0x42b584
0x4205b0:	mov	rdx, r15
0x4205b3:	mov	rsi, r14
0x4205b6:	lea	rdi, [rsp + 0x420]
0x4205be:	mov	ebx, eax
0x4205c0:	call	0x42b65e
0x4205c5:	cmp	dword ptr [rsp + 0xd8], ebx
0x4205cc:	je	0x4205e0
0x4205ce:	mov	rdx, r15
0x4205d1:	mov	rsi, r14
0x4205d4:	mov	edi, ebp
0x4205d6:	call	0x41c9ad
0x4205db:	jmp	0x420676
0x4205e0:	cmp	dword ptr [rsp + 0x1a0], 0
0x4205e8:	je	0x4205fd
0x4205ea:	mov	rdx, r15
0x4205ed:	mov	rsi, r14
0x4205f0:	lea	rdi, [rsp + 0x188]
0x4205f8:	call	0x42b65e
0x4205fd:	cmp	dword ptr [rsp + 0x58], 0
0x420602:	je	0x420621
0x420604:	cmp	dword ptr [rsp + 0x180], 0
0x42060c:	je	0x420621
0x42060e:	mov	rdx, r15
0x420611:	mov	rsi, r14
0x420614:	lea	rdi, [rsp + 0x168]
0x42061c:	call	0x42b65e
0x420621:	push	0
0x420623:	xor	r8d, r8d
0x420626:	xor	ecx, ecx
0x420628:	mov	edx, ebp
0x42062a:	push	0
0x42062c:	mov	esi, 0x4c4893
0x420631:	push	1
0x420633:	push	0
0x420635:	push	0
0x420637:	push	qword ptr [rsp + 0x898]
0x42063e:	push	qword ptr [rsp + 0x898]
0x420645:	push	qword ptr [rsp + 0x898]
0x42064c:	push	r15
0x42064e:	push	r14
0x420650:	mov	r9, qword ptr [rsp + 0xb8]
0x420658:	mov	rdi, qword ptr [rsp + 0x58]
0x42065d:	call	0x41f8c5
0x420662:	add	rsp, 0x50
0x420666:	mov	r12d, eax
0x420669:	test	eax, eax
0x42066b:	jns	0x4219d6
0x420671:	jmp	0x420759
0x420676:	cmp	dword ptr [rsp + 0x50], 0
0x42067b:	je	0x42069a
0x42067d:	cmp	dword ptr [rsp + 0x1a0], 0
0x420685:	je	0x42069a
0x420687:	mov	rdx, r15
0x42068a:	mov	rsi, r14
0x42068d:	lea	rdi, [rsp + 0x188]
0x420695:	call	0x42b65e
0x42069a:	cmp	qword ptr [rsp + 0x70], 0
0x4206a0:	mov	qword ptr [rsp + 0xf8], 0
0x4206ac:	je	0x42076b
0x4206b2:	mov	rdx, qword ptr [rsp + 0x70]
0x4206b7:	mov	rdi, qword ptr [rsp + 8]
0x4206bc:	mov	r8, r15
0x4206bf:	mov	rcx, r14
0x4206c2:	mov	rsi, qword ptr [rsp + 0x90]
0x4206ca:	call	0x41f257
0x4206cf:	mov	ebp, eax
0x4206d1:	test	eax, eax
0x4206d3:	js	0x42076b
0x4206d9:	mov	edi, dword ptr [rsp + 0xc0]
0x4206e0:	xor	r8d, r8d
0x4206e3:	xor	ecx, ecx
0x4206e5:	mov	edx, eax
0x4206e7:	push	rdi
0x4206e8:	push	qword ptr [rsp + 0xc0]
0x4206ef:	push	1
0x4206f1:	push	0
0x4206f3:	lea	r9, [rsp + 0x118]
0x4206fb:	push	r9
0x4206fd:	push	qword ptr [rsp + 0x898]
0x420704:	push	qword ptr [rsp + 0x898]
0x42070b:	push	qword ptr [rsp + 0x898]
0x420712:	push	r15
0x420714:	push	r14
0x420716:	mov	r9, qword ptr [rsp + 0xb8]
0x42071e:	mov	rsi, qword ptr [rsp + 0xe0]
0x420726:	mov	rdi, qword ptr [rsp + 0x58]
0x42072b:	call	0x41f8c5
0x420730:	add	rsp, 0x50
0x420734:	cmp	dword ptr [rsp + 0x180], 0
0x42073c:	mov	r12d, eax
0x42073f:	je	0x420754
0x420741:	mov	rdx, r15
0x420744:	mov	rsi, r14
0x420747:	lea	rdi, [rsp + 0x168]
0x42074f:	call	0x42b65e
0x420754:	test	r12d, r12d
0x420757:	jns	0x42078f
0x420759:	mov	rdx, r15
0x42075c:	mov	rsi, r14
0x42075f:	mov	edi, ebp
0x420761:	call	0x41c9ad
0x420766:	jmp	0x422990
0x42076b:	cmp	dword ptr [rsp + 0x58], 0
0x420770:	je	0x42078f
0x420772:	cmp	dword ptr [rsp + 0x180], 0
0x42077a:	je	0x42078f
0x42077c:	mov	rdx, r15
0x42077f:	mov	rsi, r14
0x420782:	lea	rdi, [rsp + 0x168]
0x42078a:	call	0x42b65e
0x42078f:	cmp	dword ptr [rsp + 0x64], 0
0x420794:	je	0x4216eb
0x42079a:	mov	rbp, qword ptr [rsp + 0x148]
0x4207a2:	cmp	r13, 0x17
0x4207a6:	ja	0x4207b5
0x4207a8:	mov	dword ptr [rsp + 0x40], 0
0x4207b0:	jmp	0x421662
0x4207b5:	mov	edx, 6
0x4207ba:	mov	esi, 0x4c95e8
0x4207bf:	mov	rdi, rbp
0x4207c2:	call	0x403b70
0x4207c7:	mov	dword ptr [rsp + 0x40], eax
0x4207cb:	test	eax, eax
0x4207cd:	jne	0x4207a8
0x4207cf:	cmp	byte ptr [rbp + 6], 0
0x4207d3:	jne	0x4207a8
0x4207d5:	mov	al, byte ptr [rbp + 7]
0x4207d8:	mov	byte ptr [rsp + 0x60], al
0x4207dc:	test	al, 0xf8
0x4207de:	jne	0x4207a8
0x4207e0:	lea	rdi, [rbp + 6]
0x4207e4:	mov	esi, 2
0x4207e9:	call	0x42b584
0x4207ee:	cmp	eax, dword ptr [rbp + 8]
0x4207f1:	jne	0x4207a8
0x4207f3:	cmp	word ptr [rbp + r13 - 2], 0x5a59
0x4207fb:	jne	0x4207a8
0x4207fd:	cmp	byte ptr [rbp + r13 - 4], 0
0x420803:	jne	0x4207a8
0x420805:	mov	cl, byte ptr [rsp + 0x60]
0x420809:	cmp	cl, byte ptr [rbp + r13 - 3]
0x42080e:	jne	0x4207a8
0x420810:	lea	r8, [r13 - 8]
0x420814:	movzx	eax, byte ptr [rbp + r13 - 7]
0x42081a:	mov	esi, 6
0x42081f:	movzx	r12d, byte ptr [rbp + r13 - 6]
0x420825:	lea	rdi, [rbp + r8]
0x42082a:	movzx	r10d, byte ptr [rbp + r13 - 5]
0x420830:	lea	rbx, [r13 - 0xc]
0x420834:	movzx	edx, byte ptr [rdi]
0x420837:	shl	r12d, 0x10
0x42083b:	shl	eax, 8
0x42083e:	mov	qword ptr [rsp + 0x320], r8
0x420846:	or	eax, r12d
0x420849:	shl	r10d, 0x18
0x42084d:	or	eax, edx
0x42084f:	or	eax, r10d
0x420852:	cdqe	
0x420854:	lea	r12, [rax*4 + 4]
0x42085c:	call	0x42b584
0x420861:	movzx	esi, byte ptr [rbp + r13 - 0xb]
0x420867:	movzx	edi, byte ptr [rbp + r13 - 0xa]
0x42086d:	movzx	r9d, byte ptr [rbp + r13 - 0xc]
0x420873:	movzx	ecx, byte ptr [rbp + r13 - 9]
0x420879:	shl	esi, 8
0x42087c:	shl	edi, 0x10
0x42087f:	or	esi, edi
0x420881:	shl	ecx, 0x18
0x420884:	or	esi, r9d
0x420887:	or	esi, ecx
0x420889:	cmp	eax, esi
0x42088b:	jne	0x4207a8
0x420891:	lea	r8, [r12 + 0xc]
0x420896:	cmp	rbx, r8
0x420899:	jb	0x4207a8
0x42089f:	mov	rax, rbx
0x4208a2:	sub	rax, r12
0x4208a5:	mov	qword ptr [rsp + 0x50], rax
0x4208aa:	add	rax, rbp
0x4208ad:	cmp	byte ptr [rax], 0
0x4208b0:	mov	qword ptr [rsp + 0x10], rax
0x4208b5:	jne	0x4207a8
0x4208bb:	mov	rdx, qword ptr [rsp + 0x50]
0x4208c0:	mov	r10, qword ptr [rsp + 0x50]
0x4208c5:	inc	rdx
0x4208c8:	mov	qword ptr [rsp + 0x320], rdx
0x4208d0:	mov	r11b, byte ptr [rbp + r10 + 1]
0x4208d5:	test	r11b, r11b
0x4208d8:	je	0x42163c
0x4208de:	dec	r11b
0x4208e1:	jne	0x4207a8
0x4208e7:	mov	rsi, qword ptr [rsp + 0x50]
0x4208ec:	lea	rcx, [rsp + 0x360]
0x4208f4:	lea	rdx, [rsp + 0x320]
0x4208fc:	mov	rdi, rbp
0x4208ff:	add	rsi, 2
0x420903:	mov	qword ptr [rsp + 0x320], rsi
0x42090b:	mov	rsi, r13
0x42090e:	call	0x41ca28
0x420913:	test	eax, eax
0x420915:	je	0x4207a8
0x42091b:	lea	rcx, [rsp + 0x3a0]
0x420923:	mov	rdi, rbp
0x420926:	call	0x41ca28
0x42092b:	test	eax, eax
0x42092d:	je	0x4207a8
0x420933:	mov	rcx, qword ptr [rsp + 0x320]
0x42093b:	mov	rdi, qword ptr [rsp + 0x10]
0x420940:	add	rcx, 3
0x420944:	and	rcx, 0xfffffffffffffffc
0x420948:	mov	rsi, rcx
0x42094b:	mov	qword ptr [rsp + 0x320], rcx
0x420953:	sub	rsi, rbx
0x420956:	mov	qword ptr [rsp + 0x28], rcx
0x42095b:	add	rsi, r12
0x42095e:	call	0x42b584
0x420963:	mov	r9, qword ptr [rsp + 0x28]
0x420968:	mov	r12d, eax
0x42096b:	movzx	r8d, byte ptr [rbp + r9 + 1]
0x420971:	movzx	eax, byte ptr [rbp + r9 + 2]
0x420977:	movzx	edx, byte ptr [rbp + r9]
0x42097d:	movzx	r10d, byte ptr [rbp + r9 + 3]
0x420983:	shl	r8d, 8
0x420987:	shl	eax, 0x10
0x42098a:	or	r8d, eax
0x42098d:	shl	r10d, 0x18
0x420991:	or	r8d, edx
0x420994:	or	r8d, r10d
0x420997:	cmp	r12d, r8d
0x42099a:	jne	0x4207a8
0x4209a0:	lea	r11, [r9 + 4]
0x4209a4:	mov	qword ptr [rsp + 0x320], r11
0x4209ac:	cmp	rbx, r11
0x4209af:	jne	0x4207a8
0x4209b5:	mov	rsi, qword ptr [rsp + 0x3a0]
0x4209bd:	mov	rdi, qword ptr [rsp + 8]
0x4209c2:	mov	rcx, r15
0x4209c5:	mov	rdx, r14
0x4209c8:	mov	qword ptr [rsp + 0x38], rsi
0x4209cd:	call	0x41eee1
0x4209d2:	mov	qword ptr [rsp + 0x20], rax
0x4209d7:	test	rax, rax
0x4209da:	je	0x4207a8
0x4209e0:	mov	rdi, qword ptr [rsp + 8]
0x4209e5:	mov	rcx, r15
0x4209e8:	mov	rdx, r14
0x4209eb:	mov	esi, 0x6e6c
0x4209f0:	call	0x41eee1
0x4209f5:	mov	qword ptr [rsp + 0x28], rax
0x4209fa:	test	rax, rax
0x4209fd:	je	0x421626
0x420a03:	mov	qword ptr [rsp + 0x320], 0xc
0x420a0f:	movzx	ebx, byte ptr [rbp + 0xc]
0x420a13:	lea	rbx, [rbx*4 + 4]
0x420a1b:	lea	rcx, [rbx + 0xc]
0x420a1f:	mov	qword ptr [rsp + 0x10], rcx
0x420a24:	cmp	r13, rcx
0x420a27:	jb	0x421626
0x420a2d:	mov	r12b, byte ptr [rbp + 0xd]
0x420a31:	test	r12b, 0x3c
0x420a35:	jne	0x421626
0x420a3b:	mov	qword ptr [rsp + 0x3e0], 0
0x420a47:	mov	edi, 0xe
0x420a4c:	test	r12b, 0x40
0x420a50:	je	0x420a89
0x420a52:	lea	rcx, [rsp + 0x3e0]
0x420a5a:	lea	rdx, [rsp + 0x320]
0x420a62:	mov	rsi, r13
0x420a65:	mov	rdi, rbp
0x420a68:	mov	qword ptr [rsp + 0x320], 0xe
0x420a74:	call	0x41ca28
0x420a79:	test	eax, eax
0x420a7b:	je	0x421626
0x420a81:	mov	rdi, qword ptr [rsp + 0x320]
0x420a89:	mov	qword ptr [rsp + 0x420], 0
0x420a95:	test	r12b, r12b
0x420a98:	jns	0x420acd
0x420a9a:	mov	qword ptr [rsp + 0x320], rdi
0x420aa2:	lea	rcx, [rsp + 0x420]
0x420aaa:	mov	rsi, r13
0x420aad:	mov	rdi, rbp
0x420ab0:	lea	rdx, [rsp + 0x320]
0x420ab8:	call	0x41ca28
0x420abd:	test	eax, eax
0x420abf:	je	0x421626
0x420ac5:	mov	rdi, qword ptr [rsp + 0x320]
0x420acd:	and	r12b, 3
0x420ad1:	jne	0x421626
0x420ad7:	lea	r9, [rdi + 2]
0x420adb:	cmp	qword ptr [rsp + 0x10], r9
0x420ae0:	jbe	0x421626
0x420ae6:	cmp	byte ptr [rbp + rdi], 0x21
0x420aeb:	jne	0x421626
0x420af1:	cmp	byte ptr [rbp + rdi + 1], 1
0x420af6:	jne	0x421626
0x420afc:	cmp	byte ptr [rbp + rdi + 2], 0x28
0x420b01:	ja	0x421626
0x420b07:	lea	r8, [rdi + 7]
0x420b0b:	cmp	r13, r8
0x420b0e:	jb	0x421626
0x420b14:	add	rdi, 6
0x420b18:	and	rdi, 0xfffffffffffffffc
0x420b1c:	lea	r12, [rdi + 4]
0x420b20:	mov	qword ptr [rsp + 0x10], rdi
0x420b25:	cmp	r13, r12
0x420b28:	jb	0x421626
0x420b2e:	lea	rsi, [rbx - 4]
0x420b32:	lea	rdi, [rbp + 0xc]
0x420b36:	call	0x42b584
0x420b3b:	mov	r11, qword ptr [rsp + 0x10]
0x420b40:	movzx	esi, byte ptr [rbp + r11 + 1]
0x420b46:	movzx	edx, byte ptr [rbp + r11 + 2]
0x420b4c:	movzx	ebx, byte ptr [rbp + r11]
0x420b52:	movzx	ecx, byte ptr [rbp + r11 + 3]
0x420b58:	shl	esi, 8
0x420b5b:	shl	edx, 0x10
0x420b5e:	or	esi, edx
0x420b60:	shl	ecx, 0x18
0x420b63:	or	esi, ebx
0x420b65:	or	esi, ecx
0x420b67:	cmp	eax, esi
0x420b69:	jne	0x421626
0x420b6f:	mov	dword ptr [rsp + 0x10], 0
0x420b77:	xor	esi, esi
0x420b79:	mov	dword ptr [rsp + 0x80], 0
0x420b84:	mov	dword ptr [rsp + 0x58], 0
0x420b8c:	mov	dword ptr [rsp + 0x78], 0
0x420b94:	mov	qword ptr [rsp + 0x70], 0
0x420b9d:	mov	qword ptr [rsp + 0x850], r14
0x420ba5:	mov	qword ptr [rsp + 0x858], r15
0x420bad:	mov	r15, r13
0x420bb0:	cmp	r15, r12
0x420bb3:	jbe	0x42152c
0x420bb9:	mov	dword ptr [rsp + 0x268], 0xffffffff
0x420bc4:	lea	rbx, [r12 + 1]
0x420bc9:	mov	dword ptr [rsp + 0x288], 0
0x420bd4:	mov	r14b, byte ptr [rbp + r12]
0x420bd9:	test	r14b, r14b
0x420bdc:	je	0x421544
0x420be2:	cmp	r14b, 1
0x420be6:	je	0x420bee
0x420be8:	cmp	r14b, 0xdf
0x420bec:	jbe	0x420bf3
0x420bee:	mov	qword ptr [rsp + 0x70], rsi
0x420bf3:	test	r14b, r14b
0x420bf6:	js	0x420c55
0x420bf8:	cmp	r14b, 2
0x420bfc:	ja	0x4215fd
0x420c02:	lea	r9, [r12 + 3]
0x420c07:	cmp	r15, r9
0x420c0a:	jb	0x4215fd
0x420c10:	movzx	eax, byte ptr [rbp + rbx]
0x420c15:	movzx	r8d, byte ptr [rbp + r12 + 2]
0x420c1b:	shl	eax, 8
0x420c1e:	cdqe	
0x420c20:	lea	rcx, [rax + r8 + 1]
0x420c25:	lea	r12, [r9 + rcx]
0x420c29:	cmp	r15, r12
0x420c2c:	jb	0x4215fd
0x420c32:	lea	r13, [rcx + rsi]
0x420c36:	cmp	qword ptr [rsp + 0x38], r13
0x420c3b:	jb	0x4215fd
0x420c41:	mov	rdi, qword ptr [rsp + 0x20]
0x420c46:	add	rdi, rsi
0x420c49:	lea	rsi, [rbp + r9]
0x420c4e:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x420c50:	jmp	0x421524
0x420c55:	lea	r13, [r12 + 5]
0x420c5a:	cmp	r15, r13
0x420c5d:	jbe	0x4215fd
0x420c63:	movzx	eax, byte ptr [rbp + rbx]
0x420c68:	movzx	r10d, byte ptr [rbp + r12 + 3]
0x420c6e:	mov	r9d, r14d
0x420c71:	movzx	edi, byte ptr [rbp + r12 + 2]
0x420c77:	shl	r9d, 0x10
0x420c7b:	movzx	edx, byte ptr [rbp + r12 + 4]
0x420c81:	shl	eax, 8
0x420c84:	and	r9d, 0x1f0000
0x420c8b:	shl	r10d, 8
0x420c8f:	lea	r8, [rdi + r9 + 1]
0x420c94:	movsxd	r11, r10d
0x420c97:	movsxd	rdi, eax
0x420c9a:	add	rdi, r8
0x420c9d:	lea	rdx, [r11 + rdx + 1]
0x420ca2:	cmp	r14b, 0xbf
0x420ca6:	jbe	0x420d0d
0x420ca8:	mov	r14b, byte ptr [rbp + r13]
0x420cad:	lea	r13, [r12 + 6]
0x420cb2:	cmp	r14b, 0xe0
0x420cb6:	ja	0x4215fd
0x420cbc:	mov	dword ptr [rsp + 0x80], 0
0x420cc7:	cmp	r14b, 0x2c
0x420ccb:	jbe	0x420cda
0x420ccd:	inc	dword ptr [rsp + 0x80]
0x420cd4:	sub	r14d, 0x2d
0x420cd8:	jmp	0x420cc7
0x420cda:	mov	dword ptr [rsp + 0x58], 0
0x420ce2:	cmp	r14b, 9
0x420ce6:	jbe	0x420cf2
0x420ce8:	inc	dword ptr [rsp + 0x58]
0x420cec:	sub	r14d, 9
0x420cf0:	jmp	0x420ce2
0x420cf2:	movzx	r12d, r14b
0x420cf6:	mov	ebx, dword ptr [rsp + 0x58]
0x420cfa:	mov	dword ptr [rsp + 0x78], r12d
0x420cff:	add	ebx, dword ptr [rsp + 0x78]
0x420d03:	cmp	ebx, 4
0x420d06:	jbe	0x420d13
0x420d08:	jmp	0x4215fd
0x420d0d:	cmp	r14b, 0x9f
0x420d11:	jbe	0x420d41
0x420d13:	xorps	xmm0, xmm0
0x420d16:	xor	r14d, r14d
0x420d19:	movaps	xmmword ptr [rsp + 0x4b0], xmm0
0x420d21:	mov	r9, qword ptr [rsp + 0x28]
0x420d26:	mov	word ptr [r9 + r14*2], 0x400
0x420d2d:	inc	r14
0x420d30:	cmp	r14, 0x3736
0x420d37:	jne	0x420d21
0x420d39:	mov	dword ptr [rsp + 0x10], 0
0x420d41:	lea	rax, [r13 + 5]
0x420d45:	cmp	r15, rax
0x420d48:	jb	0x4215fd
0x420d4e:	lea	rcx, [rdx + rax]
0x420d52:	movzx	r10d, byte ptr [rbp + r13 + 1]
0x420d58:	mov	r14, rbp
0x420d5b:	movzx	r8d, byte ptr [rbp + r13 + 2]
0x420d61:	mov	qword ptr [rsp + 0x98], rcx
0x420d69:	mov	cl, byte ptr [rsp + 0x80]
0x420d70:	mov	edx, 1
0x420d75:	movzx	r11d, byte ptr [rbp + r13 + 3]
0x420d7b:	shl	r10d, 0x18
0x420d7f:	shl	r8d, 0x10
0x420d83:	movzx	r13d, byte ptr [rbp + r13 + 4]
0x420d89:	shl	edx, cl
0x420d8b:	mov	cl, byte ptr [rsp + 0x58]
0x420d8f:	mov	qword ptr [rsp + 0x320], rax
0x420d97:	add	r10d, r8d
0x420d9a:	mov	eax, 1
0x420d9f:	shl	r11d, 8
0x420da3:	dec	edx
0x420da5:	shl	eax, cl
0x420da7:	add	r10d, r11d
0x420daa:	mov	dword ptr [rsp + 0xd8], edx
0x420db1:	dec	eax
0x420db3:	add	r10d, r13d
0x420db6:	mov	r13, rsi
0x420db9:	cdqe	
0x420dbb:	lea	rsi, [rsi + rdi]
0x420dbf:	mov	edi, 8
0x420dc4:	sub	edi, dword ptr [rsp + 0x78]
0x420dc8:	mov	dword ptr [rsp + 0x288], r10d
0x420dd0:	mov	qword ptr [rsp + 0xa8], rax
0x420dd8:	mov	qword ptr [rsp + 0xb0], rsi
0x420de0:	mov	dword ptr [rsp + 0xb8], edi
0x420de7:	mov	rbp, qword ptr [rsp + 0x98]
0x420def:	cmp	rbp, qword ptr [rsp + 0x320]
0x420df7:	jbe	0x4214f6
0x420dfd:	cmp	qword ptr [rsp + 0xb0], r13
0x420e05:	je	0x4214f6
0x420e0b:	mov	r12d, dword ptr [rsp + 0x10]
0x420e10:	mov	ebx, r13d
0x420e13:	sub	ebx, dword ptr [rsp + 0x70]
0x420e17:	mov	rsi, r15
0x420e1a:	and	ebx, dword ptr [rsp + 0xd8]
0x420e21:	lea	r9, [rsp + 0x288]
0x420e29:	mov	rdi, r14
0x420e2c:	shl	r12d, 4
0x420e30:	lea	r8, [rsp + 0x268]
0x420e38:	lea	rcx, [rsp + 0x320]
0x420e40:	lea	edx, [rbx + r12]
0x420e44:	add	rdx, rdx
0x420e47:	add	rdx, qword ptr [rsp + 0x28]
0x420e4c:	call	0x41caa0
0x420e51:	test	eax, eax
0x420e53:	je	0x421373
0x420e59:	mov	r11d, dword ptr [rsp + 0x10]
0x420e5e:	mov	rsi, r15
0x420e61:	mov	rdi, r14
0x420e64:	lea	r9, [rsp + 0x288]
0x420e6c:	lea	r8, [rsp + 0x268]
0x420e74:	lea	rcx, [rsp + 0x320]
0x420e7c:	lea	edx, [r11 + 0xc0]
0x420e83:	add	rdx, rdx
0x420e86:	add	rdx, qword ptr [rsp + 0x28]
0x420e8b:	call	0x41caa0
0x420e90:	test	eax, eax
0x420e92:	je	0x420fd5
0x420e98:	mov	esi, dword ptr [rsp + 0x10]
0x420e9c:	lea	r9, [rsp + 0x288]
0x420ea4:	mov	rdi, r14
0x420ea7:	lea	r8, [rsp + 0x268]
0x420eaf:	lea	rcx, [rsp + 0x320]
0x420eb7:	lea	edx, [rsi + 0xcc]
0x420ebd:	mov	rsi, r15
0x420ec0:	add	rdx, rdx
0x420ec3:	add	rdx, qword ptr [rsp + 0x28]
0x420ec8:	call	0x41caa0
0x420ecd:	test	eax, eax
0x420ecf:	je	0x420f95
0x420ed5:	mov	r9d, dword ptr [rsp + 0x10]
0x420eda:	lea	r8, [rsp + 0x268]
0x420ee2:	mov	rsi, r15
0x420ee5:	mov	rdi, r14
0x420ee8:	lea	rcx, [rsp + 0x320]
0x420ef0:	lea	edx, [r9 + 0xd8]
0x420ef7:	lea	r9, [rsp + 0x288]
0x420eff:	add	rdx, rdx
0x420f02:	add	rdx, qword ptr [rsp + 0x28]
0x420f07:	call	0x41caa0
0x420f0c:	mov	ebp, dword ptr [rsp + 0x4b4]
0x420f13:	test	eax, eax
0x420f15:	je	0x420f76
0x420f17:	mov	r8d, dword ptr [rsp + 0x10]
0x420f1c:	lea	r9, [rsp + 0x288]
0x420f24:	mov	rsi, r15
0x420f27:	mov	rdi, r14
0x420f2a:	lea	rcx, [rsp + 0x320]
0x420f32:	lea	edx, [r8 + 0xe4]
0x420f39:	lea	r8, [rsp + 0x268]
0x420f41:	add	rdx, rdx
0x420f44:	add	rdx, qword ptr [rsp + 0x28]
0x420f49:	call	0x41caa0
0x420f4e:	mov	r12d, dword ptr [rsp + 0x4b8]
0x420f56:	test	eax, eax
0x420f58:	je	0x420f6c
0x420f5a:	mov	edx, dword ptr [rsp + 0x4bc]
0x420f61:	mov	dword ptr [rsp + 0x4bc], r12d
0x420f69:	mov	r12d, edx
0x420f6c:	mov	dword ptr [rsp + 0x4b8], ebp
0x420f73:	mov	ebp, r12d
0x420f76:	movd	xmm2, dword ptr [rsp + 0x4b0]
0x420f7f:	movd	xmm1, ebp
0x420f83:	punpckldq	xmm1, xmm2
0x420f87:	movq	qword ptr [rsp + 0x4b0], xmm1
0x420f90:	jmp	0x421281
0x420f95:	lea	edx, [rbx + r12 + 0xf0]
0x420f9d:	mov	rsi, r15
0x420fa0:	mov	rdi, r14
0x420fa3:	add	rdx, rdx
0x420fa6:	lea	r9, [rsp + 0x288]
0x420fae:	add	rdx, qword ptr [rsp + 0x28]
0x420fb3:	lea	r8, [rsp + 0x268]
0x420fbb:	lea	rcx, [rsp + 0x320]
0x420fc3:	call	0x41caa0
0x420fc8:	test	eax, eax
0x420fca:	je	0x421beb
0x420fd0:	jmp	0x421281
0x420fd5:	cmp	dword ptr [rsp + 0x10], 6
0x420fda:	jbe	0x420fe6
0x420fdc:	mov	dword ptr [rsp + 0x10], 0xa
0x420fe4:	jmp	0x420fee
0x420fe6:	mov	dword ptr [rsp + 0x10], 7
0x420fee:	mov	edx, dword ptr [rsp + 0x4b8]
0x420ff5:	mov	r8d, ebx
0x420ff8:	xor	ecx, ecx
0x420ffa:	mov	rsi, r15
0x420ffd:	mov	rax, qword ptr [rsp + 0x4b0]
0x421005:	lea	rdi, [rsp + 0x288]
0x42100d:	mov	dword ptr [rsp + 0x4bc], edx
0x421014:	mov	qword ptr [rsp + 0x4b4], rax
0x42101c:	push	rdi
0x42101d:	mov	rdi, r14
0x421020:	lea	r12, [rsp + 0x270]
0x421028:	push	r12
0x42102a:	mov	rdx, qword ptr [rsp + 0x38]
0x42102f:	lea	r9, [rsp + 0x330]
0x421037:	call	0x41cb72
0x42103c:	mov	ebp, eax
0x42103e:	pop	rax
0x42103f:	pop	rdx
0x421040:	mov	edx, 3
0x421045:	cmp	ebp, 5
0x421048:	ja	0x42104d
0x42104a:	lea	edx, [rbp - 2]
0x42104d:	shl	edx, 6
0x421050:	mov	r9, r12
0x421053:	mov	ecx, 6
0x421058:	mov	rdi, r14
0x42105b:	add	edx, 0x1b0
0x421061:	add	rdx, rdx
0x421064:	add	rdx, qword ptr [rsp + 0x28]
0x421069:	push	r11
0x42106b:	lea	rsi, [rsp + 0x290]
0x421073:	push	rsi
0x421074:	mov	rsi, r15
0x421077:	lea	r8, [rsp + 0x330]
0x42107f:	call	0x41cb00
0x421084:	pop	rbx
0x421085:	pop	r12
0x421087:	cmp	eax, 3
0x42108a:	ja	0x421098
0x42108c:	mov	dword ptr [rsp + 0x4b0], eax
0x421093:	jmp	0x4212cb
0x421098:	mov	ebx, eax
0x42109a:	mov	r12d, eax
0x42109d:	and	ebx, 1
0x4210a0:	shr	r12d, 1
0x4210a3:	add	ebx, 2
0x4210a6:	cmp	eax, 0xd
0x4210a9:	jbe	0x4210be
0x4210ab:	mov	dword ptr [rsp + 0x4b0], ebx
0x4210b2:	xor	r10d, r10d
0x4210b5:	sub	r12d, 5
0x4210b9:	jmp	0x42118b
0x4210be:	lea	r9d, [r12 - 1]
0x4210c3:	xor	edx, edx
0x4210c5:	mov	r10d, 1
0x4210cb:	mov	rsi, r15
0x4210ce:	mov	dword ptr [rsp + 0x88], r9d
0x4210d6:	mov	cl, byte ptr [rsp + 0x88]
0x4210dd:	xor	r12d, r12d
0x4210e0:	mov	qword ptr [rsp + 0xc0], r13
0x4210e8:	mov	r13d, ebp
0x4210eb:	mov	ebp, edx
0x4210ed:	shl	ebx, cl
0x4210ef:	mov	r8d, ebx
0x4210f2:	mov	dword ptr [rsp + 0x4b0], ebx
0x4210f9:	mov	r15d, ebx
0x4210fc:	mov	ebx, r10d
0x4210ff:	sub	r8d, eax
0x421102:	lea	r11d, [r8 + 0x2af]
0x421109:	mov	qword ptr [rsp + 0xa0], r11
0x421111:	mov	edx, ebx
0x421113:	add	rdx, qword ptr [rsp + 0xa0]
0x42111b:	lea	rcx, [rsp + 0x320]
0x421123:	mov	rdi, r14
0x421126:	add	rdx, rdx
0x421129:	lea	r9, [rsp + 0x288]
0x421131:	add	rdx, qword ptr [rsp + 0x28]
0x421136:	mov	qword ptr [rsp + 0xc8], rsi
0x42113e:	lea	r8, [rsp + 0x268]
0x421146:	call	0x41caa0
0x42114b:	mov	ecx, r12d
0x42114e:	inc	r12d
0x421151:	mov	rsi, qword ptr [rsp + 0xc8]
0x421159:	lea	ebx, [rax + rbx*2]
0x42115c:	shl	eax, cl
0x42115e:	add	ebp, eax
0x421160:	cmp	dword ptr [rsp + 0x88], r12d
0x421168:	ja	0x421111
0x42116a:	mov	eax, r15d
0x42116d:	mov	edi, ebp
0x42116f:	mov	r15, rsi
0x421172:	mov	ebp, r13d
0x421175:	add	eax, edi
0x421177:	mov	r13, qword ptr [rsp + 0xc0]
0x42117f:	mov	dword ptr [rsp + 0x4b0], eax
0x421186:	jmp	0x4212cb
0x42118b:	cmp	r10d, r12d
0x42118e:	jae	0x4211e5
0x421190:	mov	rsi, r15
0x421193:	mov	rdi, r14
0x421196:	lea	r8, [rsp + 0x288]
0x42119e:	inc	r10d
0x4211a1:	lea	rcx, [rsp + 0x268]
0x4211a9:	lea	rdx, [rsp + 0x320]
0x4211b1:	call	0x41ca6c
0x4211b6:	mov	eax, dword ptr [rsp + 0x268]
0x4211bd:	mov	edi, dword ptr [rsp + 0x288]
0x4211c4:	shr	eax, 1
0x4211c6:	sub	edi, eax
0x4211c8:	mov	dword ptr [rsp + 0x268], eax
0x4211cf:	mov	esi, edi
0x4211d1:	sar	esi, 0x1f
0x4211d4:	and	eax, esi
0x4211d6:	lea	ebx, [rsi + rbx*2 + 1]
0x4211da:	add	eax, edi
0x4211dc:	mov	dword ptr [rsp + 0x288], eax
0x4211e3:	jmp	0x42118b
0x4211e5:	shl	ebx, 4
0x4211e8:	xor	r9d, r9d
0x4211eb:	mov	r10d, 1
0x4211f1:	mov	rsi, r15
0x4211f4:	mov	qword ptr [rsp + 0x88], r13
0x4211fc:	mov	r15d, ebx
0x4211ff:	mov	r13d, ebp
0x421202:	xor	r12d, r12d
0x421205:	mov	ebx, r10d
0x421208:	mov	ebp, r9d
0x42120b:	mov	rcx, qword ptr [rsp + 0x28]
0x421210:	mov	r8d, ebx
0x421213:	mov	rdi, r14
0x421216:	lea	r9, [rsp + 0x288]
0x42121e:	add	r8, r8
0x421221:	mov	qword ptr [rsp + 0xa0], rsi
0x421229:	lea	rdx, [rcx + r8 + 0x644]
0x421231:	lea	rcx, [rsp + 0x320]
0x421239:	lea	r8, [rsp + 0x268]
0x421241:	call	0x41caa0
0x421246:	mov	ecx, r12d
0x421249:	inc	r12d
0x42124c:	mov	rsi, qword ptr [rsp + 0xa0]
0x421254:	lea	ebx, [rax + rbx*2]
0x421257:	shl	eax, cl
0x421259:	add	ebp, eax
0x42125b:	cmp	r12d, 4
0x42125f:	jne	0x42120b
0x421261:	mov	r11d, r15d
0x421264:	mov	edx, ebp
0x421266:	mov	r15, rsi
0x421269:	mov	ebp, r13d
0x42126c:	add	r11d, edx
0x42126f:	mov	r13, qword ptr [rsp + 0x88]
0x421277:	mov	dword ptr [rsp + 0x4b0], r11d
0x42127f:	jmp	0x4212cb
0x421281:	cmp	dword ptr [rsp + 0x10], 6
0x421286:	ja	0x421c11
0x42128c:	mov	dword ptr [rsp + 0x10], 8
0x421294:	lea	r10, [rsp + 0x288]
0x42129c:	mov	rsi, r15
0x42129f:	mov	r8d, ebx
0x4212a2:	mov	rdi, r14
0x4212a5:	push	r10
0x4212a7:	lea	rcx, [rsp + 0x270]
0x4212af:	push	rcx
0x4212b0:	mov	rdx, qword ptr [rsp + 0x38]
0x4212b5:	mov	ecx, 1
0x4212ba:	lea	r9, [rsp + 0x330]
0x4212c2:	call	0x41cb72
0x4212c7:	pop	rcx
0x4212c8:	pop	rsi
0x4212c9:	mov	ebp, eax
0x4212cb:	mov	eax, dword ptr [rsp + 0x4b0]
0x4212d2:	mov	rsi, r13
0x4212d5:	sub	rsi, qword ptr [rsp + 0x70]
0x4212da:	lea	ebx, [rax + 1]
0x4212dd:	cmp	rsi, rbx
0x4212e0:	jb	0x4215fd
0x4212e6:	mov	ecx, ebp
0x4212e8:	lea	r9, [r13 + rcx]
0x4212ed:	cmp	qword ptr [rsp + 0x38], r9
0x4212f2:	jb	0x4215fd
0x4212f8:	test	eax, eax
0x4212fa:	jne	0x421314
0x4212fc:	mov	rbx, qword ptr [rsp + 0x20]
0x421301:	mov	al, byte ptr [rbx + r13 - 1]
0x421306:	lea	rdi, [rbx + r13]
0x42130a:	mov	r13, r9
0x42130d:	rep stosb	byte ptr [rdi], al
0x42130f:	jmp	0x420de7
0x421314:	cmp	ebx, ebp
0x421316:	jb	0x421334
0x421318:	mov	rbp, qword ptr [rsp + 0x20]
0x42131d:	lea	rdi, [rbp + r13]
0x421322:	sub	r13, rax
0x421325:	lea	rsi, [rbp + r13 - 1]
0x42132a:	mov	r13, r9
0x42132d:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42132f:	jmp	0x420de7
0x421334:	mov	r8, qword ptr [rsp + 0x20]
0x421339:	test	ebp, ebp
0x42133b:	je	0x420de7
0x421341:	mov	r11d, dword ptr [rsp + 0x4b0]
0x421349:	mov	r10, r13
0x42134c:	lea	rdi, [r8 + r13]
0x421350:	lea	r12d, [r11 + 1]
0x421354:	cmp	r12d, ebp
0x421357:	cmova	r12d, ebp
0x42135b:	sub	r10, r11
0x42135e:	lea	rsi, [r8 + r10 - 1]
0x421363:	mov	edx, r12d
0x421366:	sub	ebp, r12d
0x421369:	mov	rcx, rdx
0x42136c:	add	r13, rdx
0x42136f:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x421371:	jmp	0x421339
0x421373:	xor	r10d, r10d
0x421376:	test	r13, r13
0x421379:	je	0x421386
0x42137b:	mov	r9, qword ptr [rsp + 0x20]
0x421380:	movzx	r10d, byte ptr [r9 + r13 - 1]
0x421386:	mov	cl, byte ptr [rsp + 0x78]
0x42138a:	mov	r8, r13
0x42138d:	sub	r8, qword ptr [rsp + 0x70]
0x421392:	and	r8, qword ptr [rsp + 0xa8]
0x42139a:	mov	rax, qword ptr [rsp + 0x28]
0x42139f:	shl	r8, cl
0x4213a2:	mov	cl, byte ptr [rsp + 0xb8]
0x4213a9:	sar	r10d, cl
0x4213ac:	movsxd	r11, r10d
0x4213af:	add	r8, r11
0x4213b2:	imul	rdx, r8, 0x600
0x4213b9:	cmp	dword ptr [rsp + 0x10], 6
0x4213be:	lea	rdi, [rax + rdx + 0xe6c]
0x4213c6:	ja	0x421402
0x4213c8:	push	r8
0x4213ca:	mov	rdx, rdi
0x4213cd:	mov	ecx, 8
0x4213d2:	mov	rsi, r15
0x4213d5:	mov	rdi, r14
0x4213d8:	lea	r8, [rsp + 0x290]
0x4213e0:	push	r8
0x4213e2:	lea	r9, [rsp + 0x278]
0x4213ea:	lea	r8, [rsp + 0x330]
0x4213f2:	call	0x41cb00
0x4213f7:	pop	r9
0x4213f9:	pop	r10
0x4213fb:	mov	ebx, eax
0x4213fd:	jmp	0x4214b0
0x421402:	mov	esi, dword ptr [rsp + 0x4b0]
0x421409:	xor	r9d, r9d
0x42140c:	lea	ebx, [rsi + 1]
0x42140f:	cmp	r13, rbx
0x421412:	jb	0x421425
0x421414:	mov	r12, qword ptr [rsp + 0x20]
0x421419:	mov	rbp, r13
0x42141c:	sub	rbp, rsi
0x42141f:	movzx	r9d, byte ptr [r12 + rbp - 1]
0x421425:	add	r9d, r9d
0x421428:	mov	rsi, r15
0x42142b:	mov	ebx, 1
0x421430:	mov	qword ptr [rsp + 0x88], r13
0x421438:	mov	r12d, 0x100
0x42143e:	mov	r15, rdi
0x421441:	mov	r13d, r9d
0x421444:	mov	ebp, r13d
0x421447:	lea	r10d, [r12 + rbx]
0x42144b:	lea	r9, [rsp + 0x288]
0x421453:	mov	rdi, r14
0x421456:	and	ebp, r12d
0x421459:	lea	r8, [rsp + 0x268]
0x421461:	add	r13d, r13d
0x421464:	add	ebx, ebx
0x421466:	lea	edx, [r10 + rbp]
0x42146a:	lea	rcx, [rsp + 0x320]
0x421472:	mov	qword ptr [rsp + 0xa0], rsi
0x42147a:	add	rdx, rdx
0x42147d:	add	rdx, r15
0x421480:	call	0x41caa0
0x421485:	mov	rsi, qword ptr [rsp + 0xa0]
0x42148d:	test	eax, eax
0x42148f:	je	0x421498
0x421491:	inc	ebx
0x421493:	mov	r12d, ebp
0x421496:	jmp	0x42149d
0x421498:	not	ebp
0x42149a:	and	r12d, ebp
0x42149d:	cmp	ebx, 0xff
0x4214a3:	jbe	0x421444
0x4214a5:	mov	r13, qword ptr [rsp + 0x88]
0x4214ad:	mov	r15, rsi
0x4214b0:	cmp	qword ptr [rsp + 0x38], r13
0x4214b5:	jbe	0x4215fd
0x4214bb:	mov	rcx, qword ptr [rsp + 0x20]
0x4214c0:	mov	byte ptr [rcx + r13], bl
0x4214c4:	inc	r13
0x4214c7:	cmp	dword ptr [rsp + 0x10], 3
0x4214cc:	jbe	0x4214e9
0x4214ce:	cmp	dword ptr [rsp + 0x10], 9
0x4214d3:	ja	0x4214df
0x4214d5:	sub	dword ptr [rsp + 0x10], 3
0x4214da:	jmp	0x420de7
0x4214df:	sub	dword ptr [rsp + 0x10], 6
0x4214e4:	jmp	0x420de7
0x4214e9:	mov	dword ptr [rsp + 0x10], 0
0x4214f1:	jmp	0x420de7
0x4214f6:	lea	r8, [rsp + 0x288]
0x4214fe:	mov	rsi, r15
0x421501:	mov	rdi, r14
0x421504:	mov	rbp, r14
0x421507:	lea	rcx, [rsp + 0x268]
0x42150f:	lea	rdx, [rsp + 0x320]
0x421517:	call	0x41ca6c
0x42151c:	mov	r12, qword ptr [rsp + 0x320]
0x421524:	mov	rsi, r13
0x421527:	jmp	0x420bb0
0x42152c:	mov	r11, r15
0x42152f:	mov	r14, qword ptr [rsp + 0x850]
0x421537:	mov	rbx, r12
0x42153a:	mov	r15, qword ptr [rsp + 0x858]
0x421542:	jmp	0x421557
0x421544:	mov	r11, r15
0x421547:	mov	r14, qword ptr [rsp + 0x850]
0x42154f:	mov	r15, qword ptr [rsp + 0x858]
0x421557:	add	rbx, 3
0x42155b:	and	rbx, 0xfffffffffffffffc
0x42155f:	cmp	r11, rbx
0x421562:	jb	0x421626
0x421568:	cmp	byte ptr [rsp + 0x60], 4
0x42156d:	je	0x4215d1
0x42156f:	ja	0x421626
0x421575:	cmp	byte ptr [rsp + 0x60], 0
0x42157a:	je	0x4215da
0x42157c:	cmp	byte ptr [rsp + 0x60], 1
0x421581:	jne	0x421626
0x421587:	lea	r13, [rbx + 4]
0x42158b:	cmp	r11, r13
0x42158e:	jb	0x421626
0x421594:	mov	rdi, qword ptr [rsp + 0x20]
0x421599:	call	0x42b584
0x42159e:	movzx	r12d, byte ptr [rbp + rbx + 1]
0x4215a4:	movzx	edx, byte ptr [rbp + rbx + 2]
0x4215a9:	movzx	r9d, byte ptr [rbp + rbx]
0x4215af:	movzx	ebx, byte ptr [rbp + rbx + 3]
0x4215b4:	shl	r12d, 8
0x4215b8:	shl	edx, 0x10
0x4215bb:	or	r12d, edx
0x4215be:	shl	ebx, 0x18
0x4215c1:	or	r12d, r9d
0x4215c4:	or	r12d, ebx
0x4215c7:	mov	rbx, r13
0x4215ca:	cmp	eax, r12d
0x4215cd:	je	0x4215da
0x4215cf:	jmp	0x421626
0x4215d1:	add	rbx, 8
0x4215d5:	cmp	r11, rbx
0x4215d8:	jb	0x421626
0x4215da:	mov	rax, qword ptr [rsp + 0x360]
0x4215e2:	lea	rbp, [rbx - 0xc]
0x4215e6:	mov	qword ptr [rsp + 0x320], rbx
0x4215ee:	add	rax, 3
0x4215f2:	and	rax, 0xfffffffffffffffc
0x4215f6:	cmp	rbp, rax
0x4215f9:	je	0x42160f
0x4215fb:	jmp	0x421626
0x4215fd:	mov	r14, qword ptr [rsp + 0x850]
0x421605:	mov	r15, qword ptr [rsp + 0x858]
0x42160d:	jmp	0x421626
0x42160f:	add	rbx, 3
0x421613:	and	rbx, 0xfffffffffffffffc
0x421617:	mov	qword ptr [rsp + 0x320], rbx
0x42161f:	cmp	qword ptr [rsp + 0x50], rbx
0x421624:	je	0x421658
0x421626:	mov	rdx, qword ptr [rsp + 0x38]
0x42162b:	mov	rsi, qword ptr [rsp + 0x20]
0x421630:	mov	rdi, qword ptr [rsp + 8]
0x421635:	call	0x42c1a8
0x42163a:	jmp	0x421662
0x42163c:	mov	qword ptr [rsp + 0x20], 0
0x421645:	mov	ecx, dword ptr [rsp + 0x64]
0x421649:	mov	qword ptr [rsp + 0x38], 0
0x421652:	mov	dword ptr [rsp + 0x40], ecx
0x421656:	jmp	0x421662
0x421658:	mov	r8d, dword ptr [rsp + 0x64]
0x42165d:	mov	dword ptr [rsp + 0x40], r8d
0x421662:	cmp	dword ptr [rsp + 0x160], 0
0x42166a:	je	0x42167f
0x42166c:	mov	rdx, r15
0x42166f:	mov	rsi, r14
0x421672:	lea	rdi, [rsp + 0x148]
0x42167a:	call	0x42b65e
0x42167f:	cmp	dword ptr [rsp + 0x40], 0
0x421684:	je	0x4216eb
0x421686:	push	0
0x421688:	or	edx, 0xffffffff
0x42168b:	push	0
0x42168d:	push	0
0x42168f:	push	0
0x421691:	push	0
0x421693:	push	qword ptr [rsp + 0x898]
0x42169a:	push	qword ptr [rsp + 0x898]
0x4216a1:	push	qword ptr [rsp + 0x898]
0x4216a8:	push	r15
0x4216aa:	push	r14
0x4216ac:	mov	r9, qword ptr [rsp + 0xb8]
0x4216b4:	mov	r8, qword ptr [rsp + 0x88]
0x4216bc:	mov	rcx, qword ptr [rsp + 0x70]
0x4216c1:	mov	rsi, qword ptr [rsp + 0xe0]
0x4216c9:	mov	rdi, qword ptr [rsp + 0x58]
0x4216ce:	call	0x41f8c5
0x4216d3:	mov	edx, dword ptr [rsp + 0x6c]
0x4216d7:	add	rsp, 0x50
0x4216db:	mov	r12d, eax
0x4216de:	or	edx, eax
0x4216e0:	js	0x422990
0x4216e6:	jmp	0x4219e1
0x4216eb:	lea	rbx, [rsp + 0x6f0]
0x4216f3:	xor	r10d, r10d
0x4216f6:	xor	r8d, r8d
0x4216f9:	xor	ebp, ebp
0x4216fb:	lea	r11, [rsp + 0x5d0]
0x421703:	mov	r13, rbx
0x421706:	mov	rsi, r11
0x421709:	mov	rdi, qword ptr [r13 + 8]
0x42170d:	test	rdi, rdi
0x421710:	je	0x421734
0x421712:	mov	r12, qword ptr [r13]
0x421716:	test	rbp, rbp
0x421719:	je	0x421724
0x42171b:	cmp	rbp, r12
0x42171e:	cmovg	rbp, r12
0x421722:	jmp	0x421727
0x421724:	mov	rbp, r12
0x421727:	add	r12, rdi
0x42172a:	cmp	r8, r12
0x42172d:	cmovl	r8, r12
0x421731:	add	r10, rdi
0x421734:	mov	r9, qword ptr [rsi + 8]
0x421738:	test	r9, r9
0x42173b:	je	0x42175e
0x42173d:	mov	rdx, qword ptr [rsi]
0x421740:	test	rbp, rbp
0x421743:	je	0x42174e
0x421745:	cmp	rbp, rdx
0x421748:	cmovg	rbp, rdx
0x42174c:	jmp	0x421751
0x42174e:	mov	rbp, rdx
0x421751:	add	rdx, r9
0x421754:	cmp	r8, rdx
0x421757:	cmovl	r8, rdx
0x42175b:	add	r10, r9
0x42175e:	add	r13, 0x20
0x421762:	lea	rax, [rsp + 0x810]
0x42176a:	add	rsi, 0x20
0x42176e:	cmp	rax, r13
0x421771:	jne	0x421709
0x421773:	test	rbp, rbp
0x421776:	je	0x42177d
0x421778:	test	r8, r8
0x42177b:	jne	0x4217a4
0x42177d:	cmp	dword ptr [rsp + 0x1c], 0
0x421782:	js	0x4218e2
0x421788:	mov	edi, dword ptr [rsp + 0x1c]
0x42178c:	mov	rdx, r15
0x42178f:	mov	rsi, r14
0x421792:	call	0x41c9ad
0x421797:	test	eax, eax
0x421799:	je	0x421c21
0x42179f:	jmp	0x4218e2
0x4217a4:	sub	r8, rbp
0x4217a7:	cmp	r8, 0x1fffffff
0x4217ae:	jle	0x4217bc
0x4217b0:	add	r10, 0xffff
0x4217b7:	cmp	r8, r10
0x4217ba:	jg	0x4217f9
0x4217bc:	lea	rdx, [rsp + 0x128]
0x4217c4:	mov	qword ptr [rsp + 0x10], r11
0x4217c9:	mov	r9, r14
0x4217cc:	mov	rcx, rbp
0x4217cf:	push	rdx
0x4217d0:	push	r15
0x4217d2:	mov	rdx, qword ptr [rsp + 0x58]
0x4217d7:	mov	rsi, qword ptr [rsp + 0x40]
0x4217dc:	mov	edi, dword ptr [rsp + 0x2c]
0x4217e0:	call	0x42c515
0x4217e5:	pop	rsi
0x4217e6:	pop	rdi
0x4217e7:	test	eax, eax
0x4217e9:	mov	r10, qword ptr [rsp + 0x10]
0x4217ee:	jne	0x421c3f
0x4217f4:	jmp	0x421c21
0x4217f9:	lea	rdi, [rsp + 0x4b0]
0x421801:	xor	eax, eax
0x421803:	mov	r9, r14
0x421806:	xor	r12d, r12d
0x421809:	mov	ecx, 0x48
0x42180e:	mov	qword ptr [rsp + 0x10], rbp
0x421813:	mov	r14, rbx
0x421816:	mov	rbp, r11
0x421819:	rep stosd	dword ptr [rdi], eax
0x42181b:	lea	r13, [rsp + 0x107]
0x421823:	mov	rbx, qword ptr [rsp + r12 + 0x6f8]
0x42182b:	lea	r11, [r14 + r12]
0x42182f:	test	rbx, rbx
0x421832:	jne	0x421843
0x421834:	cmp	qword ptr [rsp + r12 + 0x5d8], 0
0x42183d:	je	0x4218a7
0x42183f:	lea	r11, [r12 + rbp]
0x421843:	lea	r8, [rsp + r12 + 0x4b0]
0x42184b:	mov	rcx, qword ptr [r11]
0x42184e:	push	r8
0x421850:	mov	r8, qword ptr [r11 + 8]
0x421854:	push	r15
0x421856:	mov	rdx, qword ptr [rsp + 0x58]
0x42185b:	mov	rsi, qword ptr [rsp + 0x40]
0x421860:	mov	edi, dword ptr [rsp + 0x2c]
0x421864:	mov	qword ptr [rsp + 0x860], r9
0x42186c:	call	0x42c515
0x421871:	pop	rdx
0x421872:	pop	rcx
0x421873:	test	eax, eax
0x421875:	mov	r9, qword ptr [rsp + 0x850]
0x42187d:	je	0x421c1e
0x421883:	mov	byte ptr [r13], 1
0x421888:	mov	rsi, qword ptr [rsp + r12 + 0x4b0]
0x421890:	test	rbx, rbx
0x421893:	je	0x42189f
0x421895:	mov	qword ptr [rsp + r12 + 0x700], rsi
0x42189d:	jmp	0x4218a7
0x42189f:	mov	qword ptr [rsp + r12 + 0x5e0], rsi
0x4218a7:	add	r12, 0x20
0x4218ab:	inc	r13
0x4218ae:	cmp	r12, 0x120
0x4218b5:	jne	0x421823
0x4218bb:	jmp	0x422967
0x4218c0:	mov	qword ptr [r13], rdx
0x4218c4:	mov	rdx, qword ptr [rsp + 0x860]
0x4218cc:	mov	rbp, qword ptr [rsp + 0x870]
0x4218d4:	mov	qword ptr [rdx], 0x4244af
0x4218db:	mov	dword ptr [rbp], 1
0x4218e2:	mov	r12d, 1
0x4218e8:	jmp	0x422990
0x4218ed:	mov	dword ptr [rsp + 0x64], 0
0x4218f5:	xor	edx, edx
0x4218f7:	mov	dword ptr [rsp + 0x58], 0
0x4218ff:	mov	dword ptr [rsp + 0x50], 0
0x421907:	mov	dword ptr [rsp + 0x40], 0
0x42190f:	mov	dword ptr [rsp + 0x10], 0
0x421917:	mov	qword ptr [rsp + 0x28], 0
0x421920:	cmp	dword ptr [rsp + 0x240], 0
0x421928:	je	0x421945
0x42192a:	mov	dword ptr [rsp + 8], edx
0x42192e:	mov	rsi, r14
0x421931:	mov	rdx, r15
0x421934:	lea	rdi, [rsp + 0x228]
0x42193c:	call	0x42b65e
0x421941:	mov	edx, dword ptr [rsp + 8]
0x421945:	test	r13d, r13d
0x421948:	jne	0x421a63
0x42194e:	test	edx, edx
0x421950:	jne	0x421a91
0x421956:	cmp	dword ptr [rsp + 0x10], 0
0x42195b:	jne	0x421ab7
0x421961:	cmp	dword ptr [rsp + 0x50], 0
0x421966:	jne	0x421aed
0x42196c:	cmp	dword ptr [rsp + 0x58], 0
0x421971:	jne	0x421b13
0x421977:	cmp	dword ptr [rsp + 0x64], 0
0x42197c:	jne	0x421b39
0x421982:	cmp	dword ptr [rsp + 0x40], 0
0x421987:	jne	0x421b5f
0x42198d:	cmp	dword ptr [rsp + 0x10], 0
0x421992:	jne	0x421b85
0x421998:	lea	r12, [rsp + 0x107]
0x4219a0:	lea	rbx, [rsp + 0x4b0]
0x4219a8:	lea	rbp, [rsp + 0x5d0]
0x4219b0:	cmp	byte ptr [r12], 0
0x4219b5:	jne	0x421bab
0x4219bb:	add	rbx, 0x20
0x4219bf:	inc	r12
0x4219c2:	cmp	rbx, rbp
0x4219c5:	jne	0x4219b0
0x4219c7:	cmp	qword ptr [rsp + 0x28], 0
0x4219cd:	jne	0x421bc8
0x4219d3:	xor	r12d, r12d
0x4219d6:	cmp	dword ptr [rsp + 0x1c], 0
0x4219db:	js	0x422990
0x4219e1:	mov	edi, dword ptr [rsp + 0x1c]
0x4219e5:	mov	rdx, r15
0x4219e8:	mov	rsi, r14
0x4219eb:	call	0x41c9ad
0x4219f0:	jmp	0x422990
0x4219f5:	mov	dword ptr [rsp + 0x10], eax
0x4219f9:	mov	edx, ebx
0x4219fb:	mov	r13d, 1
0x421a01:	jmp	0x421920
0x421a06:	mov	dword ptr [rsp + 0x10], 0
0x421a0e:	mov	edx, ebx
0x421a10:	mov	r13d, 1
0x421a16:	mov	dword ptr [rsp + 0x40], 1
0x421a1e:	jmp	0x421920
0x421a23:	mov	dword ptr [rsp + 0x10], 0
0x421a2b:	mov	edx, ebx
0x421a2d:	mov	r13d, 1
0x421a33:	jmp	0x421920
0x421a38:	mov	dword ptr [rsp + 0x10], 0
0x421a40:	mov	r13d, 1
0x421a46:	jmp	0x421920
0x421a4b:	mov	dword ptr [rsp + 0x10], 1
0x421a53:	mov	edx, 1
0x421a58:	mov	r13d, 1
0x421a5e:	jmp	0x421920
0x421a63:	cmp	dword ptr [rsp + 0x220], 0
0x421a6b:	je	0x42194e
0x421a71:	mov	dword ptr [rsp + 8], edx
0x421a75:	mov	rsi, r14
0x421a78:	mov	rdx, r15
0x421a7b:	lea	rdi, [rsp + 0x208]
0x421a83:	call	0x42b65e
0x421a88:	mov	edx, dword ptr [rsp + 8]
0x421a8c:	jmp	0x42194e
0x421a91:	cmp	dword ptr [rsp + 0x200], 0
0x421a99:	je	0x421956
0x421a9f:	mov	rdx, r15
0x421aa2:	mov	rsi, r14
0x421aa5:	lea	rdi, [rsp + 0x1e8]
0x421aad:	call	0x42b65e
0x421ab2:	jmp	0x421956
0x421ab7:	mov	r13d, dword ptr [rsp + 0x1e0]
0x421abf:	mov	dword ptr [rsp + 0x10], r13d
0x421ac4:	test	r13d, r13d
0x421ac7:	je	0x421961
0x421acd:	mov	rdx, r15
0x421ad0:	mov	rsi, r14
0x421ad3:	lea	rdi, [rsp + 0x1c8]
0x421adb:	call	0x42b65e
0x421ae0:	mov	dword ptr [rsp + 0x10], 0
0x421ae8:	jmp	0x421961
0x421aed:	cmp	dword ptr [rsp + 0x1a0], 0
0x421af5:	je	0x42196c
0x421afb:	mov	rdx, r15
0x421afe:	mov	rsi, r14
0x421b01:	lea	rdi, [rsp + 0x188]
0x421b09:	call	0x42b65e
0x421b0e:	jmp	0x42196c
0x421b13:	cmp	dword ptr [rsp + 0x180], 0
0x421b1b:	je	0x421977
0x421b21:	mov	rdx, r15
0x421b24:	mov	rsi, r14
0x421b27:	lea	rdi, [rsp + 0x168]
0x421b2f:	call	0x42b65e
0x421b34:	jmp	0x421977
0x421b39:	cmp	dword ptr [rsp + 0x160], 0
0x421b41:	je	0x421982
0x421b47:	mov	rdx, r15
0x421b4a:	mov	rsi, r14
0x421b4d:	lea	rdi, [rsp + 0x148]
0x421b55:	call	0x42b65e
0x421b5a:	jmp	0x421982
0x421b5f:	cmp	dword ptr [rsp + 0x1c0], 0
0x421b67:	je	0x42198d
0x421b6d:	mov	rdx, r15
0x421b70:	mov	rsi, r14
0x421b73:	lea	rdi, [rsp + 0x1a8]
0x421b7b:	call	0x42b65e
0x421b80:	jmp	0x42198d
0x421b85:	cmp	dword ptr [rsp + 0x140], 0
0x421b8d:	je	0x421998
0x421b93:	mov	rdx, r15
0x421b96:	mov	rsi, r14
0x421b99:	lea	rdi, [rsp + 0x128]
0x421ba1:	call	0x42b65e
0x421ba6:	jmp	0x421998
0x421bab:	cmp	dword ptr [rbx + 0x18], 0
0x421baf:	je	0x4219bb
0x421bb5:	mov	rdx, r15
0x421bb8:	mov	rsi, r14
0x421bbb:	mov	rdi, rbx
0x421bbe:	call	0x42b65e
0x421bc3:	jmp	0x4219bb
0x421bc8:	mov	rdi, qword ptr [rsp + 0x28]
0x421bcd:	cmp	dword ptr [rdi + 0x30], 0
0x421bd1:	je	0x4219d3
0x421bd7:	add	rdi, 0x18
0x421bdb:	mov	rdx, r15
0x421bde:	mov	rsi, r14
0x421be1:	call	0x42b65e
0x421be6:	jmp	0x4219d3
0x421beb:	cmp	dword ptr [rsp + 0x10], 6
0x421bf0:	mov	ebp, 1
0x421bf5:	ja	0x421c04
0x421bf7:	mov	dword ptr [rsp + 0x10], 9
0x421bff:	jmp	0x4212cb
0x421c04:	mov	dword ptr [rsp + 0x10], 0xb
0x421c0c:	jmp	0x4212cb
0x421c11:	mov	dword ptr [rsp + 0x10], 0xb
0x421c19:	jmp	0x421294
0x421c1e:	mov	r14, r9
0x421c21:	mov	dword ptr [rsp + 0x10], 0
0x421c29:	mov	dword ptr [rsp + 0x40], 0
0x421c31:	mov	qword ptr [rsp + 0x28], 0
0x421c3a:	jmp	0x421982
0x421c3f:	cmp	dword ptr [rsp + 0x1c], 0
0x421c44:	js	0x421c7d
0x421c46:	mov	dword ptr [rsp + 0x10], 1
0x421c4e:	mov	edi, dword ptr [rsp + 0x1c]
0x421c52:	mov	rdx, r15
0x421c55:	mov	rsi, r14
0x421c58:	mov	qword ptr [rsp + 0x20], r10
0x421c5d:	call	0x41c9ad
0x421c62:	test	eax, eax
0x421c64:	je	0x421c29
0x421c66:	xor	r9d, r9d
0x421c69:	cmp	dword ptr [rsp + 0x10], 0
0x421c6e:	mov	dword ptr [rsp + 0x1c], 0xffffffff
0x421c76:	mov	r10, qword ptr [rsp + 0x20]
0x421c7b:	je	0x421cd8
0x421c7d:	mov	rcx, qword ptr [rsp + 0x128]
0x421c85:	mov	rax, rbx
0x421c88:	xor	r9d, r9d
0x421c8b:	xor	edi, edi
0x421c8d:	cmp	qword ptr [rax + 8], 0
0x421c92:	je	0x421ca0
0x421c94:	mov	rdi, rcx
0x421c97:	inc	r9d
0x421c9a:	sub	rdi, rbp
0x421c9d:	add	rdi, qword ptr [rax]
0x421ca0:	xor	r13d, r13d
0x421ca3:	cmp	qword ptr [r10 + 8], 0
0x421ca8:	mov	qword ptr [rax + 0x10], rdi
0x421cac:	je	0x421cb7
0x421cae:	mov	r13, rcx
0x421cb1:	sub	r13, rbp
0x421cb4:	add	r13, qword ptr [r10]
0x421cb7:	add	rax, 0x20
0x421cbb:	lea	r12, [rsp + 0x810]
0x421cc3:	mov	qword ptr [r10 + 0x10], r13
0x421cc7:	add	r10, 0x20
0x421ccb:	cmp	r12, rax
0x421cce:	jne	0x421c8b
0x421cd0:	mov	dword ptr [rsp + 0x10], 1
0x421cd8:	lea	r11, [rsp + 0x107]
0x421ce0:	mov	dword ptr [rsp + 0x30], r9d
0x421ce5:	xor	r12d, r12d
0x421ce8:	xor	ebp, ebp
0x421cea:	mov	qword ptr [rsp + 0x20], r11
0x421cef:	mov	qword ptr [rsp + 0x28], r11
0x421cf4:	mov	qword ptr [rsp + 0x38], rbx
0x421cf9:	cmp	qword ptr [rsp + rbp + 0x6f8], 0
0x421d02:	jne	0x421e0e
0x421d08:	mov	rbx, qword ptr [rsp + rbp + 0x5d8]
0x421d10:	test	rbx, rbx
0x421d13:	je	0x421e0e
0x421d19:	test	r12, r12
0x421d1c:	jne	0x421d3f
0x421d1e:	mov	rdi, qword ptr [rsp + 8]
0x421d23:	mov	rcx, r15
0x421d26:	mov	rdx, r14
0x421d29:	mov	esi, 0x13b4
0x421d2e:	call	0x41eee1
0x421d33:	mov	r12, rax
0x421d36:	test	rax, rax
0x421d39:	je	0x421c29
0x421d3f:	mov	r8, qword ptr [rsp + rbp + 0x5e0]
0x421d47:	cmp	rbx, 0xb
0x421d4b:	jbe	0x421dbb
0x421d4d:	cmp	dword ptr [r8], 0x42494c5a
0x421d54:	jne	0x421dbb
0x421d56:	xor	esi, esi
0x421d58:	xor	r13d, r13d
0x421d5b:	movzx	r10d, byte ptr [r8 + rsi + 4]
0x421d61:	shl	r13, 8
0x421d65:	inc	rsi
0x421d68:	or	r13, r10
0x421d6b:	cmp	rsi, 8
0x421d6f:	jne	0x421d5b
0x421d71:	mov	rdi, qword ptr [rsp + 8]
0x421d76:	mov	rcx, r15
0x421d79:	mov	rdx, r14
0x421d7c:	mov	rsi, r13
0x421d7f:	mov	qword ptr [rsp + 0x40], r8
0x421d84:	call	0x41eee1
0x421d89:	mov	rcx, rax
0x421d8c:	test	rax, rax
0x421d8f:	je	0x421c29
0x421d95:	mov	r9, qword ptr [rsp + 0x40]
0x421d9a:	mov	rdx, r12
0x421d9d:	lea	rsi, [rbx - 0xc]
0x421da1:	mov	r8, r13
0x421da4:	mov	qword ptr [rsp + 0x40], rax
0x421da9:	lea	rdi, [r9 + 0xc]
0x421dad:	call	0x41cff3
0x421db2:	mov	rdx, qword ptr [rsp + 0x40]
0x421db7:	test	eax, eax
0x421db9:	jne	0x421dc0
0x421dbb:	xor	r13d, r13d
0x421dbe:	xor	edx, edx
0x421dc0:	mov	rcx, qword ptr [rsp + 0x28]
0x421dc5:	mov	qword ptr [rsp + rbp + 0x700], rdx
0x421dcd:	mov	qword ptr [rsp + rbp + 0x6f8], r13
0x421dd5:	mov	dword ptr [rsp + rbp + 0x708], 0
0x421de0:	cmp	byte ptr [rcx], 0
0x421de3:	je	0x421e0e
0x421de5:	cmp	dword ptr [rsp + rbp + 0x4c8], 0
0x421ded:	je	0x421e06
0x421def:	lea	rax, [rsp + 0x4b0]
0x421df7:	mov	rdx, r15
0x421dfa:	mov	rsi, r14
0x421dfd:	lea	rdi, [rax + rbp]
0x421e01:	call	0x42b65e
0x421e06:	mov	rdi, qword ptr [rsp + 0x28]
0x421e0b:	mov	byte ptr [rdi], 0
0x421e0e:	add	rbp, 0x20
0x421e12:	inc	qword ptr [rsp + 0x28]
0x421e17:	cmp	rbp, 0x120
0x421e1e:	jne	0x421cf9
0x421e24:	mov	rbx, qword ptr [rsp + 0x38]
0x421e29:	mov	r13, r12
0x421e2c:	lea	r12, [rsp + 0x4b0]
0x421e34:	mov	r11, qword ptr [rbx + 8]
0x421e38:	mov	qword ptr [rsp + 0x28], r11
0x421e3d:	test	r11, r11
0x421e40:	je	0x421ef8
0x421e46:	cmp	dword ptr [rbx + 0x18], 0
0x421e4a:	je	0x421ef8
0x421e50:	test	r13, r13
0x421e53:	jne	0x421e76
0x421e55:	mov	rdi, qword ptr [rsp + 8]
0x421e5a:	mov	rcx, r15
0x421e5d:	mov	rdx, r14
0x421e60:	mov	esi, 0x13b4
0x421e65:	call	0x41eee1
0x421e6a:	mov	r13, rax
0x421e6d:	test	rax, rax
0x421e70:	je	0x421c29
0x421e76:	cmp	qword ptr [rsp + 0x28], 0x17
0x421e7c:	mov	rbp, qword ptr [rbx + 0x10]
0x421e80:	jbe	0x421ed5
0x421e82:	cmp	dword ptr [rbp], 1
0x421e86:	jne	0x421ed5
0x421e88:	mov	rsi, qword ptr [rbp + 8]
0x421e8c:	mov	rdi, qword ptr [rsp + 8]
0x421e91:	mov	rcx, r15
0x421e94:	mov	rdx, r14
0x421e97:	call	0x41eee1
0x421e9c:	mov	rcx, rax
0x421e9f:	test	rax, rax
0x421ea2:	je	0x421c29
0x421ea8:	mov	rsi, qword ptr [rsp + 0x28]
0x421ead:	mov	r8, qword ptr [rbp + 8]
0x421eb1:	lea	rdi, [rbp + 0x18]
0x421eb5:	mov	rdx, r13
0x421eb8:	mov	qword ptr [rsp + 0x28], rax
0x421ebd:	sub	rsi, 0x18
0x421ec1:	call	0x41cff3
0x421ec6:	test	eax, eax
0x421ec8:	je	0x421ed5
0x421eca:	mov	rsi, qword ptr [rbp + 8]
0x421ece:	mov	r8, qword ptr [rsp + 0x28]
0x421ed3:	jmp	0x421eda
0x421ed5:	xor	r8d, r8d
0x421ed8:	xor	esi, esi
0x421eda:	cmp	dword ptr [rsp + 0x10], 0
0x421edf:	mov	qword ptr [rbx + 0x10], r8
0x421ee3:	mov	qword ptr [rbx + 8], rsi
0x421ee7:	mov	dword ptr [rbx + 0x18], 0
0x421eee:	je	0x422934
0x421ef4:	dec	dword ptr [rsp + 0x30]
0x421ef8:	add	rbx, 0x20
0x421efc:	lea	rdx, [rsp + 0x810]
0x421f04:	inc	qword ptr [rsp + 0x20]
0x421f09:	add	r12, 0x20
0x421f0d:	cmp	rdx, rbx
0x421f10:	jne	0x421e34
0x421f16:	mov	ebp, dword ptr [rsp + 0x30]
0x421f1a:	test	r13, r13
0x421f1d:	je	0x421f31
0x421f1f:	mov	rdi, qword ptr [rsp + 8]
0x421f24:	mov	edx, 0x13b4
0x421f29:	mov	rsi, r13
0x421f2c:	call	0x42c1a8
0x421f31:	test	ebp, ebp
0x421f33:	jne	0x421f66
0x421f35:	test	byte ptr [rsp + 0x10], 1
0x421f3a:	je	0x421f66
0x421f3c:	mov	eax, dword ptr [rsp + 0x140]
0x421f43:	mov	dword ptr [rsp + 0x10], eax
0x421f47:	test	eax, eax
0x421f49:	je	0x421f66
0x421f4b:	mov	rdx, r15
0x421f4e:	mov	rsi, r14
0x421f51:	lea	rdi, [rsp + 0x128]
0x421f59:	call	0x42b65e
0x421f5e:	mov	dword ptr [rsp + 0x10], 0
0x421f66:	xor	edi, edi
0x421f68:	mov	r11, qword ptr [rsp + rdi*4 + 0x700]
0x421f70:	mov	r8, qword ptr [rsp + rdi*4 + 0x6f8]
0x421f78:	mov	qword ptr [rsp + rdi + 0x420], r11
0x421f80:	mov	qword ptr [rsp + rdi + 0x468], r8
0x421f88:	add	rdi, 8
0x421f8c:	cmp	rdi, 0x48
0x421f90:	jne	0x421f68
0x421f92:	mov	r12d, 6
0x421f98:	xor	ebx, ebx
0x421f9a:	cmp	byte ptr [rsp + 0xde], 2
0x421fa2:	mov	r13, qword ptr [rsp + 0x420]
0x421faa:	sete	bl
0x421fad:	mov	rcx, r12
0x421fb0:	xor	eax, eax
0x421fb2:	mov	rsi, qword ptr [rsp + 0xf8]
0x421fba:	lea	rdi, [rsp + 0x268]
0x421fc2:	mov	dword ptr [rsp + 0x38], ebx
0x421fc6:	mov	r10, qword ptr [rsp + 0x468]
0x421fce:	rep stosd	dword ptr [rdi], eax
0x421fd0:	mov	rcx, r12
0x421fd3:	lea	rdi, [rsp + 0x288]
0x421fdb:	mov	r9d, dword ptr [rsp + 0x38]
0x421fe0:	rep stosd	dword ptr [rdi], eax
0x421fe2:	mov	rcx, r12
0x421fe5:	lea	rdi, [rsp + 0x110]
0x421fed:	mov	qword ptr [rsp + 0x50], rsi
0x421ff2:	rep stosd	dword ptr [rdi], eax
0x421ff4:	mov	qword ptr [rsp + 0x280], 0
0x422000:	lea	r12, [rsp + 0x3a0]
0x422008:	mov	qword ptr [rsp + 0x2a0], 0
0x422014:	mov	qword ptr [rsp + 0x320], 0x4c91e7
0x422020:	mov	qword ptr [rsp + 0x328], r13
0x422028:	mov	qword ptr [rsp + 0x330], r13
0x422030:	mov	qword ptr [rsp + 0x338], r10
0x422038:	mov	dword ptr [rsp + 0x340], r9d
0x422040:	mov	dword ptr [rsp + 0x358], 0
0x42204b:	mov	qword ptr [rsp + 0x40], 0
0x422054:	mov	qword ptr [rsp + 0x48], 0
0x42205d:	mov	qword ptr [rsp + 0x858], r15
0x422065:	mov	qword ptr [rsp + 0x348], r14
0x42206d:	mov	qword ptr [rsp + 0x350], r15
0x422075:	mov	r15, r14
0x422078:	mov	r14, qword ptr [rsp + 0x858]
0x422080:	cmp	qword ptr [rsp + 0x338], 0
0x422089:	mov	edx, dword ptr [rsp + 0x358]
0x422090:	mov	dword ptr [rsp + 0x20], edx
0x422094:	je	0x4226b5
0x42209a:	cmp	dword ptr [rsp + 0x20], 0
0x42209f:	jne	0x42274d
0x4220a5:	mov	rsi, qword ptr [rsp + 0x330]
0x4220ad:	lea	rdi, [rsp + 0x320]
0x4220b5:	mov	qword ptr [rsp + 0x88], rsi
0x4220bd:	call	0x41bfce
0x4220c2:	mov	ecx, 0xffffffff
0x4220c7:	mov	dword ptr [rsp + 0x60], 0
0x4220cf:	mov	r8d, eax
0x4220d2:	mov	qword ptr [rsp + 0x30], r8
0x4220d7:	cmp	r8, rcx
0x4220da:	jne	0x4220f6
0x4220dc:	lea	rdi, [rsp + 0x320]
0x4220e4:	call	0x41bffb
0x4220e9:	mov	dword ptr [rsp + 0x60], 1
0x4220f1:	mov	qword ptr [rsp + 0x30], rax
0x4220f6:	lea	rbp, [rsp + 0x360]
0x4220fe:	lea	rsi, [rsp + 0x320]
0x422106:	mov	ecx, 0x10
0x42210b:	mov	rdi, rbp
0x42210e:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x422110:	mov	rsi, qword ptr [rsp + 0x30]
0x422115:	lea	rdi, [rsp + 0x320]
0x42211d:	mov	qword ptr [rsp + 0x378], rsi
0x422125:	call	0x41bef0
0x42212a:	test	eax, eax
0x42212c:	je	0x42274d
0x422132:	mov	rdi, rbp
0x422135:	call	0x41bf59
0x42213a:	movd	xmm5, dword ptr [rsp + 0x60]
0x422140:	movzx	r10d, ax
0x422144:	movd	xmm4, r10d
0x422149:	mov	dword ptr [rsp + 0x28], r10d
0x42214e:	sub	r10d, 2
0x422152:	punpckldq	xmm4, xmm5
0x422156:	movq	qword ptr [rsp + 0x80], xmm4
0x42215f:	cmp	r10d, 3
0x422163:	jbe	0x42218d
0x422165:	or	edx, 0xffffffff
0x422168:	mov	esi, 0x4c92c8
0x42216d:	mov	rdi, rbp
0x422170:	mov	qword ptr [rsp + 0x858], r14
0x422178:	mov	r14, r15
0x42217b:	mov	r15, qword ptr [rsp + 0x858]
0x422183:	call	0x41be97
0x422188:	jmp	0x422760
0x42218d:	cmp	dword ptr [rsp + 0x28], 4
0x422192:	jle	0x4221b5
0x422194:	mov	rdi, rbp
0x422197:	call	0x41bf3c
0x42219c:	mov	edx, eax
0x42219e:	and	edx, 0xfffffffb
0x4221a1:	cmp	dl, 2
0x4221a4:	je	0x422080
0x4221aa:	movzx	r9d, al
0x4221ae:	mov	dword ptr [rsp + 0x64], r9d
0x4221b3:	jmp	0x4221bd
0x4221b5:	mov	dword ptr [rsp + 0x64], 0
0x4221bd:	mov	rdi, qword ptr [rsp + 8]
0x4221c2:	mov	rcx, r14
0x4221c5:	mov	rdx, r15
0x4221c8:	mov	esi, 8
0x4221cd:	lea	r8, [rsp + 0x110]
0x4221d5:	call	0x41f7d7
0x4221da:	mov	rbx, rax
0x4221dd:	test	rax, rax
0x4221e0:	je	0x42274d
0x4221e6:	mov	rdi, qword ptr [rsp + 8]
0x4221eb:	mov	rcx, r14
0x4221ee:	mov	rdx, r15
0x4221f1:	mov	esi, 0xa0
0x4221f6:	call	0x41eee1
0x4221fb:	mov	r13, rax
0x4221fe:	test	rax, rax
0x422201:	je	0x42274d
0x422207:	inc	qword ptr [rsp + 0x48]
0x42220c:	cmp	dword ptr [rsp + 0x28], 4
0x422211:	mov	qword ptr [rbx], rax
0x422214:	jle	0x42222a
0x422216:	lea	rdi, [rsp + 0x360]
0x42221e:	call	0x41bf3c
0x422223:	movzx	eax, al
0x422226:	mov	dword ptr [rsp + 0x20], eax
0x42222a:	xorps	xmm7, xmm7
0x42222d:	mov	esi, dword ptr [rsp + 0x60]
0x422231:	lea	r11, [r13 + 0x70]
0x422235:	lea	rdi, [rsp + 0x360]
0x42223d:	movups	xmmword ptr [r13 + 0x70], xmm7
0x422242:	mov	qword ptr [rsp + 0x90], r11
0x42224a:	call	0x41c02a
0x42224f:	mov	r8, qword ptr [rsp + 0x478]
0x422257:	mov	qword ptr [r13 + 0x70], 0
0x42225f:	mov	qword ptr [r13 + 0x78], 0
0x422267:	mov	rbp, qword ptr [rsp + 0x430]
0x42226f:	cmp	rax, r8
0x422272:	jb	0x422299
0x422274:	mov	qword ptr [rsp + 0x858], r14
0x42227c:	mov	r14, r15
0x42227f:	xor	edx, edx
0x422281:	mov	r15, qword ptr [rsp + 0x858]
0x422289:	mov	esi, 0x4c92e3
0x42228e:	mov	rdi, r15
0x422291:	call	r14
0x422294:	jmp	0x422760
0x422299:	mov	qword ptr [rsp + 0x3a8], rbp
0x4222a1:	mov	ecx, dword ptr [rsp + 0x38]
0x4222a5:	xor	ebx, ebx
0x4222a7:	add	rbp, rax
0x4222aa:	mov	qword ptr [rsp + 0x3b0], rbp
0x4222b2:	sub	r8, rax
0x4222b5:	lea	rbp, [rsp + 0x3e0]
0x4222bd:	lea	rsi, [rsp + 0x3a0]
0x4222c5:	mov	dword ptr [rsp + 0x3c0], ecx
0x4222cc:	mov	rdi, rbp
0x4222cf:	mov	ecx, 0x10
0x4222d4:	mov	qword ptr [rsp + 0x3a0], 0x4c92fe
0x4222e0:	mov	qword ptr [rsp + 0x3b8], r8
0x4222e8:	mov	qword ptr [rsp + 0x3c8], r15
0x4222f0:	mov	qword ptr [rsp + 0x3d0], r14
0x4222f8:	mov	dword ptr [rsp + 0x3d8], 0
0x422303:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x422305:	mov	rdi, rbp
0x422308:	call	0x41c109
0x42230d:	test	rax, rax
0x422310:	je	0x42235e
0x422312:	cmp	dword ptr [rsp + 0x418], 0
0x42231a:	jne	0x42274d
0x422320:	mov	rdi, rbp
0x422323:	inc	rbx
0x422326:	call	0x41c109
0x42232b:	mov	rdi, rbp
0x42232e:	call	0x41bf3c
0x422333:	mov	rdi, rbp
0x422336:	call	0x41c109
0x42233b:	mov	rdi, rbp
0x42233e:	test	rax, rax
0x422341:	je	0x422357
0x422343:	call	0x41c109
0x422348:	cmp	eax, 0x21
0x42234b:	jne	0x422333
0x42234d:	mov	rdi, rbp
0x422350:	call	0x41c17c
0x422355:	jmp	0x422333
0x422357:	call	0x41c109
0x42235c:	jmp	0x422305
0x42235e:	cmp	dword ptr [rsp + 0x418], 0
0x422366:	jne	0x42274d
0x42236c:	test	rbx, rbx
0x42236f:	je	0x42256a
0x422375:	mov	rbp, rbx
0x422378:	mov	rdi, qword ptr [rsp + 8]
0x42237d:	mov	rcx, r14
0x422380:	mov	rdx, r15
0x422383:	shl	rbp, 5
0x422387:	mov	rsi, rbp
0x42238a:	call	0x41eee1
0x42238f:	mov	qword ptr [r13 + 0x78], rax
0x422393:	mov	r10, rax
0x422396:	test	rax, rax
0x422399:	je	0x42274d
0x42239f:	xor	eax, eax
0x4223a1:	mov	rdi, r10
0x4223a4:	mov	rcx, rbp
0x4223a7:	mov	qword ptr [r13 + 0x70], rbx
0x4223ab:	rep stosb	byte ptr [rdi], al
0x4223ad:	mov	qword ptr [rsp + 0x78], r13
0x4223b2:	mov	qword ptr [rsp + 0x58], 0
0x4223bb:	cmp	dword ptr [rsp + 0x3d8], 0
0x4223c3:	jne	0x422524
0x4223c9:	mov	rdi, r12
0x4223cc:	call	0x41c109
0x4223d1:	mov	qword ptr [rsp + 0x70], rax
0x4223d6:	test	rax, rax
0x4223d9:	je	0x42254e
0x4223df:	mov	rdi, r12
0x4223e2:	xor	ebp, ebp
0x4223e4:	call	0x41c109
0x4223e9:	mov	rdi, r12
0x4223ec:	mov	qword ptr [rsp + 0x98], rax
0x4223f4:	call	0x41bf3c
0x4223f9:	mov	ecx, 0x10
0x4223fe:	mov	rsi, r12
0x422401:	movzx	r13d, al
0x422405:	mov	dword ptr [rsp + 0xa0], r13d
0x42240d:	lea	r13, [rsp + 0x3e0]
0x422415:	mov	rdi, r13
0x422418:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x42241a:	mov	rdi, r13
0x42241d:	call	0x41c109
0x422422:	mov	rbx, rax
0x422425:	test	rax, rax
0x422428:	je	0x422444
0x42242a:	mov	rdi, r13
0x42242d:	inc	rbp
0x422430:	call	0x41c109
0x422435:	cmp	eax, 0x21
0x422438:	jne	0x42241a
0x42243a:	mov	rdi, r13
0x42243d:	call	0x41c17c
0x422442:	jmp	0x42241a
0x422444:	test	rbp, rbp
0x422447:	jne	0x42245e
0x422449:	mov	rdi, r12
0x42244c:	call	0x41c109
0x422451:	mov	rdi, r12
0x422454:	call	0x41c109
0x422459:	jmp	0x4224e5
0x42245e:	mov	rsi, rbp
0x422461:	mov	rdi, qword ptr [rsp + 8]
0x422466:	mov	rcx, r14
0x422469:	mov	rdx, r15
0x42246c:	shl	rsi, 4
0x422470:	call	0x41eee1
0x422475:	test	rax, rax
0x422478:	je	0x422524
0x42247e:	mov	qword ptr [rsp + 0x858], r14
0x422486:	mov	r14, rax
0x422489:	mov	rdi, r12
0x42248c:	call	0x41c109
0x422491:	mov	rdi, r12
0x422494:	mov	r13, rax
0x422497:	call	0x41c109
0x42249c:	mov	r9, rax
0x42249f:	test	r13, r13
0x4224a2:	je	0x4224da
0x4224a4:	movd	xmm9, eax
0x4224a9:	mov	rbp, rbx
0x4224ac:	movd	xmm8, r13d
0x4224b1:	xor	eax, eax
0x4224b3:	shl	rbp, 4
0x4224b7:	punpckldq	xmm8, xmm9
0x4224bc:	movq	qword ptr [r14 + rbp], xmm8
0x4224c2:	cmp	r9d, 0x21
0x4224c6:	jne	0x4224d0
0x4224c8:	mov	rdi, r12
0x4224cb:	call	0x41c17c
0x4224d0:	mov	qword ptr [r14 + rbp + 8], rax
0x4224d5:	inc	rbx
0x4224d8:	jmp	0x422489
0x4224da:	mov	rbp, r14
0x4224dd:	mov	r14, qword ptr [rsp + 0x858]
0x4224e5:	mov	r11, qword ptr [rsp + 0x78]
0x4224ea:	mov	r10, qword ptr [rsp + 0x70]
0x4224ef:	mov	eax, dword ptr [rsp + 0x98]
0x4224f6:	mov	ecx, dword ptr [rsp + 0xa0]
0x4224fd:	mov	r8, qword ptr [rsp + 0x58]
0x422502:	add	r8, qword ptr [r11 + 0x78]
0x422506:	add	qword ptr [rsp + 0x58], 0x20
0x42250c:	mov	qword ptr [r8], r10
0x42250f:	mov	dword ptr [r8 + 8], eax
0x422513:	mov	dword ptr [r8 + 0xc], ecx
0x422517:	mov	qword ptr [r8 + 0x10], rbx
0x42251b:	mov	qword ptr [r8 + 0x18], rbp
0x42251f:	jmp	0x4223bb
0x422524:	mov	rsi, qword ptr [rsp + 0x90]
0x42252c:	mov	rdi, qword ptr [rsp + 8]
0x422531:	mov	qword ptr [rsp + 0x858], r14
0x422539:	mov	r14, r15
0x42253c:	mov	r15, qword ptr [rsp + 0x858]
0x422544:	call	0x42c311
0x422549:	jmp	0x422760
0x42254e:	mov	r13, qword ptr [rsp + 0x78]
0x422553:	mov	ecx, 0x41bb9d
0x422558:	mov	edx, 0x20
0x42255d:	mov	rsi, qword ptr [r13 + 0x70]
0x422561:	mov	rdi, qword ptr [r13 + 0x78]
0x422565:	call	0x41bd42
0x42256a:	cmp	dword ptr [rsp + 0x28], 4
0x42256f:	jg	0x422585
0x422571:	lea	rdi, [rsp + 0x360]
0x422579:	call	0x41bf3c
0x42257e:	movzx	edi, al
0x422581:	mov	dword ptr [rsp + 0x20], edi
0x422585:	mov	esi, dword ptr [rsp + 0x64]
0x422589:	sub	esi, 4
0x42258c:	cmp	esi, 1
0x42258f:	ja	0x42259e
0x422591:	lea	rdi, [rsp + 0x360]
0x422599:	call	0x41bffb
0x42259e:	cmp	dword ptr [rsp + 0x60], 1
0x4225a3:	mov	rbx, qword ptr [rsp + 0x40]
0x4225a8:	xorps	xmm12, xmm12
0x4225ac:	mov	qword ptr [r13 + 0x68], 0
0x4225b4:	mov	rbp, qword ptr [rsp + 0x370]
0x4225bc:	sbb	rdx, rdx
0x4225bf:	movq	xmm10, qword ptr [rsp + 0x378]
0x4225c9:	mov	qword ptr [r13 + 0x38], 0
0x4225d1:	mov	r8d, dword ptr [rsp + 0x20]
0x4225d6:	mov	r11, qword ptr [rsp + 0x80]
0x4225de:	mov	qword ptr [r13 + 0x18], rbx
0x4225e2:	and	rdx, 0xfffffffffffffff8
0x4225e6:	mov	qword ptr [r13], rbp
0x4225ea:	add	rbx, qword ptr [rsp + 0x30]
0x4225ef:	sub	rbp, qword ptr [rsp + 0x88]
0x4225f7:	lea	r9, [rbx + rdx + 0xc]
0x4225fc:	mov	dword ptr [r13 + 0x30], r8d
0x422600:	movq	xmm11, rbp
0x422605:	mov	qword ptr [rsp + 0x40], r9
0x42260a:	punpcklqdq	xmm10, xmm11
0x42260f:	mov	qword ptr [r13 + 0x20], r9
0x422613:	mov	qword ptr [r13 + 0x28], r11
0x422617:	mov	qword ptr [r13 + 0x80], 0
0x422622:	mov	qword ptr [r13 + 0x88], 0
0x42262d:	mov	qword ptr [r13 + 0x90], 0
0x422638:	mov	qword ptr [r13 + 0x98], 0
0x422643:	movups	xmmword ptr [r13 + 8], xmm10
0x422648:	movups	xmmword ptr [r13 + 0x58], xmm12
0x42264d:	push	rax
0x42264e:	lea	r10, [rsp + 0x3e8]
0x422656:	push	r10
0x422658:	lea	rax, [rsp + 0x278]
0x422660:	push	rax
0x422661:	push	r13
0x422663:	push	r14
0x422665:	push	r15
0x422667:	mov	r9, qword ptr [rsp + 0x80]
0x42266f:	mov	r8d, dword ptr [rsp + 0x68]
0x422674:	mov	rsi, qword ptr [rsp + 0x98]
0x42267c:	mov	rdi, qword ptr [rsp + 0x38]
0x422681:	lea	rcx, [rsp + 0x450]
0x422689:	lea	rdx, [rsp + 0x390]
0x422691:	call	0x41e663
0x422696:	add	rsp, 0x30
0x42269a:	test	eax, eax
0x42269c:	je	0x42274d
0x4226a2:	cmp	dword ptr [rsp + 0x398], 0
0x4226aa:	je	0x422080
0x4226b0:	jmp	0x42274d
0x4226b5:	mov	qword ptr [rsp + 0x858], r14
0x4226bd:	mov	r14, r15
0x4226c0:	mov	r15, qword ptr [rsp + 0x858]
0x4226c8:	test	edx, edx
0x4226ca:	jne	0x422760
0x4226d0:	mov	rdi, qword ptr [rsp + 8]
0x4226d5:	mov	rcx, r15
0x4226d8:	mov	rdx, r14
0x4226db:	mov	esi, 0x18
0x4226e0:	lea	r8, [rsp + 0x268]
0x4226e8:	call	0x41f7d7
0x4226ed:	test	rax, rax
0x4226f0:	je	0x422760
0x4226f2:	mov	qword ptr [rax + 0x10], 0
0x4226fa:	pcmpeqd	xmm3, xmm3
0x4226fe:	mov	r11, qword ptr [rsp + 0x48]
0x422703:	lea	rsi, [rsp + 0x268]
0x42270b:	movups	xmmword ptr [rax], xmm3
0x42270e:	mov	rdi, qword ptr [rsp + 8]
0x422713:	movaps	xmm6, xmmword ptr [rsp + 0x110]
0x42271b:	mov	rbp, qword ptr [rsp + 0x120]
0x422723:	mov	qword ptr [rsp + 0x2a0], r11
0x42272b:	movups	xmmword ptr [rsp + 0x288], xmm6
0x422733:	mov	qword ptr [rsp + 0x298], rbp
0x42273b:	call	0x42c582
0x422740:	test	eax, eax
0x422742:	jne	0x422814
0x422748:	jmp	0x421c29
0x42274d:	mov	qword ptr [rsp + 0x858], r14
0x422755:	mov	r14, r15
0x422758:	mov	r15, qword ptr [rsp + 0x858]
0x422760:	cmp	qword ptr [rsp + 0x48], 0
0x422766:	je	0x4227d2
0x422768:	mov	r13, qword ptr [rsp + 0x110]
0x422770:	mov	r12, qword ptr [rsp + 8]
0x422775:	xor	ebx, ebx
0x422777:	mov	rcx, qword ptr [r13 + rbx*8]
0x42277c:	mov	rdi, r12
0x42277f:	lea	rsi, [rcx + 0x70]
0x422783:	call	0x42c311
0x422788:	mov	rsi, qword ptr [r13 + rbx*8]
0x42278d:	mov	edx, 0xa0
0x422792:	mov	rdi, r12
0x422795:	inc	rbx
0x422798:	call	0x42c1a8
0x42279d:	cmp	qword ptr [rsp + 0x48], rbx
0x4227a2:	jne	0x422777
0x4227a4:	mov	rdi, qword ptr [rsp + 0x118]
0x4227ac:	add	qword ptr [rsp + 0x120], rdi
0x4227b4:	lea	rsi, [rsp + 0x110]
0x4227bc:	mov	rdi, qword ptr [rsp + 8]
0x4227c1:	mov	qword ptr [rsp + 0x118], 0
0x4227cd:	call	0x42c582
0x4227d2:	cmp	qword ptr [rsp + 0x280], 0
0x4227db:	je	0x421c29
0x4227e1:	mov	rdi, qword ptr [rsp + 8]
0x4227e6:	mov	rsi, qword ptr [rsp + 0x270]
0x4227ee:	mov	qword ptr [rsp + 0x270], 0
0x4227fa:	add	qword ptr [rsp + 0x278], rsi
0x422802:	lea	rsi, [rsp + 0x268]
0x42280a:	call	0x42c582
0x42280f:	jmp	0x421c29
0x422814:	mov	rdi, qword ptr [rsp + 8]
0x422819:	lea	rsi, [rsp + 0x288]
0x422821:	call	0x42c582
0x422826:	test	eax, eax
0x422828:	je	0x421c29
0x42282e:	mov	rbp, qword ptr [rsp + 0x268]
0x422836:	mov	ecx, 0x41bb5d
0x42283b:	mov	rbx, qword ptr [rsp + 0x280]
0x422843:	mov	edx, 0x18
0x422848:	mov	r13, qword ptr [rsp + 0x288]
0x422850:	mov	r12, qword ptr [rsp + 0x2a0]
0x422858:	mov	rsi, rbx
0x42285b:	mov	rdi, rbp
0x42285e:	call	0x41bd42
0x422863:	mov	rdi, qword ptr [rsp + 8]
0x422868:	mov	rdx, r14
0x42286b:	mov	rcx, r15
0x42286e:	mov	esi, 0xf0
0x422873:	call	0x41eee1
0x422878:	mov	rdx, rax
0x42287b:	test	rax, rax
0x42287e:	je	0x421c29
0x422884:	mov	r15, qword ptr [rsp + 0x50]
0x422889:	mov	r14, qword ptr [rsp + 0x68]
0x42288e:	mov	qword ptr [rax + 0x18], rbp
0x422892:	lea	rdi, [rax + 0x38]
0x422896:	mov	r8d, dword ptr [rsp + 0x38]
0x42289b:	mov	qword ptr [rax], 0
0x4228a2:	lea	rsi, [rsp + 0x420]
0x4228aa:	mov	ecx, 0x24
0x4228af:	mov	qword ptr [rax + 8], r15
0x4228b3:	cmp	qword ptr [rsp + 0x878], 0
0x4228bc:	mov	qword ptr [rax + 0x10], r14
0x4228c0:	mov	qword ptr [rax + 0x20], rbx
0x4228c4:	mov	qword ptr [rax + 0x28], r13
0x4228c8:	mov	qword ptr [rax + 0x30], r12
0x4228cc:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x4228ce:	mov	dword ptr [rax + 0xc8], r8d
0x4228d5:	lea	rdi, [rax + 0xd0]
0x4228dc:	mov	eax, dword ptr [rsp + 0x20]
0x4228e0:	mov	ecx, 8
0x4228e5:	rep stosd	dword ptr [rdi], eax
0x4228e7:	je	0x4228f4
0x4228e9:	mov	r10, qword ptr [rsp + 0x878]
0x4228f1:	mov	qword ptr [r10], rdx
0x4228f4:	mov	r9, qword ptr [rsp + 8]
0x4228f9:	cmp	dword ptr [r9 + 8], 0
0x4228fe:	lea	r13, [r9 + 0x20]
0x422902:	jne	0x422924
0x422904:	mov	rbx, qword ptr [r9 + 0x20]
0x422908:	test	rbx, rbx
0x42290b:	je	0x4218c0
0x422911:	mov	r13, rbx
0x422914:	mov	rbx, qword ptr [rbx]
0x422917:	jmp	0x422908
0x422919:	lock cmpxchg	qword ptr [r11], rdx
0x42291e:	je	0x4218c4
0x422924:	mov	r11, r13
0x422927:	mov	rax, qword ptr [r11]
0x42292a:	test	rax, rax
0x42292d:	je	0x422919
0x42292f:	mov	r11, rax
0x422932:	jmp	0x422927
0x422934:	mov	r10, qword ptr [rsp + 0x20]
0x422939:	cmp	byte ptr [r10], 0
0x42293d:	je	0x421ef8
0x422943:	cmp	dword ptr [r12 + 0x18], 0
0x422949:	je	0x422959
0x42294b:	mov	rdx, r15
0x42294e:	mov	rsi, r14
0x422951:	mov	rdi, r12
0x422954:	call	0x42b65e
0x422959:	mov	r9, qword ptr [rsp + 0x20]
0x42295e:	mov	byte ptr [r9], 0
0x422962:	jmp	0x421ef8
0x422967:	mov	rbx, r14
0x42296a:	mov	r14, r9
0x42296d:	xor	r9d, r9d
0x422970:	cmp	dword ptr [rsp + 0x1c], 0
0x422975:	mov	r10, rbp
0x422978:	mov	rbp, qword ptr [rsp + 0x10]
0x42297d:	mov	dword ptr [rsp + 0x10], 0
0x422985:	js	0x421cd8
0x42298b:	jmp	0x421c4e
0x422990:	add	rsp, 0x818
0x422997:	mov	eax, r12d
0x42299a:	pop	rbx
0x42299b:	pop	rbp
0x42299c:	pop	r12
0x42299e:	pop	r13
0x4229a0:	pop	r14
0x4229a2:	pop	r15
0x4229a4:	ret	
0x4229a5:	endbr64	
0x4229a9:	push	r15
0x4229ab:	push	r14
0x4229ad:	push	r13
0x4229af:	push	r12
0x4229b1:	push	rbp
0x4229b2:	mov	rbp, rsi
0x4229b5:	push	rbx
0x4229b6:	sub	rsp, 0xc8
0x4229bd:	lea	rsi, [rsp + 0x2c]
0x4229c2:	mov	dword ptr [rsp + 0x2c], 0
0x4229ca:	call	0x457680
0x4229cf:	mov	qword ptr [rsp + 8], rax
0x4229d4:	mov	eax, dword ptr [rbp]
0x4229d7:	test	eax, eax
0x4229d9:	jle	0x4229e7
0x4229db:	dec	eax
0x4229dd:	mov	dword ptr [rbp], eax
0x4229e0:	xor	eax, eax
0x4229e2:	jmp	0x422c83
0x4229e7:	cmp	dword ptr [rsp + 0x2c], 0
0x4229ec:	jne	0x4229f3
0x4229ee:	dec	qword ptr [rsp + 8]
0x4229f3:	mov	rbx, qword ptr [rbp + 0x10]
0x4229f7:	cmp	dword ptr [rbp + 0x2c], 0
0x4229fb:	mov	r13, qword ptr [rbp + 0x20]
0x4229ff:	mov	qword ptr [rsp + 0x10], rbx
0x422a04:	jne	0x422a1c
0x422a06:	mov	rsi, qword ptr [rsp + 8]
0x422a0b:	xor	r8d, r8d
0x422a0e:	xor	ecx, ecx
0x422a10:	xor	edx, edx
0x422a12:	mov	rdi, r13
0x422a15:	call	rbx
0x422a17:	jmp	0x422c31
0x422a1c:	mov	rbx, qword ptr [rbp + 8]
0x422a20:	mov	r14, qword ptr [rbp + 0x18]
0x422a24:	cmp	dword ptr [rbx + 8], 0
0x422a28:	jne	0x422a36
0x422a2a:	cmp	dword ptr [rbx + 0x38], 0
0x422a2e:	jne	0x422a3d
0x422a30:	mov	rcx, qword ptr [rbx + 0x18]
0x422a34:	jmp	0x422a5c
0x422a36:	mov	edx, dword ptr [rbx + 0x38]
0x422a39:	test	edx, edx
0x422a3b:	je	0x422a52
0x422a3d:	or	edx, 0xffffffff
0x422a40:	mov	esi, 0x4c8f60
0x422a45:	mov	rdi, r13
0x422a48:	call	r14
0x422a4b:	xor	eax, eax
0x422a4d:	jmp	0x422c31
0x422a52:	cmp	dword ptr [rbx + 8], 0
0x422a56:	je	0x422a30
0x422a58:	mov	rcx, qword ptr [rbx + 0x18]
0x422a5c:	test	rcx, rcx
0x422a5f:	jne	0x422c13
0x422a65:	xor	r15d, r15d
0x422a68:	lea	esi, [r15 - 1]
0x422a6c:	cmp	esi, 6
0x422a6f:	ja	0x422a81
0x422a71:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c95f0]
0x422a79:	mov	r12d, 0x4c930c
0x422a7f:	jmp	0x422ac7
0x422a81:	mov	r12, qword ptr [rbx]
0x422a84:	test	r12, r12
0x422a87:	je	0x422aeb
0x422a89:	jmp	0x422ac7
0x422a8b:	call	0x403990
0x422a90:	mov	r8d, 0x4c932e
0x422a96:	mov	ecx, 0x40
0x422a9b:	mov	edx, 1
0x422aa0:	movsxd	r9, eax
0x422aa3:	mov	esi, 0x40
0x422aa8:	lea	rdi, [rsp + 0x80]
0x422ab0:	xor	eax, eax
0x422ab2:	call	0x403820
0x422ab7:	lea	r12, [rsp + 0x80]
0x422abf:	jmp	0x422ac7
0x422ac1:	mov	r12d, 0x4c931f
0x422ac7:	mov	rdx, r13
0x422aca:	lea	rcx, [rsp + 0x40]
0x422acf:	mov	rsi, r14
0x422ad2:	mov	rdi, r12
0x422ad5:	call	0x41c935
0x422ada:	mov	edx, eax
0x422adc:	test	eax, eax
0x422ade:	jns	0x422b1c
0x422ae0:	cmp	dword ptr [rsp + 0x40], 0
0x422ae5:	je	0x422b75
0x422aeb:	inc	r15d
0x422aee:	cmp	r15d, 8
0x422af2:	jne	0x422a68
0x422af8:	mov	rsi, qword ptr [rbx]
0x422afb:	test	rsi, rsi
0x422afe:	je	0x422b0d
0x422b00:	mov	edx, 2
0x422b05:	mov	rdi, r13
0x422b08:	call	r14
0x422b0b:	jmp	0x422b75
0x422b0d:	xor	edx, edx
0x422b0f:	mov	esi, 0x4c8f88
0x422b14:	mov	rdi, r13
0x422b17:	call	r14
0x422b1a:	jmp	0x422b75
0x422b1c:	xor	r9d, r9d
0x422b1f:	xor	r8d, r8d
0x422b22:	xor	ecx, ecx
0x422b24:	mov	rdi, rbx
0x422b27:	mov	qword ptr [rsp + 0x38], 0x41baa2
0x422b30:	mov	rsi, r12
0x422b33:	push	0
0x422b35:	push	0
0x422b37:	push	0
0x422b39:	push	1
0x422b3b:	push	0
0x422b3d:	lea	r11, [rsp + 0x5c]
0x422b42:	push	r11
0x422b44:	lea	r10, [rsp + 0x60]
0x422b49:	push	r10
0x422b4b:	lea	r15, [rsp + 0x70]
0x422b50:	push	r15
0x422b52:	push	r13
0x422b54:	push	r14
0x422b56:	mov	dword ptr [rsp + 0x6c], eax
0x422b5a:	call	0x41f8c5
0x422b5f:	add	rsp, 0x50
0x422b63:	mov	edi, dword ptr [rsp + 0x1c]
0x422b67:	test	eax, eax
0x422b69:	lea	r8, [rsp + 0x30]
0x422b6e:	lea	r9, [rsp + 0x34]
0x422b73:	jne	0x422b96
0x422b75:	mov	eax, dword ptr [rbx + 8]
0x422b78:	test	eax, eax
0x422b7a:	jne	0x422b88
0x422b7c:	mov	dword ptr [rbx + 0x38], 1
0x422b83:	jmp	0x422c31
0x422b88:	xor	eax, eax
0x422b8a:	mov	dword ptr [rbx + 0x38], 1
0x422b91:	jmp	0x422c31
0x422b96:	mov	eax, 0xffffffff
0x422b9b:	lea	rsi, [rsp + 0x40]
0x422ba0:	mov	qword ptr [rsp + 0x40], rbx
0x422ba5:	cmovs	eax, edi
0x422ba8:	mov	edi, 0x422c95
0x422bad:	mov	qword ptr [rsp + 0x48], r14
0x422bb2:	mov	qword ptr [rsp + 0x50], r13
0x422bb7:	mov	qword ptr [rsp + 0x58], r15
0x422bbc:	mov	qword ptr [rsp + 0x60], r8
0x422bc1:	mov	qword ptr [rsp + 0x68], r9
0x422bc6:	mov	qword ptr [rsp + 0x70], r12
0x422bcb:	mov	dword ptr [rsp + 0x78], eax
0x422bcf:	call	0x403810
0x422bd4:	cmp	dword ptr [rbx + 8], 0
0x422bd8:	je	0x422c3d
0x422bda:	cmp	dword ptr [rsp + 0x30], 0
0x422bdf:	lea	rdx, [rbx + 0x28]
0x422be3:	je	0x422c5f
0x422be5:	mov	qword ptr [rbx + 0x28], 0x41c869
0x422bed:	cmp	dword ptr [rbx + 8], 0
0x422bf1:	je	0x422c7a
0x422bf7:	mov	rsi, qword ptr [rbx + 0x18]
0x422bfb:	test	rsi, rsi
0x422bfe:	je	0x422c6d
0x422c00:	cmp	rsi, 0x41baa2
0x422c07:	je	0x422c6d
0x422c09:	cmp	dword ptr [rbx + 8], 0
0x422c0d:	jne	0x422c74
0x422c0f:	mov	qword ptr [rbx + 0x18], rsi
0x422c13:	xor	eax, eax
0x422c15:	cmp	dword ptr [rbx + 0x38], 0
0x422c19:	jne	0x422c31
0x422c1b:	mov	rdx, qword ptr [rsp + 0x10]
0x422c20:	mov	rsi, qword ptr [rsp + 8]
0x422c25:	mov	r8, r13
0x422c28:	mov	rcx, r14
0x422c2b:	mov	rdi, rbx
0x422c2e:	call	qword ptr [rbx + 0x18]
0x422c31:	mov	dword ptr [rbp + 0x28], eax
0x422c34:	neg	eax
0x422c36:	sbb	eax, eax
0x422c38:	and	eax, 5
0x422c3b:	jmp	0x422c83
0x422c3d:	cmp	dword ptr [rsp + 0x30], 0
0x422c42:	je	0x422c4e
0x422c44:	mov	qword ptr [rbx + 0x28], 0x41c869
0x422c4c:	jmp	0x422c7a
0x422c4e:	cmp	qword ptr [rbx + 0x28], 0
0x422c53:	jne	0x422c7a
0x422c55:	mov	qword ptr [rbx + 0x28], 0x41bb09
0x422c5d:	jmp	0x422c7a
0x422c5f:	xor	eax, eax
0x422c61:	mov	ecx, 0x41bb09
0x422c66:	lock cmpxchg	qword ptr [rdx], rcx
0x422c6b:	jmp	0x422bed
0x422c6d:	mov	rsi, qword ptr [rsp + 0x38]
0x422c72:	jmp	0x422c09
0x422c74:	mov	qword ptr [rbx + 0x18], rsi
0x422c78:	jmp	0x422c13
0x422c7a:	mov	rsi, qword ptr [rbx + 0x18]
0x422c7e:	jmp	0x422bfb
0x422c83:	add	rsp, 0xc8
0x422c8a:	pop	rbx
0x422c8b:	pop	rbp
0x422c8c:	pop	r12
0x422c8e:	pop	r13
0x422c90:	pop	r14
0x422c92:	pop	r15
0x422c94:	ret	
0x422c95:	endbr64	
0x422c99:	push	r12
0x422c9b:	push	rbp
0x422c9c:	mov	rbp, rdi
0x422c9f:	push	rbx
0x422ca0:	mov	rbx, rdx
0x422ca3:	sub	rsp, 0x10
0x422ca7:	mov	rax, qword ptr [rdi + 8]
0x422cab:	mov	edi, dword ptr [rdx + 0x38]
0x422cae:	test	rax, rax
0x422cb1:	je	0x422cb8
0x422cb3:	cmp	byte ptr [rax], 0
0x422cb6:	jne	0x422cce
0x422cb8:	cmp	edi, -1
0x422cbb:	je	0x422d5f
0x422cc1:	mov	dword ptr [rbx + 0x38], 0xffffffff
0x422cc8:	mov	r12, qword ptr [rbx + 0x30]
0x422ccc:	jmp	0x422d06
0x422cce:	cmp	edi, -1
0x422cd1:	je	0x422ce7
0x422cd3:	mov	rdx, qword ptr [rdx + 0x10]
0x422cd7:	mov	rsi, qword ptr [rbx + 8]
0x422cdb:	call	0x41c9ad
0x422ce0:	mov	dword ptr [rbx + 0x38], 0xffffffff
0x422ce7:	mov	r12, qword ptr [rbp + 8]
0x422ceb:	mov	rdx, qword ptr [rbx + 0x10]
0x422cef:	lea	rcx, [rsp + 4]
0x422cf4:	mov	rsi, qword ptr [rbx + 8]
0x422cf8:	mov	rdi, r12
0x422cfb:	call	0x41c935
0x422d00:	mov	edi, eax
0x422d02:	test	eax, eax
0x422d04:	js	0x422d5f
0x422d06:	push	0
0x422d08:	mov	r9, qword ptr [rbp]
0x422d0c:	xor	r8d, r8d
0x422d0f:	mov	rsi, r12
0x422d12:	push	0
0x422d14:	push	0
0x422d16:	push	0
0x422d18:	push	0
0x422d1a:	lea	rdx, [rsp + 0x28]
0x422d1f:	push	rdx
0x422d20:	mov	edx, edi
0x422d22:	mov	rdi, qword ptr [rbx]
0x422d25:	push	qword ptr [rbx + 0x20]
0x422d28:	lea	rcx, [rsp + 0x40]
0x422d2d:	push	rcx
0x422d2e:	xor	ecx, ecx
0x422d30:	push	qword ptr [rbx + 0x10]
0x422d33:	push	qword ptr [rbx + 8]
0x422d36:	call	0x41f8c5
0x422d3b:	add	rsp, 0x50
0x422d3f:	test	eax, eax
0x422d41:	je	0x422d5f
0x422d43:	cmp	dword ptr [rsp], 0
0x422d47:	je	0x422d5f
0x422d49:	mov	rsi, qword ptr [rbx + 0x28]
0x422d4d:	mov	rdi, qword ptr [rbx + 0x18]
0x422d51:	mov	r8, qword ptr [rsp + 8]
0x422d56:	mov	dword ptr [rsi], 1
0x422d5c:	mov	qword ptr [rdi], r8
0x422d5f:	add	rsp, 0x10
0x422d63:	xor	eax, eax
0x422d65:	pop	rbx
0x422d66:	pop	rbp
0x422d67:	pop	r12
0x422d69:	ret	
0x422d6a:	endbr64	
0x422d6e:	push	rbp
0x422d6f:	mov	rax, rcx
0x422d72:	mov	rbp, rsi
0x422d75:	movq	xmm0, rdx
0x422d7a:	push	rbx
0x422d7b:	movq	xmm1, rax
0x422d80:	mov	r10, r8
0x422d83:	mov	rcx, r9
0x422d86:	punpcklqdq	xmm0, xmm1
0x422d8a:	sub	rsp, 0x18
0x422d8e:	mov	rbx, qword ptr [rsp + 0x30]
0x422d93:	mov	rsi, qword ptr [rbx + 0x18]
0x422d97:	test	rsi, rsi
0x422d9a:	je	0x422dd0
0x422d9c:	imul	r9, rsi, 0x18
0x422da0:	mov	r8, qword ptr [rbx]
0x422da3:	lea	r11, [r8 + r9 - 0x18]
0x422da8:	mov	rsi, qword ptr [r11 + 8]
0x422dac:	cmp	rsi, rdx
0x422daf:	je	0x422dba
0x422db1:	lea	r9, [rsi + 1]
0x422db5:	cmp	r9, rdx
0x422db8:	jne	0x422dd0
0x422dba:	cmp	qword ptr [r11 + 0x10], rbp
0x422dbe:	jne	0x422dd0
0x422dc0:	mov	edx, 1
0x422dc5:	cmp	rsi, rax
0x422dc8:	jae	0x422dff
0x422dca:	mov	qword ptr [r11 + 8], rax
0x422dce:	jmp	0x422dff
0x422dd0:	mov	rdx, r10
0x422dd3:	mov	r8, rbx
0x422dd6:	mov	esi, 0x18
0x422ddb:	movaps	xmmword ptr [rsp], xmm0
0x422ddf:	call	0x41f7d7
0x422de4:	xor	edx, edx
0x422de6:	test	rax, rax
0x422de9:	je	0x422dff
0x422deb:	movaps	xmm2, xmmword ptr [rsp]
0x422def:	mov	qword ptr [rax + 0x10], rbp
0x422df3:	mov	edx, 1
0x422df8:	movups	xmmword ptr [rax], xmm2
0x422dfb:	inc	qword ptr [rbx + 0x18]
0x422dff:	add	rsp, 0x18
0x422e03:	mov	eax, edx
0x422e05:	pop	rbx
0x422e06:	pop	rbp
0x422e07:	ret	
0x422e08:	endbr64	
0x422e0c:	push	rbp
0x422e0d:	mov	rax, rcx
0x422e10:	mov	rbp, rsi
0x422e13:	movq	xmm0, rdx
0x422e18:	push	rbx
0x422e19:	movq	xmm1, rax
0x422e1e:	mov	r10, r8
0x422e21:	mov	rcx, r9
0x422e24:	punpcklqdq	xmm0, xmm1
0x422e28:	sub	rsp, 0x18
0x422e2c:	mov	rbx, qword ptr [rsp + 0x30]
0x422e31:	mov	rsi, qword ptr [rbx + 0x18]
0x422e35:	test	rsi, rsi
0x422e38:	je	0x422e6e
0x422e3a:	imul	r9, rsi, 0x18
0x422e3e:	mov	r8, qword ptr [rbx]
0x422e41:	lea	r11, [r8 + r9 - 0x18]
0x422e46:	mov	rsi, qword ptr [r11 + 8]
0x422e4a:	cmp	rsi, rdx
0x422e4d:	je	0x422e58
0x422e4f:	lea	r9, [rsi + 1]
0x422e53:	cmp	r9, rdx
0x422e56:	jne	0x422e6e
0x422e58:	cmp	qword ptr [r11 + 0x10], rbp
0x422e5c:	jne	0x422e6e
0x422e5e:	mov	edx, 1
0x422e63:	cmp	rsi, rax
0x422e66:	jae	0x422e9d
0x422e68:	mov	qword ptr [r11 + 8], rax
0x422e6c:	jmp	0x422e9d
0x422e6e:	mov	rdx, r10
0x422e71:	mov	r8, rbx
0x422e74:	mov	esi, 0x18
0x422e79:	movaps	xmmword ptr [rsp], xmm0
0x422e7d:	call	0x41f7d7
0x422e82:	xor	edx, edx
0x422e84:	test	rax, rax
0x422e87:	je	0x422e9d
0x422e89:	movaps	xmm2, xmmword ptr [rsp]
0x422e8d:	mov	qword ptr [rax + 0x10], rbp
0x422e91:	mov	edx, 1
0x422e96:	movups	xmmword ptr [rax], xmm2
0x422e99:	inc	qword ptr [rbx + 0x18]
0x422e9d:	add	rsp, 0x18
0x422ea1:	mov	eax, edx
0x422ea3:	pop	rbx
0x422ea4:	pop	rbp
0x422ea5:	ret	
0x422ea6:	push	r15
0x422ea8:	lea	rax, [rdx + 0x70]
0x422eac:	mov	r15, rdx
0x422eaf:	lea	rdx, [rsi + 0x38]
0x422eb3:	push	r14
0x422eb5:	mov	r14, rsi
0x422eb8:	push	r13
0x422eba:	push	r12
0x422ebc:	push	rbp
0x422ebd:	push	rbx
0x422ebe:	mov	rbx, rdi
0x422ec1:	sub	rsp, 0xb8
0x422ec8:	mov	qword ptr [rsp + 0x48], rcx
0x422ecd:	mov	r13, qword ptr [rsp + 0xf0]
0x422ed5:	mov	qword ptr [rsp], r8
0x422ed9:	mov	qword ptr [rsp + 8], r9
0x422ede:	mov	qword ptr [rsp + 0x38], rax
0x422ee3:	mov	qword ptr [rsp + 0x30], rdx
0x422ee8:	mov	rcx, qword ptr [rsp]
0x422eec:	cmp	qword ptr [rcx + 0x18], 0
0x422ef1:	je	0x423411
0x422ef7:	mov	rdi, qword ptr [rsp]
0x422efb:	call	0x41c109
0x422f00:	mov	rsi, rax
0x422f03:	test	rax, rax
0x422f06:	je	0x423411
0x422f0c:	mov	rcx, qword ptr [rsp + 0xf8]
0x422f14:	mov	rdi, qword ptr [rsp + 0x38]
0x422f19:	mov	rdx, r13
0x422f1c:	call	0x41bc0b
0x422f21:	mov	r12, rax
0x422f24:	test	rax, rax
0x422f27:	je	0x42340d
0x422f2d:	mov	esi, dword ptr [rax + 8]
0x422f30:	cmp	esi, 0x2e
0x422f33:	je	0x423418
0x422f39:	cmp	esi, 3
0x422f3c:	je	0x423418
0x422f42:	cmp	esi, 0x1d
0x422f45:	jne	0x422f8e
0x422f47:	mov	rbp, qword ptr [rsp + 0x108]
0x422f4f:	mov	qword ptr [rsp + 0x20], rbp
0x422f54:	mov	rcx, qword ptr [rsp + 0xf8]
0x422f5c:	mov	rdx, r13
0x422f5f:	mov	esi, 0x28
0x422f64:	mov	rdi, rbx
0x422f67:	call	0x41eee1
0x422f6c:	mov	rbp, rax
0x422f6f:	test	rax, rax
0x422f72:	je	0x42340d
0x422f78:	mov	ecx, 0xa
0x422f7d:	xor	eax, eax
0x422f7f:	mov	rdi, rbp
0x422f82:	mov	dword ptr [rsp + 0x28], 1
0x422f8a:	rep stosd	dword ptr [rdi], eax
0x422f8c:	jmp	0x422fa5
0x422f8e:	mov	rdi, qword ptr [rsp + 0x100]
0x422f96:	mov	dword ptr [rsp + 0x28], 0
0x422f9e:	xor	ebp, ebp
0x422fa0:	mov	qword ptr [rsp + 0x20], rdi
0x422fa5:	lea	rdi, [rsp + 0x78]
0x422faa:	mov	ecx, 0xe
0x422faf:	xor	eax, eax
0x422fb1:	mov	dword ptr [rsp + 0x2c], 0
0x422fb9:	rep stosd	dword ptr [rdi], eax
0x422fbb:	mov	qword ptr [rsp + 0x40], rbx
0x422fc0:	mov	rbx, qword ptr [rsp + 0x30]
0x422fc5:	mov	qword ptr [rsp + 0x10], 0
0x422fce:	mov	r9, qword ptr [rsp + 0x10]
0x422fd3:	cmp	qword ptr [r12 + 0x10], r9
0x422fd8:	jbe	0x42325d
0x422fde:	mov	r8, qword ptr [rsp + 0x10]
0x422fe3:	mov	ecx, dword ptr [r15 + 0x2c]
0x422fe7:	shl	r8, 4
0x422feb:	mov	qword ptr [rsp + 0x18], r8
0x422ff0:	add	r8, qword ptr [r12 + 0x18]
0x422ff5:	mov	rsi, qword ptr [r8 + 8]
0x422ff9:	mov	edi, dword ptr [r8 + 4]
0x422ffd:	push	r10
0x422fff:	mov	r8d, dword ptr [r15 + 0x28]
0x423003:	lea	r9, [rsp + 0x60]
0x423008:	push	r9
0x42300a:	mov	r9d, dword ptr [r15 + 0x30]
0x42300e:	push	qword ptr [r14 + 8]
0x423012:	push	rbx
0x423013:	mov	rdx, qword ptr [rsp + 0x20]
0x423018:	call	0x41de66
0x42301d:	add	rsp, 0x20
0x423021:	test	eax, eax
0x423023:	je	0x42340d
0x423029:	cmp	dword ptr [r12 + 8], 0x11
0x42302f:	jne	0x423097
0x423031:	mov	r10, qword ptr [r12 + 0x18]
0x423036:	mov	rsi, qword ptr [rsp + 0x18]
0x42303b:	cmp	dword ptr [r10 + rsi], 0x11
0x423040:	jne	0x423097
0x423042:	mov	r11d, dword ptr [rsp + 0x58]
0x423047:	cmp	r11d, 1
0x42304b:	jne	0x423059
0x42304d:	mov	rcx, qword ptr [rsp + 0x60]
0x423052:	mov	qword ptr [rsp + 0x48], rcx
0x423057:	jmp	0x423097
0x423059:	cmp	r11d, 2
0x42305d:	jne	0x423097
0x42305f:	lea	rax, [rsp + 0x48]
0x423064:	mov	edx, dword ptr [r15 + 0x30]
0x423068:	mov	rsi, qword ptr [r15 + 0x48]
0x42306c:	mov	r9, r13
0x42306f:	push	rax
0x423070:	mov	ecx, dword ptr [r14 + 0xc8]
0x423077:	mov	rdi, rbx
0x42307a:	push	qword ptr [rsp + 0x100]
0x423081:	mov	r8, qword ptr [rsp + 0x70]
0x423086:	call	0x41c082
0x42308b:	pop	r8
0x42308d:	pop	r9
0x42308f:	test	eax, eax
0x423091:	je	0x42340d
0x423097:	cmp	dword ptr [rsp + 0x28], 0
0x42309c:	je	0x423253
0x4230a2:	mov	rdx, qword ptr [rsp + 0x18]
0x4230a7:	add	rdx, qword ptr [r12 + 0x18]
0x4230ac:	mov	edi, dword ptr [rdx]
0x4230ae:	cmp	edi, 0x55
0x4230b1:	je	0x423244
0x4230b7:	ja	0x4230ec
0x4230b9:	cmp	edi, 0x12
0x4230bc:	ja	0x4230d5
0x4230be:	cmp	edi, 0x10
0x4230c1:	ja	0x423244
0x4230c7:	cmp	edi, 3
0x4230ca:	je	0x4231ad
0x4230d0:	jmp	0x423253
0x4230d5:	cmp	edi, 0x31
0x4230d8:	je	0x423175
0x4230de:	cmp	edi, 0x47
0x4230e1:	je	0x423175
0x4230e7:	jmp	0x423253
0x4230ec:	cmp	edi, 0x59
0x4230ef:	je	0x42315d
0x4230f1:	ja	0x4230fd
0x4230f3:	cmp	edi, 0x58
0x4230f6:	je	0x423117
0x4230f8:	jmp	0x423253
0x4230fd:	cmp	edi, 0x6e
0x423100:	je	0x4231ea
0x423106:	cmp	edi, 0x2007
0x42310c:	je	0x4231ea
0x423112:	jmp	0x423253
0x423117:	cmp	dword ptr [rsp + 0x58], 3
0x42311c:	jne	0x423253
0x423122:	mov	rsi, qword ptr [rsp + 8]
0x423127:	mov	r10, qword ptr [rsp + 0x60]
0x42312c:	cmp	r10, qword ptr [rsi + 0x38]
0x423130:	jb	0x423147
0x423132:	mov	rdi, qword ptr [rsp]
0x423136:	xor	edx, edx
0x423138:	mov	esi, 0x4c8fb8
0x42313d:	call	0x41be97
0x423142:	jmp	0x42340d
0x423147:	mov	r11, qword ptr [rsp + 8]
0x42314c:	mov	rax, qword ptr [r11 + 0x40]
0x423150:	mov	rcx, qword ptr [rax + r10*8]
0x423154:	mov	qword ptr [rbp + 8], rcx
0x423158:	jmp	0x423253
0x42315d:	cmp	dword ptr [rsp + 0x58], 3
0x423162:	jne	0x423253
0x423168:	mov	rdi, qword ptr [rsp + 0x60]
0x42316d:	mov	dword ptr [rbp + 0x10], edi
0x423170:	jmp	0x423253
0x423175:	cmp	dword ptr [rsp + 0x2c], 0
0x42317a:	jne	0x423253
0x423180:	mov	r8, r13
0x423183:	lea	rcx, [rsp + 0x58]
0x423188:	mov	rsi, r15
0x42318b:	mov	rdi, r14
0x42318e:	mov	r9, qword ptr [rsp + 0xf8]
0x423196:	call	0x41e5f0
0x42319b:	test	rax, rax
0x42319e:	je	0x423253
0x4231a4:	mov	qword ptr [rbp], rax
0x4231a8:	jmp	0x423253
0x4231ad:	cmp	qword ptr [rbp], 0
0x4231b2:	jne	0x423253
0x4231b8:	push	rbp
0x4231b9:	mov	esi, dword ptr [r15 + 0x2c]
0x4231bd:	mov	rdi, rbx
0x4231c0:	mov	r9, r13
0x4231c3:	push	qword ptr [rsp + 0x100]
0x4231ca:	mov	rcx, qword ptr [r15 + 0x40]
0x4231ce:	mov	edx, dword ptr [r14 + 0xc8]
0x4231d5:	lea	r8, [rsp + 0x68]
0x4231da:	call	0x41c206
0x4231df:	pop	rsi
0x4231e0:	pop	rdi
0x4231e1:	test	eax, eax
0x4231e3:	jne	0x423253
0x4231e5:	jmp	0x42340d
0x4231ea:	lea	r8, [rsp + 0x50]
0x4231ef:	mov	rcx, qword ptr [r15 + 0x40]
0x4231f3:	mov	esi, dword ptr [r15 + 0x2c]
0x4231f7:	mov	r9, r13
0x4231fa:	mov	qword ptr [rsp + 0x50], 0
0x423203:	mov	edx, dword ptr [r14 + 0xc8]
0x42320a:	mov	rdi, rbx
0x42320d:	push	r8
0x42320f:	push	qword ptr [rsp + 0x100]
0x423216:	lea	r8, [rsp + 0x68]
0x42321b:	call	0x41c206
0x423220:	pop	rdx
0x423221:	pop	rcx
0x423222:	test	eax, eax
0x423224:	je	0x42340d
0x42322a:	mov	rdx, qword ptr [rsp + 0x50]
0x42322f:	test	rdx, rdx
0x423232:	je	0x423253
0x423234:	mov	r9d, dword ptr [rsp + 0x28]
0x423239:	mov	qword ptr [rbp], rdx
0x42323d:	mov	dword ptr [rsp + 0x2c], r9d
0x423242:	jmp	0x423253
0x423244:	lea	rdx, [rsp + 0x78]
0x423249:	lea	rsi, [rsp + 0x58]
0x42324e:	call	0x42c440
0x423253:	inc	qword ptr [rsp + 0x10]
0x423258:	jmp	0x422fce
0x42325d:	cmp	dword ptr [rsp + 0x28], 0
0x423262:	mov	rbx, qword ptr [rsp + 0x40]
0x423267:	je	0x4232f4
0x42326d:	cmp	qword ptr [rbp], 0
0x423272:	je	0x4232dc
0x423274:	cmp	dword ptr [rsp + 0xa8], 0
0x42327c:	jne	0x423292
0x42327e:	cmp	dword ptr [rsp + 0x80], 0
0x423286:	je	0x4232dc
0x423288:	cmp	dword ptr [rsp + 0x90], 0
0x423290:	je	0x4232dc
0x423292:	push	qword ptr [rsp + 0x20]
0x423296:	mov	rdx, qword ptr [r14 + 0x10]
0x42329a:	mov	r8, r15
0x42329d:	mov	rdi, rbx
0x4232a0:	mov	ecx, dword ptr [r14 + 0xc8]
0x4232a7:	push	qword ptr [rsp + 0x100]
0x4232ae:	push	r13
0x4232b0:	push	rbp
0x4232b1:	push	0x422e08
0x4232b6:	lea	r10, [rsp + 0xa0]
0x4232be:	push	r10
0x4232c0:	mov	r9, qword ptr [rsp + 0x78]
0x4232c5:	mov	rsi, qword ptr [rsp + 0x60]
0x4232ca:	call	0x41c2dd
0x4232cf:	add	rsp, 0x30
0x4232d3:	test	eax, eax
0x4232d5:	jne	0x4232f4
0x4232d7:	jmp	0x42340d
0x4232dc:	mov	edx, 0x28
0x4232e1:	mov	rsi, rbp
0x4232e4:	mov	rdi, rbx
0x4232e7:	call	0x42c1a8
0x4232ec:	mov	dword ptr [rsp + 0x28], 0
0x4232f4:	cmp	dword ptr [r12 + 0xc], 0
0x4232fa:	je	0x422ee8
0x423300:	cmp	dword ptr [rsp + 0x28], 0
0x423305:	mov	r11, qword ptr [rsp + 0x48]
0x42330a:	jne	0x42334f
0x42330c:	push	qword ptr [rsp + 0x108]
0x423313:	mov	rcx, r11
0x423316:	mov	rdx, r15
0x423319:	mov	rsi, r14
0x42331c:	push	qword ptr [rsp + 0x108]
0x423323:	mov	rdi, rbx
0x423326:	push	qword ptr [rsp + 0x108]
0x42332d:	push	r13
0x42332f:	mov	r9, qword ptr [rsp + 0x28]
0x423334:	mov	r8, qword ptr [rsp + 0x20]
0x423339:	call	0x422ea6
0x42333e:	add	rsp, 0x20
0x423342:	test	eax, eax
0x423344:	jne	0x422ee8
0x42334a:	jmp	0x42340d
0x42334f:	lea	r12, [rsp + 0x58]
0x423354:	xor	eax, eax
0x423356:	mov	ecx, 8
0x42335b:	mov	rdx, r15
0x42335e:	mov	rdi, r12
0x423361:	mov	rsi, r14
0x423364:	rep stosd	dword ptr [rdi], eax
0x423366:	push	r12
0x423368:	mov	rcx, r11
0x42336b:	mov	rdi, rbx
0x42336e:	push	qword ptr [rsp + 0x108]
0x423375:	push	qword ptr [rsp + 0x108]
0x42337c:	push	r13
0x42337e:	mov	r9, qword ptr [rsp + 0x28]
0x423383:	mov	r8, qword ptr [rsp + 0x20]
0x423388:	call	0x422ea6
0x42338d:	add	rsp, 0x20
0x423391:	test	eax, eax
0x423393:	je	0x42340d
0x423395:	cmp	qword ptr [rsp + 0x70], 0
0x42339b:	je	0x422ee8
0x4233a1:	mov	r8, r12
0x4233a4:	mov	rdx, r13
0x4233a7:	mov	esi, 0x18
0x4233ac:	mov	rdi, rbx
0x4233af:	mov	rcx, qword ptr [rsp + 0xf8]
0x4233b7:	call	0x41f7d7
0x4233bc:	test	rax, rax
0x4233bf:	je	0x42340d
0x4233c1:	mov	qword ptr [rax + 0x10], 0
0x4233c9:	pcmpeqd	xmm0, xmm0
0x4233cd:	mov	rsi, r12
0x4233d0:	mov	rdi, rbx
0x4233d3:	movups	xmmword ptr [rax], xmm0
0x4233d6:	call	0x42c582
0x4233db:	test	eax, eax
0x4233dd:	je	0x42340d
0x4233df:	mov	r12, qword ptr [rsp + 0x58]
0x4233e4:	mov	rsi, qword ptr [rsp + 0x70]
0x4233e9:	mov	edx, 0x18
0x4233ee:	mov	ecx, 0x41ddfe
0x4233f3:	mov	rdi, r12
0x4233f6:	call	0x41bd42
0x4233fb:	mov	rdx, qword ptr [rsp + 0x70]
0x423400:	mov	qword ptr [rbp + 0x18], r12
0x423404:	mov	qword ptr [rbp + 0x20], rdx
0x423408:	jmp	0x422ee8
0x42340d:	xor	eax, eax
0x42340f:	jmp	0x423436
0x423411:	mov	eax, 1
0x423416:	jmp	0x423436
0x423418:	mov	r8, qword ptr [rsp + 0x108]
0x423420:	cmp	esi, 0x1d
0x423423:	cmovne	r8, qword ptr [rsp + 0x100]
0x42342c:	mov	qword ptr [rsp + 0x20], r8
0x423431:	jmp	0x422f54
0x423436:	add	rsp, 0xb8
0x42343d:	pop	rbx
0x42343e:	pop	rbp
0x42343f:	pop	r12
0x423441:	pop	r13
0x423443:	pop	r14
0x423445:	pop	r15
0x423447:	ret	
0x423448:	push	r15
0x42344a:	mov	r15, rdi
0x42344d:	push	r14
0x42344f:	push	r13
0x423451:	mov	r13, rsi
0x423454:	push	r12
0x423456:	push	rbp
0x423457:	push	rbx
0x423458:	sub	rsp, 0x158
0x42345f:	mov	rax, qword ptr [rsp + 0x190]
0x423467:	mov	qword ptr [rsp + 0x28], rcx
0x42346c:	mov	qword ptr [rsp + 0x30], r8
0x423471:	mov	qword ptr [rsp + 8], r9
0x423476:	mov	qword ptr [rsp + 0x48], rax
0x42347b:	mov	qword ptr [rsp + 0x20], rdx
0x423480:	mov	rdx, qword ptr [rsp + 0x48]
0x423485:	mov	rax, qword ptr [r13 + 0x20]
0x423489:	mov	dword ptr [rdx], 1
0x42348f:	test	rax, rax
0x423492:	je	0x4234ef
0x423494:	cmp	qword ptr [rsp + 0x20], -1
0x42349a:	je	0x4234ef
0x42349c:	mov	r14, qword ptr [r13 + 0x18]
0x4234a0:	mov	rdi, qword ptr [rsp + 0x20]
0x4234a5:	xor	ecx, ecx
0x4234a7:	cmp	rcx, rax
0x4234aa:	jae	0x4234ef
0x4234ac:	lea	r8, [rcx + rax]
0x4234b0:	shr	r8, 1
0x4234b3:	imul	rbp, r8, 0x18
0x4234b7:	add	rbp, r14
0x4234ba:	cmp	qword ptr [rbp], rdi
0x4234be:	ja	0x4234cc
0x4234c0:	cmp	qword ptr [rbp + 0x18], rdi
0x4234c4:	jae	0x423502
0x4234c6:	lea	rcx, [r8 + 1]
0x4234ca:	jmp	0x4234a7
0x4234cc:	mov	rax, r8
0x4234cf:	jmp	0x4234a7
0x4234d1:	mov	r11, qword ptr [rbp]
0x4234d5:	cmp	qword ptr [rbp - 0x18], r11
0x4234d9:	jb	0x4234ef
0x4234db:	sub	rbp, 0x18
0x4234df:	mov	r10, qword ptr [rsp + 0x20]
0x4234e4:	cmp	qword ptr [rbp + 8], r10
0x4234e8:	ja	0x423513
0x4234ea:	cmp	r14, rbp
0x4234ed:	jne	0x4234d1
0x4234ef:	mov	r10, qword ptr [rsp + 0x48]
0x4234f4:	xor	eax, eax
0x4234f6:	mov	dword ptr [r10], 0
0x4234fd:	jmp	0x42449d
0x423502:	mov	r9, qword ptr [rsp + 0x20]
0x423507:	cmp	qword ptr [rbp + 0x18], r9
0x42350b:	jne	0x4234df
0x42350d:	add	rbp, 0x18
0x423511:	jmp	0x423502
0x423513:	mov	rsi, qword ptr [rbp + 0x10]
0x423517:	mov	r12, qword ptr [rsp + 0x20]
0x42351c:	mov	qword ptr [rsp + 0x10], rsi
0x423521:	mov	rbx, qword ptr [rsi + 0x80]
0x423528:	mov	r14d, dword ptr [r15 + 8]
0x42352c:	cmp	qword ptr [r13 + 0x18], rbp
0x423530:	jae	0x423561
0x423532:	cmp	qword ptr [rbp - 0x18], r12
0x423536:	ja	0x423561
0x423538:	cmp	qword ptr [rbp - 0x10], r12
0x42353c:	jbe	0x423561
0x42353e:	test	r14d, r14d
0x423541:	je	0x42354a
0x423543:	mov	rbx, qword ptr [rsi + 0x80]
0x42354a:	cmp	rbx, -1
0x42354e:	jne	0x423561
0x423550:	mov	rsi, qword ptr [rbp - 8]
0x423554:	sub	rbp, 0x18
0x423558:	mov	rbx, qword ptr [rsi + 0x80]
0x42355f:	jmp	0x423528
0x423561:	cmp	dword ptr [r15 + 8], 0
0x423566:	mov	qword ptr [rsp + 0x10], rsi
0x42356b:	je	0x423574
0x42356d:	mov	rbx, qword ptr [rsi + 0x80]
0x423574:	test	rbx, rbx
0x423577:	jne	0x424409
0x42357d:	xor	eax, eax
0x42357f:	lea	rdi, [rsp + 0x68]
0x423584:	mov	ecx, 6
0x423589:	mov	r14, qword ptr [rbp + 0x10]
0x42358d:	rep stosd	dword ptr [rdi], eax
0x42358f:	mov	ecx, 0x12
0x423594:	lea	rdi, [rsp + 0x108]
0x42359c:	mov	r9, qword ptr [r13 + 0x88]
0x4235a3:	rep stosd	dword ptr [rdi], eax
0x4235a5:	mov	qword ptr [rsp + 0x80], 0
0x4235b1:	mov	r8, qword ptr [r14 + 0x38]
0x4235b5:	cmp	r8, r9
0x4235b8:	jb	0x4235d3
0x4235ba:	mov	rdi, qword ptr [rsp + 8]
0x4235bf:	mov	r11, qword ptr [rsp + 0x30]
0x4235c4:	xor	edx, edx
0x4235c6:	mov	esi, 0x4c9345
0x4235cb:	call	r11
0x4235ce:	jmp	0x423f93
0x4235d3:	mov	rdx, qword ptr [r13 + 0x40]
0x4235d7:	mov	r11, qword ptr [rsp + 0x30]
0x4235dc:	sub	r9, r8
0x4235df:	xor	r12d, r12d
0x4235e2:	mov	r10d, dword ptr [r13 + 0xc8]
0x4235e9:	mov	rsi, qword ptr [rsp + 8]
0x4235ee:	lea	rdi, [rsp + 0x88]
0x4235f6:	mov	qword ptr [rsp + 0x88], 0x4c9363
0x423602:	mov	qword ptr [rsp + 0x90], rdx
0x42360a:	add	rdx, r8
0x42360d:	mov	ebx, 0xffffffff
0x423612:	mov	qword ptr [rsp + 0x98], rdx
0x42361a:	mov	qword ptr [rsp + 0xa0], r9
0x423622:	mov	dword ptr [rsp + 0xa8], r10d
0x42362a:	mov	qword ptr [rsp + 0xb0], r11
0x423632:	mov	qword ptr [rsp + 0xb8], rsi
0x42363a:	mov	dword ptr [rsp + 0xc0], 0
0x423645:	call	0x41bfce
0x42364a:	mov	eax, eax
0x42364c:	cmp	rax, rbx
0x42364f:	jne	0x423664
0x423651:	lea	rdi, [rsp + 0x88]
0x423659:	mov	r12d, 1
0x42365f:	call	0x41bffb
0x423664:	lea	rdi, [rsp + 0x88]
0x42366c:	mov	qword ptr [rsp + 0xa0], rax
0x423674:	call	0x41bf59
0x423679:	movzx	eax, ax
0x42367c:	lea	ecx, [rax - 2]
0x42367f:	mov	dword ptr [rsp + 0x108], eax
0x423686:	cmp	ecx, 3
0x423689:	jbe	0x4236a5
0x42368b:	or	edx, 0xffffffff
0x42368e:	mov	esi, 0x4c8ff0
0x423693:	lea	rdi, [rsp + 0x88]
0x42369b:	call	0x41be97
0x4236a0:	jmp	0x423f93
0x4236a5:	cmp	eax, 5
0x4236a8:	je	0x4236b8
0x4236aa:	mov	r8d, dword ptr [r14 + 0x30]
0x4236ae:	mov	dword ptr [rsp + 0x10c], r8d
0x4236b6:	jmp	0x4236fa
0x4236b8:	lea	rdi, [rsp + 0x88]
0x4236c0:	call	0x41bf3c
0x4236c5:	movzx	edi, al
0x4236c8:	mov	dword ptr [rsp + 0x10c], edi
0x4236cf:	lea	rdi, [rsp + 0x88]
0x4236d7:	call	0x41bf3c
0x4236dc:	test	al, al
0x4236de:	je	0x4236fa
0x4236e0:	or	edx, 0xffffffff
0x4236e3:	mov	esi, 0x4c9010
0x4236e8:	lea	rdi, [rsp + 0x88]
0x4236f0:	call	0x41be97
0x4236f5:	jmp	0x423f93
0x4236fa:	lea	rbx, [rsp + 0x88]
0x423702:	mov	esi, r12d
0x423705:	lea	r12, [rsp + 0xc8]
0x42370d:	mov	rdi, rbx
0x423710:	call	0x41c02a
0x423715:	mov	ecx, 0x10
0x42371a:	mov	rdi, r12
0x42371d:	mov	rsi, rbx
0x423720:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x423722:	mov	rsi, rax
0x423725:	mov	rdi, rbx
0x423728:	mov	qword ptr [rsp + 0xe0], rax
0x423730:	call	0x41bef0
0x423735:	test	eax, eax
0x423737:	je	0x423f93
0x42373d:	mov	rdi, r12
0x423740:	call	0x41bf3c
0x423745:	cmp	dword ptr [rsp + 0x108], 3
0x42374d:	mov	r10d, 1
0x423753:	movzx	edx, al
0x423756:	mov	dword ptr [rsp + 0x110], edx
0x42375d:	jle	0x42376b
0x42375f:	mov	rdi, r12
0x423762:	call	0x41bf3c
0x423767:	movzx	r10d, al
0x42376b:	mov	rdi, r12
0x42376e:	mov	dword ptr [rsp + 0x114], r10d
0x423776:	call	0x41bf3c
0x42377b:	mov	esi, 1
0x423780:	mov	rdi, r12
0x423783:	mov	rbx, qword ptr [rsp + 0xd8]
0x42378b:	call	0x41bef0
0x423790:	mov	r11d, eax
0x423793:	xor	eax, eax
0x423795:	test	r11d, r11d
0x423798:	je	0x42379d
0x42379a:	movsx	eax, byte ptr [rbx]
0x42379d:	mov	rdi, r12
0x4237a0:	mov	dword ptr [rsp + 0x118], eax
0x4237a7:	call	0x41bf3c
0x4237ac:	mov	rdi, r12
0x4237af:	movzx	r8d, al
0x4237b3:	mov	dword ptr [rsp + 0x11c], r8d
0x4237bb:	call	0x41bf3c
0x4237c0:	mov	rcx, qword ptr [rsp + 0xd8]
0x4237c8:	mov	rdi, r12
0x4237cb:	movzx	r9d, al
0x4237cf:	lea	esi, [r9 - 1]
0x4237d3:	mov	dword ptr [rsp + 0x120], r9d
0x4237db:	mov	qword ptr [rsp + 0x128], rcx
0x4237e3:	call	0x41bef0
0x4237e8:	test	eax, eax
0x4237ea:	je	0x423f93
0x4237f0:	cmp	dword ptr [rsp + 0x108], 4
0x4237f8:	jg	0x423b40
0x4237fe:	mov	rbx, qword ptr [rsp + 0xd8]
0x423806:	mov	rdx, qword ptr [rsp + 0xe0]
0x42380e:	mov	qword ptr [rsp + 0x18], r15
0x423813:	mov	r15, rbp
0x423816:	mov	qword ptr [rsp + 0x130], 0
0x423822:	add	rdx, rbx
0x423825:	mov	qword ptr [rsp + 0x38], r13
0x42382a:	mov	r13, rdx
0x42382d:	mov	rbp, qword ptr [rsp + 0x130]
0x423835:	lea	rbp, [rbp + 1]
0x423839:	cmp	r13, rbx
0x42383c:	jbe	0x423860
0x42383e:	cmp	byte ptr [rbx], 0
0x423841:	je	0x423860
0x423843:	mov	rsi, r13
0x423846:	mov	rdi, rbx
0x423849:	sub	rsi, rbx
0x42384c:	call	0x403ae0
0x423851:	mov	qword ptr [rsp + 0x130], rbp
0x423859:	lea	rbx, [rbx + rax + 1]
0x42385e:	jmp	0x42382d
0x423860:	mov	r10, rbp
0x423863:	mov	rbp, r15
0x423866:	mov	r15, qword ptr [rsp + 0x18]
0x42386b:	mov	rcx, qword ptr [rsp + 0xf8]
0x423873:	mov	rdx, qword ptr [rsp + 0xf0]
0x42387b:	lea	rsi, [r10*8]
0x423883:	mov	r13, qword ptr [rsp + 0x38]
0x423888:	mov	qword ptr [rsp + 0x130], r10
0x423890:	mov	rdi, r15
0x423893:	call	0x41eee1
0x423898:	mov	qword ptr [rsp + 0x138], rax
0x4238a0:	test	rax, rax
0x4238a3:	je	0x423f93
0x4238a9:	mov	r11, qword ptr [r14 + 0x60]
0x4238ad:	mov	qword ptr [rsp + 0x18], r13
0x4238b2:	mov	ebx, 8
0x4238b7:	mov	r13, rbp
0x4238ba:	mov	qword ptr [rax], r11
0x4238bd:	mov	rax, qword ptr [rsp + 0xd8]
0x4238c5:	cmp	byte ptr [rax], 0
0x4238c8:	je	0x423909
0x4238ca:	cmp	dword ptr [rsp + 0x100], 0
0x4238d2:	jne	0x423f7d
0x4238d8:	mov	rbp, qword ptr [rsp + 0x138]
0x4238e0:	mov	rdi, r12
0x4238e3:	call	0x41de35
0x4238e8:	mov	r10, qword ptr [rsp + 0x138]
0x4238f0:	add	rbp, rbx
0x4238f3:	mov	qword ptr [rbp], rax
0x4238f7:	mov	rcx, qword ptr [r10 + rbx]
0x4238fb:	add	rbx, 8
0x4238ff:	test	rcx, rcx
0x423902:	jne	0x4238bd
0x423904:	jmp	0x423f7d
0x423909:	mov	esi, 1
0x42390e:	mov	rdi, r12
0x423911:	mov	rbp, r13
0x423914:	mov	r13, qword ptr [rsp + 0x18]
0x423919:	call	0x41bef0
0x42391e:	test	eax, eax
0x423920:	je	0x423f93
0x423926:	mov	rbx, qword ptr [rsp + 0xd8]
0x42392e:	mov	r12, qword ptr [rsp + 0xe0]
0x423936:	mov	qword ptr [rsp + 0x140], 0
0x423942:	add	r12, rbx
0x423945:	cmp	r12, rbx
0x423948:	jbe	0x4239aa
0x42394a:	cmp	byte ptr [rbx], 0
0x42394d:	je	0x4239aa
0x42394f:	mov	rsi, r12
0x423952:	mov	rdi, rbx
0x423955:	sub	rsi, rbx
0x423958:	call	0x403ae0
0x42395d:	mov	r9d, 1
0x423963:	lea	rbx, [rbx + rax + 1]
0x423968:	cmp	byte ptr [rbx + r9 - 1], 0
0x42396e:	jns	0x423975
0x423970:	inc	r9
0x423973:	jmp	0x423968
0x423975:	add	rbx, r9
0x423978:	mov	edx, 1
0x42397d:	cmp	byte ptr [rbx + rdx - 1], 0
0x423982:	jns	0x423989
0x423984:	inc	rdx
0x423987:	jmp	0x42397d
0x423989:	add	rbx, rdx
0x42398c:	mov	eax, 1
0x423991:	cmp	byte ptr [rbx + rax - 1], 0
0x423996:	jns	0x42399d
0x423998:	inc	rax
0x42399b:	jmp	0x423991
0x42399d:	inc	qword ptr [rsp + 0x140]
0x4239a5:	add	rbx, rax
0x4239a8:	jmp	0x423945
0x4239aa:	mov	r12, qword ptr [rsp + 0x140]
0x4239b2:	mov	rcx, qword ptr [rsp + 0xf8]
0x4239ba:	mov	rdi, r15
0x4239bd:	mov	rdx, qword ptr [rsp + 0xf0]
0x4239c5:	lea	rsi, [r12 + 1]
0x4239ca:	mov	qword ptr [rsp + 0x140], rsi
0x4239d2:	shl	rsi, 3
0x4239d6:	call	0x41eee1
0x4239db:	mov	qword ptr [rsp + 0x148], rax
0x4239e3:	test	rax, rax
0x4239e6:	je	0x423f93
0x4239ec:	mov	r14, qword ptr [r14 + 0x58]
0x4239f0:	mov	qword ptr [rsp + 0x18], rbp
0x4239f5:	mov	ebx, 8
0x4239fa:	mov	qword ptr [rax], r14
0x4239fd:	mov	r9, qword ptr [rsp + 0xd8]
0x423a05:	mov	r8d, dword ptr [rsp + 0x100]
0x423a0d:	cmp	byte ptr [r9], 0
0x423a11:	je	0x423b2c
0x423a17:	test	r8d, r8d
0x423a1a:	jne	0x423f87
0x423a20:	lea	rdi, [rsp + 0xc8]
0x423a28:	call	0x41de35
0x423a2d:	mov	rbp, rax
0x423a30:	test	rax, rax
0x423a33:	je	0x423f87
0x423a39:	lea	rdi, [rsp + 0xc8]
0x423a41:	call	0x41c109
0x423a46:	cmp	byte ptr [rbp], 0x2f
0x423a4a:	je	0x423a6b
0x423a4c:	cmp	rax, qword ptr [rsp + 0x130]
0x423a54:	jae	0x423aeb
0x423a5a:	mov	r10, qword ptr [rsp + 0x138]
0x423a62:	mov	rcx, qword ptr [r10 + rax*8]
0x423a66:	test	rcx, rcx
0x423a69:	jne	0x423a7c
0x423a6b:	mov	r8, qword ptr [rsp + 0x148]
0x423a73:	mov	qword ptr [r8 + rbx], rbp
0x423a77:	jmp	0x423b09
0x423a7c:	mov	rdi, rcx
0x423a7f:	mov	qword ptr [rsp + 0x38], rcx
0x423a84:	call	0x4039e0
0x423a89:	mov	rdi, rbp
0x423a8c:	mov	r12, rax
0x423a8f:	call	0x4039e0
0x423a94:	mov	rcx, qword ptr [rsp + 0xf8]
0x423a9c:	mov	rdx, qword ptr [rsp + 0xf0]
0x423aa4:	mov	rdi, r15
0x423aa7:	lea	rsi, [r12 + rax + 2]
0x423aac:	mov	r14, rax
0x423aaf:	call	0x41eee1
0x423ab4:	mov	rsi, qword ptr [rsp + 0x38]
0x423ab9:	test	rax, rax
0x423abc:	je	0x423f87
0x423ac2:	mov	r11, qword ptr [rsp + 0x148]
0x423aca:	mov	rdi, rax
0x423acd:	mov	rcx, r12
0x423ad0:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x423ad2:	mov	byte ptr [rax + r12], 0x2f
0x423ad7:	lea	rdi, [rax + r12 + 1]
0x423adc:	mov	rsi, rbp
0x423adf:	lea	rcx, [r14 + 1]
0x423ae3:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x423ae5:	mov	qword ptr [r11 + rbx], rax
0x423ae9:	jmp	0x423b09
0x423aeb:	xor	edx, edx
0x423aed:	mov	esi, 0x4c8e48
0x423af2:	mov	rbp, qword ptr [rsp + 0x18]
0x423af7:	lea	rdi, [rsp + 0xc8]
0x423aff:	call	0x41be97
0x423b04:	jmp	0x423f93
0x423b09:	lea	rdi, [rsp + 0xc8]
0x423b11:	add	rbx, 8
0x423b15:	call	0x41c109
0x423b1a:	lea	rdi, [rsp + 0xc8]
0x423b22:	call	0x41c109
0x423b27:	jmp	0x4239fd
0x423b2c:	mov	rbp, qword ptr [rsp + 0x18]
0x423b31:	cmp	dword ptr [rsp + 0x100], 0
0x423b39:	je	0x423bae
0x423b3b:	jmp	0x423f93
0x423b40:	push	r8
0x423b42:	mov	rcx, r12
0x423b45:	mov	rdx, r14
0x423b48:	mov	rsi, r13
0x423b4b:	lea	rdi, [rsp + 0x140]
0x423b53:	push	rdi
0x423b54:	mov	rdi, r15
0x423b57:	lea	r9, [rsp + 0x140]
0x423b5f:	lea	r8, [rsp + 0x118]
0x423b67:	call	0x41f4bf
0x423b6c:	pop	r9
0x423b6e:	pop	r10
0x423b70:	test	eax, eax
0x423b72:	je	0x423f93
0x423b78:	push	rcx
0x423b79:	mov	rdi, r15
0x423b7c:	mov	rcx, r12
0x423b7f:	mov	rdx, r14
0x423b82:	lea	rsi, [rsp + 0x150]
0x423b8a:	push	rsi
0x423b8b:	mov	rsi, r13
0x423b8e:	lea	r9, [rsp + 0x150]
0x423b96:	lea	r8, [rsp + 0x118]
0x423b9e:	call	0x41f4bf
0x423ba3:	pop	rsi
0x423ba4:	pop	rdi
0x423ba5:	test	eax, eax
0x423ba7:	jne	0x423b31
0x423ba9:	jmp	0x423f93
0x423bae:	cmp	qword ptr [rsp + 0x140], 1
0x423bb7:	ja	0x423bc4
0x423bb9:	mov	qword ptr [rsp + 0x40], 0x4c4893
0x423bc2:	jmp	0x423bd5
0x423bc4:	mov	rcx, qword ptr [rsp + 0x148]
0x423bcc:	mov	rdi, qword ptr [rcx + 8]
0x423bd0:	mov	qword ptr [rsp + 0x40], rdi
0x423bd5:	mov	dword ptr [rsp + 0x18], 0
0x423bdd:	mov	esi, 1
0x423be2:	mov	r12, qword ptr [rsp + 0x40]
0x423be7:	xor	ebx, ebx
0x423be9:	mov	qword ptr [rsp + 0x38], rbp
0x423bee:	mov	ebp, esi
0x423bf0:	cmp	qword ptr [rsp + 0xa0], 0
0x423bf9:	je	0x423fdd
0x423bff:	lea	rdi, [rsp + 0x88]
0x423c07:	call	0x41bf3c
0x423c0c:	mov	edi, dword ptr [rsp + 0x120]
0x423c13:	mov	edx, eax
0x423c15:	movzx	eax, al
0x423c18:	cmp	eax, edi
0x423c1a:	jb	0x423c69
0x423c1c:	sub	eax, edi
0x423c1e:	xor	edx, edx
0x423c20:	mov	r8d, dword ptr [rsp + 0x18]
0x423c25:	mov	r14d, dword ptr [rsp + 0x114]
0x423c2d:	div	dword ptr [rsp + 0x11c]
0x423c34:	add	r8d, eax
0x423c37:	mov	eax, dword ptr [rsp + 0x110]
0x423c3e:	mov	r11d, edx
0x423c41:	xor	edx, edx
0x423c43:	add	r11d, dword ptr [rsp + 0x118]
0x423c4b:	imul	eax, r8d
0x423c4f:	add	ebp, r11d
0x423c52:	div	r14d
0x423c55:	xor	edx, edx
0x423c57:	add	rbx, rax
0x423c5a:	mov	eax, r8d
0x423c5d:	div	r14d
0x423c60:	mov	dword ptr [rsp + 0x18], edx
0x423c64:	jmp	0x423df8
0x423c69:	test	eax, eax
0x423c6b:	jne	0x423de0
0x423c71:	lea	rdi, [rsp + 0x88]
0x423c79:	call	0x41c109
0x423c7e:	lea	rdi, [rsp + 0x88]
0x423c86:	mov	r14, rax
0x423c89:	call	0x41bf3c
0x423c8e:	cmp	al, 3
0x423c90:	je	0x423ccd
0x423c92:	ja	0x423cc0
0x423c94:	cmp	al, 1
0x423c96:	je	0x423f64
0x423c9c:	cmp	al, 2
0x423c9e:	jne	0x423dc2
0x423ca4:	mov	esi, dword ptr [rsp + 0x10c]
0x423cab:	lea	rdi, [rsp + 0x88]
0x423cb3:	call	0x41c03a
0x423cb8:	mov	rbx, rax
0x423cbb:	jmp	0x423bf0
0x423cc0:	cmp	al, 4
0x423cc2:	je	0x423f28
0x423cc8:	jmp	0x423dc2
0x423ccd:	lea	rdi, [rsp + 0x88]
0x423cd5:	call	0x41de35
0x423cda:	mov	r12, rax
0x423cdd:	test	rax, rax
0x423ce0:	je	0x423f8e
0x423ce6:	lea	rdi, [rsp + 0x88]
0x423cee:	call	0x41c109
0x423cf3:	lea	rdi, [rsp + 0x88]
0x423cfb:	mov	r14, rax
0x423cfe:	call	0x41c109
0x423d03:	lea	rdi, [rsp + 0x88]
0x423d0b:	call	0x41c109
0x423d10:	cmp	byte ptr [r12], 0x2f
0x423d15:	je	0x423bf0
0x423d1b:	mov	r10d, r14d
0x423d1e:	cmp	r10, qword ptr [rsp + 0x130]
0x423d26:	jae	0x423da4
0x423d28:	mov	r11, qword ptr [rsp + 0x138]
0x423d30:	mov	r8, qword ptr [r11 + r10*8]
0x423d34:	mov	rdi, r8
0x423d37:	mov	qword ptr [rsp + 0x58], r8
0x423d3c:	call	0x4039e0
0x423d41:	mov	rdi, r12
0x423d44:	mov	r14, rax
0x423d47:	call	0x4039e0
0x423d4c:	mov	rcx, qword ptr [rsp + 0xb8]
0x423d54:	mov	rdx, qword ptr [rsp + 0xb0]
0x423d5c:	mov	rdi, r15
0x423d5f:	lea	rsi, [r14 + rax + 2]
0x423d64:	mov	qword ptr [rsp + 0x50], rax
0x423d69:	call	0x41eee1
0x423d6e:	mov	r10, qword ptr [rsp + 0x50]
0x423d73:	mov	rsi, qword ptr [rsp + 0x58]
0x423d78:	test	rax, rax
0x423d7b:	je	0x423f8e
0x423d81:	mov	rdi, rax
0x423d84:	mov	rcx, r14
0x423d87:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x423d89:	mov	rsi, r12
0x423d8c:	mov	byte ptr [rax + r14], 0x2f
0x423d91:	lea	rdi, [rax + r14 + 1]
0x423d96:	lea	rcx, [r10 + 1]
0x423d9a:	mov	r12, rax
0x423d9d:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x423d9f:	jmp	0x423bf0
0x423da4:	xor	edx, edx
0x423da6:	mov	esi, 0x4c9040
0x423dab:	mov	rbp, qword ptr [rsp + 0x38]
0x423db0:	lea	rdi, [rsp + 0x88]
0x423db8:	call	0x41be97
0x423dbd:	jmp	0x423f93
0x423dc2:	lea	rsi, [r14 - 1]
0x423dc6:	lea	rdi, [rsp + 0x88]
0x423dce:	call	0x41bef0
0x423dd3:	test	eax, eax
0x423dd5:	jne	0x423bf0
0x423ddb:	jmp	0x423f8e
0x423de0:	dec	edx
0x423de2:	cmp	dl, 0xb
0x423de5:	ja	0x423f3a
0x423deb:	movzx	r10d, dl
0x423def:	notrack jmp	qword ptr ds:[r10*8 + 0x4c9628]
0x423df8:	lea	r9, [rsp + 0x68]
0x423dfd:	mov	rdx, rbx
0x423e00:	mov	r8d, ebp
0x423e03:	mov	rcx, r12
0x423e06:	push	r9
0x423e08:	mov	rsi, r13
0x423e0b:	mov	rdi, r15
0x423e0e:	push	qword ptr [rsp + 0xc0]
0x423e15:	mov	r9, qword ptr [rsp + 0xc0]
0x423e1d:	call	0x42c3af
0x423e22:	pop	rax
0x423e23:	pop	rdx
0x423e24:	jmp	0x423bf0
0x423e29:	lea	rdi, [rsp + 0x88]
0x423e31:	call	0x41c109
0x423e36:	mov	ecx, dword ptr [rsp + 0x18]
0x423e3a:	mov	r14d, dword ptr [rsp + 0x114]
0x423e42:	xor	edx, edx
0x423e44:	add	rcx, rax
0x423e47:	mov	eax, dword ptr [rsp + 0x110]
0x423e4e:	imul	rax, rcx
0x423e52:	div	r14
0x423e55:	xor	edx, edx
0x423e57:	add	rbx, rax
0x423e5a:	mov	rax, rcx
0x423e5d:	div	r14
0x423e60:	mov	dword ptr [rsp + 0x18], edx
0x423e64:	jmp	0x423bf0
0x423e69:	lea	rdi, [rsp + 0x88]
0x423e71:	call	0x41c17c
0x423e76:	add	ebp, eax
0x423e78:	jmp	0x423bf0
0x423e7d:	lea	rdi, [rsp + 0x88]
0x423e85:	call	0x41c109
0x423e8a:	cmp	rax, qword ptr [rsp + 0x140]
0x423e92:	jb	0x423eb2
0x423e94:	xor	edx, edx
0x423e96:	mov	esi, 0x4c9070
0x423e9b:	mov	rbp, qword ptr [rsp + 0x38]
0x423ea0:	lea	rdi, [rsp + 0x88]
0x423ea8:	call	0x41be97
0x423ead:	jmp	0x423f93
0x423eb2:	mov	rsi, qword ptr [rsp + 0x148]
0x423eba:	mov	r12, qword ptr [rsi + rax*8]
0x423ebe:	jmp	0x423bf0
0x423ec3:	mov	eax, 0xff
0x423ec8:	xor	edx, edx
0x423eca:	mov	r11d, dword ptr [rsp + 0x18]
0x423ecf:	mov	r8d, dword ptr [rsp + 0x114]
0x423ed7:	sub	eax, edi
0x423ed9:	div	dword ptr [rsp + 0x11c]
0x423ee0:	xor	edx, edx
0x423ee2:	add	r11d, eax
0x423ee5:	mov	eax, dword ptr [rsp + 0x110]
0x423eec:	imul	eax, r11d
0x423ef0:	div	r8d
0x423ef3:	xor	edx, edx
0x423ef5:	add	rbx, rax
0x423ef8:	mov	eax, r11d
0x423efb:	div	r8d
0x423efe:	mov	dword ptr [rsp + 0x18], edx
0x423f02:	jmp	0x423bf0
0x423f07:	lea	rdi, [rsp + 0x88]
0x423f0f:	call	0x41bf59
0x423f14:	mov	dword ptr [rsp + 0x18], 0
0x423f1c:	movzx	r9d, ax
0x423f20:	add	rbx, r9
0x423f23:	jmp	0x423bf0
0x423f28:	lea	rdi, [rsp + 0x88]
0x423f30:	call	0x41c109
0x423f35:	jmp	0x423bf0
0x423f3a:	mov	rdi, qword ptr [rsp + 0x128]
0x423f42:	dec	eax
0x423f44:	movzx	r14d, byte ptr [rdi + rax]
0x423f49:	test	r14d, r14d
0x423f4c:	je	0x423bf0
0x423f52:	lea	rdi, [rsp + 0x88]
0x423f5a:	dec	r14d
0x423f5d:	call	0x41c109
0x423f62:	jmp	0x423f49
0x423f64:	mov	dword ptr [rsp + 0x18], 0
0x423f6c:	mov	r12, qword ptr [rsp + 0x40]
0x423f71:	mov	ebp, 1
0x423f76:	xor	ebx, ebx
0x423f78:	jmp	0x423bf0
0x423f7d:	mov	rbp, r13
0x423f80:	mov	r13, qword ptr [rsp + 0x18]
0x423f85:	jmp	0x423f93
0x423f87:	mov	rbp, qword ptr [rsp + 0x18]
0x423f8c:	jmp	0x423f93
0x423f8e:	mov	rbp, qword ptr [rsp + 0x38]
0x423f93:	mov	rdi, qword ptr [rsp + 0x70]
0x423f98:	lea	rsi, [rsp + 0x68]
0x423f9d:	xor	r14d, r14d
0x423fa0:	xor	r12d, r12d
0x423fa3:	add	qword ptr [rsp + 0x78], rdi
0x423fa8:	mov	rdi, r15
0x423fab:	or	rbx, 0xffffffffffffffff
0x423faf:	mov	qword ptr [rsp + 0x70], 0
0x423fb8:	call	0x42c582
0x423fbd:	lea	rsi, [rsp + 0x108]
0x423fc5:	mov	rdi, r15
0x423fc8:	call	0x42c371
0x423fcd:	xor	eax, eax
0x423fcf:	mov	qword ptr [rsp + 0x18], 0
0x423fd8:	jmp	0x4241a0
0x423fdd:	cmp	dword ptr [rsp + 0xc0], 0
0x423fe5:	mov	rbp, qword ptr [rsp + 0x38]
0x423fea:	jne	0x423f93
0x423fec:	cmp	qword ptr [rsp + 0x80], 0
0x423ff5:	je	0x423f93
0x423ff7:	mov	rcx, qword ptr [rsp + 8]
0x423ffc:	mov	rdx, qword ptr [rsp + 0x30]
0x424001:	lea	r8, [rsp + 0x68]
0x424006:	mov	rdi, r15
0x424009:	mov	esi, 0x18
0x42400e:	call	0x41f7d7
0x424013:	test	rax, rax
0x424016:	je	0x423f93
0x42401c:	mov	qword ptr [rax], 0xffffffffffffffff
0x424023:	lea	rsi, [rsp + 0x68]
0x424028:	mov	rdi, r15
0x42402b:	mov	qword ptr [rax + 8], 0
0x424033:	mov	qword ptr [rax + 0x10], 0
0x42403b:	call	0x42c582
0x424040:	test	eax, eax
0x424042:	je	0x423f93
0x424048:	mov	rbx, qword ptr [rsp + 0x68]
0x42404d:	mov	ecx, 0x41bbe3
0x424052:	mov	edx, 0x18
0x424057:	mov	rsi, qword ptr [rsp + 0x80]
0x42405f:	mov	qword ptr [rsp + 0x38], rbx
0x424064:	mov	rdi, qword ptr [rsp + 0x38]
0x424069:	mov	qword ptr [rsp + 0x18], rsi
0x42406e:	call	0x41bd42
0x424073:	cmp	dword ptr [r15 + 8], 0
0x424078:	mov	r12, qword ptr [rbp + 0x10]
0x42407c:	je	0x424422
0x424082:	lea	r14, [rsp + 0x88]
0x42408a:	mov	ecx, 8
0x42408f:	xor	eax, eax
0x424091:	xor	ebx, ebx
0x424093:	mov	rdi, r14
0x424096:	rep stosd	dword ptr [rdi], eax
0x424098:	mov	r10, qword ptr [r12]
0x42409c:	mov	r11, qword ptr [r12 + 8]
0x4240a1:	mov	qword ptr [rsp + 0xc8], 0x4c91e7
0x4240ad:	mov	rdx, qword ptr [r13 + 0x38]
0x4240b1:	mov	r8d, dword ptr [r13 + 0xc8]
0x4240b8:	mov	dword ptr [rsp + 0x100], 0
0x4240c3:	mov	r9, qword ptr [rsp + 0x30]
0x4240c8:	mov	rsi, qword ptr [rsp + 8]
0x4240cd:	mov	qword ptr [rsp + 0xd8], r10
0x4240d5:	mov	qword ptr [rsp + 0xd0], rdx
0x4240dd:	mov	qword ptr [rsp + 0xe0], r11
0x4240e5:	mov	dword ptr [rsp + 0xe8], r8d
0x4240ed:	mov	qword ptr [rsp + 0xf0], r9
0x4240f5:	mov	qword ptr [rsp + 0xf8], rsi
0x4240fd:	cmp	qword ptr [rsp + 0xe0], 0
0x424106:	jne	0x424431
0x42410c:	cmp	qword ptr [r14 + 0x18], 0
0x424111:	je	0x424492
0x424117:	mov	rcx, qword ptr [rsp + 8]
0x42411c:	mov	rdx, qword ptr [rsp + 0x30]
0x424121:	mov	r8, r14
0x424124:	mov	rdi, r15
0x424127:	mov	esi, 0x18
0x42412c:	call	0x41f7d7
0x424131:	test	rax, rax
0x424134:	je	0x424492
0x42413a:	pcmpeqd	xmm0, xmm0
0x42413e:	mov	qword ptr [rax + 0x10], 0
0x424146:	movups	xmmword ptr [rax], xmm0
0x424149:	mov	r12, qword ptr [r14 + 0x18]
0x42414d:	test	rbx, rbx
0x424150:	jne	0x42446b
0x424156:	lea	rsi, [rsp + 0x88]
0x42415e:	mov	rdi, r15
0x424161:	call	0x42c582
0x424166:	test	eax, eax
0x424168:	je	0x424492
0x42416e:	mov	r14, qword ptr [r14]
0x424171:	mov	ecx, 0x41ddfe
0x424176:	mov	edx, 0x18
0x42417b:	mov	rsi, r12
0x42417e:	mov	rdi, r14
0x424181:	call	0x41bd42
0x424186:	lea	rsi, [rsp + 0x108]
0x42418e:	mov	rdi, r15
0x424191:	call	0x42c371
0x424196:	mov	rbx, qword ptr [rsp + 0x38]
0x42419b:	mov	eax, 1
0x4241a0:	cmp	dword ptr [r15 + 8], 0
0x4241a5:	jne	0x4241cf
0x4241a7:	mov	r10, qword ptr [rsp + 0x10]
0x4241ac:	mov	rcx, qword ptr [rsp + 0x18]
0x4241b1:	mov	qword ptr [r10 + 0x90], r14
0x4241b8:	mov	qword ptr [r10 + 0x88], rcx
0x4241bf:	mov	qword ptr [r10 + 0x98], r12
0x4241c6:	mov	qword ptr [r10 + 0x80], rbx
0x4241cd:	jmp	0x424204
0x4241cf:	mov	rsi, qword ptr [rsp + 0x10]
0x4241d4:	mov	r8, qword ptr [rsp + 0x18]
0x4241d9:	mov	qword ptr [rsi + 0x88], r8
0x4241e0:	mov	rdx, qword ptr [rsp + 0x10]
0x4241e5:	mov	qword ptr [rdx + 0x90], r14
0x4241ec:	mov	r14, qword ptr [rsp + 0x10]
0x4241f1:	mov	qword ptr [r14 + 0x98], r12
0x4241f8:	mov	r9, qword ptr [rsp + 0x10]
0x4241fd:	mov	qword ptr [r9 + 0x80], rbx
0x424204:	cmp	rbx, -1
0x424208:	jne	0x424223
0x42420a:	test	eax, eax
0x42420c:	jne	0x423480
0x424212:	mov	r13, qword ptr [rsp + 0x20]
0x424217:	xor	r8d, r8d
0x42421a:	xor	ecx, ecx
0x42421c:	xor	edx, edx
0x42421e:	jmp	0x42434f
0x424223:	mov	qword ptr [rsp + 0x10], rbp
0x424228:	mov	r13, qword ptr [rsp + 0x20]
0x42422d:	mov	rax, qword ptr [rsp + 0x10]
0x424232:	xor	r11d, r11d
0x424235:	mov	r10, qword ptr [rax + 0x10]
0x424239:	mov	rcx, qword ptr [r10 + 0x88]
0x424240:	cmp	r11, rcx
0x424243:	jae	0x42436f
0x424249:	lea	rax, [r11 + rcx]
0x42424d:	shr	rax, 1
0x424250:	imul	r14, rax, 0x18
0x424254:	add	r14, rbx
0x424257:	cmp	qword ptr [r14], r13
0x42425a:	ja	0x42428b
0x42425c:	cmp	qword ptr [r14 + 0x18], r13
0x424260:	ja	0x424268
0x424262:	lea	r11, [rax + 1]
0x424266:	jmp	0x424240
0x424268:	mov	rsi, qword ptr [r10 + 0x98]
0x42426f:	mov	ecx, dword ptr [r14 + 0x10]
0x424273:	mov	r9, qword ptr [r14 + 8]
0x424277:	test	rsi, rsi
0x42427a:	je	0x424349
0x424280:	mov	r8, qword ptr [r10 + 0x90]
0x424287:	xor	ebx, ebx
0x424289:	jmp	0x4242ae
0x42428b:	mov	rcx, rax
0x42428e:	jmp	0x424240
0x424290:	lea	r12, [rsi + rbx]
0x424294:	shr	r12, 1
0x424297:	imul	rdx, r12, 0x18
0x42429b:	add	rdx, r8
0x42429e:	cmp	qword ptr [rdx], r13
0x4242a1:	ja	0x4242b8
0x4242a3:	cmp	qword ptr [rdx + 0x18], r13
0x4242a7:	jae	0x4242bd
0x4242a9:	lea	rbx, [r12 + 1]
0x4242ae:	cmp	rsi, rbx
0x4242b1:	ja	0x424290
0x4242b3:	jmp	0x424349
0x4242b8:	mov	rsi, r12
0x4242bb:	jmp	0x4242ae
0x4242bd:	cmp	qword ptr [rdx + 0x18], r13
0x4242c1:	jne	0x4242db
0x4242c3:	add	rdx, 0x18
0x4242c7:	jmp	0x4242bd
0x4242c9:	cmp	r8, rdx
0x4242cc:	je	0x424349
0x4242ce:	mov	rdi, qword ptr [rdx]
0x4242d1:	cmp	qword ptr [rdx - 0x18], rdi
0x4242d5:	jb	0x424349
0x4242d7:	sub	rdx, 0x18
0x4242db:	cmp	qword ptr [rdx + 8], r13
0x4242df:	jbe	0x4242c9
0x4242e1:	mov	rbp, qword ptr [rdx + 0x10]
0x4242e5:	mov	dword ptr [rsp + 0xc8], ecx
0x4242ec:	lea	r8, [rsp + 0x108]
0x4242f4:	mov	rdi, r13
0x4242f7:	mov	rcx, qword ptr [rsp + 8]
0x4242fc:	mov	rdx, qword ptr [rsp + 0x28]
0x424301:	mov	qword ptr [rsp + 0x108], r9
0x424309:	lea	r9, [rsp + 0xc8]
0x424311:	mov	rsi, rbp
0x424314:	call	0x41bc70
0x424319:	test	eax, eax
0x42431b:	jne	0x42449d
0x424321:	mov	rsi, r13
0x424324:	mov	r8, qword ptr [rbp]
0x424328:	mov	ecx, dword ptr [rsp + 0xc8]
0x42432f:	mov	rdx, qword ptr [rsp + 0x108]
0x424337:	mov	rdi, qword ptr [rsp + 8]
0x42433c:	mov	r13, qword ptr [rsp + 0x28]
0x424341:	call	r13
0x424344:	jmp	0x42449d
0x424349:	xor	r8d, r8d
0x42434c:	mov	rdx, r9
0x42434f:	mov	rdi, qword ptr [rsp + 8]
0x424354:	mov	rax, qword ptr [rsp + 0x28]
0x424359:	mov	rsi, r13
0x42435c:	add	rsp, 0x158
0x424363:	pop	rbx
0x424364:	pop	rbp
0x424365:	pop	r12
0x424367:	pop	r13
0x424369:	pop	r14
0x42436b:	pop	r15
0x42436d:	jmp	rax
0x42436f:	cmp	qword ptr [r10 + 0x68], 0
0x424374:	jne	0x4243f2
0x424376:	mov	rbp, qword ptr [r10 + 0x58]
0x42437a:	test	rbp, rbp
0x42437d:	je	0x4243e5
0x42437f:	cmp	byte ptr [rbp], 0x2f
0x424383:	je	0x4243e5
0x424385:	mov	r14, qword ptr [r10 + 0x60]
0x424389:	test	r14, r14
0x42438c:	je	0x4243e5
0x42438e:	mov	rdi, rbp
0x424391:	call	0x4039e0
0x424396:	mov	rdi, r14
0x424399:	mov	rbx, rax
0x42439c:	call	0x4039e0
0x4243a1:	mov	rcx, qword ptr [rsp + 8]
0x4243a6:	mov	rdx, qword ptr [rsp + 0x30]
0x4243ab:	mov	rdi, r15
0x4243ae:	lea	rsi, [rbx + rax + 2]
0x4243b3:	mov	r12, rax
0x4243b6:	call	0x41eee1
0x4243bb:	test	rax, rax
0x4243be:	je	0x4234ef
0x4243c4:	mov	rdi, rax
0x4243c7:	mov	rsi, r14
0x4243ca:	mov	rcx, r12
0x4243cd:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x4243cf:	mov	rsi, rbp
0x4243d2:	mov	byte ptr [rax + r12], 0x2f
0x4243d7:	lea	rdi, [rax + r12 + 1]
0x4243dc:	lea	rcx, [rbx + 1]
0x4243e0:	mov	rbp, rax
0x4243e3:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x4243e5:	mov	r15, qword ptr [rsp + 0x10]
0x4243ea:	mov	r8, qword ptr [r15 + 0x10]
0x4243ee:	mov	qword ptr [r8 + 0x68], rbp
0x4243f2:	mov	rdx, qword ptr [rsp + 0x10]
0x4243f7:	xor	r8d, r8d
0x4243fa:	xor	ecx, ecx
0x4243fc:	mov	r9, qword ptr [rdx + 0x10]
0x424400:	mov	rdx, qword ptr [r9 + 0x68]
0x424404:	jmp	0x42434f
0x424409:	mov	qword ptr [rsp + 0x10], rbp
0x42440e:	mov	r13, qword ptr [rsp + 0x20]
0x424413:	cmp	rbx, -1
0x424417:	jne	0x42422d
0x42441d:	jmp	0x424217
0x424422:	lea	r14, [r13 + 0xd0]
0x424429:	mov	rbx, r14
0x42442c:	jmp	0x424098
0x424431:	push	r14
0x424433:	xor	ecx, ecx
0x424435:	mov	rdx, r12
0x424438:	mov	rsi, r13
0x42443b:	push	r14
0x42443d:	mov	rdi, r15
0x424440:	push	qword ptr [rsp + 0x18]
0x424444:	push	qword ptr [rsp + 0x48]
0x424448:	lea	r9, [rsp + 0x128]
0x424450:	lea	r8, [rsp + 0xe8]
0x424458:	call	0x422ea6
0x42445d:	add	rsp, 0x20
0x424461:	test	eax, eax
0x424463:	jne	0x4240fd
0x424469:	jmp	0x424492
0x42446b:	mov	r14, qword ptr [rbx]
0x42446e:	mov	rcx, qword ptr [rbx + 8]
0x424472:	mov	qword ptr [rbx + 8], 0
0x42447a:	add	rcx, r14
0x42447d:	mov	qword ptr [rbx], rcx
0x424480:	test	r14, r14
0x424483:	je	0x424492
0x424485:	mov	qword ptr [rbx + 0x18], 0
0x42448d:	jmp	0x424171
0x424492:	xor	r14d, r14d
0x424495:	xor	r12d, r12d
0x424498:	jmp	0x424186
0x42449d:	add	rsp, 0x158
0x4244a4:	pop	rbx
0x4244a5:	pop	rbp
0x4244a6:	pop	r12
0x4244a8:	pop	r13
0x4244aa:	pop	r14
0x4244ac:	pop	r15
0x4244ae:	ret	
0x4244af:	endbr64	
0x4244b3:	push	r15
0x4244b5:	push	r14
0x4244b7:	mov	r14, rcx
0x4244ba:	push	r13
0x4244bc:	mov	r13, rsi
0x4244bf:	push	r12
0x4244c1:	mov	r12, r8
0x4244c4:	push	rbp
0x4244c5:	mov	rbp, rdx
0x4244c8:	push	rbx
0x4244c9:	mov	rbx, rdi
0x4244cc:	sub	rsp, 0x28
0x4244d0:	cmp	dword ptr [rdi + 8], 0
0x4244d4:	jne	0x42451d
0x4244d6:	mov	rsi, qword ptr [rdi + 0x20]
0x4244da:	lea	r15, [rsp + 0x1c]
0x4244df:	test	rsi, rsi
0x4244e2:	je	0x42455e
0x4244e4:	push	rdi
0x4244e5:	mov	r9, r12
0x4244e8:	mov	r8, r14
0x4244eb:	mov	rcx, rbp
0x4244ee:	push	r15
0x4244f0:	mov	rdx, r13
0x4244f3:	mov	rdi, rbx
0x4244f6:	mov	qword ptr [rsp + 0x18], rsi
0x4244fb:	call	0x423448
0x424500:	pop	r8
0x424502:	pop	r9
0x424504:	test	eax, eax
0x424506:	jne	0x42457e
0x424508:	cmp	dword ptr [rsp + 0x1c], 0
0x42450d:	mov	rdx, qword ptr [rsp + 8]
0x424512:	je	0x424518
0x424514:	xor	eax, eax
0x424516:	jmp	0x42457e
0x424518:	mov	rsi, qword ptr [rdx]
0x42451b:	jmp	0x4244df
0x42451d:	lea	rsi, [rdi + 0x20]
0x424521:	lea	r15, [rsp + 0x1c]
0x424526:	mov	rsi, qword ptr [rsi]
0x424529:	test	rsi, rsi
0x42452c:	je	0x42455e
0x42452e:	push	rax
0x42452f:	mov	rcx, rbp
0x424532:	mov	rdx, r13
0x424535:	mov	r9, r12
0x424538:	push	r15
0x42453a:	mov	r8, r14
0x42453d:	mov	rdi, rbx
0x424540:	mov	qword ptr [rsp + 0x18], rsi
0x424545:	call	0x423448
0x42454a:	pop	rdx
0x42454b:	pop	rcx
0x42454c:	test	eax, eax
0x42454e:	jne	0x42457e
0x424550:	cmp	dword ptr [rsp + 0x1c], 0
0x424555:	jne	0x424514
0x424557:	mov	rsi, qword ptr [rsp + 8]
0x42455c:	jmp	0x424526
0x42455e:	add	rsp, 0x28
0x424562:	mov	rsi, r13
0x424565:	mov	rdi, r12
0x424568:	mov	rax, rbp
0x42456b:	pop	rbx
0x42456c:	xor	r8d, r8d
0x42456f:	pop	rbp
0x424570:	xor	ecx, ecx
0x424572:	pop	r12
0x424574:	xor	edx, edx
0x424576:	pop	r13
0x424578:	pop	r14
0x42457a:	pop	r15
0x42457c:	jmp	rax
0x42457e:	add	rsp, 0x28
0x424582:	pop	rbx
0x424583:	pop	rbp
0x424584:	pop	r12
0x424586:	pop	r13
0x424588:	pop	r14
0x42458a:	pop	r15
0x42458c:	ret	
0x42458d:	endbr64	
0x424591:	mov	r11, rdx
0x424594:	mov	rdx, qword ptr [rsi]
0x424597:	mov	eax, edi
0x424599:	mov	rdi, rsi
0x42459c:	cmp	rdx, r11
0x42459f:	je	0x4245d8
0x4245a1:	and	r8d, 0x10000
0x4245a8:	mov	rsi, rcx
0x4245ab:	lea	rcx, [rdx + 1]
0x4245af:	neg	r8
0x4245b2:	mov	qword ptr [rdi], rcx
0x4245b5:	movzx	edi, byte ptr [rdx]
0x4245b8:	sbb	r10d, r10d
0x4245bb:	and	r10d, 0xb
0x4245bf:	test	rsi, rsi
0x4245c2:	je	0x4245d3
0x4245c4:	movzx	r8d, al
0x4245c8:	movzx	edi, byte ptr [rsi + rdi]
0x4245cc:	movsx	eax, byte ptr [rsi + r8]
0x4245d1:	jmp	0x4245e0
0x4245d3:	movsx	eax, al
0x4245d6:	jmp	0x4245e0
0x4245d8:	mov	r10d, 0xb
0x4245de:	jmp	0x4245f0
0x4245e0:	mov	r8d, eax
0x4245e3:	mov	r11d, 1
0x4245e9:	add	r8, rsi
0x4245ec:	cmp	eax, edi
0x4245ee:	jbe	0x4245f4
0x4245f0:	mov	eax, r10d
0x4245f3:	ret	
0x4245f4:	push	rbx
0x4245f5:	test	rsi, rsi
0x4245f8:	je	0x424606
0x4245fa:	movzx	ecx, byte ptr [r8]
0x4245fe:	sar	ecx, 3
0x424601:	movsxd	rdx, ecx
0x424604:	jmp	0x42460e
0x424606:	mov	ebx, eax
0x424608:	sar	ebx, 3
0x42460b:	movsxd	rdx, ebx
0x42460e:	add	rdx, r9
0x424611:	mov	r10b, byte ptr [rdx]
0x424614:	test	rsi, rsi
0x424617:	je	0x424626
0x424619:	mov	cl, byte ptr [r8]
0x42461c:	mov	ebx, r11d
0x42461f:	and	ecx, 7
0x424622:	shl	ebx, cl
0x424624:	jmp	0x424630
0x424626:	mov	ecx, eax
0x424628:	mov	ebx, r11d
0x42462b:	and	ecx, 7
0x42462e:	shl	ebx, cl
0x424630:	or	ebx, r10d
0x424633:	inc	eax
0x424635:	inc	r8
0x424638:	mov	byte ptr [rdx], bl
0x42463a:	xor	edx, edx
0x42463c:	cmp	eax, edi
0x42463e:	jbe	0x4245f5
0x424640:	mov	eax, edx
0x424642:	pop	rbx
0x424643:	ret	
0x424644:	endbr64	
0x424648:	push	rbp
0x424649:	mov	r8, rdi
0x42464c:	mov	rbp, rsp
0x42464f:	push	r15
0x424651:	push	r14
0x424653:	push	r13
0x424655:	push	r12
0x424657:	push	rbx
0x424658:	sub	rsp, 0x18
0x42465c:	mov	rdx, qword ptr [rdi]
0x42465f:	mov	r15, qword ptr [rdi + 0x10]
0x424663:	mov	r11, qword ptr [rdi + 0x20]
0x424667:	mov	rax, rsp
0x42466a:	add	r15, rdx
0x42466d:	cmp	rsp, rax
0x424670:	je	0x424684
0x424672:	sub	rsp, 0x1000
0x424679:	or	qword ptr [rsp + 0xff8], 0
0x424682:	jmp	0x42466d
0x424684:	sub	rsp, 0x30
0x424688:	or	qword ptr [rsp + 0x28], 0
0x42468e:	mov	ecx, 0x40
0x424693:	xor	eax, eax
0x424695:	xor	r10d, r10d
0x424698:	mov	r9b, 1
0x42469b:	mov	rdi, r11
0x42469e:	lea	r14, [rsp + 0xf]
0x4246a3:	rep stosd	dword ptr [rdi], eax
0x4246a5:	and	r14, 0xfffffffffffffff0
0x4246a9:	mov	bl, byte ptr [r8 + 0x38]
0x4246ad:	and	ebx, 0xfffffff6
0x4246b0:	or	ebx, 8
0x4246b3:	mov	byte ptr [r8 + 0x38], bl
0x4246b7:	mov	ebx, 5
0x4246bc:	cmp	rdx, r15
0x4246bf:	je	0x4246ca
0x4246c1:	movzx	esi, byte ptr [rdx]
0x4246c4:	cmp	sil, 1
0x4246c8:	jne	0x4246fc
0x4246ca:	mov	dl, byte ptr [r8 + 0x38]
0x4246ce:	mov	ecx, edx
0x4246d0:	and	edx, 0xfffffffe
0x4246d3:	and	ecx, 1
0x4246d6:	or	r9d, ecx
0x4246d9:	or	edx, r9d
0x4246dc:	mov	byte ptr [r8 + 0x38], dl
0x4246e0:	test	r10d, r10d
0x4246e3:	je	0x4249af
0x4246e9:	lea	r13d, [r10 - 1]
0x4246ed:	mov	r9b, 1
0x4246f0:	mov	rax, qword ptr [r14 + r13*8]
0x4246f4:	mov	r10, r13
0x4246f7:	mov	rdx, rax
0x4246fa:	jmp	0x4246bc
0x4246fc:	cmp	sil, 0x1d
0x424700:	ja	0x4249aa
0x424706:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c9688]
0x42470e:	lea	rax, [rdx + 1]
0x424712:	jmp	0x4246f7
0x424714:	or	byte ptr [r8 + 0x38], 1
0x424719:	xor	eax, eax
0x42471b:	jmp	0x4249b8
0x424720:	movzx	r12d, byte ptr [rdx + 2]
0x424725:	mov	rax, r15
0x424728:	xor	r9d, r9d
0x42472b:	mov	byte ptr [r11 + r12], 1
0x424730:	jmp	0x4246f7
0x424732:	movzx	edi, byte ptr [rdx + 1]
0x424736:	lea	eax, [rdi*8 - 1]
0x42473d:	cdqe	
0x42473f:	cmp	eax, -1
0x424742:	je	0x424848
0x424748:	mov	r13d, eax
0x42474b:	mov	ecx, eax
0x42474d:	sar	r13d, 3
0x424751:	and	ecx, 7
0x424754:	add	r13d, 2
0x424758:	movsxd	r9, r13d
0x42475b:	movzx	esi, byte ptr [rdx + r9]
0x424760:	bt	esi, ecx
0x424763:	jae	0x42476a
0x424765:	mov	byte ptr [r11 + rax], 1
0x42476a:	dec	rax
0x42476d:	jmp	0x42473f
0x42476f:	movzx	r9d, byte ptr [rdx + 1]
0x424774:	mov	ecx, 0x100
0x424779:	xor	esi, esi
0x42477b:	mov	al, 1
0x42477d:	shl	r9d, 3
0x424781:	sub	ecx, r9d
0x424784:	cmp	r9d, 0x100
0x42478b:	movsxd	r12, r9d
0x42478e:	cmovg	rcx, rsi
0x424792:	lea	rdi, [r11 + r12]
0x424796:	rep stosb	byte ptr [rdi], al
0x424798:	movzx	r13d, byte ptr [rdx + 1]
0x42479d:	lea	eax, [r13*8 - 1]
0x4247a5:	cdqe	
0x4247a7:	cmp	eax, -1
0x4247aa:	je	0x424848
0x4247b0:	mov	r9d, eax
0x4247b3:	mov	r12d, eax
0x4247b6:	sar	r9d, 3
0x4247ba:	and	r12d, 7
0x4247be:	add	r9d, 2
0x4247c2:	movsxd	rcx, r9d
0x4247c5:	movzx	esi, byte ptr [rdx + rcx]
0x4247c9:	bt	esi, r12d
0x4247cd:	jb	0x4247d4
0x4247cf:	mov	byte ptr [r11 + rax], 1
0x4247d4:	dec	rax
0x4247d7:	jmp	0x4247a7
0x4247d9:	xor	r9d, r9d
0x4247dc:	cmp	byte ptr [r9 + 0x4e63c0], 1
0x4247e4:	jne	0x4247eb
0x4247e6:	mov	byte ptr [r11 + r9], 1
0x4247eb:	inc	r9
0x4247ee:	cmp	r9, 0x100
0x4247f5:	jne	0x4247dc
0x4247f7:	jmp	0x424848
0x4247f9:	xor	edx, edx
0x4247fb:	cmp	byte ptr [rdx + 0x4e63c0], 1
0x424802:	je	0x424809
0x424804:	mov	byte ptr [r11 + rdx], 1
0x424809:	inc	rdx
0x42480c:	cmp	rdx, 0x100
0x424813:	jne	0x4247fb
0x424815:	jmp	0x424848
0x424817:	mov	ecx, 0x100
0x42481c:	mov	rdi, r11
0x42481f:	mov	al, 1
0x424821:	mov	dl, byte ptr [r11 + 0xa]
0x424825:	rep stosb	byte ptr [rdi], al
0x424827:	test	byte ptr [r8 + 0x18], 0x40
0x42482c:	jne	0x42483d
0x42482e:	mov	byte ptr [r11 + 0xa], dl
0x424832:	mov	rax, r15
0x424835:	xor	r9d, r9d
0x424838:	jmp	0x4246f7
0x42483d:	test	byte ptr [r8 + 0x38], 1
0x424842:	jne	0x4249af
0x424848:	mov	rax, r15
0x42484b:	xor	r9d, r9d
0x42484e:	jmp	0x4246f7
0x424853:	movsx	r13d, byte ptr [rdx + 2]
0x424858:	movzx	eax, byte ptr [rdx + 1]
0x42485c:	shl	r13d, 8
0x424860:	add	r13d, eax
0x424863:	movsxd	rdi, r13d
0x424866:	lea	rax, [rdx + rdi + 3]
0x42486b:	test	r13d, r13d
0x42486e:	jg	0x4246f7
0x424874:	mov	dl, byte ptr [rax]
0x424876:	cmp	dl, 0xf
0x424879:	je	0x424884
0x42487b:	cmp	dl, 0x15
0x42487e:	jne	0x4246f7
0x424884:	movsx	esi, byte ptr [rax + 2]
0x424888:	movzx	r12d, byte ptr [rax + 1]
0x42488d:	shl	esi, 8
0x424890:	add	esi, r12d
0x424893:	movsxd	rcx, esi
0x424896:	lea	rax, [rax + rcx + 3]
0x42489b:	test	r10d, r10d
0x42489e:	je	0x4246f7
0x4248a4:	lea	r13d, [r10 - 1]
0x4248a8:	cmp	qword ptr [r14 + r13*8], rax
0x4248ac:	cmove	r10d, r13d
0x4248b0:	jmp	0x4246f7
0x4248b5:	xor	r13d, r13d
0x4248b8:	movsx	edi, byte ptr [rdx + 2]
0x4248bc:	movzx	esi, byte ptr [rdx + 1]
0x4248c0:	lea	rax, [rdx + 3]
0x4248c4:	shl	edi, 8
0x4248c7:	add	edi, esi
0x4248c9:	movsxd	r12, edi
0x4248cc:	lea	rcx, [rax + r12]
0x4248d0:	mov	qword ptr [rbp - 0x38], rcx
0x4248d4:	cmp	rcx, r15
0x4248d7:	jae	0x42496f
0x4248dd:	cmp	ebx, r10d
0x4248e0:	jne	0x42495f
0x4248e2:	cmp	ebx, 0x128e0
0x4248e8:	ja	0x4249b3
0x4248ee:	lea	edi, [rbx + rbx]
0x4248f1:	lea	r12, [rdi*8 + 0x17]
0x4248f9:	mov	dword ptr [rbp - 0x3c], edi
0x4248fc:	mov	rdi, rsp
0x4248ff:	shr	r12, 4
0x424903:	shl	r12, 4
0x424907:	mov	rcx, r12
0x42490a:	and	rcx, 0xfffffffffffff000
0x424911:	sub	rdi, rcx
0x424914:	cmp	rsp, rdi
0x424917:	je	0x42492b
0x424919:	sub	rsp, 0x1000
0x424920:	or	qword ptr [rsp + 0xff8], 0
0x424929:	jmp	0x424914
0x42492b:	and	r12d, 0xfff
0x424932:	sub	rsp, r12
0x424935:	test	r12, r12
0x424938:	je	0x424940
0x42493a:	or	qword ptr [rsp + r12 - 8], 0
0x424940:	lea	r12, [rsp + 0xf]
0x424945:	mov	ebx, ebx
0x424947:	mov	rsi, r14
0x42494a:	and	r12, 0xfffffffffffffff0
0x42494e:	shl	rbx, 3
0x424952:	mov	ecx, ebx
0x424954:	mov	rdi, r12
0x424957:	mov	ebx, dword ptr [rbp - 0x3c]
0x42495a:	mov	r14, r12
0x42495d:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42495f:	mov	rcx, qword ptr [rbp - 0x38]
0x424963:	mov	r12d, r10d
0x424966:	inc	r10d
0x424969:	mov	qword ptr [r14 + r12*8], rcx
0x42496d:	jmp	0x424974
0x42496f:	or	byte ptr [r8 + 0x38], 1
0x424974:	test	r13b, r13b
0x424977:	je	0x4246f7
0x42497d:	jmp	0x424998
0x42497f:	movsx	r12d, byte ptr [rdx + 4]
0x424984:	movzx	ecx, byte ptr [rdx + 3]
0x424988:	mov	r13b, 1
0x42498b:	shl	r12d, 8
0x42498f:	add	r12d, ecx
0x424992:	je	0x4248b8
0x424998:	lea	rax, [rdx + 5]
0x42499c:	jmp	0x4246f7
0x4249a1:	lea	rax, [rdx + 3]
0x4249a5:	jmp	0x4246f7
0x4249aa:	call	0x403880
0x4249af:	xor	eax, eax
0x4249b1:	jmp	0x4249b8
0x4249b3:	mov	eax, 0xfffffffe
0x4249b8:	lea	rsp, [rbp - 0x28]
0x4249bc:	pop	rbx
0x4249bd:	pop	r12
0x4249bf:	pop	r13
0x4249c1:	pop	r14
0x4249c3:	pop	r15
0x4249c5:	pop	rbp
0x4249c6:	ret	
0x4249c7:	endbr64	
0x4249cb:	push	r14
0x4249cd:	push	r13
0x4249cf:	mov	r13, rdx
0x4249d2:	push	r12
0x4249d4:	mov	r12, rsi
0x4249d7:	push	rbp
0x4249d8:	mov	rbp, rdi
0x4249db:	push	rbx
0x4249dc:	sub	rsp, 0x10
0x4249e0:	mov	rax, qword ptr [rdi]
0x4249e3:	add	rax, 2
0x4249e7:	mov	qword ptr [rsp + 8], rax
0x4249ec:	mov	rdx, qword ptr [rsp + 8]
0x4249f1:	cmp	rdx, r12
0x4249f4:	jae	0x424a46
0x4249f6:	mov	cl, byte ptr [rdx]
0x4249f8:	cmp	cl, 7
0x4249fb:	je	0x424ab7
0x424a01:	cmp	cl, 0xf
0x424a04:	jne	0x424ac3
0x424a0a:	movsx	r8d, byte ptr [rdx + 2]
0x424a0f:	movzx	ebx, byte ptr [rdx + 1]
0x424a13:	add	rdx, 3
0x424a17:	mov	qword ptr [rsp + 8], rdx
0x424a1c:	shl	r8d, 8
0x424a20:	add	r8d, ebx
0x424a23:	js	0x4249ec
0x424a25:	mov	r14, qword ptr [rsp + 8]
0x424a2a:	movsxd	rbx, r8d
0x424a2d:	lea	rsi, [r14 + rbx - 3]
0x424a32:	cmp	byte ptr [rsi], 0xe
0x424a35:	jne	0x424a83
0x424a37:	mov	rdx, r13
0x424a3a:	mov	rdi, r14
0x424a3d:	call	0x424be8
0x424a42:	test	al, al
0x424a44:	jne	0x424a4d
0x424a46:	xor	eax, eax
0x424a48:	jmp	0x424ae0
0x424a4d:	lea	rdi, [r14 + rbx]
0x424a51:	cmp	byte ptr [rdi], 0xf
0x424a54:	mov	qword ptr [rsp + 8], rdi
0x424a59:	jne	0x424a83
0x424a5b:	movsx	r8d, byte ptr [rdi + 2]
0x424a60:	movzx	esi, byte ptr [rdi + 1]
0x424a64:	lea	r9, [rdi + 3]
0x424a68:	mov	qword ptr [rsp + 8], r9
0x424a6d:	shl	r8d, 8
0x424a71:	add	r8d, esi
0x424a74:	movsxd	r10, r8d
0x424a77:	cmp	byte ptr [rdi + r10], 0xe
0x424a7c:	je	0x424a25
0x424a7e:	mov	qword ptr [rsp + 8], rdi
0x424a83:	mov	rdi, qword ptr [rsp + 8]
0x424a88:	mov	rdx, r13
0x424a8b:	movsx	r11d, byte ptr [rdi - 1]
0x424a90:	movzx	eax, byte ptr [rdi - 2]
0x424a94:	shl	r11d, 8
0x424a98:	add	r11d, eax
0x424a9b:	movsxd	r14, r11d
0x424a9e:	add	r14, rdi
0x424aa1:	mov	rsi, r14
0x424aa4:	call	0x424be8
0x424aa9:	test	al, al
0x424aab:	je	0x424a46
0x424aad:	mov	qword ptr [rsp + 8], r14
0x424ab2:	jmp	0x4249ec
0x424ab7:	add	rdx, 2
0x424abb:	mov	al, 1
0x424abd:	mov	qword ptr [rbp], rdx
0x424ac1:	jmp	0x424ae0
0x424ac3:	mov	rdx, r13
0x424ac6:	mov	rsi, r12
0x424ac9:	lea	rdi, [rsp + 8]
0x424ace:	call	0x424aed
0x424ad3:	test	al, al
0x424ad5:	jne	0x4249ec
0x424adb:	jmp	0x424a46
0x424ae0:	add	rsp, 0x10
0x424ae4:	pop	rbx
0x424ae5:	pop	rbp
0x424ae6:	pop	r12
0x424ae8:	pop	r13
0x424aea:	pop	r14
0x424aec:	ret	
0x424aed:	push	r12
0x424aef:	push	rbp
0x424af0:	mov	rbp, rdx
0x424af3:	push	rbx
0x424af4:	mov	rbx, rdi
0x424af7:	sub	rsp, 0x10
0x424afb:	mov	rax, qword ptr [rdi]
0x424afe:	lea	rdi, [rax + 1]
0x424b02:	mov	qword ptr [rsp + 8], rdi
0x424b07:	mov	dl, byte ptr [rax]
0x424b09:	test	dl, dl
0x424b0b:	je	0x424bcc
0x424b11:	sub	edx, 6
0x424b14:	xor	r9d, r9d
0x424b17:	cmp	dl, 0x17
0x424b1a:	ja	0x424bdc
0x424b20:	movzx	ecx, dl
0x424b23:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c9778]
0x424b2b:	movzx	r12d, byte ptr [rax + 1]
0x424b30:	mov	rdx, rbp
0x424b33:	lea	rdi, [rsp + 8]
0x424b38:	call	0x4249c7
0x424b3d:	lea	rcx, [rbp + r12*8]
0x424b42:	mov	bpl, byte ptr [rcx]
0x424b45:	mov	esi, ebp
0x424b47:	and	esi, 3
0x424b4a:	cmp	sil, 3
0x424b4e:	jne	0x424b5d
0x424b50:	mov	edi, eax
0x424b52:	and	ebp, 0xfffffffc
0x424b55:	and	edi, 3
0x424b58:	or	ebp, edi
0x424b5a:	mov	byte ptr [rcx], bpl
0x424b5d:	test	al, al
0x424b5f:	jne	0x424bcc
0x424b61:	jmp	0x424bd9
0x424b63:	movsx	r11d, byte ptr [rax + 2]
0x424b68:	movzx	r12d, byte ptr [rax + 1]
0x424b6d:	shl	r11d, 8
0x424b71:	add	r11d, r12d
0x424b74:	js	0x424bd9
0x424b76:	movsxd	rbp, r11d
0x424b79:	lea	rdi, [rax + rbp + 3]
0x424b7e:	mov	qword ptr [rsp + 8], rdi
0x424b83:	jmp	0x424bcc
0x424b85:	lea	r8, [rax + 3]
0x424b89:	mov	qword ptr [rsp + 8], r8
0x424b8e:	movsx	r9d, byte ptr [rax + 4]
0x424b93:	movzx	esi, byte ptr [rax + 3]
0x424b97:	shl	r9d, 8
0x424b9b:	add	r9d, esi
0x424b9e:	jne	0x424bd9
0x424ba0:	mov	qword ptr [rsp + 8], rdi
0x424ba5:	movsx	r10d, byte ptr [rax + 2]
0x424baa:	movzx	eax, byte ptr [rax + 1]
0x424bae:	shl	r10d, 8
0x424bb2:	add	eax, r10d
0x424bb5:	cdqe	
0x424bb7:	add	r8, rax
0x424bba:	mov	qword ptr [rsp + 8], r8
0x424bbf:	jmp	0x424bcc
0x424bc1:	movzx	edx, byte ptr [rax + 1]
0x424bc5:	test	byte ptr [rbp + rdx*8], 3
0x424bca:	je	0x424bd9
0x424bcc:	mov	r8, qword ptr [rsp + 8]
0x424bd1:	mov	r9b, 1
0x424bd4:	mov	qword ptr [rbx], r8
0x424bd7:	jmp	0x424bdc
0x424bd9:	xor	r9d, r9d
0x424bdc:	add	rsp, 0x10
0x424be0:	mov	eax, r9d
0x424be3:	pop	rbx
0x424be4:	pop	rbp
0x424be5:	pop	r12
0x424be7:	ret	
0x424be8:	push	rbp
0x424be9:	mov	rbp, rdx
0x424bec:	push	rbx
0x424bed:	mov	rbx, rsi
0x424bf0:	sub	rsp, 0x18
0x424bf4:	mov	qword ptr [rsp + 8], rdi
0x424bf9:	mov	rcx, qword ptr [rsp + 8]
0x424bfe:	cmp	rcx, rbx
0x424c01:	jae	0x424c39
0x424c03:	cmp	byte ptr [rcx], 0xf
0x424c06:	jne	0x424c23
0x424c08:	movsx	eax, byte ptr [rcx + 2]
0x424c0c:	movzx	edx, byte ptr [rcx + 1]
0x424c10:	shl	eax, 8
0x424c13:	add	eax, edx
0x424c15:	cdqe	
0x424c17:	lea	rsi, [rcx + rax + 3]
0x424c1c:	mov	qword ptr [rsp + 8], rsi
0x424c21:	jmp	0x424bf9
0x424c23:	mov	rdx, rbp
0x424c26:	mov	rsi, rbx
0x424c29:	lea	rdi, [rsp + 8]
0x424c2e:	call	0x424aed
0x424c33:	test	al, al
0x424c35:	jne	0x424bf9
0x424c37:	jmp	0x424c3b
0x424c39:	mov	al, 1
0x424c3b:	add	rsp, 0x18
0x424c3f:	pop	rbx
0x424c40:	pop	rbp
0x424c41:	ret	
0x424c42:	endbr64	
0x424c46:	push	r12
0x424c48:	push	rbp
0x424c49:	push	rbx
0x424c4a:	mov	rbx, rdi
0x424c4d:	mov	edi, 0x48
0x424c52:	call	0x440420
0x424c57:	mov	esi, 0x150
0x424c5c:	mov	edi, 1
0x424c61:	mov	qword ptr [rax], 0x4be160
0x424c68:	mov	r12, rax
0x424c6b:	call	0x42d6b0
0x424c70:	mov	rdi, rax
0x424c73:	mov	rbp, rax
0x424c76:	call	0x4323a0
0x424c7b:	mov	rsi, qword ptr [rbx + 0x40]
0x424c7f:	mov	eax, dword ptr [rbx + 0x18]
0x424c82:	mov	rdi, r12
0x424c85:	movq	xmm0, qword ptr [rbx + 0x1c]
0x424c8a:	mov	rdx, qword ptr [rbx + 0x24]
0x424c8e:	mov	qword ptr [r12 + 8], rbp
0x424c93:	mov	rcx, qword ptr [rbx + 0x30]
0x424c97:	mov	qword ptr [r12 + 0x40], rsi
0x424c9c:	xor	esi, esi
0x424c9e:	mov	qword ptr [r12 + 0x24], rdx
0x424ca3:	mov	qword ptr [r12 + 0x10], 0
0x424cac:	mov	dword ptr [r12 + 0x18], eax
0x424cb1:	mov	qword ptr [r12 + 0x30], rcx
0x424cb6:	mov	qword ptr [r12 + 0x38], 0
0x424cbf:	movq	qword ptr [r12 + 0x1c], xmm0
0x424cc6:	movd	dword ptr [r12 + 0x28], xmm0
0x424ccd:	call	0x4325a0
0x424cd2:	mov	rdi, qword ptr [rbx + 0x38]
0x424cd6:	test	rdi, rdi
0x424cd9:	je	0x424ce6
0x424cdb:	mov	rbx, qword ptr [rdi]
0x424cde:	call	qword ptr [rbx + 0x10]
0x424ce1:	mov	qword ptr [r12 + 0x38], rax
0x424ce6:	mov	rax, r12
0x424ce9:	pop	rbx
0x424cea:	pop	rbp
0x424ceb:	pop	r12
0x424ced:	ret	
0x424cee:	mov	rax, rdx
0x424cf1:	movq	xmm1, rcx
0x424cf6:	mov	rdx, rcx
0x424cf9:	movq	xmm0, rax
0x424cfe:	punpcklqdq	xmm0, xmm1
0x424d02:	cmp	esi, 0x31
0x424d05:	ja	0x424d5c
0x424d07:	cmp	esi, 0x28
0x424d0a:	ja	0x424d28
0x424d0c:	mov	r10d, 1
0x424d12:	mov	ecx, esi
0x424d14:	movabs	r8, 0x17c00fff600
0x424d1e:	shl	r10, cl
0x424d21:	test	r10, r8
0x424d24:	jne	0x424d96
0x424d26:	jmp	0x424d3f
0x424d28:	lea	r9d, [rsi - 0x29]
0x424d2c:	cmp	r9d, 8
0x424d30:	ja	0x424dcc
0x424d36:	notrack jmp	qword ptr ds:[r9*8 + 0x4c9d80]
0x424d3f:	movabs	r9, 0x1fe000000
0x424d49:	test	r10, r9
0x424d4c:	jne	0x424da3
0x424d4e:	add	r9, 0x200081e
0x424d55:	test	r10, r9
0x424d58:	jne	0x424d8a
0x424d5a:	jmp	0x424dcc
0x424d5c:	lea	ecx, [rsi - 0x34]
0x424d5f:	cmp	ecx, 0x1d
0x424d62:	ja	0x424dcc
0x424d64:	mov	r8d, 1
0x424d6a:	shl	r8, cl
0x424d6d:	test	r8d, 0x1c71107
0x424d74:	jne	0x424d96
0x424d76:	test	r8d, 0xa002ef8
0x424d7d:	jne	0x424d8a
0x424d7f:	test	r8d, 0x34000000
0x424d86:	je	0x424dcc
0x424d88:	jmp	0x424da3
0x424d8a:	test	rax, rax
0x424d8d:	je	0x424dcc
0x424d8f:	test	rdx, rdx
0x424d92:	jne	0x424da3
0x424d94:	jmp	0x424dcc
0x424d96:	test	rax, rax
0x424d99:	jne	0x424da3
0x424d9b:	ret	
0x424d9c:	xor	eax, eax
0x424d9e:	test	rcx, rcx
0x424da1:	je	0x424dce
0x424da3:	mov	edx, dword ptr [rdi + 0x28]
0x424da6:	xor	eax, eax
0x424da8:	cmp	edx, dword ptr [rdi + 0x2c]
0x424dab:	jge	0x424dce
0x424dad:	movsxd	rax, edx
0x424db0:	inc	edx
0x424db2:	shl	rax, 5
0x424db6:	add	rax, qword ptr [rdi + 0x20]
0x424dba:	mov	qword ptr [rax + 4], 0
0x424dc2:	mov	dword ptr [rdi + 0x28], edx
0x424dc5:	mov	dword ptr [rax], esi
0x424dc7:	movups	xmmword ptr [rax + 0x10], xmm0
0x424dcb:	ret	
0x424dcc:	xor	eax, eax
0x424dce:	ret	
0x424dcf:	mov	ecx, dword ptr [rdi + 0x28]
0x424dd2:	cmp	ecx, dword ptr [rdi + 0x2c]
0x424dd5:	jl	0x424dda
0x424dd7:	xor	eax, eax
0x424dd9:	ret	
0x424dda:	movsxd	rax, ecx
0x424ddd:	inc	ecx
0x424ddf:	shl	rax, 5
0x424de3:	add	rax, qword ptr [rdi + 0x20]
0x424de7:	mov	qword ptr [rax + 4], 0
0x424def:	mov	dword ptr [rdi + 0x28], ecx
0x424df2:	test	rsi, rsi
0x424df5:	je	0x424dd7
0x424df7:	test	edx, edx
0x424df9:	jle	0x424dd7
0x424dfb:	mov	qword ptr [rax + 4], 0
0x424e03:	mov	dword ptr [rax], 0
0x424e09:	mov	qword ptr [rax + 0x10], rsi
0x424e0d:	mov	dword ptr [rax + 0x18], edx
0x424e10:	ret	
0x424e11:	mov	edx, dword ptr [rdi + 0x28]
0x424e14:	xor	eax, eax
0x424e16:	cmp	edx, dword ptr [rdi + 0x2c]
0x424e19:	jge	0x424e3d
0x424e1b:	movsxd	rax, edx
0x424e1e:	inc	edx
0x424e20:	shl	rax, 5
0x424e24:	add	rax, qword ptr [rdi + 0x20]
0x424e28:	mov	qword ptr [rax + 4], 0
0x424e30:	mov	dword ptr [rdi + 0x28], edx
0x424e33:	mov	dword ptr [rax], 0x27
0x424e39:	mov	qword ptr [rax + 0x10], rsi
0x424e3d:	ret	
0x424e3e:	mov	rdx, qword ptr [rdi + 0x18]
0x424e42:	mov	rsi, rdi
0x424e45:	xor	edi, edi
0x424e47:	mov	al, byte ptr [rdx]
0x424e49:	cmp	al, 0x6e
0x424e4b:	jne	0x424e5d
0x424e4d:	lea	rax, [rdx + 1]
0x424e51:	mov	edi, 1
0x424e56:	mov	qword ptr [rsi + 0x18], rax
0x424e5a:	mov	al, byte ptr [rdx + 1]
0x424e5d:	xor	r8d, r8d
0x424e60:	mov	r10d, 0x7fffffff
0x424e66:	mov	r9d, 0xa
0x424e6c:	sub	eax, 0x30
0x424e6f:	cmp	al, 9
0x424e71:	jbe	0x424e7c
0x424e73:	test	edi, edi
0x424e75:	je	0x424eaa
0x424e77:	neg	r8d
0x424e7a:	jmp	0x424eaa
0x424e7c:	movsx	ecx, al
0x424e7f:	mov	eax, r10d
0x424e82:	sub	eax, ecx
0x424e84:	cdq	
0x424e85:	idiv	r9d
0x424e88:	cmp	eax, r8d
0x424e8b:	jl	0x424ea6
0x424e8d:	imul	r8d, r8d, 0xa
0x424e91:	mov	r11, qword ptr [rsi + 0x18]
0x424e95:	add	r8d, ecx
0x424e98:	lea	rcx, [r11 + 1]
0x424e9c:	mov	qword ptr [rsi + 0x18], rcx
0x424ea0:	mov	al, byte ptr [r11 + 1]
0x424ea4:	jmp	0x424e6c
0x424ea6:	or	r8d, 0xffffffff
0x424eaa:	mov	eax, r8d
0x424ead:	ret	
0x424eae:	push	r12
0x424eb0:	mov	eax, dword ptr [rdi + 0x28]
0x424eb3:	xor	r12d, r12d
0x424eb6:	cmp	eax, dword ptr [rdi + 0x2c]
0x424eb9:	jge	0x424ee8
0x424ebb:	movsxd	r12, eax
0x424ebe:	inc	eax
0x424ec0:	shl	r12, 5
0x424ec4:	add	r12, qword ptr [rdi + 0x20]
0x424ec8:	mov	qword ptr [r12 + 4], 0
0x424ed1:	mov	dword ptr [rdi + 0x28], eax
0x424ed4:	mov	dword ptr [r12], 0x43
0x424edc:	call	0x424e3e
0x424ee1:	cdqe	
0x424ee3:	mov	qword ptr [r12 + 0x10], rax
0x424ee8:	mov	rax, r12
0x424eeb:	pop	r12
0x424eed:	ret	
0x424eee:	push	rbx
0x424eef:	mov	rbx, rdi
0x424ef2:	test	esi, esi
0x424ef4:	jne	0x424f0e
0x424ef6:	mov	rax, qword ptr [rdi + 0x18]
0x424efa:	cmp	byte ptr [rax], 0
0x424efd:	jne	0x424f03
0x424eff:	xor	eax, eax
0x424f01:	jmp	0x424f4d
0x424f03:	lea	rdx, [rax + 1]
0x424f07:	mov	qword ptr [rdi + 0x18], rdx
0x424f0b:	movsx	esi, byte ptr [rax]
0x424f0e:	cmp	esi, 0x68
0x424f11:	je	0x424f30
0x424f13:	cmp	esi, 0x76
0x424f16:	jne	0x424eff
0x424f18:	mov	rdi, rbx
0x424f1b:	call	0x424e3e
0x424f20:	mov	rcx, qword ptr [rbx + 0x18]
0x424f24:	cmp	byte ptr [rcx], 0x5f
0x424f27:	jne	0x424eff
0x424f29:	inc	rcx
0x424f2c:	mov	qword ptr [rbx + 0x18], rcx
0x424f30:	mov	rdi, rbx
0x424f33:	call	0x424e3e
0x424f38:	mov	rsi, qword ptr [rbx + 0x18]
0x424f3c:	cmp	byte ptr [rsi], 0x5f
0x424f3f:	jne	0x424eff
0x424f41:	inc	rsi
0x424f44:	mov	eax, 1
0x424f49:	mov	qword ptr [rbx + 0x18], rsi
0x424f4d:	pop	rbx
0x424f4e:	ret	
0x424f4f:	mov	rdx, qword ptr [rdi + 0x18]
0x424f53:	mov	cl, byte ptr [rdx]
0x424f55:	cmp	cl, 0x52
0x424f58:	je	0x424f5f
0x424f5a:	cmp	cl, 0x4f
0x424f5d:	jne	0x424f92
0x424f5f:	mov	eax, dword ptr [rdi + 0x48]
0x424f62:	cmp	cl, 0x52
0x424f65:	jne	0x424f72
0x424f67:	add	eax, 2
0x424f6a:	mov	r8d, 0x1f
0x424f70:	jmp	0x424f7b
0x424f72:	add	eax, 3
0x424f75:	mov	r8d, 0x20
0x424f7b:	inc	rdx
0x424f7e:	mov	dword ptr [rdi + 0x48], eax
0x424f81:	xor	ecx, ecx
0x424f83:	mov	qword ptr [rdi + 0x18], rdx
0x424f87:	mov	rdx, rsi
0x424f8a:	mov	esi, r8d
0x424f8d:	jmp	0x424cee
0x424f92:	mov	rax, rsi
0x424f95:	ret	
0x424f96:	mov	rax, qword ptr [rdi + 0x18]
0x424f9a:	push	rbx
0x424f9b:	mov	rbx, rdi
0x424f9e:	mov	dl, byte ptr [rax]
0x424fa0:	cmp	dl, 0x5f
0x424fa3:	je	0x424fba
0x424fa5:	cmp	dl, 0x6e
0x424fa8:	jne	0x424faf
0x424faa:	or	eax, 0xffffffff
0x424fad:	jmp	0x424fcc
0x424faf:	call	0x424e3e
0x424fb4:	inc	eax
0x424fb6:	jns	0x424fbc
0x424fb8:	jmp	0x424faa
0x424fba:	xor	eax, eax
0x424fbc:	mov	rcx, qword ptr [rbx + 0x18]
0x424fc0:	cmp	byte ptr [rcx], 0x5f
0x424fc3:	jne	0x424faa
0x424fc5:	inc	rcx
0x424fc8:	mov	qword ptr [rbx + 0x18], rcx
0x424fcc:	pop	rbx
0x424fcd:	ret	
0x424fce:	mov	rax, qword ptr [rdi + 0x18]
0x424fd2:	cmp	byte ptr [rax], 0x54
0x424fd5:	jne	0x42501e
0x424fd7:	inc	rax
0x424fda:	push	rbx
0x424fdb:	mov	rbx, rdi
0x424fde:	mov	qword ptr [rdi + 0x18], rax
0x424fe2:	call	0x424f96
0x424fe7:	movsxd	rdx, eax
0x424fea:	test	edx, edx
0x424fec:	jns	0x424ff2
0x424fee:	xor	eax, eax
0x424ff0:	jmp	0x42501c
0x424ff2:	mov	ecx, dword ptr [rbx + 0x28]
0x424ff5:	cmp	ecx, dword ptr [rbx + 0x2c]
0x424ff8:	jge	0x424fee
0x424ffa:	movsxd	rax, ecx
0x424ffd:	inc	ecx
0x424fff:	shl	rax, 5
0x425003:	add	rax, qword ptr [rbx + 0x20]
0x425007:	mov	qword ptr [rax + 4], 0
0x42500f:	mov	dword ptr [rbx + 0x28], ecx
0x425012:	mov	dword ptr [rax], 5
0x425018:	mov	qword ptr [rax + 0x10], rdx
0x42501c:	pop	rbx
0x42501d:	ret	
0x42501e:	xor	eax, eax
0x425020:	ret	
0x425021:	mov	rax, qword ptr [rdi + 0x18]
0x425025:	cmp	byte ptr [rax], 0x5f
0x425028:	jne	0x425080
0x42502a:	lea	rdx, [rax + 1]
0x42502e:	push	rbp
0x42502f:	mov	ebp, 1
0x425034:	push	rbx
0x425035:	mov	rbx, rdi
0x425038:	mov	qword ptr [rdi + 0x18], rdx
0x42503c:	cmp	byte ptr [rax + 1], 0x5f
0x425040:	jne	0x42504f
0x425042:	add	rax, 2
0x425046:	mov	ebp, 2
0x42504b:	mov	qword ptr [rdi + 0x18], rax
0x42504f:	mov	rdi, rbx
0x425052:	call	0x424e3e
0x425057:	mov	ecx, eax
0x425059:	xor	eax, eax
0x42505b:	test	ecx, ecx
0x42505d:	js	0x42507d
0x42505f:	dec	ebp
0x425061:	jle	0x425078
0x425063:	cmp	ecx, 9
0x425066:	jle	0x425078
0x425068:	mov	rsi, qword ptr [rbx + 0x18]
0x42506c:	cmp	byte ptr [rsi], 0x5f
0x42506f:	jne	0x42507d
0x425071:	inc	rsi
0x425074:	mov	qword ptr [rbx + 0x18], rsi
0x425078:	mov	eax, 1
0x42507d:	pop	rbx
0x42507e:	pop	rbp
0x42507f:	ret	
0x425080:	mov	eax, 1
0x425085:	ret	
0x425086:	push	rbp
0x425087:	mov	rbp, rdi
0x42508a:	push	rbx
0x42508b:	mov	rbx, rsi
0x42508e:	push	rdx
0x42508f:	test	rbx, rbx
0x425092:	je	0x42510b
0x425094:	mov	eax, dword ptr [rbx + 8]
0x425097:	cmp	eax, 1
0x42509a:	jg	0x42510b
0x42509c:	mov	edx, dword ptr [rbp + 0x134]
0x4250a2:	cmp	edx, 0x400
0x4250a8:	jg	0x42510b
0x4250aa:	mov	ecx, dword ptr [rbx]
0x4250ac:	inc	eax
0x4250ae:	mov	dword ptr [rbx + 8], eax
0x4250b1:	dec	ecx
0x4250b3:	cmp	ecx, 0x50
0x4250b6:	ja	0x42510b
0x4250b8:	notrack jmp	qword ptr ds:[rcx*8 + 0x4c9dc8]
0x4250c0:	inc	dword ptr [rbp + 0x16c]
0x4250c6:	jmp	0x4250d7
0x4250c8:	mov	rsi, qword ptr [rbx + 0x10]
0x4250cc:	cmp	dword ptr [rsi], 5
0x4250cf:	jne	0x4250d7
0x4250d1:	inc	dword ptr [rbp + 0x15c]
0x4250d7:	inc	edx
0x4250d9:	mov	rsi, qword ptr [rbx + 0x10]
0x4250dd:	mov	rdi, rbp
0x4250e0:	mov	dword ptr [rbp + 0x134], edx
0x4250e6:	call	0x425086
0x4250eb:	mov	rsi, qword ptr [rbx + 0x18]
0x4250ef:	mov	rdi, rbp
0x4250f2:	call	0x425086
0x4250f7:	dec	dword ptr [rbp + 0x134]
0x4250fd:	jmp	0x42510b
0x4250ff:	mov	rbx, qword ptr [rbx + 0x18]
0x425103:	jmp	0x42508f
0x425105:	mov	rbx, qword ptr [rbx + 0x10]
0x425109:	jmp	0x42508f
0x42510b:	pop	rax
0x42510c:	pop	rbx
0x42510d:	pop	rbp
0x42510e:	ret	
0x42510f:	mov	rsi, qword ptr [rdi + 0x100]
0x425116:	push	rbx
0x425117:	mov	rbx, rdi
0x42511a:	mov	byte ptr [rdi + rsi], 0
0x42511e:	mov	rdx, qword ptr [rdi + 0x118]
0x425125:	call	qword ptr [rdi + 0x110]
0x42512b:	inc	qword ptr [rbx + 0x140]
0x425132:	mov	qword ptr [rbx + 0x100], 0
0x42513d:	pop	rbx
0x42513e:	ret	
0x42513f:	push	rbp
0x425140:	mov	ebp, esi
0x425142:	push	rbx
0x425143:	mov	rbx, rdi
0x425146:	push	rdx
0x425147:	cmp	qword ptr [rdi + 0x100], 0xff
0x425152:	jne	0x425159
0x425154:	call	0x42510f
0x425159:	mov	rax, qword ptr [rbx + 0x100]
0x425160:	lea	rdx, [rax + 1]
0x425164:	mov	qword ptr [rbx + 0x100], rdx
0x42516b:	mov	byte ptr [rbx + rax], bpl
0x42516f:	mov	byte ptr [rbx + 0x108], bpl
0x425176:	pop	rax
0x425177:	pop	rbx
0x425178:	pop	rbp
0x425179:	ret	
0x42517a:	push	r12
0x42517c:	mov	r12, rdi
0x42517f:	push	rbp
0x425180:	lea	rbp, [rsi + rdx]
0x425184:	push	rbx
0x425185:	mov	rbx, rsi
0x425188:	cmp	rbx, rbp
0x42518b:	je	0x42519d
0x42518d:	movsx	esi, byte ptr [rbx]
0x425190:	mov	rdi, r12
0x425193:	inc	rbx
0x425196:	call	0x42513f
0x42519b:	jmp	0x425188
0x42519d:	pop	rbx
0x42519e:	pop	rbp
0x42519f:	pop	r12
0x4251a1:	ret	
0x4251a2:	mov	rax, rdi
0x4251a5:	test	esi, esi
0x4251a7:	jns	0x4251b9
0x4251a9:	ret	
0x4251aa:	cmp	dword ptr [rax], 0x2f
0x4251ad:	jne	0x4251bf
0x4251af:	test	esi, esi
0x4251b1:	je	0x4251c2
0x4251b3:	mov	rax, qword ptr [rax + 0x18]
0x4251b7:	dec	esi
0x4251b9:	test	rax, rax
0x4251bc:	jne	0x4251aa
0x4251be:	ret	
0x4251bf:	xor	eax, eax
0x4251c1:	ret	
0x4251c2:	mov	rax, qword ptr [rax + 0x10]
0x4251c6:	ret	
0x4251c7:	mov	rax, qword ptr [rdi + 0x120]
0x4251ce:	test	rax, rax
0x4251d1:	je	0x4251e0
0x4251d3:	mov	rdx, qword ptr [rax + 8]
0x4251d7:	mov	esi, dword ptr [rsi + 0x10]
0x4251da:	mov	rdi, qword ptr [rdx + 0x18]
0x4251de:	jmp	0x4251a2
0x4251e0:	mov	dword ptr [rdi + 0x130], 1
0x4251ea:	xor	eax, eax
0x4251ec:	ret	
0x4251ed:	push	r12
0x4251ef:	mov	r12, rdi
0x4251f2:	push	rbp
0x4251f3:	mov	rbp, rsi
0x4251f6:	push	rbx
0x4251f7:	movabs	rbx, 0x338c0004108001
0x425201:	test	rbp, rbp
0x425204:	je	0x425259
0x425206:	mov	eax, dword ptr [rbp]
0x425209:	cmp	eax, 8
0x42520c:	ja	0x425216
0x42520e:	notrack jmp	qword ptr ds:[rax*8 + 0x4ca050]
0x425216:	sub	eax, 0x18
0x425219:	cmp	eax, 0x35
0x42521c:	ja	0x425242
0x42521e:	bt	rbx, rax
0x425222:	jb	0x425259
0x425224:	cmp	eax, 0x1b
0x425227:	jne	0x425242
0x425229:	jmp	0x425253
0x42522b:	mov	rsi, rbp
0x42522e:	mov	rdi, r12
0x425231:	call	0x4251c7
0x425236:	test	rax, rax
0x425239:	je	0x425259
0x42523b:	cmp	dword ptr [rax], 0x2f
0x42523e:	jne	0x425259
0x425240:	jmp	0x42525b
0x425242:	mov	rsi, qword ptr [rbp + 0x10]
0x425246:	mov	rdi, r12
0x425249:	call	0x4251ed
0x42524e:	test	rax, rax
0x425251:	jne	0x42525b
0x425253:	mov	rbp, qword ptr [rbp + 0x18]
0x425257:	jmp	0x425201
0x425259:	xor	eax, eax
0x42525b:	pop	rbx
0x42525c:	pop	rbp
0x42525d:	pop	r12
0x42525f:	ret	
0x425260:	xor	eax, eax
0x425262:	test	rdi, rdi
0x425265:	je	0x42527b
0x425267:	cmp	dword ptr [rdi], 0x2f
0x42526a:	jne	0x42527b
0x42526c:	cmp	qword ptr [rdi + 0x10], 0
0x425271:	je	0x42527b
0x425273:	mov	rdi, qword ptr [rdi + 0x18]
0x425277:	inc	eax
0x425279:	jmp	0x425262
0x42527b:	ret	
0x42527c:	mov	edx, dword ptr [rdi]
0x42527e:	xor	eax, eax
0x425280:	and	edx, 0xfffffffd
0x425283:	cmp	edx, 0x38
0x425286:	jne	0x4252b6
0x425288:	mov	rax, qword ptr [rdi + 0x10]
0x42528c:	mov	rcx, qword ptr [rax + 0x10]
0x425290:	xor	eax, eax
0x425292:	mov	rsi, qword ptr [rcx]
0x425295:	cmp	byte ptr [rsi], 0x64
0x425298:	jne	0x4252b6
0x42529a:	mov	dl, byte ptr [rsi + 1]
0x42529d:	mov	eax, edx
0x42529f:	and	eax, 0xffffffdf
0x4252a2:	cmp	al, 0x58
0x4252a4:	sete	dil
0x4252a8:	cmp	dl, 0x69
0x4252ab:	sete	r8b
0x4252af:	or	edi, r8d
0x4252b2:	movzx	eax, dil
0x4252b6:	ret	
0x4252b7:	endbr64	
0x4252bb:	ret	
0x4252bc:	mov	rdx, qword ptr [rdi]
0x4252bf:	xor	eax, eax
0x4252c1:	cmp	byte ptr [rdx + 1], 0x63
0x4252c5:	jne	0x4252e2
0x4252c7:	mov	cl, byte ptr [rdx]
0x4252c9:	lea	eax, [rcx - 0x63]
0x4252cc:	cmp	al, 1
0x4252ce:	setbe	sil
0x4252d2:	sub	ecx, 0x72
0x4252d5:	cmp	cl, 1
0x4252d8:	setbe	dil
0x4252dc:	or	esi, edi
0x4252de:	movzx	eax, sil
0x4252e2:	ret	
0x4252e3:	mov	dl, byte ptr [rdi]
0x4252e5:	lea	ecx, [rdx - 0x4b]
0x4252e8:	cmp	cl, 0x27
0x4252eb:	ja	0x425307
0x4252ed:	movabs	r8, 0xffffff7ffffff7fe
0x4252f7:	sar	r8, cl
0x4252fa:	and	r8d, 1
0x4252fe:	xor	r8d, 1
0x425302:	movzx	eax, r8b
0x425306:	ret	
0x425307:	xor	eax, eax
0x425309:	cmp	dl, 0x44
0x42530c:	jne	0x425338
0x42530e:	mov	sil, byte ptr [rdi + 1]
0x425312:	cmp	sil, 0x78
0x425316:	je	0x425333
0x425318:	cmp	sil, 0x6f
0x42531c:	je	0x425333
0x42531e:	cmp	sil, 0x4f
0x425322:	sete	al
0x425325:	cmp	sil, 0x77
0x425329:	sete	dil
0x42532d:	or	eax, edi
0x42532f:	movzx	eax, al
0x425332:	ret	
0x425333:	mov	eax, 1
0x425338:	ret	
0x425339:	push	rbx
0x42533a:	mov	rbx, rdi
0x42533d:	call	0x424e3e
0x425342:	mov	edx, eax
0x425344:	xor	eax, eax
0x425346:	test	edx, edx
0x425348:	jle	0x4253dd
0x42534e:	mov	rsi, qword ptr [rbx + 0x18]
0x425352:	mov	rdi, qword ptr [rbx + 8]
0x425356:	movsxd	rcx, edx
0x425359:	sub	rdi, rsi
0x42535c:	cmp	rdi, rcx
0x42535f:	jl	0x4253d9
0x425361:	add	rcx, rsi
0x425364:	mov	qword ptr [rbx + 0x18], rcx
0x425368:	test	byte ptr [rbx + 0x10], 4
0x42536c:	je	0x42537a
0x42536e:	cmp	byte ptr [rcx], 0x24
0x425371:	jne	0x42537a
0x425373:	inc	rcx
0x425376:	mov	qword ptr [rbx + 0x18], rcx
0x42537a:	cmp	edx, 9
0x42537d:	jle	0x4253d1
0x42537f:	movabs	rax, 0x5f4c41424f4c475f
0x425389:	cmp	qword ptr [rsi], rax
0x42538c:	jne	0x4253d1
0x42538e:	mov	r8b, byte ptr [rsi + 8]
0x425392:	lea	ecx, [r8 - 0x24]
0x425396:	cmp	cl, 0x3b
0x425399:	ja	0x4253d1
0x42539b:	movabs	rax, 0xf7fffffffffffbfe
0x4253a5:	sar	rax, cl
0x4253a8:	test	al, 1
0x4253aa:	jne	0x4253d1
0x4253ac:	cmp	byte ptr [rsi + 9], 0x4e
0x4253b0:	jne	0x4253d1
0x4253b2:	mov	esi, dword ptr [rbx + 0x48]
0x4253b5:	mov	rdi, rbx
0x4253b8:	add	esi, 0x16
0x4253bb:	sub	esi, edx
0x4253bd:	mov	edx, 0x15
0x4253c2:	mov	dword ptr [rbx + 0x48], esi
0x4253c5:	mov	esi, 0x4cd490
0x4253ca:	call	0x424dcf
0x4253cf:	jmp	0x4253d9
0x4253d1:	mov	rdi, rbx
0x4253d4:	call	0x424dcf
0x4253d9:	mov	qword ptr [rbx + 0x40], rax
0x4253dd:	pop	rbx
0x4253de:	ret	
0x4253df:	push	r12
0x4253e1:	push	rbp
0x4253e2:	mov	rbp, rsi
0x4253e5:	push	rbx
0x4253e6:	mov	r12, qword ptr [rdi + 0x40]
0x4253ea:	mov	rbx, rdi
0x4253ed:	mov	rax, qword ptr [rbx + 0x18]
0x4253f1:	cmp	byte ptr [rax], 0x42
0x4253f4:	jne	0x42541d
0x4253f6:	inc	rax
0x4253f9:	mov	rdi, rbx
0x4253fc:	mov	qword ptr [rbx + 0x18], rax
0x425400:	call	0x425339
0x425405:	mov	rdx, rbp
0x425408:	mov	esi, 0x4d
0x42540d:	mov	rdi, rbx
0x425410:	mov	rcx, rax
0x425413:	call	0x424cee
0x425418:	mov	rbp, rax
0x42541b:	jmp	0x4253ed
0x42541d:	mov	qword ptr [rbx + 0x40], r12
0x425421:	mov	rax, rbp
0x425424:	pop	rbx
0x425425:	pop	rbp
0x425426:	pop	r12
0x425428:	ret	
0x425429:	mov	rdx, qword ptr [rdi + 0x18]
0x42542d:	cmp	byte ptr [rdx], 0x53
0x425430:	jne	0x4255fe
0x425436:	lea	rax, [rdx + 1]
0x42543a:	push	rbx
0x42543b:	mov	rbx, rdi
0x42543e:	mov	qword ptr [rdi + 0x18], rax
0x425442:	movsx	ecx, byte ptr [rdx + 1]
0x425446:	test	cl, cl
0x425448:	je	0x425456
0x42544a:	lea	rcx, [rdx + 2]
0x42544e:	mov	qword ptr [rdi + 0x18], rcx
0x425452:	movsx	ecx, byte ptr [rdx + 1]
0x425456:	lea	edi, [rcx - 0x30]
0x425459:	cmp	dil, 9
0x42545d:	jbe	0x425470
0x42545f:	cmp	cl, 0x5f
0x425462:	je	0x425475
0x425464:	lea	r8d, [rcx - 0x41]
0x425468:	cmp	r8b, 0x19
0x42546c:	jbe	0x425479
0x42546e:	jmp	0x4254e1
0x425470:	cmp	cl, 0x5f
0x425473:	jne	0x425479
0x425475:	xor	edx, edx
0x425477:	jmp	0x4254cf
0x425479:	xor	esi, esi
0x42547b:	lea	r10d, [rcx - 0x30]
0x42547f:	cmp	r10b, 9
0x425483:	ja	0x42548e
0x425485:	imul	edi, esi, 0x24
0x425488:	lea	edx, [rdi + rcx - 0x30]
0x42548c:	jmp	0x4254a8
0x42548e:	lea	r9d, [rcx - 0x41]
0x425492:	cmp	r9b, 0x19
0x425496:	jbe	0x42549f
0x425498:	xor	eax, eax
0x42549a:	jmp	0x4255fc
0x42549f:	imul	r11d, esi, 0x24
0x4254a3:	lea	edx, [r11 + rcx - 0x37]
0x4254a8:	cmp	esi, edx
0x4254aa:	ja	0x425498
0x4254ac:	mov	r8, qword ptr [rbx + 0x18]
0x4254b0:	movsx	ecx, byte ptr [r8]
0x4254b4:	test	cl, cl
0x4254b6:	jne	0x4254bc
0x4254b8:	mov	esi, edx
0x4254ba:	jmp	0x42547b
0x4254bc:	lea	rax, [r8 + 1]
0x4254c0:	mov	qword ptr [rbx + 0x18], rax
0x4254c4:	movsx	ecx, byte ptr [r8]
0x4254c8:	cmp	cl, 0x5f
0x4254cb:	jne	0x4254b8
0x4254cd:	inc	edx
0x4254cf:	cmp	dword ptr [rbx + 0x38], edx
0x4254d2:	jbe	0x425498
0x4254d4:	mov	rbx, qword ptr [rbx + 0x30]
0x4254d8:	mov	rax, qword ptr [rbx + rdx*8]
0x4254dc:	jmp	0x4255fc
0x4254e1:	xor	r10d, r10d
0x4254e4:	test	byte ptr [rbx + 0x10], 8
0x4254e8:	setne	r10b
0x4254ec:	jne	0x42550d
0x4254ee:	and	sil, 1
0x4254f2:	je	0x42550d
0x4254f4:	mov	rsi, qword ptr [rbx + 0x18]
0x4254f8:	mov	r11d, 1
0x4254fe:	mov	r9b, byte ptr [rsi]
0x425501:	sub	r9d, 0x43
0x425505:	cmp	r9b, 1
0x425509:	cmovbe	r10d, r11d
0x42550d:	mov	edx, 0x4cb180
0x425512:	cmp	byte ptr [rdx], cl
0x425514:	jne	0x4255e6
0x42551a:	mov	rdi, qword ptr [rdx + 0x28]
0x42551e:	mov	r8d, dword ptr [rbx + 0x2c]
0x425522:	test	rdi, rdi
0x425525:	je	0x42555d
0x425527:	mov	ecx, dword ptr [rbx + 0x28]
0x42552a:	mov	esi, dword ptr [rdx + 0x30]
0x42552d:	xor	eax, eax
0x42552f:	cmp	ecx, r8d
0x425532:	jge	0x425559
0x425534:	movsxd	rax, ecx
0x425537:	inc	ecx
0x425539:	shl	rax, 5
0x42553d:	add	rax, qword ptr [rbx + 0x20]
0x425541:	mov	qword ptr [rax + 4], 0
0x425549:	mov	dword ptr [rbx + 0x28], ecx
0x42554c:	mov	dword ptr [rax], 0x18
0x425552:	mov	qword ptr [rax + 0x10], rdi
0x425556:	mov	dword ptr [rax + 0x18], esi
0x425559:	mov	qword ptr [rbx + 0x40], rax
0x42555d:	test	r10d, r10d
0x425560:	je	0x42556c
0x425562:	mov	r10, qword ptr [rdx + 0x18]
0x425566:	mov	r9d, dword ptr [rdx + 0x20]
0x42556a:	jmp	0x425574
0x42556c:	mov	r10, qword ptr [rdx + 8]
0x425570:	mov	r9d, dword ptr [rdx + 0x10]
0x425574:	mov	r11d, dword ptr [rbx + 0x28]
0x425578:	add	dword ptr [rbx + 0x48], r9d
0x42557c:	xor	eax, eax
0x42557e:	cmp	r11d, r8d
0x425581:	jge	0x4255ab
0x425583:	movsxd	rax, r11d
0x425586:	inc	r11d
0x425589:	shl	rax, 5
0x42558d:	add	rax, qword ptr [rbx + 0x20]
0x425591:	mov	qword ptr [rax + 4], 0
0x425599:	mov	dword ptr [rbx + 0x28], r11d
0x42559d:	mov	dword ptr [rax], 0x18
0x4255a3:	mov	qword ptr [rax + 0x10], r10
0x4255a7:	mov	dword ptr [rax + 0x18], r9d
0x4255ab:	mov	rdx, qword ptr [rbx + 0x18]
0x4255af:	cmp	byte ptr [rdx], 0x42
0x4255b2:	jne	0x4255fc
0x4255b4:	mov	rsi, rax
0x4255b7:	mov	rdi, rbx
0x4255ba:	call	0x4253df
0x4255bf:	test	rax, rax
0x4255c2:	je	0x425498
0x4255c8:	mov	edi, dword ptr [rbx + 0x38]
0x4255cb:	cmp	edi, dword ptr [rbx + 0x3c]
0x4255ce:	jge	0x425498
0x4255d4:	mov	rcx, qword ptr [rbx + 0x30]
0x4255d8:	movsxd	r8, edi
0x4255db:	inc	edi
0x4255dd:	mov	qword ptr [rcx + r8*8], rax
0x4255e1:	mov	dword ptr [rbx + 0x38], edi
0x4255e4:	jmp	0x4255fc
0x4255e6:	add	rdx, 0x38
0x4255ea:	cmp	rdx, 0x4cb308
0x4255f1:	jne	0x425512
0x4255f7:	jmp	0x425498
0x4255fc:	pop	rbx
0x4255fd:	ret	
0x4255fe:	xor	eax, eax
0x425600:	ret	
0x425601:	push	r12
0x425603:	push	rbp
0x425604:	push	rbx
0x425605:	mov	rax, qword ptr [rdi + 0x18]
0x425609:	cmp	byte ptr [rax], 0x4c
0x42560c:	je	0x425615
0x42560e:	xor	ebp, ebp
0x425610:	jmp	0x425717
0x425615:	lea	rdx, [rax + 1]
0x425619:	mov	rbx, rdi
0x42561c:	mov	qword ptr [rdi + 0x18], rdx
0x425620:	mov	cl, byte ptr [rax + 1]
0x425623:	cmp	cl, 0x5f
0x425626:	je	0x425632
0x425628:	cmp	cl, 0x5a
0x42562b:	jne	0x425663
0x42562d:	cmp	cl, 0x5f
0x425630:	jne	0x42563a
0x425632:	add	rax, 2
0x425636:	mov	qword ptr [rbx + 0x18], rax
0x42563a:	mov	r10, qword ptr [rbx + 0x18]
0x42563e:	xor	ebp, ebp
0x425640:	cmp	byte ptr [r10], 0x5a
0x425644:	jne	0x4256f2
0x42564a:	inc	r10
0x42564d:	xor	esi, esi
0x42564f:	mov	rdi, rbx
0x425652:	mov	qword ptr [rbx + 0x18], r10
0x425656:	call	0x426f5a
0x42565b:	mov	rbp, rax
0x42565e:	jmp	0x4256f2
0x425663:	call	0x425e9b
0x425668:	mov	rbp, rax
0x42566b:	test	rax, rax
0x42566e:	je	0x42560e
0x425670:	cmp	dword ptr [rax], 0x27
0x425673:	mov	r12, qword ptr [rbx + 0x18]
0x425677:	jne	0x42569a
0x425679:	mov	rdi, qword ptr [rax + 0x10]
0x42567d:	cmp	dword ptr [rdi + 0x1c], 0
0x425681:	je	0x425689
0x425683:	mov	esi, dword ptr [rdi + 8]
0x425686:	sub	dword ptr [rbx + 0x48], esi
0x425689:	mov	rdi, qword ptr [rdi]
0x42568c:	mov	esi, 0x4cd4b5
0x425691:	call	0x403be0
0x425696:	test	eax, eax
0x425698:	je	0x425709
0x42569a:	cmp	byte ptr [r12], 0x6e
0x42569f:	mov	r8d, 0x3d
0x4256a5:	jne	0x4256b4
0x4256a7:	inc	r12
0x4256aa:	mov	r8d, 0x3e
0x4256b0:	mov	qword ptr [rbx + 0x18], r12
0x4256b4:	mov	rsi, qword ptr [rbx + 0x18]
0x4256b8:	mov	rdx, qword ptr [rbx + 0x18]
0x4256bc:	mov	r9b, byte ptr [rdx]
0x4256bf:	cmp	r9b, 0x45
0x4256c3:	je	0x4256d7
0x4256c5:	test	r9b, r9b
0x4256c8:	je	0x42560e
0x4256ce:	inc	rdx
0x4256d1:	mov	qword ptr [rbx + 0x18], rdx
0x4256d5:	jmp	0x4256b8
0x4256d7:	sub	edx, esi
0x4256d9:	mov	rdi, rbx
0x4256dc:	call	0x424dcf
0x4256e1:	mov	rdx, rbp
0x4256e4:	mov	esi, r8d
0x4256e7:	mov	rcx, rax
0x4256ea:	call	0x424cee
0x4256ef:	mov	rbp, rax
0x4256f2:	mov	r11, qword ptr [rbx + 0x18]
0x4256f6:	cmp	byte ptr [r11], 0x45
0x4256fa:	jne	0x42560e
0x425700:	inc	r11
0x425703:	mov	qword ptr [rbx + 0x18], r11
0x425707:	jmp	0x425717
0x425709:	cmp	byte ptr [r12], 0x45
0x42570e:	jne	0x42569a
0x425710:	inc	r12
0x425713:	mov	qword ptr [rbx + 0x18], r12
0x425717:	mov	rax, rbp
0x42571a:	pop	rbx
0x42571b:	pop	rbp
0x42571c:	pop	r12
0x42571e:	ret	
0x42571f:	push	r14
0x425721:	push	r13
0x425723:	push	r12
0x425725:	push	rbp
0x425726:	mov	rbp, rdi
0x425729:	push	rbx
0x42572a:	mov	rax, qword ptr [rdi + 0x18]
0x42572e:	mov	cl, byte ptr [rax]
0x425730:	cmp	cl, 0x4c
0x425733:	jne	0x425742
0x425735:	pop	rbx
0x425736:	pop	rbp
0x425737:	pop	r12
0x425739:	pop	r13
0x42573b:	pop	r14
0x42573d:	jmp	0x425601
0x425742:	cmp	cl, 0x54
0x425745:	jne	0x425754
0x425747:	pop	rbx
0x425748:	pop	rbp
0x425749:	pop	r12
0x42574b:	pop	r13
0x42574d:	pop	r14
0x42574f:	jmp	0x424fce
0x425754:	cmp	cl, 0x73
0x425757:	jne	0x425840
0x42575d:	mov	r9b, byte ptr [rax + 1]
0x425761:	cmp	r9b, 0x72
0x425765:	jne	0x425817
0x42576b:	lea	rdx, [rax + 2]
0x42576f:	cmp	dword ptr [rdi + 0x54], 0
0x425773:	mov	qword ptr [rdi + 0x18], rdx
0x425777:	mov	cl, byte ptr [rax + 2]
0x42577a:	je	0x4257c7
0x42577c:	cmp	cl, 0x39
0x42577f:	jg	0x425788
0x425781:	cmp	cl, 0x2f
0x425784:	jle	0x4257c7
0x425786:	jmp	0x4257a1
0x425788:	sub	ecx, 0x43
0x42578b:	cmp	cl, 0x37
0x42578e:	ja	0x4257c7
0x425790:	movabs	rax, 0xffffffc0040201
0x42579a:	shr	rax, cl
0x42579d:	test	al, 1
0x42579f:	je	0x4257c7
0x4257a1:	mov	dword ptr [rbp + 0x54], 0xffffffff
0x4257a8:	xor	esi, esi
0x4257aa:	mov	rdi, rbp
0x4257ad:	call	0x426bdb
0x4257b2:	mov	rsi, qword ptr [rbp + 0x18]
0x4257b6:	mov	r14, rax
0x4257b9:	cmp	byte ptr [rsi], 0x45
0x4257bc:	jne	0x4257d2
0x4257be:	inc	rsi
0x4257c1:	mov	qword ptr [rbp + 0x18], rsi
0x4257c5:	jmp	0x4257d2
0x4257c7:	mov	rdi, rbp
0x4257ca:	call	0x425e9b
0x4257cf:	mov	r14, rax
0x4257d2:	mov	rdi, rbp
0x4257d5:	call	0x426859
0x4257da:	mov	rdi, qword ptr [rbp + 0x18]
0x4257de:	mov	r12, rax
0x4257e1:	cmp	byte ptr [rdi], 0x49
0x4257e4:	jne	0x425804
0x4257e6:	mov	rdi, rbp
0x4257e9:	call	0x425e7e
0x4257ee:	mov	rdx, r12
0x4257f1:	mov	esi, 4
0x4257f6:	mov	rdi, rbp
0x4257f9:	mov	rcx, rax
0x4257fc:	call	0x424cee
0x425801:	mov	r12, rax
0x425804:	mov	rcx, r12
0x425807:	mov	rdx, r14
0x42580a:	mov	esi, 1
0x42580f:	mov	rdi, rbp
0x425812:	jmp	0x425d3e
0x425817:	cmp	r9b, 0x70
0x42581b:	jne	0x425918
0x425821:	add	rax, 2
0x425825:	mov	qword ptr [rdi + 0x18], rax
0x425829:	call	0x42571f
0x42582e:	xor	ecx, ecx
0x425830:	mov	esi, 0x4c
0x425835:	mov	rdi, rbp
0x425838:	mov	rdx, rax
0x42583b:	jmp	0x425d3e
0x425840:	cmp	cl, 0x66
0x425843:	jne	0x4258bd
0x425845:	cmp	byte ptr [rax + 1], 0x70
0x425849:	jne	0x425918
0x42584f:	lea	rbx, [rax + 2]
0x425853:	mov	qword ptr [rdi + 0x18], rbx
0x425857:	cmp	byte ptr [rax + 2], 0x54
0x42585b:	jne	0x425869
0x42585d:	add	rax, 3
0x425861:	mov	qword ptr [rdi + 0x18], rax
0x425865:	xor	eax, eax
0x425867:	jmp	0x425884
0x425869:	call	0x424f96
0x42586e:	mov	edi, eax
0x425870:	inc	eax
0x425872:	and	edi, 0x7fffffff
0x425878:	cmp	edi, 0x7fffffff
0x42587e:	je	0x425a14
0x425884:	mov	r8d, dword ptr [rbp + 0x28]
0x425888:	cmp	r8d, dword ptr [rbp + 0x2c]
0x42588c:	jge	0x425a14
0x425892:	movsxd	rbx, r8d
0x425895:	cdqe	
0x425897:	inc	r8d
0x42589a:	shl	rbx, 5
0x42589e:	add	rbx, qword ptr [rbp + 0x20]
0x4258a2:	mov	qword ptr [rbx + 4], 0
0x4258aa:	mov	dword ptr [rbp + 0x28], r8d
0x4258ae:	mov	dword ptr [rbx], 6
0x4258b4:	mov	qword ptr [rbx + 0x10], rax
0x4258b8:	jmp	0x425d72
0x4258bd:	lea	edx, [rcx - 0x30]
0x4258c0:	cmp	dl, 9
0x4258c3:	jbe	0x4258dc
0x4258c5:	cmp	cl, 0x6f
0x4258c8:	jne	0x425918
0x4258ca:	cmp	byte ptr [rax + 1], 0x6e
0x4258ce:	jne	0x4259ac
0x4258d4:	add	rax, 2
0x4258d8:	mov	qword ptr [rdi + 0x18], rax
0x4258dc:	mov	rdi, rbp
0x4258df:	call	0x426859
0x4258e4:	mov	rbx, rax
0x4258e7:	test	rax, rax
0x4258ea:	je	0x425a14
0x4258f0:	mov	rsi, qword ptr [rbp + 0x18]
0x4258f4:	cmp	byte ptr [rsi], 0x49
0x4258f7:	jne	0x425d72
0x4258fd:	mov	rdi, rbp
0x425900:	call	0x425e7e
0x425905:	mov	rdx, rbx
0x425908:	mov	esi, 4
0x42590d:	mov	rdi, rbp
0x425910:	mov	rcx, rax
0x425913:	jmp	0x425d3e
0x425918:	cmp	cl, 0x69
0x42591b:	je	0x425922
0x42591d:	cmp	cl, 0x74
0x425920:	jne	0x42597a
0x425922:	cmp	byte ptr [rax + 1], 0x6c
0x425926:	jne	0x42597a
0x425928:	add	rax, 2
0x42592c:	xor	r13d, r13d
0x42592f:	mov	qword ptr [rbp + 0x18], rax
0x425933:	cmp	cl, 0x74
0x425936:	jne	0x425943
0x425938:	mov	rdi, rbp
0x42593b:	call	0x425e9b
0x425940:	mov	r13, rax
0x425943:	mov	rcx, qword ptr [rbp + 0x18]
0x425947:	cmp	byte ptr [rcx], 0
0x42594a:	je	0x425a14
0x425950:	cmp	byte ptr [rcx + 1], 0
0x425954:	je	0x425a14
0x42595a:	mov	esi, 0x45
0x42595f:	mov	rdi, rbp
0x425962:	call	0x427845
0x425967:	mov	rdx, r13
0x42596a:	mov	esi, 0x31
0x42596f:	mov	rdi, rbp
0x425972:	mov	rcx, rax
0x425975:	jmp	0x425d3e
0x42597a:	cmp	cl, 0x75
0x42597d:	jne	0x4259ac
0x42597f:	inc	rax
0x425982:	mov	rdi, rbp
0x425985:	mov	qword ptr [rbp + 0x18], rax
0x425989:	call	0x425339
0x42598e:	mov	rdi, rbp
0x425991:	mov	r12, rax
0x425994:	call	0x425de9
0x425999:	mov	rdx, r12
0x42599c:	mov	esi, 0x3f
0x4259a1:	mov	rdi, rbp
0x4259a4:	mov	rcx, rax
0x4259a7:	jmp	0x425d3e
0x4259ac:	mov	rdi, rbp
0x4259af:	call	0x426642
0x4259b4:	mov	r12, rax
0x4259b7:	test	rax, rax
0x4259ba:	je	0x425a14
0x4259bc:	mov	r10d, dword ptr [rax]
0x4259bf:	cmp	r10d, 0x32
0x4259c3:	jne	0x425a02
0x4259c5:	mov	r14, qword ptr [rax + 0x10]
0x4259c9:	mov	esi, 0x45df55
0x4259ce:	mov	eax, dword ptr [r14 + 0x10]
0x4259d2:	mov	r13, qword ptr [r14]
0x4259d5:	sub	eax, 2
0x4259d8:	add	dword ptr [rbp + 0x48], eax
0x4259db:	mov	rdi, r13
0x4259de:	call	0x403be0
0x4259e3:	test	eax, eax
0x4259e5:	jne	0x425a1b
0x4259e7:	mov	rdi, rbp
0x4259ea:	call	0x425e9b
0x4259ef:	mov	rdx, r12
0x4259f2:	mov	esi, 0x37
0x4259f7:	mov	rdi, rbp
0x4259fa:	mov	rcx, rax
0x4259fd:	jmp	0x425d3e
0x425a02:	cmp	r10d, 0x34
0x425a06:	je	0x425aa3
0x425a0c:	ja	0x425a14
0x425a0e:	cmp	r10d, 0x33
0x425a12:	je	0x425a40
0x425a14:	xor	ebx, ebx
0x425a16:	jmp	0x425d72
0x425a1b:	mov	ebx, dword ptr [r14 + 0x14]
0x425a1f:	cmp	ebx, 1
0x425a22:	je	0x425a6c
0x425a24:	jg	0x425a2c
0x425a26:	test	ebx, ebx
0x425a28:	je	0x425a51
0x425a2a:	jmp	0x425a14
0x425a2c:	cmp	ebx, 2
0x425a2f:	je	0x425afd
0x425a35:	cmp	ebx, 3
0x425a38:	je	0x425c1e
0x425a3e:	jmp	0x425a14
0x425a40:	mov	r13d, dword ptr [rax + 0x10]
0x425a44:	cmp	r13d, 2
0x425a48:	je	0x425a14
0x425a4a:	jg	0x425a14
0x425a4c:	test	r13d, r13d
0x425a4f:	jne	0x425a63
0x425a51:	xor	ecx, ecx
0x425a53:	mov	rdx, r12
0x425a56:	mov	esi, 0x36
0x425a5b:	mov	rdi, rbp
0x425a5e:	jmp	0x425d3e
0x425a63:	dec	r13d
0x425a66:	jne	0x425a14
0x425a68:	xor	ebx, ebx
0x425a6a:	jmp	0x425ac8
0x425a6c:	mov	cl, byte ptr [r13]
0x425a70:	cmp	cl, 0x70
0x425a73:	je	0x425a7e
0x425a75:	cmp	cl, 0x6d
0x425a78:	jne	0x425d4b
0x425a7e:	cmp	cl, byte ptr [r13 + 1]
0x425a82:	jne	0x425d4b
0x425a88:	mov	rdx, qword ptr [rbp + 0x18]
0x425a8c:	cmp	byte ptr [rdx], 0x5f
0x425a8f:	jne	0x425d4d
0x425a95:	inc	rdx
0x425a98:	xor	ebx, ebx
0x425a9a:	mov	qword ptr [rbp + 0x18], rdx
0x425a9e:	jmp	0x425d4d
0x425aa3:	mov	r11, qword ptr [rbp + 0x18]
0x425aa7:	xor	ebx, ebx
0x425aa9:	cmp	byte ptr [r11], 0x5f
0x425aad:	jne	0x425ac8
0x425aaf:	inc	r11
0x425ab2:	mov	esi, 0x45
0x425ab7:	mov	rdi, rbp
0x425aba:	mov	qword ptr [rbp + 0x18], r11
0x425abe:	call	0x427845
0x425ac3:	mov	rdx, rax
0x425ac6:	jmp	0x425aea
0x425ac8:	mov	rdi, rbp
0x425acb:	call	0x42571f
0x425ad0:	mov	rdx, rax
0x425ad3:	test	ebx, ebx
0x425ad5:	je	0x425aea
0x425ad7:	mov	rcx, rdx
0x425ada:	mov	esi, 0x39
0x425adf:	mov	rdi, rbp
0x425ae2:	call	0x424cee
0x425ae7:	mov	rdx, rax
0x425aea:	mov	rcx, rdx
0x425aed:	mov	esi, 0x37
0x425af2:	mov	rdx, r12
0x425af5:	mov	rdi, rbp
0x425af8:	jmp	0x425d3e
0x425afd:	mov	rdi, qword ptr [r12 + 0x10]
0x425b02:	call	0x4252bc
0x425b07:	test	eax, eax
0x425b09:	je	0x425b18
0x425b0b:	mov	rdi, rbp
0x425b0e:	call	0x425e9b
0x425b13:	mov	r14, rax
0x425b16:	jmp	0x425b52
0x425b18:	cmp	byte ptr [r13], 0x66
0x425b1d:	jne	0x425b2c
0x425b1f:	mov	rdi, rbp
0x425b22:	call	0x426642
0x425b27:	mov	r14, rax
0x425b2a:	jmp	0x425b52
0x425b2c:	mov	rdi, r13
0x425b2f:	mov	esi, 0x45bb14
0x425b34:	call	0x403be0
0x425b39:	mov	rdi, rbp
0x425b3c:	test	eax, eax
0x425b3e:	jne	0x425b4a
0x425b40:	call	0x426859
0x425b45:	mov	r14, rax
0x425b48:	jmp	0x425b52
0x425b4a:	call	0x42571f
0x425b4f:	mov	r14, rax
0x425b52:	mov	esi, 0x4cd643
0x425b57:	mov	rdi, r13
0x425b5a:	call	0x403be0
0x425b5f:	test	eax, eax
0x425b61:	jne	0x425b78
0x425b63:	mov	esi, 0x45
0x425b68:	mov	rdi, rbp
0x425b6b:	call	0x427845
0x425b70:	mov	r13, rax
0x425b73:	jmp	0x425bfb
0x425b78:	mov	esi, 0x4cd851
0x425b7d:	mov	rdi, r13
0x425b80:	call	0x403be0
0x425b85:	test	eax, eax
0x425b87:	je	0x425b9a
0x425b89:	mov	esi, 0x45d136
0x425b8e:	mov	rdi, r13
0x425b91:	call	0x403be0
0x425b96:	test	eax, eax
0x425b98:	jne	0x425bbb
0x425b9a:	mov	rsi, qword ptr [rbp + 0x18]
0x425b9e:	mov	dil, byte ptr [rsi]
0x425ba1:	cmp	dil, 0x67
0x425ba5:	jne	0x425baf
0x425ba7:	cmp	byte ptr [rsi + 1], 0x73
0x425bab:	jne	0x425bc8
0x425bad:	jmp	0x425bbb
0x425baf:	cmp	dil, 0x73
0x425bb3:	jne	0x425bc8
0x425bb5:	cmp	byte ptr [rsi + 1], 0x72
0x425bb9:	jne	0x425bc8
0x425bbb:	mov	rdi, rbp
0x425bbe:	call	0x42571f
0x425bc3:	mov	r13, rax
0x425bc6:	jmp	0x425bfb
0x425bc8:	mov	rdi, rbp
0x425bcb:	call	0x426859
0x425bd0:	mov	r8, qword ptr [rbp + 0x18]
0x425bd4:	mov	r13, rax
0x425bd7:	cmp	byte ptr [r8], 0x49
0x425bdb:	jne	0x425bfb
0x425bdd:	mov	rdi, rbp
0x425be0:	call	0x425e7e
0x425be5:	mov	rdx, r13
0x425be8:	mov	esi, 4
0x425bed:	mov	rdi, rbp
0x425bf0:	mov	rcx, rax
0x425bf3:	call	0x424cee
0x425bf8:	mov	r13, rax
0x425bfb:	mov	rcx, r13
0x425bfe:	mov	rdx, r14
0x425c01:	mov	esi, 0x39
0x425c06:	mov	rdi, rbp
0x425c09:	call	0x424cee
0x425c0e:	mov	rdx, r12
0x425c11:	mov	esi, 0x38
0x425c16:	mov	rcx, rax
0x425c19:	jmp	0x425d3e
0x425c1e:	mov	esi, 0x4cd646
0x425c23:	mov	rdi, r13
0x425c26:	call	0x403be0
0x425c2b:	test	eax, eax
0x425c2d:	je	0x425c40
0x425c2f:	mov	esi, 0x4cd81f
0x425c34:	mov	rdi, r13
0x425c37:	call	0x403be0
0x425c3c:	test	eax, eax
0x425c3e:	jne	0x425c4a
0x425c40:	mov	rdi, rbp
0x425c43:	call	0x42571f
0x425c48:	jmp	0x425c5c
0x425c4a:	mov	r9b, byte ptr [r13]
0x425c4e:	cmp	r9b, 0x66
0x425c52:	jne	0x425c80
0x425c54:	mov	rdi, rbp
0x425c57:	call	0x426642
0x425c5c:	mov	rdi, rbp
0x425c5f:	mov	rbx, rax
0x425c62:	call	0x42571f
0x425c67:	mov	rdi, rbp
0x425c6a:	mov	r14, rax
0x425c6d:	call	0x42571f
0x425c72:	test	rax, rax
0x425c75:	jne	0x425d10
0x425c7b:	jmp	0x425a14
0x425c80:	cmp	r9b, 0x6e
0x425c84:	jne	0x425a14
0x425c8a:	mov	r10b, byte ptr [r13 + 1]
0x425c8e:	cmp	r10b, 0x77
0x425c92:	je	0x425c9e
0x425c94:	cmp	r10b, 0x61
0x425c98:	jne	0x425a14
0x425c9e:	mov	esi, 0x5f
0x425ca3:	mov	rdi, rbp
0x425ca6:	call	0x427845
0x425cab:	mov	rdi, rbp
0x425cae:	mov	rbx, rax
0x425cb1:	call	0x425e9b
0x425cb6:	mov	r11, qword ptr [rbp + 0x18]
0x425cba:	mov	r14, rax
0x425cbd:	mov	al, byte ptr [r11]
0x425cc0:	cmp	al, 0x45
0x425cc2:	jne	0x425ccf
0x425cc4:	inc	r11
0x425cc7:	xor	eax, eax
0x425cc9:	mov	qword ptr [rbp + 0x18], r11
0x425ccd:	jmp	0x425d10
0x425ccf:	cmp	al, 0x70
0x425cd1:	jne	0x425cf5
0x425cd3:	cmp	byte ptr [r11 + 1], 0x69
0x425cd8:	jne	0x425a14
0x425cde:	add	r11, 2
0x425ce2:	mov	esi, 0x45
0x425ce7:	mov	rdi, rbp
0x425cea:	mov	qword ptr [rbp + 0x18], r11
0x425cee:	call	0x427845
0x425cf3:	jmp	0x425d10
0x425cf5:	cmp	al, 0x69
0x425cf7:	jne	0x425a14
0x425cfd:	cmp	byte ptr [r11 + 1], 0x6c
0x425d02:	jne	0x425a14
0x425d08:	mov	rdi, rbp
0x425d0b:	call	0x42571f
0x425d10:	mov	rcx, rax
0x425d13:	mov	rdx, r14
0x425d16:	mov	esi, 0x3c
0x425d1b:	mov	rdi, rbp
0x425d1e:	call	0x424cee
0x425d23:	mov	rdx, rbx
0x425d26:	mov	esi, 0x3b
0x425d2b:	mov	rcx, rax
0x425d2e:	call	0x424cee
0x425d33:	mov	rdx, r12
0x425d36:	mov	esi, 0x3a
0x425d3b:	mov	rcx, rax
0x425d3e:	pop	rbx
0x425d3f:	pop	rbp
0x425d40:	pop	r12
0x425d42:	pop	r13
0x425d44:	pop	r14
0x425d46:	jmp	0x424cee
0x425d4b:	xor	ebx, ebx
0x425d4d:	mov	esi, 0x4cd8ef
0x425d52:	mov	rdi, r13
0x425d55:	call	0x403be0
0x425d5a:	test	eax, eax
0x425d5c:	jne	0x425ac8
0x425d62:	mov	rdi, rbp
0x425d65:	call	0x425de9
0x425d6a:	mov	rdx, rax
0x425d6d:	jmp	0x425ad3
0x425d72:	mov	rax, rbx
0x425d75:	pop	rbx
0x425d76:	pop	rbp
0x425d77:	pop	r12
0x425d79:	pop	r13
0x425d7b:	pop	r14
0x425d7d:	ret	
0x425d7e:	push	rbp
0x425d7f:	mov	rbp, rdi
0x425d82:	push	rbx
0x425d83:	push	r9
0x425d85:	mov	rdx, qword ptr [rdi + 0x18]
0x425d89:	mov	al, byte ptr [rdx]
0x425d8b:	cmp	al, 0x4c
0x425d8d:	je	0x425dcf
0x425d8f:	jg	0x425da0
0x425d91:	sub	eax, 0x49
0x425d94:	cmp	al, 1
0x425d96:	ja	0x425dd8
0x425d98:	pop	rsi
0x425d99:	pop	rbx
0x425d9a:	pop	rbp
0x425d9b:	jmp	0x425e7e
0x425da0:	cmp	al, 0x58
0x425da2:	jne	0x425dd8
0x425da4:	inc	rdx
0x425da7:	mov	ebx, dword ptr [rdi + 0x4c]
0x425daa:	mov	dword ptr [rdi + 0x4c], 1
0x425db1:	mov	qword ptr [rdi + 0x18], rdx
0x425db5:	call	0x42571f
0x425dba:	mov	rcx, qword ptr [rbp + 0x18]
0x425dbe:	mov	dword ptr [rbp + 0x4c], ebx
0x425dc1:	cmp	byte ptr [rcx], 0x45
0x425dc4:	jne	0x425de3
0x425dc6:	inc	rcx
0x425dc9:	mov	qword ptr [rbp + 0x18], rcx
0x425dcd:	jmp	0x425de5
0x425dcf:	pop	r8
0x425dd1:	pop	rbx
0x425dd2:	pop	rbp
0x425dd3:	jmp	0x425601
0x425dd8:	pop	rcx
0x425dd9:	mov	rdi, rbp
0x425ddc:	pop	rbx
0x425ddd:	pop	rbp
0x425dde:	jmp	0x425e9b
0x425de3:	xor	eax, eax
0x425de5:	pop	rdx
0x425de6:	pop	rbx
0x425de7:	pop	rbp
0x425de8:	ret	
0x425de9:	push	r12
0x425deb:	push	rbp
0x425dec:	mov	rbp, rdi
0x425def:	push	rbx
0x425df0:	sub	rsp, 0x10
0x425df4:	mov	rax, qword ptr [rdi + 0x18]
0x425df8:	mov	rbx, qword ptr [rdi + 0x40]
0x425dfc:	cmp	byte ptr [rax], 0x45
0x425dff:	jne	0x425e1e
0x425e01:	inc	rax
0x425e04:	xor	ecx, ecx
0x425e06:	xor	edx, edx
0x425e08:	mov	esi, 0x2f
0x425e0d:	mov	qword ptr [rdi + 0x18], rax
0x425e11:	add	rsp, 0x10
0x425e15:	pop	rbx
0x425e16:	pop	rbp
0x425e17:	pop	r12
0x425e19:	jmp	0x424cee
0x425e1e:	mov	qword ptr [rsp + 8], 0
0x425e27:	lea	r12, [rsp + 8]
0x425e2c:	mov	rdi, rbp
0x425e2f:	call	0x425d7e
0x425e34:	mov	rdx, rax
0x425e37:	test	rax, rax
0x425e3a:	jne	0x425e40
0x425e3c:	xor	eax, eax
0x425e3e:	jmp	0x425e75
0x425e40:	xor	ecx, ecx
0x425e42:	mov	esi, 0x2f
0x425e47:	mov	rdi, rbp
0x425e4a:	call	0x424cee
0x425e4f:	mov	qword ptr [r12], rax
0x425e53:	test	rax, rax
0x425e56:	je	0x425e3c
0x425e58:	mov	rdx, qword ptr [rbp + 0x18]
0x425e5c:	lea	r12, [rax + 0x18]
0x425e60:	cmp	byte ptr [rdx], 0x45
0x425e63:	jne	0x425e2c
0x425e65:	inc	rdx
0x425e68:	mov	qword ptr [rbp + 0x40], rbx
0x425e6c:	mov	rax, qword ptr [rsp + 8]
0x425e71:	mov	qword ptr [rbp + 0x18], rdx
0x425e75:	add	rsp, 0x10
0x425e79:	pop	rbx
0x425e7a:	pop	rbp
0x425e7b:	pop	r12
0x425e7d:	ret	
0x425e7e:	mov	rax, qword ptr [rdi + 0x18]
0x425e82:	mov	cl, byte ptr [rax]
0x425e84:	lea	edx, [rcx - 0x49]
0x425e87:	cmp	dl, 1
0x425e8a:	ja	0x425e98
0x425e8c:	inc	rax
0x425e8f:	mov	qword ptr [rdi + 0x18], rax
0x425e93:	jmp	0x425de9
0x425e98:	xor	eax, eax
0x425e9a:	ret	
0x425e9b:	push	r15
0x425e9d:	push	r14
0x425e9f:	push	r13
0x425ea1:	push	r12
0x425ea3:	push	rbp
0x425ea4:	mov	rbp, rdi
0x425ea7:	push	rbx
0x425ea8:	sub	rsp, 0x18
0x425eac:	mov	r9, qword ptr [rdi + 0x18]
0x425eb0:	mov	rdi, r9
0x425eb3:	call	0x4252e3
0x425eb8:	test	eax, eax
0x425eba:	je	0x425f59
0x425ec0:	xor	edx, edx
0x425ec2:	lea	rsi, [rsp + 8]
0x425ec7:	mov	rdi, rbp
0x425eca:	call	0x426d2e
0x425ecf:	mov	r12, rax
0x425ed2:	test	rax, rax
0x425ed5:	je	0x425fd6
0x425edb:	mov	rdx, qword ptr [rbp + 0x18]
0x425edf:	mov	rdi, rbp
0x425ee2:	cmp	byte ptr [rdx], 0x46
0x425ee5:	jne	0x425eee
0x425ee7:	call	0x4277d3
0x425eec:	jmp	0x425ef3
0x425eee:	call	0x425e9b
0x425ef3:	mov	qword ptr [r12], rax
0x425ef7:	test	rax, rax
0x425efa:	je	0x425fd6
0x425f00:	mov	r9d, dword ptr [rax]
0x425f03:	lea	esi, [r9 - 0x1f]
0x425f07:	cmp	esi, 1
0x425f0a:	ja	0x425f26
0x425f0c:	mov	rdi, qword ptr [rsp + 8]
0x425f11:	mov	rbx, qword ptr [rax + 0x10]
0x425f15:	mov	qword ptr [rax + 0x10], rdi
0x425f19:	mov	rax, qword ptr [r12]
0x425f1d:	mov	qword ptr [rsp + 8], rax
0x425f22:	mov	qword ptr [r12], rbx
0x425f26:	mov	rax, qword ptr [rsp + 8]
0x425f2b:	test	rax, rax
0x425f2e:	je	0x425fd6
0x425f34:	mov	r15d, dword ptr [rbp + 0x38]
0x425f38:	cmp	r15d, dword ptr [rbp + 0x3c]
0x425f3c:	jge	0x425fd6
0x425f42:	mov	rcx, qword ptr [rbp + 0x30]
0x425f46:	movsxd	r8, r15d
0x425f49:	inc	r15d
0x425f4c:	mov	qword ptr [rcx + r8*8], rax
0x425f50:	mov	dword ptr [rbp + 0x38], r15d
0x425f54:	jmp	0x426633
0x425f59:	mov	al, byte ptr [r9]
0x425f5c:	cmp	al, 0x55
0x425f5e:	jg	0x425f78
0x425f60:	cmp	al, 0x2f
0x425f62:	jle	0x425fd6
0x425f64:	sub	eax, 0x30
0x425f67:	cmp	al, 0x25
0x425f69:	ja	0x425fd6
0x425f6b:	movzx	r10d, al
0x425f6f:	notrack jmp	qword ptr ds:[r10*8 + 0x4ca098]
0x425f78:	lea	ecx, [rax - 0x5a]
0x425f7b:	cmp	cl, 0x20
0x425f7e:	ja	0x425fd6
0x425f80:	mov	edx, 1
0x425f85:	mov	esi, 0x3ec7bff
0x425f8a:	shl	rdx, cl
0x425f8d:	shl	rsi, 7
0x425f91:	test	rdx, rsi
0x425f94:	jne	0x425fdd
0x425f96:	and	dl, 1
0x425f99:	jne	0x426051
0x425f9f:	cmp	cl, 0x1b
0x425fa2:	jne	0x425fd6
0x425fa4:	jmp	0x426014
0x425fa6:	mov	rdi, rbp
0x425fa9:	call	0x424fce
0x425fae:	mov	rbx, qword ptr [rbp + 0x18]
0x425fb2:	mov	qword ptr [rsp + 8], rax
0x425fb7:	mov	r12, rax
0x425fba:	cmp	byte ptr [rbx], 0x49
0x425fbd:	jne	0x4265f0
0x425fc3:	cmp	dword ptr [rbp + 0x50], 0
0x425fc7:	jne	0x42615c
0x425fcd:	test	rax, rax
0x425fd0:	jne	0x42613b
0x425fd6:	xor	eax, eax
0x425fd8:	jmp	0x426633
0x425fdd:	lea	ebx, [rax - 0x61]
0x425fe0:	mov	rdi, rbp
0x425fe3:	inc	r9
0x425fe6:	movsx	rsi, bl
0x425fea:	shl	rsi, 5
0x425fee:	add	rsi, 0x4cb320
0x425ff5:	call	0x424e11
0x425ffa:	mov	rdi, qword ptr [rax + 0x10]
0x425ffe:	mov	qword ptr [rsp + 8], rax
0x426003:	mov	r8d, dword ptr [rdi + 8]
0x426007:	mov	qword ptr [rbp + 0x18], r9
0x42600b:	add	dword ptr [rbp + 0x48], r8d
0x42600f:	jmp	0x42661f
0x426014:	inc	r9
0x426017:	mov	rdi, rbp
0x42601a:	mov	qword ptr [rbp + 0x18], r9
0x42601e:	call	0x425339
0x426023:	xor	ecx, ecx
0x426025:	mov	esi, 0x28
0x42602a:	mov	rdi, rbp
0x42602d:	mov	rdx, rax
0x426030:	call	0x424cee
0x426035:	mov	qword ptr [rsp + 8], rax
0x42603a:	jmp	0x4265f0
0x42603f:	mov	rdi, rbp
0x426042:	call	0x4277d3
0x426047:	mov	qword ptr [rsp + 8], rax
0x42604c:	jmp	0x4265f0
0x426051:	mov	rdi, rbp
0x426054:	call	0x427535
0x426059:	mov	qword ptr [rsp + 8], rax
0x42605e:	jmp	0x4265f0
0x426063:	lea	rsi, [r9 + 1]
0x426067:	mov	qword ptr [rbp + 0x18], rsi
0x42606b:	mov	al, byte ptr [r9 + 1]
0x42606f:	cmp	al, 0x5f
0x426071:	je	0x4260c5
0x426073:	sub	eax, 0x30
0x426076:	cmp	al, 9
0x426078:	ja	0x4260a6
0x42607a:	mov	rdx, qword ptr [rbp + 0x18]
0x42607e:	lea	rdi, [rdx + 1]
0x426082:	mov	qword ptr [rbp + 0x18], rdi
0x426086:	mov	cl, byte ptr [rdx + 1]
0x426089:	sub	ecx, 0x30
0x42608c:	cmp	cl, 9
0x42608f:	jbe	0x42607a
0x426091:	sub	edx, r9d
0x426094:	mov	rdi, rbp
0x426097:	call	0x424dcf
0x42609c:	mov	r15, rax
0x42609f:	test	rax, rax
0x4260a2:	jne	0x4260c8
0x4260a4:	jmp	0x42610d
0x4260a6:	mov	ebx, dword ptr [rbp + 0x4c]
0x4260a9:	mov	dword ptr [rbp + 0x4c], 1
0x4260b0:	mov	rdi, rbp
0x4260b3:	call	0x42571f
0x4260b8:	mov	dword ptr [rbp + 0x4c], ebx
0x4260bb:	mov	r15, rax
0x4260be:	test	rax, rax
0x4260c1:	jne	0x4260c8
0x4260c3:	jmp	0x42610d
0x4260c5:	xor	r15d, r15d
0x4260c8:	mov	r8, qword ptr [rbp + 0x18]
0x4260cc:	cmp	byte ptr [r8], 0x5f
0x4260d0:	jne	0x42610d
0x4260d2:	inc	r8
0x4260d5:	mov	rdi, rbp
0x4260d8:	mov	qword ptr [rbp + 0x18], r8
0x4260dc:	call	0x425e9b
0x4260e1:	mov	rdx, r15
0x4260e4:	mov	esi, 0x2a
0x4260e9:	mov	rdi, rbp
0x4260ec:	mov	rcx, rax
0x4260ef:	call	0x424cee
0x4260f4:	jmp	0x426131
0x4260f6:	inc	r9
0x4260f9:	mov	rdi, rbp
0x4260fc:	mov	qword ptr [rbp + 0x18], r9
0x426100:	call	0x425e9b
0x426105:	mov	rbx, rax
0x426108:	test	rax, rax
0x42610b:	jne	0x426111
0x42610d:	xor	eax, eax
0x42610f:	jmp	0x426131
0x426111:	mov	rdi, rbp
0x426114:	call	0x425e9b
0x426119:	mov	rcx, rax
0x42611c:	test	rax, rax
0x42611f:	je	0x42610d
0x426121:	mov	rdx, rbx
0x426124:	mov	esi, 0x2b
0x426129:	mov	rdi, rbp
0x42612c:	call	0x424cee
0x426131:	mov	qword ptr [rsp + 8], rax
0x426136:	jmp	0x4265f0
0x42613b:	mov	edi, dword ptr [rbp + 0x38]
0x42613e:	cmp	edi, dword ptr [rbp + 0x3c]
0x426141:	jge	0x425fd6
0x426147:	mov	r8, qword ptr [rbp + 0x30]
0x42614b:	movsxd	rcx, edi
0x42614e:	inc	edi
0x426150:	mov	qword ptr [r8 + rcx*8], rax
0x426154:	mov	dword ptr [rbp + 0x38], edi
0x426157:	jmp	0x4261f7
0x42615c:	mov	rdi, rbp
0x42615f:	mov	r15d, dword ptr [rbp + 0x28]
0x426163:	mov	r14d, dword ptr [rbp + 0x38]
0x426167:	mov	r13d, dword ptr [rbp + 0x48]
0x42616b:	call	0x425e7e
0x426170:	mov	r9, qword ptr [rbp + 0x18]
0x426174:	mov	rcx, rax
0x426177:	cmp	byte ptr [r9], 0x49
0x42617b:	jne	0x4261a4
0x42617d:	test	r12, r12
0x426180:	je	0x425fd6
0x426186:	mov	edx, dword ptr [rbp + 0x38]
0x426189:	cmp	edx, dword ptr [rbp + 0x3c]
0x42618c:	jge	0x425fd6
0x426192:	mov	rax, qword ptr [rbp + 0x30]
0x426196:	movsxd	rsi, edx
0x426199:	inc	edx
0x42619b:	mov	qword ptr [rax + rsi*8], r12
0x42619f:	mov	dword ptr [rbp + 0x38], edx
0x4261a2:	jmp	0x426202
0x4261a4:	mov	qword ptr [rbp + 0x18], rbx
0x4261a8:	mov	dword ptr [rbp + 0x28], r15d
0x4261ac:	mov	dword ptr [rbp + 0x38], r14d
0x4261b0:	mov	dword ptr [rbp + 0x48], r13d
0x4261b4:	jmp	0x4265f0
0x4261b9:	mov	r10b, byte ptr [r9 + 1]
0x4261bd:	lea	r12d, [r10 - 0x30]
0x4261c1:	cmp	r12b, 9
0x4261c5:	jbe	0x4261d7
0x4261c7:	cmp	r10b, 0x5f
0x4261cb:	je	0x4261d7
0x4261cd:	sub	r10d, 0x41
0x4261d1:	cmp	r10b, 0x19
0x4261d5:	ja	0x42621c
0x4261d7:	xor	esi, esi
0x4261d9:	mov	rdi, rbp
0x4261dc:	call	0x425429
0x4261e1:	mov	r11, qword ptr [rbp + 0x18]
0x4261e5:	mov	qword ptr [rsp + 8], rax
0x4261ea:	mov	r12, rax
0x4261ed:	cmp	byte ptr [r11], 0x49
0x4261f1:	jne	0x42661f
0x4261f7:	mov	rdi, rbp
0x4261fa:	call	0x425e7e
0x4261ff:	mov	rcx, rax
0x426202:	mov	rdx, r12
0x426205:	mov	esi, 4
0x42620a:	mov	rdi, rbp
0x42620d:	call	0x424cee
0x426212:	mov	qword ptr [rsp + 8], rax
0x426217:	jmp	0x4265f0
0x42621c:	mov	rdi, rbp
0x42621f:	call	0x427535
0x426224:	mov	qword ptr [rsp + 8], rax
0x426229:	test	rax, rax
0x42622c:	je	0x4265f0
0x426232:	cmp	dword ptr [rax], 0x18
0x426235:	jne	0x4265f0
0x42623b:	jmp	0x42661f
0x426240:	inc	r9
0x426243:	mov	rdi, rbp
0x426246:	mov	qword ptr [rbp + 0x18], r9
0x42624a:	call	0x425e9b
0x42624f:	xor	ecx, ecx
0x426251:	mov	esi, 0x24
0x426256:	mov	rdi, rbp
0x426259:	mov	rdx, rax
0x42625c:	call	0x424cee
0x426261:	mov	qword ptr [rsp + 8], rax
0x426266:	jmp	0x4265f0
0x42626b:	inc	r9
0x42626e:	mov	rdi, rbp
0x426271:	mov	qword ptr [rbp + 0x18], r9
0x426275:	call	0x425e9b
0x42627a:	xor	ecx, ecx
0x42627c:	mov	esi, 0x22
0x426281:	mov	rdi, rbp
0x426284:	mov	rdx, rax
0x426287:	call	0x424cee
0x42628c:	mov	qword ptr [rsp + 8], rax
0x426291:	jmp	0x4265f0
0x426296:	inc	r9
0x426299:	mov	rdi, rbp
0x42629c:	mov	qword ptr [rbp + 0x18], r9
0x4262a0:	call	0x425e9b
0x4262a5:	xor	ecx, ecx
0x4262a7:	mov	esi, 0x23
0x4262ac:	mov	rdi, rbp
0x4262af:	mov	rdx, rax
0x4262b2:	call	0x424cee
0x4262b7:	mov	qword ptr [rsp + 8], rax
0x4262bc:	jmp	0x4265f0
0x4262c1:	inc	r9
0x4262c4:	mov	rdi, rbp
0x4262c7:	mov	qword ptr [rbp + 0x18], r9
0x4262cb:	call	0x425e9b
0x4262d0:	xor	ecx, ecx
0x4262d2:	mov	esi, 0x25
0x4262d7:	mov	rdi, rbp
0x4262da:	mov	rdx, rax
0x4262dd:	call	0x424cee
0x4262e2:	mov	qword ptr [rsp + 8], rax
0x4262e7:	jmp	0x4265f0
0x4262ec:	inc	r9
0x4262ef:	mov	rdi, rbp
0x4262f2:	mov	qword ptr [rbp + 0x18], r9
0x4262f6:	call	0x425e9b
0x4262fb:	xor	ecx, ecx
0x4262fd:	mov	esi, 0x26
0x426302:	mov	rdi, rbp
0x426305:	mov	rdx, rax
0x426308:	call	0x424cee
0x42630d:	mov	qword ptr [rsp + 8], rax
0x426312:	jmp	0x4265f0
0x426317:	inc	r9
0x42631a:	mov	rdi, rbp
0x42631d:	mov	qword ptr [rbp + 0x18], r9
0x426321:	call	0x425339
0x426326:	mov	r11, qword ptr [rbp + 0x18]
0x42632a:	mov	qword ptr [rsp + 8], rax
0x42632f:	mov	r12, rax
0x426332:	cmp	byte ptr [r11], 0x49
0x426336:	jne	0x426358
0x426338:	mov	rdi, rbp
0x42633b:	call	0x425e7e
0x426340:	mov	rdx, r12
0x426343:	mov	esi, 4
0x426348:	mov	rdi, rbp
0x42634b:	mov	rcx, rax
0x42634e:	call	0x424cee
0x426353:	mov	qword ptr [rsp + 8], rax
0x426358:	mov	r13, qword ptr [rsp + 8]
0x42635d:	mov	rdi, rbp
0x426360:	call	0x425e9b
0x426365:	mov	esi, 0x21
0x42636a:	mov	rdi, rbp
0x42636d:	mov	rdx, rax
0x426370:	mov	rcx, r13
0x426373:	call	0x424cee
0x426378:	mov	qword ptr [rsp + 8], rax
0x42637d:	jmp	0x4265f0
0x426382:	lea	r15, [r9 + 1]
0x426386:	mov	qword ptr [rbp + 0x18], r15
0x42638a:	cmp	byte ptr [r9 + 1], 0
0x42638f:	je	0x425fd6
0x426395:	lea	r14, [r9 + 2]
0x426399:	mov	qword ptr [rbp + 0x18], r14
0x42639d:	mov	r13b, byte ptr [r9 + 1]
0x4263a1:	cmp	r13b, 0x46
0x4263a5:	je	0x4264d0
0x4263ab:	sub	r13d, 0x54
0x4263af:	cmp	r13b, 0x22
0x4263b3:	ja	0x425fd6
0x4263b9:	movzx	r11d, r13b
0x4263bd:	notrack jmp	qword ptr ds:[r11*8 + 0x4ca1c8]
0x4263c6:	mov	r12d, dword ptr [rbp + 0x4c]
0x4263ca:	mov	dword ptr [rbp + 0x4c], 1
0x4263d1:	mov	rdi, rbp
0x4263d4:	call	0x42571f
0x4263d9:	mov	dword ptr [rbp + 0x4c], r12d
0x4263dd:	xor	ecx, ecx
0x4263df:	mov	esi, 0x44
0x4263e4:	mov	rdx, rax
0x4263e7:	mov	rdi, rbp
0x4263ea:	call	0x424cee
0x4263ef:	mov	qword ptr [rsp + 8], rax
0x4263f4:	test	rax, rax
0x4263f7:	je	0x4265f0
0x4263fd:	mov	r9, qword ptr [rbp + 0x18]
0x426401:	cmp	byte ptr [r9], 0
0x426405:	jne	0x426415
0x426407:	mov	qword ptr [rsp + 8], 0
0x426410:	jmp	0x4265f0
0x426415:	lea	rsi, [r9 + 1]
0x426419:	mov	qword ptr [rbp + 0x18], rsi
0x42641d:	cmp	byte ptr [r9], 0x45
0x426421:	jne	0x426407
0x426423:	jmp	0x4265f0
0x426428:	mov	rdi, rbp
0x42642b:	call	0x425e9b
0x426430:	xor	ecx, ecx
0x426432:	mov	esi, 0x4c
0x426437:	mov	rdi, rbp
0x42643a:	mov	rdx, rax
0x42643d:	call	0x424cee
0x426442:	mov	qword ptr [rsp + 8], rax
0x426447:	jmp	0x4265f0
0x42644c:	mov	edx, 4
0x426451:	mov	esi, 0x4be407
0x426456:	mov	rdi, rbp
0x426459:	call	0x424dcf
0x42645e:	mov	qword ptr [rsp + 8], rax
0x426463:	jmp	0x42661f
0x426468:	mov	edx, 0xe
0x42646d:	mov	esi, 0x4cd4a6
0x426472:	mov	rdi, rbp
0x426475:	call	0x424dcf
0x42647a:	mov	qword ptr [rsp + 8], rax
0x42647f:	jmp	0x42661f
0x426484:	mov	esi, 0x4cb660
0x426489:	jmp	0x426490
0x42648b:	mov	esi, 0x4cb680
0x426490:	mov	rdi, rbp
0x426493:	call	0x424e11
0x426498:	mov	qword ptr [rsp + 8], rax
0x42649d:	mov	r13, qword ptr [rax + 0x10]
0x4264a1:	mov	edx, dword ptr [r13 + 8]
0x4264a5:	add	dword ptr [rbp + 0x48], edx
0x4264a8:	jmp	0x42661f
0x4264ad:	mov	esi, 0x4cb6a0
0x4264b2:	jmp	0x426490
0x4264b4:	mov	esi, 0x4cb6c0
0x4264b9:	jmp	0x426490
0x4264bb:	mov	esi, 0x4cb6e0
0x4264c0:	jmp	0x426490
0x4264c2:	mov	esi, 0x4cb700
0x4264c7:	jmp	0x426490
0x4264c9:	mov	esi, 0x4cb720
0x4264ce:	jmp	0x426490
0x4264d0:	mov	edx, dword ptr [rbp + 0x28]
0x4264d3:	cmp	edx, dword ptr [rbp + 0x2c]
0x4264d6:	jge	0x426626
0x4264dc:	movsxd	r12, edx
0x4264df:	inc	edx
0x4264e1:	shl	r12, 5
0x4264e5:	add	r12, qword ptr [rbp + 0x20]
0x4264e9:	mov	qword ptr [r12 + 4], 0
0x4264f2:	mov	dword ptr [rbp + 0x28], edx
0x4264f5:	mov	dword ptr [r12], 0x2c
0x4264fd:	mov	r9b, byte ptr [r9 + 2]
0x426501:	mov	qword ptr [rsp + 8], r12
0x426506:	sub	r9d, 0x30
0x42650a:	cmp	r9b, 9
0x42650e:	setbe	sil
0x426512:	movzx	eax, sil
0x426516:	mov	word ptr [r12 + 0x18], ax
0x42651c:	ja	0x426526
0x42651e:	mov	rdi, rbp
0x426521:	call	0x424e3e
0x426526:	mov	rdi, rbp
0x426529:	call	0x425e9b
0x42652e:	mov	qword ptr [r12 + 0x10], rax
0x426533:	test	rax, rax
0x426536:	je	0x425fd6
0x42653c:	mov	rdi, rbp
0x42653f:	call	0x424e3e
0x426544:	mov	rdi, qword ptr [rbp + 0x18]
0x426548:	mov	r8b, byte ptr [rdi]
0x42654b:	test	r8b, r8b
0x42654e:	je	0x42655b
0x426550:	lea	rcx, [rdi + 1]
0x426554:	mov	qword ptr [rbp + 0x18], rcx
0x426558:	mov	r8b, byte ptr [rdi]
0x42655b:	cmp	r8b, 0x73
0x42655f:	sete	bpl
0x426563:	movzx	r10d, bpl
0x426567:	mov	word ptr [r12 + 0x1a], r10w
0x42656d:	jmp	0x42661f
0x426572:	cmp	byte ptr [r9 + 2], 0x5f
0x426577:	jne	0x42659b
0x426579:	add	r9, 3
0x42657d:	mov	ebx, dword ptr [rbp + 0x4c]
0x426580:	mov	dword ptr [rbp + 0x4c], 1
0x426587:	mov	rdi, rbp
0x42658a:	mov	qword ptr [rbp + 0x18], r9
0x42658e:	call	0x42571f
0x426593:	mov	dword ptr [rbp + 0x4c], ebx
0x426596:	mov	r14, rax
0x426599:	jmp	0x4265a6
0x42659b:	mov	rdi, rbp
0x42659e:	call	0x424eae
0x4265a3:	mov	r14, rax
0x4265a6:	test	r14, r14
0x4265a9:	je	0x4265df
0x4265ab:	mov	r15, qword ptr [rbp + 0x18]
0x4265af:	cmp	byte ptr [r15], 0x5f
0x4265b3:	jne	0x4265dc
0x4265b5:	inc	r15
0x4265b8:	mov	rdi, rbp
0x4265bb:	mov	qword ptr [rbp + 0x18], r15
0x4265bf:	call	0x425e9b
0x4265c4:	mov	rdx, r14
0x4265c7:	mov	esi, 0x2d
0x4265cc:	mov	rdi, rbp
0x4265cf:	mov	rcx, rax
0x4265d2:	call	0x424cee
0x4265d7:	mov	r14, rax
0x4265da:	jmp	0x4265df
0x4265dc:	xor	r14d, r14d
0x4265df:	mov	qword ptr [rsp + 8], r14
0x4265e4:	jmp	0x4265f0
0x4265e6:	mov	esi, 0x4cb740
0x4265eb:	jmp	0x426490
0x4265f0:	mov	r10, qword ptr [rsp + 8]
0x4265f5:	test	r10, r10
0x4265f8:	je	0x425fd6
0x4265fe:	mov	r11d, dword ptr [rbp + 0x38]
0x426602:	cmp	r11d, dword ptr [rbp + 0x3c]
0x426606:	jge	0x425fd6
0x42660c:	mov	r13, qword ptr [rbp + 0x30]
0x426610:	movsxd	r14, r11d
0x426613:	inc	r11d
0x426616:	mov	qword ptr [r13 + r14*8], r10
0x42661b:	mov	dword ptr [rbp + 0x38], r11d
0x42661f:	mov	rax, qword ptr [rsp + 8]
0x426624:	jmp	0x426633
0x426626:	mov	dword ptr [0], 0
0x426631:	ud2	
0x426633:	add	rsp, 0x18
0x426637:	pop	rbx
0x426638:	pop	rbp
0x426639:	pop	r12
0x42663b:	pop	r13
0x42663d:	pop	r14
0x42663f:	pop	r15
0x426641:	ret	
0x426642:	push	rbp
0x426643:	push	rbx
0x426644:	mov	rbx, rdi
0x426647:	push	rcx
0x426648:	mov	rax, qword ptr [rdi + 0x18]
0x42664c:	mov	cl, byte ptr [rax]
0x42664e:	test	cl, cl
0x426650:	je	0x42665c
0x426652:	lea	rdx, [rax + 1]
0x426656:	mov	qword ptr [rdi + 0x18], rdx
0x42665a:	mov	cl, byte ptr [rax]
0x42665c:	mov	rdi, qword ptr [rbx + 0x18]
0x426660:	mov	sil, byte ptr [rdi]
0x426663:	test	sil, sil
0x426666:	je	0x42672d
0x42666c:	lea	rsi, [rdi + 1]
0x426670:	mov	qword ptr [rbx + 0x18], rsi
0x426674:	mov	sil, byte ptr [rdi]
0x426677:	cmp	cl, 0x76
0x42667a:	jne	0x4266df
0x42667c:	lea	ebp, [rsi - 0x30]
0x42667f:	cmp	bpl, 9
0x426683:	ja	0x42672d
0x426689:	mov	rdi, rbx
0x42668c:	call	0x425339
0x426691:	mov	edx, dword ptr [rbx + 0x28]
0x426694:	mov	r11, rax
0x426697:	cmp	edx, dword ptr [rbx + 0x2c]
0x42669a:	jge	0x4267a6
0x4266a0:	movsxd	rax, edx
0x4266a3:	inc	edx
0x4266a5:	shl	rax, 5
0x4266a9:	add	rax, qword ptr [rbx + 0x20]
0x4266ad:	mov	qword ptr [rax + 4], 0
0x4266b5:	mov	dword ptr [rbx + 0x28], edx
0x4266b8:	test	r11, r11
0x4266bb:	je	0x4267a6
0x4266c1:	movsx	ebp, bpl
0x4266c5:	mov	qword ptr [rax + 4], 0
0x4266cd:	mov	dword ptr [rax], 0x33
0x4266d3:	mov	dword ptr [rax + 0x10], ebp
0x4266d6:	mov	qword ptr [rax + 0x18], r11
0x4266da:	jmp	0x4267a8
0x4266df:	cmp	cl, 0x63
0x4266e2:	jne	0x42672d
0x4266e4:	cmp	sil, 0x76
0x4266e8:	jne	0x42672d
0x4266ea:	xor	ecx, ecx
0x4266ec:	cmp	dword ptr [rbx + 0x4c], 0
0x4266f0:	mov	ebp, dword ptr [rbx + 0x50]
0x4266f3:	mov	rdi, rbx
0x4266f6:	sete	cl
0x4266f9:	mov	dword ptr [rbx + 0x50], ecx
0x4266fc:	call	0x425e9b
0x426701:	xor	ecx, ecx
0x426703:	cmp	dword ptr [rbx + 0x50], 0
0x426707:	mov	rdx, rax
0x42670a:	je	0x42671b
0x42670c:	mov	esi, 0x35
0x426711:	mov	rdi, rbx
0x426714:	call	0x424cee
0x426719:	jmp	0x426728
0x42671b:	mov	esi, 0x34
0x426720:	mov	rdi, rbx
0x426723:	call	0x424cee
0x426728:	mov	dword ptr [rbx + 0x50], ebp
0x42672b:	jmp	0x4267a8
0x42672d:	mov	r8d, 0x48
0x426733:	xor	edi, edi
0x426735:	mov	r9d, 2
0x42673b:	mov	eax, r8d
0x42673e:	sub	eax, edi
0x426740:	cdq	
0x426741:	idiv	r9d
0x426744:	add	eax, edi
0x426746:	movsxd	r10, eax
0x426749:	imul	r11, r10, 0x18
0x42674d:	mov	rdx, qword ptr [r11 + 0x4cb760]
0x426754:	lea	rbp, [r11 + 0x4cb760]
0x42675b:	cmp	byte ptr [rdx], cl
0x42675d:	jne	0x426795
0x42675f:	cmp	byte ptr [rdx + 1], sil
0x426763:	jne	0x426795
0x426765:	mov	r10d, dword ptr [rbx + 0x28]
0x426769:	cmp	r10d, dword ptr [rbx + 0x2c]
0x42676d:	jge	0x4267a6
0x42676f:	movsxd	rax, r10d
0x426772:	inc	r10d
0x426775:	shl	rax, 5
0x426779:	add	rax, qword ptr [rbx + 0x20]
0x42677d:	mov	qword ptr [rax + 4], 0
0x426785:	mov	dword ptr [rbx + 0x28], r10d
0x426789:	mov	dword ptr [rax], 0x32
0x42678f:	mov	qword ptr [rax + 0x10], rbp
0x426793:	jmp	0x4267a8
0x426795:	jg	0x42679d
0x426797:	lea	edi, [rax + 1]
0x42679a:	mov	eax, r8d
0x42679d:	cmp	edi, eax
0x42679f:	je	0x4267a6
0x4267a1:	mov	r8d, eax
0x4267a4:	jmp	0x42673b
0x4267a6:	xor	eax, eax
0x4267a8:	pop	rdx
0x4267a9:	pop	rbx
0x4267aa:	pop	rbp
0x4267ab:	ret	
0x4267ac:	push	rbp
0x4267ad:	push	rbx
0x4267ae:	mov	rbx, rdi
0x4267b1:	sub	rsp, 0x18
0x4267b5:	mov	qword ptr [rsp + 8], 0
0x4267be:	lea	rbp, [rsp + 8]
0x4267c3:	mov	rdx, qword ptr [rbx + 0x18]
0x4267c7:	mov	al, byte ptr [rdx]
0x4267c9:	test	al, al
0x4267cb:	sete	cl
0x4267ce:	cmp	al, 0x45
0x4267d0:	sete	sil
0x4267d4:	or	cl, sil
0x4267d7:	jne	0x42681d
0x4267d9:	cmp	al, 0x2e
0x4267db:	je	0x42681d
0x4267dd:	cmp	al, 0x52
0x4267df:	je	0x4267e5
0x4267e1:	cmp	al, 0x4f
0x4267e3:	jne	0x4267eb
0x4267e5:	cmp	byte ptr [rdx + 1], 0x45
0x4267e9:	je	0x42681d
0x4267eb:	mov	rdi, rbx
0x4267ee:	call	0x425e9b
0x4267f3:	mov	rdx, rax
0x4267f6:	test	rax, rax
0x4267f9:	jne	0x4267ff
0x4267fb:	xor	eax, eax
0x4267fd:	jmp	0x426852
0x4267ff:	xor	ecx, ecx
0x426801:	mov	esi, 0x2e
0x426806:	mov	rdi, rbx
0x426809:	call	0x424cee
0x42680e:	mov	qword ptr [rbp], rax
0x426812:	test	rax, rax
0x426815:	je	0x4267fb
0x426817:	lea	rbp, [rax + 0x18]
0x42681b:	jmp	0x4267c3
0x42681d:	mov	rax, qword ptr [rsp + 8]
0x426822:	test	rax, rax
0x426825:	je	0x4267fb
0x426827:	cmp	qword ptr [rax + 0x18], 0
0x42682c:	jne	0x426852
0x42682e:	mov	rdi, qword ptr [rax + 0x10]
0x426832:	cmp	dword ptr [rdi], 0x27
0x426835:	jne	0x426852
0x426837:	mov	r8, qword ptr [rdi + 0x10]
0x42683b:	cmp	dword ptr [r8 + 0x1c], 9
0x426840:	jne	0x426852
0x426842:	mov	r9d, dword ptr [r8 + 8]
0x426846:	sub	dword ptr [rbx + 0x48], r9d
0x42684a:	mov	qword ptr [rax + 0x10], 0
0x426852:	add	rsp, 0x18
0x426856:	pop	rbx
0x426857:	pop	rbp
0x426858:	ret	
0x426859:	push	r12
0x42685b:	push	rbp
0x42685c:	mov	rbp, rdi
0x42685f:	push	rbx
0x426860:	mov	rax, qword ptr [rdi + 0x18]
0x426864:	mov	dl, byte ptr [rax]
0x426866:	lea	ecx, [rdx - 0x30]
0x426869:	cmp	cl, 9
0x42686c:	ja	0x42687b
0x42686e:	call	0x425339
0x426873:	mov	rbx, rax
0x426876:	jmp	0x426bbb
0x42687b:	lea	ebx, [rdx - 0x61]
0x42687e:	cmp	bl, 0x19
0x426881:	ja	0x426912
0x426887:	mov	r12d, dword ptr [rdi + 0x4c]
0x42688b:	cmp	dl, 0x6f
0x42688e:	jne	0x4268a5
0x426890:	cmp	byte ptr [rax + 1], 0x6e
0x426894:	jne	0x4268a5
0x426896:	add	rax, 2
0x42689a:	mov	dword ptr [rdi + 0x4c], 0
0x4268a1:	mov	qword ptr [rdi + 0x18], rax
0x4268a5:	mov	rdi, rbp
0x4268a8:	call	0x426642
0x4268ad:	mov	dword ptr [rbp + 0x4c], r12d
0x4268b1:	mov	rbx, rax
0x4268b4:	test	rax, rax
0x4268b7:	je	0x426bb9
0x4268bd:	cmp	dword ptr [rax], 0x32
0x4268c0:	jne	0x426bbb
0x4268c6:	mov	rdi, qword ptr [rax + 0x10]
0x4268ca:	mov	r10d, dword ptr [rbp + 0x48]
0x4268ce:	mov	esi, 0x4cd87b
0x4268d3:	mov	r11d, dword ptr [rdi + 0x10]
0x4268d7:	mov	rdi, qword ptr [rdi]
0x4268da:	lea	edx, [r10 + r11 + 7]
0x4268df:	mov	dword ptr [rbp + 0x48], edx
0x4268e2:	call	0x403be0
0x4268e7:	test	eax, eax
0x4268e9:	jne	0x426bbb
0x4268ef:	mov	rdi, rbp
0x4268f2:	call	0x425339
0x4268f7:	mov	rdx, rbx
0x4268fa:	mov	esi, 0x37
0x4268ff:	mov	rdi, rbp
0x426902:	mov	rcx, rax
0x426905:	call	0x424cee
0x42690a:	mov	rbx, rax
0x42690d:	jmp	0x426bbb
0x426912:	lea	esi, [rdx - 0x43]
0x426915:	cmp	sil, 1
0x426919:	ja	0x426a7c
0x42691f:	mov	rdi, qword ptr [rdi + 0x40]
0x426923:	test	rdi, rdi
0x426926:	je	0x42693b
0x426928:	mov	ebx, dword ptr [rdi]
0x42692a:	test	ebx, ebx
0x42692c:	je	0x426933
0x42692e:	cmp	ebx, 0x18
0x426931:	jne	0x42693b
0x426933:	mov	r8d, dword ptr [rdi + 0x18]
0x426937:	add	dword ptr [rbp + 0x48], r8d
0x42693b:	mov	r12b, byte ptr [rax]
0x42693e:	cmp	r12b, 0x43
0x426942:	je	0x426953
0x426944:	cmp	r12b, 0x44
0x426948:	je	0x4269e6
0x42694e:	jmp	0x426bb9
0x426953:	xor	r9d, r9d
0x426956:	cmp	byte ptr [rax + 1], 0x49
0x42695a:	jne	0x426969
0x42695c:	inc	rax
0x42695f:	mov	r9d, 1
0x426965:	mov	qword ptr [rbp + 0x18], rax
0x426969:	mov	r10, qword ptr [rbp + 0x18]
0x42696d:	movsx	r12d, byte ptr [r10 + 1]
0x426972:	lea	r11d, [r12 - 0x31]
0x426977:	cmp	r11b, 4
0x42697b:	ja	0x426bb9
0x426981:	add	r10, 2
0x426985:	mov	qword ptr [rbp + 0x18], r10
0x426989:	test	r9d, r9d
0x42698c:	je	0x426996
0x42698e:	mov	rdi, rbp
0x426991:	call	0x425e9b
0x426996:	mov	rdx, qword ptr [rbp + 0x40]
0x42699a:	mov	eax, dword ptr [rbp + 0x28]
0x42699d:	cmp	eax, dword ptr [rbp + 0x2c]
0x4269a0:	jge	0x426bb9
0x4269a6:	movsxd	rbx, eax
0x4269a9:	inc	eax
0x4269ab:	shl	rbx, 5
0x4269af:	add	rbx, qword ptr [rbp + 0x20]
0x4269b3:	mov	qword ptr [rbx + 4], 0
0x4269bb:	mov	dword ptr [rbp + 0x28], eax
0x4269be:	test	rdx, rdx
0x4269c1:	je	0x426bb9
0x4269c7:	sub	r12d, 0x30
0x4269cb:	mov	qword ptr [rbx + 4], 0
0x4269d3:	mov	dword ptr [rbx], 7
0x4269d9:	mov	dword ptr [rbx + 0x10], r12d
0x4269dd:	mov	qword ptr [rbx + 0x18], rdx
0x4269e1:	jmp	0x426bbb
0x4269e6:	mov	cl, byte ptr [rax + 1]
0x4269e9:	lea	esi, [rcx - 0x30]
0x4269ec:	cmp	sil, 5
0x4269f0:	ja	0x426bb9
0x4269f6:	movzx	ebx, sil
0x4269fa:	notrack jmp	qword ptr ds:[rbx*8 + 0x4ca2e0]
0x426a02:	mov	r8d, 2
0x426a08:	jmp	0x426a28
0x426a0a:	mov	r8d, 3
0x426a10:	jmp	0x426a28
0x426a12:	mov	r8d, 4
0x426a18:	jmp	0x426a28
0x426a1a:	mov	r8d, 5
0x426a20:	jmp	0x426a28
0x426a22:	mov	r8d, 1
0x426a28:	add	rax, 2
0x426a2c:	mov	r9d, dword ptr [rbp + 0x28]
0x426a30:	mov	qword ptr [rbp + 0x18], rax
0x426a34:	cmp	r9d, dword ptr [rbp + 0x2c]
0x426a38:	jge	0x426bb9
0x426a3e:	movsxd	rbx, r9d
0x426a41:	inc	r9d
0x426a44:	shl	rbx, 5
0x426a48:	add	rbx, qword ptr [rbp + 0x20]
0x426a4c:	mov	qword ptr [rbx + 4], 0
0x426a54:	mov	dword ptr [rbp + 0x28], r9d
0x426a58:	test	rdi, rdi
0x426a5b:	je	0x426bb9
0x426a61:	mov	qword ptr [rbx + 4], 0
0x426a69:	mov	dword ptr [rbx], 8
0x426a6f:	mov	dword ptr [rbx + 0x10], r8d
0x426a73:	mov	qword ptr [rbx + 0x18], rdi
0x426a77:	jmp	0x426bbb
0x426a7c:	cmp	dl, 0x4c
0x426a7f:	jne	0x426aa7
0x426a81:	inc	rax
0x426a84:	mov	qword ptr [rdi + 0x18], rax
0x426a88:	call	0x425339
0x426a8d:	mov	rbx, rax
0x426a90:	test	rax, rax
0x426a93:	je	0x426ac0
0x426a95:	mov	rdi, rbp
0x426a98:	call	0x425021
0x426a9d:	test	eax, eax
0x426a9f:	jne	0x426bbb
0x426aa5:	jmp	0x426ac0
0x426aa7:	cmp	dl, 0x55
0x426aaa:	jne	0x426ac0
0x426aac:	mov	dil, byte ptr [rax + 1]
0x426ab0:	cmp	dil, 0x6c
0x426ab4:	je	0x426ac7
0x426ab6:	cmp	dil, 0x74
0x426aba:	je	0x426b51
0x426ac0:	xor	ebx, ebx
0x426ac2:	jmp	0x426bd3
0x426ac7:	lea	r8, [rax + 1]
0x426acb:	mov	qword ptr [rbp + 0x18], r8
0x426acf:	cmp	byte ptr [rax + 1], 0x6c
0x426ad3:	jne	0x426bb9
0x426ad9:	add	rax, 2
0x426add:	mov	rdi, rbp
0x426ae0:	mov	qword ptr [rbp + 0x18], rax
0x426ae4:	call	0x4267ac
0x426ae9:	mov	r12, rax
0x426aec:	test	rax, rax
0x426aef:	je	0x426bb9
0x426af5:	mov	r9, qword ptr [rbp + 0x18]
0x426af9:	cmp	byte ptr [r9], 0x45
0x426afd:	jne	0x426bb9
0x426b03:	inc	r9
0x426b06:	mov	rdi, rbp
0x426b09:	mov	qword ptr [rbp + 0x18], r9
0x426b0d:	call	0x424f96
0x426b12:	test	eax, eax
0x426b14:	js	0x426bb9
0x426b1a:	mov	r10d, dword ptr [rbp + 0x28]
0x426b1e:	cmp	r10d, dword ptr [rbp + 0x2c]
0x426b22:	jge	0x426bb9
0x426b28:	movsxd	rbx, r10d
0x426b2b:	inc	r10d
0x426b2e:	shl	rbx, 5
0x426b32:	add	rbx, qword ptr [rbp + 0x20]
0x426b36:	mov	qword ptr [rbx + 4], 0
0x426b3e:	mov	dword ptr [rbp + 0x28], r10d
0x426b42:	mov	dword ptr [rbx], 0x47
0x426b48:	mov	qword ptr [rbx + 0x10], r12
0x426b4c:	mov	dword ptr [rbx + 0x18], eax
0x426b4f:	jmp	0x426bbb
0x426b51:	lea	r11, [rax + 1]
0x426b55:	mov	qword ptr [rbp + 0x18], r11
0x426b59:	cmp	byte ptr [rax + 1], 0x74
0x426b5d:	jne	0x426bb9
0x426b5f:	add	rax, 2
0x426b63:	mov	rdi, rbp
0x426b66:	mov	qword ptr [rbp + 0x18], rax
0x426b6a:	call	0x424f96
0x426b6f:	test	eax, eax
0x426b71:	js	0x426bb9
0x426b73:	mov	edx, dword ptr [rbp + 0x28]
0x426b76:	cmp	edx, dword ptr [rbp + 0x2c]
0x426b79:	jge	0x426bb9
0x426b7b:	movsxd	rbx, edx
0x426b7e:	cdqe	
0x426b80:	inc	edx
0x426b82:	shl	rbx, 5
0x426b86:	add	rbx, qword ptr [rbp + 0x20]
0x426b8a:	mov	qword ptr [rbx + 4], 0
0x426b92:	mov	dword ptr [rbp + 0x28], edx
0x426b95:	mov	qword ptr [rbx + 0x10], rax
0x426b99:	mov	eax, dword ptr [rbp + 0x38]
0x426b9c:	mov	dword ptr [rbx], 0x49
0x426ba2:	cmp	eax, dword ptr [rbp + 0x3c]
0x426ba5:	jge	0x426bb9
0x426ba7:	mov	rsi, qword ptr [rbp + 0x30]
0x426bab:	movsxd	rcx, eax
0x426bae:	inc	eax
0x426bb0:	mov	qword ptr [rsi + rcx*8], rbx
0x426bb4:	mov	dword ptr [rbp + 0x38], eax
0x426bb7:	jmp	0x426bbb
0x426bb9:	xor	ebx, ebx
0x426bbb:	mov	rax, qword ptr [rbp + 0x18]
0x426bbf:	cmp	byte ptr [rax], 0x42
0x426bc2:	jne	0x426bd3
0x426bc4:	mov	rsi, rbx
0x426bc7:	mov	rdi, rbp
0x426bca:	pop	rbx
0x426bcb:	pop	rbp
0x426bcc:	pop	r12
0x426bce:	jmp	0x4253df
0x426bd3:	mov	rax, rbx
0x426bd6:	pop	rbx
0x426bd7:	pop	rbp
0x426bd8:	pop	r12
0x426bda:	ret	
0x426bdb:	push	r13
0x426bdd:	xor	r13d, r13d
0x426be0:	push	r12
0x426be2:	mov	r12, rdi
0x426be5:	push	rbp
0x426be6:	mov	ebp, esi
0x426be8:	push	rbx
0x426be9:	and	ebp, 1
0x426bec:	push	rcx
0x426bed:	mov	rax, qword ptr [r12 + 0x18]
0x426bf2:	mov	bl, byte ptr [rax]
0x426bf4:	test	bl, bl
0x426bf6:	je	0x426d20
0x426bfc:	cmp	bl, 0x55
0x426bff:	jg	0x426c2c
0x426c01:	cmp	bl, 0x42
0x426c04:	jg	0x426c15
0x426c06:	lea	edi, [rbx - 0x30]
0x426c09:	cmp	dil, 9
0x426c0d:	ja	0x426d20
0x426c13:	jmp	0x426c5f
0x426c15:	lea	ecx, [rbx - 0x43]
0x426c18:	cmp	cl, 0x12
0x426c1b:	ja	0x426d20
0x426c21:	movzx	esi, cl
0x426c24:	notrack jmp	qword ptr ds:[rsi*8 + 0x4ca310]
0x426c2c:	lea	edx, [rbx - 0x61]
0x426c2f:	cmp	dl, 0x19
0x426c32:	ja	0x426d20
0x426c38:	jmp	0x426c5f
0x426c3a:	mov	r8b, byte ptr [rax + 1]
0x426c3e:	mov	rdi, r12
0x426c41:	and	r8d, 0xffffffdf
0x426c45:	cmp	r8b, 0x54
0x426c49:	jne	0x426c55
0x426c4b:	call	0x425e9b
0x426c50:	mov	rcx, rax
0x426c53:	jmp	0x426cc8
0x426c55:	call	0x426859
0x426c5a:	mov	rcx, rax
0x426c5d:	jmp	0x426cc8
0x426c5f:	mov	rdi, r12
0x426c62:	call	0x426859
0x426c67:	mov	rcx, rax
0x426c6a:	test	r13, r13
0x426c6d:	je	0x426ce0
0x426c6f:	jmp	0x426ccd
0x426c71:	mov	esi, 1
0x426c76:	mov	rdi, r12
0x426c79:	call	0x425429
0x426c7e:	mov	rcx, rax
0x426c81:	test	r13, r13
0x426c84:	jne	0x426ccd
0x426c86:	mov	r13, rcx
0x426c89:	jmp	0x426bed
0x426c8e:	test	r13, r13
0x426c91:	je	0x426d20
0x426c97:	mov	rdi, r12
0x426c9a:	call	0x425e7e
0x426c9f:	mov	esi, 4
0x426ca4:	mov	rcx, rax
0x426ca7:	jmp	0x426cd2
0x426ca9:	mov	rdi, r12
0x426cac:	call	0x424fce
0x426cb1:	mov	rcx, rax
0x426cb4:	jmp	0x426cc8
0x426cb6:	test	r13, r13
0x426cb9:	je	0x426d20
0x426cbb:	inc	rax
0x426cbe:	mov	rcx, r13
0x426cc1:	mov	qword ptr [r12 + 0x18], rax
0x426cc6:	jmp	0x426c86
0x426cc8:	test	r13, r13
0x426ccb:	je	0x426ce5
0x426ccd:	mov	esi, 1
0x426cd2:	mov	rdx, r13
0x426cd5:	mov	rdi, r12
0x426cd8:	call	0x424cee
0x426cdd:	mov	rcx, rax
0x426ce0:	cmp	bl, 0x53
0x426ce3:	je	0x426c86
0x426ce5:	mov	r9, qword ptr [r12 + 0x18]
0x426cea:	cmp	byte ptr [r9], 0x45
0x426cee:	je	0x426c86
0x426cf0:	test	bpl, bpl
0x426cf3:	je	0x426c86
0x426cf5:	test	rcx, rcx
0x426cf8:	je	0x426d20
0x426cfa:	mov	r10d, dword ptr [r12 + 0x38]
0x426cff:	cmp	r10d, dword ptr [r12 + 0x3c]
0x426d04:	jge	0x426d20
0x426d06:	mov	r13, qword ptr [r12 + 0x30]
0x426d0b:	movsxd	r11, r10d
0x426d0e:	inc	r10d
0x426d11:	mov	qword ptr [r13 + r11*8], rcx
0x426d16:	mov	dword ptr [r12 + 0x38], r10d
0x426d1b:	jmp	0x426c86
0x426d20:	xor	r13d, r13d
0x426d23:	pop	rdx
0x426d24:	mov	rax, r13
0x426d27:	pop	rbx
0x426d28:	pop	rbp
0x426d29:	pop	r12
0x426d2b:	pop	r13
0x426d2d:	ret	
0x426d2e:	push	r15
0x426d30:	push	r14
0x426d32:	mov	r14, rsi
0x426d35:	push	r13
0x426d37:	mov	r13d, edx
0x426d3a:	push	r12
0x426d3c:	mov	r12, rsi
0x426d3f:	push	rbp
0x426d40:	push	rbx
0x426d41:	mov	rbx, rdi
0x426d44:	sub	rsp, 0x18
0x426d48:	cmp	edx, 1
0x426d4b:	mov	rax, qword ptr [rdi + 0x18]
0x426d4f:	sbb	ebp, ebp
0x426d51:	and	ebp, 0xfffffffd
0x426d54:	mov	r9b, byte ptr [rax]
0x426d57:	lea	edx, [rbp + 0x1d]
0x426d5a:	lea	ecx, [rbp + 0x1c]
0x426d5d:	mov	dword ptr [rsp + 8], edx
0x426d61:	lea	r15d, [rbp + 0x1e]
0x426d65:	mov	dword ptr [rsp + 0xc], ecx
0x426d69:	mov	r10, qword ptr [rbx + 0x18]
0x426d6d:	mov	rdi, r10
0x426d70:	call	0x4252e3
0x426d75:	test	eax, eax
0x426d77:	je	0x426e9f
0x426d7d:	lea	rsi, [r10 + 1]
0x426d81:	mov	qword ptr [rbx + 0x18], rsi
0x426d85:	cmp	r9b, 0x72
0x426d89:	jne	0x426d9a
0x426d8b:	add	dword ptr [rbx + 0x48], 9
0x426d8f:	mov	esi, dword ptr [rsp + 0xc]
0x426d93:	xor	ecx, ecx
0x426d95:	jmp	0x426e78
0x426d9a:	cmp	r9b, 0x56
0x426d9e:	jne	0x426daf
0x426da0:	add	dword ptr [rbx + 0x48], 9
0x426da4:	mov	esi, dword ptr [rsp + 8]
0x426da8:	xor	ecx, ecx
0x426daa:	jmp	0x426e78
0x426daf:	cmp	r9b, 0x4b
0x426db3:	jne	0x426dc3
0x426db5:	add	dword ptr [rbx + 0x48], 6
0x426db9:	mov	esi, r15d
0x426dbc:	xor	ecx, ecx
0x426dbe:	jmp	0x426e78
0x426dc3:	cmp	byte ptr [r10 + 1], 0
0x426dc8:	jne	0x426dd2
0x426dca:	xor	r14d, r14d
0x426dcd:	jmp	0x426ee9
0x426dd2:	lea	rdi, [r10 + 2]
0x426dd6:	mov	qword ptr [rbx + 0x18], rdi
0x426dda:	mov	al, byte ptr [r10 + 1]
0x426dde:	cmp	al, 0x78
0x426de0:	jne	0x426df2
0x426de2:	add	dword ptr [rbx + 0x48], 0x11
0x426de6:	xor	ecx, ecx
0x426de8:	mov	esi, 0x4e
0x426ded:	jmp	0x426e78
0x426df2:	mov	edx, eax
0x426df4:	and	edx, 0xffffffdf
0x426df7:	cmp	dl, 0x4f
0x426dfa:	jne	0x426e39
0x426dfc:	add	dword ptr [rbx + 0x48], 9
0x426e00:	cmp	al, 0x4f
0x426e02:	jne	0x426e71
0x426e04:	mov	ebp, dword ptr [rbx + 0x4c]
0x426e07:	mov	dword ptr [rbx + 0x4c], 1
0x426e0e:	mov	rdi, rbx
0x426e11:	call	0x42571f
0x426e16:	mov	dword ptr [rbx + 0x4c], ebp
0x426e19:	mov	rcx, rax
0x426e1c:	test	rax, rax
0x426e1f:	je	0x426dca
0x426e21:	mov	r11, qword ptr [rbx + 0x18]
0x426e25:	cmp	byte ptr [r11], 0x45
0x426e29:	jne	0x426dca
0x426e2b:	inc	r11
0x426e2e:	mov	esi, 0x50
0x426e33:	mov	qword ptr [rbx + 0x18], r11
0x426e37:	jmp	0x426e78
0x426e39:	cmp	al, 0x77
0x426e3b:	jne	0x426dca
0x426e3d:	add	dword ptr [rbx + 0x48], 6
0x426e41:	mov	rdi, rbx
0x426e44:	call	0x4267ac
0x426e49:	mov	rcx, rax
0x426e4c:	test	rax, rax
0x426e4f:	je	0x426dca
0x426e55:	mov	r9, qword ptr [rbx + 0x18]
0x426e59:	cmp	byte ptr [r9], 0x45
0x426e5d:	jne	0x426dca
0x426e63:	inc	r9
0x426e66:	mov	esi, 0x51
0x426e6b:	mov	qword ptr [rbx + 0x18], r9
0x426e6f:	jmp	0x426e78
0x426e71:	xor	ecx, ecx
0x426e73:	mov	esi, 0x50
0x426e78:	xor	edx, edx
0x426e7a:	mov	rdi, rbx
0x426e7d:	call	0x424cee
0x426e82:	mov	qword ptr [r12], rax
0x426e86:	test	rax, rax
0x426e89:	je	0x426dca
0x426e8f:	mov	rcx, qword ptr [rbx + 0x18]
0x426e93:	lea	r12, [rax + 0x10]
0x426e97:	mov	r9b, byte ptr [rcx]
0x426e9a:	jmp	0x426d69
0x426e9f:	and	r13b, 1
0x426ea3:	jne	0x426eab
0x426ea5:	cmp	r9b, 0x46
0x426ea9:	je	0x426ed0
0x426eab:	mov	r14, r12
0x426eae:	jmp	0x426ee9
0x426eb0:	mov	r8, qword ptr [r14]
0x426eb3:	mov	ebx, dword ptr [r8]
0x426eb6:	cmp	ebx, 0x1a
0x426eb9:	je	0x426ed7
0x426ebb:	cmp	ebx, 0x1b
0x426ebe:	je	0x426ee0
0x426ec0:	cmp	ebx, 0x19
0x426ec3:	jne	0x426ecc
0x426ec5:	mov	dword ptr [r8], 0x1c
0x426ecc:	lea	r14, [r8 + 0x10]
0x426ed0:	cmp	r12, r14
0x426ed3:	jne	0x426eb0
0x426ed5:	jmp	0x426ee9
0x426ed7:	mov	dword ptr [r8], 0x1d
0x426ede:	jmp	0x426ecc
0x426ee0:	mov	dword ptr [r8], 0x1e
0x426ee7:	jmp	0x426ecc
0x426ee9:	add	rsp, 0x18
0x426eed:	mov	rax, r14
0x426ef0:	pop	rbx
0x426ef1:	pop	rbp
0x426ef2:	pop	r12
0x426ef4:	pop	r13
0x426ef6:	pop	r14
0x426ef8:	pop	r15
0x426efa:	ret	
0x426efb:	push	r12
0x426efd:	push	rbp
0x426efe:	mov	rbp, rdi
0x426f01:	push	r9
0x426f03:	mov	rax, qword ptr [rdi + 0x18]
0x426f07:	cmp	byte ptr [rax], 0x4a
0x426f0a:	jne	0x426f15
0x426f0c:	inc	rax
0x426f0f:	mov	qword ptr [rdi + 0x18], rax
0x426f13:	jmp	0x426f19
0x426f15:	test	esi, esi
0x426f17:	je	0x426f2b
0x426f19:	mov	rdi, rbp
0x426f1c:	call	0x425e9b
0x426f21:	mov	r12, rax
0x426f24:	test	rax, rax
0x426f27:	jne	0x426f2e
0x426f29:	jmp	0x426f53
0x426f2b:	xor	r12d, r12d
0x426f2e:	mov	rdi, rbp
0x426f31:	call	0x4267ac
0x426f36:	mov	rcx, rax
0x426f39:	test	rax, rax
0x426f3c:	je	0x426f53
0x426f3e:	pop	r8
0x426f40:	mov	rdx, r12
0x426f43:	mov	rdi, rbp
0x426f46:	mov	esi, 0x29
0x426f4b:	pop	rbp
0x426f4c:	pop	r12
0x426f4e:	jmp	0x424cee
0x426f53:	pop	rdx
0x426f54:	xor	eax, eax
0x426f56:	pop	rbp
0x426f57:	pop	r12
0x426f59:	ret	
0x426f5a:	push	r12
0x426f5c:	push	rbp
0x426f5d:	mov	rbp, rdi
0x426f60:	push	rbx
0x426f61:	mov	rax, qword ptr [rdi + 0x18]
0x426f65:	mov	dl, byte ptr [rax]
0x426f67:	cmp	dl, 0x47
0x426f6a:	je	0x426f75
0x426f6c:	cmp	dl, 0x54
0x426f6f:	jne	0x4273ba
0x426f75:	mov	ebx, dword ptr [rbp + 0x48]
0x426f78:	lea	r11d, [rbx + 0x14]
0x426f7c:	mov	dword ptr [rbp + 0x48], r11d
0x426f80:	mov	dl, byte ptr [rax]
0x426f82:	cmp	dl, 0x54
0x426f85:	jne	0x426f97
0x426f87:	lea	r10, [rax + 1]
0x426f8b:	mov	qword ptr [rbp + 0x18], r10
0x426f8f:	cmp	byte ptr [rax + 1], 0
0x426f93:	jne	0x426fa2
0x426f95:	jmp	0x426fdd
0x426f97:	cmp	dl, 0x47
0x426f9a:	je	0x4271a0
0x426fa0:	jmp	0x426fdd
0x426fa2:	lea	rdx, [rax + 2]
0x426fa6:	mov	qword ptr [rbp + 0x18], rdx
0x426faa:	mov	al, byte ptr [rax + 1]
0x426fad:	cmp	al, 0x57
0x426faf:	jg	0x426fc9
0x426fb1:	cmp	al, 0x40
0x426fb3:	jle	0x426fdd
0x426fb5:	sub	eax, 0x41
0x426fb8:	cmp	al, 0x16
0x426fba:	ja	0x426fdd
0x426fbc:	movzx	r8d, al
0x426fc0:	notrack jmp	qword ptr ds:[r8*8 + 0x4ca3a8]
0x426fc9:	cmp	al, 0x68
0x426fcb:	je	0x42704c
0x426fcd:	cmp	al, 0x76
0x426fcf:	je	0x427076
0x426fd5:	cmp	al, 0x63
0x426fd7:	je	0x4270a4
0x426fdd:	xor	ebx, ebx
0x426fdf:	jmp	0x42752d
0x426fe4:	add	ebx, 0xf
0x426fe7:	mov	rdi, rbp
0x426fea:	mov	dword ptr [rbp + 0x48], ebx
0x426fed:	call	0x425e9b
0x426ff2:	xor	ecx, ecx
0x426ff4:	mov	esi, 9
0x426ff9:	mov	rdx, rax
0x426ffc:	jmp	0x427521
0x427001:	add	ebx, 0xa
0x427004:	mov	rdi, rbp
0x427007:	mov	dword ptr [rbp + 0x48], ebx
0x42700a:	call	0x425e9b
0x42700f:	xor	ecx, ecx
0x427011:	mov	esi, 0xa
0x427016:	mov	rdx, rax
0x427019:	jmp	0x427521
0x42701e:	mov	rdi, rbp
0x427021:	call	0x425e9b
0x427026:	xor	ecx, ecx
0x427028:	mov	esi, 0xc
0x42702d:	mov	rdx, rax
0x427030:	jmp	0x427521
0x427035:	mov	rdi, rbp
0x427038:	call	0x425e9b
0x42703d:	xor	ecx, ecx
0x42703f:	mov	esi, 0xd
0x427044:	mov	rdx, rax
0x427047:	jmp	0x427521
0x42704c:	mov	esi, 0x68
0x427051:	mov	rdi, rbp
0x427054:	call	0x424eee
0x427059:	test	eax, eax
0x42705b:	je	0x426fdd
0x42705d:	xor	esi, esi
0x42705f:	mov	rdi, rbp
0x427062:	call	0x426f5a
0x427067:	xor	ecx, ecx
0x427069:	mov	esi, 0xf
0x42706e:	mov	rdx, rax
0x427071:	jmp	0x427521
0x427076:	mov	esi, 0x76
0x42707b:	mov	rdi, rbp
0x42707e:	call	0x424eee
0x427083:	test	eax, eax
0x427085:	je	0x426fdd
0x42708b:	xor	esi, esi
0x42708d:	mov	rdi, rbp
0x427090:	call	0x426f5a
0x427095:	xor	ecx, ecx
0x427097:	mov	esi, 0x10
0x42709c:	mov	rdx, rax
0x42709f:	jmp	0x427521
0x4270a4:	xor	esi, esi
0x4270a6:	mov	rdi, rbp
0x4270a9:	call	0x424eee
0x4270ae:	test	eax, eax
0x4270b0:	je	0x426fdd
0x4270b6:	xor	esi, esi
0x4270b8:	mov	rdi, rbp
0x4270bb:	call	0x424eee
0x4270c0:	test	eax, eax
0x4270c2:	je	0x426fdd
0x4270c8:	xor	esi, esi
0x4270ca:	mov	rdi, rbp
0x4270cd:	call	0x426f5a
0x4270d2:	xor	ecx, ecx
0x4270d4:	mov	esi, 0x11
0x4270d9:	mov	rdx, rax
0x4270dc:	jmp	0x427521
0x4270e1:	mov	rdi, rbp
0x4270e4:	call	0x425e9b
0x4270e9:	mov	rdi, rbp
0x4270ec:	mov	r12, rax
0x4270ef:	call	0x424e3e
0x4270f4:	test	eax, eax
0x4270f6:	js	0x426fdd
0x4270fc:	mov	r11, qword ptr [rbp + 0x18]
0x427100:	cmp	byte ptr [r11], 0x5f
0x427104:	jne	0x426fdd
0x42710a:	inc	r11
0x42710d:	mov	rdi, rbp
0x427110:	mov	qword ptr [rbp + 0x18], r11
0x427114:	call	0x425e9b
0x427119:	add	dword ptr [rbp + 0x48], 5
0x42711d:	mov	rcx, r12
0x427120:	mov	esi, 0xb
0x427125:	mov	rdx, rax
0x427128:	jmp	0x427521
0x42712d:	mov	rdi, rbp
0x427130:	call	0x425e9b
0x427135:	xor	ecx, ecx
0x427137:	mov	esi, 0xe
0x42713c:	mov	rdx, rax
0x42713f:	jmp	0x427521
0x427144:	mov	rdi, rbp
0x427147:	call	0x425e9b
0x42714c:	xor	ecx, ecx
0x42714e:	mov	esi, 0x12
0x427153:	mov	rdx, rax
0x427156:	jmp	0x427521
0x42715b:	mov	rdi, rbp
0x42715e:	call	0x427535
0x427163:	xor	ecx, ecx
0x427165:	mov	esi, 0x14
0x42716a:	mov	rdx, rax
0x42716d:	jmp	0x427521
0x427172:	mov	rdi, rbp
0x427175:	call	0x427535
0x42717a:	xor	ecx, ecx
0x42717c:	mov	esi, 0x15
0x427181:	mov	rdx, rax
0x427184:	jmp	0x427521
0x427189:	mov	rdi, rbp
0x42718c:	call	0x425d7e
0x427191:	xor	ecx, ecx
0x427193:	mov	esi, 0x30
0x427198:	mov	rdx, rax
0x42719b:	jmp	0x427521
0x4271a0:	lea	rsi, [rax + 1]
0x4271a4:	mov	qword ptr [rbp + 0x18], rsi
0x4271a8:	cmp	byte ptr [rax + 1], 0
0x4271ac:	je	0x426fdd
0x4271b2:	lea	rdi, [rax + 2]
0x4271b6:	mov	qword ptr [rbp + 0x18], rdi
0x4271ba:	mov	r8b, byte ptr [rax + 1]
0x4271be:	cmp	r8b, 0x54
0x4271c2:	je	0x42723a
0x4271c4:	jg	0x4271f9
0x4271c6:	cmp	r8b, 0x41
0x4271ca:	je	0x427221
0x4271cc:	cmp	r8b, 0x52
0x4271d0:	jne	0x426fdd
0x4271d6:	mov	rdi, rbp
0x4271d9:	call	0x427535
0x4271de:	mov	rdi, rbp
0x4271e1:	mov	rbx, rax
0x4271e4:	call	0x424eae
0x4271e9:	mov	rdx, rbx
0x4271ec:	mov	esi, 0x16
0x4271f1:	mov	rcx, rax
0x4271f4:	jmp	0x427521
0x4271f9:	cmp	r8b, 0x56
0x4271fd:	je	0x42720a
0x4271ff:	cmp	r8b, 0x72
0x427203:	je	0x42727b
0x427205:	jmp	0x426fdd
0x42720a:	mov	rdi, rbp
0x42720d:	call	0x427535
0x427212:	xor	ecx, ecx
0x427214:	mov	esi, 0x13
0x427219:	mov	rdx, rax
0x42721c:	jmp	0x427521
0x427221:	xor	esi, esi
0x427223:	mov	rdi, rbp
0x427226:	call	0x426f5a
0x42722b:	xor	ecx, ecx
0x42722d:	mov	esi, 0x17
0x427232:	mov	rdx, rax
0x427235:	jmp	0x427521
0x42723a:	xor	esi, esi
0x42723c:	cmp	byte ptr [rax + 2], 0
0x427240:	mov	rdi, rbp
0x427243:	je	0x427267
0x427245:	lea	r9, [rax + 3]
0x427249:	mov	qword ptr [rbp + 0x18], r9
0x42724d:	cmp	byte ptr [rax + 2], 0x6e
0x427251:	jne	0x427267
0x427253:	call	0x426f5a
0x427258:	xor	ecx, ecx
0x42725a:	mov	esi, 0x4b
0x42725f:	mov	rdx, rax
0x427262:	jmp	0x427521
0x427267:	call	0x426f5a
0x42726c:	xor	ecx, ecx
0x42726e:	mov	esi, 0x4a
0x427273:	mov	rdx, rax
0x427276:	jmp	0x427521
0x42727b:	mov	rdi, rbp
0x42727e:	call	0x424e3e
0x427283:	cmp	eax, 1
0x427286:	jle	0x426fdd
0x42728c:	mov	rcx, qword ptr [rbp + 0x18]
0x427290:	cmp	byte ptr [rcx], 0
0x427293:	je	0x426fdd
0x427299:	lea	r12, [rcx + 1]
0x42729d:	mov	qword ptr [rbp + 0x18], r12
0x4272a1:	cmp	byte ptr [rcx], 0x5f
0x4272a4:	jne	0x426fdd
0x4272aa:	lea	r11d, [rax - 1]
0x4272ae:	xor	r8d, r8d
0x4272b1:	mov	r10b, byte ptr [r12]
0x4272b5:	test	r10b, r10b
0x4272b8:	je	0x426fdd
0x4272be:	cmp	r10b, 0x24
0x4272c2:	jne	0x427333
0x4272c4:	movsx	esi, byte ptr [r12 + 1]
0x4272ca:	cmp	sil, 0x53
0x4272ce:	je	0x4272e2
0x4272d0:	cmp	sil, 0x5f
0x4272d4:	je	0x4272e9
0x4272d6:	cmp	sil, 0x24
0x4272da:	jne	0x426fdd
0x4272e0:	jmp	0x4272ee
0x4272e2:	mov	esi, 0x2f
0x4272e7:	jmp	0x4272ee
0x4272e9:	mov	esi, 0x2e
0x4272ee:	mov	edi, dword ptr [rbp + 0x28]
0x4272f1:	xor	edx, edx
0x4272f3:	cmp	edi, dword ptr [rbp + 0x2c]
0x4272f6:	jge	0x427319
0x4272f8:	movsxd	rdx, edi
0x4272fb:	inc	edi
0x4272fd:	shl	rdx, 5
0x427301:	add	rdx, qword ptr [rbp + 0x20]
0x427305:	mov	qword ptr [rdx + 4], 0
0x42730d:	mov	dword ptr [rbp + 0x28], edi
0x427310:	mov	dword ptr [rdx], 0x42
0x427316:	mov	dword ptr [rdx + 0x10], esi
0x427319:	mov	rcx, qword ptr [rbp + 0x18]
0x42731d:	sub	r11d, 2
0x427321:	lea	r12, [rcx + 2]
0x427325:	mov	qword ptr [rbp + 0x18], r12
0x427329:	test	rdx, rdx
0x42732c:	jne	0x42737d
0x42732e:	jmp	0x426fdd
0x427333:	mov	r9d, 1
0x427339:	mov	ebx, r9d
0x42733c:	cmp	r11d, r9d
0x42733f:	jle	0x427356
0x427341:	mov	al, byte ptr [r12 + r9]
0x427345:	lea	rdx, [r9 + 1]
0x427349:	cmp	al, 0x24
0x42734b:	je	0x427356
0x42734d:	test	al, al
0x42734f:	je	0x427356
0x427351:	mov	r9, rdx
0x427354:	jmp	0x427339
0x427356:	mov	edx, ebx
0x427358:	mov	rsi, r12
0x42735b:	mov	rdi, rbp
0x42735e:	sub	r11d, ebx
0x427361:	call	0x424dcf
0x427366:	add	r9, qword ptr [rbp + 0x18]
0x42736a:	mov	qword ptr [rbp + 0x18], r9
0x42736e:	mov	rdx, rax
0x427371:	mov	r12, r9
0x427374:	test	rax, rax
0x427377:	je	0x426fdd
0x42737d:	test	r8, r8
0x427380:	je	0x4273a1
0x427382:	mov	rcx, rdx
0x427385:	mov	esi, 0x41
0x42738a:	mov	rdx, r8
0x42738d:	mov	rdi, rbp
0x427390:	call	0x424cee
0x427395:	mov	rdx, rax
0x427398:	test	rax, rax
0x42739b:	je	0x426fdd
0x4273a1:	test	r11d, r11d
0x4273a4:	jle	0x4273ae
0x4273a6:	mov	r8, rdx
0x4273a9:	jmp	0x4272b1
0x4273ae:	xor	ecx, ecx
0x4273b0:	mov	esi, 0x40
0x4273b5:	jmp	0x427521
0x4273ba:	mov	r12d, esi
0x4273bd:	call	0x427535
0x4273c2:	mov	rbx, rax
0x4273c5:	test	rax, rax
0x4273c8:	je	0x426fdd
0x4273ce:	test	r12d, r12d
0x4273d1:	je	0x42744e
0x4273d3:	test	byte ptr [rbp + 0x10], 1
0x4273d7:	jne	0x42744e
0x4273d9:	movabs	rdx, 0x3400000000001f
0x4273e3:	mov	esi, dword ptr [rbx]
0x4273e5:	lea	ecx, [rsi - 0x1c]
0x4273e8:	cmp	ecx, 0x35
0x4273eb:	ja	0x427401
0x4273ed:	mov	rax, rdx
0x4273f0:	shr	rax, cl
0x4273f3:	test	al, 1
0x4273f5:	je	0x42752d
0x4273fb:	mov	rbx, qword ptr [rbx + 0x10]
0x4273ff:	jmp	0x4273e3
0x427401:	cmp	esi, 2
0x427404:	jne	0x42752d
0x42740a:	movabs	rdi, 0x3400000000001f
0x427414:	mov	r8, qword ptr [rbx + 0x18]
0x427418:	test	r8, r8
0x42741b:	je	0x426fdd
0x427421:	mov	r9d, dword ptr [r8]
0x427424:	lea	ecx, [r9 - 0x1c]
0x427428:	cmp	ecx, 0x35
0x42742b:	ja	0x42752d
0x427431:	mov	rbp, rdi
0x427434:	shr	rbp, cl
0x427437:	mov	r12, rbp
0x42743a:	and	r12b, 1
0x42743e:	je	0x42752d
0x427444:	mov	r10, qword ptr [r8 + 0x10]
0x427448:	mov	qword ptr [rbx + 0x18], r10
0x42744c:	jmp	0x427414
0x42744e:	mov	rcx, qword ptr [rbp + 0x18]
0x427452:	mov	sil, byte ptr [rcx]
0x427455:	test	sil, sil
0x427458:	je	0x42752d
0x42745e:	cmp	sil, 0x45
0x427462:	je	0x42752d
0x427468:	movabs	rdi, 0x3400000000001f
0x427472:	mov	rax, rbx
0x427475:	mov	ecx, dword ptr [rax]
0x427477:	cmp	ecx, 4
0x42747a:	je	0x4274ab
0x42747c:	ja	0x42748e
0x42747e:	cmp	ecx, 2
0x427481:	jne	0x4274ec
0x427483:	mov	rax, qword ptr [rax + 0x18]
0x427487:	test	rax, rax
0x42748a:	jne	0x427475
0x42748c:	jmp	0x4274ec
0x42748e:	sub	ecx, 0x1c
0x427491:	cmp	ecx, 0x35
0x427494:	ja	0x4274ec
0x427496:	mov	r10, rdi
0x427499:	shr	r10, cl
0x42749c:	mov	r11, r10
0x42749f:	and	r11b, 1
0x4274a3:	je	0x4274ec
0x4274a5:	mov	rax, qword ptr [rax + 0x10]
0x4274a9:	jmp	0x427487
0x4274ab:	mov	r9, qword ptr [rax + 0x10]
0x4274af:	test	r9, r9
0x4274b2:	je	0x4274e5
0x4274b4:	mov	r8d, dword ptr [r9]
0x4274b7:	cmp	r8d, 8
0x4274bb:	ja	0x4274d2
0x4274bd:	cmp	r8d, 6
0x4274c1:	ja	0x4274de
0x4274c3:	dec	r8d
0x4274c6:	cmp	r8d, 1
0x4274ca:	ja	0x4274e5
0x4274cc:	mov	r9, qword ptr [r9 + 0x18]
0x4274d0:	jmp	0x4274af
0x4274d2:	xor	esi, esi
0x4274d4:	cmp	r8d, 0x35
0x4274d8:	sete	sil
0x4274dc:	jmp	0x4274e7
0x4274de:	mov	esi, 1
0x4274e3:	jmp	0x4274e7
0x4274e5:	xor	esi, esi
0x4274e7:	xor	esi, 1
0x4274ea:	jmp	0x4274ee
0x4274ec:	xor	esi, esi
0x4274ee:	mov	rdi, rbp
0x4274f1:	call	0x426efb
0x4274f6:	mov	rcx, rax
0x4274f9:	test	rax, rax
0x4274fc:	je	0x426fdd
0x427502:	test	r12d, r12d
0x427505:	jne	0x427519
0x427507:	cmp	dword ptr [rbx], 2
0x42750a:	jne	0x427519
0x42750c:	cmp	dword ptr [rax], 0x29
0x42750f:	jne	0x427519
0x427511:	mov	qword ptr [rax + 0x10], 0
0x427519:	mov	rdx, rbx
0x42751c:	mov	esi, 3
0x427521:	pop	rbx
0x427522:	mov	rdi, rbp
0x427525:	pop	rbp
0x427526:	pop	r12
0x427528:	jmp	0x424cee
0x42752d:	mov	rax, rbx
0x427530:	pop	rbx
0x427531:	pop	rbp
0x427532:	pop	r12
0x427534:	ret	
0x427535:	push	r13
0x427537:	push	r12
0x427539:	push	rbp
0x42753a:	mov	rbp, rdi
0x42753d:	push	rbx
0x42753e:	sub	rsp, 0x18
0x427542:	mov	rax, qword ptr [rdi + 0x18]
0x427546:	mov	dl, byte ptr [rax]
0x427548:	cmp	dl, 0x55
0x42754b:	je	0x4276f7
0x427551:	jg	0x427566
0x427553:	cmp	dl, 0x4e
0x427556:	je	0x427570
0x427558:	cmp	dl, 0x53
0x42755b:	je	0x427706
0x427561:	jmp	0x427767
0x427566:	cmp	dl, 0x5a
0x427569:	je	0x4275db
0x42756b:	jmp	0x427767
0x427570:	inc	rax
0x427573:	mov	edx, 1
0x427578:	lea	rsi, [rsp + 8]
0x42757d:	mov	qword ptr [rdi + 0x18], rax
0x427581:	call	0x426d2e
0x427586:	mov	r13, rax
0x427589:	test	rax, rax
0x42758c:	je	0x4275f1
0x42758e:	xor	esi, esi
0x427590:	mov	rdi, rbp
0x427593:	call	0x424f4f
0x427598:	mov	esi, 1
0x42759d:	mov	rbx, rax
0x4275a0:	call	0x426bdb
0x4275a5:	mov	qword ptr [r13], rax
0x4275a9:	test	rax, rax
0x4275ac:	je	0x4275f1
0x4275ae:	test	rbx, rbx
0x4275b1:	je	0x4275c1
0x4275b3:	mov	r11, qword ptr [rsp + 8]
0x4275b8:	mov	qword ptr [rsp + 8], rbx
0x4275bd:	mov	qword ptr [rbx + 0x10], r11
0x4275c1:	mov	rax, qword ptr [rbp + 0x18]
0x4275c5:	cmp	byte ptr [rax], 0x45
0x4275c8:	jne	0x4275f1
0x4275ca:	inc	rax
0x4275cd:	mov	r12, qword ptr [rsp + 8]
0x4275d2:	mov	qword ptr [rbp + 0x18], rax
0x4275d6:	jmp	0x4277c5
0x4275db:	inc	rax
0x4275de:	xor	esi, esi
0x4275e0:	mov	qword ptr [rdi + 0x18], rax
0x4275e4:	call	0x426f5a
0x4275e9:	mov	r13, rax
0x4275ec:	test	rax, rax
0x4275ef:	jne	0x4275f9
0x4275f1:	xor	r12d, r12d
0x4275f4:	jmp	0x4277c5
0x4275f9:	mov	rcx, qword ptr [rbp + 0x18]
0x4275fd:	cmp	byte ptr [rcx], 0x45
0x427600:	jne	0x4275f1
0x427602:	lea	rbx, [rcx + 1]
0x427606:	mov	qword ptr [rbp + 0x18], rbx
0x42760a:	mov	sil, byte ptr [rcx + 1]
0x42760e:	cmp	sil, 0x73
0x427612:	jne	0x427642
0x427614:	add	rcx, 2
0x427618:	mov	rdi, rbp
0x42761b:	mov	qword ptr [rbp + 0x18], rcx
0x42761f:	call	0x425021
0x427624:	test	eax, eax
0x427626:	je	0x4275f1
0x427628:	mov	edx, 0xe
0x42762d:	mov	esi, 0x4cd4c7
0x427632:	mov	rdi, rbp
0x427635:	call	0x424dcf
0x42763a:	mov	r12, rax
0x42763d:	jmp	0x4276ce
0x427642:	or	ebx, 0xffffffff
0x427645:	cmp	sil, 0x64
0x427649:	jne	0x427661
0x42764b:	add	rcx, 2
0x42764f:	mov	rdi, rbp
0x427652:	mov	qword ptr [rbp + 0x18], rcx
0x427656:	call	0x424f96
0x42765b:	mov	ebx, eax
0x42765d:	test	eax, eax
0x42765f:	js	0x4275f1
0x427661:	mov	rdi, rbp
0x427664:	call	0x427535
0x427669:	mov	r12, rax
0x42766c:	test	rax, rax
0x42766f:	jne	0x427678
0x427671:	cmp	ebx, -1
0x427674:	je	0x4276ce
0x427676:	jmp	0x427693
0x427678:	mov	edi, dword ptr [rax]
0x42767a:	sub	edi, 0x47
0x42767d:	and	edi, 0xfffffffd
0x427680:	je	0x427671
0x427682:	mov	rdi, rbp
0x427685:	call	0x425021
0x42768a:	test	eax, eax
0x42768c:	jne	0x427671
0x42768e:	jmp	0x4275f1
0x427693:	mov	r8d, dword ptr [rbp + 0x28]
0x427697:	cmp	r8d, dword ptr [rbp + 0x2c]
0x42769b:	jge	0x4276cb
0x42769d:	movsxd	r9, r8d
0x4276a0:	inc	r8d
0x4276a3:	shl	r9, 5
0x4276a7:	add	r9, qword ptr [rbp + 0x20]
0x4276ab:	mov	qword ptr [r9 + 4], 0
0x4276b3:	mov	dword ptr [rbp + 0x28], r8d
0x4276b7:	mov	qword ptr [r9 + 0x10], r12
0x4276bb:	mov	r12, r9
0x4276be:	mov	dword ptr [r9], 0x48
0x4276c5:	mov	dword ptr [r9 + 0x18], ebx
0x4276c9:	jmp	0x4276ce
0x4276cb:	xor	r12d, r12d
0x4276ce:	cmp	dword ptr [r13], 3
0x4276d3:	jne	0x4276e7
0x4276d5:	mov	r10, qword ptr [r13 + 0x18]
0x4276d9:	cmp	dword ptr [r10], 0x29
0x4276dd:	jne	0x4276e7
0x4276df:	mov	qword ptr [r10 + 0x10], 0
0x4276e7:	mov	rcx, r12
0x4276ea:	mov	rdx, r13
0x4276ed:	mov	esi, 2
0x4276f2:	jmp	0x4277b3
0x4276f7:	add	rsp, 0x18
0x4276fb:	pop	rbx
0x4276fc:	pop	rbp
0x4276fd:	pop	r12
0x4276ff:	pop	r13
0x427701:	jmp	0x426859
0x427706:	cmp	byte ptr [rax + 1], 0x74
0x42770a:	je	0x42771d
0x42770c:	xor	esi, esi
0x42770e:	call	0x425429
0x427713:	mov	ecx, 1
0x427718:	mov	r12, rax
0x42771b:	jmp	0x427758
0x42771d:	add	rax, 2
0x427721:	mov	qword ptr [rdi + 0x18], rax
0x427725:	call	0x426859
0x42772a:	mov	edx, 3
0x42772f:	mov	esi, 0x45be34
0x427734:	mov	rdi, rbp
0x427737:	mov	r8, rax
0x42773a:	call	0x424dcf
0x42773f:	mov	rcx, r8
0x427742:	mov	esi, 1
0x427747:	mov	rdx, rax
0x42774a:	call	0x424cee
0x42774f:	add	dword ptr [rbp + 0x48], 3
0x427753:	xor	ecx, ecx
0x427755:	mov	r12, rax
0x427758:	mov	rdx, qword ptr [rbp + 0x18]
0x42775c:	cmp	byte ptr [rdx], 0x49
0x42775f:	jne	0x4277c5
0x427761:	test	ecx, ecx
0x427763:	je	0x42777b
0x427765:	jmp	0x4277a0
0x427767:	mov	rdi, rbp
0x42776a:	call	0x426859
0x42776f:	mov	rsi, qword ptr [rbp + 0x18]
0x427773:	mov	r12, rax
0x427776:	cmp	byte ptr [rsi], 0x49
0x427779:	jne	0x4277c5
0x42777b:	test	r12, r12
0x42777e:	je	0x4275f1
0x427784:	mov	edi, dword ptr [rbp + 0x38]
0x427787:	cmp	edi, dword ptr [rbp + 0x3c]
0x42778a:	jge	0x4275f1
0x427790:	mov	r10, qword ptr [rbp + 0x30]
0x427794:	movsxd	r9, edi
0x427797:	inc	edi
0x427799:	mov	qword ptr [r10 + r9*8], r12
0x42779d:	mov	dword ptr [rbp + 0x38], edi
0x4277a0:	mov	rdi, rbp
0x4277a3:	call	0x425e7e
0x4277a8:	mov	rdx, r12
0x4277ab:	mov	esi, 4
0x4277b0:	mov	rcx, rax
0x4277b3:	add	rsp, 0x18
0x4277b7:	mov	rdi, rbp
0x4277ba:	pop	rbx
0x4277bb:	pop	rbp
0x4277bc:	pop	r12
0x4277be:	pop	r13
0x4277c0:	jmp	0x424cee
0x4277c5:	add	rsp, 0x18
0x4277c9:	mov	rax, r12
0x4277cc:	pop	rbx
0x4277cd:	pop	rbp
0x4277ce:	pop	r12
0x4277d0:	pop	r13
0x4277d2:	ret	
0x4277d3:	push	rbx
0x4277d4:	mov	rbx, rdi
0x4277d7:	test	byte ptr [rdi + 0x12], 4
0x4277db:	jne	0x4277ef
0x4277dd:	mov	edx, dword ptr [rdi + 0x58]
0x4277e0:	xor	eax, eax
0x4277e2:	cmp	edx, 0x800
0x4277e8:	ja	0x427843
0x4277ea:	inc	edx
0x4277ec:	mov	dword ptr [rdi + 0x58], edx
0x4277ef:	mov	rax, qword ptr [rbx + 0x18]
0x4277f3:	cmp	byte ptr [rax], 0x46
0x4277f6:	je	0x4277fc
0x4277f8:	xor	eax, eax
0x4277fa:	jmp	0x42783a
0x4277fc:	lea	rcx, [rax + 1]
0x427800:	mov	qword ptr [rbx + 0x18], rcx
0x427804:	cmp	byte ptr [rax + 1], 0x59
0x427808:	jne	0x427812
0x42780a:	add	rax, 2
0x42780e:	mov	qword ptr [rbx + 0x18], rax
0x427812:	mov	esi, 1
0x427817:	mov	rdi, rbx
0x42781a:	call	0x426efb
0x42781f:	mov	rdi, rbx
0x427822:	mov	rsi, rax
0x427825:	call	0x424f4f
0x42782a:	mov	rsi, qword ptr [rbx + 0x18]
0x42782e:	cmp	byte ptr [rsi], 0x45
0x427831:	jne	0x4277f8
0x427833:	inc	rsi
0x427836:	mov	qword ptr [rbx + 0x18], rsi
0x42783a:	test	byte ptr [rbx + 0x12], 4
0x42783e:	jne	0x427843
0x427840:	dec	dword ptr [rbx + 0x58]
0x427843:	pop	rbx
0x427844:	ret	
0x427845:	push	r13
0x427847:	push	r12
0x427849:	push	rbp
0x42784a:	mov	rbp, rdi
0x42784d:	push	rbx
0x42784e:	sub	rsp, 0x18
0x427852:	mov	rax, qword ptr [rdi + 0x18]
0x427856:	mov	qword ptr [rsp + 8], 0
0x42785f:	cmp	byte ptr [rax], sil
0x427862:	jne	0x427883
0x427864:	inc	rax
0x427867:	xor	ecx, ecx
0x427869:	xor	edx, edx
0x42786b:	mov	esi, 0x2e
0x427870:	mov	qword ptr [rdi + 0x18], rax
0x427874:	add	rsp, 0x18
0x427878:	pop	rbx
0x427879:	pop	rbp
0x42787a:	pop	r12
0x42787c:	pop	r13
0x42787e:	jmp	0x424cee
0x427883:	mov	r12d, esi
0x427886:	lea	rbx, [rsp + 8]
0x42788b:	mov	r13d, dword ptr [rbp + 0x4c]
0x42788f:	mov	dword ptr [rbp + 0x4c], 1
0x427896:	mov	rdi, rbp
0x427899:	call	0x42571f
0x42789e:	mov	dword ptr [rbp + 0x4c], r13d
0x4278a2:	mov	rdx, rax
0x4278a5:	test	rax, rax
0x4278a8:	jne	0x4278ae
0x4278aa:	xor	eax, eax
0x4278ac:	jmp	0x4278de
0x4278ae:	xor	ecx, ecx
0x4278b0:	mov	esi, 0x2e
0x4278b5:	mov	rdi, rbp
0x4278b8:	call	0x424cee
0x4278bd:	mov	qword ptr [rbx], rax
0x4278c0:	test	rax, rax
0x4278c3:	je	0x4278aa
0x4278c5:	mov	rdx, qword ptr [rbp + 0x18]
0x4278c9:	lea	rbx, [rax + 0x18]
0x4278cd:	cmp	byte ptr [rdx], r12b
0x4278d0:	jne	0x42788b
0x4278d2:	inc	rdx
0x4278d5:	mov	rax, qword ptr [rsp + 8]
0x4278da:	mov	qword ptr [rbp + 0x18], rdx
0x4278de:	add	rsp, 0x18
0x4278e2:	pop	rbx
0x4278e3:	pop	rbp
0x4278e4:	pop	r12
0x4278e6:	pop	r13
0x4278e8:	ret	
0x4278e9:	endbr64	
0x4278ed:	push	r13
0x4278ef:	mov	r13, rdi
0x4278f2:	push	r12
0x4278f4:	mov	r12, rsi
0x4278f7:	push	rbp
0x4278f8:	push	rbx
0x4278f9:	mov	rbx, rdx
0x4278fc:	push	rcx
0x4278fd:	mov	rax, qword ptr [rdx + 8]
0x427901:	mov	rbp, qword ptr [rdx + 0x10]
0x427905:	mov	edx, dword ptr [rdx + 0x18]
0x427908:	lea	r8, [rsi + rax + 1]
0x42790d:	cmp	r8, rbp
0x427910:	jbe	0x427960
0x427912:	test	edx, edx
0x427914:	jne	0x427987
0x427916:	test	rbp, rbp
0x427919:	jne	0x427920
0x42791b:	mov	ebp, 2
0x427920:	cmp	r8, rbp
0x427923:	jbe	0x42792a
0x427925:	add	rbp, rbp
0x427928:	jmp	0x427920
0x42792a:	mov	rdi, qword ptr [rbx]
0x42792d:	mov	rsi, rbp
0x427930:	call	0x403d20
0x427935:	test	rax, rax
0x427938:	jne	0x427959
0x42793a:	mov	rdi, qword ptr [rbx]
0x42793d:	call	0x403830
0x427942:	xorps	xmm0, xmm0
0x427945:	mov	qword ptr [rbx], 0
0x42794c:	mov	dword ptr [rbx + 0x18], 1
0x427953:	movups	xmmword ptr [rbx + 8], xmm0
0x427957:	jmp	0x427987
0x427959:	mov	qword ptr [rbx], rax
0x42795c:	mov	qword ptr [rbx + 0x10], rbp
0x427960:	cmp	dword ptr [rbx + 0x18], 0
0x427964:	jne	0x427987
0x427966:	mov	rdi, qword ptr [rbx + 8]
0x42796a:	mov	rsi, r13
0x42796d:	add	rdi, qword ptr [rbx]
0x427970:	mov	rcx, r12
0x427973:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x427975:	mov	rbp, qword ptr [rbx]
0x427978:	add	rbp, r12
0x42797b:	add	rbp, qword ptr [rbx + 8]
0x42797f:	mov	byte ptr [rbp], 0
0x427983:	add	qword ptr [rbx + 8], r12
0x427987:	pop	rax
0x427988:	pop	rbx
0x427989:	pop	rbp
0x42798a:	pop	r12
0x42798c:	pop	r13
0x42798e:	ret	
0x42798f:	push	r12
0x427991:	mov	r12, rdi
0x427994:	mov	rdi, rsi
0x427997:	push	rbp
0x427998:	mov	rbp, rsi
0x42799b:	push	rax
0x42799c:	call	0x4039e0
0x4279a1:	pop	rcx
0x4279a2:	mov	rsi, rbp
0x4279a5:	mov	rdi, r12
0x4279a8:	pop	rbp
0x4279a9:	mov	rdx, rax
0x4279ac:	pop	r12
0x4279ae:	jmp	0x42517a
0x4279b3:	push	rbp
0x4279b4:	mov	r8d, esi
0x4279b7:	mov	rbp, rdi
0x4279ba:	mov	ecx, 0x4c90c1
0x4279bf:	mov	edx, 0x19
0x4279c4:	mov	esi, 1
0x4279c9:	xor	eax, eax
0x4279cb:	sub	rsp, 0x20
0x4279cf:	lea	rdi, [rsp + 7]
0x4279d4:	call	0x403f60
0x4279d9:	lea	rsi, [rsp + 7]
0x4279de:	mov	rdi, rbp
0x4279e1:	call	0x42798f
0x4279e6:	add	rsp, 0x20
0x4279ea:	pop	rbp
0x4279eb:	ret	
0x4279ec:	push	r15
0x4279ee:	push	r14
0x4279f0:	push	r13
0x4279f2:	push	r12
0x4279f4:	push	rbp
0x4279f5:	mov	rbp, rdi
0x4279f8:	push	rbx
0x4279f9:	sub	rsp, 0x98
0x427a00:	test	rdx, rdx
0x427a03:	je	0x4288e4
0x427a09:	mov	r13d, dword ptr [rdi + 0x130]
0x427a10:	test	r13d, r13d
0x427a13:	jne	0x428ded
0x427a19:	mov	ecx, dword ptr [rdx]
0x427a1b:	mov	r12, rdx
0x427a1e:	cmp	ecx, 0x51
0x427a21:	ja	0x4288e4
0x427a27:	mov	eax, ecx
0x427a29:	notrack jmp	qword ptr ds:[rax*8 + 0x4ca460]
0x427a31:	mov	rdx, qword ptr [rdx + 0x10]
0x427a35:	mov	esi, 0x400b
0x427a3a:	call	0x428dff
0x427a3f:	mov	esi, 0x4cd4d6
0x427a44:	jmp	0x428d56
0x427a49:	mov	rdx, qword ptr [rdx + 0x10]
0x427a4d:	mov	esi, 0x400b
0x427a52:	call	0x428dff
0x427a57:	mov	esi, 0x4cd4eb
0x427a5c:	mov	rdi, rbp
0x427a5f:	call	0x42798f
0x427a64:	mov	r15, qword ptr [r12 + 0x18]
0x427a69:	cmp	dword ptr [r15], 0x48
0x427a6d:	jne	0x4286a4
0x427a73:	mov	esi, 0x4cd4dc
0x427a78:	mov	rdi, rbp
0x427a7b:	call	0x42798f
0x427a80:	mov	r11d, dword ptr [r15 + 0x18]
0x427a84:	mov	rdi, rbp
0x427a87:	lea	esi, [r11 + 1]
0x427a8b:	call	0x4279b3
0x427a90:	mov	esi, 0x4cd4ea
0x427a95:	mov	rdi, rbp
0x427a98:	call	0x42798f
0x427a9d:	mov	r15, qword ptr [r15 + 0x10]
0x427aa1:	jmp	0x4286a4
0x427aa6:	mov	r13, qword ptr [rdi + 0x128]
0x427aad:	lea	r10, [rsp + 0x10]
0x427ab2:	mov	rbx, qword ptr [rdx + 0x10]
0x427ab6:	xor	eax, eax
0x427ab8:	mov	qword ptr [rdi + 0x128], 0
0x427ac3:	mov	rdx, r10
0x427ac6:	movabs	r11, 0x3400000000001f
0x427ad0:	test	rbx, rbx
0x427ad3:	je	0x4288e4
0x427ad9:	cmp	eax, 4
0x427adc:	je	0x4288e4
0x427ae2:	movq	xmm13, rbx
0x427ae7:	mov	dword ptr [r10 + 0x10], 0
0x427aef:	lea	r14d, [rax + 1]
0x427af3:	movq	xmm12, qword ptr [rbp + 0x128]
0x427afc:	mov	rdi, qword ptr [rbp + 0x120]
0x427b03:	mov	qword ptr [rbp + 0x128], r10
0x427b0a:	punpcklqdq	xmm12, xmm13
0x427b0f:	movaps	xmmword ptr [r10], xmm12
0x427b13:	mov	r8d, dword ptr [rbx]
0x427b16:	mov	qword ptr [r10 + 0x18], rdi
0x427b1a:	lea	ecx, [r8 - 0x1c]
0x427b1e:	cmp	ecx, 0x35
0x427b21:	ja	0x427b3e
0x427b23:	mov	rax, r11
0x427b26:	shr	rax, cl
0x427b29:	test	al, 1
0x427b2b:	je	0x427bdf
0x427b31:	mov	rbx, qword ptr [rbx + 0x10]
0x427b35:	add	r10, 0x20
0x427b39:	mov	eax, r14d
0x427b3c:	jmp	0x427ad0
0x427b3e:	cmp	r8d, 2
0x427b42:	jne	0x427bdf
0x427b48:	mov	rbx, qword ptr [rbx + 0x18]
0x427b4c:	cmp	dword ptr [rbx], 0x48
0x427b4f:	jne	0x427b55
0x427b51:	mov	rbx, qword ptr [rbx + 0x10]
0x427b55:	mov	esi, r14d
0x427b58:	shl	rax, 5
0x427b5c:	movabs	r10, 0x3400000000001f
0x427b66:	mov	r14, rsi
0x427b69:	add	rax, rdx
0x427b6c:	shl	r14, 5
0x427b70:	add	rdx, r14
0x427b73:	mov	r14d, esi
0x427b76:	test	rbx, rbx
0x427b79:	je	0x4288e4
0x427b7f:	mov	ecx, dword ptr [rbx]
0x427b81:	sub	ecx, 0x1c
0x427b84:	cmp	ecx, 0x35
0x427b87:	ja	0x427bdf
0x427b89:	mov	r9, r10
0x427b8c:	shr	r9, cl
0x427b8f:	mov	r15, r9
0x427b92:	and	r15b, 1
0x427b96:	je	0x427bdf
0x427b98:	cmp	esi, 4
0x427b9b:	je	0x4288e4
0x427ba1:	movaps	xmm14, xmmword ptr [rax]
0x427ba5:	mov	qword ptr [rbp + 0x128], rdx
0x427bac:	inc	rsi
0x427baf:	add	rdx, 0x20
0x427bb3:	movaps	xmmword ptr [rdx - 0x20], xmm14
0x427bb8:	movaps	xmm15, xmmword ptr [rax + 0x10]
0x427bbd:	mov	qword ptr [rdx - 0x20], rax
0x427bc1:	add	rax, 0x20
0x427bc5:	movaps	xmmword ptr [rdx - 0x10], xmm15
0x427bca:	mov	qword ptr [rax - 0x18], rbx
0x427bce:	mov	dword ptr [rax - 0x10], 0
0x427bd5:	mov	qword ptr [rax - 8], rdi
0x427bd9:	mov	rbx, qword ptr [rbx + 0x10]
0x427bdd:	jmp	0x427b73
0x427bdf:	movq	xmm0, rdi
0x427be4:	movq	xmm4, rbx
0x427be9:	cmp	dword ptr [rbx], 4
0x427bec:	punpcklqdq	xmm0, xmm4
0x427bf0:	jne	0x427bfd
0x427bf2:	mov	qword ptr [rbp + 0x120], rsp
0x427bf9:	movaps	xmmword ptr [rsp], xmm0
0x427bfd:	mov	rdx, qword ptr [r12 + 0x18]
0x427c02:	mov	esi, 0x400b
0x427c07:	mov	rdi, rbp
0x427c0a:	call	0x428dff
0x427c0f:	cmp	dword ptr [rbx], 4
0x427c12:	jne	0x427c53
0x427c14:	mov	r12, qword ptr [rsp]
0x427c18:	mov	qword ptr [rbp + 0x120], r12
0x427c1f:	jmp	0x427c53
0x427c21:	lea	r15d, [r14 - 1]
0x427c25:	mov	r14, r15
0x427c28:	shl	r15, 5
0x427c2c:	cmp	dword ptr [rsp + r15 + 0x20], 0
0x427c32:	jne	0x427c53
0x427c34:	mov	esi, 0x20
0x427c39:	mov	rdi, rbp
0x427c3c:	call	0x42513f
0x427c41:	mov	rdx, qword ptr [rsp + r15 + 0x18]
0x427c46:	mov	esi, 0x400b
0x427c4b:	mov	rdi, rbp
0x427c4e:	call	0x428fce
0x427c53:	test	r14d, r14d
0x427c56:	jne	0x427c21
0x427c58:	mov	qword ptr [rbp + 0x128], r13
0x427c5f:	jmp	0x428ded
0x427c64:	mov	r15, qword ptr [rdi + 0x170]
0x427c6b:	mov	r13, qword ptr [rdi + 0x128]
0x427c72:	mov	esi, 0x400b
0x427c77:	mov	qword ptr [rbp + 0x170], rdx
0x427c7e:	mov	qword ptr [rdi + 0x128], 0
0x427c89:	mov	rdx, qword ptr [rdx + 0x10]
0x427c8d:	call	0x428dff
0x427c92:	cmp	byte ptr [rbp + 0x108], 0x3c
0x427c99:	jne	0x427ca8
0x427c9b:	mov	esi, 0x20
0x427ca0:	mov	rdi, rbp
0x427ca3:	call	0x42513f
0x427ca8:	mov	esi, 0x3c
0x427cad:	mov	rdi, rbp
0x427cb0:	call	0x42513f
0x427cb5:	mov	rdx, qword ptr [r12 + 0x18]
0x427cba:	mov	esi, 0x400b
0x427cbf:	mov	rdi, rbp
0x427cc2:	call	0x428dff
0x427cc7:	cmp	byte ptr [rbp + 0x108], 0x3e
0x427cce:	jne	0x427cdd
0x427cd0:	mov	esi, 0x20
0x427cd5:	mov	rdi, rbp
0x427cd8:	call	0x42513f
0x427cdd:	mov	esi, 0x3e
0x427ce2:	mov	rdi, rbp
0x427ce5:	call	0x42513f
0x427cea:	mov	qword ptr [rbp + 0x128], r13
0x427cf1:	mov	qword ptr [rbp + 0x170], r15
0x427cf8:	jmp	0x428ded
0x427cfd:	cmp	dword ptr [rdi + 0x138], 0
0x427d04:	je	0x427d21
0x427d06:	mov	esi, 0x4cd4ee
0x427d0b:	mov	edx, 5
0x427d10:	call	0x42517a
0x427d15:	mov	rsi, qword ptr [r12 + 0x10]
0x427d1a:	inc	esi
0x427d1c:	jmp	0x4285d6
0x427d21:	mov	rsi, rdx
0x427d24:	call	0x4251c7
0x427d29:	mov	rdx, rax
0x427d2c:	test	rax, rax
0x427d2f:	je	0x4288e4
0x427d35:	cmp	dword ptr [rax], 0x2f
0x427d38:	jne	0x427d54
0x427d3a:	mov	esi, dword ptr [rbp + 0x13c]
0x427d40:	mov	rdi, rax
0x427d43:	call	0x4251a2
0x427d48:	mov	rdx, rax
0x427d4b:	test	rax, rax
0x427d4e:	je	0x4288e4
0x427d54:	mov	r14, qword ptr [rbp + 0x120]
0x427d5b:	mov	esi, 0x400b
0x427d60:	mov	rdi, rbp
0x427d63:	mov	r9, qword ptr [r14]
0x427d66:	mov	qword ptr [rbp + 0x120], r9
0x427d6d:	call	0x428dff
0x427d72:	mov	qword ptr [rbp + 0x120], r14
0x427d79:	jmp	0x428ded
0x427d7e:	mov	esi, 0x4cd9f0
0x427d83:	jmp	0x428cad
0x427d88:	mov	esi, 0x7e
0x427d8d:	call	0x42513f
0x427d92:	mov	rdx, qword ptr [r12 + 0x18]
0x427d97:	jmp	0x428cba
0x427d9c:	mov	esi, 0x4cd50a
0x427da1:	jmp	0x428cad
0x427da6:	mov	esi, 0x4cd4f4
0x427dab:	jmp	0x428cad
0x427db0:	mov	esi, 0x4cd4fd
0x427db5:	call	0x42798f
0x427dba:	mov	rdx, qword ptr [r12 + 0x10]
0x427dbf:	mov	esi, 0x400b
0x427dc4:	mov	rdi, rbp
0x427dc7:	call	0x428dff
0x427dcc:	mov	esi, 0x4cd516
0x427dd1:	mov	rdi, rbp
0x427dd4:	call	0x42798f
0x427dd9:	mov	rdx, qword ptr [r12 + 0x18]
0x427dde:	jmp	0x428cba
0x427de3:	mov	esi, 0x4cd51b
0x427de8:	jmp	0x428cad
0x427ded:	mov	esi, 0x4cd529
0x427df2:	jmp	0x428cad
0x427df7:	mov	esi, 0x4cd53c
0x427dfc:	jmp	0x428cad
0x427e01:	mov	esi, 0x4cd54d
0x427e06:	jmp	0x428cad
0x427e0b:	mov	esi, 0x4cd551
0x427e10:	jmp	0x428cad
0x427e15:	mov	esi, 0x4cd563
0x427e1a:	jmp	0x428cad
0x427e1f:	mov	esi, 0x4cd57e
0x427e24:	jmp	0x428cad
0x427e29:	mov	esi, 0x4cd58e
0x427e2e:	jmp	0x428cad
0x427e33:	mov	esi, 0x4cd5a2
0x427e38:	jmp	0x428cad
0x427e3d:	mov	esi, 0x4cd5b9
0x427e42:	jmp	0x428cad
0x427e47:	mov	esi, 0x4cd5d3
0x427e4c:	call	0x42798f
0x427e51:	mov	rdx, qword ptr [r12 + 0x18]
0x427e56:	mov	esi, 0x400b
0x427e5b:	mov	rdi, rbp
0x427e5e:	call	0x428dff
0x427e63:	mov	esi, 0x4cd4f7
0x427e68:	jmp	0x428cad
0x427e6d:	mov	esi, 0x4cd5e9
0x427e72:	jmp	0x428cad
0x427e77:	mov	esi, 0x4cd5ff
0x427e7c:	jmp	0x428cad
0x427e81:	mov	esi, 0x4cd5fb
0x427e86:	jmp	0x428cad
0x427e8b:	movsxd	rdx, dword ptr [rdx + 0x18]
0x427e8f:	mov	rsi, qword ptr [r12 + 0x10]
0x427e94:	jmp	0x428407
0x427e99:	mov	rdx, qword ptr [rdi + 0x128]
0x427ea0:	test	rdx, rdx
0x427ea3:	je	0x427ed0
0x427ea5:	mov	r13d, dword ptr [rdx + 0x10]
0x427ea9:	test	r13d, r13d
0x427eac:	jne	0x427ecb
0x427eae:	mov	rdi, qword ptr [rdx + 8]
0x427eb2:	mov	r11d, dword ptr [rdi]
0x427eb5:	lea	eax, [r11 - 0x19]
0x427eb9:	cmp	eax, 2
0x427ebc:	ja	0x427ff2
0x427ec2:	cmp	ecx, r11d
0x427ec5:	je	0x428cb5
0x427ecb:	mov	rdx, qword ptr [rdx]
0x427ece:	jmp	0x427ea0
0x427ed0:	xor	r13d, r13d
0x427ed3:	jmp	0x427ff4
0x427ed8:	mov	rdi, qword ptr [rdx + 0x10]
0x427edc:	mov	r13d, dword ptr [rbp + 0x138]
0x427ee3:	mov	r14d, dword ptr [rdi]
0x427ee6:	test	r13d, r13d
0x427ee9:	jne	0x427fc9
0x427eef:	cmp	r14d, 5
0x427ef3:	jne	0x427fcc
0x427ef9:	mov	edx, dword ptr [rbp + 0x158]
0x427eff:	xor	r8d, r8d
0x427f02:	cmp	edx, r8d
0x427f05:	jle	0x427f48
0x427f07:	mov	rsi, r8
0x427f0a:	inc	r8
0x427f0d:	shl	rsi, 4
0x427f11:	add	rsi, qword ptr [rbp + 0x150]
0x427f18:	cmp	rdi, qword ptr [rsi]
0x427f1b:	jne	0x427f02
0x427f1d:	mov	r14, qword ptr [rbp + 0x148]
0x427f24:	mov	r9, r14
0x427f27:	test	r9, r9
0x427f2a:	je	0x428d8e
0x427f30:	mov	r15, qword ptr [r9]
0x427f33:	cmp	r15, rdi
0x427f36:	je	0x427f89
0x427f38:	cmp	r15, r12
0x427f3b:	jne	0x427f42
0x427f3d:	cmp	r9, r14
0x427f40:	jne	0x427f89
0x427f42:	mov	r9, qword ptr [r9 + 8]
0x427f46:	jmp	0x427f27
0x427f48:	cmp	edx, dword ptr [rbp + 0x15c]
0x427f4e:	jge	0x4288e4
0x427f54:	movsxd	r11, edx
0x427f57:	mov	rax, qword ptr [rbp + 0x120]
0x427f5e:	inc	edx
0x427f60:	shl	r11, 4
0x427f64:	add	r11, qword ptr [rbp + 0x150]
0x427f6b:	mov	dword ptr [rbp + 0x158], edx
0x427f71:	add	r11, 8
0x427f75:	mov	qword ptr [r11 - 8], rdi
0x427f79:	test	rax, rax
0x427f7c:	jne	0x428dab
0x427f82:	mov	qword ptr [r11], 0
0x427f89:	mov	rsi, rdi
0x427f8c:	mov	rdi, rbp
0x427f8f:	call	0x4251c7
0x427f94:	mov	rdi, rax
0x427f97:	test	rax, rax
0x427f9a:	je	0x427fb4
0x427f9c:	cmp	dword ptr [rax], 0x2f
0x427f9f:	jne	0x427fcc
0x427fa1:	mov	esi, dword ptr [rbp + 0x13c]
0x427fa7:	call	0x4251a2
0x427fac:	mov	rdi, rax
0x427faf:	test	rax, rax
0x427fb2:	jne	0x427fcc
0x427fb4:	test	r13d, r13d
0x427fb7:	je	0x4288e4
0x427fbd:	mov	qword ptr [rbp + 0x120], rbx
0x427fc4:	jmp	0x4288e4
0x427fc9:	xor	r13d, r13d
0x427fcc:	mov	r10d, dword ptr [rdi]
0x427fcf:	cmp	ecx, r10d
0x427fd2:	je	0x427fef
0x427fd4:	cmp	r10d, 0x23
0x427fd8:	je	0x427fef
0x427fda:	xor	edx, edx
0x427fdc:	cmp	r10d, 0x24
0x427fe0:	jne	0x427ff4
0x427fe2:	mov	rdx, qword ptr [rdi + 0x10]
0x427fe6:	jmp	0x427ff4
0x427fe8:	xor	r13d, r13d
0x427feb:	xor	edx, edx
0x427fed:	jmp	0x427ff4
0x427fef:	mov	r12, rdi
0x427ff2:	xor	edx, edx
0x427ff4:	movq	xmm10, qword ptr [rbp + 0x128]
0x427ffd:	movq	xmm11, r12
0x428002:	mov	rsi, qword ptr [rbp + 0x120]
0x428009:	lea	r8, [rsp + 0x10]
0x42800e:	mov	qword ptr [rbp + 0x128], r8
0x428015:	punpcklqdq	xmm10, xmm11
0x42801a:	mov	dword ptr [rsp + 0x20], 0
0x428022:	mov	qword ptr [rsp + 0x28], rsi
0x428027:	movaps	xmmword ptr [rsp + 0x10], xmm10
0x42802d:	test	rdx, rdx
0x428030:	jne	0x428037
0x428032:	mov	rdx, qword ptr [r12 + 0x10]
0x428037:	mov	esi, 0x400b
0x42803c:	mov	rdi, rbp
0x42803f:	call	0x428dff
0x428044:	cmp	dword ptr [rsp + 0x20], 0
0x428049:	jne	0x42805b
0x42804b:	mov	rdx, r12
0x42804e:	mov	esi, 0x400b
0x428053:	mov	rdi, rbp
0x428056:	call	0x428fce
0x42805b:	mov	r12, qword ptr [rsp + 0x10]
0x428060:	mov	qword ptr [rbp + 0x128], r12
0x428067:	test	r13d, r13d
0x42806a:	je	0x428ded
0x428070:	mov	qword ptr [rbp + 0x120], rbx
0x428077:	jmp	0x428ded
0x42807c:	mov	r8, qword ptr [rdx + 0x10]
0x428080:	movsxd	rdx, dword ptr [r8 + 8]
0x428084:	mov	rsi, qword ptr [r8]
0x428087:	jmp	0x428407
0x42808c:	movq	xmm8, qword ptr [rdi + 0x128]
0x428095:	mov	rdx, qword ptr [rdx + 0x10]
0x428099:	movq	xmm9, r12
0x42809e:	punpcklqdq	xmm8, xmm9
0x4280a3:	test	rdx, rdx
0x4280a6:	je	0x4280fc
0x4280a8:	lea	rax, [rsp + 0x10]
0x4280ad:	mov	rsi, qword ptr [rdi + 0x120]
0x4280b4:	mov	dword ptr [rsp + 0x20], 0
0x4280bc:	mov	qword ptr [rdi + 0x128], rax
0x4280c3:	mov	qword ptr [rsp + 0x28], rsi
0x4280c8:	mov	esi, 0x400b
0x4280cd:	movaps	xmmword ptr [rsp + 0x10], xmm8
0x4280d3:	call	0x428dff
0x4280d8:	mov	rdx, qword ptr [rsp + 0x10]
0x4280dd:	cmp	dword ptr [rsp + 0x20], 0
0x4280e2:	mov	qword ptr [rbp + 0x128], rdx
0x4280e9:	jne	0x428ded
0x4280ef:	mov	esi, 0x20
0x4280f4:	mov	rdi, rbp
0x4280f7:	call	0x42513f
0x4280fc:	mov	rcx, qword ptr [rbp + 0x128]
0x428103:	mov	rdx, r12
0x428106:	mov	rdi, rbp
0x428109:	mov	esi, 0x400b
0x42810e:	add	rsp, 0x98
0x428115:	pop	rbx
0x428116:	pop	rbp
0x428117:	pop	r12
0x428119:	pop	r13
0x42811b:	pop	r14
0x42811d:	pop	r15
0x42811f:	jmp	0x42939d
0x428124:	lea	r9, [rsp + 0x10]
0x428129:	movq	xmm7, rdx
0x42812e:	mov	r15, qword ptr [rdi + 0x128]
0x428135:	mov	r8, qword ptr [rdi + 0x120]
0x42813c:	mov	qword ptr [rdi + 0x128], r9
0x428143:	mov	ebx, 1
0x428148:	movq	xmm2, r15
0x42814d:	mov	dword ptr [rsp + 0x20], 0
0x428155:	mov	r13, r15
0x428158:	mov	qword ptr [rsp + 0x28], r8
0x42815d:	punpcklqdq	xmm2, xmm7
0x428161:	movaps	xmmword ptr [rsp + 0x10], xmm2
0x428166:	test	r13, r13
0x428169:	je	0x4281cf
0x42816b:	mov	rdi, qword ptr [r13 + 8]
0x42816f:	mov	r14d, dword ptr [rdi]
0x428172:	sub	r14d, 0x19
0x428176:	cmp	r14d, 2
0x42817a:	ja	0x4281cf
0x42817c:	cmp	dword ptr [r13 + 0x10], 0
0x428181:	jne	0x4281c9
0x428183:	cmp	ebx, 3
0x428186:	ja	0x4288e4
0x42818c:	movups	xmm5, xmmword ptr [r13]
0x428191:	mov	r10d, ebx
0x428194:	mov	r11, qword ptr [rbp + 0x128]
0x42819b:	inc	ebx
0x42819d:	shl	r10, 5
0x4281a1:	movaps	xmmword ptr [rsp + r10 + 0x10], xmm5
0x4281a7:	movups	xmm6, xmmword ptr [r13 + 0x10]
0x4281ac:	mov	qword ptr [rsp + r10 + 0x10], r11
0x4281b1:	movaps	xmmword ptr [rsp + r10 + 0x20], xmm6
0x4281b7:	add	r10, r9
0x4281ba:	mov	qword ptr [rbp + 0x128], r10
0x4281c1:	mov	dword ptr [r13 + 0x10], 1
0x4281c9:	mov	r13, qword ptr [r13]
0x4281cd:	jmp	0x428166
0x4281cf:	mov	rdx, qword ptr [r12 + 0x18]
0x4281d4:	mov	esi, 0x400b
0x4281d9:	mov	rdi, rbp
0x4281dc:	call	0x428dff
0x4281e1:	cmp	dword ptr [rsp + 0x20], 0
0x4281e6:	mov	qword ptr [rbp + 0x128], r15
0x4281ed:	jne	0x428ded
0x4281f3:	cmp	ebx, 1
0x4281f6:	je	0x428216
0x4281f8:	lea	ecx, [rbx - 1]
0x4281fb:	mov	esi, 0x400b
0x428200:	mov	rdi, rbp
0x428203:	mov	rbx, rcx
0x428206:	shl	rcx, 5
0x42820a:	mov	rdx, qword ptr [rsp + rcx + 0x18]
0x42820f:	call	0x428fce
0x428214:	jmp	0x4281f3
0x428216:	mov	rcx, qword ptr [rbp + 0x128]
0x42821d:	mov	rdx, r12
0x428220:	mov	esi, 0x400b
0x428225:	mov	rdi, rbp
0x428228:	call	0x429136
0x42822d:	jmp	0x428ded
0x428232:	movq	xmm3, rdx
0x428237:	lea	rdx, [rsp + 0x10]
0x42823c:	movq	xmm1, qword ptr [rdi + 0x128]
0x428244:	mov	rsi, qword ptr [rdi + 0x120]
0x42824b:	mov	qword ptr [rdi + 0x128], rdx
0x428252:	mov	rdx, qword ptr [r12 + 0x18]
0x428257:	mov	qword ptr [rsp + 0x28], rsi
0x42825c:	punpcklqdq	xmm1, xmm3
0x428260:	mov	esi, 0x400b
0x428265:	mov	dword ptr [rsp + 0x20], 0
0x42826d:	movaps	xmmword ptr [rsp + 0x10], xmm1
0x428272:	call	0x428dff
0x428277:	cmp	dword ptr [rsp + 0x20], 0
0x42827c:	jne	0x42828e
0x42827e:	mov	rdx, r12
0x428281:	mov	esi, 0x400b
0x428286:	mov	rdi, rbp
0x428289:	call	0x428fce
0x42828e:	mov	r12, qword ptr [rsp + 0x10]
0x428293:	mov	qword ptr [rbp + 0x128], r12
0x42829a:	jmp	0x428ded
0x42829f:	cmp	word ptr [rdx + 0x1a], 0
0x4282a4:	je	0x4282b0
0x4282a6:	mov	esi, 0x4cd616
0x4282ab:	call	0x42798f
0x4282b0:	mov	rdx, qword ptr [r12 + 0x10]
0x4282b5:	cmp	qword ptr [rdx + 0x10], 0x4cb420
0x4282bd:	je	0x4282d9
0x4282bf:	mov	esi, 0x400b
0x4282c4:	mov	rdi, rbp
0x4282c7:	call	0x428dff
0x4282cc:	mov	esi, 0x20
0x4282d1:	mov	rdi, rbp
0x4282d4:	call	0x42513f
0x4282d9:	cmp	word ptr [r12 + 0x18], 0
0x4282e0:	mov	esi, 0x4cd61c
0x4282e5:	jne	0x428c6a
0x4282eb:	mov	esi, 0x4cd623
0x4282f0:	jmp	0x428c6a
0x4282f5:	mov	rdx, qword ptr [rdx + 0x10]
0x4282f9:	test	rdx, rdx
0x4282fc:	je	0x428308
0x4282fe:	mov	esi, 0x400b
0x428303:	call	0x428dff
0x428308:	cmp	qword ptr [r12 + 0x18], 0
0x42830e:	je	0x428ded
0x428314:	cmp	qword ptr [rbp + 0x100], 0xfd
0x42831f:	jbe	0x428329
0x428321:	mov	rdi, rbp
0x428324:	call	0x42510f
0x428329:	mov	esi, 0x4cd62a
0x42832e:	mov	rdi, rbp
0x428331:	call	0x42798f
0x428336:	mov	rdx, qword ptr [r12 + 0x18]
0x42833b:	mov	rdi, rbp
0x42833e:	mov	esi, 0x400b
0x428343:	mov	r13, qword ptr [rbp + 0x140]
0x42834a:	mov	r15, qword ptr [rbp + 0x100]
0x428351:	call	0x428dff
0x428356:	cmp	qword ptr [rbp + 0x140], r13
0x42835d:	jne	0x428ded
0x428363:	mov	rax, qword ptr [rbp + 0x100]
0x42836a:	cmp	rax, r15
0x42836d:	jne	0x428ded
0x428373:	sub	rax, 2
0x428377:	mov	qword ptr [rbp + 0x100], rax
0x42837e:	jmp	0x428ded
0x428383:	mov	rdx, qword ptr [rdx + 0x10]
0x428387:	mov	rbx, qword ptr [r12 + 0x18]
0x42838c:	test	rdx, rdx
0x42838f:	je	0x42839b
0x428391:	mov	esi, 0x400b
0x428396:	call	0x428dff
0x42839b:	mov	esi, 0x7b
0x4283a0:	mov	rdi, rbp
0x4283a3:	call	0x42513f
0x4283a8:	mov	esi, 0x400b
0x4283ad:	mov	rdx, rbx
0x4283b0:	mov	rdi, rbp
0x4283b3:	call	0x428dff
0x4283b8:	mov	esi, 0x7d
0x4283bd:	jmp	0x428d75
0x4283c2:	mov	r13, qword ptr [rdx + 0x10]
0x4283c6:	mov	esi, 0x4cd62d
0x4283cb:	mov	r14d, dword ptr [r13 + 0x10]
0x4283cf:	call	0x42798f
0x4283d4:	mov	r9, qword ptr [r13 + 8]
0x4283d8:	mov	r10b, byte ptr [r9]
0x4283db:	sub	r10d, 0x61
0x4283df:	cmp	r10b, 0x19
0x4283e3:	ja	0x4283f2
0x4283e5:	mov	esi, 0x20
0x4283ea:	mov	rdi, rbp
0x4283ed:	call	0x42513f
0x4283f2:	mov	rsi, qword ptr [r13 + 8]
0x4283f6:	movsxd	r11, r14d
0x4283f9:	cmp	byte ptr [rsi + r11 - 1], 0x20
0x4283ff:	jne	0x428404
0x428401:	dec	r14d
0x428404:	movsxd	rdx, r14d
0x428407:	add	rsp, 0x98
0x42840e:	mov	rdi, rbp
0x428411:	pop	rbx
0x428412:	pop	rbp
0x428413:	pop	r12
0x428415:	pop	r13
0x428417:	pop	r14
0x428419:	pop	r15
0x42841b:	jmp	0x42517a
0x428420:	mov	esi, 0x4cd636
0x428425:	call	0x42798f
0x42842a:	mov	rdx, qword ptr [r12 + 0x18]
0x42842f:	jmp	0x428cba
0x428434:	mov	esi, 0x4cd636
0x428439:	call	0x42798f
0x42843e:	mov	r15, qword ptr [rbp + 0x170]
0x428445:	test	r15, r15
0x428448:	je	0x42846c
0x42844a:	movq	xmm0, qword ptr [rbp + 0x120]
0x428452:	lea	rsi, [rsp + 0x10]
0x428457:	movq	xmm4, r15
0x42845c:	mov	qword ptr [rbp + 0x120], rsi
0x428463:	punpcklqdq	xmm0, xmm4
0x428467:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x42846c:	mov	rdx, qword ptr [r12 + 0x10]
0x428471:	cmp	dword ptr [rdx], 4
0x428474:	je	0x4284a2
0x428476:	mov	esi, 0x400b
0x42847b:	mov	rdi, rbp
0x42847e:	call	0x428dff
0x428483:	cmp	qword ptr [rbp + 0x170], 0
0x42848b:	je	0x428ded
0x428491:	mov	rcx, qword ptr [rsp + 0x10]
0x428496:	mov	qword ptr [rbp + 0x120], rcx
0x42849d:	jmp	0x428ded
0x4284a2:	mov	rdx, qword ptr [rdx + 0x10]
0x4284a6:	mov	esi, 0x400b
0x4284ab:	mov	rdi, rbp
0x4284ae:	call	0x428dff
0x4284b3:	cmp	qword ptr [rbp + 0x170], 0
0x4284bb:	je	0x4284c9
0x4284bd:	mov	r8, qword ptr [rsp + 0x10]
0x4284c2:	mov	qword ptr [rbp + 0x120], r8
0x4284c9:	cmp	byte ptr [rbp + 0x108], 0x3c
0x4284d0:	jne	0x4284df
0x4284d2:	mov	esi, 0x20
0x4284d7:	mov	rdi, rbp
0x4284da:	call	0x42513f
0x4284df:	mov	esi, 0x3c
0x4284e4:	mov	rdi, rbp
0x4284e7:	call	0x42513f
0x4284ec:	mov	rdi, qword ptr [r12 + 0x10]
0x4284f1:	mov	esi, 0x400b
0x4284f6:	mov	rdx, qword ptr [rdi + 0x18]
0x4284fa:	mov	rdi, rbp
0x4284fd:	call	0x428dff
0x428502:	cmp	byte ptr [rbp + 0x108], 0x3e
0x428509:	jne	0x428518
0x42850b:	mov	esi, 0x20
0x428510:	mov	rdi, rbp
0x428513:	call	0x42513f
0x428518:	mov	esi, 0x3e
0x42851d:	mov	rdi, rbp
0x428520:	call	0x42513f
0x428525:	jmp	0x428ded
0x42852a:	mov	rdx, qword ptr [rdx + 0x10]
0x42852e:	jmp	0x428592
0x428530:	mov	r13, qword ptr [rdx + 0x10]
0x428534:	mov	r15, qword ptr [rdx + 0x18]
0x428538:	mov	r10d, dword ptr [r13]
0x42853c:	cmp	r10d, 0x32
0x428540:	jne	0x4285ef
0x428546:	mov	r11, qword ptr [r13 + 0x10]
0x42854a:	mov	esi, 0x45f137
0x42854f:	mov	r14, qword ptr [r11]
0x428552:	mov	rdi, r14
0x428555:	call	0x403be0
0x42855a:	test	eax, eax
0x42855c:	jne	0x428578
0x42855e:	cmp	dword ptr [r15], 3
0x428562:	jne	0x428578
0x428564:	mov	rax, qword ptr [r15 + 0x10]
0x428568:	cmp	dword ptr [rax], 1
0x42856b:	jne	0x428578
0x42856d:	mov	rbx, qword ptr [r15 + 0x18]
0x428571:	cmp	dword ptr [rbx], 0x29
0x428574:	cmove	r15, rax
0x428578:	cmp	dword ptr [r15], 0x39
0x42857c:	jne	0x4285b0
0x42857e:	mov	rdx, qword ptr [r15 + 0x10]
0x428582:	mov	esi, 0x400b
0x428587:	mov	rdi, rbp
0x42858a:	call	0x428e7e
0x42858f:	mov	rdx, r13
0x428592:	add	rsp, 0x98
0x428599:	mov	rdi, rbp
0x42859c:	mov	esi, 0x400b
0x4285a1:	pop	rbx
0x4285a2:	pop	rbp
0x4285a3:	pop	r12
0x4285a5:	pop	r13
0x4285a7:	pop	r14
0x4285a9:	pop	r15
0x4285ab:	jmp	0x4294bb
0x4285b0:	mov	esi, 0x4cd8fc
0x4285b5:	mov	rdi, r14
0x4285b8:	call	0x403be0
0x4285bd:	test	eax, eax
0x4285bf:	jne	0x4285fa
0x4285c1:	mov	rsi, r15
0x4285c4:	mov	rdi, rbp
0x4285c7:	call	0x4251ed
0x4285cc:	mov	rdi, rax
0x4285cf:	call	0x425260
0x4285d4:	mov	esi, eax
0x4285d6:	add	rsp, 0x98
0x4285dd:	mov	rdi, rbp
0x4285e0:	pop	rbx
0x4285e1:	pop	rbp
0x4285e2:	pop	r12
0x4285e4:	pop	r13
0x4285e6:	pop	r14
0x4285e8:	pop	r15
0x4285ea:	jmp	0x4279b3
0x4285ef:	cmp	r10d, 0x34
0x4285f3:	je	0x428666
0x4285f5:	xor	r14d, r14d
0x4285f8:	jmp	0x42864c
0x4285fa:	mov	esi, 0x4cd8ef
0x4285ff:	mov	rdi, r14
0x428602:	call	0x403be0
0x428607:	mov	r12d, eax
0x42860a:	test	eax, eax
0x42860c:	jne	0x42864c
0x42860e:	cmp	dword ptr [r15], 0x2f
0x428612:	jne	0x428647
0x428614:	mov	rdx, qword ptr [r15 + 0x10]
0x428618:	test	rdx, rdx
0x42861b:	je	0x428647
0x42861d:	cmp	dword ptr [rdx], 0x4c
0x428620:	jne	0x42863b
0x428622:	mov	rsi, qword ptr [rdx + 0x10]
0x428626:	mov	rdi, rbp
0x428629:	call	0x4251ed
0x42862e:	mov	rdi, rax
0x428631:	call	0x425260
0x428636:	add	r12d, eax
0x428639:	jmp	0x42863e
0x42863b:	inc	r12d
0x42863e:	mov	r15, qword ptr [r15 + 0x18]
0x428642:	test	r15, r15
0x428645:	jne	0x42860e
0x428647:	mov	esi, r12d
0x42864a:	jmp	0x4285d6
0x42864c:	mov	rdx, r13
0x42864f:	mov	esi, 0x400b
0x428654:	mov	rdi, rbp
0x428657:	call	0x4294bb
0x42865c:	test	r14, r14
0x42865f:	jne	0x428693
0x428661:	jmp	0x4289e1
0x428666:	mov	esi, 0x28
0x42866b:	call	0x42513f
0x428670:	mov	rdx, qword ptr [r13 + 0x10]
0x428674:	mov	rdi, rbp
0x428677:	mov	esi, 0x400b
0x42867c:	call	0x428dff
0x428681:	mov	esi, 0x29
0x428686:	mov	rdi, rbp
0x428689:	call	0x42513f
0x42868e:	jmp	0x4289e1
0x428693:	mov	esi, 0x460e7f
0x428698:	mov	rdi, r14
0x42869b:	call	0x403be0
0x4286a0:	test	eax, eax
0x4286a2:	jne	0x4286ac
0x4286a4:	mov	rdx, r15
0x4286a7:	jmp	0x428cba
0x4286ac:	mov	esi, 0x45df55
0x4286b1:	mov	rdi, r14
0x4286b4:	call	0x403be0
0x4286b9:	test	eax, eax
0x4286bb:	jne	0x4289e1
0x4286c1:	mov	esi, 0x28
0x4286c6:	mov	rdi, rbp
0x4286c9:	call	0x42513f
0x4286ce:	mov	esi, 0x400b
0x4286d3:	mov	rdx, r15
0x4286d6:	mov	rdi, rbp
0x4286d9:	call	0x428dff
0x4286de:	mov	esi, 0x29
0x4286e3:	jmp	0x428d75
0x4286e8:	mov	rsi, qword ptr [rdx + 0x18]
0x4286ec:	cmp	dword ptr [rsi], 0x39
0x4286ef:	jne	0x4288e4
0x4286f5:	mov	r8, qword ptr [rdx + 0x10]
0x4286f9:	mov	rdi, qword ptr [r8 + 0x10]
0x4286fd:	call	0x4252bc
0x428702:	test	eax, eax
0x428704:	je	0x428766
0x428706:	mov	rdx, r8
0x428709:	mov	esi, 0x400b
0x42870e:	mov	rdi, rbp
0x428711:	call	0x4294bb
0x428716:	mov	esi, 0x3c
0x42871b:	mov	rdi, rbp
0x42871e:	call	0x42513f
0x428723:	mov	rcx, qword ptr [r12 + 0x18]
0x428728:	mov	esi, 0x400b
0x42872d:	mov	rdi, rbp
0x428730:	mov	rdx, qword ptr [rcx + 0x10]
0x428734:	call	0x428dff
0x428739:	mov	esi, 0x4cd640
0x42873e:	mov	rdi, rbp
0x428741:	call	0x42798f
0x428746:	mov	r9, qword ptr [r12 + 0x18]
0x42874b:	mov	esi, 0x400b
0x428750:	mov	rdi, rbp
0x428753:	mov	rdx, qword ptr [r9 + 0x18]
0x428757:	call	0x428dff
0x42875c:	mov	esi, 0x29
0x428761:	jmp	0x428d75
0x428766:	mov	rdx, r12
0x428769:	mov	esi, 0x400b
0x42876e:	mov	rdi, rbp
0x428771:	call	0x4294db
0x428776:	test	eax, eax
0x428778:	jne	0x428ded
0x42877e:	mov	rdx, r12
0x428781:	mov	esi, 0x400b
0x428786:	mov	rdi, rbp
0x428789:	call	0x428ede
0x42878e:	test	eax, eax
0x428790:	jne	0x428ded
0x428796:	mov	rdi, qword ptr [r12 + 0x10]
0x42879b:	cmp	dword ptr [rdi], 0x32
0x42879e:	jne	0x4287c1
0x4287a0:	mov	rcx, qword ptr [rdi + 0x10]
0x4287a4:	cmp	dword ptr [rcx + 0x10], 1
0x4287a8:	jne	0x4287c1
0x4287aa:	mov	r9, qword ptr [rcx + 8]
0x4287ae:	cmp	byte ptr [r9], 0x3e
0x4287b2:	jne	0x4287c1
0x4287b4:	mov	esi, 0x28
0x4287b9:	mov	rdi, rbp
0x4287bc:	call	0x42513f
0x4287c1:	mov	r10, qword ptr [r12 + 0x10]
0x4287c6:	mov	esi, 0x4cd643
0x4287cb:	mov	r11, qword ptr [r10 + 0x10]
0x4287cf:	mov	rdi, qword ptr [r11]
0x4287d2:	call	0x403be0
0x4287d7:	mov	rbx, qword ptr [r12 + 0x18]
0x4287dc:	test	eax, eax
0x4287de:	jne	0x428811
0x4287e0:	mov	rax, qword ptr [rbx + 0x10]
0x4287e4:	cmp	dword ptr [rax], 3
0x4287e7:	jne	0x428811
0x4287e9:	mov	r13, qword ptr [rax + 0x18]
0x4287ed:	cmp	dword ptr [r13], 0x29
0x4287f2:	je	0x4287fe
0x4287f4:	mov	dword ptr [rbp + 0x130], 1
0x4287fe:	mov	rdx, qword ptr [rax + 0x10]
0x428802:	mov	esi, 0x400b
0x428807:	mov	rdi, rbp
0x42880a:	call	0x428e7e
0x42880f:	jmp	0x428822
0x428811:	mov	rdx, qword ptr [rbx + 0x10]
0x428815:	mov	esi, 0x400b
0x42881a:	mov	rdi, rbp
0x42881d:	call	0x428e7e
0x428822:	mov	r15, qword ptr [r12 + 0x10]
0x428827:	mov	esi, 0x45cb3c
0x42882c:	mov	r14, qword ptr [r15 + 0x10]
0x428830:	mov	rbx, qword ptr [r14]
0x428833:	mov	rdi, rbx
0x428836:	call	0x403be0
0x42883b:	test	eax, eax
0x42883d:	jne	0x428871
0x42883f:	mov	rdi, rbp
0x428842:	mov	esi, 0x5b
0x428847:	call	0x42513f
0x42884c:	mov	rsi, qword ptr [r12 + 0x18]
0x428851:	mov	rdi, rbp
0x428854:	mov	rdx, qword ptr [rsi + 0x18]
0x428858:	mov	esi, 0x400b
0x42885d:	call	0x428dff
0x428862:	mov	esi, 0x5d
0x428867:	mov	rdi, rbp
0x42886a:	call	0x42513f
0x42886f:	jmp	0x4288a8
0x428871:	mov	esi, 0x4cd643
0x428876:	mov	rdi, rbx
0x428879:	call	0x403be0
0x42887e:	test	eax, eax
0x428880:	je	0x428892
0x428882:	mov	rdx, r15
0x428885:	mov	esi, 0x400b
0x42888a:	mov	rdi, rbp
0x42888d:	call	0x4294bb
0x428892:	mov	rdx, qword ptr [r12 + 0x18]
0x428897:	mov	esi, 0x400b
0x42889c:	mov	rdi, rbp
0x42889f:	mov	rdx, qword ptr [rdx + 0x18]
0x4288a3:	call	0x428e7e
0x4288a8:	mov	r12, qword ptr [r12 + 0x10]
0x4288ad:	cmp	dword ptr [r12], 0x32
0x4288b2:	jne	0x428ded
0x4288b8:	mov	r8, qword ptr [r12 + 0x10]
0x4288bd:	cmp	dword ptr [r8 + 0x10], 1
0x4288c2:	jne	0x428ded
0x4288c8:	mov	rdi, qword ptr [r8 + 8]
0x4288cc:	cmp	byte ptr [rdi], 0x3e
0x4288cf:	jne	0x428ded
0x4288d5:	jmp	0x428be5
0x4288da:	mov	r10, qword ptr [rdx + 0x18]
0x4288de:	cmp	dword ptr [r10], 0x3b
0x4288e2:	je	0x4288f3
0x4288e4:	mov	dword ptr [rbp + 0x130], 1
0x4288ee:	jmp	0x428ded
0x4288f3:	mov	r11, qword ptr [r10 + 0x18]
0x4288f7:	cmp	dword ptr [r11], 0x3c
0x4288fb:	jne	0x4288e4
0x4288fd:	mov	esi, 0x400b
0x428902:	call	0x4294db
0x428907:	test	eax, eax
0x428909:	jne	0x428ded
0x42890f:	mov	rdx, r12
0x428912:	mov	esi, 0x400b
0x428917:	mov	rdi, rbp
0x42891a:	call	0x428ede
0x42891f:	test	eax, eax
0x428921:	jne	0x428ded
0x428927:	mov	rbx, qword ptr [r12 + 0x10]
0x42892c:	mov	rax, qword ptr [r12 + 0x18]
0x428931:	mov	esi, 0x4cd646
0x428936:	mov	rdx, qword ptr [rbx + 0x10]
0x42893a:	mov	r12, qword ptr [rax + 0x18]
0x42893e:	mov	r13, qword ptr [rax + 0x10]
0x428942:	mov	rdi, qword ptr [rdx]
0x428945:	mov	r14, qword ptr [r12 + 0x10]
0x42894a:	mov	r15, qword ptr [r12 + 0x18]
0x42894f:	call	0x403be0
0x428954:	test	eax, eax
0x428956:	jne	0x428997
0x428958:	mov	rdx, r13
0x42895b:	mov	rdi, rbp
0x42895e:	mov	esi, 0x400b
0x428963:	call	0x428e7e
0x428968:	mov	rdx, rbx
0x42896b:	mov	rdi, rbp
0x42896e:	mov	esi, 0x400b
0x428973:	call	0x4294bb
0x428978:	mov	rdi, rbp
0x42897b:	mov	rdx, r14
0x42897e:	mov	esi, 0x400b
0x428983:	call	0x428e7e
0x428988:	mov	esi, 0x4cd649
0x42898d:	mov	rdi, rbp
0x428990:	call	0x42798f
0x428995:	jmp	0x4289e1
0x428997:	mov	esi, 0x4cd64d
0x42899c:	mov	rdi, rbp
0x42899f:	call	0x42798f
0x4289a4:	cmp	qword ptr [r13 + 0x10], 0
0x4289a9:	je	0x4289c8
0x4289ab:	mov	esi, 0x400b
0x4289b0:	mov	rdi, rbp
0x4289b3:	mov	rdx, r13
0x4289b6:	call	0x428e7e
0x4289bb:	mov	esi, 0x20
0x4289c0:	mov	rdi, rbp
0x4289c3:	call	0x42513f
0x4289c8:	mov	rdx, r14
0x4289cb:	mov	esi, 0x400b
0x4289d0:	mov	rdi, rbp
0x4289d3:	call	0x428dff
0x4289d8:	test	r15, r15
0x4289db:	je	0x428ded
0x4289e1:	add	rsp, 0x98
0x4289e8:	mov	rdx, r15
0x4289eb:	mov	rdi, rbp
0x4289ee:	mov	esi, 0x400b
0x4289f3:	pop	rbx
0x4289f4:	pop	rbp
0x4289f5:	pop	r12
0x4289f7:	pop	r13
0x4289f9:	pop	r14
0x4289fb:	pop	r15
0x4289fd:	jmp	0x428e7e
0x428a02:	mov	rdx, qword ptr [rdx + 0x10]
0x428a06:	cmp	dword ptr [rdx], 0x27
0x428a09:	jne	0x428ae8
0x428a0f:	mov	rsi, qword ptr [rdx + 0x10]
0x428a13:	mov	r15d, dword ptr [rsi + 0x1c]
0x428a17:	cmp	r15d, 6
0x428a1b:	ja	0x428a28
0x428a1d:	test	r15d, r15d
0x428a20:	je	0x428aeb
0x428a26:	jmp	0x428a33
0x428a28:	cmp	r15d, 7
0x428a2c:	je	0x428aac
0x428a2e:	jmp	0x428aeb
0x428a33:	mov	r9, qword ptr [r12 + 0x18]
0x428a38:	cmp	dword ptr [r9], 0
0x428a3c:	jne	0x428aeb
0x428a42:	cmp	ecx, 0x3e
0x428a45:	jne	0x428a51
0x428a47:	mov	esi, 0x2d
0x428a4c:	call	0x42513f
0x428a51:	mov	rdx, qword ptr [r12 + 0x18]
0x428a56:	mov	esi, 0x400b
0x428a5b:	mov	rdi, rbp
0x428a5e:	sub	r15d, 2
0x428a62:	call	0x428dff
0x428a67:	cmp	r15d, 4
0x428a6b:	ja	0x428ded
0x428a71:	notrack jmp	qword ptr ds:[r15*8 + 0x4ca6f0]
0x428a7a:	mov	esi, 0x75
0x428a7f:	jmp	0x428d75
0x428a84:	mov	esi, 0x6c
0x428a89:	jmp	0x428d75
0x428a8e:	mov	esi, 0x4beb6d
0x428a93:	jmp	0x428c6a
0x428a98:	mov	esi, 0x460808
0x428a9d:	jmp	0x428c6a
0x428aa2:	mov	esi, 0x45b9d4
0x428aa7:	jmp	0x428c6a
0x428aac:	mov	rdi, qword ptr [r12 + 0x18]
0x428ab1:	cmp	dword ptr [rdi], 0
0x428ab4:	jne	0x428aeb
0x428ab6:	cmp	dword ptr [rdi + 0x18], 1
0x428aba:	jne	0x428aeb
0x428abc:	cmp	ecx, 0x3d
0x428abf:	jne	0x428aeb
0x428ac1:	mov	rcx, qword ptr [rdi + 0x10]
0x428ac5:	mov	r8b, byte ptr [rcx]
0x428ac8:	cmp	r8b, 0x30
0x428acc:	je	0x428ade
0x428ace:	cmp	r8b, 0x31
0x428ad2:	jne	0x428aeb
0x428ad4:	mov	esi, 0x4cd658
0x428ad9:	jmp	0x428c6a
0x428ade:	mov	esi, 0x4cd652
0x428ae3:	jmp	0x428c6a
0x428ae8:	xor	r15d, r15d
0x428aeb:	mov	esi, 0x28
0x428af0:	mov	rdi, rbp
0x428af3:	call	0x42513f
0x428af8:	mov	rdx, qword ptr [r12 + 0x10]
0x428afd:	mov	esi, 0x400b
0x428b02:	mov	rdi, rbp
0x428b05:	call	0x428dff
0x428b0a:	mov	esi, 0x29
0x428b0f:	mov	rdi, rbp
0x428b12:	call	0x42513f
0x428b17:	cmp	dword ptr [r12], 0x3e
0x428b1c:	jne	0x428b2b
0x428b1e:	mov	esi, 0x2d
0x428b23:	mov	rdi, rbp
0x428b26:	call	0x42513f
0x428b2b:	cmp	r15d, 8
0x428b2f:	jne	0x428b3e
0x428b31:	mov	esi, 0x5b
0x428b36:	mov	rdi, rbp
0x428b39:	call	0x42513f
0x428b3e:	mov	rdx, qword ptr [r12 + 0x18]
0x428b43:	mov	esi, 0x400b
0x428b48:	mov	rdi, rbp
0x428b4b:	call	0x428dff
0x428b50:	cmp	r15d, 8
0x428b54:	jne	0x428ded
0x428b5a:	jmp	0x428d70
0x428b5f:	mov	rdx, qword ptr [rdx + 0x10]
0x428b63:	mov	esi, 0x400b
0x428b68:	call	0x428dff
0x428b6d:	mov	esi, 0x28
0x428b72:	mov	rdi, rbp
0x428b75:	call	0x42513f
0x428b7a:	mov	rdx, qword ptr [r12 + 0x18]
0x428b7f:	mov	esi, 0x400b
0x428b84:	mov	rdi, rbp
0x428b87:	call	0x428dff
0x428b8c:	mov	esi, 0x29
0x428b91:	jmp	0x428d75
0x428b96:	mov	esi, dword ptr [rdx + 0x10]
0x428b99:	jmp	0x4285d6
0x428b9e:	mov	esi, 0x4cd65d
0x428ba3:	jmp	0x428cad
0x428ba8:	mov	rdx, qword ptr [rdx + 0x10]
0x428bac:	mov	esi, 0x400b
0x428bb1:	call	0x428dff
0x428bb6:	mov	rdx, qword ptr [r12 + 0x18]
0x428bbb:	jmp	0x428cba
0x428bc0:	movsx	esi, byte ptr [rdx + 0x10]
0x428bc4:	jmp	0x428d75
0x428bc9:	mov	esi, 0x4cd66c
0x428bce:	call	0x42798f
0x428bd3:	mov	rdx, qword ptr [r12 + 0x10]
0x428bd8:	mov	esi, 0x400b
0x428bdd:	mov	rdi, rbp
0x428be0:	call	0x428dff
0x428be5:	mov	esi, 0x29
0x428bea:	jmp	0x428d75
0x428bef:	mov	r12, qword ptr [rdx + 0x10]
0x428bf3:	mov	rsi, r12
0x428bf6:	call	0x4251ed
0x428bfb:	mov	rdi, rax
0x428bfe:	test	rax, rax
0x428c01:	jne	0x428c1a
0x428c03:	mov	esi, 0x400b
0x428c08:	mov	rdx, r12
0x428c0b:	mov	rdi, rbp
0x428c0e:	call	0x428e7e
0x428c13:	mov	esi, 0x4cd752
0x428c18:	jmp	0x428c6a
0x428c1a:	call	0x425260
0x428c1f:	mov	ebx, eax
0x428c21:	lea	r14d, [rax - 1]
0x428c25:	cmp	r13d, ebx
0x428c28:	jge	0x428ded
0x428c2e:	mov	dword ptr [rbp + 0x13c], r13d
0x428c35:	mov	rdx, r12
0x428c38:	mov	esi, 0x400b
0x428c3d:	mov	rdi, rbp
0x428c40:	call	0x428dff
0x428c45:	cmp	r14d, r13d
0x428c48:	jle	0x428c57
0x428c4a:	mov	esi, 0x4cd62a
0x428c4f:	mov	rdi, rbp
0x428c52:	call	0x42798f
0x428c57:	inc	r13d
0x428c5a:	jmp	0x428c25
0x428c5c:	mov	rbx, qword ptr [rdx + 0x10]
0x428c60:	test	rbx, rbx
0x428c63:	jne	0x428c83
0x428c65:	mov	esi, 0x4cd677
0x428c6a:	add	rsp, 0x98
0x428c71:	mov	rdi, rbp
0x428c74:	pop	rbx
0x428c75:	pop	rbp
0x428c76:	pop	r12
0x428c78:	pop	r13
0x428c7a:	pop	r14
0x428c7c:	pop	r15
0x428c7e:	jmp	0x42798f
0x428c83:	mov	esi, 0x4cd67c
0x428c88:	call	0x42798f
0x428c8d:	mov	esi, ebx
0x428c8f:	mov	rdi, rbp
0x428c92:	call	0x4279b3
0x428c97:	mov	esi, 0x7d
0x428c9c:	jmp	0x428d75
0x428ca1:	mov	esi, 0x4cd683
0x428ca6:	jmp	0x428cad
0x428ca8:	mov	esi, 0x4cd6a1
0x428cad:	mov	rdi, rbp
0x428cb0:	call	0x42798f
0x428cb5:	mov	rdx, qword ptr [r12 + 0x10]
0x428cba:	add	rsp, 0x98
0x428cc1:	mov	rdi, rbp
0x428cc4:	mov	esi, 0x400b
0x428cc9:	pop	rbx
0x428cca:	pop	rbp
0x428ccb:	pop	r12
0x428ccd:	pop	r13
0x428ccf:	pop	r14
0x428cd1:	pop	r15
0x428cd3:	jmp	0x428dff
0x428cd8:	mov	esi, 0x4cd6be
0x428cdd:	call	0x42798f
0x428ce2:	inc	dword ptr [rbp + 0x138]
0x428ce8:	mov	rdx, qword ptr [r12 + 0x10]
0x428ced:	mov	rdi, rbp
0x428cf0:	mov	esi, 0x400b
0x428cf5:	call	0x428dff
0x428cfa:	dec	dword ptr [rbp + 0x138]
0x428d00:	mov	esi, 0x4cd6c7
0x428d05:	mov	rdi, rbp
0x428d08:	call	0x42798f
0x428d0d:	mov	esi, dword ptr [r12 + 0x18]
0x428d12:	mov	rdi, rbp
0x428d15:	inc	esi
0x428d17:	call	0x4279b3
0x428d1c:	mov	esi, 0x7d
0x428d21:	jmp	0x428d75
0x428d23:	mov	esi, 0x4cd6ca
0x428d28:	call	0x42798f
0x428d2d:	mov	rsi, qword ptr [r12 + 0x10]
0x428d32:	mov	rdi, rbp
0x428d35:	inc	esi
0x428d37:	call	0x4279b3
0x428d3c:	mov	esi, 0x7d
0x428d41:	jmp	0x428d75
0x428d43:	mov	rdx, qword ptr [rdx + 0x10]
0x428d47:	mov	esi, 0x400b
0x428d4c:	call	0x428dff
0x428d51:	mov	esi, 0x4cd6d9
0x428d56:	mov	rdi, rbp
0x428d59:	call	0x42798f
0x428d5e:	mov	rdx, qword ptr [r12 + 0x18]
0x428d63:	mov	esi, 0x400b
0x428d68:	mov	rdi, rbp
0x428d6b:	call	0x428dff
0x428d70:	mov	esi, 0x5d
0x428d75:	add	rsp, 0x98
0x428d7c:	mov	rdi, rbp
0x428d7f:	pop	rbx
0x428d80:	pop	rbp
0x428d81:	pop	r12
0x428d83:	pop	r13
0x428d85:	pop	r14
0x428d87:	pop	r15
0x428d89:	jmp	0x42513f
0x428d8e:	mov	r13, qword ptr [rsi + 8]
0x428d92:	mov	rbx, qword ptr [rbp + 0x120]
0x428d99:	mov	qword ptr [rbp + 0x120], r13
0x428da0:	mov	r13d, 1
0x428da6:	jmp	0x427f89
0x428dab:	mov	r9d, dword ptr [rbp + 0x168]
0x428db2:	cmp	r9d, dword ptr [rbp + 0x16c]
0x428db9:	jge	0x4288e4
0x428dbf:	mov	r10, qword ptr [rax + 8]
0x428dc3:	movsxd	r15, r9d
0x428dc6:	inc	r9d
0x428dc9:	shl	r15, 4
0x428dcd:	add	r15, qword ptr [rbp + 0x160]
0x428dd4:	mov	dword ptr [rbp + 0x168], r9d
0x428ddb:	mov	qword ptr [r15 + 8], r10
0x428ddf:	mov	qword ptr [r11], r15
0x428de2:	mov	r11, r15
0x428de5:	mov	rax, qword ptr [rax]
0x428de8:	jmp	0x427f79
0x428ded:	add	rsp, 0x98
0x428df4:	pop	rbx
0x428df5:	pop	rbp
0x428df6:	pop	r12
0x428df8:	pop	r13
0x428dfa:	pop	r14
0x428dfc:	pop	r15
0x428dfe:	ret	
0x428dff:	push	rbp
0x428e00:	push	rbx
0x428e01:	mov	rbx, rdi
0x428e04:	sub	rsp, 0x18
0x428e08:	test	rdx, rdx
0x428e0b:	je	0x428e25
0x428e0d:	mov	rbp, rdx
0x428e10:	mov	edx, dword ptr [rdx + 4]
0x428e13:	cmp	edx, 1
0x428e16:	jg	0x428e25
0x428e18:	mov	eax, dword ptr [rdi + 0x134]
0x428e1e:	cmp	eax, 0x400
0x428e23:	jle	0x428e31
0x428e25:	mov	dword ptr [rbx + 0x130], 1
0x428e2f:	jmp	0x428e77
0x428e31:	inc	edx
0x428e33:	inc	eax
0x428e35:	movq	xmm0, rbp
0x428e3a:	mov	esi, 0x400b
0x428e3f:	mov	dword ptr [rbp + 4], edx
0x428e42:	movhps	xmm0, qword ptr [rdi + 0x148]
0x428e49:	mov	rdx, rbp
0x428e4c:	mov	dword ptr [rdi + 0x134], eax
0x428e52:	mov	qword ptr [rdi + 0x148], rsp
0x428e59:	movaps	xmmword ptr [rsp], xmm0
0x428e5d:	call	0x4279ec
0x428e62:	mov	rcx, qword ptr [rsp + 8]
0x428e67:	mov	qword ptr [rbx + 0x148], rcx
0x428e6e:	dec	dword ptr [rbp + 4]
0x428e71:	dec	dword ptr [rbx + 0x134]
0x428e77:	add	rsp, 0x18
0x428e7b:	pop	rbx
0x428e7c:	pop	rbp
0x428e7d:	ret	
0x428e7e:	push	r12
0x428e80:	mov	r12, rdx
0x428e83:	push	rbp
0x428e84:	mov	rbp, rdi
0x428e87:	push	rbx
0x428e88:	mov	ecx, dword ptr [rdx]
0x428e8a:	cmp	ecx, 0x31
0x428e8d:	ja	0x428ea5
0x428e8f:	movabs	rax, 0xfffdffffffffffbc
0x428e99:	mov	ebx, 1
0x428e9e:	sar	rax, cl
0x428ea1:	test	al, 1
0x428ea3:	je	0x428eb4
0x428ea5:	mov	esi, 0x28
0x428eaa:	mov	rdi, rbp
0x428ead:	xor	ebx, ebx
0x428eaf:	call	0x42513f
0x428eb4:	mov	rdx, r12
0x428eb7:	mov	esi, 0x400b
0x428ebc:	mov	rdi, rbp
0x428ebf:	call	0x428dff
0x428ec4:	test	ebx, ebx
0x428ec6:	jne	0x428ed9
0x428ec8:	pop	rbx
0x428ec9:	mov	rdi, rbp
0x428ecc:	mov	esi, 0x29
0x428ed1:	pop	rbp
0x428ed2:	pop	r12
0x428ed4:	jmp	0x42513f
0x428ed9:	pop	rbx
0x428eda:	pop	rbp
0x428edb:	pop	r12
0x428edd:	ret	
0x428ede:	push	r13
0x428ee0:	mov	r9, rdx
0x428ee3:	push	r12
0x428ee5:	push	rbp
0x428ee6:	mov	rbp, rdi
0x428ee9:	mov	rdi, rdx
0x428eec:	push	rbx
0x428eed:	push	rcx
0x428eee:	call	0x42527c
0x428ef3:	test	eax, eax
0x428ef5:	je	0x428fc6
0x428efb:	mov	rax, qword ptr [r9 + 0x10]
0x428eff:	mov	rcx, qword ptr [r9 + 0x18]
0x428f03:	mov	rdx, qword ptr [rax + 0x10]
0x428f07:	mov	r13, qword ptr [rcx + 0x10]
0x428f0b:	mov	r12, qword ptr [rcx + 0x18]
0x428f0f:	mov	rbx, qword ptr [rdx]
0x428f12:	cmp	byte ptr [rbx + 1], 0x69
0x428f16:	jne	0x428f27
0x428f18:	mov	esi, 0x2e
0x428f1d:	mov	rdi, rbp
0x428f20:	call	0x42513f
0x428f25:	jmp	0x428f34
0x428f27:	mov	esi, 0x5b
0x428f2c:	mov	rdi, rbp
0x428f2f:	call	0x42513f
0x428f34:	mov	rdx, r13
0x428f37:	mov	esi, 0x400b
0x428f3c:	mov	rdi, rbp
0x428f3f:	call	0x428dff
0x428f44:	cmp	byte ptr [rbx + 1], 0x58
0x428f48:	jne	0x428f6e
0x428f4a:	mov	esi, 0x4cd75b
0x428f4f:	mov	rdi, rbp
0x428f52:	call	0x42798f
0x428f57:	mov	rdx, qword ptr [r12 + 0x10]
0x428f5c:	mov	esi, 0x400b
0x428f61:	mov	rdi, rbp
0x428f64:	call	0x428dff
0x428f69:	mov	r12, qword ptr [r12 + 0x18]
0x428f6e:	cmp	byte ptr [rbx + 1], 0x69
0x428f72:	je	0x428f81
0x428f74:	mov	esi, 0x5d
0x428f79:	mov	rdi, rbp
0x428f7c:	call	0x42513f
0x428f81:	mov	rdi, r12
0x428f84:	call	0x42527c
0x428f89:	test	eax, eax
0x428f8b:	je	0x428fa4
0x428f8d:	mov	rdx, r12
0x428f90:	mov	esi, 0x400b
0x428f95:	mov	rdi, rbp
0x428f98:	call	0x428dff
0x428f9d:	mov	eax, 1
0x428fa2:	jmp	0x428fc6
0x428fa4:	mov	esi, 0x3d
0x428fa9:	mov	rdi, rbp
0x428fac:	call	0x42513f
0x428fb1:	mov	rdx, r12
0x428fb4:	mov	esi, 0x400b
0x428fb9:	mov	rdi, rbp
0x428fbc:	call	0x428e7e
0x428fc1:	mov	eax, 1
0x428fc6:	pop	rdx
0x428fc7:	pop	rbx
0x428fc8:	pop	rbp
0x428fc9:	pop	r12
0x428fcb:	pop	r13
0x428fcd:	ret	
0x428fce:	push	r12
0x428fd0:	mov	r12, rdx
0x428fd3:	push	rbp
0x428fd4:	mov	rbp, rdi
0x428fd7:	push	r10
0x428fd9:	mov	eax, dword ptr [rdx]
0x428fdb:	cmp	eax, 3
0x428fde:	je	0x4290e9
0x428fe4:	sub	eax, 0x19
0x428fe7:	cmp	eax, 0x38
0x428fea:	ja	0x42911d
0x428ff0:	notrack jmp	qword ptr ds:[rax*8 + 0x4ca718]
0x428ff8:	mov	esi, 0x4cd6e2
0x428ffd:	jmp	0x429004
0x428fff:	mov	esi, 0x4cd6ec
0x429004:	pop	r9
0x429006:	mov	rdi, rbp
0x429009:	pop	rbp
0x42900a:	pop	r12
0x42900c:	jmp	0x42798f
0x429011:	mov	esi, 0x4cd6f6
0x429016:	jmp	0x429004
0x429018:	mov	esi, 0x4cd6fd
0x42901d:	jmp	0x429004
0x42901f:	mov	esi, 0x4cd70f
0x429024:	call	0x42798f
0x429029:	cmp	qword ptr [r12 + 0x18], 0
0x42902f:	jne	0x42904c
0x429031:	jmp	0x429131
0x429036:	mov	esi, 0x4cd719
0x42903b:	call	0x42798f
0x429040:	cmp	qword ptr [r12 + 0x18], 0
0x429046:	je	0x429131
0x42904c:	mov	esi, 0x28
0x429051:	mov	rdi, rbp
0x429054:	call	0x42513f
0x429059:	mov	rdx, qword ptr [r12 + 0x18]
0x42905e:	jmp	0x4290fe
0x429063:	mov	esi, 0x20
0x429068:	call	0x42513f
0x42906d:	mov	rdx, qword ptr [r12 + 0x18]
0x429072:	jmp	0x429120
0x429077:	mov	esi, 0x2a
0x42907c:	jmp	0x429110
0x429081:	mov	esi, 0x20
0x429086:	call	0x42513f
0x42908b:	mov	esi, 0x26
0x429090:	jmp	0x429110
0x429092:	mov	esi, 0x20
0x429097:	call	0x42513f
0x42909c:	mov	esi, 0x4cd720
0x4290a1:	jmp	0x429004
0x4290a6:	mov	esi, 0x4cd723
0x4290ab:	jmp	0x429004
0x4290b0:	mov	esi, 0x4cd72d
0x4290b5:	jmp	0x429004
0x4290ba:	cmp	byte ptr [rdi + 0x108], 0x28
0x4290c1:	je	0x4290cd
0x4290c3:	mov	esi, 0x20
0x4290c8:	call	0x42513f
0x4290cd:	mov	rdx, qword ptr [r12 + 0x10]
0x4290d2:	mov	esi, 0x400b
0x4290d7:	mov	rdi, rbp
0x4290da:	call	0x428dff
0x4290df:	mov	esi, 0x4cd739
0x4290e4:	jmp	0x429004
0x4290e9:	mov	rdx, qword ptr [rdx + 0x10]
0x4290ed:	jmp	0x429120
0x4290ef:	mov	esi, 0x4cd73d
0x4290f4:	call	0x42798f
0x4290f9:	mov	rdx, qword ptr [r12 + 0x10]
0x4290fe:	mov	esi, 0x400b
0x429103:	mov	rdi, rbp
0x429106:	call	0x428dff
0x42910b:	mov	esi, 0x29
0x429110:	pop	r8
0x429112:	mov	rdi, rbp
0x429115:	pop	rbp
0x429116:	pop	r12
0x429118:	jmp	0x42513f
0x42911d:	mov	rdx, r12
0x429120:	pop	rcx
0x429121:	mov	rdi, rbp
0x429124:	mov	esi, 0x400b
0x429129:	pop	rbp
0x42912a:	pop	r12
0x42912c:	jmp	0x428dff
0x429131:	pop	rax
0x429132:	pop	rbp
0x429133:	pop	r12
0x429135:	ret	
0x429136:	push	r14
0x429138:	push	r13
0x42913a:	mov	r13, rdx
0x42913d:	push	r12
0x42913f:	push	rbp
0x429140:	mov	rbp, rdi
0x429143:	push	rbx
0x429144:	test	rcx, rcx
0x429147:	jne	0x429158
0x429149:	mov	esi, 0x20
0x42914e:	mov	rdi, rbp
0x429151:	call	0x42513f
0x429156:	jmp	0x4291c3
0x429158:	mov	r12, rcx
0x42915b:	mov	rax, rcx
0x42915e:	mov	ebx, dword ptr [rax + 0x10]
0x429161:	test	ebx, ebx
0x429163:	jne	0x42918b
0x429165:	mov	rdx, qword ptr [rax + 8]
0x429169:	xor	r14d, r14d
0x42916c:	cmp	dword ptr [rdx], 0x2a
0x42916f:	je	0x42919b
0x429171:	mov	esi, 0x4cd674
0x429176:	mov	rdi, rbp
0x429179:	mov	r14d, 1
0x42917f:	mov	ebx, 1
0x429184:	call	0x42798f
0x429189:	jmp	0x42919b
0x42918b:	mov	rax, qword ptr [rax]
0x42918e:	test	rax, rax
0x429191:	jne	0x42915e
0x429193:	xor	r14d, r14d
0x429196:	mov	ebx, 1
0x42919b:	xor	ecx, ecx
0x42919d:	mov	rdx, r12
0x4291a0:	mov	esi, 0x400b
0x4291a5:	mov	rdi, rbp
0x4291a8:	call	0x4291fb
0x4291ad:	test	r14d, r14d
0x4291b0:	je	0x4291bf
0x4291b2:	mov	esi, 0x29
0x4291b7:	mov	rdi, rbp
0x4291ba:	call	0x42513f
0x4291bf:	test	ebx, ebx
0x4291c1:	jne	0x429149
0x4291c3:	mov	esi, 0x5b
0x4291c8:	mov	rdi, rbp
0x4291cb:	call	0x42513f
0x4291d0:	mov	rdx, qword ptr [r13 + 0x10]
0x4291d4:	test	rdx, rdx
0x4291d7:	je	0x4291e6
0x4291d9:	mov	esi, 0x400b
0x4291de:	mov	rdi, rbp
0x4291e1:	call	0x428dff
0x4291e6:	pop	rbx
0x4291e7:	mov	rdi, rbp
0x4291ea:	mov	esi, 0x5d
0x4291ef:	pop	rbp
0x4291f0:	pop	r12
0x4291f2:	pop	r13
0x4291f4:	pop	r14
0x4291f6:	jmp	0x42513f
0x4291fb:	push	r14
0x4291fd:	mov	r14d, ecx
0x429200:	push	r13
0x429202:	push	r12
0x429204:	movabs	r12, 0x3400000000001f
0x42920e:	push	rbp
0x42920f:	mov	rbp, rdx
0x429212:	push	rbx
0x429213:	mov	rbx, rdi
0x429216:	test	rbp, rbp
0x429219:	je	0x429394
0x42921f:	cmp	dword ptr [rbx + 0x130], 0
0x429226:	jne	0x429394
0x42922c:	cmp	dword ptr [rbp + 0x10], 0
0x429230:	jne	0x42938b
0x429236:	mov	rdx, qword ptr [rbp + 8]
0x42923a:	mov	eax, dword ptr [rdx]
0x42923c:	test	r14d, r14d
0x42923f:	jne	0x429259
0x429241:	lea	ecx, [rax - 0x1c]
0x429244:	cmp	ecx, 0x35
0x429247:	ja	0x429259
0x429249:	mov	rsi, r12
0x42924c:	shr	rsi, cl
0x42924f:	and	sil, 1
0x429253:	jne	0x42938b
0x429259:	mov	rdi, qword ptr [rbp + 0x18]
0x42925d:	mov	dword ptr [rbp + 0x10], 1
0x429264:	mov	r13, qword ptr [rbx + 0x120]
0x42926b:	mov	qword ptr [rbx + 0x120], rdi
0x429272:	cmp	eax, 0x29
0x429275:	jne	0x429294
0x429277:	mov	rcx, qword ptr [rbp]
0x42927b:	mov	esi, 0x400b
0x429280:	mov	rdi, rbx
0x429283:	call	0x42939d
0x429288:	mov	qword ptr [rbx + 0x120], r13
0x42928f:	jmp	0x429394
0x429294:	cmp	eax, 0x2a
0x429297:	jne	0x4292b6
0x429299:	mov	rcx, qword ptr [rbp]
0x42929d:	mov	esi, 0x400b
0x4292a2:	mov	rdi, rbx
0x4292a5:	call	0x429136
0x4292aa:	mov	qword ptr [rbx + 0x120], r13
0x4292b1:	jmp	0x429394
0x4292b6:	cmp	eax, 2
0x4292b9:	jne	0x429377
0x4292bf:	mov	r14, qword ptr [rbx + 0x128]
0x4292c6:	mov	rdx, qword ptr [rdx + 0x10]
0x4292ca:	mov	esi, 0x400b
0x4292cf:	mov	rdi, rbx
0x4292d2:	mov	qword ptr [rbx + 0x128], 0
0x4292dd:	call	0x428dff
0x4292e2:	mov	qword ptr [rbx + 0x128], r14
0x4292e9:	mov	esi, 0x4cd4eb
0x4292ee:	mov	rdi, rbx
0x4292f1:	call	0x42798f
0x4292f6:	mov	rdx, qword ptr [rbp + 8]
0x4292fa:	mov	r12, qword ptr [rdx + 0x18]
0x4292fe:	cmp	dword ptr [r12], 0x48
0x429303:	jne	0x429334
0x429305:	mov	esi, 0x4cd4dc
0x42930a:	mov	rdi, rbx
0x42930d:	call	0x42798f
0x429312:	mov	ebp, dword ptr [r12 + 0x18]
0x429317:	mov	rdi, rbx
0x42931a:	lea	esi, [rbp + 1]
0x42931d:	call	0x4279b3
0x429322:	mov	esi, 0x4cd4ea
0x429327:	mov	rdi, rbx
0x42932a:	call	0x42798f
0x42932f:	mov	r12, qword ptr [r12 + 0x10]
0x429334:	movabs	r8, 0x3400000000001f
0x42933e:	mov	r9d, dword ptr [r12]
0x429342:	lea	ecx, [r9 - 0x1c]
0x429346:	cmp	ecx, 0x35
0x429349:	ja	0x429357
0x42934b:	mov	r10, r8
0x42934e:	shr	r10, cl
0x429351:	and	r10b, 1
0x429355:	jne	0x429370
0x429357:	mov	rdx, r12
0x42935a:	mov	esi, 0x400b
0x42935f:	mov	rdi, rbx
0x429362:	call	0x428dff
0x429367:	mov	qword ptr [rbx + 0x120], r13
0x42936e:	jmp	0x429394
0x429370:	mov	r12, qword ptr [r12 + 0x10]
0x429375:	jmp	0x42933e
0x429377:	mov	esi, 0x400b
0x42937c:	mov	rdi, rbx
0x42937f:	call	0x428fce
0x429384:	mov	qword ptr [rbx + 0x120], r13
0x42938b:	mov	rbp, qword ptr [rbp]
0x42938f:	jmp	0x429216
0x429394:	pop	rbx
0x429395:	pop	rbp
0x429396:	pop	r12
0x429398:	pop	r13
0x42939a:	pop	r14
0x42939c:	ret	
0x42939d:	push	r14
0x42939f:	mov	esi, 7
0x4293a4:	mov	r10, rcx
0x4293a7:	mov	r8d, 1
0x4293ad:	push	r13
0x4293af:	shl	rsi, 0x22
0x4293b3:	push	r12
0x4293b5:	mov	r12, rcx
0x4293b8:	push	rbp
0x4293b9:	mov	rbp, rdx
0x4293bc:	push	rbx
0x4293bd:	mov	rbx, rdi
0x4293c0:	mov	edi, 0x43107
0x4293c5:	shl	rdi, 0x19
0x4293c9:	test	r10, r10
0x4293cc:	je	0x42942d
0x4293ce:	cmp	dword ptr [r10 + 0x10], 0
0x4293d3:	jne	0x42942d
0x4293d5:	mov	rdx, qword ptr [r10 + 8]
0x4293d9:	mov	ecx, dword ptr [rdx]
0x4293db:	cmp	ecx, 0x2b
0x4293de:	ja	0x4293f0
0x4293e0:	mov	r9, r8
0x4293e3:	shl	r9, cl
0x4293e6:	test	r9, rdi
0x4293e9:	jne	0x429402
0x4293eb:	test	r9, rsi
0x4293ee:	jne	0x4293f5
0x4293f0:	mov	r10, qword ptr [r10]
0x4293f3:	jmp	0x4293c9
0x4293f5:	mov	al, byte ptr [rbx + 0x108]
0x4293fb:	and	eax, 0xfffffffd
0x4293fe:	cmp	al, 0x28
0x429400:	je	0x429418
0x429402:	cmp	byte ptr [rbx + 0x108], 0x20
0x429409:	je	0x429418
0x42940b:	mov	esi, 0x20
0x429410:	mov	rdi, rbx
0x429413:	call	0x42513f
0x429418:	mov	esi, 0x28
0x42941d:	mov	rdi, rbx
0x429420:	mov	r13d, 1
0x429426:	call	0x42513f
0x42942b:	jmp	0x429430
0x42942d:	xor	r13d, r13d
0x429430:	mov	r14, qword ptr [rbx + 0x128]
0x429437:	xor	ecx, ecx
0x429439:	mov	rdx, r12
0x42943c:	mov	rdi, rbx
0x42943f:	mov	qword ptr [rbx + 0x128], 0
0x42944a:	mov	esi, 0x400b
0x42944f:	call	0x4291fb
0x429454:	test	r13d, r13d
0x429457:	je	0x429466
0x429459:	mov	esi, 0x29
0x42945e:	mov	rdi, rbx
0x429461:	call	0x42513f
0x429466:	mov	esi, 0x28
0x42946b:	mov	rdi, rbx
0x42946e:	call	0x42513f
0x429473:	mov	rdx, qword ptr [rbp + 0x18]
0x429477:	test	rdx, rdx
0x42947a:	je	0x429489
0x42947c:	mov	esi, 0x400b
0x429481:	mov	rdi, rbx
0x429484:	call	0x428dff
0x429489:	mov	rdi, rbx
0x42948c:	mov	esi, 0x29
0x429491:	call	0x42513f
0x429496:	mov	rdx, r12
0x429499:	mov	rdi, rbx
0x42949c:	mov	ecx, 1
0x4294a1:	mov	esi, 0x400b
0x4294a6:	call	0x4291fb
0x4294ab:	mov	qword ptr [rbx + 0x128], r14
0x4294b2:	pop	rbx
0x4294b3:	pop	rbp
0x4294b4:	pop	r12
0x4294b6:	pop	r13
0x4294b8:	pop	r14
0x4294ba:	ret	
0x4294bb:	cmp	dword ptr [rdx], 0x32
0x4294be:	jne	0x4294d1
0x4294c0:	mov	rax, qword ptr [rdx + 0x10]
0x4294c4:	movsxd	rdx, dword ptr [rax + 0x10]
0x4294c8:	mov	rsi, qword ptr [rax + 8]
0x4294cc:	jmp	0x42517a
0x4294d1:	mov	esi, 0x400b
0x4294d6:	jmp	0x428dff
0x4294db:	mov	rax, qword ptr [rdx + 0x10]
0x4294df:	mov	rcx, qword ptr [rax + 0x10]
0x4294e3:	mov	rsi, qword ptr [rcx]
0x4294e6:	cmp	byte ptr [rsi], 0x66
0x4294e9:	jne	0x42962d
0x4294ef:	push	r14
0x4294f1:	xor	r14d, r14d
0x4294f4:	push	r13
0x4294f6:	push	r12
0x4294f8:	push	rbp
0x4294f9:	push	rbx
0x4294fa:	mov	rdx, qword ptr [rdx + 0x18]
0x4294fe:	mov	rbx, rdi
0x429501:	mov	r12, qword ptr [rdx + 0x18]
0x429505:	mov	r13, qword ptr [rdx + 0x10]
0x429509:	cmp	dword ptr [r12], 0x3c
0x42950e:	jne	0x42951a
0x429510:	mov	r14, qword ptr [r12 + 0x18]
0x429515:	mov	r12, qword ptr [r12 + 0x10]
0x42951a:	mov	ebp, dword ptr [rbx + 0x13c]
0x429520:	mov	dword ptr [rbx + 0x13c], 0xffffffff
0x42952a:	mov	dil, byte ptr [rsi + 1]
0x42952e:	cmp	dil, 0x6c
0x429532:	je	0x429590
0x429534:	jg	0x429547
0x429536:	cmp	dil, 0x4c
0x42953a:	je	0x4295b2
0x42953c:	cmp	dil, 0x52
0x429540:	je	0x4295b2
0x429542:	jmp	0x429619
0x429547:	cmp	dil, 0x72
0x42954b:	jne	0x429619
0x429551:	mov	rdi, rbx
0x429554:	mov	esi, 0x28
0x429559:	call	0x42513f
0x42955e:	mov	rdx, r12
0x429561:	mov	rdi, rbx
0x429564:	mov	esi, 0x400b
0x429569:	call	0x428e7e
0x42956e:	mov	rdi, rbx
0x429571:	mov	rdx, r13
0x429574:	mov	esi, 0x400b
0x429579:	call	0x4294bb
0x42957e:	mov	esi, 0x4cd756
0x429583:	mov	rdi, rbx
0x429586:	call	0x42798f
0x42958b:	jmp	0x429619
0x429590:	mov	esi, 0x4cd751
0x429595:	mov	rdi, rbx
0x429598:	call	0x42798f
0x42959d:	mov	rdx, r13
0x4295a0:	mov	esi, 0x400b
0x4295a5:	mov	rdi, rbx
0x4295a8:	call	0x4294bb
0x4295ad:	mov	rdx, r12
0x4295b0:	jmp	0x4295ff
0x4295b2:	mov	esi, 0x28
0x4295b7:	mov	rdi, rbx
0x4295ba:	call	0x42513f
0x4295bf:	mov	rdx, r12
0x4295c2:	mov	esi, 0x400b
0x4295c7:	mov	rdi, rbx
0x4295ca:	call	0x428e7e
0x4295cf:	mov	rdx, r13
0x4295d2:	mov	esi, 0x400b
0x4295d7:	mov	rdi, rbx
0x4295da:	call	0x4294bb
0x4295df:	mov	esi, 0x4cd752
0x4295e4:	mov	rdi, rbx
0x4295e7:	call	0x42798f
0x4295ec:	mov	rdx, r13
0x4295ef:	mov	esi, 0x400b
0x4295f4:	mov	rdi, rbx
0x4295f7:	call	0x4294bb
0x4295fc:	mov	rdx, r14
0x4295ff:	mov	esi, 0x400b
0x429604:	mov	rdi, rbx
0x429607:	call	0x428e7e
0x42960c:	mov	esi, 0x29
0x429611:	mov	rdi, rbx
0x429614:	call	0x42513f
0x429619:	mov	dword ptr [rbx + 0x13c], ebp
0x42961f:	mov	eax, 1
0x429624:	pop	rbx
0x429625:	pop	rbp
0x429626:	pop	r12
0x429628:	pop	r13
0x42962a:	pop	r14
0x42962c:	ret	
0x42962d:	xor	eax, eax
0x42962f:	ret	
0x429630:	endbr64	
0x429634:	xor	ecx, ecx
0x429636:	jmp	0x432040
0x42963b:	endbr64	
0x42963f:	push	rax
0x429640:	pop	rax
0x429641:	mov	ecx, 0x4cbe38
0x429646:	mov	edx, 0x45b5ce
0x42964b:	mov	esi, 1
0x429650:	push	rax
0x429651:	mov	rdi, qword ptr [rip + 0xb9a48]
0x429658:	xor	eax, eax
0x42965a:	call	0x403e90
0x42965f:	mov	edi, 1
0x429664:	call	0x403e70
0x429669:	endbr64	
0x42966d:	mov	rdi, rsi
0x429670:	xor	eax, eax
0x429672:	xor	esi, esi
0x429674:	jmp	0x403db0
0x429679:	endbr64	
0x42967d:	mov	edi, esi
0x42967f:	jmp	0x403b00
0x429684:	endbr64	
0x429688:	push	r13
0x42968a:	mov	r13, rdx
0x42968d:	push	r12
0x42968f:	mov	r12, r9
0x429692:	push	rbp
0x429693:	mov	ebp, esi
0x429695:	push	rbx
0x429696:	mov	rbx, rcx
0x429699:	sub	rsp, 0x98
0x4296a0:	test	r8d, r8d
0x4296a3:	je	0x4296b1
0x4296a5:	mov	esi, 0xf
0x4296aa:	mov	edi, ebp
0x4296ac:	call	0x403c70
0x4296b1:	test	rbx, rbx
0x4296b4:	jne	0x4296c4
0x4296b6:	xor	edx, edx
0x4296b8:	mov	rsi, r13
0x4296bb:	mov	edi, ebp
0x4296bd:	call	0x403da0
0x4296c2:	jmp	0x4296e3
0x4296c4:	mov	rcx, rsp
0x4296c7:	xor	edx, edx
0x4296c9:	mov	rsi, r13
0x4296cc:	mov	edi, ebp
0x4296ce:	call	0x403d80
0x4296d3:	movaps	xmm0, xmmword ptr [rsp]
0x4296d7:	movaps	xmm1, xmmword ptr [rsp + 0x10]
0x4296dc:	movups	xmmword ptr [rbx], xmm0
0x4296df:	movups	xmmword ptr [rbx + 0x10], xmm1
0x4296e3:	xor	r8d, r8d
0x4296e6:	test	eax, eax
0x4296e8:	jns	0x429707
0x4296ea:	call	0x403890
0x4296ef:	or	r8d, 0xffffffff
0x4296f3:	mov	edx, dword ptr [rax]
0x4296f5:	mov	rax, qword ptr [rsp + 0xc0]
0x4296fd:	mov	dword ptr [rax], edx
0x4296ff:	mov	qword ptr [r12], 0x462f6e
0x429707:	add	rsp, 0x98
0x42970e:	mov	eax, r8d
0x429711:	pop	rbx
0x429712:	pop	rbp
0x429713:	pop	r12
0x429715:	pop	r13
0x429717:	ret	
0x429718:	endbr64	
0x42971c:	mov	rdi, rsi
0x42971f:	jmp	0x403b20
0x429724:	endbr64	
0x429728:	mov	edi, esi
0x42972a:	mov	esi, 0x463577
0x42972f:	jmp	0x403d30
0x429734:	endbr64	
0x429738:	push	rbp
0x429739:	mov	ebp, esi
0x42973b:	xor	eax, eax
0x42973d:	mov	edx, 1
0x429742:	mov	esi, 2
0x429747:	mov	edi, ebp
0x429749:	call	0x403960
0x42974e:	test	eax, eax
0x429750:	js	0x42975f
0x429752:	mov	edi, ebp
0x429754:	mov	esi, 0x4639e2
0x429759:	pop	rbp
0x42975a:	jmp	0x403d30
0x42975f:	xor	eax, eax
0x429761:	pop	rbp
0x429762:	ret	
0x429763:	push	rbp
0x429764:	mov	rbp, rsp
0x429767:	push	r15
0x429769:	push	r14
0x42976b:	push	r13
0x42976d:	push	r12
0x42976f:	push	rbx
0x429770:	sub	rsp, 0x118
0x429777:	mov	qword ptr [rbp - 0x60], r8
0x42977b:	mov	r12, qword ptr [rdi]
0x42977e:	mov	r8, qword ptr [rdi + 0x30]
0x429782:	mov	rax, qword ptr [rdi + 0x10]
0x429786:	mov	qword ptr [rbp - 0x80], rdi
0x42978a:	mov	r10, rsp
0x42978d:	mov	rbx, qword ptr [rdi + 0x28]
0x429791:	mov	qword ptr [rbp - 0x50], rsi
0x429795:	mov	qword ptr [rbp - 0xa8], r8
0x42979c:	add	rax, r12
0x42979f:	inc	r8
0x4297a2:	mov	dword ptr [rbp - 0xd8], edx
0x4297a8:	mov	dword ptr [rbp - 0xe4], ecx
0x4297ae:	mov	qword ptr [rbp - 0x98], rax
0x4297b5:	mov	qword ptr [rbp - 0x88], rbx
0x4297bc:	mov	qword ptr [rbp - 0xa0], r8
0x4297c3:	cmp	rsp, r10
0x4297c6:	je	0x4297da
0x4297c8:	sub	rsp, 0x1000
0x4297cf:	or	qword ptr [rsp + 0xff8], 0
0x4297d8:	jmp	0x4297c3
0x4297da:	sub	rsp, 0x30
0x4297de:	or	qword ptr [rsp + 0x28], 0
0x4297e4:	lea	r15, [rsp + 0xf]
0x4297e9:	and	r15, 0xfffffffffffffff0
0x4297ed:	cmp	qword ptr [rbp - 0xa8], 0
0x4297f5:	je	0x429aec
0x4297fb:	mov	r11, qword ptr [rbp - 0xa0]
0x429802:	mov	rdi, rsp
0x429805:	shl	r11, 3
0x429809:	lea	r13, [r11 + 0x17]
0x42980d:	mov	r14, r13
0x429810:	and	r13, 0xfffffffffffff000
0x429817:	and	r14, 0xfffffffffffffff0
0x42981b:	sub	rdi, r13
0x42981e:	cmp	rsp, rdi
0x429821:	je	0x429835
0x429823:	sub	rsp, 0x1000
0x42982a:	or	qword ptr [rsp + 0xff8], 0
0x429833:	jmp	0x42981e
0x429835:	and	r14d, 0xfff
0x42983c:	sub	rsp, r14
0x42983f:	test	r14, r14
0x429842:	je	0x42984a
0x429844:	or	qword ptr [rsp + r14 - 8], 0
0x42984a:	lea	rdx, [rsp + 0xf]
0x42984f:	lea	rax, [r11 + 0x17]
0x429853:	mov	rbx, rsp
0x429856:	and	rdx, 0xfffffffffffffff0
0x42985a:	mov	rcx, rax
0x42985d:	and	rax, 0xfffffffffffff000
0x429863:	mov	qword ptr [rbp - 0x78], rdx
0x429867:	and	rcx, 0xfffffffffffffff0
0x42986b:	sub	rbx, rax
0x42986e:	cmp	rsp, rbx
0x429871:	je	0x429885
0x429873:	sub	rsp, 0x1000
0x42987a:	or	qword ptr [rsp + 0xff8], 0
0x429883:	jmp	0x42986e
0x429885:	and	ecx, 0xfff
0x42988b:	sub	rsp, rcx
0x42988e:	test	rcx, rcx
0x429891:	je	0x429899
0x429893:	or	qword ptr [rsp + rcx - 8], 0
0x429899:	lea	rsi, [rsp + 0xf]
0x42989e:	lea	r8, [r11 + 0x17]
0x4298a2:	mov	r13, rsp
0x4298a5:	and	rsi, 0xfffffffffffffff0
0x4298a9:	mov	r10, r8
0x4298ac:	and	r8, 0xfffffffffffff000
0x4298b3:	mov	qword ptr [rbp - 0x70], rsi
0x4298b7:	and	r10, 0xfffffffffffffff0
0x4298bb:	sub	r13, r8
0x4298be:	cmp	rsp, r13
0x4298c1:	je	0x4298d5
0x4298c3:	sub	rsp, 0x1000
0x4298ca:	or	qword ptr [rsp + 0xff8], 0
0x4298d3:	jmp	0x4298be
0x4298d5:	and	r10d, 0xfff
0x4298dc:	sub	rsp, r10
0x4298df:	test	r10, r10
0x4298e2:	je	0x4298ea
0x4298e4:	or	qword ptr [rsp + r10 - 8], 0
0x4298ea:	lea	r14, [rsp + 0xf]
0x4298ef:	lea	rdi, [r11 + 0x17]
0x4298f3:	mov	rax, rsp
0x4298f6:	and	r14, 0xfffffffffffffff0
0x4298fa:	mov	rdx, rdi
0x4298fd:	and	rdi, 0xfffffffffffff000
0x429904:	mov	qword ptr [rbp - 0xc0], r14
0x42990b:	and	rdx, 0xfffffffffffffff0
0x42990f:	sub	rax, rdi
0x429912:	cmp	rsp, rax
0x429915:	je	0x429929
0x429917:	sub	rsp, 0x1000
0x42991e:	or	qword ptr [rsp + 0xff8], 0
0x429927:	jmp	0x429912
0x429929:	and	edx, 0xfff
0x42992f:	sub	rsp, rdx
0x429932:	test	rdx, rdx
0x429935:	je	0x42993d
0x429937:	or	qword ptr [rsp + rdx - 8], 0
0x42993d:	lea	rcx, [rsp + 0xf]
0x429942:	lea	rbx, [r11 + 0x17]
0x429946:	mov	rsi, rsp
0x429949:	and	rcx, 0xfffffffffffffff0
0x42994d:	mov	r8, rbx
0x429950:	and	rbx, 0xfffffffffffff000
0x429957:	mov	qword ptr [rbp - 0xc8], rcx
0x42995e:	and	r8, 0xfffffffffffffff0
0x429962:	sub	rsi, rbx
0x429965:	cmp	rsp, rsi
0x429968:	je	0x42997c
0x42996a:	sub	rsp, 0x1000
0x429971:	or	qword ptr [rsp + 0xff8], 0
0x42997a:	jmp	0x429965
0x42997c:	and	r8d, 0xfff
0x429983:	sub	rsp, r8
0x429986:	test	r8, r8
0x429989:	je	0x429991
0x42998b:	or	qword ptr [rsp + r8 - 8], 0
0x429991:	lea	r10, [rsp + 0xf]
0x429996:	lea	r13, [r11 + 0x17]
0x42999a:	mov	rdi, rsp
0x42999d:	and	r10, 0xfffffffffffffff0
0x4299a1:	mov	r14, r13
0x4299a4:	and	r13, 0xfffffffffffff000
0x4299ab:	mov	qword ptr [rbp - 0xf0], r10
0x4299b2:	and	r14, 0xfffffffffffffff0
0x4299b6:	sub	rdi, r13
0x4299b9:	cmp	rsp, rdi
0x4299bc:	je	0x4299d0
0x4299be:	sub	rsp, 0x1000
0x4299c5:	or	qword ptr [rsp + 0xff8], 0
0x4299ce:	jmp	0x4299b9
0x4299d0:	and	r14d, 0xfff
0x4299d7:	sub	rsp, r14
0x4299da:	test	r14, r14
0x4299dd:	je	0x4299e5
0x4299df:	or	qword ptr [rsp + r14 - 8], 0
0x4299e5:	lea	rdx, [rsp + 0xf]
0x4299ea:	lea	rax, [r11 + 0x17]
0x4299ee:	mov	rbx, rsp
0x4299f1:	and	rdx, 0xfffffffffffffff0
0x4299f5:	mov	rcx, rax
0x4299f8:	and	rax, 0xfffffffffffff000
0x4299fe:	mov	qword ptr [rbp - 0xf8], rdx
0x429a05:	and	rcx, 0xfffffffffffffff0
0x429a09:	sub	rbx, rax
0x429a0c:	cmp	rsp, rbx
0x429a0f:	je	0x429a23
0x429a11:	sub	rsp, 0x1000
0x429a18:	or	qword ptr [rsp + 0xff8], 0
0x429a21:	jmp	0x429a0c
0x429a23:	and	ecx, 0xfff
0x429a29:	sub	rsp, rcx
0x429a2c:	test	rcx, rcx
0x429a2f:	je	0x429a37
0x429a31:	or	qword ptr [rsp + rcx - 8], 0
0x429a37:	lea	r8, [r11 + 0x17]
0x429a3b:	lea	r13, [rsp + 0xf]
0x429a40:	mov	rsi, rsp
0x429a43:	mov	r10, r8
0x429a46:	and	r8, 0xfffffffffffff000
0x429a4d:	and	r13, 0xfffffffffffffff0
0x429a51:	and	r10, 0xfffffffffffffff0
0x429a55:	sub	rsi, r8
0x429a58:	cmp	rsp, rsi
0x429a5b:	je	0x429a6f
0x429a5d:	sub	rsp, 0x1000
0x429a64:	or	qword ptr [rsp + 0xff8], 0
0x429a6d:	jmp	0x429a58
0x429a6f:	and	r10d, 0xfff
0x429a76:	sub	rsp, r10
0x429a79:	test	r10, r10
0x429a7c:	je	0x429a84
0x429a7e:	or	qword ptr [rsp + r10 - 8], 0
0x429a84:	lea	r14, [rsp + 0xf]
0x429a89:	add	r11, 0x17
0x429a8d:	mov	rdx, rsp
0x429a90:	and	r14, 0xfffffffffffffff0
0x429a94:	mov	rdi, r11
0x429a97:	and	r11, 0xfffffffffffff000
0x429a9e:	mov	qword ptr [rbp - 0x118], r14
0x429aa5:	and	rdi, 0xfffffffffffffff0
0x429aa9:	sub	rdx, r11
0x429aac:	cmp	rsp, rdx
0x429aaf:	je	0x429ac3
0x429ab1:	sub	rsp, 0x1000
0x429ab8:	or	qword ptr [rsp + 0xff8], 0
0x429ac1:	jmp	0x429aac
0x429ac3:	mov	rdx, rdi
0x429ac6:	and	edx, 0xfff
0x429acc:	sub	rsp, rdx
0x429acf:	test	rdx, rdx
0x429ad2:	je	0x429ada
0x429ad4:	or	qword ptr [rsp + rdx - 8], 0
0x429ada:	lea	r11, [rsp + 0xf]
0x429adf:	and	r11, 0xfffffffffffffff0
0x429ae3:	mov	qword ptr [rbp - 0x110], r11
0x429aea:	jmp	0x429b41
0x429aec:	mov	qword ptr [rbp - 0x110], 0
0x429af7:	xor	r13d, r13d
0x429afa:	mov	qword ptr [rbp - 0x118], 0
0x429b05:	mov	qword ptr [rbp - 0xf8], 0
0x429b10:	mov	qword ptr [rbp - 0xf0], 0
0x429b1b:	mov	qword ptr [rbp - 0xc8], 0
0x429b26:	mov	qword ptr [rbp - 0xc0], 0
0x429b31:	mov	qword ptr [rbp - 0x70], 0
0x429b39:	mov	qword ptr [rbp - 0x78], 0
0x429b41:	cmp	dword ptr [rbp - 0xe4], 0
0x429b48:	js	0x429b5a
0x429b4a:	mov	ecx, dword ptr [rbp - 0xd8]
0x429b50:	xor	ebx, ebx
0x429b52:	cmp	dword ptr [rbp - 0xe4], ecx
0x429b58:	jle	0x429b62
0x429b5a:	or	eax, 0xffffffff
0x429b5d:	jmp	0x42b2ce
0x429b62:	inc	rbx
0x429b65:	cmp	qword ptr [rbp - 0xa0], rbx
0x429b6c:	jbe	0x429bb9
0x429b6e:	lea	rdi, [r13 + rbx*8]
0x429b73:	mov	rcx, qword ptr [rbp - 0xc8]
0x429b7a:	mov	rdx, qword ptr [rbp - 0xc0]
0x429b81:	mov	r10b, byte ptr [rdi]
0x429b84:	mov	r11, qword ptr [rbp - 0x70]
0x429b88:	mov	r8, qword ptr [rbp - 0x78]
0x429b8c:	mov	qword ptr [rcx + rbx*8], 0x4e6538
0x429b94:	and	r10d, 0xffffffe0
0x429b98:	mov	qword ptr [rdx + rbx*8], 0x4e6538
0x429ba0:	or	r10d, 3
0x429ba4:	mov	qword ptr [r11 + rbx*8], 0x4e6538
0x429bac:	mov	qword ptr [r8 + rbx*8], 0x4e6538
0x429bb4:	mov	byte ptr [rdi], r10b
0x429bb7:	jmp	0x429b62
0x429bb9:	cmp	dword ptr [rbp - 0xd8], 0
0x429bc0:	movsxd	rax, dword ptr [rbp - 0xd8]
0x429bc7:	movsxd	rbx, r9d
0x429bca:	sete	byte ptr [rbp - 0x8d]
0x429bd1:	add	rax, qword ptr [rbp - 0x50]
0x429bd5:	mov	qword ptr [rbp - 0xb0], rax
0x429bdc:	test	r9d, r9d
0x429bdf:	jg	0x429bf2
0x429be1:	mov	r9, qword ptr [rbp - 0x50]
0x429be5:	mov	qword ptr [rbp - 0xb8], rbx
0x429bec:	mov	qword ptr [rbp - 0x58], r9
0x429bf0:	jmp	0x429c05
0x429bf2:	mov	qword ptr [rbp - 0xb8], 0
0x429bfd:	add	rbx, qword ptr [rbp - 0x50]
0x429c01:	mov	qword ptr [rbp - 0x58], rbx
0x429c05:	movsxd	r8, dword ptr [rbp - 0xe4]
0x429c0c:	mov	r10, qword ptr [rbp - 0xa8]
0x429c13:	mov	r14d, 0
0x429c19:	mov	dword ptr [rbp - 0x8c], 5
0x429c23:	mov	rbx, qword ptr [rbp - 0x50]
0x429c27:	mov	rdi, qword ptr [rbp - 0x58]
0x429c2b:	mov	dword ptr [rbp - 0x68], 0
0x429c32:	mov	edx, 0x100
0x429c37:	lea	rsi, [r10*8]
0x429c3f:	mov	qword ptr [rbp - 0xd0], 0
0x429c4a:	mov	r11d, 0x101
0x429c50:	add	rbx, r8
0x429c53:	inc	r10
0x429c56:	mov	qword ptr [rbp - 0x48], rdi
0x429c5a:	cmovne	r14, rsi
0x429c5e:	mov	qword ptr [rbp - 0x100], r8
0x429c65:	mov	r8, r12
0x429c68:	mov	r12, rdx
0x429c6b:	mov	dword ptr [rbp - 0xd4], 0
0x429c75:	mov	qword ptr [rbp - 0x108], 0
0x429c80:	mov	qword ptr [rbp - 0xe0], r14
0x429c87:	xor	r14d, r14d
0x429c8a:	cmp	qword ptr [rbp - 0x98], r8
0x429c91:	jne	0x429fa1
0x429c97:	cmp	qword ptr [rbp - 0x58], rbx
0x429c9b:	je	0x429d88
0x429ca1:	mov	r11, qword ptr [rbp - 0x48]
0x429ca5:	xor	edx, edx
0x429ca7:	cmp	qword ptr [rbp - 0xb8], r11
0x429cae:	je	0x429cba
0x429cb0:	cmp	rbx, qword ptr [rbp - 0xd0]
0x429cb7:	seta	dl
0x429cba:	test	r14d, r14d
0x429cbd:	je	0x429d24
0x429cbf:	cmp	dword ptr [rbp - 0xd4], 0
0x429cc6:	je	0x429cd0
0x429cc8:	test	dl, dl
0x429cca:	je	0x42b1c0
0x429cd0:	mov	r8, qword ptr [rbp - 0x78]
0x429cd4:	mov	r12, qword ptr [rbp - 0xf0]
0x429cdb:	mov	qword ptr [rbp - 0xd0], rbx
0x429ce2:	mov	r10, qword ptr [rbp - 0xf8]
0x429ce9:	mov	rax, qword ptr [rbp - 0x70]
0x429ced:	mov	dword ptr [rbp - 0xd4], 1
0x429cf7:	add	r12, 8
0x429cfb:	mov	rcx, qword ptr [rbp - 0xe0]
0x429d02:	lea	rsi, [r8 + 8]
0x429d06:	mov	rdi, r12
0x429d09:	add	r10, 8
0x429d0d:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x429d0f:	mov	rcx, qword ptr [rbp - 0xe0]
0x429d16:	lea	rsi, [rax + 8]
0x429d1a:	mov	rdi, r10
0x429d1d:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x429d1f:	jmp	0x42b1c0
0x429d24:	cmp	dword ptr [rbp - 0xd4], 0
0x429d2b:	je	0x429d88
0x429d2d:	test	dl, dl
0x429d2f:	jne	0x429d88
0x429d31:	mov	rdi, qword ptr [rbp - 0x78]
0x429d35:	mov	rsi, qword ptr [rbp - 0xf0]
0x429d3c:	cmp	qword ptr [rbp - 0xd0], 0
0x429d44:	mov	rbx, qword ptr [rbp - 0x58]
0x429d48:	mov	rcx, qword ptr [rbp - 0xe0]
0x429d4f:	cmove	rbx, qword ptr [rbp - 0xb8]
0x429d57:	add	rdi, 8
0x429d5b:	add	rsi, 8
0x429d5f:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x429d61:	mov	rdi, qword ptr [rbp - 0x70]
0x429d65:	mov	rsi, qword ptr [rbp - 0xf8]
0x429d6c:	mov	rcx, qword ptr [rbp - 0xe0]
0x429d73:	mov	qword ptr [rbp - 0x48], rbx
0x429d77:	add	rdi, 8
0x429d7b:	add	rsi, 8
0x429d7f:	mov	rbx, qword ptr [rbp - 0xd0]
0x429d86:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x429d88:	cmp	qword ptr [rbp - 0x60], 0
0x429d8d:	jne	0x429db4
0x429d8f:	mov	rax, rbx
0x429d92:	xor	r9d, r9d
0x429d95:	mov	rbx, qword ptr [rbp - 0x48]
0x429d99:	sub	rax, qword ptr [rbp - 0x100]
0x429da0:	cmp	qword ptr [rbp - 0xb8], rbx
0x429da7:	cmovne	r9, qword ptr [rbp - 0x50]
0x429dac:	sub	eax, r9d
0x429daf:	jmp	0x42b2ce
0x429db4:	mov	r13, qword ptr [rbp - 0x80]
0x429db8:	mov	al, byte ptr [r13 + 0x38]
0x429dbc:	test	al, 0x10
0x429dbe:	jne	0x429d8f
0x429dc0:	and	al, 6
0x429dc2:	jne	0x429e3b
0x429dc4:	mov	rsi, qword ptr [rbp - 0xa8]
0x429dcb:	mov	ecx, 0x1e
0x429dd0:	mov	r13, qword ptr [rbp - 0x60]
0x429dd4:	add	rsi, 2
0x429dd8:	cmp	rsi, rcx
0x429ddb:	cmovb	rsi, rcx
0x429ddf:	mov	r14d, esi
0x429de2:	mov	dword ptr [r13], esi
0x429de6:	shl	r14, 2
0x429dea:	mov	rdi, r14
0x429ded:	call	0x403ca0
0x429df2:	mov	rdi, r14
0x429df5:	mov	r15, rax
0x429df8:	mov	rax, qword ptr [rbp - 0x60]
0x429dfc:	mov	qword ptr [rax + 8], r15
0x429e00:	call	0x403ca0
0x429e05:	mov	r9, qword ptr [rbp - 0x60]
0x429e09:	mov	qword ptr [r9 + 0x10], rax
0x429e0d:	test	rax, rax
0x429e10:	je	0x429e17
0x429e12:	test	r15, r15
0x429e15:	jne	0x429e21
0x429e17:	mov	eax, 0xfffffffe
0x429e1c:	jmp	0x42b2ce
0x429e21:	mov	r11, qword ptr [rbp - 0x80]
0x429e25:	mov	rdi, qword ptr [rbp - 0x80]
0x429e29:	mov	dl, byte ptr [r11 + 0x38]
0x429e2d:	mov	byte ptr [rbp - 0x58], dl
0x429e30:	and	edx, 0xfffffff9
0x429e33:	or	edx, 2
0x429e36:	mov	byte ptr [rdi + 0x38], dl
0x429e39:	jmp	0x429ea9
0x429e3b:	mov	r14, qword ptr [rbp - 0x60]
0x429e3f:	mov	r15d, dword ptr [r14]
0x429e42:	cmp	al, 2
0x429e44:	jne	0x429ea9
0x429e46:	mov	r11, qword ptr [rbp - 0xa8]
0x429e4d:	mov	r9d, r15d
0x429e50:	add	r11, 2
0x429e54:	cmp	r9, r11
0x429e57:	jae	0x429ea9
0x429e59:	mov	edx, dword ptr [rbp - 0xa0]
0x429e5f:	mov	rdi, qword ptr [r14 + 8]
0x429e63:	lea	esi, [rdx + 1]
0x429e66:	mov	dword ptr [r14], esi
0x429e69:	shl	rsi, 2
0x429e6d:	call	0x403d20
0x429e72:	mov	r12, qword ptr [rbp - 0x60]
0x429e76:	mov	esi, dword ptr [r12]
0x429e7a:	mov	rdi, qword ptr [r12 + 0x10]
0x429e7f:	mov	qword ptr [r12 + 8], rax
0x429e84:	shl	rsi, 2
0x429e88:	call	0x403d20
0x429e8d:	mov	r10, qword ptr [rbp - 0x60]
0x429e91:	cmp	qword ptr [r10 + 8], 0
0x429e96:	mov	qword ptr [r10 + 0x10], rax
0x429e9a:	je	0x429e17
0x429ea0:	test	rax, rax
0x429ea3:	je	0x429e17
0x429ea9:	mov	r12, qword ptr [rbp - 0x60]
0x429ead:	cmp	dword ptr [r12], 0
0x429eb2:	je	0x429f62
0x429eb8:	mov	r8, qword ptr [r12 + 8]
0x429ebd:	mov	r10d, dword ptr [rbp - 0xe4]
0x429ec4:	mov	rcx, rbx
0x429ec7:	mov	r13, qword ptr [rbp - 0x48]
0x429ecb:	sub	rcx, qword ptr [rbp - 0x50]
0x429ecf:	cmp	qword ptr [rbp - 0xb8], r13
0x429ed6:	mov	dword ptr [r8], r10d
0x429ed9:	mov	r13d, 1
0x429edf:	mov	r10, qword ptr [rbp - 0x60]
0x429ee3:	mov	rsi, qword ptr [rbp - 0x60]
0x429ee7:	cmove	ecx, ebx
0x429eea:	mov	r14, qword ptr [r10 + 0x10]
0x429eee:	mov	r8, qword ptr [rsi + 8]
0x429ef2:	mov	dword ptr [r14], ecx
0x429ef5:	mov	r14, qword ptr [rbp - 0x50]
0x429ef9:	mov	r15d, dword ptr [r10]
0x429efc:	cmp	r15, qword ptr [rbp - 0xa0]
0x429f03:	cmova	r15, qword ptr [rbp - 0xa0]
0x429f0b:	cmp	r15, r13
0x429f0e:	jbe	0x429f62
0x429f10:	mov	rsi, qword ptr [rbp - 0x78]
0x429f14:	lea	r9, [r13*4]
0x429f1c:	lea	rax, [r8 + r9]
0x429f20:	add	r9, qword ptr [r10 + 0x10]
0x429f24:	mov	r15, qword ptr [rsi + r13*8]
0x429f28:	cmp	r15, 0x4e6538
0x429f2f:	je	0x429f42
0x429f31:	mov	rcx, qword ptr [rbp - 0x70]
0x429f35:	mov	r11, qword ptr [rcx + r13*8]
0x429f39:	cmp	r11, 0x4e6538
0x429f40:	jne	0x429f51
0x429f42:	mov	dword ptr [r9], 0xffffffff
0x429f49:	mov	dword ptr [rax], 0xffffffff
0x429f4f:	jmp	0x429f5d
0x429f51:	sub	r15, r14
0x429f54:	sub	r11, r14
0x429f57:	mov	dword ptr [rax], r15d
0x429f5a:	mov	dword ptr [r9], r11d
0x429f5d:	inc	r13
0x429f60:	jmp	0x429ef9
0x429f62:	mov	rax, qword ptr [rbp - 0xa0]
0x429f69:	mov	r11d, dword ptr [rbp - 0xa0]
0x429f70:	mov	rdx, qword ptr [rbp - 0x60]
0x429f74:	shl	rax, 2
0x429f78:	cmp	dword ptr [rdx], r11d
0x429f7b:	jbe	0x429d8f
0x429f81:	mov	rdi, qword ptr [rdx + 0x10]
0x429f85:	mov	r12, qword ptr [rdx + 8]
0x429f89:	inc	r11d
0x429f8c:	mov	dword ptr [rdi + rax], 0xffffffff
0x429f93:	mov	dword ptr [r12 + rax], 0xffffffff
0x429f9b:	add	rax, 4
0x429f9f:	jmp	0x429f78
0x429fa1:	mov	r9b, byte ptr [r8]
0x429fa4:	lea	rdx, [r8 + 1]
0x429fa8:	cmp	r9b, 0x1d
0x429fac:	ja	0x42b191
0x429fb2:	movzx	ecx, r9b
0x429fb6:	notrack jmp	qword ptr ds:[rcx*8 + 0x4ca8e0]
0x429fbe:	cmp	qword ptr [rbp - 0x58], rdi
0x429fc2:	je	0x42b1bc
0x429fc8:	mov	rdi, qword ptr [rbp - 0x58]
0x429fcc:	mov	rbx, qword ptr [rbp - 0x50]
0x429fd0:	cmp	rdi, rbx
0x429fd3:	je	0x429fbe
0x429fd5:	cmp	qword ptr [rbp - 0x88], 0
0x429fdd:	movzx	ecx, byte ptr [rbx]
0x429fe0:	mov	qword ptr [rbp - 0x48], rdi
0x429fe4:	je	0x429ff1
0x429fe6:	mov	r10, qword ptr [rbp - 0x88]
0x429fed:	mov	cl, byte ptr [r10 + rcx]
0x429ff1:	movzx	eax, byte ptr [r8 + 1]
0x429ff6:	movzx	esi, cl
0x429ff9:	lea	r8d, [rax*8]
0x42a001:	cmp	esi, r8d
0x42a004:	jae	0x42a1fa
0x42a00a:	mov	edi, ecx
0x42a00c:	and	ecx, 7
0x42a00f:	shr	dil, 3
0x42a013:	inc	edi
0x42a015:	movzx	r10d, dil
0x42a019:	movzx	esi, byte ptr [rdx + r10]
0x42a01e:	sar	esi, cl
0x42a020:	and	sil, 1
0x42a024:	je	0x42a1fa
0x42a02a:	cmp	r9b, 5
0x42a02e:	je	0x42b1c0
0x42a034:	cmp	dword ptr [rbp - 0x68], 0
0x42a038:	je	0x42a209
0x42a03e:	inc	eax
0x42a040:	mov	dword ptr [rbp - 0x68], 1
0x42a047:	inc	rbx
0x42a04a:	cdqe	
0x42a04c:	add	rdx, rax
0x42a04f:	mov	r8, rdx
0x42a052:	jmp	0x429c8a
0x42a057:	lea	r8, [r12 + 1]
0x42a05c:	mov	ecx, dword ptr [rbp - 0x8c]
0x42a062:	sub	r8, r11
0x42a065:	lea	rax, [r8 + r8*2]
0x42a069:	add	rax, 4
0x42a06d:	jmp	0x42adec
0x42a072:	lea	rdx, [r12 + 1]
0x42a077:	sub	rdx, r11
0x42a07a:	lea	rax, [rdx + rdx*2]
0x42a07e:	mov	edx, dword ptr [rbp - 0x8c]
0x42a084:	add	rax, 4
0x42a088:	jmp	0x42acf9
0x42a08d:	movzx	ecx, byte ptr [r8 + 1]
0x42a092:	mov	rdi, qword ptr [rbp - 0x48]
0x42a096:	lea	rax, [r8 + 2]
0x42a09a:	mov	r10, rbx
0x42a09d:	cmp	qword ptr [rbp - 0x88], 0
0x42a0a5:	je	0x42a109
0x42a0a7:	cmp	rdi, rbx
0x42a0aa:	jne	0x42a0c9
0x42a0ac:	cmp	qword ptr [rbp - 0x58], rdi
0x42a0b0:	je	0x42b196
0x42a0b6:	mov	rdi, qword ptr [rbp - 0x58]
0x42a0ba:	mov	rbx, qword ptr [rbp - 0x50]
0x42a0be:	mov	rdx, rax
0x42a0c1:	mov	rax, rdx
0x42a0c4:	mov	r10, rbx
0x42a0c7:	jmp	0x42a0a7
0x42a0c9:	movzx	esi, byte ptr [r10]
0x42a0cd:	mov	r8b, byte ptr [rax]
0x42a0d0:	inc	rbx
0x42a0d3:	lea	rdx, [rax + 1]
0x42a0d7:	mov	r9, qword ptr [rbp - 0x88]
0x42a0de:	cmp	byte ptr [r9 + rsi], r8b
0x42a0e2:	jne	0x42b196
0x42a0e8:	dec	ecx
0x42a0ea:	jne	0x42a0c1
0x42a0ec:	jmp	0x42a125
0x42a0ee:	cmp	qword ptr [rbp - 0x58], rdi
0x42a0f2:	je	0x42b196
0x42a0f8:	mov	rdi, qword ptr [rbp - 0x58]
0x42a0fc:	mov	rbx, qword ptr [rbp - 0x50]
0x42a100:	mov	rdx, rax
0x42a103:	mov	rax, rdx
0x42a106:	mov	r10, rbx
0x42a109:	cmp	rdi, rbx
0x42a10c:	je	0x42a0ee
0x42a10e:	mov	r8b, byte ptr [rax]
0x42a111:	inc	rbx
0x42a114:	lea	rdx, [rax + 1]
0x42a118:	cmp	byte ptr [r10], r8b
0x42a11b:	jne	0x42b196
0x42a121:	dec	ecx
0x42a123:	jne	0x42a103
0x42a125:	cmp	dword ptr [rbp - 0x68], 0
0x42a129:	mov	qword ptr [rbp - 0x48], rdi
0x42a12d:	jne	0x42a04f
0x42a133:	mov	rcx, r11
0x42a136:	cmp	rcx, r12
0x42a139:	ja	0x42b172
0x42a13f:	or	byte ptr [r13 + rcx*8], 0x18
0x42a145:	inc	rcx
0x42a148:	jmp	0x42a136
0x42a14a:	mov	rdi, qword ptr [rbp - 0x48]
0x42a14e:	cmp	rdi, rbx
0x42a151:	jne	0x42a167
0x42a153:	cmp	qword ptr [rbp - 0x58], rdi
0x42a157:	je	0x42b1bc
0x42a15d:	mov	rdi, qword ptr [rbp - 0x58]
0x42a161:	mov	rbx, qword ptr [rbp - 0x50]
0x42a165:	jmp	0x42a14e
0x42a167:	mov	rcx, qword ptr [rbp - 0x80]
0x42a16b:	mov	qword ptr [rbp - 0x48], rdi
0x42a16f:	mov	r8, qword ptr [rcx + 0x18]
0x42a173:	test	r8b, 0x40
0x42a177:	jne	0x42a1a0
0x42a179:	cmp	qword ptr [rbp - 0x88], 0
0x42a181:	movzx	eax, byte ptr [rbx]
0x42a184:	je	0x42a198
0x42a186:	mov	rdi, qword ptr [rbp - 0x88]
0x42a18d:	cmp	byte ptr [rdi + rax], 0xa
0x42a191:	jne	0x42a1a0
0x42a193:	jmp	0x42b1c0
0x42a198:	cmp	al, 0xa
0x42a19a:	je	0x42b1c0
0x42a1a0:	and	r8b, 0x80
0x42a1a4:	je	0x42a1d0
0x42a1a6:	cmp	qword ptr [rbp - 0x88], 0
0x42a1ae:	movzx	r10d, byte ptr [rbx]
0x42a1b2:	je	0x42a1c7
0x42a1b4:	mov	rsi, qword ptr [rbp - 0x88]
0x42a1bb:	cmp	byte ptr [rsi + r10], 0
0x42a1c0:	jne	0x42a1d0
0x42a1c2:	jmp	0x42b1c0
0x42a1c7:	test	r10b, r10b
0x42a1ca:	je	0x42b1c0
0x42a1d0:	cmp	dword ptr [rbp - 0x68], 0
0x42a1d4:	jne	0x42b16f
0x42a1da:	mov	r9, r11
0x42a1dd:	cmp	r12, r9
0x42a1e0:	jb	0x42b16f
0x42a1e6:	or	byte ptr [r13 + r9*8], 0x18
0x42a1ec:	inc	r9
0x42a1ef:	jmp	0x42a1dd
0x42a1f1:	mov	rdi, qword ptr [rbp - 0x48]
0x42a1f5:	jmp	0x429fd0
0x42a1fa:	cmp	r9b, 5
0x42a1fe:	je	0x42a034
0x42a204:	jmp	0x42b1c0
0x42a209:	mov	r9, r11
0x42a20c:	cmp	r12, r9
0x42a20f:	jb	0x42a03e
0x42a215:	or	byte ptr [r13 + r9*8], 0x18
0x42a21b:	inc	r9
0x42a21e:	jmp	0x42a20c
0x42a220:	mov	qword ptr [rbp - 0x38], rdx
0x42a224:	movzx	r12d, byte ptr [r8 + 1]
0x42a229:	mov	al, byte ptr [r13 + r12*8]
0x42a22e:	and	eax, 3
0x42a231:	cmp	al, 3
0x42a233:	jne	0x42a277
0x42a235:	mov	rsi, qword ptr [rbp - 0x98]
0x42a23c:	mov	rdx, r13
0x42a23f:	lea	rdi, [rbp - 0x38]
0x42a243:	mov	qword ptr [rbp - 0x108], r11
0x42a24a:	mov	qword ptr [rbp - 0x68], r8
0x42a24e:	call	0x4249c7
0x42a253:	mov	r8, qword ptr [rbp - 0x68]
0x42a257:	and	eax, 3
0x42a25a:	movzx	r11d, byte ptr [r8 + 1]
0x42a25f:	mov	ecx, eax
0x42a261:	mov	dl, byte ptr [r13 + r11*8]
0x42a266:	and	edx, 0xfffffffc
0x42a269:	or	edx, ecx
0x42a26b:	mov	byte ptr [r13 + r11*8], dl
0x42a270:	mov	r11, qword ptr [rbp - 0x108]
0x42a277:	movzx	r10d, byte ptr [r8 + 1]
0x42a27c:	lea	r9, [r10*8]
0x42a284:	lea	rsi, [r13 + r9]
0x42a289:	add	r9, qword ptr [rbp - 0x78]
0x42a28d:	mov	r12, qword ptr [r9]
0x42a290:	test	byte ptr [rsi], 3
0x42a293:	je	0x42a2a0
0x42a295:	cmp	r12, 0x4e6538
0x42a29c:	cmove	r12, rbx
0x42a2a0:	or	byte ptr [rsi], 4
0x42a2a3:	mov	rdi, qword ptr [rbp - 0xc0]
0x42a2aa:	lea	rdx, [r8 + 3]
0x42a2ae:	movzx	eax, byte ptr [r8 + 1]
0x42a2b3:	mov	qword ptr [r9], rbx
0x42a2b6:	mov	qword ptr [rdi + r10*8], r12
0x42a2ba:	and	byte ptr [r13 + rax*8], 0xf7
0x42a2c0:	movzx	r12d, byte ptr [r8 + 1]
0x42a2c5:	cmp	r11, 0x101
0x42a2cc:	mov	qword ptr [rbp - 0x108], rdx
0x42a2d3:	mov	dword ptr [rbp - 0x68], 0
0x42a2da:	cmove	r11, r12
0x42a2de:	jmp	0x42a04f
0x42a2e3:	movzx	r9d, byte ptr [r8 + 1]
0x42a2e8:	lea	r10, [r9*8]
0x42a2f0:	lea	rcx, [r13 + r10]
0x42a2f5:	add	r10, qword ptr [rbp - 0x70]
0x42a2f9:	mov	rax, qword ptr [r10]
0x42a2fc:	test	byte ptr [rcx], 3
0x42a2ff:	je	0x42a30b
0x42a301:	cmp	rax, 0x4e6538
0x42a307:	cmove	rax, rbx
0x42a30b:	mov	rsi, qword ptr [rbp - 0xc8]
0x42a312:	and	byte ptr [rcx], 0xfb
0x42a315:	mov	qword ptr [r10], rbx
0x42a318:	mov	qword ptr [rsi + r9*8], rax
0x42a31c:	cmp	r12, r11
0x42a31f:	je	0x42a343
0x42a321:	mov	r12b, byte ptr [r8 + 1]
0x42a325:	dec	r12d
0x42a328:	movzx	r12d, r12b
0x42a32c:	test	r12, r12
0x42a32f:	je	0x42a343
0x42a331:	lea	rdx, [r12 - 1]
0x42a336:	test	byte ptr [r13 + r12*8], 4
0x42a33c:	jne	0x42a34f
0x42a33e:	mov	r12, rdx
0x42a341:	jmp	0x42a32c
0x42a343:	mov	r12d, 0x100
0x42a349:	mov	r11d, 0x101
0x42a34f:	movzx	edi, byte ptr [r8 + 1]
0x42a354:	lea	rdx, [r8 + 3]
0x42a358:	test	byte ptr [r13 + rdi*8], 8
0x42a35e:	je	0x42a36d
0x42a360:	cmp	r8, qword ptr [rbp - 0x108]
0x42a367:	jne	0x42b2b0
0x42a36d:	cmp	qword ptr [rbp - 0x98], rdx
0x42a374:	jbe	0x42b2b0
0x42a37a:	lea	r9, [r8 + 4]
0x42a37e:	mov	qword ptr [rbp - 0x38], r9
0x42a382:	mov	r10b, byte ptr [r8 + 3]
0x42a386:	cmp	r10b, 0x13
0x42a38a:	ja	0x42a39c
0x42a38c:	cmp	r10b, 0x10
0x42a390:	ja	0x42a3a9
0x42a392:	xor	ecx, ecx
0x42a394:	cmp	r10b, 0xd
0x42a398:	jne	0x42a3cd
0x42a39a:	jmp	0x42a3a9
0x42a39c:	xor	ecx, ecx
0x42a39e:	mov	sil, 1
0x42a3a1:	cmp	r10b, 0x16
0x42a3a5:	je	0x42a3ab
0x42a3a7:	jmp	0x42a3cd
0x42a3a9:	xor	esi, esi
0x42a3ab:	movsx	ecx, byte ptr [r8 + 5]
0x42a3b0:	movzx	eax, byte ptr [r8 + 4]
0x42a3b5:	lea	rdi, [r8 + 8]
0x42a3b9:	lea	r9, [r8 + 6]
0x42a3bd:	shl	ecx, 8
0x42a3c0:	add	ecx, eax
0x42a3c2:	test	sil, sil
0x42a3c5:	cmovne	r9, rdi
0x42a3c9:	mov	qword ptr [rbp - 0x38], r9
0x42a3cd:	movsxd	rax, ecx
0x42a3d0:	add	rax, qword ptr [rbp - 0x38]
0x42a3d4:	mov	qword ptr [rbp - 0x38], rax
0x42a3d8:	test	ecx, ecx
0x42a3da:	jns	0x42b2b0
0x42a3e0:	cmp	byte ptr [rax], 0xf
0x42a3e3:	jne	0x42b2b0
0x42a3e9:	cmp	byte ptr [rax + 3], 6
0x42a3ed:	jne	0x42b2b0
0x42a3f3:	movzx	r10d, byte ptr [r8 + 1]
0x42a3f8:	cmp	byte ptr [rax + 4], r10b
0x42a3fc:	jne	0x42b2b0
0x42a402:	lea	rsi, [r13 + r10*8]
0x42a407:	mov	dl, byte ptr [rsi]
0x42a409:	test	dl, 0x10
0x42a40c:	jne	0x42a457
0x42a40e:	lea	r8, [rax + 1]
0x42a412:	add	rax, 3
0x42a416:	mov	qword ptr [rbp - 0x38], r8
0x42a41a:	mov	r10b, byte ptr [rax - 2]
0x42a41e:	mov	dl, byte ptr [rax - 1]
0x42a421:	mov	qword ptr [rbp - 0x38], rax
0x42a425:	mov	byte ptr [rbp - 0x68], r10b
0x42a429:	lea	r10, [r12 + 1]
0x42a42e:	mov	byte ptr [rbp - 0x120], dl
0x42a434:	mov	rdx, r10
0x42a437:	sub	rdx, r11
0x42a43a:	lea	rcx, [rdx + rdx*2]
0x42a43e:	lea	rsi, [rcx + 4]
0x42a442:	mov	ecx, dword ptr [rbp - 0x8c]
0x42a448:	mov	qword ptr [rbp - 0x128], rsi
0x42a44f:	mov	rsi, r15
0x42a452:	jmp	0x42a4e9
0x42a457:	and	edx, 0xffffffef
0x42a45a:	mov	r9, qword ptr [rbp - 0x78]
0x42a45e:	mov	byte ptr [rsi], dl
0x42a460:	movzx	edi, byte ptr [r8 + 2]
0x42a465:	movzx	edx, byte ptr [r8 + 1]
0x42a46a:	mov	rcx, rdi
0x42a46d:	lea	rsi, [rdx*8]
0x42a475:	movzx	r10d, dl
0x42a479:	shl	rcx, 3
0x42a47d:	add	r10d, edi
0x42a480:	lea	rdi, [r9 + rsi]
0x42a484:	add	rsi, qword ptr [rbp - 0xc0]
0x42a48b:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42a48d:	cmp	r10d, edx
0x42a490:	jbe	0x42a40e
0x42a496:	mov	r9, qword ptr [rbp - 0xc8]
0x42a49d:	mov	rdi, qword ptr [rbp - 0xc0]
0x42a4a4:	mov	r8, qword ptr [r9 + rdx*8]
0x42a4a8:	cmp	qword ptr [rdi + rdx*8], r8
0x42a4ac:	ja	0x42a4b6
0x42a4ae:	mov	rsi, qword ptr [rbp - 0x70]
0x42a4b2:	mov	qword ptr [rsi + rdx*8], r8
0x42a4b6:	inc	rdx
0x42a4b9:	jmp	0x42a48d
0x42a4bb:	and	edi, 0xfff
0x42a4c1:	sub	rsp, rdi
0x42a4c4:	test	rdi, rdi
0x42a4c7:	je	0x42a4cf
0x42a4c9:	or	qword ptr [rsp + rdi - 8], 0
0x42a4cf:	lea	r15, [rsp + 0xf]
0x42a4d4:	shl	rcx, 3
0x42a4d8:	and	r15, 0xfffffffffffffff0
0x42a4dc:	mov	ecx, ecx
0x42a4de:	mov	rdi, r15
0x42a4e1:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42a4e3:	mov	rsi, r15
0x42a4e6:	mov	ecx, r9d
0x42a4e9:	mov	r15d, ecx
0x42a4ec:	sub	r15d, r14d
0x42a4ef:	cmp	r15, qword ptr [rbp - 0x128]
0x42a4f6:	jae	0x42a542
0x42a4f8:	cmp	ecx, 0x128e0
0x42a4fe:	ja	0x429e17
0x42a504:	lea	r15d, [rcx + rcx]
0x42a508:	mov	r8, rsp
0x42a50b:	lea	rdi, [r15*8 + 0x17]
0x42a513:	mov	r9, r15
0x42a516:	shr	rdi, 4
0x42a51a:	shl	rdi, 4
0x42a51e:	mov	r15, rdi
0x42a521:	and	r15, 0xfffffffffffff000
0x42a528:	sub	r8, r15
0x42a52b:	cmp	rsp, r8
0x42a52e:	je	0x42a4bb
0x42a530:	sub	rsp, 0x1000
0x42a537:	or	qword ptr [rsp + 0xff8], 0
0x42a540:	jmp	0x42a52b
0x42a542:	mov	qword ptr [rbp - 0x128], rax
0x42a549:	mov	r15, rsi
0x42a54c:	mov	esi, r14d
0x42a54f:	mov	dword ptr [rbp - 0x8c], ecx
0x42a555:	mov	rcx, r11
0x42a558:	mov	eax, esi
0x42a55a:	lea	edi, [rsi + 1]
0x42a55d:	lea	r9, [r15 + rax*8]
0x42a561:	lea	eax, [rsi + 2]
0x42a564:	add	esi, 3
0x42a567:	lea	r8, [r15 + rdi*8]
0x42a56b:	lea	rdi, [r15 + rax*8]
0x42a56f:	cmp	r12, rcx
0x42a572:	jb	0x42a597
0x42a574:	mov	rax, qword ptr [rbp - 0x78]
0x42a578:	mov	rax, qword ptr [rax + rcx*8]
0x42a57c:	mov	qword ptr [r9], rax
0x42a57f:	mov	r9, qword ptr [rbp - 0x70]
0x42a583:	mov	rax, qword ptr [r9 + rcx*8]
0x42a587:	mov	qword ptr [r8], rax
0x42a58a:	mov	r8, qword ptr [r13 + rcx*8]
0x42a58f:	inc	rcx
0x42a592:	mov	qword ptr [rdi], r8
0x42a595:	jmp	0x42a558
0x42a597:	mov	dword ptr [r9], r11d
0x42a59a:	xor	ecx, ecx
0x42a59c:	cmp	r11, r10
0x42a59f:	movsx	r11d, byte ptr [rbp - 0x120]
0x42a5a7:	mov	dword ptr [r8], r12d
0x42a5aa:	lea	edx, [rdx + rdx*2]
0x42a5ad:	movzx	r12d, byte ptr [rbp - 0x68]
0x42a5b2:	cmova	edx, ecx
0x42a5b5:	shl	r11d, 8
0x42a5b9:	mov	rax, qword ptr [rbp - 0x128]
0x42a5c0:	add	r11d, r12d
0x42a5c3:	movsxd	rsi, r11d
0x42a5c6:	lea	r10d, [r14 + rdx + 3]
0x42a5cb:	lea	r14d, [r14 + rdx + 4]
0x42a5d0:	add	rax, rsi
0x42a5d3:	mov	qword ptr [rdi], rax
0x42a5d6:	mov	qword ptr [r15 + r10*8], rbx
0x42a5da:	jmp	0x42b1c0
0x42a5df:	movzx	eax, byte ptr [r8 + 1]
0x42a5e4:	mov	rsi, qword ptr [rbp - 0x78]
0x42a5e8:	mov	rdx, qword ptr [rsi + rax*8]
0x42a5ec:	cmp	rdx, 0x4e6538
0x42a5f3:	je	0x42b1c0
0x42a5f9:	mov	r10, qword ptr [rbp - 0x70]
0x42a5fd:	mov	r9, qword ptr [r10 + rax*8]
0x42a601:	cmp	r9, 0x4e6538
0x42a608:	je	0x42b1c0
0x42a60e:	mov	rcx, r12
0x42a611:	mov	r10, r15
0x42a614:	mov	r12, rbx
0x42a617:	mov	r15, r9
0x42a61a:	mov	r9d, r14d
0x42a61d:	mov	r14, r13
0x42a620:	mov	r13, rdx
0x42a623:	cmp	r15, r13
0x42a626:	jne	0x42a640
0x42a628:	mov	r13, r14
0x42a62b:	mov	rbx, r12
0x42a62e:	mov	r14d, r9d
0x42a631:	mov	r12, rcx
0x42a634:	mov	r15, r10
0x42a637:	lea	rdx, [r8 + 2]
0x42a63b:	jmp	0x42a04f
0x42a640:	mov	rdi, qword ptr [rbp - 0x48]
0x42a644:	cmp	rdi, r12
0x42a647:	jne	0x42a65d
0x42a649:	cmp	qword ptr [rbp - 0x58], rdi
0x42a64d:	je	0x42b19c
0x42a653:	mov	rdi, qword ptr [rbp - 0x58]
0x42a657:	mov	r12, qword ptr [rbp - 0x50]
0x42a65b:	jmp	0x42a644
0x42a65d:	mov	rbx, rdi
0x42a660:	mov	rax, r15
0x42a663:	mov	qword ptr [rbp - 0x48], rdi
0x42a667:	sub	rbx, r12
0x42a66a:	sub	rax, r13
0x42a66d:	movsxd	rsi, ebx
0x42a670:	cmp	rsi, rax
0x42a673:	cmovg	ebx, eax
0x42a676:	cmp	qword ptr [rbp - 0x88], 0
0x42a67e:	je	0x42a6c0
0x42a680:	mov	edx, ebx
0x42a682:	xor	eax, eax
0x42a684:	mov	rsi, r8
0x42a687:	mov	qword ptr [rbp - 0x120], rdx
0x42a68e:	cmp	qword ptr [rbp - 0x120], rax
0x42a695:	je	0x42a6bb
0x42a697:	movzx	edi, byte ptr [r13 + rax]
0x42a69d:	movzx	r8d, byte ptr [r12 + rax]
0x42a6a2:	inc	rax
0x42a6a5:	mov	rdx, qword ptr [rbp - 0x88]
0x42a6ac:	mov	dil, byte ptr [rdx + rdi]
0x42a6b0:	cmp	byte ptr [rdx + r8], dil
0x42a6b4:	je	0x42a68e
0x42a6b6:	jmp	0x42b1ae
0x42a6bb:	mov	r8, rsi
0x42a6be:	jmp	0x42a71c
0x42a6c0:	movsxd	rdx, ebx
0x42a6c3:	mov	rsi, r13
0x42a6c6:	mov	rdi, r12
0x42a6c9:	mov	qword ptr [rbp - 0x140], r10
0x42a6d0:	mov	qword ptr [rbp - 0x138], r11
0x42a6d7:	mov	qword ptr [rbp - 0x130], rcx
0x42a6de:	mov	dword ptr [rbp - 0x128], r9d
0x42a6e5:	mov	qword ptr [rbp - 0x120], r8
0x42a6ec:	call	0x403b70
0x42a6f1:	mov	r8, qword ptr [rbp - 0x120]
0x42a6f8:	mov	r9d, dword ptr [rbp - 0x128]
0x42a6ff:	test	eax, eax
0x42a701:	mov	rcx, qword ptr [rbp - 0x130]
0x42a708:	mov	r11, qword ptr [rbp - 0x138]
0x42a70f:	mov	r10, qword ptr [rbp - 0x140]
0x42a716:	jne	0x42b1ae
0x42a71c:	movsxd	rbx, ebx
0x42a71f:	add	r12, rbx
0x42a722:	add	r13, rbx
0x42a725:	cmp	dword ptr [rbp - 0x68], 0
0x42a729:	je	0x42a737
0x42a72b:	mov	dword ptr [rbp - 0x68], 1
0x42a732:	jmp	0x42a623
0x42a737:	mov	rdi, r11
0x42a73a:	cmp	rcx, rdi
0x42a73d:	jb	0x42a72b
0x42a73f:	or	byte ptr [r14 + rdi*8], 0x18
0x42a744:	inc	rdi
0x42a747:	jmp	0x42a73a
0x42a749:	cmp	rbx, qword ptr [rbp - 0x50]
0x42a74d:	je	0x42a758
0x42a74f:	cmp	byte ptr [rbp - 0x8d], 0
0x42a756:	je	0x42a76b
0x42a758:	mov	rdi, qword ptr [rbp - 0x80]
0x42a75c:	test	byte ptr [rdi + 0x38], 0x20
0x42a760:	je	0x42a04f
0x42a766:	jmp	0x42b1c0
0x42a76b:	cmp	byte ptr [rbx - 1], 0xa
0x42a76f:	je	0x42a7b6
0x42a771:	jmp	0x42b1c0
0x42a776:	cmp	qword ptr [rbp - 0xb0], rbx
0x42a77d:	jne	0x42a793
0x42a77f:	mov	r8, qword ptr [rbp - 0x80]
0x42a783:	test	byte ptr [r8 + 0x38], 0x40
0x42a788:	je	0x42a04f
0x42a78e:	jmp	0x42b1c0
0x42a793:	test	rbx, rbx
0x42a796:	jne	0x42a7a6
0x42a798:	mov	r9, qword ptr [rbp - 0x50]
0x42a79c:	cmp	byte ptr [r9], 0xa
0x42a7a0:	sete	r10b
0x42a7a4:	jmp	0x42a7ad
0x42a7a6:	cmp	byte ptr [rbx], 0xa
0x42a7a9:	sete	r10b
0x42a7ad:	test	r10b, r10b
0x42a7b0:	je	0x42b1c0
0x42a7b6:	mov	rcx, qword ptr [rbp - 0x80]
0x42a7ba:	cmp	byte ptr [rcx + 0x38], 0
0x42a7be:	js	0x42a04f
0x42a7c4:	jmp	0x42b1c0
0x42a7c9:	cmp	rbx, qword ptr [rbp - 0x50]
0x42a7cd:	je	0x42a04f
0x42a7d3:	cmp	byte ptr [rbp - 0x8d], 0
0x42a7da:	jne	0x42a04f
0x42a7e0:	jmp	0x42b1c0
0x42a7e5:	cmp	qword ptr [rbp - 0xb0], rbx
0x42a7ec:	je	0x42a04f
0x42a7f2:	jmp	0x42b1c0
0x42a7f7:	movsx	r10d, byte ptr [r8 + 2]
0x42a7fc:	movzx	eax, byte ptr [r8 + 1]
0x42a801:	lea	rdx, [r8 + 3]
0x42a805:	mov	rsi, r15
0x42a808:	lea	r8, [r12 + 1]
0x42a80d:	mov	ecx, dword ptr [rbp - 0x8c]
0x42a813:	shl	r10d, 8
0x42a817:	sub	r8, r11
0x42a81a:	lea	r10d, [r10 + rax]
0x42a81e:	lea	rax, [r8 + r8*2]
0x42a822:	add	rax, 4
0x42a826:	mov	r15d, ecx
0x42a829:	sub	r15d, r14d
0x42a82c:	cmp	r15, rax
0x42a82f:	jae	0x42a8ae
0x42a831:	cmp	ecx, 0x128e0
0x42a837:	ja	0x429e17
0x42a83d:	lea	r15d, [rcx + rcx]
0x42a841:	mov	r8, rsp
0x42a844:	lea	rdi, [r15*8 + 0x17]
0x42a84c:	mov	r9, r15
0x42a84f:	shr	rdi, 4
0x42a853:	shl	rdi, 4
0x42a857:	mov	r15, rdi
0x42a85a:	and	r15, 0xfffffffffffff000
0x42a861:	sub	r8, r15
0x42a864:	cmp	rsp, r8
0x42a867:	je	0x42a87b
0x42a869:	sub	rsp, 0x1000
0x42a870:	or	qword ptr [rsp + 0xff8], 0
0x42a879:	jmp	0x42a864
0x42a87b:	and	edi, 0xfff
0x42a881:	sub	rsp, rdi
0x42a884:	test	rdi, rdi
0x42a887:	je	0x42a88f
0x42a889:	or	qword ptr [rsp + rdi - 8], 0
0x42a88f:	lea	r15, [rsp + 0xf]
0x42a894:	shl	rcx, 3
0x42a898:	and	r15, 0xfffffffffffffff0
0x42a89c:	mov	ecx, ecx
0x42a89e:	mov	rdi, r15
0x42a8a1:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42a8a3:	mov	rsi, r15
0x42a8a6:	mov	ecx, r9d
0x42a8a9:	jmp	0x42a826
0x42a8ae:	mov	dword ptr [rbp - 0x8c], ecx
0x42a8b4:	mov	r9, qword ptr [rbp - 0x78]
0x42a8b8:	mov	r15, rsi
0x42a8bb:	mov	rax, r11
0x42a8be:	lea	esi, [r14 + 1]
0x42a8c2:	mov	ecx, r14d
0x42a8c5:	lea	rdi, [r15 + rsi*8]
0x42a8c9:	lea	esi, [r14 + 2]
0x42a8cd:	lea	r8, [r15 + rcx*8]
0x42a8d1:	lea	rsi, [r15 + rsi*8]
0x42a8d5:	lea	ecx, [r14 + 3]
0x42a8d9:	cmp	r12, rax
0x42a8dc:	jb	0x42a900
0x42a8de:	mov	r14, qword ptr [r9 + rax*8]
0x42a8e2:	mov	qword ptr [r8], r14
0x42a8e5:	mov	r8, qword ptr [rbp - 0x70]
0x42a8e9:	mov	r14, qword ptr [r8 + rax*8]
0x42a8ed:	mov	qword ptr [rdi], r14
0x42a8f0:	mov	rdi, qword ptr [r13 + rax*8]
0x42a8f5:	mov	r14d, ecx
0x42a8f8:	inc	rax
0x42a8fb:	mov	qword ptr [rsi], rdi
0x42a8fe:	jmp	0x42a8be
0x42a900:	movsxd	r9, r10d
0x42a903:	mov	dword ptr [r8], r11d
0x42a906:	add	r14d, 4
0x42a90a:	add	r9, rdx
0x42a90d:	mov	dword ptr [rdi], r12d
0x42a910:	mov	qword ptr [rsi], r9
0x42a913:	mov	qword ptr [r15 + rcx*8], 0
0x42a91b:	jmp	0x42a04f
0x42a920:	jne	0x42a04f
0x42a926:	mov	word ptr [r8 + 3], 0
0x42a92d:	movsx	r10d, byte ptr [r8 + 2]
0x42a932:	movzx	edx, byte ptr [r8 + 1]
0x42a937:	shl	r10d, 8
0x42a93b:	lea	r10d, [r10 + rdx]
0x42a93f:	lea	rdx, [r8 + 3]
0x42a943:	mov	rsi, rdx
0x42a946:	mov	qword ptr [rbp - 0x38], rsi
0x42a94a:	cmp	qword ptr [rbp - 0x98], rsi
0x42a951:	jbe	0x42a981
0x42a953:	cmp	byte ptr [rsi], 0
0x42a956:	jne	0x42a95d
0x42a958:	inc	rsi
0x42a95b:	jmp	0x42a946
0x42a95d:	cmp	byte ptr [rsi], 6
0x42a960:	jne	0x42a981
0x42a962:	movzx	r12d, byte ptr [rsi + 1]
0x42a967:	movzx	eax, byte ptr [rsi + 2]
0x42a96b:	add	eax, r12d
0x42a96e:	mov	r9d, r12d
0x42a971:	movsxd	r12, eax
0x42a974:	cmp	r11, 0x101
0x42a97b:	jne	0x42a981
0x42a97d:	movzx	r11d, r9b
0x42a981:	lea	r8, [r12 + 1]
0x42a986:	mov	ecx, dword ptr [rbp - 0x8c]
0x42a98c:	mov	rsi, r15
0x42a98f:	sub	r8, r11
0x42a992:	lea	rax, [r8 + r8*2]
0x42a996:	add	rax, 4
0x42a99a:	mov	r15d, ecx
0x42a99d:	sub	r15d, r14d
0x42a9a0:	cmp	r15, rax
0x42a9a3:	jae	0x42aa22
0x42a9a5:	cmp	ecx, 0x128e0
0x42a9ab:	ja	0x429e17
0x42a9b1:	lea	r15d, [rcx + rcx]
0x42a9b5:	mov	r8, rsp
0x42a9b8:	lea	rdi, [r15*8 + 0x17]
0x42a9c0:	mov	r9, r15
0x42a9c3:	shr	rdi, 4
0x42a9c7:	shl	rdi, 4
0x42a9cb:	mov	r15, rdi
0x42a9ce:	and	r15, 0xfffffffffffff000
0x42a9d5:	sub	r8, r15
0x42a9d8:	cmp	rsp, r8
0x42a9db:	je	0x42a9ef
0x42a9dd:	sub	rsp, 0x1000
0x42a9e4:	or	qword ptr [rsp + 0xff8], 0
0x42a9ed:	jmp	0x42a9d8
0x42a9ef:	and	edi, 0xfff
0x42a9f5:	sub	rsp, rdi
0x42a9f8:	test	rdi, rdi
0x42a9fb:	je	0x42aa03
0x42a9fd:	or	qword ptr [rsp + rdi - 8], 0
0x42aa03:	lea	r15, [rsp + 0xf]
0x42aa08:	shl	rcx, 3
0x42aa0c:	and	r15, 0xfffffffffffffff0
0x42aa10:	mov	ecx, ecx
0x42aa12:	mov	rdi, r15
0x42aa15:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42aa17:	mov	rsi, r15
0x42aa1a:	mov	ecx, r9d
0x42aa1d:	jmp	0x42a99a
0x42aa22:	mov	dword ptr [rbp - 0x8c], ecx
0x42aa28:	mov	r9, qword ptr [rbp - 0x78]
0x42aa2c:	mov	r15, rsi
0x42aa2f:	mov	rax, r11
0x42aa32:	mov	edi, r14d
0x42aa35:	lea	esi, [r14 + 1]
0x42aa39:	lea	ecx, [r14 + 3]
0x42aa3d:	lea	r8, [r15 + rdi*8]
0x42aa41:	lea	rdi, [r15 + rsi*8]
0x42aa45:	lea	esi, [r14 + 2]
0x42aa49:	lea	rsi, [r15 + rsi*8]
0x42aa4d:	cmp	r12, rax
0x42aa50:	jb	0x42aa74
0x42aa52:	mov	r14, qword ptr [r9 + rax*8]
0x42aa56:	mov	qword ptr [r8], r14
0x42aa59:	mov	r8, qword ptr [rbp - 0x70]
0x42aa5d:	mov	r14, qword ptr [r8 + rax*8]
0x42aa61:	mov	qword ptr [rdi], r14
0x42aa64:	mov	rdi, qword ptr [r13 + rax*8]
0x42aa69:	mov	r14d, ecx
0x42aa6c:	inc	rax
0x42aa6f:	mov	qword ptr [rsi], rdi
0x42aa72:	jmp	0x42aa32
0x42aa74:	movsxd	r10, r10d
0x42aa77:	mov	dword ptr [r8], r11d
0x42aa7a:	add	r14d, 4
0x42aa7e:	add	r10, rdx
0x42aa81:	mov	dword ptr [rdi], r12d
0x42aa84:	mov	qword ptr [rsi], r10
0x42aa87:	mov	qword ptr [r15 + rcx*8], rbx
0x42aa8b:	jmp	0x42a04f
0x42aa90:	movsx	ecx, byte ptr [r8 + 2]
0x42aa95:	movzx	eax, byte ptr [r8 + 1]
0x42aa9a:	shl	ecx, 8
0x42aa9d:	add	ecx, eax
0x42aa9f:	lea	rax, [r8 + 3]
0x42aaa3:	mov	rdx, rax
0x42aaa6:	lea	r9, [rdx + 2]
0x42aaaa:	cmp	qword ptr [rbp - 0x98], r9
0x42aab1:	jbe	0x42aac9
0x42aab3:	mov	r10b, byte ptr [rdx]
0x42aab6:	lea	edi, [r10 - 6]
0x42aaba:	cmp	dil, 1
0x42aabe:	ja	0x42aac9
0x42aac0:	lea	rsi, [rdx + 3]
0x42aac4:	mov	rdx, rsi
0x42aac7:	jmp	0x42aaa6
0x42aac9:	lea	rsi, [rdx + 6]
0x42aacd:	cmp	qword ptr [rbp - 0x98], rsi
0x42aad4:	jbe	0x42aadb
0x42aad6:	cmp	byte ptr [rdx], 0x13
0x42aad9:	je	0x42aac4
0x42aadb:	movsxd	rcx, ecx
0x42aade:	add	rax, rcx
0x42aae1:	mov	qword ptr [rbp - 0x38], rax
0x42aae5:	cmp	qword ptr [rbp - 0x98], rdx
0x42aaec:	je	0x42ac48
0x42aaf2:	mov	r9b, byte ptr [rdx]
0x42aaf5:	cmp	r9b, 2
0x42aaf9:	je	0x42ab10
0x42aafb:	mov	r10, qword ptr [rbp - 0x80]
0x42aaff:	cmp	byte ptr [r10 + 0x38], 0
0x42ab04:	jns	0x42ab7e
0x42ab06:	cmp	r9b, 0xa
0x42ab0a:	jne	0x42ab7e
0x42ab0c:	mov	cl, 0xa
0x42ab0e:	jmp	0x42ab13
0x42ab10:	mov	cl, byte ptr [rdx + 2]
0x42ab13:	mov	dl, byte ptr [rax + 3]
0x42ab16:	cmp	dl, 2
0x42ab19:	jne	0x42ab29
0x42ab1b:	cmp	byte ptr [rax + 5], cl
0x42ab1e:	jne	0x42ac48
0x42ab24:	jmp	0x42ac4e
0x42ab29:	lea	r10d, [rdx - 4]
0x42ab2d:	cmp	r10b, 1
0x42ab31:	ja	0x42ac4e
0x42ab37:	movzx	edi, byte ptr [rax + 4]
0x42ab3b:	movzx	r9d, cl
0x42ab3f:	shl	edi, 3
0x42ab42:	cmp	r9d, edi
0x42ab45:	jae	0x42ab70
0x42ab47:	mov	esi, ecx
0x42ab49:	and	ecx, 7
0x42ab4c:	shr	sil, 3
0x42ab50:	add	esi, 5
0x42ab53:	movzx	r10d, sil
0x42ab57:	movzx	eax, byte ptr [rax + r10]
0x42ab5c:	sar	eax, cl
0x42ab5e:	test	al, 1
0x42ab60:	je	0x42ab70
0x42ab62:	cmp	dl, 5
0x42ab65:	je	0x42ac48
0x42ab6b:	jmp	0x42ac4e
0x42ab70:	cmp	dl, 5
0x42ab73:	je	0x42ac4e
0x42ab79:	jmp	0x42ac48
0x42ab7e:	cmp	r9b, 4
0x42ab82:	jne	0x42ac4e
0x42ab88:	mov	dil, byte ptr [rax + 3]
0x42ab8c:	cmp	dil, 2
0x42ab90:	jne	0x42abc8
0x42ab92:	movzx	edi, byte ptr [rax + 5]
0x42ab96:	movzx	eax, byte ptr [rdx + 1]
0x42ab9a:	shl	eax, 3
0x42ab9d:	mov	ecx, edi
0x42ab9f:	cmp	eax, edi
0x42aba1:	jle	0x42ac48
0x42aba7:	mov	eax, edi
0x42aba9:	and	ecx, 7
0x42abac:	shr	al, 3
0x42abaf:	add	eax, 2
0x42abb2:	movzx	esi, al
0x42abb5:	movzx	eax, byte ptr [rdx + rsi]
0x42abb9:	sar	eax, cl
0x42abbb:	test	al, 1
0x42abbd:	jne	0x42ac4e
0x42abc3:	jmp	0x42ac48
0x42abc8:	cmp	dil, 5
0x42abcc:	jne	0x42ac08
0x42abce:	movzx	edi, byte ptr [rdx + 1]
0x42abd2:	xor	ecx, ecx
0x42abd4:	mov	r9d, ecx
0x42abd7:	cmp	ecx, edi
0x42abd9:	jge	0x42ac02
0x42abdb:	movzx	esi, byte ptr [rdx + rcx + 2]
0x42abe0:	test	sil, sil
0x42abe3:	je	0x42abfd
0x42abe5:	movzx	r10d, byte ptr [rax + 4]
0x42abea:	cmp	r9d, r10d
0x42abed:	jge	0x42ac4e
0x42abef:	movzx	r9d, byte ptr [rax + rcx + 5]
0x42abf5:	not	r9d
0x42abf8:	test	r9d, esi
0x42abfb:	jne	0x42ac4e
0x42abfd:	inc	rcx
0x42ac00:	jmp	0x42abd4
0x42ac02:	cmp	ecx, edi
0x42ac04:	je	0x42ac48
0x42ac06:	jmp	0x42ac4e
0x42ac08:	cmp	dil, 4
0x42ac0c:	jne	0x42ac4e
0x42ac0e:	movzx	ecx, byte ptr [rdx + 1]
0x42ac12:	xor	r10d, r10d
0x42ac15:	mov	esi, r10d
0x42ac18:	cmp	ecx, r10d
0x42ac1b:	jle	0x42ac3b
0x42ac1d:	movzx	r9d, byte ptr [rax + 4]
0x42ac22:	cmp	r9d, r10d
0x42ac25:	jle	0x42ac40
0x42ac27:	mov	dil, byte ptr [rdx + r10 + 2]
0x42ac2c:	and	dil, byte ptr [rax + r10 + 5]
0x42ac31:	inc	r10
0x42ac34:	test	dil, dil
0x42ac37:	je	0x42ac15
0x42ac39:	jmp	0x42ac4e
0x42ac3b:	cmp	r10d, ecx
0x42ac3e:	je	0x42ac48
0x42ac40:	movzx	edx, byte ptr [rax + 4]
0x42ac44:	cmp	esi, edx
0x42ac46:	jne	0x42ac4e
0x42ac48:	mov	byte ptr [r8], 0x11
0x42ac4c:	jmp	0x42ac5a
0x42ac4e:	cmp	byte ptr [r8], 0x11
0x42ac52:	je	0x42ac5a
0x42ac54:	mov	byte ptr [r8], 0xd
0x42ac58:	jmp	0x42acaa
0x42ac5a:	lea	edx, [r14 - 3]
0x42ac5e:	lea	r9d, [r14 - 4]
0x42ac62:	movsxd	rax, dword ptr [r15 + rdx*8]
0x42ac66:	movsxd	rcx, dword ptr [r15 + r9*8]
0x42ac6a:	mov	r14, r9
0x42ac6d:	lea	r10d, [r14 - 3]
0x42ac71:	cmp	rcx, rax
0x42ac74:	ja	0x42aca3
0x42ac76:	lea	r14d, [r14 - 1]
0x42ac7a:	mov	edx, r10d
0x42ac7d:	mov	rdi, qword ptr [rbp - 0x110]
0x42ac84:	mov	rsi, qword ptr [r15 + r14*8]
0x42ac88:	mov	r9, qword ptr [r15 + rdx*8]
0x42ac8c:	mov	r14, qword ptr [rbp - 0x118]
0x42ac93:	mov	qword ptr [rdi + rax*8], rsi
0x42ac97:	mov	qword ptr [r14 + rax*8], r9
0x42ac9b:	dec	rax
0x42ac9e:	mov	r14d, r10d
0x42aca1:	jmp	0x42ac6d
0x42aca3:	mov	dword ptr [rbp - 0x68], 0
0x42acaa:	movsx	eax, byte ptr [r8 + 2]
0x42acaf:	movzx	edx, byte ptr [r8 + 1]
0x42acb4:	shl	eax, 8
0x42acb7:	add	eax, edx
0x42acb9:	cdqe	
0x42acbb:	lea	rdx, [r8 + rax + 3]
0x42acc0:	jmp	0x42a04f
0x42acc5:	and	r10d, 0xfff
0x42accc:	sub	rsp, r10
0x42accf:	test	r10, r10
0x42acd2:	je	0x42acda
0x42acd4:	or	qword ptr [rsp + r10 - 8], 0
0x42acda:	lea	r10, [rsp + 0xf]
0x42acdf:	mov	edx, edx
0x42ace1:	mov	rsi, r15
0x42ace4:	and	r10, 0xfffffffffffffff0
0x42ace8:	shl	rdx, 3
0x42acec:	mov	ecx, edx
0x42acee:	mov	rdi, r10
0x42acf1:	mov	r15, r10
0x42acf4:	mov	edx, r9d
0x42acf7:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42acf9:	mov	r10d, edx
0x42acfc:	sub	r10d, r14d
0x42acff:	cmp	r10, rax
0x42ad02:	jae	0x42ad4d
0x42ad04:	cmp	edx, 0x128e0
0x42ad0a:	ja	0x429e17
0x42ad10:	lea	ecx, [rdx + rdx]
0x42ad13:	mov	rsi, rsp
0x42ad16:	lea	r10, [rcx*8 + 0x17]
0x42ad1e:	mov	r9, rcx
0x42ad21:	shr	r10, 4
0x42ad25:	shl	r10, 4
0x42ad29:	mov	rdi, r10
0x42ad2c:	and	rdi, 0xfffffffffffff000
0x42ad33:	sub	rsi, rdi
0x42ad36:	cmp	rsp, rsi
0x42ad39:	je	0x42acc5
0x42ad3b:	sub	rsp, 0x1000
0x42ad42:	or	qword ptr [rsp + 0xff8], 0
0x42ad4b:	jmp	0x42ad36
0x42ad4d:	mov	dword ptr [rbp - 0x8c], edx
0x42ad53:	mov	r9, qword ptr [rbp - 0x70]
0x42ad57:	mov	rax, r11
0x42ad5a:	mov	r10, qword ptr [rbp - 0x78]
0x42ad5e:	mov	edi, r14d
0x42ad61:	lea	esi, [r14 + 1]
0x42ad65:	lea	ecx, [r14 + 2]
0x42ad69:	lea	rdi, [r15 + rdi*8]
0x42ad6d:	lea	rsi, [r15 + rsi*8]
0x42ad71:	lea	edx, [r14 + 3]
0x42ad75:	lea	rcx, [r15 + rcx*8]
0x42ad79:	cmp	r12, rax
0x42ad7c:	jb	0x42ad9c
0x42ad7e:	mov	r14, qword ptr [r10 + rax*8]
0x42ad82:	mov	qword ptr [rdi], r14
0x42ad85:	mov	rdi, qword ptr [r9 + rax*8]
0x42ad89:	mov	r14d, edx
0x42ad8c:	mov	qword ptr [rsi], rdi
0x42ad8f:	mov	rsi, qword ptr [r13 + rax*8]
0x42ad94:	inc	rax
0x42ad97:	mov	qword ptr [rcx], rsi
0x42ad9a:	jmp	0x42ad5e
0x42ad9c:	mov	dword ptr [rdi], r11d
0x42ad9f:	add	r14d, 4
0x42ada3:	mov	dword ptr [rsi], r12d
0x42ada6:	mov	qword ptr [rcx], 0
0x42adad:	mov	qword ptr [r15 + rdx*8], 0
0x42adb5:	jmp	0x42acaa
0x42adba:	and	r8d, 0xfff
0x42adc1:	sub	rsp, r8
0x42adc4:	test	r8, r8
0x42adc7:	je	0x42adcf
0x42adc9:	or	qword ptr [rsp + r8 - 8], 0
0x42adcf:	lea	r8, [rsp + 0xf]
0x42add4:	shl	rcx, 3
0x42add8:	mov	rsi, r15
0x42addb:	and	r8, 0xfffffffffffffff0
0x42addf:	mov	ecx, ecx
0x42ade1:	mov	rdi, r8
0x42ade4:	mov	r15, r8
0x42ade7:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42ade9:	mov	ecx, r10d
0x42adec:	mov	r9d, ecx
0x42adef:	sub	r9d, r14d
0x42adf2:	cmp	r9, rax
0x42adf5:	jae	0x42ae40
0x42adf7:	cmp	ecx, 0x128e0
0x42adfd:	ja	0x429e17
0x42ae03:	lea	esi, [rcx + rcx]
0x42ae06:	mov	rdi, rsp
0x42ae09:	lea	r8, [rsi*8 + 0x17]
0x42ae11:	mov	r10, rsi
0x42ae14:	shr	r8, 4
0x42ae18:	shl	r8, 4
0x42ae1c:	mov	r9, r8
0x42ae1f:	and	r9, 0xfffffffffffff000
0x42ae26:	sub	rdi, r9
0x42ae29:	cmp	rsp, rdi
0x42ae2c:	je	0x42adba
0x42ae2e:	sub	rsp, 0x1000
0x42ae35:	or	qword ptr [rsp + 0xff8], 0
0x42ae3e:	jmp	0x42ae29
0x42ae40:	mov	dword ptr [rbp - 0x8c], ecx
0x42ae46:	mov	r9, qword ptr [rbp - 0x70]
0x42ae4a:	mov	rax, r11
0x42ae4d:	mov	r10, qword ptr [rbp - 0x78]
0x42ae51:	lea	esi, [r14 + 1]
0x42ae55:	mov	ecx, r14d
0x42ae58:	lea	rdi, [r15 + rsi*8]
0x42ae5c:	lea	esi, [r14 + 2]
0x42ae60:	lea	r8, [r15 + rcx*8]
0x42ae64:	lea	rsi, [r15 + rsi*8]
0x42ae68:	lea	ecx, [r14 + 3]
0x42ae6c:	cmp	r12, rax
0x42ae6f:	jb	0x42ae8f
0x42ae71:	mov	r14, qword ptr [r10 + rax*8]
0x42ae75:	mov	qword ptr [r8], r14
0x42ae78:	mov	r8, qword ptr [r9 + rax*8]
0x42ae7c:	mov	r14d, ecx
0x42ae7f:	mov	qword ptr [rdi], r8
0x42ae82:	mov	rdi, qword ptr [r13 + rax*8]
0x42ae87:	inc	rax
0x42ae8a:	mov	qword ptr [rsi], rdi
0x42ae8d:	jmp	0x42ae51
0x42ae8f:	mov	dword ptr [r8], r11d
0x42ae92:	add	r14d, 4
0x42ae96:	mov	dword ptr [rdi], r12d
0x42ae99:	mov	qword ptr [rsi], 0
0x42aea0:	mov	qword ptr [r15 + rcx*8], 0
0x42aea8:	jmp	0x42a04f
0x42aead:	movsx	edi, byte ptr [r8 + 4]
0x42aeb2:	movzx	eax, byte ptr [r8 + 3]
0x42aeb7:	shl	edi, 8
0x42aeba:	add	edi, eax
0x42aebc:	test	edi, edi
0x42aebe:	jle	0x42a920
0x42aec4:	dec	edi
0x42aec6:	lea	rdx, [r8 + 5]
0x42aeca:	mov	word ptr [r8 + 3], di
0x42aecf:	jmp	0x42a04f
0x42aed4:	movsx	r10d, byte ptr [r8 + 4]
0x42aed9:	movzx	esi, byte ptr [r8 + 3]
0x42aede:	lea	rdx, [r8 + 5]
0x42aee2:	shl	r10d, 8
0x42aee6:	add	r10d, esi
0x42aee9:	je	0x42a04f
0x42aeef:	dec	r10d
0x42aef2:	mov	word ptr [r8 + 3], r10w
0x42aef7:	jmp	0x42acaa
0x42aefc:	movsx	eax, byte ptr [r8 + 2]
0x42af01:	movzx	edx, byte ptr [r8 + 1]
0x42af06:	shl	eax, 8
0x42af09:	add	eax, edx
0x42af0b:	lea	rdx, [r8 + 5]
0x42af0f:	cdqe	
0x42af11:	lea	rdi, [r8 + rax + 3]
0x42af16:	mov	qword ptr [rbp - 0x38], rdi
0x42af1a:	movsx	eax, byte ptr [r8 + 4]
0x42af1f:	movzx	r9d, byte ptr [r8 + 3]
0x42af24:	shl	eax, 8
0x42af27:	add	eax, r9d
0x42af2a:	mov	byte ptr [rdi], al
0x42af2c:	mov	rcx, qword ptr [rbp - 0x38]
0x42af30:	mov	byte ptr [rcx + 1], ah
0x42af33:	jmp	0x42a04f
0x42af38:	cmp	rbx, qword ptr [rbp - 0x50]
0x42af3c:	je	0x42a04f
0x42af42:	cmp	qword ptr [rbp - 0xb0], rbx
0x42af49:	je	0x42a04f
0x42af4f:	cmp	byte ptr [rbp - 0x8d], 0
0x42af56:	jne	0x42a04f
0x42af5c:	movzx	eax, byte ptr [rbx - 1]
0x42af60:	mov	r10, qword ptr [rbp - 0x50]
0x42af64:	cmp	byte ptr [rax + 0x4e63c0], 1
0x42af6b:	sete	r8b
0x42af6f:	dec	r10
0x42af72:	cmp	rbx, r10
0x42af75:	je	0x42b154
0x42af7b:	movzx	esi, byte ptr [rbx]
0x42af7e:	cmp	byte ptr [rsi + 0x4e63c0], 1
0x42af85:	sete	dil
0x42af89:	cmp	r8b, dil
0x42af8c:	jne	0x42a04f
0x42af92:	jmp	0x42b1c0
0x42af97:	cmp	rbx, qword ptr [rbp - 0x50]
0x42af9b:	je	0x42b1c0
0x42afa1:	cmp	qword ptr [rbp - 0xb0], rbx
0x42afa8:	je	0x42b1c0
0x42afae:	cmp	byte ptr [rbp - 0x8d], 0
0x42afb5:	jne	0x42b1c0
0x42afbb:	movzx	edi, byte ptr [rbx - 1]
0x42afbf:	mov	rax, qword ptr [rbp - 0x50]
0x42afc3:	cmp	byte ptr [rdi + 0x4e63c0], 1
0x42afca:	sete	r10b
0x42afce:	dec	rax
0x42afd1:	cmp	rbx, rax
0x42afd4:	je	0x42b154
0x42afda:	movzx	esi, byte ptr [rbx]
0x42afdd:	cmp	byte ptr [rsi + 0x4e63c0], 1
0x42afe4:	sete	r9b
0x42afe8:	cmp	r10b, r9b
0x42afeb:	je	0x42a04f
0x42aff1:	jmp	0x42b1c0
0x42aff6:	cmp	qword ptr [rbp - 0xb0], rbx
0x42affd:	je	0x42b1c0
0x42b003:	mov	r8, qword ptr [rbp - 0x50]
0x42b007:	test	rbx, rbx
0x42b00a:	jne	0x42b012
0x42b00c:	movzx	r10d, byte ptr [r8]
0x42b010:	jmp	0x42b022
0x42b012:	dec	r8
0x42b015:	cmp	rbx, r8
0x42b018:	je	0x42b154
0x42b01e:	movzx	r10d, byte ptr [rbx]
0x42b022:	cmp	byte ptr [r10 + 0x4e63c0], 1
0x42b02a:	jne	0x42b1c0
0x42b030:	cmp	rbx, qword ptr [rbp - 0x50]
0x42b034:	je	0x42a04f
0x42b03a:	cmp	byte ptr [rbp - 0x8d], 0
0x42b041:	jne	0x42a04f
0x42b047:	movzx	esi, byte ptr [rbx - 1]
0x42b04b:	cmp	byte ptr [rsi + 0x4e63c0], 1
0x42b052:	jne	0x42a04f
0x42b058:	jmp	0x42b1c0
0x42b05d:	cmp	dword ptr [rbp - 0xd8], 0
0x42b064:	je	0x42b1c0
0x42b06a:	cmp	rbx, qword ptr [rbp - 0x50]
0x42b06e:	je	0x42b1c0
0x42b074:	movzx	r9d, byte ptr [rbx - 1]
0x42b079:	cmp	byte ptr [r9 + 0x4e63c0], 1
0x42b081:	jne	0x42b1c0
0x42b087:	cmp	qword ptr [rbp - 0xb0], rbx
0x42b08e:	je	0x42a04f
0x42b094:	mov	rcx, qword ptr [rbp - 0x50]
0x42b098:	dec	rcx
0x42b09b:	cmp	rbx, rcx
0x42b09e:	je	0x42b154
0x42b0a4:	movzx	eax, byte ptr [rbx]
0x42b0a7:	cmp	byte ptr [rax + 0x4e63c0], 1
0x42b0ae:	jne	0x42a04f
0x42b0b4:	jmp	0x42b1c0
0x42b0b9:	mov	rdi, qword ptr [rbp - 0x48]
0x42b0bd:	cmp	rdi, rbx
0x42b0c0:	jne	0x42b0d6
0x42b0c2:	cmp	qword ptr [rbp - 0x58], rdi
0x42b0c6:	je	0x42b1bc
0x42b0cc:	mov	rdi, qword ptr [rbp - 0x58]
0x42b0d0:	mov	rbx, qword ptr [rbp - 0x50]
0x42b0d4:	jmp	0x42b0bd
0x42b0d6:	mov	qword ptr [rbp - 0x48], rdi
0x42b0da:	mov	r8, qword ptr [rbp - 0x50]
0x42b0de:	test	rbx, rbx
0x42b0e1:	jne	0x42b0e9
0x42b0e3:	movzx	r10d, byte ptr [r8]
0x42b0e7:	jmp	0x42b0f5
0x42b0e9:	dec	r8
0x42b0ec:	cmp	rbx, r8
0x42b0ef:	je	0x42b154
0x42b0f1:	movzx	r10d, byte ptr [rbx]
0x42b0f5:	cmp	byte ptr [r10 + 0x4e63c0], 1
0x42b0fd:	jne	0x42b1c0
0x42b103:	cmp	dword ptr [rbp - 0x68], 0
0x42b107:	jne	0x42b16f
0x42b109:	mov	rsi, r11
0x42b10c:	cmp	r12, rsi
0x42b10f:	jb	0x42b16f
0x42b111:	or	byte ptr [r13 + rsi*8], 0x18
0x42b117:	inc	rsi
0x42b11a:	jmp	0x42b10c
0x42b11c:	mov	rdi, qword ptr [rbp - 0x48]
0x42b120:	cmp	rdi, rbx
0x42b123:	jne	0x42b139
0x42b125:	cmp	qword ptr [rbp - 0x58], rdi
0x42b129:	je	0x42b1bc
0x42b12f:	mov	rdi, qword ptr [rbp - 0x58]
0x42b133:	mov	rbx, qword ptr [rbp - 0x50]
0x42b137:	jmp	0x42b120
0x42b139:	mov	qword ptr [rbp - 0x48], rdi
0x42b13d:	mov	r9, qword ptr [rbp - 0x50]
0x42b141:	test	rbx, rbx
0x42b144:	jne	0x42b14c
0x42b146:	movzx	ecx, byte ptr [r9]
0x42b14a:	jmp	0x42b160
0x42b14c:	dec	r9
0x42b14f:	cmp	rbx, r9
0x42b152:	jne	0x42b15d
0x42b154:	mov	al, byte ptr [0xffffffffffffffff]
0x42b15b:	ud2	
0x42b15d:	movzx	ecx, byte ptr [rbx]
0x42b160:	cmp	byte ptr [rcx + 0x4e63c0], 1
0x42b167:	je	0x42b1c0
0x42b169:	cmp	dword ptr [rbp - 0x68], 0
0x42b16d:	je	0x42b17e
0x42b16f:	inc	rbx
0x42b172:	mov	dword ptr [rbp - 0x68], 1
0x42b179:	jmp	0x42a04f
0x42b17e:	mov	rax, r11
0x42b181:	cmp	r12, rax
0x42b184:	jb	0x42b16f
0x42b186:	or	byte ptr [r13 + rax*8], 0x18
0x42b18c:	inc	rax
0x42b18f:	jmp	0x42b181
0x42b191:	call	0x403880
0x42b196:	mov	qword ptr [rbp - 0x48], rdi
0x42b19a:	jmp	0x42b1c0
0x42b19c:	mov	r13, r14
0x42b19f:	mov	qword ptr [rbp - 0x48], rdi
0x42b1a3:	mov	rbx, r12
0x42b1a6:	mov	r14d, r9d
0x42b1a9:	mov	r15, r10
0x42b1ac:	jmp	0x42b1c0
0x42b1ae:	mov	r13, r14
0x42b1b1:	mov	rbx, r12
0x42b1b4:	mov	r14d, r9d
0x42b1b7:	mov	r15, r10
0x42b1ba:	jmp	0x42b1c0
0x42b1bc:	mov	qword ptr [rbp - 0x48], rdi
0x42b1c0:	test	r14d, r14d
0x42b1c3:	je	0x42b2bc
0x42b1c9:	lea	edx, [r14 - 1]
0x42b1cd:	lea	r12d, [r14 - 2]
0x42b1d1:	mov	rdi, qword ptr [r15 + rdx*8]
0x42b1d5:	lea	r8d, [r14 - 3]
0x42b1d9:	lea	r10d, [r14 - 4]
0x42b1dd:	mov	rdx, qword ptr [r15 + r12*8]
0x42b1e1:	movsxd	r12, dword ptr [r15 + r8*8]
0x42b1e5:	movsxd	r11, dword ptr [r15 + r10*8]
0x42b1e9:	mov	r14, r10
0x42b1ec:	test	rdi, rdi
0x42b1ef:	cmovne	rbx, rdi
0x42b1f3:	mov	rcx, r12
0x42b1f6:	lea	r9d, [r14 - 3]
0x42b1fa:	cmp	r11, rcx
0x42b1fd:	ja	0x42b233
0x42b1ff:	lea	esi, [r14 - 1]
0x42b203:	mov	r10d, r9d
0x42b206:	lea	r14d, [r14 - 2]
0x42b20a:	mov	rdi, qword ptr [rbp - 0x70]
0x42b20e:	mov	rax, qword ptr [r15 + rsi*8]
0x42b212:	mov	r8, qword ptr [r15 + r14*8]
0x42b216:	mov	r14d, r9d
0x42b219:	mov	rsi, qword ptr [r15 + r10*8]
0x42b21d:	mov	qword ptr [r13 + rcx*8], rax
0x42b222:	mov	rax, qword ptr [rbp - 0x78]
0x42b226:	mov	qword ptr [rdi + rcx*8], r8
0x42b22a:	mov	qword ptr [rax + rcx*8], rsi
0x42b22e:	dec	rcx
0x42b231:	jmp	0x42b1f6
0x42b233:	test	rdx, rdx
0x42b236:	je	0x42b1c0
0x42b238:	cmp	qword ptr [rbp - 0x98], rdx
0x42b23f:	jbe	0x42b29d
0x42b241:	mov	sil, byte ptr [rdx]
0x42b244:	cmp	sil, 0x12
0x42b248:	ja	0x42b258
0x42b24a:	cmp	sil, 0x10
0x42b24e:	ja	0x42b262
0x42b250:	cmp	sil, 0xd
0x42b254:	je	0x42b262
0x42b256:	jmp	0x42b29d
0x42b258:	cmp	sil, 0x16
0x42b25c:	jne	0x42b29d
0x42b25e:	mov	cl, 1
0x42b260:	jmp	0x42b264
0x42b262:	xor	ecx, ecx
0x42b264:	lea	rax, [rdx + 1]
0x42b268:	mov	qword ptr [rbp - 0x38], rax
0x42b26c:	movsx	eax, byte ptr [rdx + 2]
0x42b270:	movzx	edi, byte ptr [rdx + 1]
0x42b274:	shl	eax, 8
0x42b277:	add	eax, edi
0x42b279:	cdqe	
0x42b27b:	lea	r8, [rdx + rax + 3]
0x42b280:	mov	qword ptr [rbp - 0x38], r8
0x42b284:	test	cl, cl
0x42b286:	je	0x42b293
0x42b288:	cmp	byte ptr [r8], 0x15
0x42b28c:	jne	0x42b29d
0x42b28e:	jmp	0x42b1c0
0x42b293:	cmp	byte ptr [r8], 0xf
0x42b297:	je	0x42b1c0
0x42b29d:	mov	r10, qword ptr [rbp - 0x48]
0x42b2a1:	test	rbx, rbx
0x42b2a4:	cmove	r10, qword ptr [rbp - 0xb8]
0x42b2ac:	mov	qword ptr [rbp - 0x48], r10
0x42b2b0:	mov	dword ptr [rbp - 0x68], 0
0x42b2b7:	jmp	0x42a04f
0x42b2bc:	cmp	dword ptr [rbp - 0xd4], 0
0x42b2c3:	jne	0x429d31
0x42b2c9:	jmp	0x429b5a
0x42b2ce:	lea	rsp, [rbp - 0x28]
0x42b2d2:	pop	rbx
0x42b2d3:	pop	r12
0x42b2d5:	pop	r13
0x42b2d7:	pop	r14
0x42b2d9:	pop	r15
0x42b2db:	pop	rbp
0x42b2dc:	ret	
0x42b2dd:	endbr64	
0x42b2e1:	or	byte ptr [rdi + 0x50], 1
0x42b2e5:	movq	xmm0, rcx
0x42b2ea:	movq	xmm1, r8
0x42b2ef:	mov	qword ptr [rdi + 0x48], r9
0x42b2f3:	punpcklqdq	xmm0, xmm1
0x42b2f7:	movups	xmmword ptr [rdi + 0x38], xmm0
0x42b2fb:	jmp	0x42d720
0x42b300:	endbr64	
0x42b304:	mov	rdx, qword ptr [rdi + 8]
0x42b308:	test	rdx, rdx
0x42b30b:	je	0x42b31d
0x42b30d:	cmp	rdx, rsi
0x42b310:	jb	0x42b318
0x42b312:	mov	rdx, qword ptr [rdx + 8]
0x42b316:	jmp	0x42b308
0x42b318:	cmp	qword ptr [rdx], rsi
0x42b31b:	jb	0x42b312
0x42b31d:	test	rdx, rdx
0x42b320:	setne	al
0x42b323:	movzx	eax, al
0x42b326:	ret	
0x42b327:	endbr64	
0x42b32b:	mov	rax, qword ptr [rdi + 8]
0x42b32f:	xor	r8d, r8d
0x42b332:	test	rax, rax
0x42b335:	je	0x42b346
0x42b337:	mov	rdx, qword ptr [rax]
0x42b33a:	sub	rdx, rax
0x42b33d:	mov	rax, qword ptr [rax + 8]
0x42b341:	add	r8, rdx
0x42b344:	jmp	0x42b332
0x42b346:	mov	rax, r8
0x42b349:	ret	
0x42b34a:	endbr64	
0x42b34e:	push	r15
0x42b350:	mov	r15d, 1
0x42b356:	push	r14
0x42b358:	push	r13
0x42b35a:	push	r12
0x42b35c:	mov	r12d, esi
0x42b35f:	push	rbp
0x42b360:	push	rbx
0x42b361:	sub	rsp, 0x18
0x42b365:	movsxd	rsi, dword ptr [rdi + 0x30]
0x42b369:	cmp	dword ptr [rdi + 0x50], esi
0x42b36c:	je	0x42b417
0x42b372:	mov	rbx, rdi
0x42b375:	mov	rdi, qword ptr [rdi + 0x40]
0x42b379:	shl	rsi, 2
0x42b37d:	mov	r13, rdx
0x42b380:	mov	r14, rcx
0x42b383:	call	0x42db80
0x42b388:	mov	qword ptr [rbx + 0x40], rax
0x42b38c:	test	byte ptr [rbx], 1
0x42b38f:	je	0x42b3a6
0x42b391:	movsxd	rsi, dword ptr [rbx + 0x30]
0x42b395:	mov	rdi, qword ptr [rbx + 0x48]
0x42b399:	shl	rsi, 5
0x42b39d:	call	0x42db80
0x42b3a2:	mov	qword ptr [rbx + 0x48], rax
0x42b3a6:	movsxd	rbp, dword ptr [rbx + 0x50]
0x42b3aa:	mov	r15d, 1
0x42b3b0:	mov	r11, rbp
0x42b3b3:	shl	rbp, 2
0x42b3b7:	cmp	dword ptr [rbx + 0x30], r11d
0x42b3bb:	jle	0x42b413
0x42b3bd:	mov	rax, qword ptr [rbx + 0x80]
0x42b3c4:	mov	rcx, qword ptr [rbx + 0x48]
0x42b3c8:	mov	rax, qword ptr [rax + 0x20]
0x42b3cc:	test	rcx, rcx
0x42b3cf:	je	0x42b3d5
0x42b3d1:	lea	rcx, [rcx + rbp*8]
0x42b3d5:	mov	rdx, qword ptr [rbx + 0x40]
0x42b3d9:	mov	rsi, qword ptr [rbx + 0x38]
0x42b3dd:	mov	dword ptr [rsp + 0xc], r11d
0x42b3e2:	mov	r9, r13
0x42b3e5:	mov	r8d, r12d
0x42b3e8:	mov	esi, dword ptr [rsi + rbp]
0x42b3eb:	add	rdx, rbp
0x42b3ee:	push	rdi
0x42b3ef:	mov	rdi, rbx
0x42b3f2:	push	r14
0x42b3f4:	call	rax
0x42b3f6:	pop	r8
0x42b3f8:	pop	r9
0x42b3fa:	mov	edx, 0
0x42b3ff:	mov	r11d, dword ptr [rsp + 0xc]
0x42b404:	test	eax, eax
0x42b406:	cmovs	r15d, edx
0x42b40a:	add	rbp, 4
0x42b40e:	inc	r11d
0x42b411:	jmp	0x42b3b7
0x42b413:	mov	dword ptr [rbx + 0x50], r11d
0x42b417:	add	rsp, 0x18
0x42b41b:	mov	eax, r15d
0x42b41e:	pop	rbx
0x42b41f:	pop	rbp
0x42b420:	pop	r12
0x42b422:	pop	r13
0x42b424:	pop	r14
0x42b426:	pop	r15
0x42b428:	ret	
0x42b429:	endbr64	
0x42b42d:	push	r12
0x42b42f:	mov	r12, rdx
0x42b432:	push	rbp
0x42b433:	mov	rbp, rdi
0x42b436:	push	rbx
0x42b437:	mov	ebx, esi
0x42b439:	sub	rsp, 0x10
0x42b43d:	cmp	qword ptr [rdi + 0x40], 0
0x42b442:	jne	0x42b459
0x42b444:	xor	esi, esi
0x42b446:	lea	rcx, [rsp + 4]
0x42b44b:	lea	rdx, [rsp + 8]
0x42b450:	call	0x42b34a
0x42b455:	test	eax, eax
0x42b457:	je	0x42b48a
0x42b459:	movsxd	rax, dword ptr [rbp + 0x30]
0x42b45d:	cmp	eax, ebx
0x42b45f:	jge	0x42b475
0x42b461:	sub	ebx, eax
0x42b463:	lea	rdi, [r12 + rax*4]
0x42b467:	xor	eax, eax
0x42b469:	movsxd	rcx, ebx
0x42b46c:	shl	rcx, 2
0x42b470:	rep stosb	byte ptr [rdi], al
0x42b472:	mov	ebx, dword ptr [rbp + 0x30]
0x42b475:	movsxd	rcx, ebx
0x42b478:	mov	rsi, qword ptr [rbp + 0x40]
0x42b47c:	mov	rdi, r12
0x42b47f:	mov	eax, 1
0x42b484:	shl	rcx, 2
0x42b488:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42b48a:	add	rsp, 0x10
0x42b48e:	pop	rbx
0x42b48f:	pop	rbp
0x42b490:	pop	r12
0x42b492:	ret	
0x42b493:	endbr64	
0x42b497:	push	rbp
0x42b498:	mov	rbp, rdi
0x42b49b:	push	rbx
0x42b49c:	sub	rsp, 0x18
0x42b4a0:	mov	esi, dword ptr [rdi + 0x18]
0x42b4a3:	test	esi, esi
0x42b4a5:	jle	0x42b4b1
0x42b4a7:	mov	rax, qword ptr [rdi + 0x80]
0x42b4ae:	call	qword ptr [rax + 0x18]
0x42b4b1:	mov	esi, dword ptr [rbp + 0x2c]
0x42b4b4:	test	esi, esi
0x42b4b6:	jle	0x42b4c5
0x42b4b8:	mov	rbx, qword ptr [rbp + 0x80]
0x42b4bf:	mov	rdi, rbp
0x42b4c2:	call	qword ptr [rbx + 0x18]
0x42b4c5:	mov	rdi, qword ptr [rbp + 0x60]
0x42b4c9:	test	rdi, rdi
0x42b4cc:	je	0x42b4d3
0x42b4ce:	call	0x4039c0
0x42b4d3:	mov	rdi, qword ptr [rbp + 0x68]
0x42b4d7:	test	rdi, rdi
0x42b4da:	je	0x42b4e1
0x42b4dc:	call	0x4039c0
0x42b4e1:	cmp	qword ptr [rbp + 0x40], 0
0x42b4e6:	jne	0x42b503
0x42b4e8:	and	dword ptr [rbp], 0xfffffffe
0x42b4ec:	lea	rcx, [rsp + 4]
0x42b4f1:	lea	rdx, [rsp + 8]
0x42b4f6:	mov	rdi, rbp
0x42b4f9:	mov	esi, 1
0x42b4fe:	call	0x42b34a
0x42b503:	cmp	dword ptr [rbp + 0x28], 0
0x42b507:	je	0x42b512
0x42b509:	mov	rdi, qword ptr [rbp + 0x20]
0x42b50d:	call	0x403830
0x42b512:	mov	rdi, qword ptr [rbp + 0x38]
0x42b516:	call	0x403830
0x42b51b:	mov	rdi, qword ptr [rbp + 0x40]
0x42b51f:	call	0x403830
0x42b524:	mov	rdi, qword ptr [rbp + 0x48]
0x42b528:	call	0x403830
0x42b52d:	cmp	dword ptr [rbp + 0x70], 0
0x42b531:	jle	0x42b560
0x42b533:	xor	ebx, ebx
0x42b535:	mov	rdx, qword ptr [rbp + 0x78]
0x42b539:	mov	rdi, qword ptr [rdx + rbx*8]
0x42b53d:	call	0x4038c0
0x42b542:	mov	rcx, qword ptr [rbp + 0x78]
0x42b546:	mov	rdi, qword ptr [rcx + rbx*8]
0x42b54a:	inc	rbx
0x42b54d:	call	0x403830
0x42b552:	cmp	dword ptr [rbp + 0x70], ebx
0x42b555:	jg	0x42b535
0x42b557:	mov	rdi, qword ptr [rbp + 0x78]
0x42b55b:	call	0x403830
0x42b560:	mov	rsi, qword ptr [rbp + 0x80]
0x42b567:	mov	r8, qword ptr [rsi + 0x40]
0x42b56b:	test	r8, r8
0x42b56e:	je	0x42b576
0x42b570:	mov	rdi, rbp
0x42b573:	call	r8
0x42b576:	add	rsp, 0x18
0x42b57a:	mov	rdi, rbp
0x42b57d:	pop	rbx
0x42b57e:	pop	rbp
0x42b57f:	jmp	0x403830
0x42b584:	endbr64	
0x42b588:	add	rsi, rdi
0x42b58b:	or	eax, 0xffffffff
0x42b58e:	cmp	rsi, rdi
0x42b591:	jbe	0x42b5a9
0x42b593:	mov	dl, byte ptr [rdi]
0x42b595:	inc	rdi
0x42b598:	xor	edx, eax
0x42b59a:	shr	eax, 8
0x42b59d:	movzx	ecx, dl
0x42b5a0:	xor	eax, dword ptr [rcx*4 + 0x4cad80]
0x42b5a7:	jmp	0x42b58e
0x42b5a9:	not	eax
0x42b5ab:	ret	
0x42b5ac:	endbr64	
0x42b5b0:	push	r15
0x42b5b2:	mov	r15d, edi
0x42b5b5:	push	r14
0x42b5b7:	mov	r14, r9
0x42b5ba:	push	r13
0x42b5bc:	push	r12
0x42b5be:	mov	r12, r8
0x42b5c1:	push	rbp
0x42b5c2:	mov	rbp, rcx
0x42b5c5:	push	rbx
0x42b5c6:	mov	rbx, rdx
0x42b5c9:	sub	rsp, 0x18
0x42b5cd:	mov	qword ptr [rsp + 8], rsi
0x42b5d2:	call	0x403e50
0x42b5d7:	mov	r9, qword ptr [rsp + 8]
0x42b5dc:	xor	edx, edx
0x42b5de:	xor	edi, edi
0x42b5e0:	movsxd	rcx, eax
0x42b5e3:	mov	r8d, r15d
0x42b5e6:	mov	rax, r9
0x42b5e9:	lea	rsi, [rcx + rbx - 1]
0x42b5ee:	div	rcx
0x42b5f1:	neg	rcx
0x42b5f4:	mov	rbx, rcx
0x42b5f7:	mov	ecx, 2
0x42b5fc:	mov	r13d, edx
0x42b5ff:	mov	edx, 1
0x42b604:	add	rsi, r13
0x42b607:	sub	r9, r13
0x42b60a:	and	rbx, rsi
0x42b60d:	mov	rsi, rbx
0x42b610:	call	0x403a00
0x42b615:	cmp	rax, -1
0x42b619:	jne	0x42b630
0x42b61b:	call	0x403890
0x42b620:	mov	esi, 0x4c9206
0x42b625:	mov	rdi, r12
0x42b628:	mov	edx, dword ptr [rax]
0x42b62a:	call	rbp
0x42b62c:	xor	eax, eax
0x42b62e:	jmp	0x42b64f
0x42b630:	lea	rdi, [rax + r13]
0x42b634:	movq	xmm1, rax
0x42b639:	mov	qword ptr [r14 + 0x10], rbx
0x42b63d:	mov	eax, 1
0x42b642:	movq	xmm0, rdi
0x42b647:	punpcklqdq	xmm0, xmm1
0x42b64b:	movups	xmmword ptr [r14], xmm0
0x42b64f:	add	rsp, 0x18
0x42b653:	pop	rbx
0x42b654:	pop	rbp
0x42b655:	pop	r12
0x42b657:	pop	r13
0x42b659:	pop	r14
0x42b65b:	pop	r15
0x42b65d:	ret	
0x42b65e:	endbr64	
0x42b662:	push	rbp
0x42b663:	mov	rbp, rdx
0x42b666:	push	rbx
0x42b667:	mov	rbx, rsi
0x42b66a:	push	r8
0x42b66c:	mov	rsi, qword ptr [rdi + 0x10]
0x42b670:	mov	rdi, qword ptr [rdi + 8]
0x42b674:	call	0x403d40
0x42b679:	test	eax, eax
0x42b67b:	jns	0x42b694
0x42b67d:	call	0x403890
0x42b682:	mov	rdi, rbp
0x42b685:	mov	esi, 0x4cbe49
0x42b68a:	mov	edx, dword ptr [rax]
0x42b68c:	pop	rcx
0x42b68d:	mov	rax, rbx
0x42b690:	pop	rbx
0x42b691:	pop	rbp
0x42b692:	jmp	rax
0x42b694:	pop	rax
0x42b695:	pop	rbx
0x42b696:	pop	rbp
0x42b697:	ret	
0x42b698:	endbr64	
0x42b69c:	push	rbp
0x42b69d:	mov	rbp, rsp
0x42b6a0:	push	r15
0x42b6a2:	push	r14
0x42b6a4:	push	r13
0x42b6a6:	push	r12
0x42b6a8:	push	rbx
0x42b6a9:	mov	rbx, rdi
0x42b6ac:	sub	rsp, 0x208
0x42b6b3:	cmp	byte ptr [rdi], 0x5f
0x42b6b6:	mov	qword ptr [rbp - 0x220], rsi
0x42b6bd:	jne	0x42b6c5
0x42b6bf:	cmp	byte ptr [rdi + 1], 0x5a
0x42b6c3:	je	0x42b722
0x42b6c5:	mov	edx, 8
0x42b6ca:	mov	esi, 0x4cd748
0x42b6cf:	mov	rdi, rbx
0x42b6d2:	call	0x4038d0
0x42b6d7:	test	eax, eax
0x42b6d9:	je	0x42b6e2
0x42b6db:	xor	eax, eax
0x42b6dd:	jmp	0x42bba5
0x42b6e2:	mov	al, byte ptr [rbx + 8]
0x42b6e5:	lea	ecx, [rax - 0x24]
0x42b6e8:	cmp	cl, 0x3b
0x42b6eb:	ja	0x42b6db
0x42b6ed:	movabs	rax, 0xf7fffffffffffbfe
0x42b6f7:	sar	rax, cl
0x42b6fa:	test	al, 1
0x42b6fc:	jne	0x42b6db
0x42b6fe:	mov	dl, byte ptr [rbx + 9]
0x42b701:	cmp	dl, 0x44
0x42b704:	je	0x42b70b
0x42b706:	cmp	dl, 0x49
0x42b709:	jne	0x42b6db
0x42b70b:	cmp	byte ptr [rbx + 0xa], 0x5f
0x42b70f:	jne	0x42b6db
0x42b711:	cmp	dl, 0x49
0x42b714:	setne	sil
0x42b718:	movzx	r8d, sil
0x42b71c:	add	r8d, 2
0x42b720:	jmp	0x42b728
0x42b722:	mov	r8d, 1
0x42b728:	lea	edi, [r8 - 2]
0x42b72c:	xor	r13d, r13d
0x42b72f:	lea	r12, [rbx + 0xb]
0x42b733:	cmp	r8d, 2
0x42b737:	mov	dword ptr [rbp - 0x1bc], 1
0x42b741:	setne	r13b
0x42b745:	mov	dword ptr [rbp - 0x214], edi
0x42b74b:	add	r13d, 0x45
0x42b74f:	mov	rdi, rbx
0x42b752:	call	0x4039e0
0x42b757:	movq	xmm0, rbx
0x42b75c:	mov	dword ptr [rbp - 0x200], 0x400b
0x42b766:	lea	r10, [rbx + rax]
0x42b76a:	mov	r9, rax
0x42b76d:	lea	eax, [rax + rax]
0x42b770:	mov	qword ptr [rbp - 0x1f8], rbx
0x42b777:	movq	xmm1, r10
0x42b77c:	mov	dword ptr [rbp - 0x1e4], eax
0x42b782:	punpcklqdq	xmm0, xmm1
0x42b786:	mov	dword ptr [rbp - 0x1e8], 0
0x42b790:	mov	dword ptr [rbp - 0x1d4], r9d
0x42b797:	mov	dword ptr [rbp - 0x1d8], 0
0x42b7a1:	mov	qword ptr [rbp - 0x1d0], 0
0x42b7ac:	mov	qword ptr [rbp - 0x1c8], 0
0x42b7b7:	mov	dword ptr [rbp - 0x1c0], 0
0x42b7c1:	mov	dword ptr [rbp - 0x1b8], 0
0x42b7cb:	movaps	xmmword ptr [rbp - 0x210], xmm0
0x42b7d2:	cmp	eax, 0x800
0x42b7d7:	ja	0x42b6db
0x42b7dd:	cdqe	
0x42b7df:	mov	r15, rsp
0x42b7e2:	mov	r14, rsp
0x42b7e5:	shl	rax, 5
0x42b7e9:	mov	r11, rax
0x42b7ec:	and	r11, 0xfffffffffffff000
0x42b7f3:	sub	r15, r11
0x42b7f6:	cmp	rsp, r15
0x42b7f9:	je	0x42b80d
0x42b7fb:	sub	rsp, 0x1000
0x42b802:	or	qword ptr [rsp + 0xff8], 0
0x42b80b:	jmp	0x42b7f6
0x42b80d:	and	eax, 0xfff
0x42b812:	sub	rsp, rax
0x42b815:	test	rax, rax
0x42b818:	je	0x42b820
0x42b81a:	or	qword ptr [rsp + rax - 8], 0
0x42b820:	movsxd	rdx, r9d
0x42b823:	mov	rsi, rsp
0x42b826:	mov	rcx, rsp
0x42b829:	lea	r8, [rdx*8 + 0xf]
0x42b831:	mov	rdi, r8
0x42b834:	and	r8, 0xfffffffffffff000
0x42b83b:	and	rdi, 0xfffffffffffffff0
0x42b83f:	sub	rsi, r8
0x42b842:	cmp	rsp, rsi
0x42b845:	je	0x42b859
0x42b847:	sub	rsp, 0x1000
0x42b84e:	or	qword ptr [rsp + 0xff8], 0
0x42b857:	jmp	0x42b842
0x42b859:	and	edi, 0xfff
0x42b85f:	sub	rsp, rdi
0x42b862:	test	rdi, rdi
0x42b865:	je	0x42b86d
0x42b867:	or	qword ptr [rsp + rdi - 8], 0
0x42b86d:	cmp	dword ptr [rbp - 0x214], 1
0x42b874:	mov	qword ptr [rbp - 0x1f0], rcx
0x42b87b:	mov	qword ptr [rbp - 0x1e0], rsp
0x42b882:	jbe	0x42b973
0x42b888:	cmp	byte ptr [rbx], 0x5f
0x42b88b:	je	0x42b895
0x42b88d:	xor	r15d, r15d
0x42b890:	jmp	0x42b9fb
0x42b895:	lea	r9, [rbx + 1]
0x42b899:	cmp	byte ptr [rbx + 1], 0x5a
0x42b89d:	mov	qword ptr [rbp - 0x1f8], r9
0x42b8a4:	jne	0x42b88d
0x42b8a6:	lea	r10, [rbx + 2]
0x42b8aa:	mov	esi, 1
0x42b8af:	lea	rdi, [rbp - 0x210]
0x42b8b6:	mov	qword ptr [rbp - 0x1f8], r10
0x42b8bd:	call	0x426f5a
0x42b8c2:	mov	r15, rax
0x42b8c5:	test	byte ptr [rbp - 0x200], 1
0x42b8cc:	je	0x42b9fb
0x42b8d2:	mov	rsi, qword ptr [rbp - 0x1f8]
0x42b8d9:	cmp	byte ptr [rsi], 0x2e
0x42b8dc:	jne	0x42b9fb
0x42b8e2:	mov	al, byte ptr [rsi + 1]
0x42b8e5:	lea	r11d, [rax - 0x61]
0x42b8e9:	cmp	r11b, 0x19
0x42b8ed:	ja	0x42b90c
0x42b8ef:	lea	rdx, [rsi + 2]
0x42b8f3:	mov	r8b, byte ptr [rdx]
0x42b8f6:	lea	ecx, [r8 - 0x61]
0x42b8fa:	cmp	cl, 0x19
0x42b8fd:	ja	0x42b904
0x42b8ff:	inc	rdx
0x42b902:	jmp	0x42b8f3
0x42b904:	cmp	r8b, 0x5f
0x42b908:	je	0x42b8ff
0x42b90a:	jmp	0x42b91e
0x42b90c:	cmp	al, 0x5f
0x42b90e:	je	0x42b8ef
0x42b910:	sub	eax, 0x30
0x42b913:	cmp	al, 9
0x42b915:	ja	0x42b9fb
0x42b91b:	mov	rdx, rsi
0x42b91e:	cmp	byte ptr [rdx], 0x2e
0x42b921:	jne	0x42b946
0x42b923:	mov	dil, byte ptr [rdx + 1]
0x42b927:	sub	edi, 0x30
0x42b92a:	cmp	dil, 9
0x42b92e:	ja	0x42b946
0x42b930:	add	rdx, 2
0x42b934:	mov	r9b, byte ptr [rdx]
0x42b937:	sub	r9d, 0x30
0x42b93b:	cmp	r9b, 9
0x42b93f:	ja	0x42b91e
0x42b941:	inc	rdx
0x42b944:	jmp	0x42b934
0x42b946:	mov	qword ptr [rbp - 0x1f8], rdx
0x42b94d:	lea	rdi, [rbp - 0x210]
0x42b954:	sub	edx, esi
0x42b956:	call	0x424dcf
0x42b95b:	mov	rdx, r15
0x42b95e:	mov	esi, 0x4f
0x42b963:	mov	rcx, rax
0x42b966:	call	0x424cee
0x42b96b:	mov	r15, rax
0x42b96e:	jmp	0x42b8d2
0x42b973:	cmp	byte ptr [rbx + 0xb], 0x5f
0x42b977:	mov	qword ptr [rbp - 0x1f8], r12
0x42b97e:	jne	0x42b986
0x42b980:	cmp	byte ptr [rbx + 0xc], 0x5a
0x42b984:	je	0x42b9a4
0x42b986:	mov	rdi, r12
0x42b989:	call	0x4039e0
0x42b98e:	mov	rsi, r12
0x42b991:	lea	rdi, [rbp - 0x210]
0x42b998:	mov	edx, eax
0x42b99a:	call	0x424dcf
0x42b99f:	mov	rdx, rax
0x42b9a2:	jmp	0x42b9c0
0x42b9a4:	lea	r15, [rbx + 0xd]
0x42b9a8:	xor	esi, esi
0x42b9aa:	lea	rdi, [rbp - 0x210]
0x42b9b1:	mov	qword ptr [rbp - 0x1f8], r15
0x42b9b8:	call	0x426f5a
0x42b9bd:	mov	rdx, rax
0x42b9c0:	mov	esi, r13d
0x42b9c3:	xor	ecx, ecx
0x42b9c5:	lea	rdi, [rbp - 0x210]
0x42b9cc:	call	0x424cee
0x42b9d1:	mov	rdx, qword ptr [rbp - 0x1f8]
0x42b9d8:	mov	r15, rax
0x42b9db:	mov	rdi, rdx
0x42b9de:	mov	qword ptr [rbp - 0x228], rdx
0x42b9e5:	call	0x4039e0
0x42b9ea:	mov	rsi, qword ptr [rbp - 0x228]
0x42b9f1:	add	rsi, rax
0x42b9f4:	mov	qword ptr [rbp - 0x1f8], rsi
0x42b9fb:	mov	r10, qword ptr [rbp - 0x1f8]
0x42ba02:	cmp	byte ptr [r10], 0
0x42ba06:	jne	0x42ba0d
0x42ba08:	test	r15, r15
0x42ba0b:	jne	0x42ba32
0x42ba0d:	cmp	dword ptr [rbp - 0x1bc], -1
0x42ba14:	jne	0x42ba28
0x42ba16:	mov	dword ptr [rbp - 0x1bc], 0
0x42ba20:	mov	rsp, r14
0x42ba23:	jmp	0x42b74f
0x42ba28:	xor	eax, eax
0x42ba2a:	mov	rsp, r14
0x42ba2d:	jmp	0x42bba5
0x42ba32:	mov	rax, qword ptr [rbp - 0x220]
0x42ba39:	xorps	xmm2, xmm2
0x42ba3c:	mov	rsi, r15
0x42ba3f:	lea	rdi, [rbp - 0x1b0]
0x42ba46:	mov	qword ptr [rbp - 0xb0], 0
0x42ba51:	mov	byte ptr [rbp - 0xa8], 0
0x42ba58:	mov	qword ptr [rbp - 0x90], 0
0x42ba63:	mov	qword ptr [rbp - 0x88], 0
0x42ba6e:	mov	qword ptr [rbp - 0x70], 0
0x42ba76:	mov	qword ptr [rbp - 0xa0], 0x4278e9
0x42ba81:	mov	qword ptr [rbp - 0x98], rax
0x42ba88:	mov	qword ptr [rbp - 0x68], 0
0x42ba90:	mov	qword ptr [rbp - 0x58], 0
0x42ba98:	mov	qword ptr [rbp - 0x48], 0
0x42baa0:	movaps	xmmword ptr [rbp - 0x80], xmm2
0x42baa4:	call	0x425086
0x42baa9:	cmp	dword ptr [rbp - 0x7c], 0x7ff
0x42bab0:	jg	0x42bab9
0x42bab2:	mov	dword ptr [rbp - 0x7c], 0
0x42bab9:	movsxd	r11, dword ptr [rbp - 0x54]
0x42babd:	mov	eax, dword ptr [rbp - 0x44]
0x42bac0:	mov	r12d, 1
0x42bac6:	mov	r8, rsp
0x42bac9:	mov	qword ptr [rbp - 0x40], 0
0x42bad1:	mov	rbx, rsp
0x42bad4:	imul	eax, r11d
0x42bad8:	test	r11d, r11d
0x42badb:	cmovle	r11, r12
0x42badf:	shl	r11, 4
0x42bae3:	mov	dword ptr [rbp - 0x44], eax
0x42bae6:	mov	r13, r11
0x42bae9:	and	r13, 0xfffffffffffff000
0x42baf0:	sub	r8, r13
0x42baf3:	cmp	rsp, r8
0x42baf6:	je	0x42bb0a
0x42baf8:	sub	rsp, 0x1000
0x42baff:	or	qword ptr [rsp + 0xff8], 0
0x42bb08:	jmp	0x42baf3
0x42bb0a:	and	r11d, 0xfff
0x42bb11:	sub	rsp, r11
0x42bb14:	test	r11, r11
0x42bb17:	je	0x42bb1f
0x42bb19:	or	qword ptr [rsp + r11 - 8], 0
0x42bb1f:	test	eax, eax
0x42bb21:	mov	ecx, 1
0x42bb26:	mov	rdx, rsp
0x42bb29:	mov	rdi, rsp
0x42bb2c:	cmovle	eax, ecx
0x42bb2f:	cdqe	
0x42bb31:	shl	rax, 4
0x42bb35:	mov	r9, rax
0x42bb38:	and	r9, 0xfffffffffffff000
0x42bb3f:	sub	rdx, r9
0x42bb42:	cmp	rsp, rdx
0x42bb45:	je	0x42bb59
0x42bb47:	sub	rsp, 0x1000
0x42bb4e:	or	qword ptr [rsp + 0xff8], 0
0x42bb57:	jmp	0x42bb42
0x42bb59:	and	eax, 0xfff
0x42bb5e:	sub	rsp, rax
0x42bb61:	test	rax, rax
0x42bb64:	je	0x42bb6c
0x42bb66:	or	qword ptr [rsp + rax - 8], 0
0x42bb6c:	mov	qword ptr [rbp - 0x60], rdi
0x42bb70:	mov	rdx, r15
0x42bb73:	mov	esi, 0x400b
0x42bb78:	lea	rdi, [rbp - 0x1b0]
0x42bb7f:	mov	qword ptr [rbp - 0x50], rsp
0x42bb83:	call	0x428dff
0x42bb88:	lea	rdi, [rbp - 0x1b0]
0x42bb8f:	mov	rsp, rbx
0x42bb92:	call	0x42510f
0x42bb97:	xor	eax, eax
0x42bb99:	cmp	dword ptr [rbp - 0x80], 0
0x42bb9d:	sete	al
0x42bba0:	jmp	0x42ba2a
0x42bba5:	lea	rsp, [rbp - 0x28]
0x42bba9:	pop	rbx
0x42bbaa:	pop	r12
0x42bbac:	pop	r13
0x42bbae:	pop	r14
0x42bbb0:	pop	r15
0x42bbb2:	pop	rbp
0x42bbb3:	ret	
0x42bbb4:	endbr64	
0x42bbb8:	push	r15
0x42bbba:	mov	eax, 0x4c3b40
0x42bbbf:	push	r14
0x42bbc1:	push	r13
0x42bbc3:	mov	r13, rdi
0x42bbc6:	push	r12
0x42bbc8:	mov	r12d, ecx
0x42bbcb:	push	rbp
0x42bbcc:	mov	ebp, 0x45be4d
0x42bbd1:	push	rbx
0x42bbd2:	mov	ebx, edx
0x42bbd4:	sub	rsp, 0x58
0x42bbd8:	cmp	edx, 0x5ac
0x42bbde:	mov	edx, 0x4cad20
0x42bbe3:	cmove	rax, rdx
0x42bbe7:	mov	dword ptr [rsp + 0x24], esi
0x42bbeb:	test	r8d, r8d
0x42bbee:	mov	esi, 0x4c4893
0x42bbf3:	cmovne	rbp, rsi
0x42bbf7:	mov	dword ptr [rsp + 0x20], r8d
0x42bbfc:	mov	qword ptr [rsp + 0x28], rax
0x42bc01:	mov	qword ptr [rsp + 0x30], rbp
0x42bc06:	cmp	byte ptr [r13], 0
0x42bc0b:	je	0x42be5c
0x42bc11:	mov	esi, 0x2c
0x42bc16:	mov	rdi, r13
0x42bc19:	call	0x403a40
0x42bc1e:	mov	r15, rax
0x42bc21:	mov	qword ptr [rsp + 8], rax
0x42bc26:	sub	r15, r13
0x42bc29:	test	rax, rax
0x42bc2c:	jne	0x42bc39
0x42bc2e:	mov	rdi, r13
0x42bc31:	call	0x4039e0
0x42bc36:	mov	r15, rax
0x42bc39:	test	r15, r15
0x42bc3c:	je	0x42be3d
0x42bc42:	mov	rbp, qword ptr [rsp + 0x28]
0x42bc47:	mov	qword ptr [rsp + 0x18], rbp
0x42bc4c:	mov	r14, rbp
0x42bc4f:	mov	rsi, qword ptr [r14]
0x42bc52:	test	rsi, rsi
0x42bc55:	je	0x42bce3
0x42bc5b:	cmp	r15, qword ptr [r14 + 0x10]
0x42bc5f:	jne	0x42bcda
0x42bc61:	mov	rdx, r15
0x42bc64:	mov	rdi, r13
0x42bc67:	call	0x403b70
0x42bc6c:	test	eax, eax
0x42bc6e:	jne	0x42bcda
0x42bc70:	cmp	dword ptr [rsp + 0x20], 0
0x42bc75:	mov	r13d, dword ptr [r14 + 8]
0x42bc79:	je	0x42bccf
0x42bc7b:	cmp	r13d, -1
0x42bc7f:	jne	0x42bcaa
0x42bc81:	cmp	ebx, 0x5b1
0x42bc87:	jne	0x42bc9e
0x42bc89:	mov	edi, dword ptr [rsp + 0x24]
0x42bc8d:	mov	esi, 0x4cc248
0x42bc92:	xor	eax, eax
0x42bc94:	call	0x43fe20
0x42bc99:	jmp	0x42be35
0x42bc9e:	or	r12d, 0xfffff6e7
0x42bca5:	jmp	0x42be35
0x42bcaa:	cmp	ebx, 0x5ae
0x42bcb0:	jne	0x42bcc7
0x42bcb2:	cmp	r13d, 0x37e7fe0
0x42bcb9:	jne	0x42bcc7
0x42bcbb:	or	r12d, 0x37e76e0
0x42bcc2:	jmp	0x42be35
0x42bcc7:	or	r12d, r13d
0x42bcca:	jmp	0x42be35
0x42bccf:	not	r13d
0x42bcd2:	and	r12d, r13d
0x42bcd5:	jmp	0x42be35
0x42bcda:	add	r14, 0x20
0x42bcde:	jmp	0x42bc4f
0x42bce3:	mov	dword ptr [rsp + 0x14], 0xffffffff
0x42bceb:	mov	r14, rsi
0x42bcee:	mov	dword ptr [rsp + 0x40], r15d
0x42bcf3:	mov	dword ptr [rsp + 0x44], r12d
0x42bcf8:	mov	rcx, qword ptr [rsp + 0x18]
0x42bcfd:	mov	r12, qword ptr [rcx]
0x42bd00:	test	r12, r12
0x42bd03:	je	0x42bda3
0x42bd09:	cmp	ebx, 0x5b1
0x42bd0f:	jne	0x42bd1f
0x42bd11:	mov	r8, qword ptr [rsp + 0x18]
0x42bd16:	cmp	dword ptr [r8 + 8], -1
0x42bd1b:	je	0x42bd32
0x42bd1d:	jmp	0x42bd39
0x42bd1f:	cmp	ebx, 0x5ae
0x42bd25:	jne	0x42bd39
0x42bd27:	mov	rdi, qword ptr [rsp + 0x18]
0x42bd2c:	cmp	byte ptr [rdi + 0x18], 1
0x42bd30:	je	0x42bd39
0x42bd32:	cmp	dword ptr [rsp + 0x20], 0
0x42bd37:	jne	0x42bd98
0x42bd39:	mov	rdi, r12
0x42bd3c:	call	0x440210
0x42bd41:	mov	r9, rax
0x42bd44:	mov	rbp, rax
0x42bd47:	sub	r9, r15
0x42bd4a:	mov	r10, r9
0x42bd4d:	neg	r10
0x42bd50:	cmovs	r10, r9
0x42bd54:	cmp	r10d, dword ptr [rsp + 0x14]
0x42bd59:	mov	qword ptr [rsp + 0x48], r10
0x42bd5e:	jae	0x42bd98
0x42bd60:	mov	rsi, rax
0x42bd63:	mov	rdi, r15
0x42bd66:	call	0x43d530
0x42bd6b:	mov	r11, qword ptr [rsp + 0x48]
0x42bd70:	cmp	eax, r11d
0x42bd73:	jb	0x42bd98
0x42bd75:	mov	esi, dword ptr [rsp + 0x40]
0x42bd79:	mov	ecx, ebp
0x42bd7b:	mov	rdx, r12
0x42bd7e:	mov	rdi, r13
0x42bd81:	call	0x43d860
0x42bd86:	cmp	eax, dword ptr [rsp + 0x14]
0x42bd8a:	jae	0x42bd98
0x42bd8c:	mov	qword ptr [rsp + 0x38], rbp
0x42bd91:	mov	r14, r12
0x42bd94:	mov	dword ptr [rsp + 0x14], eax
0x42bd98:	add	qword ptr [rsp + 0x18], 0x20
0x42bd9e:	jmp	0x42bcf8
0x42bda3:	mov	r12d, dword ptr [rsp + 0x44]
0x42bda8:	test	r14, r14
0x42bdab:	je	0x42bdc0
0x42bdad:	mov	rsi, qword ptr [rsp + 0x38]
0x42bdb2:	mov	rdi, r15
0x42bdb5:	call	0x43d530
0x42bdba:	cmp	eax, dword ptr [rsp + 0x14]
0x42bdbe:	jb	0x42be0d
0x42bdc0:	cmp	dword ptr [rsp + 0x14], 0
0x42bdc5:	je	0x42be0d
0x42bdc7:	mov	ecx, 0x461577
0x42bdcc:	cmp	ebx, 0x5ae
0x42bdd2:	je	0x42bde6
0x42bdd4:	mov	ecx, 0x45bedf
0x42bdd9:	cmp	ebx, 0x5ac
0x42bddf:	je	0x42bde6
0x42bde1:	mov	ecx, 0x4c4893
0x42bde6:	test	r14, r14
0x42bde9:	je	0x42be1a
0x42bdeb:	push	rax
0x42bdec:	mov	r9, r13
0x42bdef:	mov	r8d, r15d
0x42bdf2:	mov	esi, 0x4cc270
0x42bdf7:	push	r14
0x42bdf9:	mov	rdx, qword ptr [rsp + 0x40]
0x42bdfe:	xor	eax, eax
0x42be00:	mov	edi, dword ptr [rsp + 0x34]
0x42be04:	call	0x43fe20
0x42be09:	pop	rdx
0x42be0a:	pop	rcx
0x42be0b:	jmp	0x42be35
0x42be0d:	cmp	ebx, 0x5ae
0x42be13:	jne	0x42be4a
0x42be15:	mov	ecx, 0x461577
0x42be1a:	mov	rdx, qword ptr [rsp + 0x30]
0x42be1f:	mov	edi, dword ptr [rsp + 0x24]
0x42be23:	mov	r9, r13
0x42be26:	mov	r8d, r15d
0x42be29:	mov	esi, 0x4cc2c0
0x42be2e:	xor	eax, eax
0x42be30:	call	0x43fe20
0x42be35:	cmp	qword ptr [rsp + 8], 0
0x42be3b:	je	0x42be5c
0x42be3d:	mov	r13, qword ptr [rsp + 8]
0x42be42:	inc	r13
0x42be45:	jmp	0x42bc06
0x42be4a:	xor	r14d, r14d
0x42be4d:	cmp	ebx, 0x5ac
0x42be53:	jne	0x42bde1
0x42be55:	mov	ecx, 0x45bedf
0x42be5a:	jmp	0x42be1a
0x42be5c:	add	rsp, 0x58
0x42be60:	mov	eax, r12d
0x42be63:	pop	rbx
0x42be64:	pop	rbp
0x42be65:	pop	r12
0x42be67:	pop	r13
0x42be69:	pop	r14
0x42be6b:	pop	r15
0x42be6d:	ret	
0x42be6e:	endbr64	
0x42be72:	push	rax
0x42be73:	pop	rax
0x42be74:	sub	rsp, 0x188
0x42be7b:	mov	qword ptr [rsp + 0xd8], rsi
0x42be83:	mov	qword ptr [rsp + 0xe0], rdx
0x42be8b:	mov	qword ptr [rsp + 0xe8], rcx
0x42be93:	mov	qword ptr [rsp + 0xf0], r8
0x42be9b:	mov	qword ptr [rsp + 0xf8], r9
0x42bea3:	test	al, al
0x42bea5:	je	0x42bee7
0x42bea7:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x42beaf:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x42beb7:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x42bebf:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x42bec7:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x42becf:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x42bed7:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x42bedf:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x42bee7:	mov	rsi, qword ptr [rip + 0x9ac72]
0x42beee:	lea	rdi, [rsp + 0x20]
0x42bef3:	lea	rdx, [rsp + 0x190]
0x42befb:	inc	dword ptr [rip + 0xb72ef]
0x42bf01:	lea	rcx, [rsp + 0xd0]
0x42bf09:	mov	qword ptr [rsp + 0x10], rdx
0x42bf0e:	xor	edx, edx
0x42bf10:	mov	qword ptr [rsp + 0x18], rcx
0x42bf15:	mov	dword ptr [rsp + 8], 8
0x42bf1d:	mov	dword ptr [rsp + 0xc], 0x30
0x42bf25:	call	0x43de80
0x42bf2a:	or	edx, 0xffffffff
0x42bf2d:	xor	esi, esi
0x42bf2f:	lea	rdi, [rsp + 0x20]
0x42bf34:	mov	r9d, 0xe
0x42bf3a:	lea	r8, [rsp + 8]
0x42bf3f:	mov	ecx, 0x4bfa00
0x42bf44:	call	0x43def0
0x42bf49:	mov	edx, 0x4cbe50
0x42bf4e:	mov	esi, 0x723
0x42bf53:	mov	edi, 0x4c438f
0x42bf58:	call	0x415bba
0x42bf5d:	nop	
0x42bf5e:	endbr64	
0x42bf62:	mov	eax, dword ptr [rip + 0xba298]
0x42bf68:	test	eax, eax
0x42bf6a:	jne	0x42bf8b
0x42bf6c:	cmp	qword ptr [rip + 0xb7164], 0
0x42bf74:	je	0x42bf90
0x42bf76:	cmp	dword ptr [rip + 0xb9fff], 0
0x42bf7d:	mov	eax, 1
0x42bf82:	je	0x42bf90
0x42bf84:	mov	eax, dword ptr [rip + 0xb65fe]
0x42bf8a:	ret	
0x42bf8b:	mov	eax, 2
0x42bf90:	ret	
0x42bf91:	endbr64	
0x42bf95:	push	r15
0x42bf97:	push	r14
0x42bf99:	push	r13
0x42bf9b:	push	r12
0x42bf9d:	mov	r12, rsi
0x42bfa0:	push	rbp
0x42bfa1:	push	rbx
0x42bfa2:	mov	rbx, rdi
0x42bfa5:	mov	rdi, rsi
0x42bfa8:	sub	rsp, 0x58
0x42bfac:	call	0x4039e0
0x42bfb1:	lea	r14, [rsp + 0x10]
0x42bfb6:	mov	ecx, 0x10
0x42bfbb:	mov	rsi, rbx
0x42bfbe:	mov	rdi, r14
0x42bfc1:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x42bfc3:	mov	dl, byte ptr [rsp + 0x48]
0x42bfc7:	mov	r13, qword ptr [rsp + 0x30]
0x42bfcc:	mov	r15, qword ptr [rsp + 0x38]
0x42bfd1:	and	edx, 0xffffff99
0x42bfd4:	or	edx, 4
0x42bfd7:	mov	byte ptr [rsp + 0x48], dl
0x42bfdb:	test	eax, eax
0x42bfdd:	js	0x42c142
0x42bfe3:	cmp	qword ptr [rsp + 0x20], 0
0x42bfe9:	mov	r9d, eax
0x42bfec:	mov	ebx, eax
0x42bfee:	je	0x42c01f
0x42bff0:	xor	ebx, ebx
0x42bff2:	test	eax, eax
0x42bff4:	je	0x42c01f
0x42bff6:	mov	rbp, qword ptr [rsp + 0x10]
0x42bffb:	mov	ebx, 1
0x42c000:	mov	r8b, byte ptr [rbp]
0x42c004:	cmp	r8b, 0xb
0x42c008:	je	0x42c01f
0x42c00a:	mov	ebx, eax
0x42c00c:	cmp	r8b, 9
0x42c010:	jne	0x42c01f
0x42c012:	cmp	byte ptr [rsp + 0x48], 0
0x42c017:	mov	ebx, 1
0x42c01c:	cmovs	ebx, eax
0x42c01f:	test	r13, r13
0x42c022:	jne	0x42c028
0x42c024:	xor	ebp, ebp
0x42c026:	jmp	0x42c094
0x42c028:	test	byte ptr [rsp + 0x48], 8
0x42c02d:	jne	0x42c024
0x42c02f:	mov	rdi, r14
0x42c032:	mov	dword ptr [rsp + 0xc], r9d
0x42c037:	call	0x424644
0x42c03c:	mov	r9d, dword ptr [rsp + 0xc]
0x42c041:	cmp	eax, -2
0x42c044:	jne	0x42c024
0x42c046:	mov	ebp, 0xfffffffe
0x42c04b:	jmp	0x42c145
0x42c050:	test	sil, sil
0x42c053:	jne	0x42c0a2
0x42c055:	cmp	r9d, ebp
0x42c058:	je	0x42c12e
0x42c05e:	xor	r8d, r8d
0x42c061:	mov	ecx, ebp
0x42c063:	mov	edx, r9d
0x42c066:	mov	rsi, r12
0x42c069:	mov	rdi, r14
0x42c06c:	mov	dword ptr [rsp + 0xc], r9d
0x42c071:	call	0x429763
0x42c076:	test	eax, eax
0x42c078:	jns	0x42c145
0x42c07e:	cmp	eax, -2
0x42c081:	mov	r9d, dword ptr [rsp + 0xc]
0x42c086:	je	0x42c046
0x42c088:	test	ebx, ebx
0x42c08a:	je	0x42c142
0x42c090:	dec	ebx
0x42c092:	inc	ebp
0x42c094:	test	r13, r13
0x42c097:	setne	sil
0x42c09b:	cmp	r9d, ebp
0x42c09e:	jg	0x42c050
0x42c0a0:	jmp	0x42c055
0x42c0a2:	test	byte ptr [rsp + 0x48], 1
0x42c0a7:	jne	0x42c055
0x42c0a9:	movsxd	r10, ebp
0x42c0ac:	test	ebx, ebx
0x42c0ae:	je	0x42c111
0x42c0b0:	test	ebp, ebp
0x42c0b2:	jns	0x42c0c6
0x42c0b4:	lea	ecx, [rbp + rbx]
0x42c0b8:	xor	r11d, r11d
0x42c0bb:	test	ecx, ecx
0x42c0bd:	cmovs	ecx, r11d
0x42c0c1:	xor	r8d, r8d
0x42c0c4:	jmp	0x42c0cb
0x42c0c6:	mov	r8, r12
0x42c0c9:	xor	ecx, ecx
0x42c0cb:	add	r8, r10
0x42c0ce:	mov	edx, ebx
0x42c0d0:	test	r15, r15
0x42c0d3:	je	0x42c102
0x42c0d5:	cmp	ecx, edx
0x42c0d7:	jge	0x42c106
0x42c0d9:	movzx	r10d, byte ptr [r8]
0x42c0dd:	inc	r8
0x42c0e0:	movzx	eax, byte ptr [r15 + r10]
0x42c0e5:	cmp	byte ptr [r13 + rax], 0
0x42c0eb:	jne	0x42c106
0x42c0ed:	dec	edx
0x42c0ef:	jmp	0x42c0d5
0x42c0f1:	movzx	edi, byte ptr [r8]
0x42c0f5:	inc	r8
0x42c0f8:	cmp	byte ptr [r13 + rdi], 0
0x42c0fe:	jne	0x42c106
0x42c100:	dec	edx
0x42c102:	cmp	ecx, edx
0x42c104:	jl	0x42c0f1
0x42c106:	sub	ebx, edx
0x42c108:	add	ebp, ebx
0x42c10a:	mov	ebx, edx
0x42c10c:	jmp	0x42c055
0x42c111:	movzx	eax, byte ptr [r12 + r10]
0x42c116:	test	r15, r15
0x42c119:	je	0x42c120
0x42c11b:	movzx	eax, byte ptr [r15 + rax]
0x42c120:	cmp	byte ptr [r13 + rax], 0
0x42c126:	jne	0x42c055
0x42c12c:	jmp	0x42c142
0x42c12e:	test	sil, sil
0x42c131:	je	0x42c05e
0x42c137:	test	byte ptr [rsp + 0x48], 1
0x42c13c:	jne	0x42c05e
0x42c142:	or	ebp, 0xffffffff
0x42c145:	add	rsp, 0x58
0x42c149:	mov	eax, ebp
0x42c14b:	pop	rbx
0x42c14c:	shr	eax, 0x1f
0x42c14f:	pop	rbp
0x42c150:	pop	r12
0x42c152:	pop	r13
0x42c154:	pop	r14
0x42c156:	pop	r15
0x42c158:	ret	
0x42c159:	endbr64	
0x42c15d:	push	rbp
0x42c15e:	xor	eax, eax
0x42c160:	mov	ecx, 0x10
0x42c165:	mov	edx, 0x414cd0
0x42c16a:	mov	esi, 0x48
0x42c16f:	sub	rsp, 0x50
0x42c173:	lea	rdi, [rsp + 0x10]
0x42c178:	lea	rbp, [rsp + 8]
0x42c17d:	mov	qword ptr [rsp + 8], 0
0x42c186:	rep stosd	dword ptr [rdi], eax
0x42c188:	mov	rdi, rbp
0x42c18b:	call	0x41eee1
0x42c190:	test	rax, rax
0x42c193:	je	0x42c1a2
0x42c195:	mov	ecx, 0x12
0x42c19a:	mov	rdi, rax
0x42c19d:	mov	rsi, rbp
0x42c1a0:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x42c1a2:	add	rsp, 0x50
0x42c1a6:	pop	rbp
0x42c1a7:	ret	
0x42c1a8:	endbr64	
0x42c1ac:	push	r12
0x42c1ae:	mov	r12, rdx
0x42c1b1:	push	rbp
0x42c1b2:	mov	rbp, rsi
0x42c1b5:	push	rbx
0x42c1b6:	mov	rbx, rdi
0x42c1b9:	cmp	rdx, 0xffff
0x42c1c0:	ja	0x42c1ca
0x42c1c2:	cmp	dword ptr [rbx + 8], 0
0x42c1c6:	je	0x42c1fc
0x42c1c8:	jmp	0x42c1f0
0x42c1ca:	call	0x403e50
0x42c1cf:	mov	rdx, rbp
0x42c1d2:	cdqe	
0x42c1d4:	or	rdx, r12
0x42c1d7:	dec	rax
0x42c1da:	test	rax, rdx
0x42c1dd:	jne	0x42c1c2
0x42c1df:	mov	rsi, r12
0x42c1e2:	mov	rdi, rbp
0x42c1e5:	call	0x403d40
0x42c1ea:	test	eax, eax
0x42c1ec:	jne	0x42c1c2
0x42c1ee:	jmp	0x42c217
0x42c1f0:	mov	eax, 1
0x42c1f5:	xchg	dword ptr [rbx + 0x3c], eax
0x42c1f8:	test	eax, eax
0x42c1fa:	jne	0x42c217
0x42c1fc:	mov	rdx, r12
0x42c1ff:	mov	rsi, rbp
0x42c202:	mov	rdi, rbx
0x42c205:	call	0x41ee78
0x42c20a:	cmp	dword ptr [rbx + 8], 0
0x42c20e:	je	0x42c217
0x42c210:	mov	dword ptr [rbx + 0x3c], 0
0x42c217:	pop	rbx
0x42c218:	pop	rbp
0x42c219:	pop	r12
0x42c21b:	ret	
0x42c21c:	endbr64	
0x42c220:	push	rax
0x42c221:	pop	rax
0x42c222:	mov	edi, 1
0x42c227:	push	rax
0x42c228:	call	0x403e70
0x42c22d:	endbr64	
0x42c231:	push	rbx
0x42c232:	mov	rbx, rdi
0x42c235:	xor	edi, edi
0x42c237:	cmp	qword ptr [rip + 0xb7091], 0
0x42c23f:	je	0x42c24f
0x42c241:	call	0x403b80
0x42c246:	sub	rax, qword ptr [rip + 0xb7083]
0x42c24d:	jmp	0x42c25a
0x42c24f:	call	0x403b80
0x42c254:	sub	rax, 0x4e3080
0x42c25a:	mov	rcx, qword ptr [rip + 0xb6217]
0x42c261:	mov	edx, 0x4c4893
0x42c266:	mov	r8d, 0x4cd64a
0x42c26c:	mov	rdi, qword ptr [rip + 0xb6e2d]
0x42c273:	mov	r9, rbx
0x42c276:	mov	esi, 1
0x42c27b:	cmp	byte ptr [rcx], 0
0x42c27e:	cmove	r8, rdx
0x42c282:	push	rdx
0x42c283:	mov	edx, 0x4cc300
0x42c288:	push	rax
0x42c289:	xor	eax, eax
0x42c28b:	call	0x403e90
0x42c290:	call	0x42c21c
0x42c295:	endbr64	
0x42c299:	push	rbp
0x42c29a:	mov	eax, 0x414b53
0x42c29f:	xor	edx, edx
0x42c2a1:	xor	ecx, ecx
0x42c2a3:	movq	xmm0, rax
0x42c2a8:	mov	rbp, rdi
0x42c2ab:	sub	rsp, 0x30
0x42c2af:	mov	qword ptr [rsp + 0x20], rsi
0x42c2b4:	movhps	xmm0, qword ptr [rip + 0xa01f5]
0x42c2bb:	mov	esi, 0x1000
0x42c2c0:	mov	dword ptr [rsp], 3
0x42c2c7:	mov	qword ptr [rsp + 8], rdi
0x42c2cc:	mov	dword ptr [rsp + 0x28], 0
0x42c2d4:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x42c2d9:	call	0x41eee1
0x42c2de:	xor	edx, edx
0x42c2e0:	mov	rsi, rax
0x42c2e3:	test	rax, rax
0x42c2e6:	je	0x42c2fa
0x42c2e8:	mov	edx, 0x1000
0x42c2ed:	mov	rdi, rbp
0x42c2f0:	call	0x42c1a8
0x42c2f5:	mov	edx, 1
0x42c2fa:	mov	rsi, rsp
0x42c2fd:	mov	edi, 0x4229a5
0x42c302:	mov	dword ptr [rsp + 0x2c], edx
0x42c306:	call	0x458100
0x42c30b:	add	rsp, 0x30
0x42c30f:	pop	rbp
0x42c310:	ret	
0x42c311:	endbr64	
0x42c315:	push	r12
0x42c317:	xor	r12d, r12d
0x42c31a:	push	rbp
0x42c31b:	mov	rbp, rdi
0x42c31e:	push	rbx
0x42c31f:	mov	rbx, rsi
0x42c322:	mov	rdx, qword ptr [rbx]
0x42c325:	mov	rsi, qword ptr [rbx + 8]
0x42c329:	cmp	r12, rdx
0x42c32c:	jae	0x42c351
0x42c32e:	mov	rax, r12
0x42c331:	mov	rdi, rbp
0x42c334:	inc	r12
0x42c337:	shl	rax, 5
0x42c33b:	add	rsi, rax
0x42c33e:	mov	rdx, qword ptr [rsi + 0x10]
0x42c342:	mov	rsi, qword ptr [rsi + 0x18]
0x42c346:	shl	rdx, 4
0x42c34a:	call	0x42c1a8
0x42c34f:	jmp	0x42c322
0x42c351:	mov	rdi, rbp
0x42c354:	shl	rdx, 5
0x42c358:	call	0x42c1a8
0x42c35d:	mov	qword ptr [rbx], 0
0x42c364:	mov	qword ptr [rbx + 8], 0
0x42c36c:	pop	rbx
0x42c36d:	pop	rbp
0x42c36e:	pop	r12
0x42c370:	ret	
0x42c371:	endbr64	
0x42c375:	push	rbp
0x42c376:	mov	rbp, rdi
0x42c379:	push	rbx
0x42c37a:	mov	rbx, rsi
0x42c37d:	push	rdx
0x42c37e:	mov	rdx, qword ptr [rsi + 0x28]
0x42c382:	test	rdx, rdx
0x42c385:	je	0x42c394
0x42c387:	mov	rsi, qword ptr [rsi + 0x30]
0x42c38b:	shl	rdx, 3
0x42c38f:	call	0x42c1a8
0x42c394:	mov	rax, qword ptr [rbx + 0x38]
0x42c398:	mov	rsi, qword ptr [rbx + 0x40]
0x42c39c:	mov	rdi, rbp
0x42c39f:	lea	rdx, [rax*8]
0x42c3a7:	pop	rax
0x42c3a8:	pop	rbx
0x42c3a9:	pop	rbp
0x42c3aa:	jmp	0x42c1a8
0x42c3af:	endbr64	
0x42c3b3:	push	r14
0x42c3b5:	mov	r14, rsi
0x42c3b8:	push	r13
0x42c3ba:	mov	r13, rcx
0x42c3bd:	push	r12
0x42c3bf:	push	rbp
0x42c3c0:	mov	rbp, rdx
0x42c3c3:	mov	rdx, r9
0x42c3c6:	push	rbx
0x42c3c7:	mov	r12, qword ptr [rsp + 0x38]
0x42c3cc:	mov	ebx, r8d
0x42c3cf:	mov	rax, qword ptr [r12 + 0x18]
0x42c3d4:	test	rax, rax
0x42c3d7:	je	0x42c3f7
0x42c3d9:	imul	rsi, rax, 0x18
0x42c3dd:	mov	rcx, qword ptr [r12]
0x42c3e1:	lea	r8, [rcx + rsi - 0x18]
0x42c3e6:	cmp	qword ptr [r8], rbp
0x42c3e9:	jne	0x42c3f7
0x42c3eb:	cmp	qword ptr [r8 + 8], r13
0x42c3ef:	jne	0x42c3f7
0x42c3f1:	cmp	dword ptr [r8 + 0x10], ebx
0x42c3f5:	je	0x42c437
0x42c3f7:	mov	rcx, qword ptr [rsp + 0x30]
0x42c3fc:	mov	r8, r12
0x42c3ff:	mov	esi, 0x18
0x42c404:	call	0x41f7d7
0x42c409:	test	rax, rax
0x42c40c:	je	0x42c437
0x42c40e:	mov	rdx, qword ptr [r12 + 0x18]
0x42c413:	movd	xmm0, ebx
0x42c417:	add	rbp, qword ptr [r14 + 0x10]
0x42c41b:	mov	qword ptr [rax + 8], r13
0x42c41f:	mov	qword ptr [rax], rbp
0x42c422:	movd	xmm1, edx
0x42c426:	inc	rdx
0x42c429:	punpckldq	xmm0, xmm1
0x42c42d:	movq	qword ptr [rax + 0x10], xmm0
0x42c432:	mov	qword ptr [r12 + 0x18], rdx
0x42c437:	pop	rbx
0x42c438:	pop	rbp
0x42c439:	pop	r12
0x42c43b:	pop	r13
0x42c43d:	pop	r14
0x42c43f:	ret	
0x42c440:	endbr64	
0x42c444:	mov	rax, rdx
0x42c447:	cmp	edi, 0x12
0x42c44a:	je	0x42c490
0x42c44c:	cmp	edi, 0x55
0x42c44f:	je	0x42c4dc
0x42c455:	cmp	edi, 0x11
0x42c458:	jne	0x42c514
0x42c45e:	mov	ecx, dword ptr [rsi]
0x42c460:	cmp	ecx, 1
0x42c463:	jne	0x42c474
0x42c465:	mov	r8, qword ptr [rsi + 8]
0x42c469:	mov	dword ptr [rdx + 8], 1
0x42c470:	mov	qword ptr [rdx], r8
0x42c473:	ret	
0x42c474:	cmp	ecx, 2
0x42c477:	jne	0x42c514
0x42c47d:	mov	rsi, qword ptr [rsi + 8]
0x42c481:	mov	rdi, qword ptr [rip + 0xa0030]
0x42c488:	mov	qword ptr [rdx], rsi
0x42c48b:	mov	qword ptr [rdx + 8], rdi
0x42c48f:	ret	
0x42c490:	mov	edx, dword ptr [rsi]
0x42c492:	cmp	edx, 1
0x42c495:	jne	0x42c4a7
0x42c497:	mov	r8, qword ptr [rsi + 8]
0x42c49b:	mov	dword ptr [rax + 0x18], 1
0x42c4a2:	mov	qword ptr [rax + 0x10], r8
0x42c4a6:	ret	
0x42c4a7:	cmp	edx, 3
0x42c4aa:	jne	0x42c4c0
0x42c4ac:	mov	rsi, qword ptr [rsi + 8]
0x42c4b0:	mov	rdi, qword ptr [rip + 0xa0001]
0x42c4b7:	mov	qword ptr [rax + 0x10], rsi
0x42c4bb:	mov	qword ptr [rax + 0x18], rdi
0x42c4bf:	ret	
0x42c4c0:	cmp	edx, 2
0x42c4c3:	jne	0x42c514
0x42c4c5:	mov	rcx, qword ptr [rsi + 8]
0x42c4c9:	mov	dword ptr [rax + 0x18], 1
0x42c4d0:	mov	dword ptr [rax + 0x20], 1
0x42c4d7:	mov	qword ptr [rax + 0x10], rcx
0x42c4db:	ret	
0x42c4dc:	mov	r9d, dword ptr [rsi]
0x42c4df:	cmp	r9d, 3
0x42c4e3:	je	0x42c4eb
0x42c4e5:	cmp	r9d, 0xa
0x42c4e9:	jne	0x42c4fb
0x42c4eb:	mov	rdx, qword ptr [rsi + 8]
0x42c4ef:	mov	dword ptr [rax + 0x30], 1
0x42c4f6:	mov	qword ptr [rax + 0x28], rdx
0x42c4fa:	ret	
0x42c4fb:	cmp	r9d, 0xc
0x42c4ff:	jne	0x42c514
0x42c501:	mov	r10, qword ptr [rsi + 8]
0x42c505:	mov	r11, qword ptr [rip + 0x9ffac]
0x42c50c:	mov	qword ptr [rdx + 0x28], r10
0x42c510:	mov	qword ptr [rdx + 0x30], r11
0x42c514:	ret	
0x42c515:	endbr64	
0x42c519:	mov	rax, rsi
0x42c51c:	mov	r10, rdx
0x42c51f:	mov	rsi, rcx
0x42c522:	mov	rdx, r8
0x42c525:	mov	rcx, r9
0x42c528:	push	r11
0x42c52a:	mov	r8, qword ptr [rsp + 0x10]
0x42c52f:	mov	r9, qword ptr [rsp + 0x18]
0x42c534:	test	rax, rax
0x42c537:	jne	0x42c548
0x42c539:	mov	dword ptr [r9 + 0x18], 1
0x42c541:	pop	r10
0x42c543:	jmp	0x42b5ac
0x42c548:	lea	rdi, [rdx + rsi]
0x42c54c:	cmp	rdi, r10
0x42c54f:	jbe	0x42c561
0x42c551:	xor	edx, edx
0x42c553:	mov	esi, 0x4cc348
0x42c558:	mov	rdi, r8
0x42c55b:	call	rcx
0x42c55d:	xor	eax, eax
0x42c55f:	jmp	0x42c580
0x42c561:	mov	qword ptr [r9 + 8], 0
0x42c569:	add	rax, rsi
0x42c56c:	mov	qword ptr [r9 + 0x10], rdx
0x42c570:	mov	dword ptr [r9 + 0x18], 0
0x42c578:	mov	qword ptr [r9], rax
0x42c57b:	mov	eax, 1
0x42c580:	pop	rdx
0x42c581:	ret	
0x42c582:	endbr64	
0x42c586:	push	rbx
0x42c587:	mov	rdx, qword ptr [rsi + 8]
0x42c58b:	mov	rbx, rsi
0x42c58e:	lea	rsi, [rdx + 7]
0x42c592:	add	rdx, qword ptr [rbx + 0x10]
0x42c596:	and	rsi, 0xfffffffffffffff8
0x42c59a:	sub	rdx, rsi
0x42c59d:	add	rsi, qword ptr [rbx]
0x42c5a0:	call	0x42c1a8
0x42c5a5:	cmp	qword ptr [rbx + 8], 0
0x42c5aa:	mov	qword ptr [rbx + 0x10], 0
0x42c5b2:	jne	0x42c5bb
0x42c5b4:	mov	qword ptr [rbx], 0
0x42c5bb:	mov	eax, 1
0x42c5c0:	pop	rbx
0x42c5c1:	ret	
0x42c5c2:	endbr64	
0x42c5c6:	mov	r8d, edi
0x42c5c9:	mov	rdi, rsi
0x42c5cc:	test	r8b, r8b
0x42c5cf:	jne	0x42c5db
0x42c5d1:	mov	esi, 0x10
0x42c5d6:	jmp	0x42d6b0
0x42c5db:	shl	rdi, 4
0x42c5df:	mov	esi, 1
0x42c5e4:	jmp	0x42d6b0
0x42c5e9:	endbr64	
0x42c5ed:	push	rbp
0x42c5ee:	mov	r9d, edi
0x42c5f1:	mov	ebp, esi
0x42c5f3:	mov	r8d, 0x4cbe6c
0x42c5f9:	push	rbx
0x42c5fa:	mov	ecx, 0x64
0x42c5ff:	mov	ebx, edx
0x42c601:	mov	esi, 0x64
0x42c606:	mov	edx, 1
0x42c60b:	xor	eax, eax
0x42c60d:	sub	rsp, 0x138
0x42c614:	lea	rdi, [rsp + 4]
0x42c619:	call	0x403820
0x42c61e:	mov	r9d, ebp
0x42c621:	lea	rdi, [rsp + 0x68]
0x42c626:	xor	eax, eax
0x42c628:	mov	r8d, 0x4cc368
0x42c62e:	mov	ecx, 0x64
0x42c633:	mov	edx, 1
0x42c638:	mov	esi, 0x64
0x42c63d:	call	0x403820
0x42c642:	mov	r9d, ebx
0x42c645:	mov	r8d, 0x4cbe86
0x42c64b:	xor	eax, eax
0x42c64d:	mov	ecx, 0x64
0x42c652:	mov	edx, 1
0x42c657:	mov	esi, 0x64
0x42c65c:	lea	rdi, [rsp + 0xcc]
0x42c664:	call	0x403820
0x42c669:	lea	rsi, [rsp + 0x68]
0x42c66e:	xor	ecx, ecx
0x42c670:	xor	eax, eax
0x42c672:	lea	rdx, [rsp + 0xcc]
0x42c67a:	lea	rdi, [rsp + 4]
0x42c67f:	call	0x42d870
0x42c684:	add	rsp, 0x138
0x42c68b:	pop	rbx
0x42c68c:	pop	rbp
0x42c68d:	ret	
0x42c68e:	mov	r8d, 1
0x42c694:	mov	r12d, 1
0x42c69a:	mov	rdi, r12
0x42c69d:	imul	rdi, r8
0x42c6a1:	call	0x42c22d
0x42c6a6:	mov	edx, 0x10
0x42c6ab:	imul	rdx, r12
0x42c6af:	mov	rdi, rdx
0x42c6b2:	call	0x42c22d
0x42c6b7:	mov	r11d, 0x18
0x42c6bd:	mov	rdi, r12
0x42c6c0:	imul	rdi, r11
0x42c6c4:	call	0x42c22d
0x42c6c9:	mov	r8d, 0x18
0x42c6cf:	jmp	0x42c69a
0x42c6d1:	mov	edx, 1
0x42c6d6:	mov	r12d, 1
0x42c6dc:	jmp	0x42c6ab
0x42c6de:	mov	r11d, 1
0x42c6e4:	mov	r12d, 1
0x42c6ea:	jmp	0x42c6bd
0x42c6ec:	endbr64	
0x42c6f0:	push	r12
0x42c6f2:	mov	r9, rdi
0x42c6f5:	mov	rcx, rsi
0x42c6f8:	mov	r8d, 0x4cc388
0x42c6fe:	push	rbp
0x42c6ff:	mov	rsi, rdi
0x42c702:	xor	eax, eax
0x42c704:	push	rdx
0x42c705:	mov	edx, 0x4c6c55
0x42c70a:	push	0
0x42c70c:	push	0x4cbea0
0x42c711:	push	rdi
0x42c712:	mov	edi, 0x4cc3c8
0x42c717:	push	0x4cbea6
0x42c71c:	push	0x4cbeb2
0x42c721:	push	0x4cbeba
0x42c726:	push	0x4cbeb2
0x42c72b:	push	0x4cbed8
0x42c730:	call	0x42d870
0x42c735:	add	rsp, 0x40
0x42c739:	mov	rdi, rax
0x42c73c:	mov	rbp, rax
0x42c73f:	call	0x4039e0
0x42c744:	mov	r12, rax
0x42c747:	mov	rax, qword ptr [rip + 0xb81b2]
0x42c74e:	sub	rax, qword ptr [rip + 0xb81a3]
0x42c755:	cmp	r12, rax
0x42c758:	jbe	0x42c767
0x42c75a:	mov	rsi, r12
0x42c75d:	mov	edi, 0x4e48e0
0x42c762:	call	0x4316f0
0x42c767:	mov	rdi, qword ptr [rip + 0xb818a]
0x42c76e:	mov	rsi, rbp
0x42c771:	mov	rcx, r12
0x42c774:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x42c776:	mov	rdi, rbp
0x42c779:	add	qword ptr [rip + 0xb8178], r12
0x42c780:	pop	rax
0x42c781:	pop	rbp
0x42c782:	pop	r12
0x42c784:	jmp	0x403830
0x42c789:	mov	edi, 8
0x42c78e:	call	0x444450
0x42c793:	mov	rdi, rax
0x42c796:	mov	rbp, rax
0x42c799:	call	0x440400
0x42c79e:	mov	rdx, 0x4403c0
0x42c7a5:	mov	rsi, 0x4e17e0
0x42c7ac:	mov	rdi, rbp
0x42c7af:	call	0x4454a0
0x42c7b4:	mov	edi, 8
0x42c7b9:	call	0x444450
0x42c7be:	mov	rdx, 0x443dc0
0x42c7c5:	mov	rsi, 0x4e18e0
0x42c7cc:	mov	rdi, rax
0x42c7cf:	mov	rax, 0x4e18f8
0x42c7d6:	add	rax, 0x10
0x42c7da:	mov	qword ptr [rdi], rax
0x42c7dd:	call	0x4454a0
0x42c7e2:	endbr64	
0x42c7e6:	push	rax
0x42c7e7:	pop	rax
0x42c7e8:	mov	edi, 8
0x42c7ed:	push	rax
0x42c7ee:	call	0x444450
0x42c7f3:	mov	rdx, 0x444710
0x42c7fa:	mov	rsi, 0x4e1ae0
0x42c801:	mov	rdi, rax
0x42c804:	mov	rax, 0x4e1b40
0x42c80b:	add	rax, 0x10
0x42c80f:	mov	qword ptr [rdi], rax
0x42c812:	call	0x4454a0
0x42c817:	endbr64	
0x42c81b:	push	rax
0x42c81c:	pop	rax
0x42c81d:	mov	edi, 8
0x42c822:	push	rax
0x42c823:	call	0x444450
0x42c828:	mov	rdx, 0x443dc0
0x42c82f:	mov	rsi, 0x4e18e0
0x42c836:	mov	rdi, rax
0x42c839:	mov	rax, 0x4e18f8
0x42c840:	add	rax, 0x10
0x42c844:	mov	qword ptr [rdi], rax
0x42c847:	call	0x4454a0
0x42c84c:	endbr64	
0x42c850:	push	rax
0x42c851:	pop	rax
0x42c852:	mov	edi, 8
0x42c857:	push	rax
0x42c858:	call	0x444450
0x42c85d:	mov	rdx, 0x443e10
0x42c864:	mov	rsi, 0x4e1920
0x42c86b:	mov	rdi, rax
0x42c86e:	mov	rax, 0x4e1938
0x42c875:	add	rax, 0x10
0x42c879:	mov	qword ptr [rdi], rax
0x42c87c:	call	0x4454a0
0x42c881:	endbr64	
0x42c885:	push	rax
0x42c886:	pop	rax
0x42c887:	mov	edi, 8
0x42c88c:	push	rax
0x42c88d:	call	0x444450
0x42c892:	mov	rdx, 0x443e60
0x42c899:	mov	rsi, 0x4e1960
0x42c8a0:	mov	rdi, rax
0x42c8a3:	mov	rax, 0x4e1978
0x42c8aa:	add	rax, 0x10
0x42c8ae:	mov	qword ptr [rdi], rax
0x42c8b1:	call	0x4454a0
0x42c8b6:	endbr64	
0x42c8ba:	push	rax
0x42c8bb:	pop	rax
0x42c8bc:	mov	edi, 8
0x42c8c1:	push	rax
0x42c8c2:	call	0x444450
0x42c8c7:	mov	rdx, 0x443eb0
0x42c8ce:	mov	rsi, 0x4e19a0
0x42c8d5:	mov	rdi, rax
0x42c8d8:	mov	rax, 0x4e19b8
0x42c8df:	add	rax, 0x10
0x42c8e3:	mov	qword ptr [rdi], rax
0x42c8e6:	call	0x4454a0
0x42c8eb:	endbr64	
0x42c8ef:	push	r12
0x42c8f1:	mov	r12, rdi
0x42c8f4:	mov	edi, 0x10
0x42c8f9:	push	rbp
0x42c8fa:	push	rax
0x42c8fb:	call	0x444450
0x42c900:	mov	rdi, r12
0x42c903:	mov	rbp, rax
0x42c906:	call	0x403a20
0x42c90b:	mov	rdi, rbp
0x42c90e:	mov	rsi, rax
0x42c911:	call	0x445ee0
0x42c916:	mov	rdx, 0x4456c0
0x42c91d:	mov	rsi, 0x4e1bb8
0x42c924:	mov	rdi, rbp
0x42c927:	call	0x4454a0
0x42c92c:	endbr64	
0x42c930:	mov	r12, rax
0x42c933:	mov	rdi, rbp
0x42c936:	call	0x4444b0
0x42c93b:	mov	rdi, r12
0x42c93e:	call	0x457dd0
0x42c943:	endbr64	
0x42c947:	push	r12
0x42c949:	mov	r12, rdi
0x42c94c:	mov	edi, 0x10
0x42c951:	push	rbp
0x42c952:	push	rax
0x42c953:	call	0x444450
0x42c958:	mov	rdi, r12
0x42c95b:	mov	rbp, rax
0x42c95e:	call	0x403a20
0x42c963:	mov	rdi, rbp
0x42c966:	mov	rsi, rax
0x42c969:	call	0x445fe0
0x42c96e:	mov	rdx, 0x445780
0x42c975:	mov	rsi, 0x4e1bd0
0x42c97c:	mov	rdi, rbp
0x42c97f:	call	0x4454a0
0x42c984:	endbr64	
0x42c988:	mov	r12, rax
0x42c98b:	mov	rdi, rbp
0x42c98e:	call	0x4444b0
0x42c993:	mov	rdi, r12
0x42c996:	call	0x457dd0
0x42c99b:	endbr64	
0x42c99f:	push	r12
0x42c9a1:	mov	r12, rdi
0x42c9a4:	mov	edi, 0x10
0x42c9a9:	push	rbp
0x42c9aa:	push	rax
0x42c9ab:	call	0x444450
0x42c9b0:	mov	rdi, r12
0x42c9b3:	mov	rbp, rax
0x42c9b6:	call	0x403a20
0x42c9bb:	mov	rdi, rbp
0x42c9be:	mov	rsi, rax
0x42c9c1:	call	0x446000
0x42c9c6:	mov	rdx, 0x4457c0
0x42c9cd:	mov	rsi, 0x4e1be8
0x42c9d4:	mov	rdi, rbp
0x42c9d7:	call	0x4454a0
0x42c9dc:	endbr64	
0x42c9e0:	mov	r12, rax
0x42c9e3:	mov	rdi, rbp
0x42c9e6:	call	0x4444b0
0x42c9eb:	mov	rdi, r12
0x42c9ee:	call	0x457dd0
0x42c9f3:	endbr64	
0x42c9f7:	push	r12
0x42c9f9:	mov	r12, rdi
0x42c9fc:	mov	edi, 0x10
0x42ca01:	push	rbp
0x42ca02:	push	rax
0x42ca03:	call	0x444450
0x42ca08:	mov	rdi, r12
0x42ca0b:	mov	rbp, rax
0x42ca0e:	call	0x403a20
0x42ca13:	mov	rdi, rbp
0x42ca16:	mov	rsi, rax
0x42ca19:	call	0x446020
0x42ca1e:	mov	rdx, 0x445800
0x42ca25:	mov	rsi, 0x4e1c00
0x42ca2c:	mov	rdi, rbp
0x42ca2f:	call	0x4454a0
0x42ca34:	endbr64	
0x42ca38:	mov	r12, rax
0x42ca3b:	mov	rdi, rbp
0x42ca3e:	call	0x4444b0
0x42ca43:	mov	rdi, r12
0x42ca46:	call	0x457dd0
0x42ca4b:	endbr64	
0x42ca4f:	push	r12
0x42ca51:	mov	r12, rdi
0x42ca54:	mov	edi, 0x10
0x42ca59:	push	rbp
0x42ca5a:	push	rax
0x42ca5b:	call	0x444450
0x42ca60:	mov	rdi, r12
0x42ca63:	mov	rbp, rax
0x42ca66:	call	0x403a20
0x42ca6b:	mov	rdi, rbp
0x42ca6e:	mov	rsi, rax
0x42ca71:	call	0x446040
0x42ca76:	mov	rdx, 0x445840
0x42ca7d:	mov	rsi, 0x4e1c18
0x42ca84:	mov	rdi, rbp
0x42ca87:	call	0x4454a0
0x42ca8c:	endbr64	
0x42ca90:	mov	r12, rax
0x42ca93:	mov	rdi, rbp
0x42ca96:	call	0x4444b0
0x42ca9b:	mov	rdi, r12
0x42ca9e:	call	0x457dd0
0x42caa3:	mov	rdx, 0x445840
0x42caaa:	mov	rsi, 0x4e1c18
0x42cab1:	mov	rdi, r12
0x42cab4:	call	0x4454a0
0x42cab9:	mov	rdi, r12
0x42cabc:	call	0x4444b0
0x42cac1:	mov	rdi, r13
0x42cac4:	call	0x457dd0
0x42cac9:	endbr64	
0x42cacd:	push	r12
0x42cacf:	mov	r12, rdi
0x42cad2:	mov	edi, 0x10
0x42cad7:	push	rbp
0x42cad8:	push	rax
0x42cad9:	call	0x444450
0x42cade:	mov	rdi, r12
0x42cae1:	mov	rbp, rax
0x42cae4:	call	0x403a20
0x42cae9:	mov	rdi, rbp
0x42caec:	mov	rsi, rax
0x42caef:	call	0x446060
0x42caf4:	mov	rdx, 0x445880
0x42cafb:	mov	rsi, 0x4e1c30
0x42cb02:	mov	rdi, rbp
0x42cb05:	call	0x4454a0
0x42cb0a:	endbr64	
0x42cb0e:	mov	r12, rax
0x42cb11:	mov	rdi, rbp
0x42cb14:	call	0x4444b0
0x42cb19:	mov	rdi, r12
0x42cb1c:	call	0x457dd0
0x42cb21:	endbr64	
0x42cb25:	push	r12
0x42cb27:	mov	r12, rdi
0x42cb2a:	mov	edi, 0x10
0x42cb2f:	push	rbp
0x42cb30:	push	rax
0x42cb31:	call	0x444450
0x42cb36:	mov	rdi, r12
0x42cb39:	mov	rbp, rax
0x42cb3c:	call	0x403a20
0x42cb41:	mov	rdi, rbp
0x42cb44:	mov	rsi, rax
0x42cb47:	call	0x446160
0x42cb4c:	mov	rdx, 0x445940
0x42cb53:	mov	rsi, 0x4e1c48
0x42cb5a:	mov	rdi, rbp
0x42cb5d:	call	0x4454a0
0x42cb62:	endbr64	
0x42cb66:	mov	r12, rax
0x42cb69:	mov	rdi, rbp
0x42cb6c:	call	0x4444b0
0x42cb71:	mov	rdi, r12
0x42cb74:	call	0x457dd0
0x42cb79:	endbr64	
0x42cb7d:	push	r12
0x42cb7f:	mov	r12, rdi
0x42cb82:	mov	edi, 0x10
0x42cb87:	push	rbp
0x42cb88:	push	rax
0x42cb89:	call	0x444450
0x42cb8e:	mov	rdi, r12
0x42cb91:	mov	rbp, rax
0x42cb94:	call	0x403a20
0x42cb99:	mov	rdi, rbp
0x42cb9c:	mov	rsi, rax
0x42cb9f:	call	0x446180
0x42cba4:	mov	rdx, 0x445980
0x42cbab:	mov	rsi, 0x4e1c60
0x42cbb2:	mov	rdi, rbp
0x42cbb5:	call	0x4454a0
0x42cbba:	endbr64	
0x42cbbe:	mov	r12, rax
0x42cbc1:	mov	rdi, rbp
0x42cbc4:	call	0x4444b0
0x42cbc9:	mov	rdi, r12
0x42cbcc:	call	0x457dd0
0x42cbd1:	endbr64	
0x42cbd5:	push	r12
0x42cbd7:	mov	r12, rdi
0x42cbda:	mov	edi, 0x10
0x42cbdf:	push	rbp
0x42cbe0:	push	rax
0x42cbe1:	call	0x444450
0x42cbe6:	mov	rdi, r12
0x42cbe9:	mov	rbp, rax
0x42cbec:	call	0x403a20
0x42cbf1:	mov	rdi, rbp
0x42cbf4:	mov	rsi, rax
0x42cbf7:	call	0x4461a0
0x42cbfc:	mov	rdx, 0x4459c0
0x42cc03:	mov	rsi, 0x4e1c78
0x42cc0a:	mov	rdi, rbp
0x42cc0d:	call	0x4454a0
0x42cc12:	endbr64	
0x42cc16:	mov	r12, rax
0x42cc19:	mov	rdi, rbp
0x42cc1c:	call	0x4444b0
0x42cc21:	mov	rdi, r12
0x42cc24:	call	0x457dd0
0x42cc29:	endbr64	
0x42cc2d:	push	rax
0x42cc2e:	pop	rax
0x42cc2f:	mov	edi, 8
0x42cc34:	push	rax
0x42cc35:	call	0x444450
0x42cc3a:	mov	rdx, 0x4441a0
0x42cc41:	mov	rsi, 0x4e1a50
0x42cc48:	mov	rdi, rax
0x42cc4b:	mov	rax, 0x4e1a80
0x42cc52:	add	rax, 0x10
0x42cc56:	mov	qword ptr [rdi], rax
0x42cc59:	call	0x4454a0
0x42cc5e:	endbr64	
0x42cc62:	push	rax
0x42cc63:	pop	rax
0x42cc64:	mov	edi, 8
0x42cc69:	push	rax
0x42cc6a:	call	0x444450
0x42cc6f:	mov	rdx, 0x4441c0
0x42cc76:	mov	rsi, 0x4e1a68
0x42cc7d:	mov	rdi, rax
0x42cc80:	mov	rax, 0x4e1aa8
0x42cc87:	add	rax, 0x10
0x42cc8b:	mov	qword ptr [rdi], rax
0x42cc8e:	call	0x4454a0
0x42cc93:	nop	
0x42cc94:	call	0x42cc5e
0x42cc99:	call	0x42cc29
0x42cc9e:	call	0x42cc29
0x42cca3:	call	0x42cc5e
0x42cca8:	push	rax
0x42cca9:	call	0x403880
0x42ccae:	call	0x403880
0x42ccb3:	push	rax
0x42ccb4:	call	0x403880
0x42ccb9:	call	0x4445b0
0x42ccbe:	call	0x445370
0x42ccc3:	call	0x4445b0
0x42ccc8:	call	0x444830
0x42cccd:	mov	rbx, qword ptr [rax]
0x42ccd0:	test	byte ptr [rbx + 0x50], 1
0x42ccd4:	je	0x42cd47
0x42ccd6:	mov	rbx, qword ptr [rbx]
0x42ccd9:	mov	r14, rsp
0x42ccdc:	mov	rsi, r13
0x42ccdf:	xor	edi, edi
0x42cce1:	mov	rdx, r14
0x42cce4:	call	0x444c00
0x42cce9:	movsxd	r13, ebp
0x42ccec:	mov	rsi, qword ptr [rbx - 0x70]
0x42ccf0:	mov	rdx, rbx
0x42ccf3:	mov	rdi, r14
0x42ccf6:	mov	rcx, r13
0x42ccf9:	call	0x444b00
0x42ccfe:	test	al, al
0x42cd00:	jne	0x42cd66
0x42cd02:	mov	rbp, 0x4e1ae0
0x42cd09:	mov	rcx, r13
0x42cd0c:	xor	edx, edx
0x42cd0e:	mov	rdi, r14
0x42cd11:	mov	rsi, rbp
0x42cd14:	call	0x444b00
0x42cd19:	test	al, al
0x42cd1b:	je	0x42cd6b
0x42cd1d:	mov	edi, 8
0x42cd22:	call	0x444450
0x42cd27:	mov	rdx, 0x444710
0x42cd2e:	mov	rsi, rbp
0x42cd31:	mov	rdi, rax
0x42cd34:	mov	rax, 0x4e1b40
0x42cd3b:	add	rax, 0x10
0x42cd3f:	mov	qword ptr [rdi], rax
0x42cd42:	call	0x4454a0
0x42cd47:	add	rbx, 0x70
0x42cd4b:	jmp	0x42ccd9
0x42cd4d:	endbr64	
0x42cd51:	mov	rbp, rax
0x42cd54:	call	0x444620
0x42cd59:	call	0x444620
0x42cd5e:	mov	rdi, rbp
0x42cd61:	call	0x457dd0
0x42cd66:	call	0x4454f0
0x42cd6b:	mov	rdi, r12
0x42cd6e:	call	0x445310
0x42cd73:	call	0x4445b0
0x42cd78:	call	0x403880
0x42cd7d:	nop	
0x42cd7e:	endbr64	
0x42cd82:	mov	rdi, rax
0x42cd85:	mov	rax, rdx
0x42cd88:	sub	rax, 1
0x42cd8c:	jne	0x42cde7
0x42cd8e:	call	0x4445b0
0x42cd93:	mov	rdi, rax
0x42cd96:	mov	rax, qword ptr [rax]
0x42cd99:	call	qword ptr [rax + 0x10]
0x42cd9c:	mov	rcx, qword ptr [rbx]
0x42cd9f:	mov	edx, 0xb
0x42cda4:	mov	esi, 1
0x42cda9:	lea	rdi, [rip + 0x9fc4a]
0x42cdb0:	mov	rbp, rax
0x42cdb3:	call	0x403e80
0x42cdb8:	mov	rsi, qword ptr [rbx]
0x42cdbb:	mov	rdi, rbp
0x42cdbe:	call	0x403aa0
0x42cdc3:	mov	rsi, qword ptr [rbx]
0x42cdc6:	mov	edi, 0xa
0x42cdcb:	call	0x403b30
0x42cdd0:	call	0x444620
0x42cdd5:	call	0x403880
0x42cdda:	mov	rdi, r12
0x42cddd:	call	0x403830
0x42cde2:	call	0x4454f0
0x42cde7:	call	0x4445b0
0x42cdec:	call	0x444620
0x42cdf1:	jmp	0x42cdd5
0x42cdf3:	endbr64	
0x42cdf7:	mov	rbp, rax
0x42cdfa:	call	0x444620
0x42cdff:	mov	rdi, rbp
0x42ce02:	call	0x457dd0
0x42ce07:	nop	
0x42ce08:	mov	rdi, rbp
0x42ce0b:	call	0x444700
0x42ce10:	mov	rdi, r12
0x42ce13:	call	0x457dd0
0x42ce18:	mov	rdi, rbp
0x42ce1b:	call	0x444700
0x42ce20:	mov	rdi, r12
0x42ce23:	call	0x457dd0
0x42ce28:	mov	rdi, r12
0x42ce2b:	call	0x444700
0x42ce30:	mov	rdi, rbp
0x42ce33:	call	0x457dd0
0x42ce38:	mov	rdi, r12
0x42ce3b:	call	0x444700
0x42ce40:	mov	rdi, rbp
0x42ce43:	call	0x457dd0
0x42ce48:	mov	rdi, rbp
0x42ce4b:	call	0x448480
0x42ce50:	mov	rdi, r12
0x42ce53:	call	0x457dd0
0x42ce58:	call	0x4445b0
0x42ce5d:	call	0x4454f0
0x42ce62:	endbr64	
0x42ce66:	mov	rbp, rax
0x42ce69:	call	0x444620
0x42ce6e:	mov	rdi, rbp
0x42ce71:	call	0x457dd0
0x42ce76:	mov	rdi, rbp
0x42ce79:	call	0x4456c0
0x42ce7e:	mov	rdi, r12
0x42ce81:	call	0x457dd0
0x42ce86:	mov	rdi, rbp
0x42ce89:	call	0x4456c0
0x42ce8e:	mov	rdi, r12
0x42ce91:	call	0x457dd0
0x42ce96:	mov	rdi, rbp
0x42ce99:	call	0x445780
0x42ce9e:	mov	rdi, r12
0x42cea1:	call	0x457dd0
0x42cea6:	mov	rdi, rbp
0x42cea9:	call	0x445780
0x42ceae:	mov	rdi, r12
0x42ceb1:	call	0x457dd0
0x42ceb6:	mov	rdi, rbp
0x42ceb9:	call	0x4457c0
0x42cebe:	mov	rdi, r12
0x42cec1:	call	0x457dd0
0x42cec6:	mov	rdi, rbp
0x42cec9:	call	0x4457c0
0x42cece:	mov	rdi, r12
0x42ced1:	call	0x457dd0
0x42ced6:	mov	rdi, rbp
0x42ced9:	call	0x445800
0x42cede:	mov	rdi, r12
0x42cee1:	call	0x457dd0
0x42cee6:	mov	rdi, rbp
0x42cee9:	call	0x445800
0x42ceee:	mov	rdi, r12
0x42cef1:	call	0x457dd0
0x42cef6:	mov	rdi, rbp
0x42cef9:	call	0x445840
0x42cefe:	mov	rdi, r12
0x42cf01:	call	0x457dd0
0x42cf06:	mov	rdi, rbp
0x42cf09:	call	0x445840
0x42cf0e:	mov	rdi, r12
0x42cf11:	call	0x457dd0
0x42cf16:	mov	rdi, rbp
0x42cf19:	call	0x445880
0x42cf1e:	mov	rdi, r12
0x42cf21:	call	0x457dd0
0x42cf26:	mov	rdi, rbp
0x42cf29:	call	0x445880
0x42cf2e:	mov	rdi, r12
0x42cf31:	call	0x457dd0
0x42cf36:	mov	rdi, rbp
0x42cf39:	call	0x445940
0x42cf3e:	mov	rdi, r12
0x42cf41:	call	0x457dd0
0x42cf46:	mov	rdi, rbp
0x42cf49:	call	0x445940
0x42cf4e:	mov	rdi, r12
0x42cf51:	call	0x457dd0
0x42cf56:	mov	rdi, rbp
0x42cf59:	call	0x445980
0x42cf5e:	mov	rdi, r12
0x42cf61:	call	0x457dd0
0x42cf66:	mov	rdi, rbp
0x42cf69:	call	0x445980
0x42cf6e:	mov	rdi, r12
0x42cf71:	call	0x457dd0
0x42cf76:	mov	rdi, rbp
0x42cf79:	call	0x4459c0
0x42cf7e:	mov	rdi, r12
0x42cf81:	call	0x457dd0
0x42cf86:	mov	rdi, rbp
0x42cf89:	call	0x4459c0
0x42cf8e:	mov	rdi, r12
0x42cf91:	call	0x457dd0
0x42cf96:	mov	rdi, qword ptr [rsp]
0x42cf9a:	cmp	rdi, rbp
0x42cf9d:	je	0x42cfa4
0x42cf9f:	call	0x444170
0x42cfa4:	mov	rdi, r12
0x42cfa7:	call	0x457dd0
0x42cfac:	mov	rdi, qword ptr [rsp]
0x42cfb0:	cmp	rdi, rbx
0x42cfb3:	je	0x42cfba
0x42cfb5:	call	0x444170
0x42cfba:	mov	rdi, rbp
0x42cfbd:	call	0x457dd0
0x42cfc2:	mov	dword ptr [0], 0
0x42cfcd:	ud2	
0x42cfcf:	mov	rax, qword ptr [0x10]
0x42cfd7:	ud2	
0x42cfd9:	mov	rax, qword ptr [0x10]
0x42cfe1:	ud2	
0x42cfe3:	mov	rax, qword ptr [0x10]
0x42cfeb:	ud2	
0x42cfed:	mov	rax, qword ptr [0x10]
0x42cff5:	ud2	
0x42cff7:	mov	rax, qword ptr [0x10]
0x42cfff:	ud2	
0x42d001:	mov	rax, qword ptr [0x10]
0x42d009:	ud2	
0x42d00b:	mov	rax, qword ptr [0x10]
0x42d013:	ud2	
0x42d015:	mov	rax, qword ptr [0x10]
0x42d01d:	ud2	
0x42d01f:	mov	rax, qword ptr [0x10]
0x42d027:	ud2	
0x42d029:	call	0x403880
0x42d02e:	call	0x403880
0x42d033:	call	0x403880
0x42d038:	call	0x403880
0x42d03d:	call	0x403880
0x42d042:	call	0x403880
0x42d047:	call	0x403880
0x42d04c:	call	0x403880
0x42d051:	call	0x403880
0x42d056:	call	0x403880
0x42d05b:	call	0x403880
0x42d060:	push	rax
0x42d061:	call	0x403880
0x42d066:	push	rax
0x42d067:	call	0x403880
0x42d06c:	call	0x403880
0x42d071:	call	0x403880
0x42d076:	call	0x403880
0x42d07b:	call	0x403880
0x42d080:	push	rax
0x42d081:	call	0x403880
0x42d086:	call	0x403880
0x42d08b:	call	0x403880
0x42d090:	call	0x403880
0x42d095:	call	0x403880
0x42d09a:	call	0x403880
0x42d09f:	call	0x403880
0x42d0a4:	call	0x403880
0x42d0a9:	call	0x403880
0x42d0ae:	call	0x403880
0x42d0b3:	nop	word ptr cs:[rax + rax]
0x42d0bd:	nop	dword ptr [rax]
0x42d0c0:	endbr64	
0x42d0c4:	push	r12
0x42d0c6:	mov	edi, 0x30
0x42d0cb:	push	rbp
0x42d0cc:	push	rbx
0x42d0cd:	mov	qword ptr [rip + 0xb8fb0], 0
0x42d0d8:	call	0x440420
0x42d0dd:	xor	ecx, ecx
0x42d0df:	pxor	xmm0, xmm0
0x42d0e3:	mov	edi, 0xd
0x42d0e8:	mov	qword ptr [rax + 0x20], 0
0x42d0f0:	mov	rbx, rax
0x42d0f3:	mov	word ptr [rax + 0x2c], cx
0x42d0f7:	movups	xmmword ptr [rax + 0x10], xmm0
0x42d0fb:	call	0x42d5a0
0x42d100:	mov	ebp, eax
0x42d102:	mov	eax, eax
0x42d104:	shl	rax, 4
0x42d108:	mov	r12d, dword ptr [rax + 0x4be180]
0x42d10f:	test	r12, r12
0x42d112:	je	0x42d4b7
0x42d118:	mov	esi, 0x10
0x42d11d:	mov	rdi, r12
0x42d120:	call	0x403bc0
0x42d125:	test	rax, rax
0x42d128:	je	0x42d50e
0x42d12e:	mov	qword ptr [rbx + 8], r12
0x42d132:	mov	edi, 0x30
0x42d137:	mov	dword ptr [rbx + 0x28], ebp
0x42d13a:	mov	qword ptr [rbx], rax
0x42d13d:	mov	qword ptr [rip + 0xb93e4], rbx
0x42d144:	call	0x440420
0x42d149:	xor	esi, esi
0x42d14b:	pxor	xmm1, xmm1
0x42d14f:	mov	edi, 0xd
0x42d154:	mov	qword ptr [rax + 0x20], 0
0x42d15c:	mov	rbx, rax
0x42d15f:	mov	word ptr [rax + 0x2c], si
0x42d163:	movups	xmmword ptr [rax + 0x10], xmm1
0x42d167:	call	0x42d5a0
0x42d16c:	mov	edi, eax
0x42d16e:	mov	ebp, eax
0x42d170:	shl	rdi, 4
0x42d174:	mov	r12d, dword ptr [rdi + 0x4be180]
0x42d17b:	test	r12, r12
0x42d17e:	je	0x42d4f1
0x42d184:	mov	esi, 0x18
0x42d189:	mov	rdi, r12
0x42d18c:	call	0x403bc0
0x42d191:	test	rax, rax
0x42d194:	je	0x42d518
0x42d19a:	mov	qword ptr [rbx + 8], r12
0x42d19e:	mov	edi, 0x30
0x42d1a3:	mov	dword ptr [rbx + 0x28], ebp
0x42d1a6:	mov	qword ptr [rbx], rax
0x42d1a9:	mov	qword ptr [rip + 0xb9380], rbx
0x42d1b0:	call	0x440420
0x42d1b5:	xor	r9d, r9d
0x42d1b8:	pxor	xmm2, xmm2
0x42d1bc:	mov	edi, 0xd
0x42d1c1:	mov	qword ptr [rax + 0x20], 0
0x42d1c9:	mov	rbx, rax
0x42d1cc:	mov	word ptr [rax + 0x2c], r9w
0x42d1d1:	movups	xmmword ptr [rax + 0x10], xmm2
0x42d1d5:	call	0x42d5a0
0x42d1da:	mov	r10d, eax
0x42d1dd:	mov	ebp, eax
0x42d1df:	shl	r10, 4
0x42d1e3:	mov	r12d, dword ptr [r10 + 0x4be180]
0x42d1ea:	test	r12, r12
0x42d1ed:	je	0x42d4d4
0x42d1f3:	mov	esi, 0x18
0x42d1f8:	mov	rdi, r12
0x42d1fb:	call	0x403bc0
0x42d200:	test	rax, rax
0x42d203:	je	0x42d513
0x42d209:	mov	qword ptr [rbx + 8], r12
0x42d20d:	mov	edx, 0x4e2408
0x42d212:	mov	esi, 0x4e6500
0x42d217:	mov	edi, 0x43c2e0
0x42d21c:	mov	dword ptr [rbx + 0x28], ebp
0x42d21f:	mov	qword ptr [rbx], rax
0x42d222:	mov	qword ptr [rip + 0xb92d7], rbx
0x42d229:	call	0x403e30
0x42d22e:	mov	rcx, qword ptr [rip + 0xb53ab]
0x42d235:	mov	rax, qword ptr [rip + 0xb5344]
0x42d23c:	mov	rdx, qword ptr [rip + 0xb5335]
0x42d243:	mov	rsi, qword ptr [rip + 0xb538e]
0x42d24a:	mov	r8, qword ptr [rip + 0xb5317]
0x42d251:	mov	rbx, qword ptr [rip + 0xb5378]
0x42d258:	mov	qword ptr [rip + 0xb53c9], rcx
0x42d25f:	mov	r9, qword ptr [rip + 0xb52fa]
0x42d266:	mov	rbp, qword ptr [rip + 0xb52eb]
0x42d26d:	mov	qword ptr [rip + 0xb53e4], rax
0x42d274:	mov	r10, qword ptr [rip + 0xb52d5]
0x42d27b:	mov	r12, qword ptr [rip + 0xb52c6]
0x42d282:	mov	qword ptr [rip + 0xb53ff], rdx
0x42d289:	mov	r11, qword ptr [rip + 0xb5360]
0x42d290:	mov	rcx, qword ptr [rip + 0xb52a9]
0x42d297:	mov	qword ptr [rip + 0xb541a], rsi
0x42d29e:	mov	rax, qword ptr [rip + 0xb5343]
0x42d2a5:	mov	rdx, qword ptr [rip + 0xb528c]
0x42d2ac:	mov	qword ptr [rip + 0xb5465], r8
0x42d2b3:	mov	rsi, qword ptr [rip + 0xb5276]
0x42d2ba:	mov	rdi, qword ptr [rip + 0xb52af]
0x42d2c1:	mov	qword ptr [rip + 0xb5480], rbx
0x42d2c8:	mov	qword ptr [rip + 0xb54a9], r9
0x42d2cf:	mov	qword ptr [rip + 0xb54d2], rbp
0x42d2d6:	mov	qword ptr [rip + 0xb54fb], r10
0x42d2dd:	mov	qword ptr [rip + 0xb5524], r12
0x42d2e4:	mov	qword ptr [rip + 0xb554d], r11
0x42d2eb:	mov	qword ptr [rip + 0xb5576], rcx
0x42d2f2:	mov	qword ptr [rip + 0xb559f], rax
0x42d2f9:	mov	qword ptr [rip + 0xb55c8], rdx
0x42d300:	mov	qword ptr [rip + 0xb55f1], rsi
0x42d307:	mov	qword ptr [rip + 0xb53da], rdi
0x42d30e:	mov	rdi, qword ptr [rip + 0xb5213]
0x42d315:	mov	r8, qword ptr [rip + 0xb52ac]
0x42d31c:	mov	rbx, qword ptr [rip + 0xb5135]
0x42d323:	mov	r9, qword ptr [rip + 0xb5296]
0x42d32a:	mov	r10, qword ptr [rip + 0xb5287]
0x42d331:	mov	qword ptr [rip + 0xb55f0], rdi
0x42d338:	mov	r12, qword ptr [rip + 0xb5271]
0x42d33f:	mov	r11, qword ptr [rip + 0xb512a]
0x42d346:	mov	qword ptr [rip + 0xb560b], r8
0x42d34d:	mov	rcx, qword ptr [rip + 0xb5f1c]
0x42d354:	mov	rax, qword ptr [rip + 0xb7665]
0x42d35b:	mov	qword ptr [rip + 0xb5626], rbx
0x42d362:	mov	rdx, qword ptr [rip + 0xb75cf]
0x42d369:	mov	rsi, qword ptr [rip + 0xb5128]
0x42d370:	mov	qword ptr [rip + 0xb5641], r9
0x42d377:	mov	rdi, qword ptr [rip + 0xb75ca]
0x42d37e:	mov	r8, qword ptr [rip + 0xb7633]
0x42d385:	mov	qword ptr [rip + 0xb568c], r10
0x42d38c:	mov	rbx, qword ptr [rip + 0xb5215]
0x42d393:	mov	r9, qword ptr [rip + 0xb75a6]
0x42d39a:	mov	qword ptr [rip + 0xb56a7], r12
0x42d3a1:	mov	rbp, qword ptr [rip + 0xb5178]
0x42d3a8:	mov	qword ptr [rip + 0xb56c9], r11
0x42d3af:	mov	qword ptr [rip + 0xb56f2], rcx
0x42d3b6:	mov	qword ptr [rip + 0xb571b], rax
0x42d3bd:	mov	qword ptr [rip + 0xb5744], rdx
0x42d3c4:	mov	qword ptr [rip + 0xb576d], rsi
0x42d3cb:	mov	qword ptr [rip + 0xb5796], rdi
0x42d3d2:	mov	qword ptr [rip + 0xb57bf], r8
0x42d3d9:	mov	qword ptr [rip + 0xb57e8], rbx
0x42d3e0:	mov	qword ptr [rip + 0xb5811], r9
0x42d3e7:	mov	qword ptr [rip + 0xb55fa], rbp
0x42d3ee:	mov	rbp, qword ptr [rip + 0xb51ab]
0x42d3f5:	mov	r10, qword ptr [rip + 0xb519c]
0x42d3fc:	mov	r12, qword ptr [rip + 0xb508d]
0x42d403:	mov	rbx, qword ptr [rip + 0xb50fe]
0x42d40a:	mov	qword ptr [rip + 0xb5817], rbp
0x42d411:	mov	qword ptr [rip + 0xb5840], r10
0x42d418:	mov	rbp, qword ptr [rip + 0xb5081]
0x42d41f:	mov	r11, qword ptr [rip + 0xb516a]
0x42d426:	mov	rcx, qword ptr [rip + 0xb50eb]
0x42d42d:	mov	qword ptr [rip + 0xb5854], r12
0x42d434:	mov	rax, qword ptr [rip + 0xb50d5]
0x42d43b:	mov	rdx, qword ptr [rip + 0xb5026]
0x42d442:	mov	qword ptr [rip + 0xb59bf], rbx
0x42d449:	mov	rsi, qword ptr [rip + 0xb4ff8]
0x42d450:	mov	rdi, qword ptr [rip + 0xb4fe9]
0x42d457:	mov	qword ptr [rip + 0xb5a0a], rbp
0x42d45e:	mov	r8, qword ptr [rip + 0xb4feb]
0x42d465:	mov	r9, qword ptr [rip + 0xb4ff4]
0x42d46c:	mov	qword ptr [rip + 0xb5845], r11
0x42d473:	mov	r10, qword ptr [rip + 0xb5086]
0x42d47a:	pop	rbx
0x42d47b:	mov	qword ptr [rip + 0xb5866], rcx
0x42d482:	pop	rbp
0x42d483:	mov	qword ptr [rip + 0xb588e], rax
0x42d48a:	mov	qword ptr [rip + 0xb58b7], rdx
0x42d491:	pop	r12
0x42d493:	mov	qword ptr [rip + 0xb58de], rsi
0x42d49a:	mov	qword ptr [rip + 0xb5907], rdi
0x42d4a1:	mov	qword ptr [rip + 0xb5930], r8
0x42d4a8:	mov	qword ptr [rip + 0xb5989], r9
0x42d4af:	mov	qword ptr [rip + 0xb59e2], r10
0x42d4b6:	ret	
0x42d4b7:	mov	esi, 1
0x42d4bc:	mov	edi, 1
0x42d4c1:	call	0x403bc0
0x42d4c6:	test	rax, rax
0x42d4c9:	jne	0x42d12e
0x42d4cf:	jmp	0x42c6d1
0x42d4d4:	mov	esi, 1
0x42d4d9:	mov	edi, 1
0x42d4de:	call	0x403bc0
0x42d4e3:	test	rax, rax
0x42d4e6:	jne	0x42d209
0x42d4ec:	jmp	0x42c6de
0x42d4f1:	mov	esi, 1
0x42d4f6:	mov	edi, 1
0x42d4fb:	call	0x403bc0
0x42d500:	test	rax, rax
0x42d503:	jne	0x42d19a
0x42d509:	jmp	0x42c68e
0x42d50e:	jmp	0x42c6a6
0x42d513:	jmp	0x42c6b7
0x42d518:	jmp	0x42c6c9
0x42d51d:	nop	dword ptr [rax]
0x42d520:	endbr64	
0x42d524:	sub	rsp, 8
0x42d528:	pxor	xmm0, xmm0
0x42d52c:	mov	edi, 0x11c00
0x42d531:	mov	qword ptr [rip + 0xb9024], 0
0x42d53c:	mov	qword ptr [rip + 0xb9031], 0x11c00
0x42d547:	movaps	xmmword ptr [rip + 0xb8ff2], xmm0
0x42d54e:	movaps	xmmword ptr [rip + 0xb8ffb], xmm0
0x42d555:	call	0x403ca0
0x42d55a:	mov	qword ptr [rip + 0xb900f], rax
0x42d561:	test	rax, rax
0x42d564:	je	0x42d581
0x42d566:	mov	qword ptr [rip + 0xb8ffb], rax
0x42d56d:	mov	qword ptr [rax], 0x11c00
0x42d574:	mov	qword ptr [rax + 8], 0
0x42d57c:	add	rsp, 8
0x42d580:	ret	
0x42d581:	mov	qword ptr [rip + 0xb8fec], 0
0x42d58c:	mov	qword ptr [rip + 0xb8fd1], 0
0x42d597:	jmp	0x42d57c
0x42d599:	nop	dword ptr [rax]
0x42d5a0:	endbr64	
0x42d5a4:	mov	rsi, rdi
0x42d5a7:	xor	eax, eax
0x42d5a9:	mov	r11d, 0x1e
0x42d5af:	mov	edi, r11d
0x42d5b2:	sub	edi, eax
0x42d5b4:	mov	edx, edi
0x42d5b6:	shr	edx, 1
0x42d5b8:	lea	r8d, [rdx + rax]
0x42d5bc:	mov	rdx, r8
0x42d5bf:	shl	r8, 4
0x42d5c3:	mov	r9d, dword ptr [r8 + 0x4be180]
0x42d5ca:	cmp	rsi, r9
0x42d5cd:	ja	0x42d640
0x42d5cf:	cmp	edx, eax
0x42d5d1:	je	0x42d64c
0x42d5d3:	mov	ecx, edi
0x42d5d5:	shr	ecx, 2
0x42d5d8:	lea	r10d, [rcx + rax]
0x42d5dc:	mov	r11, r10
0x42d5df:	shl	r10, 4
0x42d5e3:	mov	r8d, dword ptr [r10 + 0x4be180]
0x42d5ea:	cmp	rsi, r8
0x42d5ed:	ja	0x42d638
0x42d5ef:	cmp	r11d, eax
0x42d5f2:	je	0x42d64c
0x42d5f4:	shr	edi, 3
0x42d5f7:	add	edi, eax
0x42d5f9:	mov	edi, edi
0x42d5fb:	mov	rdx, rdi
0x42d5fe:	shl	rdi, 4
0x42d602:	mov	r9d, dword ptr [rdi + 0x4be180]
0x42d609:	cmp	rsi, r9
0x42d60c:	ja	0x42d640
0x42d60e:	cmp	edx, eax
0x42d610:	je	0x42d64c
0x42d612:	mov	ecx, edx
0x42d614:	sub	ecx, eax
0x42d616:	shr	ecx, 1
0x42d618:	lea	r10d, [rcx + rax]
0x42d61c:	mov	r8, r10
0x42d61f:	shl	r10, 4
0x42d623:	mov	r11d, dword ptr [r10 + 0x4be180]
0x42d62a:	cmp	r11, rsi
0x42d62d:	jb	0x42d668
0x42d62f:	mov	edx, r8d
0x42d632:	jmp	0x42d60e
0x42d634:	nop	dword ptr [rax]
0x42d638:	mov	eax, r11d
0x42d63b:	mov	r11d, edx
0x42d63e:	mov	edx, eax
0x42d640:	lea	eax, [rdx + 1]
0x42d643:	cmp	r11d, eax
0x42d646:	jne	0x42d5af
0x42d64c:	mov	edi, eax
0x42d64e:	shl	rdi, 4
0x42d652:	mov	r9d, dword ptr [rdi + 0x4be180]
0x42d659:	cmp	r9, rsi
0x42d65c:	jb	0x4041be
0x42d662:	ret	
0x42d663:	nop	dword ptr [rax + rax]
0x42d668:	mov	r11d, edx
0x42d66b:	mov	edx, r8d
0x42d66e:	jmp	0x42d640
0x42d670:	push	rbx
0x42d671:	sub	rsp, 0x1000
0x42d678:	or	qword ptr [rsp], 0
0x42d67d:	mov	edx, 0x1000
0x42d682:	mov	rsi, rsp
0x42d685:	mov	rbx, rdi
0x42d688:	call	0x403b10
0x42d68d:	test	rax, rax
0x42d690:	cmovne	rbx, rax
0x42d694:	mov	rdi, rbx
0x42d697:	call	0x403eb0
0x42d69c:	add	rsp, 0x1000
0x42d6a3:	pop	rbx
0x42d6a4:	ret	
0x42d6a5:	nop	word ptr cs:[rax + rax]
0x42d6b0:	endbr64	
0x42d6b4:	push	rbp
0x42d6b5:	push	rbx
0x42d6b6:	sub	rsp, 8
0x42d6ba:	test	rdi, rdi
0x42d6bd:	je	0x42d6db
0x42d6bf:	mov	rbp, rsi
0x42d6c2:	test	rsi, rsi
0x42d6c5:	je	0x42d6db
0x42d6c7:	mov	rbx, rdi
0x42d6ca:	call	0x403bc0
0x42d6cf:	test	rax, rax
0x42d6d2:	je	0x42d6f4
0x42d6d4:	add	rsp, 8
0x42d6d8:	pop	rbx
0x42d6d9:	pop	rbp
0x42d6da:	ret	
0x42d6db:	mov	esi, 1
0x42d6e0:	mov	edi, 1
0x42d6e5:	call	0x403bc0
0x42d6ea:	test	rax, rax
0x42d6ed:	jne	0x42d6d4
0x42d6ef:	jmp	0x4041d3
0x42d6f4:	jmp	0x4041dd
0x42d6f9:	nop	dword ptr [rax]
0x42d700:	endbr64	
0x42d704:	and	byte ptr [rdi + 0x50], 0xfe
0x42d708:	movq	xmm0, rcx
0x42d70d:	movq	xmm1, r8
0x42d712:	punpcklqdq	xmm0, xmm1
0x42d716:	movups	xmmword ptr [rdi + 0x38], xmm0
0x42d71a:	jmp	0x42d720
0x42d71c:	nop	dword ptr [rax]
0x42d720:	endbr64	
0x42d724:	push	r13
0x42d726:	push	r12
0x42d728:	push	rbp
0x42d729:	push	rbx
0x42d72a:	mov	rbx, rdi
0x42d72d:	sub	rsp, 0x18
0x42d731:	test	rdx, rdx
0x42d734:	je	0x42d7d0
0x42d73a:	mov	r13, rdx
0x42d73d:	lea	r12, [rdx - 1]
0x42d741:	neg	r13
0x42d744:	test	rsi, rsi
0x42d747:	je	0x42d7eb
0x42d74d:	mov	qword ptr [rbx], rsi
0x42d750:	mov	rax, qword ptr [rbx + 0x38]
0x42d754:	mov	qword ptr [rbx + 0x30], r12
0x42d758:	test	byte ptr [rbx + 0x50], 1
0x42d75c:	jne	0x404230
0x42d762:	cmp	rax, 0x42dae0
0x42d768:	jne	0x42d84a
0x42d76e:	cmp	rsi, 0x10000
0x42d775:	jne	0x42d7f5
0x42d777:	mov	rcx, qword ptr [rip + 0xb890a]
0x42d77e:	test	rcx, rcx
0x42d781:	je	0x42d834
0x42d787:	mov	rsi, qword ptr [rcx]
0x42d78a:	lea	rdi, [rcx + r12 + 0x10]
0x42d78f:	lea	rbp, [rcx + 0x10000]
0x42d796:	mov	qword ptr [rbx + 8], rcx
0x42d79a:	and	rdi, r13
0x42d79d:	mov	qword ptr [rip + 0xb88e4], rsi
0x42d7a4:	mov	qword ptr [rbx + 0x10], rdi
0x42d7a8:	mov	qword ptr [rbx + 0x18], rdi
0x42d7ac:	mov	qword ptr [rcx], rbp
0x42d7af:	mov	qword ptr [rbx + 0x20], rbp
0x42d7b3:	mov	qword ptr [rcx + 8], 0
0x42d7bb:	and	byte ptr [rbx + 0x50], 0xf9
0x42d7bf:	add	rsp, 0x18
0x42d7c3:	mov	eax, 1
0x42d7c8:	pop	rbx
0x42d7c9:	pop	rbp
0x42d7ca:	pop	r12
0x42d7cc:	pop	r13
0x42d7ce:	ret	
0x42d7cf:	nop	
0x42d7d0:	mov	r13, 0xfffffffffffffff0
0x42d7d7:	mov	r12d, 0xf
0x42d7dd:	mov	edx, 0x10
0x42d7e2:	test	rsi, rsi
0x42d7e5:	jne	0x42d74d
0x42d7eb:	mov	esi, 0xfe0
0x42d7f0:	jmp	0x42d74d
0x42d7f5:	mov	rdi, rsi
0x42d7f8:	mov	qword ptr [rsp + 8], rsi
0x42d7fd:	call	0x42db10
0x42d802:	mov	r8, qword ptr [rsp + 8]
0x42d807:	lea	r9, [rax + r12 + 0x10]
0x42d80c:	lea	r10, [rax + r8]
0x42d810:	mov	qword ptr [rbx + 8], rax
0x42d814:	and	r9, r13
0x42d817:	mov	qword ptr [rbx + 0x10], r9
0x42d81b:	mov	qword ptr [rbx + 0x18], r9
0x42d81f:	mov	qword ptr [rax], r10
0x42d822:	mov	qword ptr [rbx + 0x20], r10
0x42d826:	mov	qword ptr [rax + 8], 0
0x42d82e:	and	byte ptr [rbx + 0x50], 0xf9
0x42d832:	jmp	0x42d7bf
0x42d834:	mov	edi, 0x10000
0x42d839:	mov	qword ptr [rsp + 8], rsi
0x42d83e:	call	0x42db10
0x42d843:	mov	r8, qword ptr [rsp + 8]
0x42d848:	jmp	0x42d807
0x42d84a:	mov	qword ptr [rsp + 8], rdx
0x42d84f:	mov	rdi, rsi
0x42d852:	call	rax
0x42d854:	mov	rdx, qword ptr [rsp + 8]
0x42d859:	test	rax, rax
0x42d85c:	je	0x404245
0x42d862:	mov	r8, qword ptr [rbx]
0x42d865:	jmp	0x42d807
0x42d867:	nop	word ptr [rax + rax]
0x42d870:	endbr64	
0x42d874:	push	r14
0x42d876:	push	r13
0x42d878:	push	r12
0x42d87a:	mov	r12, rdi
0x42d87d:	push	rbp
0x42d87e:	push	rbx
0x42d87f:	sub	rsp, 0xd0
0x42d886:	mov	qword ptr [rsp + 0x28], rsi
0x42d88b:	mov	qword ptr [rsp + 0x30], rdx
0x42d890:	mov	qword ptr [rsp + 0x38], rcx
0x42d895:	mov	qword ptr [rsp + 0x40], r8
0x42d89a:	mov	qword ptr [rsp + 0x48], r9
0x42d89f:	test	al, al
0x42d8a1:	je	0x42d8da
0x42d8a3:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x42d8a8:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x42d8ad:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x42d8b2:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x42d8ba:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x42d8c2:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x42d8ca:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x42d8d2:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x42d8da:	lea	rax, [rsp + 0x100]
0x42d8e2:	lea	rdx, [rsp + 0x20]
0x42d8e7:	mov	dword ptr [rsp], 8
0x42d8ee:	mov	dword ptr [rsp + 4], 0x30
0x42d8f6:	mov	qword ptr [rsp + 8], rax
0x42d8fb:	mov	qword ptr [rsp + 0x10], rdx
0x42d900:	test	r12, r12
0x42d903:	je	0x42da75
0x42d909:	mov	rbp, rdx
0x42d90c:	mov	rdi, r12
0x42d90f:	call	0x4039e0
0x42d914:	mov	rdi, qword ptr [rbp + 8]
0x42d918:	mov	dword ptr [rsp], 0x10
0x42d91f:	mov	r14, rax
0x42d922:	test	rdi, rdi
0x42d925:	je	0x42d99d
0x42d927:	call	0x4039e0
0x42d92c:	mov	rdi, qword ptr [rbp + 0x10]
0x42d930:	mov	dword ptr [rsp], 0x18
0x42d937:	add	r14, rax
0x42d93a:	test	rdi, rdi
0x42d93d:	je	0x42d99d
0x42d93f:	call	0x4039e0
0x42d944:	mov	rdi, qword ptr [rbp + 0x18]
0x42d948:	mov	dword ptr [rsp], 0x20
0x42d94f:	add	r14, rax
0x42d952:	test	rdi, rdi
0x42d955:	je	0x42d99d
0x42d957:	call	0x4039e0
0x42d95c:	mov	rdi, qword ptr [rbp + 0x20]
0x42d960:	mov	dword ptr [rsp], 0x28
0x42d967:	add	r14, rax
0x42d96a:	test	rdi, rdi
0x42d96d:	je	0x42d99d
0x42d96f:	call	0x4039e0
0x42d974:	mov	esi, dword ptr [rsp]
0x42d977:	add	r14, rax
0x42d97a:	cmp	esi, 0x2f
0x42d97d:	jbe	0x42dab4
0x42d983:	mov	rbx, qword ptr [rsp + 8]
0x42d988:	mov	rdi, qword ptr [rbx]
0x42d98b:	lea	r13, [rbx + 8]
0x42d98f:	mov	qword ptr [rsp + 8], r13
0x42d994:	test	rdi, rdi
0x42d997:	jne	0x404279
0x42d99d:	add	r14, 1
0x42d9a1:	mov	ebp, 1
0x42d9a6:	cmovne	rbp, r14
0x42d9aa:	mov	rdi, rbp
0x42d9ad:	mov	r14, rbp
0x42d9b0:	call	0x403ca0
0x42d9b5:	mov	r13, rax
0x42d9b8:	test	rax, rax
0x42d9bb:	je	0x42dad2
0x42d9c1:	lea	r9, [rsp + 0x100]
0x42d9c9:	lea	r10, [rsp + 0x20]
0x42d9ce:	mov	rdi, r12
0x42d9d1:	mov	dword ptr [rsp], 8
0x42d9d8:	mov	qword ptr [rsp + 8], r9
0x42d9dd:	mov	qword ptr [rsp + 0x10], r10
0x42d9e2:	mov	dword ptr [rsp + 4], 0x30
0x42d9ea:	call	0x4039e0
0x42d9ef:	mov	rsi, r12
0x42d9f2:	mov	rdi, r13
0x42d9f5:	mov	rdx, rax
0x42d9f8:	mov	rbx, rax
0x42d9fb:	call	0x403c60
0x42da00:	mov	eax, dword ptr [rsp]
0x42da03:	add	rbx, r13
0x42da06:	cmp	eax, 0x2f
0x42da09:	ja	0x42da45
0x42da0b:	mov	r11d, eax
0x42da0e:	add	eax, 8
0x42da11:	add	r11, qword ptr [rsp + 0x10]
0x42da16:	mov	dword ptr [rsp], eax
0x42da19:	mov	r12, qword ptr [r11]
0x42da1c:	test	r12, r12
0x42da1f:	je	0x42da5f
0x42da21:	mov	rdi, r12
0x42da24:	call	0x4039e0
0x42da29:	mov	rdi, rbx
0x42da2c:	mov	rsi, r12
0x42da2f:	mov	rdx, rax
0x42da32:	mov	rbp, rax
0x42da35:	call	0x403c60
0x42da3a:	mov	eax, dword ptr [rsp]
0x42da3d:	add	rbx, rbp
0x42da40:	cmp	eax, 0x2f
0x42da43:	jbe	0x42da0b
0x42da45:	mov	rcx, qword ptr [rsp + 8]
0x42da4a:	lea	rdx, [rcx + 8]
0x42da4e:	mov	qword ptr [rsp + 8], rdx
0x42da53:	mov	r14, qword ptr [rcx]
0x42da56:	test	r14, r14
0x42da59:	jne	0x404305
0x42da5f:	mov	byte ptr [rbx], 0
0x42da62:	add	rsp, 0xd0
0x42da69:	mov	rax, r13
0x42da6c:	pop	rbx
0x42da6d:	pop	rbp
0x42da6e:	pop	r12
0x42da70:	pop	r13
0x42da72:	pop	r14
0x42da74:	ret	
0x42da75:	mov	edi, 1
0x42da7a:	call	0x403ca0
0x42da7f:	mov	r13, rax
0x42da82:	test	rax, rax
0x42da85:	je	0x42dacd
0x42da87:	lea	rcx, [rsp + 0x100]
0x42da8f:	lea	rbx, [rsp + 0x20]
0x42da94:	mov	dword ptr [rsp], 8
0x42da9b:	mov	dword ptr [rsp + 4], 0x30
0x42daa3:	mov	qword ptr [rsp + 8], rcx
0x42daa8:	mov	qword ptr [rsp + 0x10], rbx
0x42daad:	mov	byte ptr [r13], 0
0x42dab2:	jmp	0x42da62
0x42dab4:	lea	edi, [rsi + 8]
0x42dab7:	mov	dword ptr [rsp], edi
0x42daba:	mov	rdi, qword ptr [rbp + rsi]
0x42dabf:	test	rdi, rdi
0x42dac2:	jne	0x42d96f
0x42dac8:	jmp	0x42d99d
0x42dacd:	jmp	0x4042f7
0x42dad2:	jmp	0x4042fd
0x42dad7:	nop	word ptr [rax + rax]
0x42dae0:	endbr64	
0x42dae4:	cmp	rdi, 0x10000
0x42daeb:	jne	0x42db04
0x42daed:	mov	rax, qword ptr [rip + 0xb8594]
0x42daf4:	test	rax, rax
0x42daf7:	je	0x42db04
0x42daf9:	mov	rdx, qword ptr [rax]
0x42dafc:	mov	qword ptr [rip + 0xb8585], rdx
0x42db03:	ret	
0x42db04:	jmp	0x42db10
0x42db06:	nop	word ptr cs:[rax + rax]
0x42db10:	endbr64	
0x42db14:	test	rdi, rdi
0x42db17:	mov	eax, 1
0x42db1c:	push	rbp
0x42db1d:	cmovne	rax, rdi
0x42db21:	mov	rdi, rax
0x42db24:	mov	rbp, rax
0x42db27:	call	0x403ca0
0x42db2c:	test	rax, rax
0x42db2f:	je	0x404409
0x42db35:	pop	rbp
0x42db36:	ret	
0x42db37:	nop	word ptr [rax + rax]
0x42db40:	endbr64	
0x42db44:	push	r12
0x42db46:	push	rbp
0x42db47:	mov	rbp, rdi
0x42db4a:	sub	rsp, 8
0x42db4e:	call	0x4039e0
0x42db53:	lea	r12, [rax + 1]
0x42db57:	mov	rdi, r12
0x42db5a:	call	0x403ca0
0x42db5f:	test	rax, rax
0x42db62:	je	0x404442
0x42db68:	add	rsp, 8
0x42db6c:	mov	rdx, r12
0x42db6f:	mov	rsi, rbp
0x42db72:	mov	rdi, rax
0x42db75:	pop	rbp
0x42db76:	pop	r12
0x42db78:	jmp	0x403c60
0x42db7d:	nop	dword ptr [rax]
0x42db80:	endbr64	
0x42db84:	push	rbp
0x42db85:	test	rsi, rsi
0x42db88:	mov	ebp, 1
0x42db8d:	cmovne	rbp, rsi
0x42db91:	test	rdi, rdi
0x42db94:	jne	0x42dba8
0x42db96:	mov	rdi, rbp
0x42db99:	call	0x403ca0
0x42db9e:	test	rax, rax
0x42dba1:	je	0x42dbbb
0x42dba3:	pop	rbp
0x42dba4:	ret	
0x42dba5:	nop	dword ptr [rax]
0x42dba8:	mov	rsi, rbp
0x42dbab:	call	0x403d20
0x42dbb0:	test	rax, rax
0x42dbb3:	je	0x404b75
0x42dbb9:	pop	rbp
0x42dbba:	ret	
0x42dbbb:	jmp	0x404b75
0x42dbc0:	endbr64	
0x42dbc4:	push	r15
0x42dbc6:	mov	r15d, 0x823
0x42dbcc:	push	r14
0x42dbce:	push	r13
0x42dbd0:	mov	r13, rdi
0x42dbd3:	push	r12
0x42dbd5:	xor	r12d, r12d
0x42dbd8:	push	rbp
0x42dbd9:	push	rbx
0x42dbda:	sub	rsp, 0x28
0x42dbde:	mov	dword ptr [rsp], esi
0x42dbe1:	jmp	0x42dbe6
0x42dbe3:	mov	r12, rbx
0x42dbe6:	mov	rax, r15
0x42dbe9:	sub	rax, r12
0x42dbec:	cmp	rax, 1
0x42dbf0:	jbe	0x42dc96
0x42dbf6:	lea	rbp, [r12 + r15]
0x42dbfa:	mov	rdi, r13
0x42dbfd:	shr	rbp, 1
0x42dc00:	imul	rcx, rbp, 0x60
0x42dc04:	mov	rbx, rbp
0x42dc07:	mov	rsi, qword ptr [rcx + 0x48baa0]
0x42dc0e:	movzx	edx, byte ptr [rcx + 0x48bad4]
0x42dc15:	add	rsi, 1
0x42dc19:	call	0x4038d0
0x42dc1e:	test	eax, eax
0x42dc20:	jns	0x42dbe3
0x42dc22:	mov	rdx, rbp
0x42dc25:	sub	rdx, r12
0x42dc28:	cmp	rdx, 1
0x42dc2c:	jbe	0x42dc96
0x42dc2e:	add	rbx, r12
0x42dc31:	mov	rdi, r13
0x42dc34:	mov	r15, rbp
0x42dc37:	shr	rbx, 1
0x42dc3a:	imul	rsi, rbx, 0x60
0x42dc3e:	movzx	edx, byte ptr [rsi + 0x48bad4]
0x42dc45:	mov	rsi, qword ptr [rsi + 0x48baa0]
0x42dc4c:	add	rsi, 1
0x42dc50:	call	0x4038d0
0x42dc55:	test	eax, eax
0x42dc57:	jns	0x42dbe3
0x42dc59:	mov	rdi, rbx
0x42dc5c:	mov	r15, rbx
0x42dc5f:	sub	rdi, r12
0x42dc62:	cmp	rdi, 1
0x42dc66:	jbe	0x42dc96
0x42dc68:	add	rbx, r12
0x42dc6b:	mov	rdi, r13
0x42dc6e:	shr	rbx, 1
0x42dc71:	imul	rcx, rbx, 0x60
0x42dc75:	mov	rsi, qword ptr [rcx + 0x48baa0]
0x42dc7c:	movzx	edx, byte ptr [rcx + 0x48bad4]
0x42dc83:	add	rsi, 1
0x42dc87:	call	0x4038d0
0x42dc8c:	test	eax, eax
0x42dc8e:	jns	0x42dbe3
0x42dc94:	jmp	0x42dc59
0x42dc96:	mov	rbx, r12
0x42dc99:	mov	r15d, 0x824
0x42dc9f:	imul	r8, rbx, 0x60
0x42dca3:	mov	rdi, r13
0x42dca6:	movzx	r14d, byte ptr [r8 + 0x48bad4]
0x42dcae:	mov	rsi, qword ptr [r8 + 0x48baa0]
0x42dcb5:	lea	rbp, [r8 + 0x48baa0]
0x42dcbc:	add	rsi, 1
0x42dcc0:	mov	rdx, r14
0x42dcc3:	call	0x4038d0
0x42dcc8:	test	eax, eax
0x42dcca:	jne	0x42dd0c
0x42dccc:	cmp	byte ptr [r13 + r14], 0
0x42dcd2:	mov	eax, dword ptr [rbp + 0x3c]
0x42dcd5:	jne	0x42dd34
0x42dcd7:	test	dword ptr [rsp], eax
0x42dcda:	je	0x42dcf1
0x42dcdc:	mov	r15, rbx
0x42dcdf:	add	rsp, 0x28
0x42dce3:	mov	rax, r15
0x42dce6:	pop	rbx
0x42dce7:	pop	rbp
0x42dce8:	pop	r12
0x42dcea:	pop	r13
0x42dcec:	pop	r14
0x42dcee:	pop	r15
0x42dcf0:	ret	
0x42dcf1:	and	eax, 0x1783fff
0x42dcf6:	cmp	eax, 0x1400000
0x42dcfb:	je	0x405233
0x42dd01:	cmp	r15, 0x824
0x42dd08:	cmove	r15, rbx
0x42dd0c:	imul	r9, rbx, 0x60
0x42dd10:	movzx	ebx, word ptr [r9 + 0x48bad2]
0x42dd18:	cmp	bx, 0x823
0x42dd1d:	jne	0x42dc9f
0x42dd1f:	cmp	r15, 0x824
0x42dd26:	jne	0x42dcdf
0x42dd28:	cmp	byte ptr [r13], 0x2d
0x42dd2d:	jne	0x42dcdf
0x42dd2f:	jmp	0x40514b
0x42dd34:	test	eax, 0x400000
0x42dd39:	jne	0x42dcd7
0x42dd3b:	jmp	0x42dd0c
0x42dd3d:	nop	dword ptr [rax]
0x42dd40:	endbr64	
0x42dd44:	push	r12
0x42dd46:	push	rbp
0x42dd47:	mov	rbp, rsi
0x42dd4a:	push	rbx
0x42dd4b:	mov	rbx, rdi
0x42dd4e:	mov	rdi, qword ptr [rdi + 8]
0x42dd52:	test	rdi, rdi
0x42dd55:	je	0x42ddc0
0x42dd57:	cmp	rdi, rbp
0x42dd5a:	jb	0x42ddce
0x42dd5c:	mov	r12, qword ptr [rdi + 8]
0x42dd60:	mov	rdx, qword ptr [rbx + 0x40]
0x42dd64:	test	byte ptr [rbx + 0x50], 1
0x42dd68:	jne	0x42de03
0x42dd6e:	cmp	rdx, 0x42de10
0x42dd75:	jne	0x42ddfc
0x42dd7b:	mov	rcx, qword ptr [rdi]
0x42dd7e:	sub	rcx, rdi
0x42dd81:	cmp	rcx, 0x10000
0x42dd88:	jne	0x42dda9
0x42dd8a:	mov	rsi, qword ptr [rip + 0xb82f7]
0x42dd91:	mov	qword ptr [rdi], rsi
0x42dd94:	mov	qword ptr [rip + 0xb82ed], rdi
0x42dd9b:	or	byte ptr [rbx + 0x50], 2
0x42dd9f:	test	r12, r12
0x42dda2:	je	0x42ddc0
0x42dda4:	mov	rdi, r12
0x42dda7:	jmp	0x42dd57
0x42dda9:	call	0x403830
0x42ddae:	mov	rdi, r12
0x42ddb1:	or	byte ptr [rbx + 0x50], 2
0x42ddb5:	test	r12, r12
0x42ddb8:	jne	0x42dd57
0x42ddba:	nop	word ptr [rax + rax]
0x42ddc0:	test	rbp, rbp
0x42ddc3:	jne	0x405533
0x42ddc9:	pop	rbx
0x42ddca:	pop	rbp
0x42ddcb:	pop	r12
0x42ddcd:	ret	
0x42ddce:	mov	rax, qword ptr [rdi]
0x42ddd1:	cmp	rax, rbp
0x42ddd4:	jb	0x42dd5c
0x42ddd6:	movq	xmm0, rdi
0x42dddb:	movq	xmm1, rbp
0x42dde0:	movq	xmm3, rbp
0x42dde5:	movq	xmm2, rax
0x42ddea:	punpcklqdq	xmm0, xmm1
0x42ddee:	punpcklqdq	xmm3, xmm2
0x42ddf2:	movups	xmmword ptr [rbx + 8], xmm0
0x42ddf6:	movups	xmmword ptr [rbx + 0x18], xmm3
0x42ddfa:	jmp	0x42ddc9
0x42ddfc:	call	rdx
0x42ddfe:	mov	rdi, r12
0x42de01:	jmp	0x42ddb1
0x42de03:	jmp	0x405538
0x42de08:	nop	dword ptr [rax + rax]
0x42de10:	endbr64	
0x42de14:	mov	rax, qword ptr [rdi]
0x42de17:	sub	rax, rdi
0x42de1a:	cmp	rax, 0x10000
0x42de20:	jne	0x42de34
0x42de22:	mov	rdx, qword ptr [rip + 0xb825f]
0x42de29:	mov	qword ptr [rdi], rdx
0x42de2c:	mov	qword ptr [rip + 0xb8255], rdi
0x42de33:	ret	
0x42de34:	jmp	0x403830
0x42de39:	nop	dword ptr [rax]
0x42de40:	endbr64	
0x42de44:	push	r12
0x42de46:	push	rbp
0x42de47:	mov	rbp, rdx
0x42de4a:	push	rbx
0x42de4b:	sub	rsp, 0x40
0x42de4f:	mov	r12, qword ptr [rdx + 0x10]
0x42de53:	mov	rax, qword ptr [rdx]
0x42de56:	mov	rdx, qword ptr [rdx + 0x48]
0x42de5a:	mov	qword ptr [rsp + 0x18], r12
0x42de5f:	cmp	rdi, 0x4e4a40
0x42de66:	jne	0x407264
0x42de6c:	cmp	rsi, 0x4e32e0
0x42de73:	jne	0x407241
0x42de79:	test	r8d, r8d
0x42de7c:	jne	0x406f1d
0x42de82:	test	r9d, r9d
0x42de85:	jne	0x406fd0
0x42de8b:	cmp	qword ptr [rsp + 0x68], 0x4e30c0
0x42de94:	jne	0x406fbc
0x42de9a:	cmp	rax, 0x19f
0x42dea0:	ja	0x42df2a
0x42dea6:	cmp	rax, 0x163
0x42deac:	jbe	0x42deed
0x42deae:	sub	rax, 0x164
0x42deb4:	cmp	rax, 0x3b
0x42deb8:	ja	0x42dec2
0x42deba:	notrack jmp	qword ptr ds:[rax*8 + 0x4885a0]
0x42dec2:	xor	ecx, ecx
0x42dec4:	mov	r8, qword ptr [rbp + 0x40]
0x42dec8:	mov	rdi, qword ptr [rbp + 0x20]
0x42decc:	lea	rdx, [rbp + 0x28]
0x42ded0:	lea	rsi, [r8 - 1]
0x42ded4:	mov	r8d, 1
0x42deda:	call	0x438ef0
0x42dedf:	add	rsp, 0x40
0x42dee3:	mov	eax, 1
0x42dee8:	pop	rbx
0x42dee9:	pop	rbp
0x42deea:	pop	r12
0x42deec:	ret	
0x42deed:	cmp	rax, 0x39
0x42def1:	je	0x42dedf
0x42def3:	ja	0x42dec2
0x42def5:	cmp	rax, 0x1e
0x42def9:	je	0x407320
0x42deff:	mov	ecx, 0
0x42df04:	ja	0x42dec4
0x42df06:	cmp	rax, 0x1d
0x42df0a:	je	0x40720b
0x42df10:	cmp	rax, 0x1e
0x42df14:	je	0x42dec4
0x42df16:	test	rax, rax
0x42df19:	je	0x4071e4
0x42df1f:	cmp	rax, 9
0x42df23:	jne	0x42dec4
0x42df25:	jmp	0x4071fa
0x42df2a:	cmp	rax, 0x821
0x42df30:	ja	0x42dec2
0x42df32:	cmp	rax, 0x796
0x42df38:	jbe	0x42df54
0x42df3a:	sub	rax, 0x797
0x42df40:	cmp	rax, 0x8a
0x42df46:	ja	0x42dec2
0x42df4c:	notrack jmp	qword ptr ds:[rax*8 + 0x488780]
0x42df54:	cmp	rax, 0x252
0x42df5a:	je	0x42e0f0
0x42df60:	xor	ecx, ecx
0x42df62:	cmp	rax, 0x251
0x42df68:	jbe	0x42dec4
0x42df6e:	cmp	rax, 0x6c7
0x42df74:	je	0x42e2d9
0x42df7a:	ja	0x42dec2
0x42df80:	cmp	rax, 0x33c
0x42df86:	ja	0x42dfa5
0x42df88:	cmp	rax, 0x320
0x42df8e:	ja	0x42e072
0x42df94:	cmp	rax, 0x28f
0x42df9a:	jne	0x42dec4
0x42dfa0:	jmp	0x407186
0x42dfa5:	cmp	rax, 0x687
0x42dfab:	je	0x407174
0x42dfb1:	ja	0x42dec2
0x42dfb7:	cmp	rax, 0x667
0x42dfbd:	je	0x407162
0x42dfc3:	ja	0x42dec2
0x42dfc9:	cmp	rax, 0x665
0x42dfcf:	je	0x4074aa
0x42dfd5:	mov	ecx, 0
0x42dfda:	ja	0x42dec4
0x42dfe0:	cmp	rax, 0x664
0x42dfe6:	je	0x407498
0x42dfec:	cmp	rax, 0x665
0x42dff2:	je	0x42dec4
0x42dff8:	cmp	rax, 0x53c
0x42dffe:	je	0x4074bc
0x42e004:	ja	0x42dec4
0x42e00a:	mov	r11d, edx
0x42e00d:	cmp	rax, 0x40b
0x42e013:	je	0x40741e
0x42e019:	ja	0x42dec4
0x42e01f:	cmp	rax, 0x3fd
0x42e025:	je	0x407456
0x42e02b:	ja	0x42dec4
0x42e031:	cmp	rax, 0x3fa
0x42e037:	je	0x40743a
0x42e03d:	ja	0x42dec4
0x42e043:	cmp	rax, 0x3b5
0x42e049:	je	0x4070f0
0x42e04f:	ja	0x42dec4
0x42e055:	cmp	rax, 0x3b3
0x42e05b:	je	0x40704e
0x42e061:	cmp	rax, 0x3b4
0x42e067:	jne	0x42dec4
0x42e06d:	jmp	0x4074d2
0x42e072:	sub	rax, 0x321
0x42e078:	cmp	rax, 0x1b
0x42e07c:	ja	0x42dec2
0x42e082:	notrack jmp	qword ptr ds:[rax*8 + 0x488bd8]
0x42e08a:	mov	rdi, r12
0x42e08d:	call	0x4039e0
0x42e092:	cmp	byte ptr [r12 + rax - 1], 0x2f
0x42e098:	mov	rbx, rax
0x42e09b:	jne	0x42e1ba
0x42e0a1:	xor	r9d, r9d
0x42e0a4:	xor	r8d, r8d
0x42e0a7:	xor	ecx, ecx
0x42e0a9:	xor	edx, edx
0x42e0ab:	mov	rsi, r12
0x42e0ae:	mov	edi, 0x4e24d0
0x42e0b3:	call	0x438670
0x42e0b8:	xor	r9d, r9d
0x42e0bb:	xor	r8d, r8d
0x42e0be:	xor	ecx, ecx
0x42e0c0:	xor	edx, edx
0x42e0c2:	mov	rsi, r12
0x42e0c5:	mov	edi, 0x4e24b0
0x42e0ca:	call	0x438670
0x42e0cf:	xor	ecx, ecx
0x42e0d1:	xor	r9d, r9d
0x42e0d4:	xor	r8d, r8d
0x42e0d7:	xor	edx, edx
0x42e0d9:	mov	rsi, r12
0x42e0dc:	mov	edi, 0x4e2420
0x42e0e1:	call	0x438670
0x42e0e6:	mov	ecx, 1
0x42e0eb:	jmp	0x42dec4
0x42e0f0:	xor	ebx, ebx
0x42e0f2:	xor	r9d, r9d
0x42e0f5:	jmp	0x42e108
0x42e0f7:	lea	ebp, [rbx + 1]
0x42e0fa:	cmp	r10b, 0x2c
0x42e0fe:	je	0x42e2b4
0x42e104:	add	rbx, 1
0x42e108:	movzx	r10d, byte ptr [r12 + rbx]
0x42e10d:	mov	esi, ebx
0x42e10f:	lea	rdi, [r12 + r9]
0x42e113:	test	r10b, r10b
0x42e116:	jne	0x42e0f7
0x42e118:	mov	esi, 0x4cd84f
0x42e11d:	call	0x439090
0x42e122:	jmp	0x42dedf
0x42e127:	mov	ecx, 1
0x42e12c:	jmp	0x42dec4
0x42e131:	xor	edx, edx
0x42e133:	mov	rsi, r12
0x42e136:	mov	edi, 0x45b6a6
0x42e13b:	xor	eax, eax
0x42e13d:	call	0x42d870
0x42e142:	mov	r8d, 1
0x42e148:	xor	ecx, ecx
0x42e14a:	xor	edx, edx
0x42e14c:	mov	rdi, rax
0x42e14f:	xor	esi, esi
0x42e151:	call	0x438ef0
0x42e156:	jmp	0x42dedf
0x42e15b:	mov	r8d, 1
0x42e161:	xor	ecx, ecx
0x42e163:	lea	rdx, [rsp + 0x18]
0x42e168:	mov	esi, 1
0x42e16d:	mov	edi, 0x45b6b4
0x42e172:	mov	qword ptr [rip + 0xb7f2f], r12
0x42e179:	mov	dword ptr [rip + 0xb8035], 1
0x42e183:	call	0x438ef0
0x42e188:	jmp	0x42dedf
0x42e18d:	mov	esi, 0x45fdb4
0x42e192:	mov	rdi, r12
0x42e195:	mov	qword ptr [rip + 0xb7f14], r12
0x42e19c:	call	0x403be0
0x42e1a1:	test	eax, eax
0x42e1a3:	je	0x42e240
0x42e1a9:	mov	ecx, dword ptr [rip + 0xb6869]
0x42e1af:	mov	dword ptr [rip + 0xb7f03], ecx
0x42e1b5:	jmp	0x42dedf
0x42e1ba:	xor	esi, esi
0x42e1bc:	mov	rdi, r12
0x42e1bf:	call	0x439310
0x42e1c4:	test	eax, eax
0x42e1c6:	je	0x42e0a1
0x42e1cc:	lea	rdi, [rbx + 2]
0x42e1d0:	call	0x42db10
0x42e1d5:	mov	rsi, r12
0x42e1d8:	mov	rdi, rax
0x42e1db:	call	0x4038f0
0x42e1e0:	mov	byte ptr [rax + rbx], 0x2f
0x42e1e4:	mov	r12, rax
0x42e1e7:	mov	byte ptr [rax + rbx + 1], 0
0x42e1ec:	jmp	0x42e0a1
0x42e1f1:	mov	rdi, qword ptr [rip + 0xb5068]
0x42e1f8:	call	0x403830
0x42e1fd:	mov	rdi, qword ptr [rsp + 0x18]
0x42e202:	call	0x42db40
0x42e207:	xor	ecx, ecx
0x42e209:	mov	qword ptr [rip + 0xb5050], rax
0x42e210:	jmp	0x42dec4
0x42e215:	mov	rdi, qword ptr [rip + 0xb504c]
0x42e21c:	call	0x403830
0x42e221:	mov	rdi, qword ptr [rsp + 0x18]
0x42e226:	call	0x42db40
0x42e22b:	mov	byte ptr [rip + 0xb7e6e], 0
0x42e232:	xor	ecx, ecx
0x42e234:	mov	qword ptr [rip + 0xb502d], rax
0x42e23b:	jmp	0x42dec4
0x42e240:	mov	qword ptr [rip + 0xb7e65], 0
0x42e24b:	jmp	0x42dedf
0x42e250:	mov	r9, qword ptr [rsp + 0x18]
0x42e255:	xor	r12d, r12d
0x42e258:	xor	r10d, r10d
0x42e25b:	movzx	ebx, byte ptr [r9 + r12]
0x42e260:	mov	r11d, r12d
0x42e263:	lea	rdi, [r9 + r10]
0x42e267:	test	bl, bl
0x42e269:	jne	0x40736f
0x42e26f:	jmp	0x407382
0x42e274:	mov	dword ptr [rip + 0xb4f92], 1
0x42e27e:	xor	ecx, ecx
0x42e280:	jmp	0x42dec4
0x42e285:	mov	esi, 9
0x42e28a:	mov	edi, 0x45b656
0x42e28f:	mov	dword ptr [rip + 0xb7f0f], 1
0x42e299:	call	0x439060
0x42e29e:	mov	esi, 9
0x42e2a3:	mov	edi, 0x45b656
0x42e2a8:	call	0x439a20
0x42e2ad:	xor	ecx, ecx
0x42e2af:	jmp	0x42dec4
0x42e2b4:	sub	esi, r8d
0x42e2b7:	call	0x438640
0x42e2bc:	mov	esi, 0x4cd84f
0x42e2c1:	mov	rdi, rax
0x42e2c4:	call	0x439090
0x42e2c9:	movsxd	r9, ebp
0x42e2cc:	mov	r12, qword ptr [rsp + 0x18]
0x42e2d1:	mov	r8, r9
0x42e2d4:	jmp	0x42e104
0x42e2d9:	mov	edi, 0x4c4342
0x42e2de:	xor	edx, edx
0x42e2e0:	mov	rsi, r12
0x42e2e3:	xor	eax, eax
0x42e2e5:	call	0x42d870
0x42e2ea:	mov	rdi, rax
0x42e2ed:	jmp	0x42e118
0x42e2f2:	nop	word ptr cs:[rax + rax]
0x42e2fd:	nop	dword ptr [rax]
0x42e300:	endbr64	
0x42e304:	imul	rax, qword ptr [rdi], 0x60
0x42e308:	test	byte ptr [rax + 0x48bae0], 0x40
0x42e30f:	jne	0x407744
0x42e315:	mov	rcx, qword ptr [rdi + 0x40]
0x42e319:	lea	rdx, [rdi + 0x28]
0x42e31d:	mov	rdi, qword ptr [rdi + 0x20]
0x42e321:	mov	r8d, 1
0x42e327:	lea	rsi, [rcx - 1]
0x42e32b:	xor	ecx, ecx
0x42e32d:	jmp	0x438ef0
0x42e332:	nop	word ptr cs:[rax + rax]
0x42e33c:	nop	dword ptr [rax]
0x42e340:	endbr64	
0x42e344:	push	r15
0x42e346:	push	r14
0x42e348:	mov	r14d, ecx
0x42e34b:	push	r13
0x42e34d:	push	r12
0x42e34f:	push	rbp
0x42e350:	push	rbx
0x42e351:	mov	rbx, rdx
0x42e354:	sub	rsp, 0x48
0x42e358:	mov	r11, qword ptr [rdx + 0x10]
0x42e35c:	cmp	qword ptr [rdx + 0x40], 2
0x42e361:	mov	rcx, qword ptr [rdx]
0x42e364:	mov	r15, qword ptr [rdx + 0x48]
0x42e368:	mov	qword ptr [rsp + 0x28], r11
0x42e36d:	ja	0x4083ee
0x42e373:	mov	rbp, rdi
0x42e376:	movsxd	rdi, ecx
0x42e379:	cmp	ecx, 0x4b2
0x42e37f:	je	0x42e806
0x42e385:	mov	r12, rsi
0x42e388:	mov	r10d, r8d
0x42e38b:	mov	r13d, r9d
0x42e38e:	jle	0x42e4da
0x42e394:	mov	edx, ecx
0x42e396:	cmp	edi, 0x6b7
0x42e39c:	jg	0x42e4bd
0x42e3a2:	cmp	edi, 0x5aa
0x42e3a8:	jg	0x42e4a3
0x42e3ae:	lea	r8d, [rdi - 0x4ef]
0x42e3b5:	cmp	r8d, 0x97
0x42e3bc:	ja	0x42e417
0x42e3be:	notrack jmp	qword ptr ds:[r8*8 + 0x4c0c00]
0x42e3c7:	cmp	edi, 0x21a
0x42e3cd:	je	0x42ef5c
0x42e3d3:	jle	0x42e574
0x42e3d9:	cmp	edi, 0x416
0x42e3df:	jg	0x42e417
0x42e3e1:	cmp	edi, 0x326
0x42e3e7:	jg	0x42e55a
0x42e3ed:	cmp	edi, 0x2cb
0x42e3f3:	je	0x42f09a
0x42e3f9:	jg	0x42e53d
0x42e3ff:	cmp	edi, 0x21f
0x42e405:	je	0x4085f9
0x42e40b:	cmp	edi, 0x2ca
0x42e411:	je	0x42f0dc
0x42e417:	imul	r11, rdi, 0x60
0x42e41b:	movzx	ebx, word ptr [r11 + 0x48bae2]
0x42e423:	cmp	bx, -1
0x42e427:	je	0x407de0
0x42e42d:	add	rbx, rbp
0x42e430:	je	0x407de0
0x42e436:	mov	r8d, ecx
0x42e439:	cmp	ecx, 0x2fb
0x42e43f:	je	0x42e81d
0x42e445:	jg	0x42e5fd
0x42e44b:	cmp	ecx, 0x21d
0x42e451:	je	0x42e868
0x42e457:	mov	r9d, 1
0x42e45d:	cmp	ecx, 0x21c
0x42e463:	jle	0x42e491
0x42e465:	cmp	ecx, 0x295
0x42e46b:	je	0x42f042
0x42e471:	cmp	ecx, 0x294
0x42e477:	jle	0x42e491
0x42e479:	cmp	ecx, 0x2b4
0x42e47f:	je	0x407f83
0x42e485:	cmp	ecx, 0x2ba
0x42e48b:	je	0x42e752
0x42e491:	add	rsp, 0x48
0x42e495:	mov	eax, r9d
0x42e498:	pop	rbx
0x42e499:	pop	rbp
0x42e49a:	pop	r12
0x42e49c:	pop	r13
0x42e49e:	pop	r14
0x42e4a0:	pop	r15
0x42e4a2:	ret	
0x42e4a3:	lea	esi, [rdx - 0x5ab]
0x42e4a9:	cmp	esi, 0x10c
0x42e4af:	ja	0x42e417
0x42e4b5:	notrack jmp	qword ptr ds:[rsi*8 + 0x4c10c0]
0x42e4bd:	cmp	ecx, 0x7a7
0x42e4c3:	je	0x408402
0x42e4c9:	cmp	ecx, 0x81f
0x42e4cf:	jne	0x42e417
0x42e4d5:	jmp	0x40847e
0x42e4da:	cmp	edi, 0x44d
0x42e4e0:	je	0x42e7a2
0x42e4e6:	jle	0x42e3c7
0x42e4ec:	cmp	edi, 0x452
0x42e4f2:	je	0x42e502
0x42e4f4:	jg	0x42e50e
0x42e4f6:	cmp	edi, 0x44f
0x42e4fc:	jne	0x42e417
0x42e502:	mov	rcx, qword ptr [rbx]
0x42e505:	mov	r15, qword ptr [rbx + 0x48]
0x42e509:	jmp	0x42e436
0x42e50e:	cmp	edi, 0x4a9
0x42e514:	je	0x408581
0x42e51a:	jg	0x42e417
0x42e520:	cmp	edi, 0x4a3
0x42e526:	je	0x40851f
0x42e52c:	cmp	edi, 0x4a8
0x42e532:	jne	0x42e417
0x42e538:	jmp	0x408563
0x42e53d:	cmp	edi, 0x2ce
0x42e543:	je	0x4089ae
0x42e549:	cmp	edi, 0x2eb
0x42e54f:	jne	0x42e417
0x42e555:	jmp	0x4089fa
0x42e55a:	lea	edx, [rdi - 0x327]
0x42e560:	cmp	edx, 0xef
0x42e566:	ja	0x42e417
0x42e56c:	notrack jmp	qword ptr ds:[rdx*8 + 0x4c1928]
0x42e574:	cmp	edi, 0x16f
0x42e57a:	je	0x42f0c2
0x42e580:	jle	0x42e59b
0x42e582:	cmp	edi, 0x18e
0x42e588:	jg	0x42e5d6
0x42e58a:	cmp	edi, 0x18a
0x42e590:	jle	0x42e417
0x42e596:	jmp	0x42e502
0x42e59b:	cmp	edi, 9
0x42e59e:	je	0x42e502
0x42e5a4:	cmp	edi, 8
0x42e5a7:	jle	0x42e417
0x42e5ad:	cmp	edi, 0x165
0x42e5b3:	je	0x408970
0x42e5b9:	jg	0x42e417
0x42e5bf:	cmp	edi, 0x1d
0x42e5c2:	je	0x408079
0x42e5c8:	cmp	edi, 0x1e
0x42e5cb:	jne	0x42e417
0x42e5d1:	jmp	0x407fe1
0x42e5d6:	cmp	edi, 0x218
0x42e5dc:	jne	0x42e417
0x42e5e2:	mov	r13, qword ptr [rsp + 0x88]
0x42e5ea:	test	r15, r15
0x42e5ed:	setne	byte ptr [r13 + 0x44]
0x42e5f2:	mov	r9d, 1
0x42e5f8:	jmp	0x42e491
0x42e5fd:	cmp	ecx, 0x300
0x42e603:	je	0x42ecf2
0x42e609:	cmp	r8d, 0x651
0x42e610:	je	0x40859f
0x42e616:	mov	r9d, 1
0x42e61c:	jmp	0x42e491
0x42e621:	mov	r9d, r13d
0x42e624:	mov	r8, r12
0x42e627:	mov	rcx, rbp
0x42e62a:	mov	rdx, r11
0x42e62d:	mov	esi, 1
0x42e632:	xor	edi, edi
0x42e634:	mov	dword ptr [rsp + 8], r10d
0x42e639:	call	0x4394d0
0x42e63e:	mov	r10d, dword ptr [rsp + 8]
0x42e643:	cmp	qword ptr [rbx + 0x40], 2
0x42e648:	mov	rcx, qword ptr [rbx]
0x42e64b:	mov	r15, qword ptr [rbx + 0x48]
0x42e64f:	jbe	0x42e436
0x42e655:	jmp	0x4081aa
0x42e65a:	mov	esi, 0x45fdb4
0x42e65f:	mov	rdi, r11
0x42e662:	mov	dword ptr [rsp + 0x1c], r10d
0x42e667:	mov	qword ptr [rsp + 0x10], rcx
0x42e66c:	mov	qword ptr [rsp + 8], r11
0x42e671:	call	0x403be0
0x42e676:	mov	rcx, qword ptr [rsp + 0x10]
0x42e67b:	mov	r10d, dword ptr [rsp + 0x1c]
0x42e680:	test	eax, eax
0x42e682:	je	0x42e436
0x42e688:	mov	rdi, qword ptr [rsp + 8]
0x42e68d:	mov	esi, 0x4be3e8
0x42e692:	call	0x403be0
0x42e697:	mov	r9, qword ptr [rsp + 8]
0x42e69c:	mov	rcx, qword ptr [rsp + 0x10]
0x42e6a1:	test	eax, eax
0x42e6a3:	mov	r10d, dword ptr [rsp + 0x1c]
0x42e6a8:	je	0x42e436
0x42e6ae:	jmp	0x40786d
0x42e6b3:	test	r15, r15
0x42e6b6:	mov	r12d, 0x4c4893
0x42e6bc:	mov	r13d, 0
0x42e6c2:	cmove	r12, r13
0x42e6c6:	mov	qword ptr [rbp + 0xf90], r12
0x42e6cd:	mov	r9d, 1
0x42e6d3:	jmp	0x42e491
0x42e6d8:	mov	r15d, 1
0x42e6de:	movzx	r9d, byte ptr [r11]
0x42e6e2:	test	r9b, r9b
0x42e6e5:	jne	0x4078e5
0x42e6eb:	jmp	0x42e643
0x42e6f0:	xor	r15d, r15d
0x42e6f3:	mov	r8, r15
0x42e6f6:	mov	dword ptr [rsp + 8], r15d
0x42e6fb:	shl	r8, 4
0x42e6ff:	mov	rsi, qword ptr [r8 + 0x4c4160]
0x42e706:	test	rsi, rsi
0x42e709:	jne	0x407939
0x42e70f:	jmp	0x407980
0x42e714:	lea	rdi, [r15 - 2]
0x42e718:	cmp	rdi, 3
0x42e71c:	ja	0x40783c
0x42e722:	mov	dword ptr [rbp + 0x13f8], r15d
0x42e729:	mov	r9d, r13d
0x42e72c:	mov	r8, r12
0x42e72f:	mov	rcx, rbp
0x42e732:	mov	edx, 0x4c4893
0x42e737:	xor	esi, esi
0x42e739:	mov	edi, 2
0x42e73e:	mov	dword ptr [rsp + 8], r10d
0x42e743:	call	0x4394d0
0x42e748:	mov	r10d, dword ptr [rsp + 8]
0x42e74d:	jmp	0x42e643
0x42e752:	cmp	dword ptr [r12 + 0x91c], 0
0x42e75b:	mov	byte ptr [rsp + 8], r9b
0x42e760:	jne	0x407f99
0x42e766:	push	rax
0x42e767:	mov	r9d, r14d
0x42e76a:	mov	r8, r15
0x42e76d:	xor	ecx, ecx
0x42e76f:	push	qword ptr [rsp + 0x90]
0x42e776:	mov	edx, 0x2b8
0x42e77b:	mov	rsi, r12
0x42e77e:	mov	rdi, rbp
0x42e781:	push	1
0x42e783:	push	qword ptr [rsp + 0x98]
0x42e78a:	push	r13
0x42e78c:	push	r10
0x42e78e:	call	0x43f7b0
0x42e793:	add	rsp, 0x30
0x42e797:	movzx	r9d, byte ptr [rsp + 8]
0x42e79d:	jmp	0x42e491
0x42e7a2:	cmp	byte ptr [rbp + 0x15ea], 0
0x42e7a9:	mov	ebx, r15d
0x42e7ac:	jne	0x42e7d4
0x42e7ae:	mov	dword ptr [rbp + 0x136c], r15d
0x42e7b5:	mov	esi, r15d
0x42e7b8:	mov	rdi, rbp
0x42e7bb:	mov	qword ptr [rsp + 8], rcx
0x42e7c0:	mov	dword ptr [rsp + 0x10], r8d
0x42e7c5:	call	0x43f830
0x42e7ca:	mov	r10d, dword ptr [rsp + 0x10]
0x42e7cf:	mov	rcx, qword ptr [rsp + 8]
0x42e7d4:	cmp	byte ptr [rbp + 0x15e3], 0
0x42e7db:	jne	0x42e7e3
0x42e7dd:	mov	dword ptr [rbp + 0xddc], ebx
0x42e7e3:	cmp	byte ptr [rbp + 0x15e4], 0
0x42e7ea:	jne	0x42e7f9
0x42e7ec:	xor	edx, edx
0x42e7ee:	test	ebx, ebx
0x42e7f0:	sete	dl
0x42e7f3:	mov	dword ptr [rbp + 0xfa8], edx
0x42e7f9:	test	ebx, ebx
0x42e7fb:	je	0x42e436
0x42e801:	jmp	0x4081be
0x42e806:	movd	xmm1, r15d
0x42e80b:	pshufd	xmm0, xmm1, 0xe0
0x42e810:	movq	qword ptr [rbp + 0xec8], xmm0
0x42e818:	jmp	0x42e6cd
0x42e81d:	cmp	dword ptr [r12 + 0x7ec], 0
0x42e826:	jne	0x407f99
0x42e82c:	push	rax
0x42e82d:	mov	r9d, r14d
0x42e830:	mov	r8, r15
0x42e833:	xor	ecx, ecx
0x42e835:	push	qword ptr [rsp + 0x90]
0x42e83c:	mov	edx, 0x25c
0x42e841:	mov	rsi, r12
0x42e844:	mov	rdi, rbp
0x42e847:	push	1
0x42e849:	push	qword ptr [rsp + 0x98]
0x42e850:	push	r13
0x42e852:	push	r10
0x42e854:	call	0x43f7b0
0x42e859:	add	rsp, 0x30
0x42e85d:	mov	r9d, 1
0x42e863:	jmp	0x42e491
0x42e868:	cmp	dword ptr [r12 + 0x54c], 0
0x42e871:	jne	0x42e8ae
0x42e873:	push	rdi
0x42e874:	mov	r9d, r14d
0x42e877:	mov	r8, r15
0x42e87a:	xor	ecx, ecx
0x42e87c:	push	qword ptr [rsp + 0x90]
0x42e883:	mov	edx, 0x1a3
0x42e888:	mov	rsi, r12
0x42e88b:	mov	rdi, rbp
0x42e88e:	push	1
0x42e890:	push	qword ptr [rsp + 0x98]
0x42e897:	push	r13
0x42e899:	push	r10
0x42e89b:	mov	dword ptr [rsp + 0x38], r10d
0x42e8a0:	call	0x43f7b0
0x42e8a5:	mov	r10d, dword ptr [rsp + 0x38]
0x42e8aa:	add	rsp, 0x30
0x42e8ae:	cmp	dword ptr [r12 + 0x640], 0
0x42e8b7:	jne	0x42e8f4
0x42e8b9:	push	rsi
0x42e8ba:	mov	r9d, r14d
0x42e8bd:	mov	r8, r15
0x42e8c0:	xor	ecx, ecx
0x42e8c2:	push	qword ptr [rsp + 0x90]
0x42e8c9:	mov	edx, 0x1e7
0x42e8ce:	mov	rsi, r12
0x42e8d1:	mov	rdi, rbp
0x42e8d4:	push	1
0x42e8d6:	push	qword ptr [rsp + 0x98]
0x42e8dd:	push	r13
0x42e8df:	push	r10
0x42e8e1:	mov	dword ptr [rsp + 0x38], r10d
0x42e8e6:	call	0x43f7b0
0x42e8eb:	mov	r10d, dword ptr [rsp + 0x38]
0x42e8f0:	add	rsp, 0x30
0x42e8f4:	cmp	dword ptr [r12 + 0x660], 0
0x42e8fd:	jne	0x42e93a
0x42e8ff:	push	rcx
0x42e900:	mov	r9d, r14d
0x42e903:	mov	r8, r15
0x42e906:	xor	ecx, ecx
0x42e908:	push	qword ptr [rsp + 0x90]
0x42e90f:	mov	edx, 0x1f1
0x42e914:	mov	rsi, r12
0x42e917:	mov	rdi, rbp
0x42e91a:	push	1
0x42e91c:	push	qword ptr [rsp + 0x98]
0x42e923:	push	r13
0x42e925:	push	r10
0x42e927:	mov	dword ptr [rsp + 0x38], r10d
0x42e92c:	call	0x43f7b0
0x42e931:	mov	r10d, dword ptr [rsp + 0x38]
0x42e936:	add	rsp, 0x30
0x42e93a:	cmp	dword ptr [r12 + 0x6e4], 0
0x42e943:	jne	0x42e980
0x42e945:	push	rdx
0x42e946:	mov	r9d, r14d
0x42e949:	mov	r8, r15
0x42e94c:	xor	ecx, ecx
0x42e94e:	push	qword ptr [rsp + 0x90]
0x42e955:	mov	edx, 0x214
0x42e95a:	mov	rsi, r12
0x42e95d:	mov	rdi, rbp
0x42e960:	push	1
0x42e962:	push	qword ptr [rsp + 0x98]
0x42e969:	push	r13
0x42e96b:	push	r10
0x42e96d:	mov	dword ptr [rsp + 0x38], r10d
0x42e972:	call	0x43f7b0
0x42e977:	mov	r10d, dword ptr [rsp + 0x38]
0x42e97c:	add	rsp, 0x30
0x42e980:	cmp	dword ptr [r12 + 0x6fc], 0
0x42e989:	jne	0x42e9c6
0x42e98b:	push	rax
0x42e98c:	mov	r9d, r14d
0x42e98f:	mov	r8, r15
0x42e992:	xor	ecx, ecx
0x42e994:	push	qword ptr [rsp + 0x90]
0x42e99b:	mov	edx, 0x21c
0x42e9a0:	mov	rsi, r12
0x42e9a3:	mov	rdi, rbp
0x42e9a6:	push	1
0x42e9a8:	push	qword ptr [rsp + 0x98]
0x42e9af:	push	r13
0x42e9b1:	push	r10
0x42e9b3:	mov	dword ptr [rsp + 0x38], r10d
0x42e9b8:	call	0x43f7b0
0x42e9bd:	mov	r10d, dword ptr [rsp + 0x38]
0x42e9c2:	add	rsp, 0x30
0x42e9c6:	cmp	dword ptr [r12 + 0x764], 0
0x42e9cf:	jne	0x42ea0c
0x42e9d1:	push	rax
0x42e9d2:	mov	r9d, r14d
0x42e9d5:	mov	r8, r15
0x42e9d8:	xor	ecx, ecx
0x42e9da:	push	qword ptr [rsp + 0x90]
0x42e9e1:	mov	edx, 0x238
0x42e9e6:	mov	rsi, r12
0x42e9e9:	mov	rdi, rbp
0x42e9ec:	push	1
0x42e9ee:	push	qword ptr [rsp + 0x98]
0x42e9f5:	push	r13
0x42e9f7:	push	r10
0x42e9f9:	mov	dword ptr [rsp + 0x38], r10d
0x42e9fe:	call	0x43f7b0
0x42ea03:	mov	r10d, dword ptr [rsp + 0x38]
0x42ea08:	add	rsp, 0x30
0x42ea0c:	cmp	dword ptr [r12 + 0x814], 0
0x42ea15:	jne	0x42ea52
0x42ea17:	push	rax
0x42ea18:	mov	r9d, r14d
0x42ea1b:	mov	r8, r15
0x42ea1e:	xor	ecx, ecx
0x42ea20:	push	qword ptr [rsp + 0x90]
0x42ea27:	mov	edx, 0x266
0x42ea2c:	mov	rsi, r12
0x42ea2f:	mov	rdi, rbp
0x42ea32:	push	1
0x42ea34:	push	qword ptr [rsp + 0x98]
0x42ea3b:	push	r13
0x42ea3d:	push	r10
0x42ea3f:	mov	dword ptr [rsp + 0x38], r10d
0x42ea44:	call	0x43f7b0
0x42ea49:	mov	r10d, dword ptr [rsp + 0x38]
0x42ea4e:	add	rsp, 0x30
0x42ea52:	cmp	dword ptr [r12 + 0x81c], 0
0x42ea5b:	jne	0x42ea98
0x42ea5d:	push	rax
0x42ea5e:	mov	r9d, r14d
0x42ea61:	mov	r8, r15
0x42ea64:	xor	ecx, ecx
0x42ea66:	push	qword ptr [rsp + 0x90]
0x42ea6d:	mov	edx, 0x26a
0x42ea72:	mov	rsi, r12
0x42ea75:	mov	rdi, rbp
0x42ea78:	push	1
0x42ea7a:	push	qword ptr [rsp + 0x98]
0x42ea81:	push	r13
0x42ea83:	push	r10
0x42ea85:	mov	dword ptr [rsp + 0x38], r10d
0x42ea8a:	call	0x43f7b0
0x42ea8f:	mov	r10d, dword ptr [rsp + 0x38]
0x42ea94:	add	rsp, 0x30
0x42ea98:	cmp	dword ptr [r12 + 0x86c], 0
0x42eaa1:	jne	0x42eade
0x42eaa3:	push	rax
0x42eaa4:	mov	r9d, r14d
0x42eaa7:	mov	r8, r15
0x42eaaa:	xor	ecx, ecx
0x42eaac:	push	qword ptr [rsp + 0x90]
0x42eab3:	mov	edx, 0x286
0x42eab8:	mov	rsi, r12
0x42eabb:	mov	rdi, rbp
0x42eabe:	push	1
0x42eac0:	push	qword ptr [rsp + 0x98]
0x42eac7:	push	r13
0x42eac9:	push	r10
0x42eacb:	mov	dword ptr [rsp + 0x38], r10d
0x42ead0:	call	0x43f7b0
0x42ead5:	mov	r10d, dword ptr [rsp + 0x38]
0x42eada:	add	rsp, 0x30
0x42eade:	cmp	dword ptr [r12 + 0x884], 0
0x42eae7:	jne	0x42eb24
0x42eae9:	push	rbx
0x42eaea:	mov	r9d, r14d
0x42eaed:	mov	r8, r15
0x42eaf0:	xor	ecx, ecx
0x42eaf2:	push	qword ptr [rsp + 0x90]
0x42eaf9:	mov	edx, 0x28c
0x42eafe:	mov	rsi, r12
0x42eb01:	mov	rdi, rbp
0x42eb04:	push	1
0x42eb06:	push	qword ptr [rsp + 0x98]
0x42eb0d:	push	r13
0x42eb0f:	push	r10
0x42eb11:	mov	dword ptr [rsp + 0x38], r10d
0x42eb16:	call	0x43f7b0
0x42eb1b:	mov	r10d, dword ptr [rsp + 0x38]
0x42eb20:	add	rsp, 0x30
0x42eb24:	cmp	dword ptr [r12 + 0x934], 0
0x42eb2d:	jne	0x42eb6b
0x42eb2f:	push	r11
0x42eb31:	mov	r9d, r14d
0x42eb34:	mov	r8, r15
0x42eb37:	xor	ecx, ecx
0x42eb39:	push	qword ptr [rsp + 0x90]
0x42eb40:	mov	edx, 0x2c0
0x42eb45:	mov	rsi, r12
0x42eb48:	mov	rdi, rbp
0x42eb4b:	push	1
0x42eb4d:	push	qword ptr [rsp + 0x98]
0x42eb54:	push	r13
0x42eb56:	push	r10
0x42eb58:	mov	dword ptr [rsp + 0x38], r10d
0x42eb5d:	call	0x43f7b0
0x42eb62:	mov	r10d, dword ptr [rsp + 0x38]
0x42eb67:	add	rsp, 0x30
0x42eb6b:	cmp	dword ptr [r12 + 0x940], 0
0x42eb74:	jne	0x42ebb2
0x42eb76:	push	r9
0x42eb78:	mov	r8, r15
0x42eb7b:	mov	r9d, r14d
0x42eb7e:	xor	ecx, ecx
0x42eb80:	push	qword ptr [rsp + 0x90]
0x42eb87:	mov	edx, 0x2c3
0x42eb8c:	mov	rsi, r12
0x42eb8f:	mov	rdi, rbp
0x42eb92:	push	1
0x42eb94:	push	qword ptr [rsp + 0x98]
0x42eb9b:	push	r13
0x42eb9d:	push	r10
0x42eb9f:	mov	dword ptr [rsp + 0x38], r10d
0x42eba4:	call	0x43f7b0
0x42eba9:	mov	r10d, dword ptr [rsp + 0x38]
0x42ebae:	add	rsp, 0x30
0x42ebb2:	cmp	dword ptr [r12 + 0x9fc], 0
0x42ebbb:	jne	0x42ebf9
0x42ebbd:	push	r8
0x42ebbf:	mov	r9d, r14d
0x42ebc2:	mov	r8, r15
0x42ebc5:	xor	ecx, ecx
0x42ebc7:	push	qword ptr [rsp + 0x90]
0x42ebce:	mov	edx, 0x2f6
0x42ebd3:	mov	rsi, r12
0x42ebd6:	mov	rdi, rbp
0x42ebd9:	push	1
0x42ebdb:	push	qword ptr [rsp + 0x98]
0x42ebe2:	push	r13
0x42ebe4:	push	r10
0x42ebe6:	mov	dword ptr [rsp + 0x38], r10d
0x42ebeb:	call	0x43f7b0
0x42ebf0:	mov	r10d, dword ptr [rsp + 0x38]
0x42ebf5:	add	rsp, 0x30
0x42ebf9:	cmp	dword ptr [r12 + 0xa10], 0
0x42ec02:	jne	0x42ec3f
0x42ec04:	push	rdi
0x42ec05:	mov	r9d, r14d
0x42ec08:	mov	r8, r15
0x42ec0b:	xor	ecx, ecx
0x42ec0d:	push	qword ptr [rsp + 0x90]
0x42ec14:	mov	edx, 0x2fb
0x42ec19:	mov	rsi, r12
0x42ec1c:	mov	rdi, rbp
0x42ec1f:	push	1
0x42ec21:	push	qword ptr [rsp + 0x98]
0x42ec28:	push	r13
0x42ec2a:	push	r10
0x42ec2c:	mov	dword ptr [rsp + 0x38], r10d
0x42ec31:	call	0x43f7b0
0x42ec36:	mov	r10d, dword ptr [rsp + 0x38]
0x42ec3b:	add	rsp, 0x30
0x42ec3f:	cmp	dword ptr [r12 + 0xa20], 0
0x42ec48:	jne	0x42ec96
0x42ec4a:	xor	r8d, r8d
0x42ec4d:	cmp	dword ptr [rbp + 0xa1c], 0
0x42ec54:	jne	0x40782c
0x42ec5a:	push	rsi
0x42ec5b:	mov	r9d, r14d
0x42ec5e:	and	r8d, 1
0x42ec62:	xor	ecx, ecx
0x42ec64:	push	qword ptr [rsp + 0x90]
0x42ec6b:	mov	edx, 0x301
0x42ec70:	mov	rsi, r12
0x42ec73:	mov	rdi, rbp
0x42ec76:	push	1
0x42ec78:	push	qword ptr [rsp + 0x98]
0x42ec7f:	push	r13
0x42ec81:	push	r10
0x42ec83:	mov	dword ptr [rsp + 0x38], r10d
0x42ec88:	call	0x43f7b0
0x42ec8d:	mov	r10d, dword ptr [rsp + 0x38]
0x42ec92:	add	rsp, 0x30
0x42ec96:	cmp	dword ptr [r12 + 0xa40], 0
0x42ec9f:	jne	0x407f99
0x42eca5:	xor	r8d, r8d
0x42eca8:	cmp	dword ptr [rbp + 0xa1c], 0
0x42ecaf:	jne	0x40785d
0x42ecb5:	push	rcx
0x42ecb6:	mov	r9d, r14d
0x42ecb9:	and	r8d, 1
0x42ecbd:	xor	ecx, ecx
0x42ecbf:	push	qword ptr [rsp + 0x90]
0x42ecc6:	mov	edx, 0x30a
0x42eccb:	mov	rsi, r12
0x42ecce:	mov	rdi, rbp
0x42ecd1:	push	1
0x42ecd3:	push	qword ptr [rsp + 0x98]
0x42ecda:	push	r13
0x42ecdc:	push	r10
0x42ecde:	call	0x43f7b0
0x42ece3:	add	rsp, 0x30
0x42ece7:	mov	r9d, 1
0x42eced:	jmp	0x42e491
0x42ecf2:	cmp	dword ptr [r12 + 0xa20], 0
0x42ecfb:	jne	0x42ed51
0x42ecfd:	cmp	dword ptr [rbp + 0xa1c], 0
0x42ed04:	je	0x42f092
0x42ed0a:	cmp	dword ptr [rbp + 0x700], 0
0x42ed11:	setne	r8b
0x42ed15:	push	rax
0x42ed16:	mov	r9d, r14d
0x42ed19:	and	r8d, 1
0x42ed1d:	xor	ecx, ecx
0x42ed1f:	push	qword ptr [rsp + 0x90]
0x42ed26:	mov	edx, 0x301
0x42ed2b:	mov	rsi, r12
0x42ed2e:	mov	rdi, rbp
0x42ed31:	push	1
0x42ed33:	push	qword ptr [rsp + 0x98]
0x42ed3a:	push	r13
0x42ed3c:	push	r10
0x42ed3e:	mov	dword ptr [rsp + 0x38], r10d
0x42ed43:	call	0x43f7b0
0x42ed48:	mov	r10d, dword ptr [rsp + 0x38]
0x42ed4d:	add	rsp, 0x30
0x42ed51:	cmp	dword ptr [r12 + 0xa24], 0
0x42ed5a:	jne	0x42ed97
0x42ed5c:	push	rbx
0x42ed5d:	mov	r9d, r14d
0x42ed60:	mov	r8, r15
0x42ed63:	xor	ecx, ecx
0x42ed65:	push	qword ptr [rsp + 0x90]
0x42ed6c:	mov	edx, 0x302
0x42ed71:	mov	rsi, r12
0x42ed74:	mov	rdi, rbp
0x42ed77:	push	1
0x42ed79:	push	qword ptr [rsp + 0x98]
0x42ed80:	push	r13
0x42ed82:	push	r10
0x42ed84:	mov	dword ptr [rsp + 0x38], r10d
0x42ed89:	call	0x43f7b0
0x42ed8e:	mov	r10d, dword ptr [rsp + 0x38]
0x42ed93:	add	rsp, 0x30
0x42ed97:	cmp	dword ptr [r12 + 0xa30], 0
0x42eda0:	jne	0x42edde
0x42eda2:	push	r11
0x42eda4:	mov	r9d, r14d
0x42eda7:	mov	r8, r15
0x42edaa:	xor	ecx, ecx
0x42edac:	push	qword ptr [rsp + 0x90]
0x42edb3:	mov	edx, 0x306
0x42edb8:	mov	rsi, r12
0x42edbb:	mov	rdi, rbp
0x42edbe:	push	1
0x42edc0:	push	qword ptr [rsp + 0x98]
0x42edc7:	push	r13
0x42edc9:	push	r10
0x42edcb:	mov	dword ptr [rsp + 0x38], r10d
0x42edd0:	call	0x43f7b0
0x42edd5:	mov	r10d, dword ptr [rsp + 0x38]
0x42edda:	add	rsp, 0x30
0x42edde:	cmp	dword ptr [r12 + 0xa34], 0
0x42ede7:	jne	0x42ee25
0x42ede9:	push	r9
0x42edeb:	mov	r8, r15
0x42edee:	mov	r9d, r14d
0x42edf1:	xor	ecx, ecx
0x42edf3:	push	qword ptr [rsp + 0x90]
0x42edfa:	mov	edx, 0x307
0x42edff:	mov	rsi, r12
0x42ee02:	mov	rdi, rbp
0x42ee05:	push	1
0x42ee07:	push	qword ptr [rsp + 0x98]
0x42ee0e:	push	r13
0x42ee10:	push	r10
0x42ee12:	mov	dword ptr [rsp + 0x38], r10d
0x42ee17:	call	0x43f7b0
0x42ee1c:	mov	r10d, dword ptr [rsp + 0x38]
0x42ee21:	add	rsp, 0x30
0x42ee25:	cmp	dword ptr [r12 + 0xa38], 0
0x42ee2e:	jne	0x42ee6c
0x42ee30:	push	r8
0x42ee32:	mov	r9d, r14d
0x42ee35:	mov	r8, r15
0x42ee38:	xor	ecx, ecx
0x42ee3a:	push	qword ptr [rsp + 0x90]
0x42ee41:	mov	edx, 0x308
0x42ee46:	mov	rsi, r12
0x42ee49:	mov	rdi, rbp
0x42ee4c:	push	1
0x42ee4e:	push	qword ptr [rsp + 0x98]
0x42ee55:	push	r13
0x42ee57:	push	r10
0x42ee59:	mov	dword ptr [rsp + 0x38], r10d
0x42ee5e:	call	0x43f7b0
0x42ee63:	mov	r10d, dword ptr [rsp + 0x38]
0x42ee68:	add	rsp, 0x30
0x42ee6c:	cmp	dword ptr [r12 + 0xa40], 0
0x42ee75:	jne	0x42eecb
0x42ee77:	cmp	dword ptr [rbp + 0xa1c], 0
0x42ee7e:	je	0x42f0d4
0x42ee84:	cmp	dword ptr [rbp + 0x700], 0
0x42ee8b:	setne	r8b
0x42ee8f:	push	rdi
0x42ee90:	mov	r9d, r14d
0x42ee93:	and	r8d, 1
0x42ee97:	xor	ecx, ecx
0x42ee99:	push	qword ptr [rsp + 0x90]
0x42eea0:	mov	edx, 0x30a
0x42eea5:	mov	rsi, r12
0x42eea8:	mov	rdi, rbp
0x42eeab:	push	1
0x42eead:	push	qword ptr [rsp + 0x98]
0x42eeb4:	push	r13
0x42eeb6:	push	r10
0x42eeb8:	mov	dword ptr [rsp + 0x38], r10d
0x42eebd:	call	0x43f7b0
0x42eec2:	mov	r10d, dword ptr [rsp + 0x38]
0x42eec7:	add	rsp, 0x30
0x42eecb:	cmp	dword ptr [r12 + 0xa48], 0
0x42eed4:	jne	0x42ef11
0x42eed6:	push	rsi
0x42eed7:	mov	r9d, r14d
0x42eeda:	mov	r8, r15
0x42eedd:	xor	ecx, ecx
0x42eedf:	push	qword ptr [rsp + 0x90]
0x42eee6:	mov	edx, 0x30c
0x42eeeb:	mov	rsi, r12
0x42eeee:	mov	rdi, rbp
0x42eef1:	push	1
0x42eef3:	push	qword ptr [rsp + 0x98]
0x42eefa:	push	r13
0x42eefc:	push	r10
0x42eefe:	mov	dword ptr [rsp + 0x38], r10d
0x42ef03:	call	0x43f7b0
0x42ef08:	mov	r10d, dword ptr [rsp + 0x38]
0x42ef0d:	add	rsp, 0x30
0x42ef11:	cmp	dword ptr [r12 + 0xa4c], 0
0x42ef1a:	jne	0x407f99
0x42ef20:	push	rcx
0x42ef21:	mov	r9d, r14d
0x42ef24:	mov	r8, r15
0x42ef27:	xor	ecx, ecx
0x42ef29:	push	qword ptr [rsp + 0x90]
0x42ef30:	mov	edx, 0x30d
0x42ef35:	mov	rsi, r12
0x42ef38:	mov	rdi, rbp
0x42ef3b:	push	1
0x42ef3d:	push	qword ptr [rsp + 0x98]
0x42ef44:	push	r13
0x42ef46:	push	r10
0x42ef48:	call	0x43f7b0
0x42ef4d:	add	rsp, 0x30
0x42ef51:	mov	r9d, 1
0x42ef57:	jmp	0x42e491
0x42ef5c:	cmp	r14d, 0x80000
0x42ef63:	je	0x42e436
0x42ef69:	mov	rdi, r11
0x42ef6c:	mov	dword ptr [rsp + 0x1c], r8d
0x42ef71:	mov	qword ptr [rsp + 8], r11
0x42ef76:	mov	dword ptr [rsp + 0x10], r15d
0x42ef7b:	call	0x4039e0
0x42ef80:	lea	rdi, [rax + 2]
0x42ef84:	call	0x42db10
0x42ef89:	mov	rsi, qword ptr [rsp + 8]
0x42ef8e:	mov	byte ptr [rax], 0x57
0x42ef91:	mov	r15, rax
0x42ef94:	lea	rdi, [rax + 1]
0x42ef98:	call	0x4038f0
0x42ef9d:	mov	rdi, r15
0x42efa0:	mov	esi, r14d
0x42efa3:	call	0x42dbc0
0x42efa8:	mov	r8, qword ptr [rsp + 8]
0x42efad:	mov	r9d, dword ptr [rsp + 0x10]
0x42efb2:	cmp	eax, 0x824
0x42efb7:	mov	r10d, dword ptr [rsp + 0x1c]
0x42efbc:	mov	rdi, rax
0x42efbf:	je	0x408236
0x42efc5:	cdqe	
0x42efc7:	imul	rcx, rax, 0x60
0x42efcb:	mov	edx, dword ptr [rcx + 0x48badc]
0x42efd1:	test	edx, 0x20000
0x42efd7:	je	0x408213
0x42efdd:	cmp	r9d, 1
0x42efe1:	sbb	esi, esi
0x42efe3:	xor	r11d, r11d
0x42efe6:	and	esi, 2
0x42efe9:	add	esi, 4
0x42efec:	and	edx, 0x400000
0x42eff2:	jne	0x4082b8
0x42eff8:	mov	dword ptr [rsp + 8], r10d
0x42effd:	xor	ecx, ecx
0x42efff:	test	r9d, r9d
0x42f002:	mov	r8d, r13d
0x42f005:	push	qword ptr [rsp + 0x88]
0x42f00c:	setne	cl
0x42f00f:	mov	r9d, r14d
0x42f012:	mov	rdx, r11
0x42f015:	push	r12
0x42f017:	push	rbp
0x42f018:	push	qword ptr [rsp + 0x98]
0x42f01f:	call	0x43f940
0x42f024:	mov	edi, dword ptr [rsp + 0x28]
0x42f028:	add	rsp, 0x20
0x42f02c:	mov	dword ptr [rsp + 8], edi
0x42f030:	mov	rdi, r15
0x42f033:	call	0x403830
0x42f038:	mov	r10d, dword ptr [rsp + 8]
0x42f03d:	jmp	0x42e643
0x42f042:	cmp	dword ptr [r12 + 0x6fc], 0
0x42f04b:	mov	byte ptr [rsp + 8], r9b
0x42f050:	jne	0x407f99
0x42f056:	push	rdx
0x42f057:	mov	r9d, r14d
0x42f05a:	mov	r8, r15
0x42f05d:	xor	ecx, ecx
0x42f05f:	push	qword ptr [rsp + 0x90]
0x42f066:	mov	edx, 0x21c
0x42f06b:	mov	rsi, r12
0x42f06e:	mov	rdi, rbp
0x42f071:	push	1
0x42f073:	push	qword ptr [rsp + 0x98]
0x42f07a:	push	r13
0x42f07c:	push	r10
0x42f07e:	call	0x43f7b0
0x42f083:	add	rsp, 0x30
0x42f087:	movzx	r9d, byte ptr [rsp + 8]
0x42f08d:	jmp	0x42e491
0x42f092:	xor	r8d, r8d
0x42f095:	jmp	0x42ed15
0x42f09a:	cmp	r15d, 1
0x42f09e:	ja	0x408065
0x42f0a4:	test	r15d, r15d
0x42f0a7:	jne	0x408056
0x42f0ad:	mov	dword ptr [rbp + 0x960], 0
0x42f0b7:	mov	r9d, 1
0x42f0bd:	jmp	0x42e491
0x42f0c2:	cmp	r14d, 0x80000
0x42f0c9:	je	0x42e436
0x42f0cf:	jmp	0x4082cc
0x42f0d4:	xor	r8d, r8d
0x42f0d7:	jmp	0x42ee8f
0x42f0dc:	jmp	0x408644
0x42f0e1:	nop	word ptr cs:[rax + rax]
0x42f0ec:	nop	dword ptr [rax]
0x42f0f0:	endbr64	
0x42f0f4:	push	r14
0x42f0f6:	push	r13
0x42f0f8:	push	r12
0x42f0fa:	mov	r12, rdi
0x42f0fd:	push	rbp
0x42f0fe:	push	rbx
0x42f0ff:	mov	rbx, rsi
0x42f102:	sub	rsp, 0x20
0x42f106:	call	0x4039e0
0x42f10b:	mov	r13, qword ptr [rbx]
0x42f10e:	mov	esi, 0x4bedd1
0x42f113:	mov	rbp, rax
0x42f116:	mov	rdi, r13
0x42f119:	call	0x403be0
0x42f11e:	test	eax, eax
0x42f120:	je	0x42f180
0x42f122:	mov	esi, 0x4c42ef
0x42f127:	mov	rdi, r13
0x42f12a:	call	0x403be0
0x42f12f:	test	eax, eax
0x42f131:	je	0x42f180
0x42f133:	movsxd	rdx, dword ptr [rbx + 0x10]
0x42f137:	lea	rdi, [r12 + rbp]
0x42f13b:	mov	rsi, r13
0x42f13e:	call	0x403c60
0x42f143:	movsxd	rax, dword ptr [rbx + 0x10]
0x42f147:	mov	edx, dword ptr [rbx + 0x14]
0x42f14a:	add	rbp, rax
0x42f14d:	test	edx, edx
0x42f14f:	jne	0x408c91
0x42f155:	mov	byte ptr [r12 + rbp], 0
0x42f15a:	mov	esi, dword ptr [rbx + 0x18]
0x42f15d:	mov	rdi, r12
0x42f160:	call	0x439a50
0x42f165:	mov	ecx, 0
0x42f16a:	test	eax, eax
0x42f16c:	cmovne	r12, rcx
0x42f170:	add	rsp, 0x20
0x42f174:	mov	rax, r12
0x42f177:	pop	rbx
0x42f178:	pop	rbp
0x42f179:	pop	r12
0x42f17b:	pop	r13
0x42f17d:	pop	r14
0x42f17f:	ret	
0x42f180:	movsxd	rdi, dword ptr [rbx + 0x10]
0x42f184:	movdqu	xmm1, xmmword ptr [rbx]
0x42f188:	movdqu	xmm2, xmmword ptr [rbx + 0x10]
0x42f18d:	add	rdi, 0x12
0x42f191:	movaps	xmmword ptr [rsp], xmm1
0x42f195:	movaps	xmmword ptr [rsp + 0x10], xmm2
0x42f19a:	call	0x42db10
0x42f19f:	movdqa	xmm0, xmmword ptr [rip + 0x95069]
0x42f1a7:	mov	rsi, r13
0x42f1aa:	mov	byte ptr [rax + 0x10], 0x2d
0x42f1ae:	mov	r14, rax
0x42f1b1:	lea	rdi, [rax + 0x11]
0x42f1b5:	movups	xmmword ptr [rax], xmm0
0x42f1b8:	call	0x4038f0
0x42f1bd:	mov	rdi, r14
0x42f1c0:	mov	qword ptr [rsp], r14
0x42f1c4:	call	0x4039e0
0x42f1c9:	mov	rsi, rsp
0x42f1cc:	mov	rdi, r12
0x42f1cf:	mov	dword ptr [rsp + 0x10], eax
0x42f1d3:	call	0x42f0f0
0x42f1d8:	test	rax, rax
0x42f1db:	jne	0x408cbc
0x42f1e1:	mov	rdi, r14
0x42f1e4:	call	0x403830
0x42f1e9:	mov	r13, qword ptr [rbx]
0x42f1ec:	jmp	0x42f133
0x42f1f1:	nop	word ptr cs:[rax + rax]
0x42f1fc:	nop	dword ptr [rax]
0x42f200:	push	r15
0x42f202:	push	r14
0x42f204:	mov	r14, rdi
0x42f207:	push	r13
0x42f209:	xor	r13d, r13d
0x42f20c:	push	r12
0x42f20e:	push	rbp
0x42f20f:	xor	ebp, ebp
0x42f211:	push	rbx
0x42f212:	sub	rsp, 0x68
0x42f216:	mov	qword ptr [rsp + 0x30], rdi
0x42f21b:	mov	byte ptr [rsp + 0x46], 0
0x42f220:	mov	byte ptr [rsp + 0x28], 0
0x42f225:	mov	byte ptr [rsp + 0x45], 1
0x42f22a:	mov	byte ptr [rsp], 0
0x42f22e:	mov	byte ptr [rsp + 0x20], 0
0x42f233:	mov	qword ptr [rsp + 8], 0
0x42f23c:	mov	qword ptr [rsp + 0x18], 0
0x42f245:	mov	qword ptr [rsp + 0x10], 0
0x42f24e:	mov	byte ptr [rsp + 0x5f], 0
0x42f253:	movzx	eax, byte ptr [r14]
0x42f257:	cmp	al, 0x20
0x42f259:	sete	dl
0x42f25c:	cmp	al, 9
0x42f25e:	sete	cl
0x42f261:	or	dl, cl
0x42f263:	jne	0x42f6e5
0x42f269:	mov	r9d, edx
0x42f26c:	xor	r11d, r11d
0x42f26f:	cmp	al, 0x21
0x42f271:	je	0x42f605
0x42f277:	cmp	al, 0x25
0x42f279:	je	0x42f6ee
0x42f27f:	cmp	al, 0x2e
0x42f281:	je	0x42f920
0x42f287:	xor	edx, edx
0x42f289:	xor	r10d, r10d
0x42f28c:	cmp	al, 0x2c
0x42f28e:	je	0x40a45e
0x42f294:	mov	r15, r14
0x42f297:	xor	ebx, ebx
0x42f299:	jmp	0x42f2ae
0x42f29b:	nop	dword ptr [rax + rax]
0x42f2a0:	cmp	dil, 0x5c
0x42f2a4:	je	0x40a46c
0x42f2aa:	add	r15, 1
0x42f2ae:	movzx	esi, byte ptr [r15]
0x42f2b2:	mov	rdi, rsi
0x42f2b5:	test	word ptr [rsi + rsi + 0x4bc840], 0x204
0x42f2bf:	jne	0x42f2a0
0x42f2c1:	lea	ecx, [rsi - 0x2b]
0x42f2c4:	cmp	cl, 0x31
0x42f2c7:	ja	0x42f8fc
0x42f2cd:	movabs	r8, 0x200000024000f
0x42f2d7:	shr	r8, cl
0x42f2da:	mov	r12, r8
0x42f2dd:	and	r12b, 1
0x42f2e1:	jne	0x42f2a0
0x42f2e3:	test	ebx, ebx
0x42f2e5:	jne	0x40a48c
0x42f2eb:	xor	r9d, r9d
0x42f2ee:	mov	r12, r15
0x42f2f1:	movzx	edi, byte ptr [r15]
0x42f2f5:	cmp	dil, 0x20
0x42f2f9:	je	0x40a483
0x42f2ff:	cmp	dil, 9
0x42f303:	je	0x40a483
0x42f309:	cmp	dil, 0x7c
0x42f30d:	je	0x42f329
0x42f30f:	jg	0x42f4c0
0x42f315:	cmp	dil, 0x26
0x42f319:	je	0x42f4ca
0x42f31f:	cmp	dil, 0x3a
0x42f323:	jne	0x42f8a8
0x42f329:	test	r13b, r13b
0x42f32c:	jne	0x42f93a
0x42f332:	test	r14, r14
0x42f335:	setne	bl
0x42f338:	cmp	r14, r12
0x42f33b:	sete	sil
0x42f33f:	and	bl, sil
0x42f342:	jne	0x42f765
0x42f348:	test	r10b, r10b
0x42f34b:	jne	0x42f895
0x42f351:	test	dl, dl
0x42f353:	jne	0x42f895
0x42f359:	movzx	ecx, byte ptr [rsp + 0x45]
0x42f35e:	test	r9b, r9b
0x42f361:	cmove	ecx, edx
0x42f364:	mov	byte ptr [rsp + 0x45], cl
0x42f368:	movzx	r8d, byte ptr [rsp]
0x42f36d:	or	r8b, byte ptr [rsp + 0x46]
0x42f372:	jne	0x42f3cd
0x42f374:	test	r14, r14
0x42f377:	je	0x42f3a6
0x42f379:	test	r10b, r10b
0x42f37c:	jne	0x42f8b2
0x42f382:	test	dl, dl
0x42f384:	jne	0x40a567
0x42f38a:	movzx	edx, r9b
0x42f38e:	mov	rsi, r12
0x42f391:	mov	rdi, r14
0x42f394:	mov	byte ptr [rsp], r11b
0x42f398:	call	0x42f980
0x42f39d:	movzx	r11d, byte ptr [rsp]
0x42f3a2:	mov	byte ptr [rsp + 0x5f], al
0x42f3a6:	xor	ebx, ebx
0x42f3a8:	cmp	byte ptr [rsp + 0x5f], r11b
0x42f3ad:	cmove	r12, qword ptr [rsp + 0x18]
0x42f3b3:	cmove	r14, qword ptr [rsp + 0x10]
0x42f3b9:	cmovne	rbp, qword ptr [rsp + 8]
0x42f3bf:	setne	byte ptr [rsp]
0x42f3c3:	mov	qword ptr [rsp + 0x18], r12
0x42f3c8:	mov	qword ptr [rsp + 0x10], r14
0x42f3cd:	cmp	byte ptr [r15], 0x3a
0x42f3d1:	lea	rdi, [r15 + 1]
0x42f3d5:	jne	0x42f484
0x42f3db:	movzx	r8d, byte ptr [rsp + 0x46]
0x42f3e1:	mov	r15, rdi
0x42f3e4:	mov	esi, 1
0x42f3e9:	xor	r8d, 1
0x42f3ed:	and	r8d, dword ptr [rsp]
0x42f3f1:	jmp	0x42f404
0x42f3f3:	nop	dword ptr [rax + rax]
0x42f3f8:	test	cl, cl
0x42f3fa:	je	0x42f935
0x42f400:	add	r15, 1
0x42f404:	movzx	ecx, byte ptr [r15]
0x42f408:	cmp	cl, 0x7b
0x42f40b:	je	0x42f4b8
0x42f411:	cmp	cl, 0x7d
0x42f414:	je	0x42f43e
0x42f416:	cmp	esi, 1
0x42f419:	sete	r11b
0x42f41d:	cmp	cl, 0x3b
0x42f420:	jne	0x42f427
0x42f422:	test	r11b, r11b
0x42f425:	jne	0x42f443
0x42f427:	cmp	cl, 0x25
0x42f42a:	jne	0x42f3f8
0x42f42c:	cmp	byte ptr [r15 + 1], 0x2a
0x42f431:	sete	r9b
0x42f435:	and	r9b, r11b
0x42f438:	cmovne	r13d, r9d
0x42f43c:	jmp	0x42f400
0x42f43e:	sub	esi, 1
0x42f441:	jne	0x42f400
0x42f443:	mov	rsi, r15
0x42f446:	movzx	eax, byte ptr [rsi - 1]
0x42f44a:	cmp	al, 0x20
0x42f44c:	je	0x42f695
0x42f452:	cmp	al, 9
0x42f454:	je	0x42f695
0x42f45a:	movzx	r10d, byte ptr [rsp + 0x45]
0x42f460:	xor	r10d, 1
0x42f464:	test	r10b, r13b
0x42f467:	jne	0x42f949
0x42f46d:	test	r8b, r8b
0x42f470:	jne	0x42f5d1
0x42f476:	cmp	byte ptr [r15], 0x3b
0x42f47a:	je	0x42f732
0x42f480:	lea	rdi, [r15 + 1]
0x42f484:	cmp	byte ptr [r15], 0x7d
0x42f488:	mov	r14, rdi
0x42f48b:	jne	0x42f67d
0x42f491:	test	rbp, rbp
0x42f494:	jne	0x42f5c1
0x42f49a:	cmp	qword ptr [rsp + 8], 0
0x42f4a0:	jne	0x40a5d7
0x42f4a6:	add	rsp, 0x68
0x42f4aa:	mov	rax, r14
0x42f4ad:	pop	rbx
0x42f4ae:	pop	rbp
0x42f4af:	pop	r12
0x42f4b1:	pop	r13
0x42f4b3:	pop	r14
0x42f4b5:	pop	r15
0x42f4b7:	ret	
0x42f4b8:	add	esi, 1
0x42f4bb:	jmp	0x42f400
0x42f4c0:	cmp	dil, 0x7d
0x42f4c4:	jne	0x42f8ad
0x42f4ca:	cmp	byte ptr [rsp + 0x20], 0
0x42f4cf:	jne	0x42f93f
0x42f4d5:	cmp	byte ptr [rsp + 0x28], 0
0x42f4da:	jne	0x42f944
0x42f4e0:	test	r10b, r10b
0x42f4e3:	jne	0x42f971
0x42f4e9:	test	r11b, r11b
0x42f4ec:	jne	0x42f976
0x42f4f2:	cmp	r14, r12
0x42f4f5:	sete	r10b
0x42f4f9:	or	r10b, dl
0x42f4fc:	mov	byte ptr [rsp + 0x20], r10b
0x42f501:	jne	0x42f97b
0x42f507:	sub	r12, r14
0x42f50a:	mov	dword ptr [rsp + 0x28], r12d
0x42f50f:	test	r9b, r9b
0x42f512:	je	0x42f628
0x42f518:	cmp	dword ptr [rip + 0xb5511], 0
0x42f51f:	jle	0x42f631
0x42f525:	mov	r13, qword ptr [rip + 0xb54fc]
0x42f52c:	movsxd	rbx, r12d
0x42f52f:	xor	r12d, r12d
0x42f532:	nop	word ptr [rax + rax]
0x42f538:	mov	rdi, qword ptr [r13]
0x42f53c:	mov	rdx, rbx
0x42f53f:	mov	rsi, r14
0x42f542:	call	0x4038d0
0x42f547:	test	eax, eax
0x42f549:	je	0x42f65f
0x42f54f:	add	r12d, 1
0x42f553:	add	r13, 0x18
0x42f557:	cmp	r12d, dword ptr [rip + 0xb54d2]
0x42f55e:	jl	0x42f538
0x42f560:	cmp	byte ptr [r15], 0x7d
0x42f564:	lea	r14, [r15 + 1]
0x42f568:	jne	0x42f5af
0x42f56a:	cmp	dword ptr [rip + 0xb54bf], 0
0x42f571:	jle	0x42f491
0x42f577:	xor	r13d, r13d
0x42f57a:	xor	ebx, ebx
0x42f57c:	mov	r11, qword ptr [rip + 0xb54a5]
0x42f583:	nop	dword ptr [rax + rax]
0x42f588:	lea	rdx, [r11 + r13]
0x42f58c:	cmp	byte ptr [rdx + 0x16], 0
0x42f590:	jne	0x42f63a
0x42f596:	add	ebx, 1
0x42f599:	add	r13, 0x18
0x42f59d:	cmp	dword ptr [rip + 0xb548d], ebx
0x42f5a3:	jg	0x42f588
0x42f5a5:	cmp	byte ptr [r15], 0x7d
0x42f5a9:	je	0x42f491
0x42f5af:	mov	byte ptr [rsp + 0x28], 0
0x42f5b4:	mov	ebx, 1
0x42f5b9:	mov	r13d, ebx
0x42f5bc:	jmp	0x42f24e
0x42f5c1:	cmp	rbp, qword ptr [rsp + 8]
0x42f5c6:	je	0x42f49a
0x42f5cc:	jmp	0x40a63e
0x42f5d1:	sub	esi, edi
0x42f5d3:	call	0x438640
0x42f5d8:	mov	r14, rax
0x42f5db:	test	r13b, r13b
0x42f5de:	jne	0x42f7b5
0x42f5e4:	xor	edx, edx
0x42f5e6:	xor	esi, esi
0x42f5e8:	mov	rdi, rax
0x42f5eb:	call	0x43a4f0
0x42f5f0:	test	eax, eax
0x42f5f2:	js	0x40a5c7
0x42f5f8:	mov	rdi, r14
0x42f5fb:	call	0x403830
0x42f600:	jmp	0x42f476
0x42f605:	add	r14, 1
0x42f609:	movzx	eax, byte ptr [r14]
0x42f60d:	cmp	al, 9
0x42f60f:	je	0x40a64b
0x42f615:	cmp	al, 0x20
0x42f617:	je	0x40a64b
0x42f61d:	mov	r11d, 1
0x42f623:	jmp	0x42f277
0x42f628:	cmp	dword ptr [rip + 0xb5401], 0
0x42f62f:	jg	0x42f69e
0x42f631:	lea	r14, [r15 + 1]
0x42f635:	jmp	0x42f5a5
0x42f63a:	mov	byte ptr [rdx + 0x16], 0
0x42f63e:	xor	esi, esi
0x42f640:	mov	edi, ebx
0x42f642:	add	r13, 0x18
0x42f646:	add	ebx, 1
0x42f649:	call	0x43c3a0
0x42f64e:	cmp	ebx, dword ptr [rip + 0xb53dc]
0x42f654:	jl	0x42f57c
0x42f65a:	jmp	0x42f5a5
0x42f65f:	mov	esi, dword ptr [rsp + 0x28]
0x42f663:	mov	edi, r12d
0x42f666:	call	0x43b250
0x42f66b:	test	eax, eax
0x42f66d:	je	0x42f54f
0x42f673:	mov	byte ptr [r13 + 0x16], 1
0x42f678:	jmp	0x42f54f
0x42f67d:	mov	r15, rdi
0x42f680:	test	bl, bl
0x42f682:	jne	0x42f96c
0x42f688:	mov	byte ptr [rsp + 0x20], 1
0x42f68d:	mov	r14, r15
0x42f690:	jmp	0x42f5b9
0x42f695:	sub	rsi, 1
0x42f699:	jmp	0x42f446
0x42f69e:	mov	qword ptr [rsp + 0x28], rbp
0x42f6a3:	movsxd	rbx, r12d
0x42f6a6:	mov	r12, qword ptr [rip + 0xb537b]
0x42f6ad:	xor	r13d, r13d
0x42f6b0:	mov	rbp, qword ptr [r12]
0x42f6b4:	mov	rdx, rbx
0x42f6b7:	mov	rsi, r14
0x42f6ba:	mov	rdi, rbp
0x42f6bd:	call	0x4038d0
0x42f6c2:	test	eax, eax
0x42f6c4:	je	0x42f86c
0x42f6ca:	add	r13d, 1
0x42f6ce:	add	r12, 0x18
0x42f6d2:	cmp	dword ptr [rip + 0xb5357], r13d
0x42f6d9:	jg	0x42f6b0
0x42f6db:	mov	rbp, qword ptr [rsp + 0x28]
0x42f6e0:	jmp	0x42f560
0x42f6e5:	add	r14, 1
0x42f6e9:	jmp	0x42f253
0x42f6ee:	cmp	byte ptr [r14 + 1], 0x3a
0x42f6f3:	jne	0x40a634
0x42f6f9:	lea	rdi, [r14 + 2]
0x42f6fd:	xor	edx, edx
0x42f6ff:	lea	rsi, [rsp + 0x5f]
0x42f704:	mov	byte ptr [rsp + 0x40], r11b
0x42f709:	mov	byte ptr [rsp + 0x38], r9b
0x42f70e:	xor	r12d, r12d
0x42f711:	xor	r14d, r14d
0x42f714:	call	0x43b390
0x42f719:	movzx	r9d, byte ptr [rsp + 0x38]
0x42f71f:	xor	edx, edx
0x42f721:	xor	r10d, r10d
0x42f724:	movzx	r11d, byte ptr [rsp + 0x40]
0x42f72a:	mov	r15, rax
0x42f72d:	jmp	0x42f2f1
0x42f732:	movzx	r8d, byte ptr [rsp]
0x42f737:	mov	byte ptr [rsp + 0x28], 1
0x42f73c:	add	r15, 1
0x42f740:	or	byte ptr [rsp + 0x46], r8b
0x42f745:	mov	byte ptr [rsp], 0
0x42f749:	mov	byte ptr [rsp + 0x45], 1
0x42f74e:	mov	qword ptr [rsp + 0x18], 0
0x42f757:	mov	qword ptr [rsp + 0x10], 0
0x42f760:	jmp	0x42f680
0x42f765:	movzx	r14d, byte ptr [rsp + 0x28]
0x42f76b:	xor	r14d, 1
0x42f76f:	or	r14b, byte ptr [rsp]
0x42f773:	jne	0x42f967
0x42f779:	cmp	dil, 0x7c
0x42f77d:	je	0x42f962
0x42f783:	test	r10b, r10b
0x42f786:	jne	0x42f95d
0x42f78c:	test	r11b, r11b
0x42f78f:	jne	0x42f958
0x42f795:	or	dl, r9b
0x42f798:	mov	byte ptr [rsp + 0x45], dl
0x42f79c:	jne	0x42f953
0x42f7a2:	movzx	r12d, byte ptr [rsp + 0x46]
0x42f7a8:	xor	r12d, 1
0x42f7ac:	mov	byte ptr [rsp], r12b
0x42f7b0:	jmp	0x42f3cd
0x42f7b5:	mov	rdi, qword ptr [rsp + 0x10]
0x42f7ba:	mov	r13, qword ptr [rsp + 0x18]
0x42f7bf:	xor	edx, edx
0x42f7c1:	mov	byte ptr [rsp + 0x47], bl
0x42f7c5:	mov	qword ptr [rsp + 0x38], rbp
0x42f7ca:	mov	rbp, rdx
0x42f7cd:	sub	r13, rdi
0x42f7d0:	mov	qword ptr [rsp + 0x48], r15
0x42f7d5:	mov	rbx, rdi
0x42f7d8:	mov	qword ptr [rsp + 0x20], r13
0x42f7dd:	mov	dword ptr [rsp + 0x40], r13d
0x42f7e2:	jmp	0x42f80d
0x42f7e4:	imul	r15, rbp, 0x18
0x42f7e8:	add	r15, qword ptr [rip + 0xb5239]
0x42f7ef:	mov	r12d, dword ptr [rsp + 0x20]
0x42f7f4:	mov	rsi, rbx
0x42f7f7:	mov	r15, qword ptr [r15]
0x42f7fa:	mov	rdx, r12
0x42f7fd:	mov	rdi, r15
0x42f800:	call	0x4038d0
0x42f805:	test	eax, eax
0x42f807:	je	0x42f82c
0x42f809:	add	rbp, 1
0x42f80d:	cmp	dword ptr [rip + 0xb521d], ebp
0x42f813:	mov	r13d, ebp
0x42f816:	jg	0x42f7e4
0x42f818:	movzx	ebx, byte ptr [rsp + 0x47]
0x42f81d:	mov	rbp, qword ptr [rsp + 0x38]
0x42f822:	mov	r15, qword ptr [rsp + 0x48]
0x42f827:	jmp	0x42f5f8
0x42f82c:	mov	esi, dword ptr [rsp + 0x40]
0x42f830:	mov	edi, r13d
0x42f833:	call	0x43b250
0x42f838:	test	eax, eax
0x42f83a:	je	0x42f809
0x42f83c:	xor	esi, esi
0x42f83e:	lea	rdx, [r15 + r12]
0x42f842:	mov	rdi, r14
0x42f845:	call	0x43a4f0
0x42f84a:	test	eax, eax
0x42f84c:	js	0x40a61f
0x42f852:	mov	esi, 1
0x42f857:	mov	edi, r13d
0x42f85a:	call	0x43c3a0
0x42f85f:	mov	qword ptr [rip + 0xb6a8e], 0
0x42f86a:	jmp	0x42f809
0x42f86c:	cmp	byte ptr [rbp + rbx], 0
0x42f871:	jne	0x42f6ca
0x42f877:	or	esi, 0xffffffff
0x42f87a:	mov	edi, r13d
0x42f87d:	call	0x43b250
0x42f882:	test	eax, eax
0x42f884:	je	0x42f6ca
0x42f88a:	mov	byte ptr [r12 + 0x16], 1
0x42f890:	jmp	0x42f6ca
0x42f895:	test	r9b, r9b
0x42f898:	jne	0x42f94e
0x42f89e:	mov	byte ptr [rsp + 0x45], 0
0x42f8a3:	jmp	0x42f368
0x42f8a8:	jmp	0x40a601
0x42f8ad:	jmp	0x40a601
0x42f8b2:	mov	rbx, qword ptr [rip + 0xb6967]
0x42f8b9:	test	rbx, rbx
0x42f8bc:	je	0x40a618
0x42f8c2:	mov	rdx, r12
0x42f8c5:	mov	rsi, r14
0x42f8c8:	mov	rdi, rbx
0x42f8cb:	mov	byte ptr [rsp + 0x20], r11b
0x42f8d0:	sub	rdx, r14
0x42f8d3:	mov	qword ptr [rsp], rdx
0x42f8d7:	call	0x4038d0
0x42f8dc:	movzx	r11d, byte ptr [rsp + 0x20]
0x42f8e2:	test	eax, eax
0x42f8e4:	jne	0x42f931
0x42f8e6:	mov	rdx, qword ptr [rsp]
0x42f8ea:	cmp	byte ptr [rbx + rdx], 0
0x42f8ee:	sete	dil
0x42f8f2:	mov	byte ptr [rsp + 0x5f], dil
0x42f8f7:	jmp	0x42f3a6
0x42f8fc:	mov	r12, r15
0x42f8ff:	test	ebx, ebx
0x42f901:	jne	0x40a48c
0x42f907:	cmp	byte ptr [r15], 0x2a
0x42f90b:	jne	0x42f2f1
0x42f911:	add	r15, 1
0x42f915:	mov	r9d, 1
0x42f91b:	jmp	0x42f2f1
0x42f920:	add	r14, 1
0x42f924:	xor	edx, edx
0x42f926:	mov	r10d, 1
0x42f92c:	jmp	0x42f294
0x42f931:	xor	edi, edi
0x42f933:	jmp	0x42f8f2
0x42f935:	jmp	0x40a556
0x42f93a:	jmp	0x40a601
0x42f93f:	jmp	0x40a601
0x42f944:	jmp	0x40a601
0x42f949:	jmp	0x40a556
0x42f94e:	jmp	0x40a601
0x42f953:	jmp	0x40a601
0x42f958:	jmp	0x40a601
0x42f95d:	jmp	0x40a601
0x42f962:	jmp	0x40a601
0x42f967:	jmp	0x40a601
0x42f96c:	jmp	0x40a601
0x42f971:	jmp	0x40a601
0x42f976:	jmp	0x40a601
0x42f97b:	jmp	0x40a601
0x42f980:	push	r15
0x42f982:	sub	rsi, rdi
0x42f985:	push	r14
0x42f987:	mov	r14d, 0xffffffff
0x42f98d:	push	r13
0x42f98f:	push	r12
0x42f991:	push	rbp
0x42f992:	push	rbx
0x42f993:	sub	rsp, 0x28
0x42f997:	test	edx, edx
0x42f999:	cmovne	r14d, esi
0x42f99d:	cmp	dword ptr [rip + 0xb508c], 0
0x42f9a4:	mov	dword ptr [rsp + 0x10], r14d
0x42f9a9:	jle	0x42fa28
0x42f9ab:	cmp	edx, 1
0x42f9ae:	mov	r13d, esi
0x42f9b1:	mov	r12d, edx
0x42f9b4:	mov	r14, qword ptr [rip + 0xb506d]
0x42f9bb:	sbb	eax, eax
0x42f9bd:	sub	r13d, 1
0x42f9c1:	lea	rcx, [rdi + 1]
0x42f9c5:	mov	rbp, rdi
0x42f9c8:	or	eax, 1
0x42f9cb:	movsxd	rdx, r13d
0x42f9ce:	mov	qword ptr [rsp + 8], rcx
0x42f9d3:	movsxd	rbx, esi
0x42f9d6:	mov	dword ptr [rsp + 0x14], eax
0x42f9da:	xor	r15d, r15d
0x42f9dd:	mov	qword ptr [rsp], rdx
0x42f9e1:	nop	dword ptr [rax]
0x42f9e8:	mov	r13, qword ptr [r14]
0x42f9eb:	mov	rdx, rbx
0x42f9ee:	mov	rsi, rbp
0x42f9f1:	mov	rdi, r13
0x42f9f4:	call	0x4038d0
0x42f9f9:	test	eax, eax
0x42f9fb:	je	0x42fa44
0x42f9fd:	mov	rsi, qword ptr [r14 + 8]
0x42fa01:	test	rsi, rsi
0x42fa04:	je	0x42fa17
0x42fa06:	movzx	edi, byte ptr [r13]
0x42fa0b:	cmp	dil, 0x44
0x42fa0f:	je	0x42fa39
0x42fa11:	cmp	dil, 0x55
0x42fa15:	je	0x42fa39
0x42fa17:	add	r15d, 1
0x42fa1b:	add	r14, 0x18
0x42fa1f:	cmp	dword ptr [rip + 0xb500a], r15d
0x42fa26:	jg	0x42f9e8
0x42fa28:	xor	eax, eax
0x42fa2a:	add	rsp, 0x28
0x42fa2e:	pop	rbx
0x42fa2f:	pop	rbp
0x42fa30:	pop	r12
0x42fa32:	pop	r13
0x42fa34:	pop	r14
0x42fa36:	pop	r15
0x42fa38:	ret	
0x42fa39:	cmp	dil, byte ptr [rbp]
0x42fa3d:	jne	0x42fa17
0x42fa3f:	jmp	0x40a654
0x42fa44:	test	r12d, r12d
0x42fa47:	jne	0x42fa51
0x42fa49:	cmp	byte ptr [r13 + rbx], 0
0x42fa4f:	jne	0x42f9fd
0x42fa51:	mov	esi, dword ptr [rsp + 0x10]
0x42fa55:	mov	edi, r15d
0x42fa58:	call	0x43b250
0x42fa5d:	test	eax, eax
0x42fa5f:	je	0x42f9fd
0x42fa61:	mov	eax, 1
0x42fa66:	jmp	0x42fa2a
0x42fa68:	nop	dword ptr [rax + rax]
0x42fa70:	push	r15
0x42fa72:	movzx	eax, sil
0x42fa76:	push	r14
0x42fa78:	push	r13
0x42fa7a:	push	r12
0x42fa7c:	push	rbp
0x42fa7d:	push	rbx
0x42fa7e:	mov	rbx, rdi
0x42fa81:	sub	rsp, 0x18
0x42fa85:	mov	byte ptr [rsp + 0xf], al
0x42fa89:	mov	byte ptr [rsp + 0xe], dl
0x42fa8d:	mov	byte ptr [rsp + 0xc], 0
0x42fa92:	mov	byte ptr [rsp + 0xd], 0
0x42fa97:	mov	dword ptr [rsp + 8], eax
0x42fa9b:	movzx	ecx, byte ptr [rbx]
0x42fa9e:	cmp	cl, 9
0x42faa1:	je	0x42fea9
0x42faa7:	cmp	cl, 0x20
0x42faaa:	je	0x42fea9
0x42fab0:	cmp	cl, 0x21
0x42fab3:	je	0x42fd84
0x42fab9:	and	ecx, 0xfffffffd
0x42fabc:	cmp	cl, 0x2c
0x42fabf:	je	0x42ff41
0x42fac5:	mov	r13, rbx
0x42fac8:	jmp	0x42fad4
0x42faca:	nop	word ptr [rax + rax]
0x42fad0:	add	r13, 1
0x42fad4:	movzx	esi, byte ptr [r13]
0x42fad9:	mov	r8, rsi
0x42fadc:	test	word ptr [rsi + rsi + 0x4bc840], 0x204
0x42fae6:	jne	0x42fad0
0x42fae8:	lea	edi, [rsi - 0x2b]
0x42faeb:	cmp	dil, 0x15
0x42faef:	ja	0x42fda6
0x42faf5:	mov	ebp, 0x24000f
0x42fafa:	bt	rbp, rdi
0x42fafe:	jb	0x42fad0
0x42fb00:	mov	rbp, r13
0x42fb03:	sub	rbp, rbx
0x42fb06:	cmp	byte ptr [rsp + 0xd], 0
0x42fb0b:	jne	0x42fefe
0x42fb11:	mov	r9d, dword ptr [rip + 0xb4f18]
0x42fb18:	test	r9d, r9d
0x42fb1b:	jle	0x42fefe
0x42fb21:	sub	r9d, 1
0x42fb25:	cmp	byte ptr [rsp + 0xc], 0
0x42fb2a:	mov	r15, qword ptr [rip + 0xb4ef7]
0x42fb31:	jne	0x42fe56
0x42fb37:	lea	r11, [r9 + r9*2]
0x42fb3b:	lea	r12, [r15 + r11*8 + 0x18]
0x42fb40:	jmp	0x42fb51
0x42fb42:	nop	word ptr [rax + rax]
0x42fb48:	add	r15, 0x18
0x42fb4c:	cmp	r12, r15
0x42fb4f:	je	0x42fb90
0x42fb51:	mov	r14, qword ptr [r15]
0x42fb54:	mov	rdx, rbp
0x42fb57:	mov	rsi, rbx
0x42fb5a:	mov	rdi, r14
0x42fb5d:	call	0x4038d0
0x42fb62:	test	eax, eax
0x42fb64:	jne	0x42fb48
0x42fb66:	cmp	byte ptr [r14 + rbp], 0
0x42fb6b:	jne	0x42fb48
0x42fb6d:	cmp	byte ptr [r15 + 0x14], 0
0x42fb72:	jne	0x42fb7b
0x42fb74:	cmp	byte ptr [rsp + 0xf], 0
0x42fb79:	je	0x42fb80
0x42fb7b:	mov	byte ptr [r15 + 0x15], 1
0x42fb80:	add	r15, 0x18
0x42fb84:	cmp	r15, r12
0x42fb87:	jne	0x42fb51
0x42fb89:	nop	dword ptr [rax]
0x42fb90:	cmp	byte ptr [rsp + 0xe], 0
0x42fb95:	je	0x42ff34
0x42fb9b:	movzx	edx, byte ptr [r13]
0x42fba0:	test	dl, dl
0x42fba2:	je	0x40a9bb
0x42fba8:	movzx	eax, byte ptr [r13 + 1]
0x42fbad:	lea	rbx, [r13 + 1]
0x42fbb1:	test	al, al
0x42fbb3:	je	0x42fd72
0x42fbb9:	cmp	dl, 0x7c
0x42fbbc:	je	0x42fa9b
0x42fbc2:	cmp	dl, 0x26
0x42fbc5:	je	0x42fa9b
0x42fbcb:	cmp	dl, 0x3a
0x42fbce:	jne	0x42fd72
0x42fbd4:	test	al, al
0x42fbd6:	je	0x42fd63
0x42fbdc:	cmp	al, 0x3b
0x42fbde:	je	0x42fed0
0x42fbe4:	lea	rcx, [rbx + 1]
0x42fbe8:	movzx	edx, byte ptr [rbx + 1]
0x42fbec:	mov	rdi, rcx
0x42fbef:	cmp	al, 0x7d
0x42fbf1:	je	0x42fd60
0x42fbf7:	cmp	al, 0x25
0x42fbf9:	je	0x42fe9c
0x42fbff:	cmp	dl, 0x3b
0x42fc02:	je	0x42fecb
0x42fc08:	test	dl, dl
0x42fc0a:	je	0x42fecb
0x42fc10:	movzx	eax, byte ptr [rbx + 2]
0x42fc14:	lea	rcx, [rbx + 2]
0x42fc18:	cmp	dl, 0x7d
0x42fc1b:	je	0x42fd5c
0x42fc21:	cmp	dl, 0x25
0x42fc24:	je	0x42fde8
0x42fc2a:	cmp	al, 0x3b
0x42fc2c:	je	0x42ff3c
0x42fc32:	test	al, al
0x42fc34:	je	0x42ff3c
0x42fc3a:	movzx	edx, byte ptr [rbx + 3]
0x42fc3e:	lea	rdi, [rbx + 3]
0x42fc42:	cmp	al, 0x7d
0x42fc44:	je	0x42febf
0x42fc4a:	cmp	al, 0x25
0x42fc4c:	je	0x42fe4c
0x42fc52:	cmp	dl, 0x3b
0x42fc55:	je	0x42fecb
0x42fc5b:	test	dl, dl
0x42fc5d:	je	0x42fecb
0x42fc63:	movzx	eax, byte ptr [rbx + 4]
0x42fc67:	lea	rcx, [rbx + 4]
0x42fc6b:	cmp	dl, 0x7d
0x42fc6e:	je	0x42feec
0x42fc74:	cmp	dl, 0x25
0x42fc77:	je	0x42fde8
0x42fc7d:	cmp	al, 0x3b
0x42fc7f:	je	0x42ff3c
0x42fc85:	test	al, al
0x42fc87:	je	0x42ff3c
0x42fc8d:	movzx	edx, byte ptr [rbx + 5]
0x42fc91:	lea	rdi, [rbx + 5]
0x42fc95:	cmp	al, 0x7d
0x42fc97:	je	0x42fef5
0x42fc9d:	cmp	al, 0x25
0x42fc9f:	je	0x42fe4c
0x42fca5:	cmp	dl, 0x3b
0x42fca8:	je	0x42fecb
0x42fcae:	test	dl, dl
0x42fcb0:	je	0x42fecb
0x42fcb6:	movzx	eax, byte ptr [rbx + 6]
0x42fcba:	lea	rcx, [rbx + 6]
0x42fcbe:	cmp	dl, 0x7d
0x42fcc1:	je	0x42ff11
0x42fcc7:	cmp	dl, 0x25
0x42fcca:	je	0x42fde8
0x42fcd0:	test	al, al
0x42fcd2:	je	0x42ff3c
0x42fcd8:	cmp	al, 0x3b
0x42fcda:	je	0x42ff3c
0x42fce0:	movzx	edx, byte ptr [rbx + 7]
0x42fce4:	lea	r13, [rbx + 7]
0x42fce8:	cmp	al, 0x7d
0x42fcea:	je	0x42ff1a
0x42fcf0:	cmp	al, 0x25
0x42fcf2:	je	0x42feb2
0x42fcf8:	test	dl, dl
0x42fcfa:	je	0x42fec8
0x42fd00:	cmp	dl, 0x3b
0x42fd03:	je	0x42fec8
0x42fd09:	movzx	eax, byte ptr [rbx + 8]
0x42fd0d:	lea	rdi, [rbx + 8]
0x42fd11:	cmp	dl, 0x7d
0x42fd14:	je	0x42ff23
0x42fd1a:	cmp	dl, 0x25
0x42fd1d:	je	0x42fee1
0x42fd23:	test	al, al
0x42fd25:	je	0x42fecd
0x42fd2b:	cmp	al, 0x3b
0x42fd2d:	je	0x42fecd
0x42fd33:	mov	ebx, eax
0x42fd35:	mov	rsi, rdi
0x42fd38:	movzx	eax, byte ptr [rdi + 1]
0x42fd3c:	add	rdi, 1
0x42fd40:	cmp	bl, 0x7d
0x42fd43:	je	0x42ff2c
0x42fd49:	cmp	bl, 0x25
0x42fd4c:	jne	0x42fd23
0x42fd4e:	mov	r8, rdi
0x42fd51:	mov	rdi, rsi
0x42fd54:	mov	rbx, r8
0x42fd57:	jmp	0x42fdeb
0x42fd5c:	lea	rcx, [rbx + 2]
0x42fd60:	mov	rbx, rcx
0x42fd63:	cmp	byte ptr [rbx], 0
0x42fd66:	je	0x42fd72
0x42fd68:	cmp	byte ptr [rbx - 1], 0x3b
0x42fd6c:	je	0x42fa9b
0x42fd72:	add	rsp, 0x18
0x42fd76:	mov	rax, rbx
0x42fd79:	pop	rbx
0x42fd7a:	pop	rbp
0x42fd7b:	pop	r12
0x42fd7d:	pop	r13
0x42fd7f:	pop	r14
0x42fd81:	pop	r15
0x42fd83:	ret	
0x42fd84:	movzx	ecx, byte ptr [rbx + 1]
0x42fd88:	lea	rdx, [rbx + 1]
0x42fd8c:	cmp	cl, 0x20
0x42fd8f:	je	0x40a9a0
0x42fd95:	cmp	cl, 9
0x42fd98:	je	0x40a9a0
0x42fd9e:	mov	rbx, rdx
0x42fda1:	jmp	0x42fab9
0x42fda6:	mov	rbp, r13
0x42fda9:	sub	rbp, rbx
0x42fdac:	cmp	sil, 0x2a
0x42fdb0:	jne	0x42fdc0
0x42fdb2:	mov	byte ptr [rsp + 0xc], 1
0x42fdb7:	movzx	r8d, byte ptr [r13 + 1]
0x42fdbc:	add	r13, 1
0x42fdc0:	cmp	r8b, 0x20
0x42fdc4:	je	0x42fdd0
0x42fdc6:	cmp	r8b, 9
0x42fdca:	jne	0x42fb06
0x42fdd0:	movzx	r8d, byte ptr [r13 + 1]
0x42fdd5:	add	r13, 1
0x42fdd9:	cmp	r8b, 0x20
0x42fddd:	jne	0x42fdc6
0x42fddf:	jmp	0x42fdd0
0x42fde1:	nop	dword ptr [rax]
0x42fde8:	mov	rbx, rcx
0x42fdeb:	cmp	al, 0x7b
0x42fded:	sete	bpl
0x42fdf1:	cmp	al, 0x3c
0x42fdf3:	je	0x42fe30
0x42fdf5:	test	bpl, bpl
0x42fdf8:	jne	0x42fe30
0x42fdfa:	cmp	al, 0x57
0x42fdfc:	je	0x42fe06
0x42fdfe:	cmp	al, 0x40
0x42fe00:	jne	0x42fbd4
0x42fe06:	cmp	byte ptr [rdi + 2], 0x7b
0x42fe0a:	jne	0x42fbd4
0x42fe10:	mov	esi, dword ptr [rsp + 8]
0x42fe14:	lea	rdi, [rdi + 3]
0x42fe18:	mov	edx, 1
0x42fe1d:	call	0x42fa70
0x42fe22:	mov	rbx, rax
0x42fe25:	movzx	eax, byte ptr [rax]
0x42fe28:	jmp	0x42fbd4
0x42fe2d:	nop	dword ptr [rax]
0x42fe30:	mov	esi, dword ptr [rsp + 8]
0x42fe34:	lea	rdi, [rdi + 2]
0x42fe38:	movzx	edx, bpl
0x42fe3c:	call	0x42fa70
0x42fe41:	mov	rbx, rax
0x42fe44:	movzx	eax, byte ptr [rax]
0x42fe47:	jmp	0x42fbd4
0x42fe4c:	mov	rbx, rdi
0x42fe4f:	mov	eax, edx
0x42fe51:	mov	rdi, rcx
0x42fe54:	jmp	0x42fdeb
0x42fe56:	imul	r10, r9, 0x18
0x42fe5a:	lea	r12, [r15 + r10 + 0x18]
0x42fe5f:	jmp	0x42fe75
0x42fe61:	nop	dword ptr [rax]
0x42fe68:	add	r15, 0x18
0x42fe6c:	cmp	r15, r12
0x42fe6f:	je	0x42fb90
0x42fe75:	mov	rdi, qword ptr [r15]
0x42fe78:	mov	rdx, rbp
0x42fe7b:	mov	rsi, rbx
0x42fe7e:	call	0x4038d0
0x42fe83:	test	eax, eax
0x42fe85:	jne	0x42fe68
0x42fe87:	cmp	byte ptr [r15 + 0x14], 0
0x42fe8c:	jne	0x42fe95
0x42fe8e:	cmp	byte ptr [rsp + 0xf], 0
0x42fe93:	je	0x42fe68
0x42fe95:	mov	byte ptr [r15 + 0x15], 1
0x42fe9a:	jmp	0x42fe68
0x42fe9c:	mov	rdi, rbx
0x42fe9f:	mov	eax, edx
0x42fea1:	mov	rbx, rcx
0x42fea4:	jmp	0x42fdeb
0x42fea9:	add	rbx, 1
0x42fead:	jmp	0x42fa9b
0x42feb2:	mov	rbx, r13
0x42feb5:	mov	eax, edx
0x42feb7:	mov	rdi, rcx
0x42feba:	jmp	0x42fdeb
0x42febf:	add	rcx, 1
0x42fec3:	jmp	0x42fd60
0x42fec8:	mov	rdi, r13
0x42fecb:	mov	eax, edx
0x42fecd:	mov	rbx, rdi
0x42fed0:	test	al, al
0x42fed2:	je	0x42fd63
0x42fed8:	lea	rcx, [rbx + 1]
0x42fedc:	jmp	0x42fd60
0x42fee1:	mov	rbx, rdi
0x42fee4:	mov	rdi, r13
0x42fee7:	jmp	0x42fdeb
0x42feec:	lea	rcx, [rbx + 4]
0x42fef0:	jmp	0x42fd60
0x42fef5:	lea	rcx, [rbx + 5]
0x42fef9:	jmp	0x42fd60
0x42fefe:	cmp	byte ptr [rsp + 0xe], 0
0x42ff03:	mov	rbx, r13
0x42ff06:	jne	0x42fb9b
0x42ff0c:	jmp	0x42fd72
0x42ff11:	lea	rcx, [rdi + 1]
0x42ff15:	jmp	0x42fd60
0x42ff1a:	lea	rcx, [rbx + 7]
0x42ff1e:	jmp	0x42fd60
0x42ff23:	lea	rcx, [r13 + 1]
0x42ff27:	jmp	0x42fd60
0x42ff2c:	mov	rcx, rdi
0x42ff2f:	jmp	0x42fd60
0x42ff34:	mov	rbx, r13
0x42ff37:	jmp	0x42fd72
0x42ff3c:	mov	rdi, rcx
0x42ff3f:	jmp	0x42fecd
0x42ff41:	mov	byte ptr [rsp + 0xd], 1
0x42ff46:	add	rbx, 1
0x42ff4a:	jmp	0x42fac5
0x42ff4f:	nop	
0x42ff50:	endbr64	
0x42ff54:	cmp	dil, 0x20
0x42ff58:	sete	al
0x42ff5b:	cmp	dil, 9
0x42ff5f:	sete	dl
0x42ff62:	or	eax, edx
0x42ff64:	ret	
0x42ff65:	nop	word ptr cs:[rax + rax]
0x42ff70:	push	r15
0x42ff72:	push	r14
0x42ff74:	push	r13
0x42ff76:	push	r12
0x42ff78:	push	rbp
0x42ff79:	push	rbx
0x42ff7a:	sub	rsp, 0x28
0x42ff7e:	test	rdi, rdi
0x42ff81:	je	0x40abe8
0x42ff87:	mov	r12, rsi
0x42ff8a:	test	rsi, rsi
0x42ff8d:	je	0x40abd4
0x42ff93:	mov	rbp, rdx
0x42ff96:	test	rdx, rdx
0x42ff99:	je	0x40abc0
0x42ff9f:	mov	eax, dword ptr [rsi + 0x3c]
0x42ffa2:	and	eax, 0x1783fff
0x42ffa7:	cmp	eax, 0x1400000
0x42ffac:	je	0x43016a
0x42ffb2:	mov	r14, rdi
0x42ffb5:	lea	rdi, [rdx + 1]
0x42ffb9:	mov	r13d, 0x48b860
0x42ffbf:	mov	qword ptr [rsp + 8], rdi
0x42ffc4:	call	0x42db40
0x42ffc9:	lea	rsi, [rsp + 0x18]
0x42ffce:	mov	rdi, r14
0x42ffd1:	mov	qword ptr [rsp + 0x18], rax
0x42ffd6:	call	0x439540
0x42ffdb:	jmp	0x430125
0x42ffe0:	mov	rdx, rbx
0x42ffe3:	mov	rsi, r15
0x42ffe6:	mov	rdi, rbp
0x42ffe9:	call	0x4038d0
0x42ffee:	test	eax, eax
0x42fff0:	je	0x4302a4
0x42fff6:	mov	r15, qword ptr [r13 + 0x30]
0x42fffa:	lea	rbx, [r13 + 0x20]
0x42fffe:	mov	rdi, r15
0x430001:	call	0x4039e0
0x430006:	cmp	byte ptr [r12 + 0x40], 0
0x43000c:	mov	r13, rax
0x43000f:	js	0x4301b2
0x430015:	mov	rdx, r13
0x430018:	mov	rsi, r15
0x43001b:	mov	rdi, rbp
0x43001e:	call	0x4038d0
0x430023:	test	eax, eax
0x430025:	je	0x430278
0x43002b:	mov	rsi, qword ptr [rbx + 0x30]
0x43002f:	lea	r15, [rbx + 0x20]
0x430033:	mov	rdi, rsi
0x430036:	mov	qword ptr [rsp], rsi
0x43003a:	call	0x4039e0
0x43003f:	cmp	byte ptr [r12 + 0x40], 0
0x430045:	mov	rsi, qword ptr [rsp]
0x430049:	mov	r13, rax
0x43004c:	js	0x4301a2
0x430052:	mov	rdx, r13
0x430055:	mov	rdi, rbp
0x430058:	call	0x4038d0
0x43005d:	test	eax, eax
0x43005f:	je	0x43024b
0x430065:	mov	r9, qword ptr [rbx + 0x50]
0x430069:	lea	r15, [rbx + 0x40]
0x43006d:	mov	rdi, r9
0x430070:	mov	qword ptr [rsp], r9
0x430074:	call	0x4039e0
0x430079:	cmp	byte ptr [r12 + 0x40], 0
0x43007f:	mov	rsi, qword ptr [rsp]
0x430083:	mov	r13, rax
0x430086:	js	0x430192
0x43008c:	mov	rdx, r13
0x43008f:	mov	rdi, rbp
0x430092:	call	0x4038d0
0x430097:	test	eax, eax
0x430099:	je	0x43021e
0x43009f:	mov	r11, qword ptr [rbx + 0x70]
0x4300a3:	lea	r15, [rbx + 0x60]
0x4300a7:	mov	rdi, r11
0x4300aa:	mov	qword ptr [rsp], r11
0x4300ae:	call	0x4039e0
0x4300b3:	cmp	byte ptr [r12 + 0x40], 0
0x4300b9:	mov	rsi, qword ptr [rsp]
0x4300bd:	mov	r13, rax
0x4300c0:	js	0x430182
0x4300c6:	mov	rdx, r13
0x4300c9:	mov	rdi, rbp
0x4300cc:	call	0x4038d0
0x4300d1:	test	eax, eax
0x4300d3:	je	0x4301f1
0x4300d9:	mov	rdx, qword ptr [rbx + 0x90]
0x4300e0:	lea	r15, [rbx + 0x80]
0x4300e7:	mov	rdi, rdx
0x4300ea:	mov	qword ptr [rsp], rdx
0x4300ee:	call	0x4039e0
0x4300f3:	cmp	byte ptr [r12 + 0x40], 0
0x4300f9:	mov	rsi, qword ptr [rsp]
0x4300fd:	mov	r13, rax
0x430100:	js	0x430179
0x430102:	mov	rdx, r13
0x430105:	mov	rdi, rbp
0x430108:	call	0x4038d0
0x43010d:	test	eax, eax
0x43010f:	je	0x4301c1
0x430115:	lea	r13, [rbx + 0xa0]
0x43011c:	cmp	rbx, 0x48ba00
0x430123:	je	0x430150
0x430125:	mov	r15, qword ptr [r13 + 0x10]
0x430129:	mov	rdi, r15
0x43012c:	call	0x4039e0
0x430131:	cmp	byte ptr [r12 + 0x40], 0
0x430137:	mov	rbx, rax
0x43013a:	jns	0x42ffe0
0x430140:	cmp	byte ptr [r13 + 0x19], 0
0x430145:	jne	0x42fff6
0x43014b:	jmp	0x42ffe0
0x430150:	mov	edx, 8
0x430155:	mov	esi, 0x4be5e1
0x43015a:	mov	rdi, rbp
0x43015d:	call	0x4038d0
0x430162:	test	eax, eax
0x430164:	je	0x4302d1
0x43016a:	add	rsp, 0x28
0x43016e:	pop	rbx
0x43016f:	pop	rbp
0x430170:	pop	r12
0x430172:	pop	r13
0x430174:	pop	r14
0x430176:	pop	r15
0x430178:	ret	
0x430179:	cmp	byte ptr [r15 + 0x19], 0
0x43017e:	je	0x430102
0x430180:	jmp	0x430115
0x430182:	cmp	byte ptr [r15 + 0x19], 0
0x430187:	je	0x4300c6
0x43018d:	jmp	0x4300d9
0x430192:	cmp	byte ptr [r15 + 0x19], 0
0x430197:	je	0x43008c
0x43019d:	jmp	0x43009f
0x4301a2:	cmp	byte ptr [r15 + 0x19], 0
0x4301a7:	je	0x430052
0x4301ad:	jmp	0x430065
0x4301b2:	cmp	byte ptr [rbx + 0x19], 0
0x4301b6:	je	0x430015
0x4301bc:	jmp	0x43002b
0x4301c1:	mov	rdi, qword ptr [rbx + 0x80]
0x4301c8:	lea	rsi, [rbp + r13]
0x4301cd:	xor	edx, edx
0x4301cf:	xor	eax, eax
0x4301d1:	lea	rdi, [rdi + 1]
0x4301d5:	call	0x42d870
0x4301da:	lea	rsi, [rsp + 0x18]
0x4301df:	mov	rdi, r14
0x4301e2:	mov	qword ptr [rsp + 0x18], rax
0x4301e7:	call	0x439540
0x4301ec:	jmp	0x430115
0x4301f1:	mov	rax, qword ptr [rbx + 0x60]
0x4301f5:	lea	rsi, [rbp + r13]
0x4301fa:	xor	edx, edx
0x4301fc:	lea	rdi, [rax + 1]
0x430200:	xor	eax, eax
0x430202:	call	0x42d870
0x430207:	lea	rsi, [rsp + 0x18]
0x43020c:	mov	rdi, r14
0x43020f:	mov	qword ptr [rsp + 0x18], rax
0x430214:	call	0x439540
0x430219:	jmp	0x4300d9
0x43021e:	mov	r10, qword ptr [rbx + 0x40]
0x430222:	lea	rsi, [rbp + r13]
0x430227:	xor	edx, edx
0x430229:	xor	eax, eax
0x43022b:	lea	rdi, [r10 + 1]
0x43022f:	call	0x42d870
0x430234:	lea	rsi, [rsp + 0x18]
0x430239:	mov	rdi, r14
0x43023c:	mov	qword ptr [rsp + 0x18], rax
0x430241:	call	0x439540
0x430246:	jmp	0x43009f
0x43024b:	mov	r8, qword ptr [rbx + 0x20]
0x43024f:	lea	rsi, [rbp + r13]
0x430254:	xor	edx, edx
0x430256:	xor	eax, eax
0x430258:	lea	rdi, [r8 + 1]
0x43025c:	call	0x42d870
0x430261:	lea	rsi, [rsp + 0x18]
0x430266:	mov	rdi, r14
0x430269:	mov	qword ptr [rsp + 0x18], rax
0x43026e:	call	0x439540
0x430273:	jmp	0x430065
0x430278:	mov	rcx, qword ptr [rbx]
0x43027b:	lea	rsi, [rbp + r13]
0x430280:	xor	edx, edx
0x430282:	xor	eax, eax
0x430284:	lea	rdi, [rcx + 1]
0x430288:	call	0x42d870
0x43028d:	lea	rsi, [rsp + 0x18]
0x430292:	mov	rdi, r14
0x430295:	mov	qword ptr [rsp + 0x18], rax
0x43029a:	call	0x439540
0x43029f:	jmp	0x43002b
0x4302a4:	mov	rdx, qword ptr [r13]
0x4302a8:	lea	rsi, [rbp + rbx]
0x4302ad:	xor	eax, eax
0x4302af:	lea	rdi, [rdx + 1]
0x4302b3:	xor	edx, edx
0x4302b5:	call	0x42d870
0x4302ba:	lea	rsi, [rsp + 0x18]
0x4302bf:	mov	rdi, r14
0x4302c2:	mov	qword ptr [rsp + 0x18], rax
0x4302c7:	call	0x439540
0x4302cc:	jmp	0x42fff6
0x4302d1:	mov	rdi, qword ptr [rsp + 8]
0x4302d6:	call	0x42db40
0x4302db:	cmp	byte ptr [rax + 6], 0x3d
0x4302df:	mov	qword ptr [rsp + 0x18], rax
0x4302e4:	jne	0x40abac
0x4302ea:	mov	byte ptr [rax + 6], 0x20
0x4302ee:	lea	rsi, [rsp + 0x18]
0x4302f3:	mov	rdi, r14
0x4302f6:	call	0x439540
0x4302fb:	jmp	0x43016a
0x430300:	endbr64	
0x430304:	push	r13
0x430306:	push	r12
0x430308:	push	rbp
0x430309:	mov	rbp, rdi
0x43030c:	push	rbx
0x43030d:	mov	rbx, rsi
0x430310:	push	rcx
0x430311:	cmp	byte ptr [rsi + 0x18], 0
0x430315:	jne	0x40ac83
0x43031b:	mov	r12, qword ptr [rbx + 0x10]
0x43031f:	test	r12, r12
0x430322:	je	0x430345
0x430324:	mov	rdi, rbp
0x430327:	call	0x4039e0
0x43032c:	mov	rsi, qword ptr [rbx + 8]
0x430330:	lea	rdx, [r12 + 1]
0x430335:	mov	r13, rax
0x430338:	lea	rdi, [rbp + rax]
0x43033d:	call	0x403c60
0x430342:	mov	r12, r13
0x430345:	mov	esi, 1
0x43034a:	mov	rdi, rbp
0x43034d:	call	0x439310
0x430352:	test	eax, eax
0x430354:	jne	0x430360
0x430356:	pop	rdx
0x430357:	xor	eax, eax
0x430359:	pop	rbx
0x43035a:	pop	rbp
0x43035b:	pop	r12
0x43035d:	pop	r13
0x43035f:	ret	
0x430360:	mov	rdi, qword ptr [rbx]
0x430363:	xor	edx, edx
0x430365:	mov	esi, 1
0x43036a:	call	0x43a4f0
0x43036f:	cmp	byte ptr [rbx + 0x19], 0
0x430373:	je	0x430383
0x430375:	xor	edx, edx
0x430377:	xor	esi, esi
0x430379:	mov	edi, 0x4c6c55
0x43037e:	call	0x43a4f0
0x430383:	xor	r13d, r13d
0x430386:	cmp	qword ptr [rbx + 0x10], 0
0x43038b:	je	0x4303b8
0x43038d:	xor	edx, edx
0x43038f:	mov	esi, 1
0x430394:	mov	rdi, rbp
0x430397:	call	0x43a4f0
0x43039c:	xor	edx, edx
0x43039e:	xor	esi, esi
0x4303a0:	mov	edi, 0x4c6c55
0x4303a5:	call	0x43a4f0
0x4303aa:	cmp	qword ptr [rbx + 0x10], 0
0x4303af:	jne	0x430356
0x4303b1:	mov	byte ptr [rbp + r12 - 1], r13b
0x4303b6:	jmp	0x430356
0x4303b8:	mov	rdi, rbp
0x4303bb:	call	0x4039e0
0x4303c0:	mov	r12, rax
0x4303c3:	lea	rax, [rbp + rax - 1]
0x4303c8:	movzx	r13d, byte ptr [rax]
0x4303cc:	cmp	r13b, 0x2f
0x4303d0:	jne	0x43038d
0x4303d2:	mov	byte ptr [rax], 0
0x4303d5:	jmp	0x43038d
0x4303d7:	nop	word ptr [rax + rax]
0x4303e0:	endbr64	
0x4303e4:	cmp	dil, 0x7c
0x4303e8:	je	0x40ad92
0x4303ee:	mov	eax, 0
0x4303f3:	jg	0x430406
0x4303f5:	cmp	dil, 0x25
0x4303f9:	jg	0x430407
0x4303fb:	cmp	dil, 8
0x4303ff:	jg	0x40ad98
0x430405:	ret	
0x430406:	ret	
0x430407:	cmp	dil, 0x5c
0x43040b:	sete	al
0x43040e:	ret	
0x43040f:	nop	
0x430410:	push	rbp
0x430411:	movq	xmm0, rcx
0x430416:	mov	ebp, r8d
0x430419:	push	rbx
0x43041a:	punpcklqdq	xmm0, xmm0
0x43041e:	mov	rbx, rdi
0x430421:	mov	rdi, rsi
0x430424:	sub	rsp, 0x28
0x430428:	mov	qword ptr [rsp], rdx
0x43042c:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x430431:	call	0x403a20
0x430436:	movq	xmm1, rax
0x43043b:	movhps	xmm1, qword ptr [rsp]
0x43043f:	movaps	xmmword ptr [rsp], xmm1
0x430443:	call	0x403890
0x430448:	movdqa	xmm2, xmmword ptr [rsp]
0x43044d:	movdqa	xmm3, xmmword ptr [rsp + 0x10]
0x430453:	mov	eax, dword ptr [rax]
0x430455:	mov	dword ptr [rbx + 0x40], ebp
0x430458:	mov	qword ptr [rbx + 0x30], 0
0x430460:	mov	dword ptr [rbx + 0x10], eax
0x430463:	mov	dword ptr [rbx + 0x44], 0
0x43046a:	movups	xmmword ptr [rbx], xmm2
0x43046d:	movups	xmmword ptr [rbx + 0x20], xmm3
0x430471:	add	rsp, 0x28
0x430475:	pop	rbx
0x430476:	pop	rbp
0x430477:	ret	
0x430478:	nop	dword ptr [rax + rax]
0x430480:	endbr64	
0x430484:	push	r12
0x430486:	mov	r12, rdi
0x430489:	mov	rdi, rsi
0x43048c:	push	rbp
0x43048d:	mov	rbp, rsi
0x430490:	sub	rsp, 8
0x430494:	call	0x4039e0
0x430499:	mov	ecx, dword ptr [r12 + 0x28]
0x43049e:	lea	rdx, [rbp + rax]
0x4304a3:	test	ecx, ecx
0x4304a5:	jg	0x40d728
0x4304ab:	add	rsp, 8
0x4304af:	mov	rsi, rbp
0x4304b2:	mov	rdi, r12
0x4304b5:	pop	rbp
0x4304b6:	pop	r12
0x4304b8:	jmp	0x4304c0
0x4304ba:	nop	word ptr [rax + rax]
0x4304c0:	endbr64	
0x4304c4:	push	r15
0x4304c6:	push	r14
0x4304c8:	push	r13
0x4304ca:	push	r12
0x4304cc:	mov	r12, rsi
0x4304cf:	push	rbp
0x4304d0:	mov	rbp, rdx
0x4304d3:	push	rbx
0x4304d4:	sub	rsp, 0x18
0x4304d8:	mov	r13, qword ptr [rdi + 8]
0x4304dc:	mov	r14d, dword ptr [r13 + 0xc8]
0x4304e3:	test	r14d, r14d
0x4304e6:	jne	0x430503
0x4304e8:	mov	r15, qword ptr [rdi + 0x10]
0x4304ec:	mov	rbx, rdi
0x4304ef:	test	r15, r15
0x4304f2:	jne	0x4307da
0x4304f8:	mov	eax, dword ptr [rdi + 0x28]
0x4304fb:	test	eax, eax
0x4304fd:	jg	0x430823
0x430503:	mov	r14, qword ptr [r13 + 0xb0]
0x43050a:	sub	rbp, r12
0x43050d:	movsxd	r15, ebp
0x430510:	mov	ebx, ebp
0x430512:	mov	rdi, qword ptr [r14 + 0x18]
0x430516:	mov	rsi, qword ptr [r14 + 0x20]
0x43051a:	sub	rsi, rdi
0x43051d:	cmp	r15, rsi
0x430520:	ja	0x40d73c
0x430526:	mov	rdx, r15
0x430529:	mov	rsi, r12
0x43052c:	call	0x403c60
0x430531:	add	qword ptr [r14 + 0x18], r15
0x430535:	test	ebp, ebp
0x430537:	jle	0x4306b2
0x43053d:	cmp	byte ptr [r12], 0xa
0x430542:	je	0x4307bf
0x430548:	mov	edi, dword ptr [r13 + 0xc8]
0x43054f:	add	edi, 1
0x430552:	mov	dword ptr [r13 + 0xc8], edi
0x430559:	cmp	ebp, 1
0x43055c:	jle	0x4306b2
0x430562:	cmp	byte ptr [r12 + 1], 0xa
0x430568:	je	0x4307a4
0x43056e:	add	edi, 1
0x430571:	mov	dword ptr [r13 + 0xc8], edi
0x430578:	cmp	ebp, 2
0x43057b:	je	0x4306b2
0x430581:	cmp	byte ptr [r12 + 2], 0xa
0x430587:	je	0x430789
0x43058d:	add	edi, 1
0x430590:	mov	dword ptr [r13 + 0xc8], edi
0x430597:	cmp	ebp, 3
0x43059a:	je	0x4306b2
0x4305a0:	cmp	byte ptr [r12 + 3], 0xa
0x4305a6:	je	0x43076e
0x4305ac:	add	edi, 1
0x4305af:	mov	dword ptr [r13 + 0xc8], edi
0x4305b6:	cmp	ebp, 4
0x4305b9:	je	0x4306b2
0x4305bf:	cmp	byte ptr [r12 + 4], 0xa
0x4305c5:	je	0x430753
0x4305cb:	add	edi, 1
0x4305ce:	mov	dword ptr [r13 + 0xc8], edi
0x4305d5:	cmp	ebp, 5
0x4305d8:	je	0x4306b2
0x4305de:	cmp	byte ptr [r12 + 5], 0xa
0x4305e4:	je	0x430738
0x4305ea:	add	edi, 1
0x4305ed:	mov	dword ptr [r13 + 0xc8], edi
0x4305f4:	cmp	ebp, 6
0x4305f7:	je	0x4306b2
0x4305fd:	cmp	byte ptr [r12 + 6], 0xa
0x430603:	je	0x430721
0x430609:	add	edi, 1
0x43060c:	mov	dword ptr [r13 + 0xc8], edi
0x430613:	cmp	ebp, 7
0x430616:	je	0x4306b2
0x43061c:	cmp	byte ptr [r12 + 7], 0xa
0x430622:	je	0x4306c1
0x430628:	add	edi, 1
0x43062b:	mov	dword ptr [r13 + 0xc8], edi
0x430632:	cmp	ebp, 8
0x430635:	je	0x4306b2
0x430637:	cmp	byte ptr [r12 + 8], 0xa
0x43063d:	je	0x4306d8
0x430643:	add	edi, 1
0x430646:	mov	dword ptr [r13 + 0xc8], edi
0x43064d:	cmp	ebp, 9
0x430650:	je	0x4306b2
0x430652:	cmp	byte ptr [r12 + 9], 0xa
0x430658:	je	0x4306ef
0x43065e:	add	edi, 1
0x430661:	mov	dword ptr [r13 + 0xc8], edi
0x430668:	cmp	ebp, 0xa
0x43066b:	je	0x4306b2
0x43066d:	cmp	byte ptr [r12 + 0xa], 0xa
0x430673:	je	0x430706
0x430679:	add	edi, 1
0x43067c:	mov	dword ptr [r13 + 0xc8], edi
0x430683:	cmp	ebp, 0xb
0x430686:	je	0x4306b2
0x430688:	mov	ebp, 0xb
0x43068d:	cmp	byte ptr [r12 + rbp], 0xa
0x430692:	je	0x43071c
0x430698:	mov	r8d, dword ptr [r13 + 0xc8]
0x43069f:	lea	r9d, [r8 + 1]
0x4306a3:	add	rbp, 1
0x4306a7:	mov	dword ptr [r13 + 0xc8], r9d
0x4306ae:	cmp	ebx, ebp
0x4306b0:	jg	0x43068d
0x4306b2:	add	rsp, 0x18
0x4306b6:	pop	rbx
0x4306b7:	pop	rbp
0x4306b8:	pop	r12
0x4306ba:	pop	r13
0x4306bc:	pop	r14
0x4306be:	pop	r15
0x4306c0:	ret	
0x4306c1:	mov	dword ptr [r13 + 0xc8], 0
0x4306cc:	cmp	ebp, 8
0x4306cf:	je	0x4306b2
0x4306d1:	xor	edi, edi
0x4306d3:	jmp	0x430637
0x4306d8:	mov	dword ptr [r13 + 0xc8], 0
0x4306e3:	cmp	ebp, 9
0x4306e6:	je	0x4306b2
0x4306e8:	xor	edi, edi
0x4306ea:	jmp	0x430652
0x4306ef:	mov	dword ptr [r13 + 0xc8], 0
0x4306fa:	cmp	ebp, 0xa
0x4306fd:	je	0x4306b2
0x4306ff:	xor	edi, edi
0x430701:	jmp	0x43066d
0x430706:	mov	dword ptr [r13 + 0xc8], 0
0x430711:	cmp	ebp, 0xb
0x430714:	jne	0x430688
0x43071a:	jmp	0x4306b2
0x43071c:	xor	r9d, r9d
0x43071f:	jmp	0x4306a3
0x430721:	mov	dword ptr [r13 + 0xc8], 0
0x43072c:	cmp	ebp, 7
0x43072f:	je	0x4306b2
0x430731:	xor	edi, edi
0x430733:	jmp	0x43061c
0x430738:	mov	dword ptr [r13 + 0xc8], 0
0x430743:	cmp	ebp, 6
0x430746:	je	0x4306b2
0x43074c:	xor	edi, edi
0x43074e:	jmp	0x4305fd
0x430753:	mov	dword ptr [r13 + 0xc8], 0
0x43075e:	cmp	ebp, 5
0x430761:	je	0x4306b2
0x430767:	xor	edi, edi
0x430769:	jmp	0x4305de
0x43076e:	mov	dword ptr [r13 + 0xc8], 0
0x430779:	cmp	ebp, 4
0x43077c:	je	0x4306b2
0x430782:	xor	edi, edi
0x430784:	jmp	0x4305bf
0x430789:	mov	dword ptr [r13 + 0xc8], 0
0x430794:	cmp	ebp, 3
0x430797:	je	0x4306b2
0x43079d:	xor	edi, edi
0x43079f:	jmp	0x4305a0
0x4307a4:	mov	dword ptr [r13 + 0xc8], 0
0x4307af:	cmp	ebp, 2
0x4307b2:	je	0x4306b2
0x4307b8:	xor	edi, edi
0x4307ba:	jmp	0x430581
0x4307bf:	mov	dword ptr [r13 + 0xc8], 0
0x4307ca:	cmp	ebp, 1
0x4307cd:	jle	0x4306b2
0x4307d3:	xor	edi, edi
0x4307d5:	jmp	0x430562
0x4307da:	mov	edx, dword ptr [rdi + 0x24]
0x4307dd:	test	edx, edx
0x4307df:	jne	0x43081c
0x4307e1:	cmp	byte ptr [rdi + 0x40], 0
0x4307e5:	mov	ecx, dword ptr [rdi + 0x20]
0x4307e8:	jne	0x430828
0x4307ea:	add	ecx, 3
0x4307ed:	mov	dword ptr [rdi + 0x20], ecx
0x4307f0:	mov	rdi, r15
0x4307f3:	call	0x4039e0
0x4307f8:	mov	rdi, r13
0x4307fb:	mov	rsi, r15
0x4307fe:	mov	edx, eax
0x430800:	call	0x43f120
0x430805:	mov	byte ptr [rbx + 0x40], 1
0x430809:	mov	r13, qword ptr [rbx + 8]
0x43080d:	cmp	dword ptr [rbx + 0x28], 0
0x430811:	jle	0x430503
0x430817:	jmp	0x40d776
0x43081c:	cmp	edx, 2
0x43081f:	jne	0x43080d
0x430821:	jmp	0x4307f0
0x430823:	jmp	0x40d776
0x430828:	jmp	0x40d799
0x43082d:	nop	dword ptr [rax]
0x430830:	test	esi, esi
0x430832:	js	0x4308c0
0x430838:	push	r13
0x43083a:	pxor	xmm0, xmm0
0x43083e:	push	r12
0x430840:	mov	r12, rdi
0x430843:	push	rbp
0x430844:	push	rbx
0x430845:	sub	rsp, 0x68
0x430849:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x43084e:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x430853:	cmp	esi, 1
0x430856:	jbe	0x4308ca
0x430858:	mov	ebp, edx
0x43085a:	mov	ebx, ecx
0x43085c:	test	dl, dl
0x43085e:	je	0x430942
0x430864:	lea	rcx, [rsp + 0x18]
0x430869:	xor	edx, edx
0x43086b:	xor	edi, edi
0x43086d:	call	0x430f60
0x430872:	mov	esi, eax
0x430874:	cmp	ebx, 1
0x430877:	je	0x4308fa
0x43087d:	cmp	ebx, 2
0x430880:	je	0x4309bc
0x430886:	pxor	xmm1, xmm1
0x43088a:	mov	r9, qword ptr [rsp + 0x18]
0x43088f:	movaps	xmmword ptr [rsp + 0x40], xmm1
0x430894:	movaps	xmmword ptr [rsp + 0x50], xmm1
0x430899:	test	eax, eax
0x43089b:	js	0x43092c
0x4308a1:	cmp	esi, 1
0x4308a4:	jbe	0x40db31
0x4308aa:	test	r9, r9
0x4308ad:	je	0x40db4c
0x4308b3:	mov	eax, dword ptr [0x24]
0x4308ba:	ud2	
0x4308bc:	nop	dword ptr [rax]
0x4308c0:	mov	rax, qword ptr [0x68]
0x4308c8:	ud2	
0x4308ca:	xor	eax, eax
0x4308cc:	test	esi, esi
0x4308ce:	jne	0x430936
0x4308d0:	mov	qword ptr [rsp + 0x20], rax
0x4308d5:	movdqa	xmm5, xmmword ptr [rsp + 0x30]
0x4308db:	movdqa	xmm2, xmmword ptr [rsp + 0x20]
0x4308e1:	movups	xmmword ptr [r12 + 0x10], xmm5
0x4308e7:	movups	xmmword ptr [r12], xmm2
0x4308ec:	add	rsp, 0x68
0x4308f0:	mov	rax, r12
0x4308f3:	pop	rbx
0x4308f4:	pop	rbp
0x4308f5:	pop	r12
0x4308f7:	pop	r13
0x4308f9:	ret	
0x4308fa:	xor	edi, edi
0x4308fc:	mov	dword ptr [rsp + 0xc], eax
0x430900:	call	0x431800
0x430905:	mov	esi, dword ptr [rsp + 0xc]
0x430909:	cmp	eax, esi
0x43090b:	jne	0x4309ef
0x430911:	lea	rdi, [rsp + 0x40]
0x430916:	mov	ecx, 8
0x43091b:	xor	eax, eax
0x43091d:	mov	r9, qword ptr [rsp + 0x18]
0x430922:	rep stosd	dword ptr [rdi], eax
0x430924:	test	esi, esi
0x430926:	jns	0x4308a1
0x43092c:	mov	rax, qword ptr [0x68]
0x430934:	ud2	
0x430936:	mov	edi, 0x4c43e8
0x43093b:	call	0x403a20
0x430940:	jmp	0x4308d0
0x430942:	xor	edi, edi
0x430944:	mov	dword ptr [rsp + 0xc], esi
0x430948:	mov	qword ptr [rsp + 0x40], 0
0x430951:	call	0x430cf0
0x430956:	mov	esi, dword ptr [rsp + 0xc]
0x43095a:	test	rax, rax
0x43095d:	mov	r13, rax
0x430960:	je	0x43096a
0x430962:	cmp	dword ptr [rax], 0x6fffffff
0x430968:	ja	0x430979
0x43096a:	lea	rcx, [rsp + 0x18]
0x43096f:	mov	edx, 1
0x430974:	jmp	0x43086b
0x430979:	xor	edi, edi
0x43097b:	lea	rcx, [rsp + 0x40]
0x430980:	mov	edx, 1
0x430985:	call	0x430f60
0x43098a:	mov	esi, dword ptr [rsp + 0xc]
0x43098e:	cmp	eax, 1
0x430991:	jbe	0x4309ae
0x430993:	mov	rdx, qword ptr [rsp + 0x40]
0x430998:	cmp	byte ptr [rdx + 5], 0
0x43099c:	je	0x43096a
0x43099e:	cmp	eax, 1
0x4309a1:	jbe	0x4309ae
0x4309a3:	mov	rax, qword ptr [rsp + 0x40]
0x4309a8:	cmp	byte ptr [rax + 5], 0
0x4309ac:	je	0x43096a
0x4309ae:	test	esi, esi
0x4309b0:	jns	0x430a07
0x4309b2:	mov	rax, qword ptr [0x68]
0x4309ba:	ud2	
0x4309bc:	xor	edi, edi
0x4309be:	mov	dword ptr [rsp + 0xc], eax
0x4309c2:	call	0x431800
0x4309c7:	mov	esi, dword ptr [rsp + 0xc]
0x4309cb:	shr	rax, 0x20
0x4309cf:	cmp	eax, esi
0x4309d1:	je	0x430911
0x4309d7:	movzx	edx, bpl
0x4309db:	mov	ecx, 2
0x4309e0:	mov	esi, eax
0x4309e2:	mov	rdi, r12
0x4309e5:	call	0x430830
0x4309ea:	jmp	0x4308ec
0x4309ef:	movzx	edx, bpl
0x4309f3:	mov	ecx, 1
0x4309f8:	mov	esi, eax
0x4309fa:	mov	rdi, r12
0x4309fd:	call	0x430830
0x430a02:	jmp	0x4308ec
0x430a07:	xor	edi, edi
0x430a09:	mov	edx, esi
0x430a0b:	mov	rsi, r13
0x430a0e:	call	0x431080
0x430a13:	xor	edi, edi
0x430a15:	mov	esi, eax
0x430a17:	mov	dword ptr [rsp + 0xc], eax
0x430a1b:	call	0x430cf0
0x430a20:	test	rax, rax
0x430a23:	je	0x430a31
0x430a25:	cmp	dword ptr [rax], 0x6fffffff
0x430a2b:	mov	esi, dword ptr [rsp + 0xc]
0x430a2f:	ja	0x430a7c
0x430a31:	mov	esi, dword ptr [r13 + 0x18]
0x430a35:	xor	edi, edi
0x430a37:	mov	dword ptr [rsp + 0xc], esi
0x430a3b:	call	0x430cf0
0x430a40:	mov	esi, dword ptr [rsp + 0xc]
0x430a44:	mov	r13, rax
0x430a47:	xor	edi, edi
0x430a49:	lea	rcx, [rsp + 0x40]
0x430a4e:	mov	edx, 1
0x430a53:	mov	dword ptr [rsp + 0xc], esi
0x430a57:	call	0x430f60
0x430a5c:	test	r13, r13
0x430a5f:	mov	esi, dword ptr [rsp + 0xc]
0x430a63:	je	0x43096a
0x430a69:	cmp	dword ptr [r13], 0x6fffffff
0x430a71:	jbe	0x43096a
0x430a77:	jmp	0x43099e
0x430a7c:	mov	r13, rax
0x430a7f:	jmp	0x430a47
0x430a81:	nop	word ptr cs:[rax + rax]
0x430a8c:	nop	dword ptr [rax]
0x430a90:	endbr64	
0x430a94:	push	rbx
0x430a95:	mov	rax, qword ptr [rdi + 8]
0x430a99:	mov	rbx, rdi
0x430a9c:	mov	rdi, qword ptr [rax + 0xb0]
0x430aa3:	mov	rsi, qword ptr [rdi + 0x10]
0x430aa7:	cmp	qword ptr [rdi + 8], rsi
0x430aab:	jae	0x40fe51
0x430ab1:	cmp	qword ptr [rdi + 0x20], rsi
0x430ab5:	jbe	0x40fe51
0x430abb:	mov	qword ptr [rdi + 0x18], rsi
0x430abf:	mov	dword ptr [rax + 0xc8], 0
0x430ac9:	pop	rbx
0x430aca:	ret	
0x430acb:	nop	
0x430acc:	nop	dword ptr [rax]
0x430ad0:	endbr64	
0x430ad4:	push	r13
0x430ad6:	push	r12
0x430ad8:	push	rbp
0x430ad9:	push	rbx
0x430ada:	mov	rbx, rdi
0x430add:	sub	rsp, 8
0x430ae1:	mov	eax, dword ptr [rdi + 0x78]
0x430ae4:	test	eax, eax
0x430ae6:	jne	0x430b07
0x430ae8:	mov	rdi, qword ptr [rbx + 0x98]
0x430aef:	call	0x403830
0x430af4:	mov	rdi, qword ptr [rbx + 0x48]
0x430af8:	add	rsp, 8
0x430afc:	pop	rbx
0x430afd:	pop	rbp
0x430afe:	pop	r12
0x430b00:	pop	r13
0x430b02:	jmp	0x403830
0x430b07:	xor	ebp, ebp
0x430b09:	lea	r13, [rdi + 0x78]
0x430b0d:	movsxd	rcx, ebp
0x430b10:	cmp	ebp, 1
0x430b13:	jg	0x40ff2e
0x430b19:	lea	rsi, [r13 + rcx*8 + 8]
0x430b1e:	mov	r12, qword ptr [rsi]
0x430b21:	test	r12, r12
0x430b24:	je	0x430b3d
0x430b26:	mov	rdi, qword ptr [r12 + 8]
0x430b2b:	call	0x403830
0x430b30:	mov	esi, 0x18
0x430b35:	mov	rdi, r12
0x430b38:	call	0x440230
0x430b3d:	add	ebp, 1
0x430b40:	cmp	ebp, dword ptr [rbx + 0x78]
0x430b43:	jae	0x430ae8
0x430b45:	jmp	0x430b0d
0x430b47:	nop	
0x430b48:	nop	dword ptr [rax + rax]
0x430b50:	endbr64	
0x430b54:	push	rbp
0x430b55:	push	rbx
0x430b56:	mov	rbx, rdi
0x430b59:	push	rdx
0x430b5a:	mov	qword ptr [rdi], 0x4be160
0x430b61:	mov	rdi, qword ptr [rdi + 0x38]
0x430b65:	test	rdi, rdi
0x430b68:	jne	0x430b98
0x430b6a:	mov	rbp, qword ptr [rbx + 8]
0x430b6e:	xor	esi, esi
0x430b70:	lea	rdi, [rbp + 0x58]
0x430b74:	call	0x42dd40
0x430b79:	mov	rdi, rbp
0x430b7c:	xor	esi, esi
0x430b7e:	call	0x42dd40
0x430b83:	mov	rdi, qword ptr [rbx + 8]
0x430b87:	call	0x403830
0x430b8c:	mov	rdi, qword ptr [rbx + 0x10]
0x430b90:	pop	rax
0x430b91:	pop	rbx
0x430b92:	pop	rbp
0x430b93:	jmp	0x403830
0x430b98:	mov	rax, qword ptr [rdi]
0x430b9b:	call	qword ptr [rax + 8]
0x430b9e:	jmp	0x430b6a
0x430ba0:	endbr64	
0x430ba4:	movzx	edx, byte ptr [rdi]
0x430ba7:	lea	rcx, [rdi + 1]
0x430bab:	xor	eax, eax
0x430bad:	test	dl, dl
0x430baf:	je	0x430bcc
0x430bb1:	nop	dword ptr [rax]
0x430bb8:	imul	eax, eax, 0x43
0x430bbb:	add	rcx, 1
0x430bbf:	lea	eax, [rax + rdx - 0x71]
0x430bc3:	movzx	edx, byte ptr [rcx - 1]
0x430bc7:	test	dl, dl
0x430bc9:	jne	0x430bb8
0x430bcb:	ret	
0x430bcc:	ret	
0x430bcd:	nop	dword ptr [rax]
0x430bd0:	endbr64	
0x430bd4:	mov	eax, 2
0x430bd9:	ret	
0x430bda:	nop	word ptr [rax + rax]
0x430be0:	endbr64	
0x430be4:	push	r12
0x430be6:	xor	ecx, ecx
0x430be8:	mov	r12, rdi
0x430beb:	mov	edx, 1
0x430bf0:	call	0x430830
0x430bf5:	mov	rax, r12
0x430bf8:	pop	r12
0x430bfa:	ret	
0x430bfb:	nop	dword ptr [rax + rax]
0x430c00:	endbr64	
0x430c04:	movsxd	rax, edi
0x430c07:	lea	rcx, [rax + rax*2]
0x430c0b:	shl	rcx, 5
0x430c0f:	mov	edi, dword ptr [rcx + 0x48badc]
0x430c15:	add	rcx, 0x48baa0
0x430c1c:	test	edi, 0x3fff
0x430c22:	je	0x430cc5
0x430c28:	or	esi, 0x200000
0x430c2e:	test	esi, edi
0x430c30:	je	0x430ce0
0x430c36:	movzx	r8d, word ptr [rcx + 0x42]
0x430c3b:	cmp	r8w, -1
0x430c40:	je	0x430cdc
0x430c46:	add	rdx, r8
0x430c49:	je	0x41200c
0x430c4f:	lea	r9, [rax + rax*2]
0x430c53:	shl	r9, 5
0x430c57:	cmp	dword ptr [r9 + 0x48bae8], 4
0x430c5f:	ja	0x41200c
0x430c65:	mov	r10d, dword ptr [r9 + 0x48bae8]
0x430c6c:	notrack jmp	qword ptr ds:[r10*8 + 0x4c5798]
0x430c75:	nop	dword ptr [rax]
0x430c78:	lea	r9, [rax + rax*2]
0x430c7c:	shl	r9, 5
0x430c80:	test	byte ptr [r9 + 0x48bae1], 4
0x430c88:	jne	0x411f8b
0x430c8e:	mov	r10d, dword ptr [rdx]
0x430c91:	xor	eax, eax
0x430c93:	test	r10d, r10d
0x430c96:	setne	al
0x430c99:	ret	
0x430c9a:	imul	rdi, rax, 0x60
0x430c9e:	mov	rsi, qword ptr [rdi + 0x48baf0]
0x430ca5:	add	rdi, 0x48baa0
0x430cac:	test	byte ptr [rdi + 0x41], 4
0x430cb0:	jne	0x411f95
0x430cb6:	movsxd	rdx, dword ptr [rdx]
0x430cb9:	cmp	rdx, rsi
0x430cbc:	sete	r8b
0x430cc0:	movzx	eax, r8b
0x430cc4:	ret	
0x430cc5:	imul	rsi, rax, 0x60
0x430cc9:	movzx	r8d, word ptr [rsi + 0x48bae2]
0x430cd1:	cmp	r8w, -1
0x430cd6:	jne	0x430c46
0x430cdc:	or	eax, 0xffffffff
0x430cdf:	ret	
0x430ce0:	xor	eax, eax
0x430ce2:	ret	
0x430ce3:	nop	word ptr cs:[rax + rax]
0x430cee:	nop	
0x430cf0:	endbr64	
0x430cf4:	mov	r10d, esi
0x430cf7:	test	esi, esi
0x430cf9:	js	0x430d22
0x430cfb:	mov	ecx, dword ptr [rdi + 0x24]
0x430cfe:	mov	r8d, esi
0x430d01:	test	ecx, ecx
0x430d03:	je	0x430d1a
0x430d05:	lea	r11d, [rcx - 1]
0x430d09:	mov	rsi, qword ptr [rdi + 0x18]
0x430d0d:	movsxd	rdx, r11d
0x430d10:	shl	rdx, 5
0x430d14:	cmp	dword ptr [rsi + rdx], r10d
0x430d18:	jbe	0x430d60
0x430d1a:	mov	esi, r8d
0x430d1d:	jmp	0x430e60
0x430d22:	mov	rdx, qword ptr [rdi + 0x68]
0x430d26:	and	r10d, 0x7fffffff
0x430d2d:	lea	rax, [r10 + r10*2]
0x430d31:	mov	r8d, dword ptr [rdx + rax*8]
0x430d35:	test	r8d, r8d
0x430d38:	jns	0x430e0b
0x430d3e:	mov	esi, r8d
0x430d41:	mov	ecx, dword ptr [rdi + 0x24]
0x430d44:	and	esi, 0x7fffffff
0x430d4a:	lea	r9, [rsi + rsi*2]
0x430d4e:	mov	r10d, dword ptr [rdx + r9*8]
0x430d52:	test	ecx, ecx
0x430d54:	jne	0x430d05
0x430d56:	test	r10d, r10d
0x430d59:	jns	0x430d1a
0x430d5b:	mov	rsi, qword ptr [rdi + 0x18]
0x430d5f:	nop	
0x430d60:	movsxd	r11, dword ptr [rdi + 0x28]
0x430d64:	mov	r8, r11
0x430d67:	shl	r11, 5
0x430d6b:	add	r11, rsi
0x430d6e:	mov	eax, dword ptr [r11]
0x430d71:	cmp	r10d, eax
0x430d74:	jb	0x430d90
0x430d76:	add	eax, dword ptr [r11 + 4]
0x430d7a:	cmp	r10d, eax
0x430d7d:	jb	0x430dee
0x430d7f:	lea	ecx, [r8 - 1]
0x430d83:	xor	r8d, r8d
0x430d86:	nop	word ptr cs:[rax + rax]
0x430d90:	cmp	r8d, ecx
0x430d93:	jae	0x430de1
0x430d95:	lea	r11d, [r8 + rcx]
0x430d99:	shr	r11d, 1
0x430d9c:	mov	r9d, r11d
0x430d9f:	shl	r9, 5
0x430da3:	cmp	r10d, dword ptr [rsi + r9]
0x430da7:	jb	0x430e00
0x430da9:	cmp	r8d, r11d
0x430dac:	jae	0x430e06
0x430dae:	lea	ecx, [r8 + r11]
0x430db2:	shr	ecx, 1
0x430db4:	mov	edx, ecx
0x430db6:	shl	rdx, 5
0x430dba:	cmp	dword ptr [rsi + rdx], r10d
0x430dbe:	ja	0x430df8
0x430dc0:	cmp	ecx, r8d
0x430dc3:	jbe	0x430de1
0x430dc5:	lea	r11d, [rcx + r8]
0x430dc9:	shr	r11d, 1
0x430dcc:	mov	eax, r11d
0x430dcf:	shl	rax, 5
0x430dd3:	cmp	r10d, dword ptr [rsi + rax]
0x430dd7:	jb	0x430e00
0x430dd9:	mov	ecx, r11d
0x430ddc:	cmp	ecx, r8d
0x430ddf:	ja	0x430dc5
0x430de1:	movsxd	r11, ecx
0x430de4:	mov	dword ptr [rdi + 0x28], ecx
0x430de7:	shl	r11, 5
0x430deb:	add	r11, rsi
0x430dee:	mov	rax, r11
0x430df1:	ret	
0x430df2:	nop	word ptr [rax + rax]
0x430df8:	mov	edx, ecx
0x430dfa:	mov	ecx, r11d
0x430dfd:	mov	r11d, edx
0x430e00:	lea	r8d, [r11 + 1]
0x430e04:	jmp	0x430d90
0x430e06:	mov	ecx, r11d
0x430e09:	jmp	0x430de1
0x430e0b:	mov	ecx, dword ptr [rdi + 0x24]
0x430e0e:	mov	r10d, r8d
0x430e11:	test	ecx, ecx
0x430e13:	jne	0x430d05
0x430e19:	jmp	0x430d1a
0x430e1e:	nop	
0x430e20:	test	esi, esi
0x430e22:	js	0x430e46
0x430e24:	mov	ecx, dword ptr [rdi + 0x24]
0x430e27:	test	ecx, ecx
0x430e29:	je	0x430e40
0x430e2b:	sub	ecx, 1
0x430e2e:	movsxd	r8, ecx
0x430e31:	shl	r8, 5
0x430e35:	add	r8, qword ptr [rdi + 0x18]
0x430e39:	cmp	dword ptr [r8], esi
0x430e3c:	setbe	al
0x430e3f:	ret	
0x430e40:	shr	esi, 0x1f
0x430e43:	mov	eax, esi
0x430e45:	ret	
0x430e46:	mov	eax, esi
0x430e48:	and	eax, 0x7fffffff
0x430e4d:	imul	rdx, rax, 0x18
0x430e51:	add	rdx, qword ptr [rdi + 0x68]
0x430e55:	mov	esi, dword ptr [rdx]
0x430e57:	jmp	0x430e24
0x430e59:	nop	dword ptr [rax]
0x430e60:	mov	rax, rdi
0x430e63:	mov	edx, esi
0x430e65:	test	esi, esi
0x430e67:	js	0x412026
0x430e6d:	test	rdi, rdi
0x430e70:	je	0x430f59
0x430e76:	cmp	esi, 1
0x430e79:	jbe	0x430f59
0x430e7f:	movsxd	rsi, dword ptr [rax + 0x10]
0x430e83:	mov	rdi, qword ptr [rax]
0x430e86:	mov	r9d, dword ptr [rax + 0xc]
0x430e8a:	lea	r8, [rsi + rsi*2]
0x430e8e:	mov	rcx, rsi
0x430e91:	lea	rsi, [rdi + r8*8]
0x430e95:	cmp	dword ptr [rsi], edx
0x430e97:	ja	0x430f51
0x430e9d:	lea	r10d, [rcx + 1]
0x430ea1:	cmp	r10d, r9d
0x430ea4:	jne	0x430eb0
0x430ea6:	mov	rax, rsi
0x430ea9:	ret	
0x430eaa:	nop	word ptr [rax + rax]
0x430eb0:	cmp	dword ptr [rsi + 0x18], edx
0x430eb3:	ja	0x430ea6
0x430eb5:	movsxd	r8, ecx
0x430eb8:	mov	ecx, r9d
0x430ebb:	jmp	0x430ec3
0x430ebd:	nop	dword ptr [rax]
0x430ec0:	movsxd	r8, esi
0x430ec3:	mov	r11d, ecx
0x430ec6:	sub	r11d, r8d
0x430ec9:	cmp	r11d, 1
0x430ecd:	jbe	0x430f40
0x430ecf:	lea	esi, [rcx + r8]
0x430ed3:	shr	esi, 1
0x430ed5:	mov	r9d, esi
0x430ed8:	lea	r10, [r9 + r9*2]
0x430edc:	cmp	dword ptr [rdi + r10*8], edx
0x430ee0:	jbe	0x430ec0
0x430ee2:	mov	ecx, esi
0x430ee4:	sub	ecx, r8d
0x430ee7:	cmp	ecx, 1
0x430eea:	jbe	0x430f40
0x430eec:	lea	ecx, [rsi + r8]
0x430ef0:	shr	ecx, 1
0x430ef2:	mov	r11d, ecx
0x430ef5:	lea	r9, [r11 + r11*2]
0x430ef9:	cmp	dword ptr [rdi + r9*8], edx
0x430efd:	ja	0x430f10
0x430eff:	mov	r8d, ecx
0x430f02:	mov	ecx, esi
0x430f04:	mov	esi, r8d
0x430f07:	jmp	0x430ec0
0x430f09:	nop	dword ptr [rax]
0x430f10:	mov	esi, ecx
0x430f12:	sub	esi, r8d
0x430f15:	cmp	esi, 1
0x430f18:	jbe	0x430f40
0x430f1a:	lea	esi, [rcx + r8]
0x430f1e:	shr	esi, 1
0x430f20:	mov	r11d, esi
0x430f23:	lea	r9, [r11 + r11*2]
0x430f27:	cmp	dword ptr [rdi + r9*8], edx
0x430f2b:	jbe	0x430ec0
0x430f2d:	mov	ecx, esi
0x430f2f:	mov	esi, ecx
0x430f31:	sub	esi, r8d
0x430f34:	cmp	esi, 1
0x430f37:	ja	0x430f1a
0x430f39:	nop	dword ptr [rax]
0x430f40:	lea	r10, [r8 + r8*2]
0x430f44:	mov	dword ptr [rax + 0x10], r8d
0x430f48:	lea	rsi, [rdi + r10*8]
0x430f4c:	jmp	0x430ea6
0x430f51:	xor	r8d, r8d
0x430f54:	jmp	0x430ec3
0x430f59:	xor	esi, esi
0x430f5b:	jmp	0x430ea6
0x430f60:	push	r13
0x430f62:	push	r12
0x430f64:	push	rbp
0x430f65:	mov	rbp, rdi
0x430f68:	push	rbx
0x430f69:	mov	rbx, rcx
0x430f6c:	sub	rsp, 8
0x430f70:	test	esi, esi
0x430f72:	js	0x430fc6
0x430f74:	cmp	esi, 1
0x430f77:	jbe	0x41204d
0x430f7d:	mov	r12d, esi
0x430f80:	cmp	edx, 1
0x430f83:	je	0x430fe3
0x430f85:	cmp	edx, 2
0x430f88:	je	0x431008
0x430f8a:	mov	esi, r12d
0x430f8d:	mov	rdi, rbp
0x430f90:	call	0x430cf0
0x430f95:	test	rax, rax
0x430f98:	je	0x412046
0x430f9e:	cmp	dword ptr [rax], 0x6fffffff
0x430fa4:	ja	0x430fc0
0x430fa6:	test	rbx, rbx
0x430fa9:	je	0x430fae
0x430fab:	mov	qword ptr [rbx], rax
0x430fae:	add	rsp, 8
0x430fb2:	mov	eax, r12d
0x430fb5:	pop	rbx
0x430fb6:	pop	rbp
0x430fb7:	pop	r12
0x430fb9:	pop	r13
0x430fbb:	ret	
0x430fbc:	nop	dword ptr [rax]
0x430fc0:	mov	r12d, dword ptr [rax + 0x18]
0x430fc4:	jmp	0x430f8a
0x430fc6:	mov	eax, esi
0x430fc8:	and	eax, 0x7fffffff
0x430fcd:	imul	rcx, rax, 0x18
0x430fd1:	add	rcx, qword ptr [rdi + 0x68]
0x430fd5:	mov	r12d, dword ptr [rcx]
0x430fd8:	cmp	r12d, 1
0x430fdc:	ja	0x430f80
0x430fde:	jmp	0x41204d
0x430fe3:	mov	r12d, esi
0x430fe6:	mov	esi, r12d
0x430fe9:	mov	rdi, rbp
0x430fec:	call	0x430cf0
0x430ff1:	test	rax, rax
0x430ff4:	je	0x430ffe
0x430ff6:	cmp	dword ptr [rax], 0x6fffffff
0x430ffc:	ja	0x431050
0x430ffe:	test	rbx, rbx
0x431001:	je	0x430fae
0x431003:	mov	qword ptr [rbx], rax
0x431006:	jmp	0x430fae
0x431008:	mov	r12d, esi
0x43100b:	mov	r13d, r12d
0x43100e:	test	r12d, r12d
0x431011:	js	0x431063
0x431013:	mov	esi, r13d
0x431016:	mov	rdi, rbp
0x431019:	call	0x430cf0
0x43101e:	test	rax, rax
0x431021:	je	0x43102d
0x431023:	mov	edi, dword ptr [rax]
0x431025:	cmp	edi, 0x6fffffff
0x43102b:	ja	0x43103e
0x43102d:	test	rbx, rbx
0x431030:	je	0x430fae
0x431036:	mov	qword ptr [rbx], rax
0x431039:	jmp	0x430fae
0x43103e:	mov	r9, qword ptr [rax + 0x10]
0x431042:	sub	r13d, edi
0x431045:	lea	r8d, [r13 + r13 + 1]
0x43104a:	mov	r12d, dword ptr [r9 + r8*4]
0x43104e:	jmp	0x43100b
0x431050:	mov	edx, r12d
0x431053:	mov	rsi, rax
0x431056:	mov	rdi, rbp
0x431059:	call	0x431080
0x43105e:	mov	r12d, eax
0x431061:	jmp	0x430fe6
0x431063:	mov	edx, r12d
0x431066:	and	edx, 0x7fffffff
0x43106c:	imul	rsi, rdx, 0x18
0x431070:	add	rsi, qword ptr [rbp + 0x68]
0x431074:	mov	r13d, dword ptr [rsi]
0x431077:	jmp	0x431013
0x431079:	nop	dword ptr [rax]
0x431080:	test	edx, edx
0x431082:	js	0x431090
0x431084:	mov	rax, qword ptr [rsi + 0x10]
0x431088:	sub	edx, dword ptr [rsi]
0x43108a:	add	edx, edx
0x43108c:	mov	eax, dword ptr [rax + rdx*4]
0x43108f:	ret	
0x431090:	and	edx, 0x7fffffff
0x431096:	imul	rcx, rdx, 0x18
0x43109a:	add	rcx, qword ptr [rdi + 0x68]
0x43109e:	mov	edi, dword ptr [rcx]
0x4310a0:	sub	edi, dword ptr [rsi]
0x4310a2:	mov	rsi, qword ptr [rsi + 0x10]
0x4310a6:	add	edi, edi
0x4310a8:	mov	eax, dword ptr [rsi + rdi*4]
0x4310ab:	ret	
0x4310ac:	nop	dword ptr [rax]
0x4310b0:	push	r14
0x4310b2:	push	r13
0x4310b4:	push	r12
0x4310b6:	push	rbp
0x4310b7:	push	rbx
0x4310b8:	sub	rsp, 0x20
0x4310bc:	mov	qword ptr [rsp + 8], 0
0x4310c5:	test	esi, esi
0x4310c7:	je	0x431353
0x4310cd:	mov	r13, rdi
0x4310d0:	mov	r12d, esi
0x4310d3:	test	rdi, rdi
0x4310d6:	je	0x431242
0x4310dc:	mov	rbx, qword ptr [rip + 0xb528d]
0x4310e3:	test	rbx, rbx
0x4310e6:	je	0x43132b
0x4310ec:	lea	r14, [rbx + 0x580]
0x4310f3:	xor	ebp, ebp
0x4310f5:	nop	dword ptr [rax]
0x4310f8:	mov	rdi, qword ptr [rbx + 8]
0x4310fc:	test	rdi, rdi
0x4310ff:	je	0x431216
0x431105:	mov	rsi, r13
0x431108:	call	0x403be0
0x43110d:	test	eax, eax
0x43110f:	je	0x431210
0x431115:	add	rbx, 0x58
0x431119:	cmp	r14, rbx
0x43111c:	jne	0x4310f8
0x43111e:	test	rbp, rbp
0x431121:	je	0x431242
0x431127:	add	dword ptr [rbp], 1
0x43112b:	movsxd	rbx, r12d
0x43112e:	cmp	rbx, qword ptr [rbp + 0x38]
0x431132:	ja	0x4311ba
0x431138:	mov	rcx, qword ptr [rbp + 0x50]
0x43113c:	test	rcx, rcx
0x43113f:	je	0x4120c1
0x431145:	mov	edi, dword ptr [rcx + 4]
0x431148:	test	edi, edi
0x43114a:	je	0x4120c1
0x431150:	mov	rsi, qword ptr [rbp + 0x40]
0x431154:	cmp	rsi, 0x64
0x431158:	jbe	0x431302
0x43115e:	cmp	rbx, rsi
0x431161:	ja	0x431323
0x431167:	imul	rax, rbx, 0x64
0x43116b:	xor	edx, edx
0x43116d:	div	rsi
0x431170:	cmp	rdi, rax
0x431173:	jbe	0x431346
0x431179:	mov	r10d, eax
0x43117c:	imul	r8, rax, 0x18
0x431180:	imul	r11, r10, 0x18
0x431184:	lea	r9, [rcx + r8 + 8]
0x431189:	cmp	rbx, qword ptr [rcx + r11 + 8]
0x43118e:	jb	0x4120ce
0x431194:	mov	rcx, qword ptr [r9]
0x431197:	mov	rsi, qword ptr [r9 + 8]
0x43119b:	cmp	rbx, rcx
0x43119e:	je	0x431228
0x4311a4:	sub	rcx, 1
0x4311a8:	movq	xmm2, rsi
0x4311ad:	movq	xmm1, rcx
0x4311b2:	punpcklqdq	xmm2, xmm1
0x4311b6:	movups	xmmword ptr [rbp + 0x30], xmm2
0x4311ba:	sub	rbx, 1
0x4311be:	jmp	0x4311d5
0x4311c0:	lea	rsi, [rsp + 0x10]
0x4311c5:	mov	rdi, rbp
0x4311c8:	call	0x431370
0x4311cd:	test	al, al
0x4311cf:	je	0x431353
0x4311d5:	lea	rdx, [rsp + 0x18]
0x4311da:	cmp	qword ptr [rbp + 0x38], rbx
0x4311de:	jb	0x4311c0
0x4311e0:	lea	rsi, [rsp + 8]
0x4311e5:	mov	rdi, rbp
0x4311e8:	call	0x431370
0x4311ed:	test	al, al
0x4311ef:	je	0x431353
0x4311f5:	mov	rdx, qword ptr [rsp + 0x18]
0x4311fa:	mov	rax, qword ptr [rsp + 8]
0x4311ff:	add	rsp, 0x20
0x431203:	pop	rbx
0x431204:	pop	rbp
0x431205:	pop	r12
0x431207:	pop	r13
0x431209:	pop	r14
0x43120b:	ret	
0x43120c:	nop	dword ptr [rax]
0x431210:	add	dword ptr [rbx], 1
0x431213:	mov	rbp, rbx
0x431216:	add	rbx, 0x58
0x43121a:	cmp	rbx, r14
0x43121d:	jne	0x4310f8
0x431223:	jmp	0x43111e
0x431228:	mov	rbp, qword ptr [rbp + 0x18]
0x43122c:	mov	rbx, qword ptr [r9 + 0x10]
0x431230:	add	rbp, rsi
0x431233:	sub	rbx, rsi
0x431236:	mov	qword ptr [rsp + 8], rbp
0x43123b:	mov	qword ptr [rsp + 0x18], rbx
0x431240:	jmp	0x4311f5
0x431242:	mov	esi, 0x463577
0x431247:	mov	rdi, r13
0x43124a:	call	0x403dd0
0x43124f:	mov	r14, rax
0x431252:	test	rax, rax
0x431255:	je	0x431353
0x43125b:	cmp	qword ptr [rip + 0xb510d], 0
0x431263:	je	0x43133c
0x431269:	mov	rbp, qword ptr [rip + 0xb5100]
0x431270:	mov	ebx, dword ptr [rbp]
0x431273:	lea	rax, [rbp + 0x58]
0x431277:	lea	r8, [rbp + 0x580]
0x43127e:	jmp	0x431299
0x431280:	cmp	qword ptr [rbp + 8], 0
0x431285:	je	0x4312ac
0x431287:	test	r9, r9
0x43128a:	je	0x43136b
0x431290:	add	rax, 0x58
0x431294:	cmp	rax, r8
0x431297:	je	0x4312b1
0x431299:	mov	edx, dword ptr [rax]
0x43129b:	mov	r9, qword ptr [rax + 8]
0x43129f:	cmp	ebx, edx
0x4312a1:	cmovb	ebx, edx
0x4312a4:	cmp	edx, dword ptr [rbp]
0x4312a7:	jae	0x431280
0x4312a9:	mov	rbp, rax
0x4312ac:	test	r9, r9
0x4312af:	jne	0x431290
0x4312b1:	mov	rdi, qword ptr [rbp + 0x10]
0x4312b5:	mov	qword ptr [rbp + 8], r13
0x4312b9:	test	rdi, rdi
0x4312bc:	je	0x4312c3
0x4312be:	call	0x4039c0
0x4312c3:	mov	r10, qword ptr [rbp + 0x50]
0x4312c7:	pxor	xmm4, xmm4
0x4312cb:	mov	qword ptr [rbp + 0x10], r14
0x4312cf:	mov	qword ptr [rbp + 0x38], 0
0x4312d7:	movups	xmmword ptr [rbp + 0x28], xmm4
0x4312db:	test	r10, r10
0x4312de:	je	0x4312e8
0x4312e0:	mov	dword ptr [r10 + 4], 0
0x4312e8:	add	ebx, 1
0x4312eb:	mov	qword ptr [rbp + 0x40], 0
0x4312f3:	mov	dword ptr [rbp], ebx
0x4312f6:	movsxd	rbx, r12d
0x4312f9:	mov	byte ptr [rbp + 0x48], 1
0x4312fd:	jmp	0x4311ba
0x431302:	cmp	rbx, rsi
0x431305:	ja	0x43135c
0x431307:	lea	r14d, [r12 - 1]
0x43130c:	imul	rdi, r14, 0x18
0x431310:	lea	r9, [rcx + rdi + 8]
0x431315:	cmp	rbx, qword ptr [r9]
0x431318:	jae	0x431194
0x43131e:	jmp	0x4120a5
0x431323:	lea	eax, [rdi - 1]
0x431326:	jmp	0x431170
0x43132b:	call	0x43fbf0
0x431330:	mov	rbx, qword ptr [rip + 0xb5039]
0x431337:	jmp	0x4310ec
0x43133c:	call	0x43fbf0
0x431341:	jmp	0x431269
0x431346:	pxor	xmm0, xmm0
0x43134a:	movups	xmmword ptr [rbp + 0x30], xmm0
0x43134e:	jmp	0x4311ba
0x431353:	xor	eax, eax
0x431355:	xor	edx, edx
0x431357:	jmp	0x4311ff
0x43135c:	lea	r13d, [rsi - 1]
0x431360:	imul	r12, r13, 0x18
0x431364:	lea	r9, [rcx + r12 + 8]
0x431369:	jmp	0x431315
0x43136b:	jmp	0x4120b9
0x431370:	push	r15
0x431372:	mov	r15, rsi
0x431375:	push	r14
0x431377:	push	r13
0x431379:	push	r12
0x43137b:	push	rbp
0x43137c:	push	rbx
0x43137d:	mov	rbx, rdi
0x431380:	sub	rsp, 0x48
0x431384:	mov	rbp, qword ptr [rdi + 0x28]
0x431388:	mov	qword ptr [rsp], rdx
0x43138c:	test	rbp, rbp
0x43138f:	je	0x43154c
0x431395:	cmp	rbp, qword ptr [rdi + 0x20]
0x431399:	je	0x43154c
0x43139f:	mov	rax, qword ptr [rdi + 0x30]
0x4313a3:	lea	rdx, [rbp - 1]
0x4313a7:	cmp	rax, rdx
0x4313aa:	jae	0x43154c
0x4313b0:	mov	rdx, rbp
0x4313b3:	sub	rdx, rax
0x4313b6:	je	0x4316eb
0x4313bc:	mov	r14, qword ptr [rbx + 0x18]
0x4313c0:	mov	esi, 0xa
0x4313c5:	lea	r13, [r14 + rax]
0x4313c9:	mov	rdi, r13
0x4313cc:	call	0x403b40
0x4313d1:	mov	r12, rax
0x4313d4:	test	rax, rax
0x4313d7:	je	0x4316e6
0x4313dd:	mov	byte ptr [rbx + 0x48], 0
0x4313e1:	mov	rdi, qword ptr [rbx + 0x10]
0x4313e5:	lea	r14, [rax + 1]
0x4313e9:	call	0x403920
0x4313ee:	test	eax, eax
0x4313f0:	jne	0x4316e1
0x4313f6:	mov	r11, r12
0x4313f9:	mov	r9, qword ptr [rbx + 0x30]
0x4313fd:	sub	r11, r13
0x431400:	cmp	r9, qword ptr [rbx + 0x28]
0x431404:	jae	0x4120e2
0x43140a:	mov	r8, qword ptr [rbx + 0x38]
0x43140e:	mov	rdi, qword ptr [rbx + 0x40]
0x431412:	movq	xmm1, r9
0x431417:	mov	qword ptr [r15], r13
0x43141a:	lea	rbp, [r8 + 1]
0x43141e:	movq	xmm0, rbp
0x431423:	mov	qword ptr [rbx + 0x38], rbp
0x431427:	punpcklqdq	xmm0, xmm1
0x43142b:	cmp	rdi, rbp
0x43142e:	jb	0x431470
0x431430:	mov	rcx, qword ptr [rbx + 0x50]
0x431434:	test	rcx, rcx
0x431437:	je	0x4315b3
0x43143d:	mov	r15d, dword ptr [rcx + 4]
0x431441:	cmp	r15d, 0x63
0x431445:	ja	0x431470
0x431447:	cmp	rdi, 0x64
0x43144b:	jbe	0x43156d
0x431451:	lea	rax, [rbp + rbp*4]
0x431456:	xor	edx, edx
0x431458:	lea	rax, [rax + rax*4]
0x43145c:	shl	rax, 2
0x431460:	div	rdi
0x431463:	test	r15d, r15d
0x431466:	je	0x43149d
0x431468:	mov	ebp, r15d
0x43146b:	cmp	rbp, rax
0x43146e:	jbe	0x4314a0
0x431470:	test	r14, r14
0x431473:	je	0x41220c
0x431479:	sub	r14, qword ptr [rbx + 0x18]
0x43147d:	mov	r12, qword ptr [rsp]
0x431481:	mov	qword ptr [rbx + 0x30], r14
0x431485:	mov	eax, 1
0x43148a:	mov	qword ptr [r12], r11
0x43148e:	add	rsp, 0x48
0x431492:	pop	rbx
0x431493:	pop	rbp
0x431494:	pop	r12
0x431496:	pop	r13
0x431498:	pop	r14
0x43149a:	pop	r15
0x43149c:	ret	
0x43149d:	xor	ebp, ebp
0x43149f:	nop	
0x4314a0:	mov	esi, dword ptr [rcx]
0x4314a2:	sub	r12, qword ptr [rbx + 0x18]
0x4314a6:	and	esi, 0x7fffffff
0x4314ac:	cmp	r15d, esi
0x4314af:	je	0x4314ce
0x4314b1:	lea	rax, [rbp + rbp*2]
0x4314b6:	add	r15d, 1
0x4314ba:	shl	rax, 3
0x4314be:	mov	dword ptr [rcx + 4], r15d
0x4314c2:	mov	qword ptr [rcx + rax + 0x18], r12
0x4314c7:	movups	xmmword ptr [rcx + rax + 8], xmm0
0x4314cc:	jmp	0x431470
0x4314ce:	cmp	byte ptr [rcx + 3], 0
0x4314d2:	js	0x41215e
0x4314d8:	mov	rdi, rcx
0x4314db:	xor	edx, edx
0x4314dd:	mov	esi, 1
0x4314e2:	mov	qword ptr [rsp + 0x20], r11
0x4314e7:	mov	qword ptr [rsp + 0x10], rcx
0x4314ec:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x4314f1:	call	0x436e30
0x4314f6:	mov	rdi, qword ptr [rsp + 0x10]
0x4314fb:	mov	ecx, eax
0x4314fd:	imul	rsi, rcx, 0x18
0x431501:	mov	dword ptr [rsp + 8], ecx
0x431505:	add	rsi, 8
0x431509:	call	0x42db80
0x43150e:	mov	r8d, dword ptr [rsp + 8]
0x431513:	mov	r11, qword ptr [rsp + 0x20]
0x431518:	lea	r9d, [r15 + 1]
0x43151c:	mov	qword ptr [rbx + 0x50], rax
0x431520:	movdqa	xmm3, xmmword ptr [rsp + 0x30]
0x431526:	and	r8d, 0x7fffffff
0x43152d:	mov	dword ptr [rax + 4], r15d
0x431531:	mov	dword ptr [rax], r8d
0x431534:	imul	r15, rbp, 0x18
0x431538:	mov	dword ptr [rax + 4], r9d
0x43153c:	mov	qword ptr [rax + r15 + 0x18], r12
0x431541:	movups	xmmword ptr [rax + r15 + 8], xmm3
0x431547:	jmp	0x431470
0x43154c:	mov	rdi, rbx
0x43154f:	call	0x43fc60
0x431554:	mov	rbp, qword ptr [rbx + 0x28]
0x431558:	mov	rax, qword ptr [rbx + 0x30]
0x43155c:	mov	rdx, rbp
0x43155f:	sub	rdx, rax
0x431562:	jne	0x4313bc
0x431568:	jmp	0x412205
0x43156d:	mov	r13d, r15d
0x431570:	cmp	rbp, r13
0x431573:	jbe	0x431470
0x431579:	mov	r10d, dword ptr [rcx]
0x43157c:	sub	r12, qword ptr [rbx + 0x18]
0x431580:	and	r10d, 0x7fffffff
0x431587:	cmp	r15d, r10d
0x43158a:	je	0x431617
0x431590:	mov	r15d, dword ptr [rcx + 4]
0x431594:	imul	rsi, r15, 0x18
0x431598:	lea	eax, [r15 + 1]
0x43159c:	mov	dword ptr [rcx + 4], eax
0x43159f:	add	rsi, rcx
0x4315a2:	mov	qword ptr [rsi + 8], rbp
0x4315a6:	mov	qword ptr [rsi + 0x10], r9
0x4315aa:	mov	qword ptr [rsi + 0x18], r12
0x4315ae:	jmp	0x431470
0x4315b3:	cmp	rdi, 0x64
0x4315b7:	jbe	0x431683
0x4315bd:	xor	edx, edx
0x4315bf:	mov	esi, 1
0x4315c4:	xor	edi, edi
0x4315c6:	mov	qword ptr [rsp + 8], r11
0x4315cb:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4315d0:	sub	r12, qword ptr [rbx + 0x18]
0x4315d4:	xor	ebp, ebp
0x4315d6:	call	0x436e30
0x4315db:	xor	edi, edi
0x4315dd:	mov	r9d, eax
0x4315e0:	imul	rsi, r9, 0x18
0x4315e4:	mov	r13, r9
0x4315e7:	and	r13d, 0x7fffffff
0x4315ee:	add	rsi, 8
0x4315f2:	call	0x42db80
0x4315f7:	mov	r10d, r13d
0x4315fa:	mov	r11, qword ptr [rsp + 8]
0x4315ff:	movdqa	xmm3, xmmword ptr [rsp + 0x10]
0x431605:	mov	qword ptr [rbx + 0x50], rax
0x431609:	mov	r9d, 1
0x43160f:	mov	qword ptr [rax], r10
0x431612:	jmp	0x431534
0x431617:	cmp	byte ptr [rcx + 3], 0
0x43161b:	js	0x412215
0x431621:	mov	rdi, rcx
0x431624:	xor	edx, edx
0x431626:	mov	esi, 1
0x43162b:	mov	qword ptr [rsp + 0x30], r9
0x431630:	mov	qword ptr [rsp + 0x20], r11
0x431635:	mov	qword ptr [rsp + 0x10], rcx
0x43163a:	call	0x436e30
0x43163f:	mov	rdi, qword ptr [rsp + 0x10]
0x431644:	mov	r8d, eax
0x431647:	imul	rsi, r8, 0x18
0x43164b:	mov	dword ptr [rsp + 8], r8d
0x431650:	add	rsi, 8
0x431654:	call	0x42db80
0x431659:	mov	r11d, dword ptr [rsp + 8]
0x43165e:	mov	r9, qword ptr [rsp + 0x30]
0x431663:	mov	qword ptr [rbx + 0x50], rax
0x431667:	mov	rcx, qword ptr [rbx + 0x50]
0x43166b:	and	r11d, 0x7fffffff
0x431672:	mov	dword ptr [rax + 4], r15d
0x431676:	mov	dword ptr [rax], r11d
0x431679:	mov	r11, qword ptr [rsp + 0x20]
0x43167e:	jmp	0x431590
0x431683:	test	rbp, rbp
0x431686:	je	0x431470
0x43168c:	xor	edx, edx
0x43168e:	mov	esi, 1
0x431693:	xor	edi, edi
0x431695:	mov	qword ptr [rsp + 0x10], r9
0x43169a:	mov	qword ptr [rsp + 8], r11
0x43169f:	sub	r12, qword ptr [rbx + 0x18]
0x4316a3:	call	0x436e30
0x4316a8:	xor	edi, edi
0x4316aa:	mov	r11d, eax
0x4316ad:	imul	rsi, r11, 0x18
0x4316b1:	mov	r15, r11
0x4316b4:	and	r15d, 0x7fffffff
0x4316bb:	add	rsi, 8
0x4316bf:	call	0x42db80
0x4316c4:	mov	edx, r15d
0x4316c7:	mov	r11, qword ptr [rsp + 8]
0x4316cc:	mov	r9, qword ptr [rsp + 0x10]
0x4316d1:	mov	qword ptr [rbx + 0x50], rax
0x4316d5:	mov	qword ptr [rax], rdx
0x4316d8:	mov	rcx, qword ptr [rbx + 0x50]
0x4316dc:	jmp	0x431590
0x4316e1:	jmp	0x412205
0x4316e6:	jmp	0x412157
0x4316eb:	jmp	0x412205
0x4316f0:	endbr64	
0x4316f4:	push	r14
0x4316f6:	xor	ecx, ecx
0x4316f8:	push	r13
0x4316fa:	push	r12
0x4316fc:	push	rbp
0x4316fd:	push	rbx
0x4316fe:	mov	r12, qword ptr [rdi + 0x18]
0x431702:	mov	rbx, rdi
0x431705:	sub	r12, qword ptr [rdi + 0x10]
0x431709:	mov	rbp, qword ptr [rdi + 8]
0x43170d:	add	rsi, r12
0x431710:	mov	rax, r12
0x431713:	setb	cl
0x431716:	add	rsi, qword ptr [rdi + 0x30]
0x43171a:	mov	rdi, qword ptr [rdi]
0x43171d:	setb	dl
0x431720:	shr	rax, 3
0x431724:	cmp	rsi, rdi
0x431727:	lea	r14, [rsi + rax + 0x64]
0x43172c:	cmovb	rsi, rdi
0x431730:	cmp	r14, rsi
0x431733:	cmovb	r14, rsi
0x431737:	test	rcx, rcx
0x43173a:	jne	0x41231c
0x431740:	movzx	esi, dl
0x431743:	test	rsi, rsi
0x431746:	jne	0x41231c
0x43174c:	mov	r13, qword ptr [rbx + 0x38]
0x431750:	test	byte ptr [rbx + 0x50], 1
0x431754:	jne	0x41230a
0x43175a:	mov	rdi, r14
0x43175d:	call	r13
0x431760:	mov	r13, rax
0x431763:	test	r13, r13
0x431766:	je	0x41231c
0x43176c:	mov	r8, qword ptr [rbx + 0x30]
0x431770:	add	r14, r13
0x431773:	mov	qword ptr [rbx + 8], r13
0x431777:	mov	rdx, r12
0x43177a:	mov	qword ptr [r13 + 8], rbp
0x43177e:	mov	rsi, qword ptr [rbx + 0x10]
0x431782:	mov	qword ptr [rbx + 0x20], r14
0x431786:	mov	qword ptr [r13], r14
0x43178a:	lea	r14, [r13 + r8 + 0x10]
0x43178f:	not	r8
0x431792:	and	r14, r8
0x431795:	mov	rdi, r14
0x431798:	call	0x403c60
0x43179d:	movzx	r9d, byte ptr [rbx + 0x50]
0x4317a2:	test	r9b, 2
0x4317a6:	jne	0x4317bd
0x4317a8:	mov	r10, qword ptr [rbx + 0x30]
0x4317ac:	lea	r11, [rbp + r10 + 0x10]
0x4317b1:	not	r10
0x4317b4:	and	r10, r11
0x4317b7:	cmp	qword ptr [rbx + 0x10], r10
0x4317bb:	je	0x4317df
0x4317bd:	add	r12, r14
0x4317c0:	movq	xmm0, r14
0x4317c5:	and	byte ptr [rbx + 0x50], 0xfd
0x4317c9:	movq	xmm1, r12
0x4317ce:	punpcklqdq	xmm0, xmm1
0x4317d2:	movups	xmmword ptr [rbx + 0x10], xmm0
0x4317d6:	pop	rbx
0x4317d7:	pop	rbp
0x4317d8:	pop	r12
0x4317da:	pop	r13
0x4317dc:	pop	r14
0x4317de:	ret	
0x4317df:	mov	rcx, qword ptr [rbp + 8]
0x4317e3:	and	r9b, 1
0x4317e7:	mov	rdx, qword ptr [rbx + 0x40]
0x4317eb:	mov	qword ptr [r13 + 8], rcx
0x4317ef:	jne	0x412334
0x4317f5:	mov	rdi, rbp
0x4317f8:	call	rdx
0x4317fa:	jmp	0x4317bd
0x4317fc:	nop	dword ptr [rax]
0x431800:	endbr64	
0x431804:	push	rbx
0x431805:	mov	ebx, esi
0x431807:	test	esi, esi
0x431809:	js	0x431880
0x43180b:	movd	xmm2, esi
0x43180f:	pshufd	xmm0, xmm2, 0xe0
0x431814:	cmp	esi, 1
0x431817:	jbe	0x431870
0x431819:	mov	eax, dword ptr [rdi + 0x24]
0x43181c:	test	eax, eax
0x43181e:	je	0x431831
0x431820:	sub	eax, 1
0x431823:	cdqe	
0x431825:	shl	rax, 5
0x431829:	add	rax, qword ptr [rdi + 0x18]
0x43182d:	cmp	esi, dword ptr [rax]
0x43182f:	jae	0x431870
0x431831:	cmp	ebx, 0x50000000
0x431837:	ja	0x431870
0x431839:	mov	esi, ebx
0x43183b:	call	0x430cf0
0x431840:	mov	edx, 1
0x431845:	mov	esi, ebx
0x431847:	movzx	ecx, byte ptr [rax + 7]
0x43184b:	shl	edx, cl
0x43184d:	sub	edx, 1
0x431850:	and	edx, ebx
0x431852:	pop	rbx
0x431853:	sub	esi, edx
0x431855:	shl	edx, cl
0x431857:	add	edx, esi
0x431859:	movd	xmm1, esi
0x43185d:	movd	xmm3, edx
0x431861:	punpckldq	xmm1, xmm3
0x431865:	movq	rax, xmm1
0x43186a:	ret	
0x43186b:	nop	dword ptr [rax + rax]
0x431870:	movq	rax, xmm0
0x431875:	pop	rbx
0x431876:	ret	
0x431877:	nop	word ptr [rax + rax]
0x431880:	and	ebx, 0x7fffffff
0x431886:	mov	rdi, qword ptr [rdi + 0x68]
0x43188a:	lea	r8, [rbx + rbx*2]
0x43188e:	pop	rbx
0x43188f:	lea	r9, [rdi + r8*8]
0x431893:	mov	rax, qword ptr [r9 + 4]
0x431897:	ret	
0x431898:	nop	dword ptr [rax + rax]
0x4318a0:	push	r13
0x4318a2:	movq	xmm0, rsi
0x4318a7:	movq	xmm1, rdx
0x4318ac:	push	rbp
0x4318ad:	mov	rbp, rdi
0x4318b0:	punpcklqdq	xmm0, xmm1
0x4318b4:	sub	rsp, 0x148
0x4318bb:	mov	qword ptr [rsp + 0x18], rdi
0x4318c0:	mov	rdi, rsi
0x4318c3:	shr	rdi, 1
0x4318c6:	mov	qword ptr [rsp + 0x10], rcx
0x4318cb:	imul	rdi, rdx
0x4318cf:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4318d4:	mov	qword ptr [rsp + 0x30], 5
0x4318dd:	cmp	rdi, 0x100
0x4318e4:	ja	0x43192b
0x4318e6:	cmp	rsi, 5
0x4318ea:	ja	0x431908
0x4318ec:	lea	rsi, [rsp + 0x10]
0x4318f1:	mov	rdi, rbp
0x4318f4:	call	0x431980
0x4318f9:	add	rsp, 0x148
0x431900:	pop	rbp
0x431901:	pop	r13
0x431903:	ret	
0x431904:	nop	dword ptr [rax]
0x431908:	lea	r8, [rsp + 0x40]
0x43190d:	mov	rcx, rbp
0x431910:	mov	rdx, rsi
0x431913:	mov	rdi, rbp
0x431916:	lea	rsi, [rsp + 0x10]
0x43191b:	call	0x431cd0
0x431920:	add	rsp, 0x148
0x431927:	pop	rbp
0x431928:	pop	r13
0x43192a:	ret	
0x43192b:	mov	qword ptr [rsp + 8], rsi
0x431930:	call	0x42db10
0x431935:	mov	rsi, qword ptr [rsp + 8]
0x43193a:	mov	r13, rax
0x43193d:	cmp	rsi, 5
0x431941:	ja	0x431962
0x431943:	lea	rsi, [rsp + 0x10]
0x431948:	mov	rdi, rbp
0x43194b:	call	0x431980
0x431950:	add	rsp, 0x148
0x431957:	mov	rdi, r13
0x43195a:	pop	rbp
0x43195b:	pop	r13
0x43195d:	jmp	0x403830
0x431962:	mov	rdx, rsi
0x431965:	mov	r8, rax
0x431968:	mov	rcx, rbp
0x43196b:	mov	rdi, rbp
0x43196e:	lea	rsi, [rsp + 0x10]
0x431973:	call	0x431cd0
0x431978:	jmp	0x431950
0x43197a:	nop	word ptr [rax + rax]
0x431980:	push	r15
0x431982:	push	r14
0x431984:	push	r13
0x431986:	push	r12
0x431988:	mov	r12, rdi
0x43198b:	push	rbp
0x43198c:	push	rbx
0x43198d:	mov	rbx, rsi
0x431990:	sub	rsp, 8
0x431994:	mov	r15, qword ptr [rsi + 0x18]
0x431998:	mov	rdx, qword ptr [rsi]
0x43199b:	mov	rsi, rdi
0x43199e:	lea	rbp, [rdi + r15]
0x4319a2:	mov	rdi, rbp
0x4319a5:	add	r15, rbp
0x4319a8:	call	0x431ed0
0x4319ad:	xor	r12, rax
0x4319b0:	xor	rbp, rax
0x4319b3:	mov	rax, qword ptr [rbx + 0x10]
0x4319b7:	cmp	rax, 3
0x4319bb:	jne	0x4319e9
0x4319bd:	mov	rdx, qword ptr [rbx]
0x4319c0:	mov	rsi, rbp
0x4319c3:	mov	rdi, r15
0x4319c6:	call	0x431ed0
0x4319cb:	mov	rdx, qword ptr [rbx]
0x4319ce:	mov	rsi, r12
0x4319d1:	xor	rbp, rax
0x4319d4:	xor	r15, rax
0x4319d7:	mov	rdi, rbp
0x4319da:	call	0x431ed0
0x4319df:	xor	r12, rax
0x4319e2:	xor	rbp, rax
0x4319e5:	mov	rax, qword ptr [rbx + 0x10]
0x4319e9:	mov	r13, qword ptr [rbx + 0x18]
0x4319ed:	cmp	rax, 3
0x4319f1:	ja	0x431a30
0x4319f3:	cmp	r13, 8
0x4319f7:	jne	0x431b50
0x4319fd:	movq	xmm8, qword ptr [r12]
0x431a03:	mov	rcx, qword ptr [rbx + 8]
0x431a07:	movhps	xmm8, qword ptr [rbp]
0x431a0c:	cmp	rax, 3
0x431a10:	jne	0x431b38
0x431a16:	mov	rdi, qword ptr [r15]
0x431a19:	movups	xmmword ptr [rcx], xmm8
0x431a1d:	mov	qword ptr [rcx + 0x10], rdi
0x431a21:	add	rsp, 8
0x431a25:	pop	rbx
0x431a26:	pop	rbp
0x431a27:	pop	r12
0x431a29:	pop	r13
0x431a2b:	pop	r14
0x431a2d:	pop	r15
0x431a2f:	ret	
0x431a30:	lea	r14, [r15 + r13]
0x431a34:	add	r13, r14
0x431a37:	cmp	rax, 5
0x431a3b:	jne	0x431a65
0x431a3d:	mov	rdx, qword ptr [rbx]
0x431a40:	mov	rsi, r14
0x431a43:	mov	rdi, r13
0x431a46:	call	0x431ed0
0x431a4b:	mov	rdx, qword ptr [rbx]
0x431a4e:	mov	rsi, r15
0x431a51:	xor	r13, rax
0x431a54:	xor	r14, rax
0x431a57:	mov	rdi, r13
0x431a5a:	call	0x431ed0
0x431a5f:	xor	r15, rax
0x431a62:	xor	r13, rax
0x431a65:	mov	rdx, qword ptr [rbx]
0x431a68:	mov	rsi, r15
0x431a6b:	mov	rdi, r14
0x431a6e:	call	0x431ed0
0x431a73:	xor	r15, rax
0x431a76:	xor	r14, rax
0x431a79:	cmp	qword ptr [rbx + 0x10], 5
0x431a7e:	jne	0x431aa8
0x431a80:	mov	rdx, qword ptr [rbx]
0x431a83:	mov	rsi, r12
0x431a86:	mov	rdi, r14
0x431a89:	call	0x431ed0
0x431a8e:	mov	rdx, qword ptr [rbx]
0x431a91:	mov	rsi, rbp
0x431a94:	mov	rdi, r13
0x431a97:	xor	r12, rax
0x431a9a:	xor	r14, rax
0x431a9d:	call	0x431ed0
0x431aa2:	xor	rbp, rax
0x431aa5:	xor	r13, rax
0x431aa8:	mov	rdx, qword ptr [rbx]
0x431aab:	mov	rsi, r12
0x431aae:	mov	rdi, r15
0x431ab1:	call	0x431ed0
0x431ab6:	mov	rdx, qword ptr [rbx]
0x431ab9:	mov	rsi, rbp
0x431abc:	mov	rdi, r14
0x431abf:	xor	r15, rax
0x431ac2:	xor	r12, rax
0x431ac5:	call	0x431ed0
0x431aca:	mov	rdx, qword ptr [rbx]
0x431acd:	mov	rdi, r15
0x431ad0:	xor	rbp, rax
0x431ad3:	xor	r14, rax
0x431ad6:	mov	rsi, rbp
0x431ad9:	call	0x431ed0
0x431ade:	mov	rdx, qword ptr [rbx + 0x18]
0x431ae2:	xor	rbp, rax
0x431ae5:	xor	rax, r15
0x431ae8:	cmp	rdx, 8
0x431aec:	jne	0x431bff
0x431af2:	movq	xmm4, qword ptr [r12]
0x431af8:	movq	xmm5, qword ptr [rax]
0x431afc:	cmp	qword ptr [rbx + 0x10], 5
0x431b01:	mov	r12, qword ptr [rbx + 8]
0x431b05:	movhps	xmm4, qword ptr [rbp]
0x431b09:	movhps	xmm5, qword ptr [r14]
0x431b0d:	jne	0x431b18
0x431b0f:	mov	r13, qword ptr [r13]
0x431b13:	mov	qword ptr [r12 + 0x20], r13
0x431b18:	movups	xmmword ptr [r12], xmm4
0x431b1d:	movups	xmmword ptr [r12 + 0x10], xmm5
0x431b23:	add	rsp, 8
0x431b27:	pop	rbx
0x431b28:	pop	rbp
0x431b29:	pop	r12
0x431b2b:	pop	r13
0x431b2d:	pop	r14
0x431b2f:	pop	r15
0x431b31:	ret	
0x431b32:	nop	word ptr [rax + rax]
0x431b38:	movups	xmmword ptr [rcx], xmm8
0x431b3c:	add	rsp, 8
0x431b40:	pop	rbx
0x431b41:	pop	rbp
0x431b42:	pop	r12
0x431b44:	pop	r13
0x431b46:	pop	r14
0x431b48:	pop	r15
0x431b4a:	ret	
0x431b4b:	nop	dword ptr [rax + rax]
0x431b50:	cmp	r13, 4
0x431b54:	je	0x431bd4
0x431b56:	mov	eax, 8
0x431b5b:	cmp	r13, 7
0x431b5f:	ja	0x431b94
0x431b61:	jmp	0x431cbc
0x431b66:	nop	word ptr cs:[rax + rax]
0x431b70:	mov	r10, qword ptr [r15 + rax - 8]
0x431b75:	lea	r11, [rax + 8]
0x431b79:	mov	qword ptr [rcx + r13*2], r10
0x431b7d:	mov	qword ptr [rcx], r14
0x431b80:	mov	rdx, qword ptr [rbx + 0x18]
0x431b84:	mov	qword ptr [rcx + rdx], r9
0x431b88:	mov	r13, qword ptr [rbx + 0x18]
0x431b8c:	cmp	r11, r13
0x431b8f:	ja	0x431bc6
0x431b91:	mov	rax, r11
0x431b94:	mov	r8, qword ptr [rbx + 8]
0x431b98:	cmp	qword ptr [rbx + 0x10], 3
0x431b9d:	mov	r14, qword ptr [r12 + rax - 8]
0x431ba2:	mov	r9, qword ptr [rbp + rax - 8]
0x431ba7:	lea	rcx, [r8 + rax - 8]
0x431bac:	je	0x431b70
0x431bae:	mov	qword ptr [rcx], r14
0x431bb1:	mov	rdi, qword ptr [rbx + 0x18]
0x431bb5:	lea	r11, [rax + 8]
0x431bb9:	mov	qword ptr [rcx + rdi], r9
0x431bbd:	mov	r13, qword ptr [rbx + 0x18]
0x431bc1:	cmp	r13, r11
0x431bc4:	jae	0x431b91
0x431bc6:	cmp	rax, r13
0x431bc9:	jae	0x431a21
0x431bcf:	jmp	0x412896
0x431bd4:	mov	ebp, dword ptr [rbp]
0x431bd7:	movd	xmm6, dword ptr [r12]
0x431bdd:	mov	rbx, qword ptr [rbx + 8]
0x431be1:	movd	xmm7, ebp
0x431be5:	punpckldq	xmm6, xmm7
0x431be9:	cmp	rax, 3
0x431bed:	jne	0x431bf6
0x431bef:	mov	r12d, dword ptr [r15]
0x431bf2:	mov	dword ptr [rbx + 8], r12d
0x431bf6:	movq	qword ptr [rbx], xmm6
0x431bfa:	jmp	0x431a21
0x431bff:	cmp	rdx, 4
0x431c03:	je	0x431c6f
0x431c05:	mov	esi, 8
0x431c0a:	cmp	rdx, 7
0x431c0e:	jbe	0x431c5f
0x431c10:	mov	rcx, qword ptr [rbx + 8]
0x431c14:	cmp	qword ptr [rbx + 0x10], 5
0x431c19:	mov	r10, qword ptr [r12 + rsi - 8]
0x431c1e:	mov	r9, qword ptr [rbp + rsi - 8]
0x431c23:	mov	r8, qword ptr [rax + rsi - 8]
0x431c28:	mov	rdi, qword ptr [r14 + rsi - 8]
0x431c2d:	lea	r15, [rcx + rsi - 8]
0x431c32:	je	0x431cae
0x431c34:	mov	qword ptr [r15], r10
0x431c37:	add	r15, qword ptr [rbx + 0x18]
0x431c3b:	lea	r10, [rsi + 8]
0x431c3f:	mov	qword ptr [r15], r9
0x431c42:	add	r15, qword ptr [rbx + 0x18]
0x431c46:	mov	qword ptr [r15], r8
0x431c49:	mov	rdx, qword ptr [rbx + 0x18]
0x431c4d:	mov	qword ptr [r15 + rdx], rdi
0x431c51:	mov	rdx, qword ptr [rbx + 0x18]
0x431c55:	cmp	rdx, r10
0x431c58:	jb	0x431c61
0x431c5a:	mov	rsi, r10
0x431c5d:	jmp	0x431c10
0x431c5f:	xor	esi, esi
0x431c61:	cmp	rsi, rdx
0x431c64:	jae	0x431a21
0x431c6a:	jmp	0x412840
0x431c6f:	movd	xmm1, dword ptr [rax]
0x431c73:	mov	esi, dword ptr [r14]
0x431c76:	mov	eax, dword ptr [rbp]
0x431c79:	movd	xmm0, dword ptr [r12]
0x431c7f:	movd	xmm2, esi
0x431c83:	cmp	qword ptr [rbx + 0x10], 5
0x431c88:	mov	rbp, qword ptr [rbx + 8]
0x431c8c:	movd	xmm3, eax
0x431c90:	punpckldq	xmm1, xmm2
0x431c94:	punpckldq	xmm0, xmm3
0x431c98:	punpcklqdq	xmm0, xmm1
0x431c9c:	jne	0x431ca5
0x431c9e:	mov	ebx, dword ptr [r13]
0x431ca2:	mov	dword ptr [rbp + 0x10], ebx
0x431ca5:	movups	xmmword ptr [rbp], xmm0
0x431ca9:	jmp	0x431a21
0x431cae:	mov	r11, qword ptr [r13 + rsi - 8]
0x431cb3:	mov	qword ptr [r15 + rdx*4], r11
0x431cb7:	jmp	0x431c34
0x431cbc:	xor	eax, eax
0x431cbe:	jmp	0x431bc6
0x431cc3:	nop	word ptr cs:[rax + rax]
0x431cce:	nop	
0x431cd0:	push	r15
0x431cd2:	mov	r10, rdx
0x431cd5:	push	r14
0x431cd7:	shr	r10, 1
0x431cda:	mov	r14, rcx
0x431cdd:	push	r13
0x431cdf:	mov	r13, rdi
0x431ce2:	push	r12
0x431ce4:	push	rbp
0x431ce5:	mov	rbp, rdx
0x431ce8:	sub	rdx, r10
0x431ceb:	push	rbx
0x431cec:	mov	rbx, rsi
0x431cef:	sub	rsp, 0x28
0x431cf3:	mov	r15, qword ptr [rsi + 0x18]
0x431cf7:	mov	qword ptr [rsp + 0x18], rdi
0x431cfc:	imul	r15, r10
0x431d00:	cmp	rdi, rcx
0x431d03:	mov	qword ptr [rsp + 0x10], r10
0x431d08:	cmove	r13, r8
0x431d0c:	cmp	rdx, qword ptr [rsi + 0x20]
0x431d10:	lea	rax, [rdi + r15]
0x431d14:	lea	r12, [rcx + r15]
0x431d18:	ja	0x431e58
0x431d1e:	mov	qword ptr [rsi + 8], r12
0x431d22:	mov	rdi, rax
0x431d25:	mov	qword ptr [rsi + 0x10], rdx
0x431d29:	mov	qword ptr [rsp + 8], rax
0x431d2e:	call	0x431980
0x431d33:	mov	rdx, qword ptr [rsp + 0x10]
0x431d38:	cmp	rdx, qword ptr [rbx + 0x20]
0x431d3c:	mov	rcx, qword ptr [rsp + 8]
0x431d41:	mov	rdi, qword ptr [rsp + 0x18]
0x431d46:	ja	0x431e40
0x431d4c:	mov	qword ptr [rbx + 8], r13
0x431d50:	mov	rsi, rbx
0x431d53:	mov	qword ptr [rbx + 0x10], rdx
0x431d57:	call	0x431980
0x431d5c:	sub	r15, qword ptr [rbx + 0x18]
0x431d60:	mov	rdi, r12
0x431d63:	lea	rsi, [r13 + r15]
0x431d68:	call	qword ptr [rbx]
0x431d6a:	test	eax, eax
0x431d6c:	jns	0x431dc6
0x431d6e:	mov	rsi, qword ptr [rbx + 0x18]
0x431d72:	imul	rbp, rsi
0x431d76:	add	rbp, r14
0x431d79:	cmp	rsi, 8
0x431d7d:	jne	0x431e6d
0x431d83:	nop	dword ptr [rax + rax]
0x431d88:	mov	rdi, r12
0x431d8b:	mov	rsi, r13
0x431d8e:	add	r14, 8
0x431d92:	call	qword ptr [rbx]
0x431d94:	mov	rcx, r12
0x431d97:	sar	eax, 0x1f
0x431d9a:	xor	rcx, r13
0x431d9d:	movsxd	rdi, eax
0x431da0:	and	eax, 8
0x431da3:	and	rcx, rdi
0x431da6:	add	r12, rax
0x431da9:	xor	rcx, r13
0x431dac:	mov	rsi, qword ptr [rcx]
0x431daf:	mov	qword ptr [r14 - 8], rsi
0x431db3:	cmp	r14, r12
0x431db6:	je	0x431e27
0x431db8:	not	rdi
0x431dbb:	and	edi, 8
0x431dbe:	add	r13, rdi
0x431dc1:	cmp	rbp, r12
0x431dc4:	jne	0x431d88
0x431dc6:	add	rsp, 0x28
0x431dca:	mov	rdx, r12
0x431dcd:	mov	rsi, r13
0x431dd0:	mov	rdi, r14
0x431dd3:	pop	rbx
0x431dd4:	sub	rdx, r14
0x431dd7:	pop	rbp
0x431dd8:	pop	r12
0x431dda:	pop	r13
0x431ddc:	pop	r14
0x431dde:	pop	r15
0x431de0:	jmp	0x403c60
0x431de5:	nop	dword ptr [rax]
0x431de8:	not	r9
0x431deb:	and	r9d, 4
0x431def:	add	r13, r9
0x431df2:	cmp	rbp, r12
0x431df5:	je	0x431dc6
0x431df7:	mov	rdi, r12
0x431dfa:	mov	rsi, r13
0x431dfd:	add	r14, 4
0x431e01:	call	qword ptr [rbx]
0x431e03:	mov	r10, r12
0x431e06:	sar	eax, 0x1f
0x431e09:	xor	r10, r13
0x431e0c:	movsxd	r9, eax
0x431e0f:	and	eax, 4
0x431e12:	and	r10, r9
0x431e15:	add	r12, rax
0x431e18:	xor	r10, r13
0x431e1b:	mov	edx, dword ptr [r10]
0x431e1e:	mov	dword ptr [r14 - 4], edx
0x431e22:	cmp	r14, r12
0x431e25:	jne	0x431de8
0x431e27:	add	rsp, 0x28
0x431e2b:	pop	rbx
0x431e2c:	pop	rbp
0x431e2d:	pop	r12
0x431e2f:	pop	r13
0x431e31:	pop	r14
0x431e33:	pop	r15
0x431e35:	ret	
0x431e36:	nop	word ptr cs:[rax + rax]
0x431e40:	mov	r8, rcx
0x431e43:	mov	rsi, rbx
0x431e46:	mov	rcx, r13
0x431e49:	call	0x431cd0
0x431e4e:	jmp	0x431d5c
0x431e53:	nop	dword ptr [rax + rax]
0x431e58:	mov	rcx, r12
0x431e5b:	mov	rdi, rax
0x431e5e:	mov	qword ptr [rsp + 8], rax
0x431e63:	call	0x431cd0
0x431e68:	jmp	0x431d33
0x431e6d:	cmp	rsi, 4
0x431e71:	je	0x431df7
0x431e73:	jmp	0x431e8a
0x431e75:	nop	dword ptr [rax]
0x431e78:	not	r15
0x431e7b:	and	r15, r8
0x431e7e:	add	r13, r15
0x431e81:	cmp	rbp, r12
0x431e84:	je	0x431dc6
0x431e8a:	mov	rdi, r12
0x431e8d:	mov	rsi, r13
0x431e90:	call	qword ptr [rbx]
0x431e92:	mov	rsi, r12
0x431e95:	mov	rdx, qword ptr [rbx + 0x18]
0x431e99:	mov	rdi, r14
0x431e9c:	sar	eax, 0x1f
0x431e9f:	xor	rsi, r13
0x431ea2:	movsxd	r15, eax
0x431ea5:	and	rsi, r15
0x431ea8:	xor	rsi, r13
0x431eab:	call	0x403c60
0x431eb0:	mov	r8, qword ptr [rbx + 0x18]
0x431eb4:	mov	r11, r15
0x431eb7:	and	r11, r8
0x431eba:	add	r14, r8
0x431ebd:	add	r12, r11
0x431ec0:	cmp	r14, r12
0x431ec3:	jne	0x431e78
0x431ec5:	jmp	0x431e27
0x431eca:	nop	word ptr [rax + rax]
0x431ed0:	push	rbp
0x431ed1:	mov	rbp, rsi
0x431ed4:	push	rbx
0x431ed5:	mov	rbx, rdi
0x431ed8:	xor	rbx, rbp
0x431edb:	sub	rsp, 8
0x431edf:	call	rdx
0x431ee1:	add	rsp, 8
0x431ee5:	sar	eax, 0x1f
0x431ee8:	cdqe	
0x431eea:	and	rax, rbx
0x431eed:	pop	rbx
0x431eee:	pop	rbp
0x431eef:	ret	
0x431ef0:	endbr64	
0x431ef4:	push	r12
0x431ef6:	mov	r12d, esi
0x431ef9:	push	rbp
0x431efa:	push	rbx
0x431efb:	mov	edx, dword ptr [rdi + 0x28]
0x431efe:	mov	rbx, rdi
0x431f01:	mov	rbp, qword ptr [rdi + 8]
0x431f05:	test	edx, edx
0x431f07:	jg	0x412a52
0x431f0d:	mov	rbp, qword ptr [rbp + 0xb0]
0x431f14:	mov	rdi, qword ptr [rbp + 0x18]
0x431f18:	cmp	rdi, qword ptr [rbp + 0x20]
0x431f1c:	je	0x431f3a
0x431f1e:	lea	r8, [rdi + 1]
0x431f22:	mov	qword ptr [rbp + 0x18], r8
0x431f26:	mov	byte ptr [rdi], r12b
0x431f29:	mov	r9, qword ptr [rbx + 8]
0x431f2d:	add	dword ptr [r9 + 0xc8], 1
0x431f35:	pop	rbx
0x431f36:	pop	rbp
0x431f37:	pop	r12
0x431f39:	ret	
0x431f3a:	jmp	0x412a82
0x431f3f:	nop	
0x431f40:	endbr64	
0x431f44:	xor	ebp, ebp
0x431f46:	mov	r9, rdx
0x431f49:	pop	rsi
0x431f4a:	mov	rdx, rsp
0x431f4d:	and	rsp, 0xfffffffffffffff0
0x431f51:	push	rax
0x431f52:	push	rsp
0x431f53:	xor	r8d, r8d
0x431f56:	xor	ecx, ecx
0x431f58:	mov	rdi, 0x432600
0x431f5f:	call	qword ptr [rip + 0xb0073]
0x431f65:	hlt	
0x431f66:	nop	word ptr cs:[rax + rax]
0x431f70:	endbr64	
0x431f74:	ret	
0x431f75:	nop	word ptr cs:[rax + rax]
0x431f7f:	nop	
0x431f80:	mov	eax, 0x4e3050
0x431f85:	cmp	rax, 0x4e3050
0x431f8b:	je	0x431fa0
0x431f8d:	mov	eax, 0
0x431f92:	test	rax, rax
0x431f95:	je	0x431fa0
0x431f97:	mov	edi, 0x4e3050
0x431f9c:	jmp	rax
0x431f9e:	nop	
0x431fa0:	ret	
0x431fa1:	nop	word ptr cs:[rax + rax]
0x431fac:	nop	dword ptr [rax]
0x431fb0:	mov	esi, 0x4e3050
0x431fb5:	sub	rsi, 0x4e3050
0x431fbc:	mov	rax, rsi
0x431fbf:	shr	rsi, 0x3f
0x431fc3:	sar	rax, 3
0x431fc7:	add	rsi, rax
0x431fca:	sar	rsi, 1
0x431fcd:	je	0x431fe0
0x431fcf:	mov	eax, 0
0x431fd4:	test	rax, rax
0x431fd7:	je	0x431fe0
0x431fd9:	mov	edi, 0x4e3050
0x431fde:	jmp	rax
0x431fe0:	ret	
0x431fe1:	nop	word ptr cs:[rax + rax]
0x431fec:	nop	dword ptr [rax]
0x431ff0:	endbr64	
0x431ff4:	cmp	byte ptr [rip + 0xb10ad], 0
0x431ffb:	jne	0x432010
0x431ffd:	push	rbp
0x431ffe:	mov	rbp, rsp
0x432001:	call	0x431f80
0x432006:	mov	byte ptr [rip + 0xb109b], 1
0x43200d:	pop	rbp
0x43200e:	ret	
0x43200f:	nop	
0x432010:	ret	
0x432011:	nop	word ptr cs:[rax + rax]
0x43201c:	nop	dword ptr [rax]
0x432020:	endbr64	
0x432024:	jmp	0x431fb0
0x432026:	nop	word ptr cs:[rax + rax]
0x432030:	endbr64	
0x432034:	mov	ecx, 1
0x432039:	jmp	0x432040
0x43203b:	nop	dword ptr [rax + rax]
0x432040:	endbr64	
0x432044:	push	rbp
0x432045:	mov	rbp, rsp
0x432048:	push	r15
0x43204a:	push	r14
0x43204c:	push	r13
0x43204e:	mov	r13, rdx
0x432051:	push	r12
0x432053:	push	rbx
0x432054:	sub	rsp, 0xd8
0x43205b:	test	rsi, rsi
0x43205e:	sete	al
0x432061:	test	rdx, rdx
0x432064:	sete	dl
0x432067:	or	al, dl
0x432069:	jne	0x403f70
0x43206f:	mov	r12, rdi
0x432072:	test	rdi, rdi
0x432075:	je	0x403f70
0x43207b:	mov	r14, rsi
0x43207e:	mov	ebx, ecx
0x432080:	call	0x4322e0
0x432085:	cmp	r12, rax
0x432088:	je	0x403fa0
0x43208e:	mov	qword ptr [rbp - 0x100], 0
0x432099:	mov	rdi, r12
0x43209c:	test	ebx, ebx
0x43209e:	je	0x403f93
0x4320a4:	call	0x42d670
0x4320a9:	mov	rbx, rax
0x4320ac:	test	rbx, rbx
0x4320af:	je	0x404027
0x4320b5:	mov	rdi, rbx
0x4320b8:	lea	rsi, [rbp - 0xc0]
0x4320bf:	call	0x432430
0x4320c4:	mov	rdi, rbx
0x4320c7:	mov	r12, rax
0x4320ca:	call	0x403830
0x4320cf:	test	r12, r12
0x4320d2:	je	0x404027
0x4320d8:	lea	rsi, [rbp - 0xc4]
0x4320df:	mov	rdi, r14
0x4320e2:	call	0x432430
0x4320e7:	mov	qword ptr [rbp - 0xf0], rax
0x4320ee:	test	rax, rax
0x4320f1:	je	0x403f88
0x4320f7:	mov	r8d, dword ptr [rbp - 0xc0]
0x4320fe:	mov	edx, dword ptr [rbp - 0xc4]
0x432104:	lea	ebx, [r8 - 1]
0x432108:	mov	dword ptr [rbp - 0xe8], edx
0x43210e:	mov	dword ptr [rbp - 0xc0], ebx
0x432114:	cmp	ebx, edx
0x432116:	je	0x4322da
0x43211c:	lea	rsi, [rbp - 0xc8]
0x432123:	mov	rdi, r13
0x432126:	call	0x432430
0x43212b:	mov	r14, rax
0x43212e:	test	rax, rax
0x432131:	je	0x403f80
0x432137:	mov	r13d, dword ptr [rbp - 0xc8]
0x43213e:	mov	r10d, dword ptr [rbp - 0xe8]
0x432145:	cmp	r10d, r13d
0x432148:	mov	dword ptr [rbp - 0xe4], r13d
0x43214f:	cmovle	r13d, r10d
0x432153:	xor	r15d, r15d
0x432156:	mov	dword ptr [rbp - 0xf4], r15d
0x43215d:	mov	dword ptr [rbp - 0xd8], r15d
0x432164:	cmp	r13d, r15d
0x432167:	jle	0x432185
0x432169:	mov	r11, qword ptr [rbp - 0xf0]
0x432170:	mov	rsi, qword ptr [r14 + r15*8]
0x432174:	mov	rdi, qword ptr [r11 + r15*8]
0x432178:	add	r15, 1
0x43217c:	call	0x403be0
0x432181:	test	eax, eax
0x432183:	je	0x432156
0x432185:	cmp	dword ptr [rbp - 0xd8], 0
0x43218c:	je	0x403f78
0x432192:	xor	r15d, r15d
0x432195:	xor	r13d, r13d
0x432198:	jmp	0x4321aa
0x43219a:	mov	rdi, qword ptr [r12 + r15*8]
0x43219e:	add	r15, 1
0x4321a2:	call	0x4039e0
0x4321a7:	add	r13d, eax
0x4321aa:	cmp	ebx, r15d
0x4321ad:	jg	0x43219a
0x4321af:	movsxd	r15, dword ptr [rbp - 0xd8]
0x4321b6:	mov	ecx, dword ptr [rbp - 0xe8]
0x4321bc:	mov	qword ptr [rbp - 0xe0], r15
0x4321c3:	sub	ecx, r15d
0x4321c6:	lea	esi, [rcx + rcx*2]
0x4321c9:	add	r13d, esi
0x4321cc:	cmp	dword ptr [rbp - 0xe4], r15d
0x4321d3:	jle	0x4321e7
0x4321d5:	mov	rdi, qword ptr [r14 + r15*8]
0x4321d9:	add	r15, 1
0x4321dd:	call	0x4039e0
0x4321e2:	add	r13d, eax
0x4321e5:	jmp	0x4321cc
0x4321e7:	lea	eax, [r13 + 1]
0x4321eb:	movsxd	rdi, eax
0x4321ee:	call	0x403ca0
0x4321f3:	mov	r13, rax
0x4321f6:	test	rax, rax
0x4321f9:	je	0x43224c
0x4321fb:	mov	byte ptr [rax], 0
0x4321fe:	xor	r15d, r15d
0x432201:	jmp	0x432213
0x432203:	mov	rsi, qword ptr [r12 + r15*8]
0x432207:	mov	rdi, r13
0x43220a:	add	r15, 1
0x43220e:	call	0x403e40
0x432213:	cmp	ebx, r15d
0x432216:	jg	0x432203
0x432218:	mov	rdi, r13
0x43221b:	call	0x4039e0
0x432220:	mov	ecx, dword ptr [rbp - 0xd8]
0x432226:	add	rax, r13
0x432229:	mov	rsi, rax
0x43222c:	mov	edi, dword ptr [rbp - 0xe8]
0x432232:	cmp	edi, ecx
0x432234:	jle	0x432286
0x432236:	mov	word ptr [rsi], 0x2e2e
0x43223b:	add	rsi, 3
0x43223f:	add	ecx, 1
0x432242:	mov	byte ptr [rsi - 1], 0
0x432246:	mov	byte ptr [rsi - 1], 0x2f
0x43224a:	jmp	0x43222c
0x43224c:	mov	rdi, r12
0x43224f:	call	0x432570
0x432254:	mov	rdi, qword ptr [rbp - 0xf0]
0x43225b:	call	0x432570
0x432260:	mov	rdi, r14
0x432263:	call	0x432570
0x432268:	mov	rdi, qword ptr [rbp - 0x100]
0x43226f:	call	0x403830
0x432274:	lea	rsp, [rbp - 0x28]
0x432278:	mov	rax, r13
0x43227b:	pop	rbx
0x43227c:	pop	r12
0x43227e:	pop	r13
0x432280:	pop	r14
0x432282:	pop	r15
0x432284:	pop	rbp
0x432285:	ret	
0x432286:	mov	r9d, dword ptr [rbp - 0xd8]
0x43228d:	mov	ebx, edi
0x43228f:	sub	ebx, dword ptr [rbp - 0xf4]
0x432295:	mov	r10d, 0
0x43229b:	lea	rdx, [rbx + rbx*2]
0x43229f:	cmp	edi, r9d
0x4322a2:	cmovl	rdx, r10
0x4322a6:	mov	byte ptr [rax + rdx], 0
0x4322aa:	mov	r11d, dword ptr [rbp - 0xe0]
0x4322b1:	cmp	dword ptr [rbp - 0xe4], r11d
0x4322b8:	jle	0x43224c
0x4322ba:	mov	r15, qword ptr [rbp - 0xe0]
0x4322c1:	mov	rdi, r13
0x4322c4:	mov	rsi, qword ptr [r14 + r15*8]
0x4322c8:	add	r15, 1
0x4322cc:	call	0x403e40
0x4322d1:	mov	qword ptr [rbp - 0xe0], r15
0x4322d8:	jmp	0x4322aa
0x4322da:	jmp	0x404040
0x4322df:	nop	
0x4322e0:	endbr64	
0x4322e4:	movzx	edx, byte ptr [rdi]
0x4322e7:	mov	rax, rdi
0x4322ea:	mov	rcx, rdi
0x4322ed:	test	dl, dl
0x4322ef:	jne	0x4322f7
0x4322f1:	jmp	0x432311
0x4322f3:	test	dl, dl
0x4322f5:	je	0x43230d
0x4322f7:	add	rax, 1
0x4322fb:	cmp	dl, 0x2f
0x4322fe:	movzx	edx, byte ptr [rax]
0x432301:	jne	0x4322f3
0x432303:	test	dl, dl
0x432305:	je	0x43230c
0x432307:	mov	rcx, rax
0x43230a:	jmp	0x4322f7
0x43230c:	ret	
0x43230d:	mov	rax, rcx
0x432310:	ret	
0x432311:	ret	
0x432312:	nop	word ptr cs:[rax + rax]
0x43231d:	nop	dword ptr [rax]
0x432320:	endbr64	
0x432324:	push	rbp
0x432325:	mov	rbp, rdi
0x432328:	mov	esi, 0x150
0x43232d:	push	rbx
0x43232e:	push	rax
0x43232f:	mov	qword ptr [rdi], 0x4be160
0x432336:	mov	edi, 1
0x43233b:	call	0x42d6b0
0x432340:	mov	rbx, rax
0x432343:	mov	rdi, rax
0x432346:	call	0x4323a0
0x43234b:	mov	qword ptr [rbp + 8], rbx
0x43234f:	mov	rdi, rbp
0x432352:	xor	esi, esi
0x432354:	mov	qword ptr [rbp + 0x30], 0
0x43235c:	mov	qword ptr [rbp + 0x38], 0
0x432364:	mov	qword ptr [rbp + 0x40], 0x10000
0x43236c:	mov	qword ptr [rbp + 0x10], 0
0x432374:	mov	qword ptr [rbp + 0x18], 0
0x43237c:	mov	qword ptr [rbp + 0x20], 0
0x432384:	mov	dword ptr [rbp + 0x28], 0
0x43238b:	pop	rdx
0x43238c:	pop	rbx
0x43238d:	pop	rbp
0x43238e:	jmp	0x4325a0
0x432393:	nop	
0x432394:	nop	word ptr cs:[rax + rax]
0x43239f:	nop	
0x4323a0:	endbr64	
0x4323a4:	mov	r9, rdi
0x4323a7:	mov	edx, 0x16
0x4323ac:	push	rbp
0x4323ad:	xor	eax, eax
0x4323af:	lea	rbp, [r9 + 0x58]
0x4323b3:	mov	rcx, rdx
0x4323b6:	mov	rsi, qword ptr [rip + 0xb0ce3]
0x4323bd:	mov	r8d, 0x42de10
0x4323c3:	rep stosd	dword ptr [rdi], eax
0x4323c5:	mov	rdi, rbp
0x4323c8:	mov	rcx, rdx
0x4323cb:	xor	edx, edx
0x4323cd:	rep stosd	dword ptr [rdi], eax
0x4323cf:	lea	rdi, [r9 + 0xcc]
0x4323d6:	mov	ecx, 0x20
0x4323db:	mov	qword ptr [r9 + 0xc0], rsi
0x4323e2:	mov	qword ptr [r9 + 0xb0], r9
0x4323e9:	xor	esi, esi
0x4323eb:	mov	qword ptr [r9 + 0xb8], 0
0x4323f6:	mov	dword ptr [r9 + 0xc8], 0
0x432401:	rep stosd	dword ptr [rdi], eax
0x432403:	mov	byte ptr [r9 + 0x14c], 1
0x43240b:	mov	ecx, 0x42dae0
0x432410:	mov	rdi, r9
0x432413:	call	0x42d700
0x432418:	mov	rdi, rbp
0x43241b:	mov	r8d, 0x42de10
0x432421:	xor	edx, edx
0x432423:	mov	ecx, 0x42dae0
0x432428:	xor	esi, esi
0x43242a:	pop	rbp
0x43242b:	jmp	0x42d700
0x432430:	push	r15
0x432432:	push	r14
0x432434:	push	r13
0x432436:	push	r12
0x432438:	push	rbp
0x432439:	push	rbx
0x43243a:	sub	rsp, 0x18
0x43243e:	cmp	byte ptr [rdi], 0
0x432441:	je	0x404211
0x432447:	mov	r13, rdi
0x43244a:	mov	r12, rsi
0x43244d:	mov	rbx, rdi
0x432450:	xor	r8d, r8d
0x432453:	mov	rax, rbx
0x432456:	movsx	edx, byte ptr [rax]
0x432459:	add	rax, 1
0x43245d:	test	edx, edx
0x43245f:	je	0x43247c
0x432461:	cmp	edx, 0x2f
0x432464:	jne	0x432456
0x432466:	add	r8d, 1
0x43246a:	movzx	esi, byte ptr [rax]
0x43246d:	mov	rbx, rax
0x432470:	add	rax, 1
0x432474:	cmp	sil, 0x2f
0x432478:	jne	0x432453
0x43247a:	jmp	0x43246a
0x43247c:	lea	edi, [r8 + 2]
0x432480:	movsxd	rdi, edi
0x432483:	shl	rdi, 3
0x432487:	call	0x403ca0
0x43248c:	mov	r14, rax
0x43248f:	test	rax, rax
0x432492:	je	0x404211
0x432498:	xor	ebp, ebp
0x43249a:	movsxd	r15, ebp
0x43249d:	mov	rbx, r13
0x4324a0:	mov	rcx, rbx
0x4324a3:	movsx	esi, byte ptr [rbx]
0x4324a6:	add	rbx, 1
0x4324aa:	test	esi, esi
0x4324ac:	je	0x432507
0x4324ae:	cmp	esi, 0x2f
0x4324b1:	jne	0x4324a0
0x4324b3:	cmp	byte ptr [rbx], 0x2f
0x4324b6:	je	0x404208
0x4324bc:	mov	r15, rbx
0x4324bf:	sub	r15, r13
0x4324c2:	lea	eax, [r15 + 1]
0x4324c6:	movsxd	r15, r15d
0x4324c9:	movsxd	rdi, eax
0x4324cc:	call	0x403ca0
0x4324d1:	mov	rdx, r15
0x4324d4:	mov	rsi, r13
0x4324d7:	mov	rdi, rax
0x4324da:	call	0x403c60
0x4324df:	mov	qword ptr [r14 + rbp*8], rax
0x4324e3:	add	rbp, 1
0x4324e7:	mov	rcx, qword ptr [r14 + rbp*8 - 8]
0x4324ec:	mov	byte ptr [rax + r15], 0
0x4324f1:	lea	rdx, [rbp*8]
0x4324f9:	test	rcx, rcx
0x4324fc:	je	0x4041e9
0x432502:	mov	r13, rbx
0x432505:	jmp	0x43249a
0x432507:	mov	rbx, rcx
0x43250a:	sub	rbx, r13
0x43250d:	test	rbx, rbx
0x432510:	jle	0x43253e
0x432512:	lea	r8d, [rbx + 1]
0x432516:	movsxd	rbx, ebx
0x432519:	lea	ebp, [r15 + 1]
0x43251d:	movsxd	rdi, r8d
0x432520:	call	0x403ca0
0x432525:	mov	rdx, rbx
0x432528:	mov	rsi, r13
0x43252b:	mov	rdi, rax
0x43252e:	call	0x403c60
0x432533:	mov	byte ptr [rax + rbx], 0
0x432537:	mov	qword ptr [r14 + r15*8], rax
0x43253b:	mov	r15d, ebp
0x43253e:	movsxd	r10, r15d
0x432541:	mov	r11, qword ptr [r14 + r10*8 - 8]
0x432546:	mov	qword ptr [r14 + r10*8], 0
0x43254e:	test	r11, r11
0x432551:	je	0x432569
0x432553:	mov	dword ptr [r12], r15d
0x432557:	mov	rax, r14
0x43255a:	add	rsp, 0x18
0x43255e:	pop	rbx
0x43255f:	pop	rbp
0x432560:	pop	r12
0x432562:	pop	r13
0x432564:	pop	r14
0x432566:	pop	r15
0x432568:	ret	
0x432569:	jmp	0x404218
0x43256e:	nop	
0x432570:	test	rdi, rdi
0x432573:	je	0x40422f
0x432579:	push	rbp
0x43257a:	mov	rbp, rdi
0x43257d:	push	rbx
0x43257e:	mov	rbx, rdi
0x432581:	push	rdx
0x432582:	jmp	0x432589
0x432584:	call	0x403830
0x432589:	mov	rdi, qword ptr [rbx]
0x43258c:	add	rbx, 8
0x432590:	test	rdi, rdi
0x432593:	jne	0x432584
0x432595:	pop	rax
0x432596:	mov	rdi, rbp
0x432599:	pop	rbx
0x43259a:	pop	rbp
0x43259b:	jmp	0x403830
0x4325a0:	endbr64	
0x4325a4:	push	rbp
0x4325a5:	mov	rbp, rsi
0x4325a8:	push	rbx
0x4325a9:	mov	rbx, rdi
0x4325ac:	push	rax
0x4325ad:	mov	rdi, qword ptr [rdi + 0x10]
0x4325b1:	call	0x403830
0x4325b6:	mov	qword ptr [rbx + 0x10], rbp
0x4325ba:	mov	rdi, rbx
0x4325bd:	call	0x4325e0
0x4325c2:	mov	byte ptr [rbx + 0x40], 0
0x4325c6:	mov	dword ptr [rbx + 0x20], 0
0x4325cd:	pop	rdx
0x4325ce:	pop	rbx
0x4325cf:	pop	rbp
0x4325d0:	ret	
0x4325d1:	nop	word ptr cs:[rax + rax]
0x4325dc:	nop	dword ptr [rax]
0x4325e0:	endbr64	
0x4325e4:	push	rbp
0x4325e5:	push	rbx
0x4325e6:	mov	rbx, rdi
0x4325e9:	push	rdx
0x4325ea:	mov	ebp, dword ptr [rdi + 0x28]
0x4325ed:	test	ebp, ebp
0x4325ef:	jg	0x404411
0x4325f5:	mov	dword ptr [rbx + 0x1c], ebp
0x4325f8:	pop	rax
0x4325f9:	pop	rbx
0x4325fa:	pop	rbp
0x4325fb:	ret	
0x4325fc:	nop	dword ptr [rax]
0x432600:	endbr64	
0x432604:	push	r15
0x432606:	pxor	xmm0, xmm0
0x43260a:	push	r14
0x43260c:	mov	r14d, edi
0x43260f:	push	r13
0x432611:	push	r12
0x432613:	push	rbp
0x432614:	push	rbx
0x432615:	sub	rsp, 0x138
0x43261c:	mov	r12, qword ptr [rsi]
0x43261f:	mov	word ptr [rip + 0xb2328], 0
0x432628:	mov	qword ptr [rsp + 0x20], rsi
0x43262d:	mov	rdi, r12
0x432630:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x432638:	mov	qword ptr [rsp + 0x98], 0
0x432644:	call	0x4039e0
0x432649:	add	rax, r12
0x43264c:	cmp	r12, rax
0x43264f:	je	0x43265d
0x432651:	cmp	byte ptr [rax - 1], 0x2f
0x432655:	je	0x43265d
0x432657:	sub	rax, 1
0x43265b:	jmp	0x43264c
0x43265d:	cmp	qword ptr [rip + 0xb0c6b], 0
0x432665:	mov	qword ptr [rip + 0xb235c], rax
0x43266c:	mov	qword ptr [rip + 0xafe05], rax
0x432673:	jne	0x432683
0x432675:	xor	edi, edi
0x432677:	call	0x403b80
0x43267c:	mov	qword ptr [rip + 0xb0c4d], rax
0x432683:	mov	dword ptr [rsp + 0x28], 0x7d0
0x43268b:	mov	r15, qword ptr [rsp + 0x20]
0x432690:	xor	r13d, r13d
0x432693:	add	r13d, 1
0x432697:	movsxd	rbx, r13d
0x43269a:	jmp	0x4326b6
0x43269c:	mov	r11, qword ptr [r15 + rbx*8]
0x4326a0:	lea	rdx, [rbx*8]
0x4326a8:	cmp	byte ptr [r11], 0x40
0x4326ac:	je	0x433950
0x4326b2:	add	rbx, 1
0x4326b6:	lea	r12d, [rbx - 1]
0x4326ba:	mov	r13d, ebx
0x4326bd:	cmp	r14d, ebx
0x4326c0:	jg	0x43269c
0x4326c2:	cmp	qword ptr [rsp + 0x20], r15
0x4326c7:	jne	0x433d5b
0x4326cd:	xor	edx, edx
0x4326cf:	mov	r8d, 0x42de10
0x4326d5:	mov	ecx, 0x42dae0
0x4326da:	mov	esi, 0x10000
0x4326df:	mov	edi, 0x4e60e0
0x4326e4:	call	0x42d700
0x4326e9:	cmp	qword ptr [rip + 0xb39ef], 0
0x4326f1:	je	0x4344df
0x4326f7:	mov	r8d, 0x4e4a40
0x4326fd:	mov	edx, 0x2be
0x432702:	mov	esi, 0x4bca80
0x432707:	mov	rdi, r8
0x43270a:	mov	rcx, rdx
0x43270d:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x432710:	mov	edi, 0x4e32e0
0x432715:	mov	dword ptr [rip + 0xb353d], 1
0x43271f:	mov	dword ptr [rip + 0xb3513], 2
0x432729:	mov	dword ptr [rip + 0xb23f9], 0x8002802
0x432733:	mov	rax, rcx
0x432736:	mov	rcx, rdx
0x432739:	rep stosq	qword ptr [rdi], rax
0x43273c:	mov	rdi, r8
0x43273f:	call	0x4359b0
0x432744:	mov	edi, r14d
0x432747:	lea	rcx, [rsp + 0x90]
0x43274f:	mov	rsi, r15
0x432752:	lea	rdx, [rsp + 0x88]
0x43275a:	call	0x4359d0
0x43275f:	mov	rdi, qword ptr [rip + 0xb090a]
0x432766:	test	rdi, rdi
0x432769:	je	0x432775
0x43276b:	mov	esi, 2
0x432770:	call	0x403cc0
0x432775:	mov	rdi, qword ptr [rip + 0xb08e4]
0x43277c:	test	rdi, rdi
0x43277f:	je	0x43278b
0x432781:	mov	esi, 2
0x432786:	call	0x403cc0
0x43278b:	mov	rdi, qword ptr [rip + 0xb090e]
0x432792:	test	rdi, rdi
0x432795:	je	0x4327a1
0x432797:	mov	esi, 2
0x43279c:	call	0x403cc0
0x4327a1:	mov	esi, 0x4c4893
0x4327a6:	xor	edi, edi
0x4327a8:	call	0x403d50
0x4327ad:	mov	esi, 0x4c4893
0x4327b2:	mov	edi, 5
0x4327b7:	call	0x403d50
0x4327bc:	mov	esi, 0x45b090
0x4327c1:	mov	edi, 0x45b0a2
0x4327c6:	call	0x4039d0
0x4327cb:	mov	edi, 0x45b0a2
0x4327d0:	call	0x4039a0
0x4327d5:	mov	edi, 0x45b0a9
0x4327da:	call	0x403a20
0x4327df:	mov	edi, 0x45b2bd
0x4327e4:	mov	qword ptr [rip + 0xafc9d], rax
0x4327eb:	call	0x403a20
0x4327f0:	mov	edi, 0xe
0x4327f5:	mov	qword ptr [rip + 0xafc84], rax
0x4327fc:	call	0x403cd0
0x432801:	mov	rbp, rax
0x432804:	test	rax, rax
0x432807:	je	0x432833
0x432809:	mov	esi, 0x45b0ab
0x43280e:	mov	rdi, rax
0x432811:	call	0x403850
0x432816:	test	eax, eax
0x432818:	je	0x434f63
0x43281e:	mov	esi, 0x45b0b1
0x432823:	mov	rdi, rbp
0x432826:	call	0x403850
0x43282b:	test	eax, eax
0x43282d:	je	0x434f63
0x432833:	mov	rdi, qword ptr [rip + 0xafc4e]
0x43283a:	mov	esi, 0x45b0a9
0x43283f:	call	0x403be0
0x432844:	test	eax, eax
0x432846:	jne	0x432875
0x432848:	mov	rdi, qword ptr [rip + 0xafc31]
0x43284f:	mov	esi, 0x45b2bd
0x432854:	call	0x403be0
0x432859:	test	eax, eax
0x43285b:	jne	0x432875
0x43285d:	cmp	byte ptr [rip + 0xb38d4], 0
0x432864:	mov	qword ptr [rip + 0xafc19], 0x45b2bd
0x43286f:	jne	0x434f12
0x432875:	mov	edi, 0x48
0x43287a:	call	0x42db10
0x43287f:	mov	rdi, rax
0x432882:	mov	qword ptr [rip + 0xb0837], rax
0x432889:	call	0x432320
0x43288e:	xor	eax, eax
0x432890:	mov	edi, 0x4e30c8
0x432895:	mov	ecx, 0xf
0x43289a:	rep stosd	dword ptr [rdi], eax
0x43289c:	xor	edi, edi
0x43289e:	mov	byte ptr [rip + 0xb085f], 0
0x4328a5:	mov	dword ptr [rip + 0xb0859], 0
0x4328af:	call	0x42db10
0x4328b4:	mov	r9, qword ptr [rip + 0xb0805]
0x4328bb:	mov	edi, 0x4e30c0
0x4328c0:	mov	byte ptr [rip + 0xb086d], 0
0x4328c7:	mov	qword ptr [rip + 0xb0842], rax
0x4328ce:	mov	esi, dword ptr [r9 + 0x28]
0x4328d2:	call	0x435970
0x4328d7:	mov	r10d, 0x40d856
0x4328dd:	pxor	xmm2, xmm2
0x4328e1:	mov	edi, 0x45b0be
0x4328e6:	movq	xmm1, r10
0x4328eb:	mov	byte ptr [rip + 0xb0860], 0
0x4328f2:	movhps	xmm1, qword ptr [rip + 0x8ba6f]
0x4328f9:	mov	byte ptr [rip + 0xb08d0], 0
0x432900:	mov	dword ptr [rip + 0xb0832], 0x5e5e5e
0x43290a:	mov	qword ptr [rip + 0xb082b], 0
0x432915:	mov	word ptr [rip + 0xb082a], 0
0x43291e:	mov	dword ptr [rip + 0xb0824], 0
0x432928:	mov	word ptr [rip + 0xb081f], 0
0x432931:	mov	dword ptr [rip + 0xb0819], 0
0x43293b:	mov	qword ptr [rip + 0xb0822], 0x40dd7b
0x432946:	mov	qword ptr [rip + 0xb082f], 0
0x432951:	mov	dword ptr [rip + 0xb0855], 0
0x43295b:	mov	qword ptr [rip + 0xb0852], 0
0x432966:	mov	qword ptr [rip + 0xb0837], 0
0x432971:	mov	dword ptr [rip + 0xb0845], 0
0x43297b:	mov	qword ptr [rip + 0xb0842], 0
0x432986:	movups	xmmword ptr [rip + 0xb07cb], xmm1
0x43298d:	movaps	xmmword ptr [rip + 0xb07dc], xmm2
0x432994:	movups	xmmword ptr [rip + 0xb07ed], xmm2
0x43299b:	call	0x403800
0x4329a0:	mov	r14, rax
0x4329a3:	test	rax, rax
0x4329a6:	jne	0x434ef2
0x4329ac:	mov	r11, qword ptr [rip + 0x8b9ad]
0x4329b3:	mov	rdi, qword ptr [rip + 0xb0706]
0x4329ba:	pxor	xmm3, xmm3
0x4329be:	or	esi, 0xffffffff
0x4329c1:	movups	xmmword ptr [rip + 0xb0830], xmm3
0x4329c8:	mov	qword ptr [rip + 0xb080d], r11
0x4329cf:	mov	dword ptr [rip + 0xb07ff], 0
0x4329d9:	mov	qword ptr [rip + 0xb0804], 0
0x4329e4:	mov	qword ptr [rip + 0xb0801], 0
0x4329ef:	mov	qword ptr [rip + 0xb080e], 0x43f7a0
0x4329fa:	call	0x436c80
0x4329ff:	mov	rdi, qword ptr [rip + 0xb06ba]
0x432a06:	or	esi, 0xffffffff
0x432a09:	call	0x436cf0
0x432a0e:	mov	edi, 0x40ac12
0x432a13:	call	0x45a3d0
0x432a18:	test	eax, eax
0x432a1a:	jne	0x434ee4
0x432a20:	mov	esi, 1
0x432a25:	mov	edi, 2
0x432a2a:	call	0x403c00
0x432a2f:	sub	rax, 1
0x432a33:	je	0x432a44
0x432a35:	mov	esi, 0x413cd1
0x432a3a:	mov	edi, 2
0x432a3f:	call	0x403c00
0x432a44:	mov	esi, 1
0x432a49:	mov	edi, 1
0x432a4e:	call	0x403c00
0x432a53:	sub	rax, 1
0x432a57:	je	0x432a68
0x432a59:	mov	esi, 0x413cd1
0x432a5e:	mov	edi, 1
0x432a63:	call	0x403c00
0x432a68:	mov	esi, 1
0x432a6d:	mov	edi, 0xf
0x432a72:	call	0x403c00
0x432a77:	sub	rax, 1
0x432a7b:	je	0x432a8c
0x432a7d:	mov	esi, 0x413cd1
0x432a82:	mov	edi, 0xf
0x432a87:	call	0x403c00
0x432a8c:	mov	esi, 1
0x432a91:	mov	edi, 0xd
0x432a96:	call	0x403c00
0x432a9b:	sub	rax, 1
0x432a9f:	je	0x432ab0
0x432aa1:	mov	esi, 0x413cd1
0x432aa6:	mov	edi, 0xd
0x432aab:	call	0x403c00
0x432ab0:	xor	esi, esi
0x432ab2:	mov	edi, 0x11
0x432ab7:	call	0x403c00
0x432abc:	lea	rsi, [rsp + 0xa0]
0x432ac4:	mov	edi, 3
0x432ac9:	call	0x403ea0
0x432ace:	test	eax, eax
0x432ad0:	jne	0x432ae7
0x432ad2:	mov	rbx, qword ptr [rsp + 0xa0]
0x432ada:	cmp	rbx, 0x3ffffff
0x432ae1:	jbe	0x433685
0x432ae7:	call	0x436d20
0x432aec:	mov	r8d, 0x42de10
0x432af2:	xor	edx, edx
0x432af4:	xor	esi, esi
0x432af6:	mov	ecx, 0x42dae0
0x432afb:	mov	edi, 0x4e48e0
0x432b00:	mov	r13d, 0x4be0a0
0x432b06:	mov	ebp, 0x45b03d
0x432b0b:	call	0x42d700
0x432b10:	mov	r8d, 0x42de10
0x432b16:	xor	edx, edx
0x432b18:	xor	esi, esi
0x432b1a:	mov	ecx, 0x42dae0
0x432b1f:	mov	edi, 0x4e6140
0x432b24:	call	0x42d700
0x432b29:	mov	rdi, rbp
0x432b2c:	call	0x4039e0
0x432b31:	mov	r8, qword ptr [rip + 0xb3628]
0x432b38:	sub	r8, qword ptr [rip + 0xb3619]
0x432b3f:	mov	r14, rax
0x432b42:	cmp	rax, r8
0x432b45:	ja	0x434d97
0x432b4b:	mov	rdi, qword ptr [rip + 0xb3606]
0x432b52:	mov	rdx, r14
0x432b55:	mov	rsi, rbp
0x432b58:	add	r13, 8
0x432b5c:	call	0x403c60
0x432b61:	mov	rbp, qword ptr [r13]
0x432b65:	add	r14, qword ptr [rip + 0xb35ec]
0x432b6c:	mov	qword ptr [rip + 0xb35e5], r14
0x432b73:	test	rbp, rbp
0x432b76:	jne	0x432b29
0x432b78:	cmp	r14, qword ptr [rip + 0xb35e1]
0x432b7f:	je	0x4342f5
0x432b85:	mov	rsi, qword ptr [rip + 0xb35cc]
0x432b8c:	lea	rdx, [rsi + 1]
0x432b90:	mov	qword ptr [rip + 0xb35c1], rdx
0x432b97:	mov	byte ptr [rsi], 0
0x432b9a:	mov	rcx, qword ptr [rip + 0xb35af]
0x432ba1:	mov	rax, qword ptr [rip + 0xb35b0]
0x432ba8:	cmp	rcx, rax
0x432bab:	je	0x4342cc
0x432bb1:	mov	rdi, qword ptr [rip + 0xb35b8]
0x432bb8:	mov	r14, qword ptr [rip + 0xb35a1]
0x432bbf:	mov	qword ptr [rip + 0xb1dfa], rcx
0x432bc6:	mov	r12d, 0x4be080
0x432bcc:	mov	r13d, 0x45b050
0x432bd2:	add	rax, rdi
0x432bd5:	not	rdi
0x432bd8:	mov	r10, r14
0x432bdb:	sub	r10, qword ptr [rip + 0xb3566]
0x432be2:	and	rax, rdi
0x432be5:	mov	r9, rax
0x432be8:	sub	r9, qword ptr [rip + 0xb3559]
0x432bef:	cmp	r9, r10
0x432bf2:	cmova	rax, r14
0x432bf6:	movq	xmm4, rax
0x432bfb:	punpcklqdq	xmm4, xmm4
0x432bff:	movaps	xmmword ptr [rip + 0xb354a], xmm4
0x432c06:	mov	rdi, r13
0x432c09:	mov	rbp, r14
0x432c0c:	call	0x4039e0
0x432c11:	sub	rbp, qword ptr [rip + 0xb3540]
0x432c18:	mov	rbx, rax
0x432c1b:	cmp	rax, rbp
0x432c1e:	ja	0x4344cd
0x432c24:	mov	rdi, qword ptr [rip + 0xb352d]
0x432c2b:	mov	rdx, rbx
0x432c2e:	mov	rsi, r13
0x432c31:	add	r12, 8
0x432c35:	call	0x403c60
0x432c3a:	mov	r13, qword ptr [r12]
0x432c3e:	add	rbx, qword ptr [rip + 0xb3513]
0x432c45:	mov	qword ptr [rip + 0xb350c], rbx
0x432c4c:	test	r13, r13
0x432c4f:	je	0x432c5a
0x432c51:	mov	r14, qword ptr [rip + 0xb3508]
0x432c58:	jmp	0x432c06
0x432c5a:	cmp	rbx, qword ptr [rip + 0xb34ff]
0x432c61:	je	0x4344b9
0x432c67:	mov	r11, qword ptr [rip + 0xb34ea]
0x432c6e:	lea	r14, [r11 + 1]
0x432c72:	mov	qword ptr [rip + 0xb34df], r14
0x432c79:	mov	byte ptr [r11], 0
0x432c7d:	mov	r8, qword ptr [rip + 0xb34cc]
0x432c84:	mov	rcx, qword ptr [rip + 0xb34cd]
0x432c8b:	cmp	r8, rcx
0x432c8e:	je	0x4344ad
0x432c94:	mov	rsi, qword ptr [rip + 0xb34d5]
0x432c9b:	movdqu	xmm6, xmmword ptr [rip + 0xb34b5]
0x432ca3:	add	rcx, rsi
0x432ca6:	movhlps	xmm8, xmm6
0x432caa:	movdqa	xmm7, xmm6
0x432cae:	not	rsi
0x432cb1:	and	rcx, rsi
0x432cb4:	movq	rdi, xmm8
0x432cb9:	punpckhqdq	xmm7, xmm6
0x432cbd:	sub	rdi, qword ptr [rip + 0xb3484]
0x432cc4:	movq	xmm5, rcx
0x432cc9:	mov	rax, rcx
0x432ccc:	sub	rax, qword ptr [rip + 0xb3475]
0x432cd3:	punpcklqdq	xmm5, xmm5
0x432cd7:	movq	rdx, xmm8
0x432cdc:	cmp	rax, rdi
0x432cdf:	ja	0x43448b
0x432ce5:	mov	qword ptr [rip + 0xb1c5c], r8
0x432cec:	movaps	xmmword ptr [rip + 0xb345d], xmm5
0x432cf3:	cmp	rcx, rdx
0x432cf6:	je	0x434499
0x432cfc:	mov	r9, qword ptr [rip + 0xb3455]
0x432d03:	lea	r10, [r9 + 1]
0x432d07:	mov	qword ptr [rip + 0xb344a], r10
0x432d0e:	mov	byte ptr [r9], 0
0x432d12:	mov	r12, qword ptr [rip + 0xb3437]
0x432d19:	mov	rbx, qword ptr [rip + 0xb3438]
0x432d20:	cmp	r12, rbx
0x432d23:	je	0x43447f
0x432d29:	movdqu	xmm10, xmmword ptr [rip + 0xb3426]
0x432d32:	mov	rbp, qword ptr [rip + 0xb3437]
0x432d39:	add	rbx, rbp
0x432d3c:	movhlps	xmm12, xmm10
0x432d40:	movdqa	xmm11, xmm10
0x432d45:	not	rbp
0x432d48:	and	rbx, rbp
0x432d4b:	movq	r14, xmm12
0x432d50:	punpckhqdq	xmm11, xmm10
0x432d55:	sub	r14, qword ptr [rip + 0xb33ec]
0x432d5c:	movq	xmm9, rbx
0x432d61:	mov	r11, rbx
0x432d64:	sub	r11, qword ptr [rip + 0xb33dd]
0x432d6b:	punpcklqdq	xmm9, xmm9
0x432d70:	movq	r13, xmm12
0x432d75:	cmp	r11, r14
0x432d78:	ja	0x43445c
0x432d7e:	mov	qword ptr [rip + 0xb1c33], r12
0x432d85:	movaps	xmmword ptr [rip + 0xb33c3], xmm9
0x432d8d:	cmp	rbx, r13
0x432d90:	je	0x43446b
0x432d96:	mov	r8, qword ptr [rip + 0xb33bb]
0x432d9d:	lea	rcx, [r8 + 1]
0x432da1:	mov	qword ptr [rip + 0xb33b0], rcx
0x432da8:	mov	byte ptr [r8], 0
0x432dac:	mov	r9, qword ptr [rip + 0xb339d]
0x432db3:	mov	rsi, qword ptr [rip + 0xb339e]
0x432dba:	cmp	r9, rsi
0x432dbd:	je	0x434450
0x432dc3:	movdqu	xmm14, xmmword ptr [rip + 0xb338c]
0x432dcc:	mov	rdx, qword ptr [rip + 0xb339d]
0x432dd3:	add	rsi, rdx
0x432dd6:	movhlps	xmm0, xmm14
0x432dda:	movdqa	xmm15, xmm14
0x432ddf:	not	rdx
0x432de2:	and	rdx, rsi
0x432de5:	movq	r10, xmm0
0x432dea:	punpckhqdq	xmm15, xmm14
0x432def:	sub	r10, qword ptr [rip + 0xb3352]
0x432df6:	movq	xmm13, rdx
0x432dfb:	mov	rdi, rdx
0x432dfe:	sub	rdi, qword ptr [rip + 0xb3343]
0x432e05:	punpcklqdq	xmm13, xmm13
0x432e0a:	movq	rax, xmm0
0x432e0f:	cmp	rdi, r10
0x432e12:	ja	0x43442d
0x432e18:	sub	rax, rdx
0x432e1b:	mov	qword ptr [rip + 0xb1b1e], r9
0x432e22:	movaps	xmmword ptr [rip + 0xb3326], xmm13
0x432e2a:	cmp	rax, 2
0x432e2e:	jbe	0x43443c
0x432e34:	mov	r12, qword ptr [rip + 0xb331d]
0x432e3b:	mov	word ptr [r12], 0x366d
0x432e42:	mov	byte ptr [r12 + 2], 0x34
0x432e48:	mov	rbx, qword ptr [rip + 0xb3309]
0x432e4f:	add	rbx, 3
0x432e53:	cmp	rbx, qword ptr [rip + 0xb3306]
0x432e5a:	mov	qword ptr [rip + 0xb32f7], rbx
0x432e61:	je	0x434419
0x432e67:	mov	rbp, qword ptr [rip + 0xb32ea]
0x432e6e:	lea	r13, [rbp + 1]
0x432e72:	mov	qword ptr [rip + 0xb32df], r13
0x432e79:	mov	byte ptr [rbp], 0
0x432e7d:	mov	r11, qword ptr [rip + 0xb32cc]
0x432e84:	mov	r14, qword ptr [rip + 0xb32cd]
0x432e8b:	cmp	r11, r14
0x432e8e:	je	0x4343e7
0x432e94:	mov	r8, qword ptr [rip + 0xb32d5]
0x432e9b:	mov	rcx, qword ptr [rip + 0xb32be]
0x432ea2:	mov	qword ptr [rip + 0xb1a8f], r11
0x432ea9:	mov	rdi, qword ptr [rsp + 0x88]
0x432eb1:	add	r14, r8
0x432eb4:	not	r8
0x432eb7:	mov	rsi, rcx
0x432eba:	sub	rsi, qword ptr [rip + 0xb3287]
0x432ec1:	and	r14, r8
0x432ec4:	mov	r9, r14
0x432ec7:	sub	r9, qword ptr [rip + 0xb327a]
0x432ece:	cmp	r9, rsi
0x432ed1:	mov	esi, dword ptr [rsp + 0x90]
0x432ed8:	cmovbe	rcx, r14
0x432edc:	movq	xmm1, rcx
0x432ee1:	punpcklqdq	xmm1, xmm1
0x432ee5:	movaps	xmmword ptr [rip + 0xb3264], xmm1
0x432eec:	call	0x436e90
0x432ef1:	mov	r12, qword ptr [rip + 0xb3180]
0x432ef8:	test	r12, r12
0x432efb:	jne	0x433e9d
0x432f01:	mov	r8d, 0x42de10
0x432f07:	mov	ecx, 0x42dae0
0x432f0c:	xor	edx, edx
0x432f0e:	xor	esi, esi
0x432f10:	mov	edi, 0x4e4960
0x432f15:	mov	r14, qword ptr [r15]
0x432f18:	call	0x42d700
0x432f1d:	mov	r8, qword ptr [rip + 0xb1a5c]
0x432f24:	sub	r8, qword ptr [rip + 0xb1a4d]
0x432f2b:	cmp	r8, 0xb
0x432f2f:	jbe	0x434405
0x432f35:	mov	r13, qword ptr [rip + 0xb1a3c]
0x432f3c:	mov	rdi, r14
0x432f3f:	movabs	rbp, 0x5f5443454c4c4f43
0x432f49:	mov	qword ptr [r13], rbp
0x432f4d:	mov	dword ptr [r13 + 8], 0x3d434347
0x432f55:	mov	r12, qword ptr [rip + 0xb1a1c]
0x432f5c:	lea	r13, [r12 + 0xc]
0x432f61:	mov	qword ptr [rip + 0xb1a10], r13
0x432f68:	call	0x4039e0
0x432f6d:	mov	r9, qword ptr [rip + 0xb1a0c]
0x432f74:	lea	rbx, [rax + 1]
0x432f78:	sub	r9, r13
0x432f7b:	cmp	rbx, r9
0x432f7e:	ja	0x4343f3
0x432f84:	mov	rdi, qword ptr [rip + 0xb19ed]
0x432f8b:	mov	rdx, rbx
0x432f8e:	mov	rsi, r14
0x432f91:	call	0x403c60
0x432f96:	mov	rdi, qword ptr [rip + 0xb19d3]
0x432f9d:	add	rbx, qword ptr [rip + 0xb19d4]
0x432fa4:	cmp	rbx, rdi
0x432fa7:	je	0x434d8b
0x432fad:	mov	r10, qword ptr [rip + 0xb19dc]
0x432fb4:	mov	rdx, qword ptr [rip + 0xb19c5]
0x432fbb:	add	rbx, r10
0x432fbe:	not	r10
0x432fc1:	mov	rcx, rdx
0x432fc4:	sub	rcx, qword ptr [rip + 0xb199d]
0x432fcb:	and	r10, rbx
0x432fce:	mov	rsi, r10
0x432fd1:	sub	rsi, qword ptr [rip + 0xb1990]
0x432fd8:	cmp	rsi, rcx
0x432fdb:	cmovbe	rdx, r10
0x432fdf:	movq	xmm3, rdx
0x432fe4:	punpcklqdq	xmm3, xmm3
0x432fe8:	movaps	xmmword ptr [rip + 0xb1981], xmm3
0x432fef:	call	0x4384e0
0x432ff4:	cmp	dword ptr [rip + 0xb1a15], 0
0x432ffb:	je	0x4336ca
0x433001:	mov	r10, qword ptr [rip + 0xb3198]
0x433008:	test	r10, r10
0x43300b:	je	0x433102
0x433011:	cmp	byte ptr [r10], 0
0x433015:	je	0x433102
0x43301b:	mov	rdx, qword ptr [rip + 0xb195e]
0x433022:	sub	rdx, qword ptr [rip + 0xb194f]
0x433029:	cmp	rdx, 0x14
0x43302d:	jbe	0x4343ab
0x433033:	mov	rdi, qword ptr [rip + 0xb193e]
0x43303a:	mov	esi, 0x45b11c
0x43303f:	mov	ecx, 0x15
0x433044:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x433046:	mov	rdi, qword ptr [rip + 0xb3153]
0x43304d:	mov	rax, qword ptr [rip + 0xb1924]
0x433054:	lea	r14, [rax + 0x15]
0x433058:	mov	qword ptr [rip + 0xb1919], r14
0x43305f:	call	0x4039e0
0x433064:	mov	r11, qword ptr [rip + 0xb1915]
0x43306b:	lea	rbp, [rax + 1]
0x43306f:	sub	r11, r14
0x433072:	cmp	rbp, r11
0x433075:	ja	0x434309
0x43307b:	mov	rdi, qword ptr [rip + 0xb18f6]
0x433082:	mov	rsi, qword ptr [rip + 0xb3117]
0x433089:	mov	rdx, rbp
0x43308c:	call	0x403c60
0x433091:	mov	rdi, qword ptr [rip + 0xb18d8]
0x433098:	add	rbp, qword ptr [rip + 0xb18d9]
0x43309f:	cmp	rbp, rdi
0x4330a2:	je	0x434570
0x4330a8:	mov	r8, qword ptr [rip + 0xb18e1]
0x4330af:	mov	r12, qword ptr [rip + 0xb18ca]
0x4330b6:	add	rbp, r8
0x4330b9:	not	r8
0x4330bc:	mov	rbx, r12
0x4330bf:	sub	rbx, qword ptr [rip + 0xb18a2]
0x4330c6:	and	r8, rbp
0x4330c9:	mov	r13, r8
0x4330cc:	sub	r13, qword ptr [rip + 0xb1895]
0x4330d3:	cmp	r13, rbx
0x4330d6:	cmovbe	r12, r8
0x4330da:	movq	xmm6, r12
0x4330df:	punpcklqdq	xmm6, xmm6
0x4330e3:	movaps	xmmword ptr [rip + 0xb1886], xmm6
0x4330ea:	call	0x4384e0
0x4330ef:	cmp	byte ptr [rip + 0xb30a2], 0
0x4330f6:	je	0x433102
0x4330f8:	mov	edi, 0x45b132
0x4330fd:	call	0x4384e0
0x433102:	mov	rdi, qword ptr [rip + 0xb3097]
0x433109:	xor	r12d, r12d
0x43310c:	call	0x403830
0x433111:	mov	qword ptr [rip + 0xb3084], 0
0x43311c:	jmp	0x43313b
0x43311e:	imul	rbp, r12, 0x18
0x433122:	mov	r10, qword ptr [rip + 0xb18ff]
0x433129:	add	r10, rbp
0x43312c:	cmp	byte ptr [r10 + 0x15], 0
0x433131:	je	0x433864
0x433137:	add	r12, 1
0x43313b:	cmp	dword ptr [rip + 0xb18ee], r12d
0x433142:	jg	0x43311e
0x433144:	mov	rbx, qword ptr [rip + 0xb309d]
0x43314b:	test	rbx, rbx
0x43314e:	jne	0x434234
0x433154:	mov	r14d, dword ptr [rip + 0xb2e4d]
0x43315b:	test	r14d, r14d
0x43315e:	jne	0x433df1
0x433164:	mov	rdi, qword ptr [rip + 0xb2e1d]
0x43316b:	test	rdi, rdi
0x43316e:	jne	0x4347b0
0x433174:	mov	rbx, qword ptr [rip + 0xb2e25]
0x43317b:	test	rbx, rbx
0x43317e:	jne	0x433d78
0x433184:	cmp	dword ptr [rip + 0xb2e09], 0
0x43318b:	jne	0x434e9a
0x433191:	cmp	dword ptr [rip + 0xb2df8], 0
0x433198:	jne	0x434d18
0x43319e:	cmp	dword ptr [rip + 0xb2df7], 0
0x4331a5:	jne	0x434789
0x4331ab:	cmp	dword ptr [rip + 0xb2dfa], 0
0x4331b2:	jne	0x4345a3
0x4331b8:	cmp	dword ptr [rip + 0xb2dd9], 0
0x4331bf:	jne	0x43401a
0x4331c5:	mov	r10d, dword ptr [rip + 0xb2de4]
0x4331cc:	mov	dword ptr [rsp], r10d
0x4331d0:	test	r10d, r10d
0x4331d3:	jne	0x43457c
0x4331d9:	cmp	dword ptr [rip + 0xb2e94], 0
0x4331e0:	jne	0x4347ca
0x4331e6:	cmp	dword ptr [rip + 0xb2fbb], 0
0x4331ed:	jne	0x43389c
0x4331f3:	cmp	dword ptr [rip + 0xb2de6], 0
0x4331fa:	jne	0x433dcb
0x433200:	movsxd	r14, dword ptr [rip + 0xb1811]
0x433207:	cmp	r14d, dword ptr [rip + 0xb2fae]
0x43320e:	je	0x433dbd
0x433214:	cmp	qword ptr [rip + 0xafebc], 0
0x43321c:	jne	0x434005
0x433222:	mov	esi, 8
0x433227:	mov	rdi, r14
0x43322a:	call	0x42d6b0
0x43322f:	mov	esi, 1
0x433234:	mov	rdi, r14
0x433237:	mov	qword ptr [rip + 0xb2e22], rax
0x43323e:	call	0x42d6b0
0x433243:	cmp	dword ptr [rip + 0xb2f6e], 0
0x43324a:	mov	edx, 1
0x43324f:	mov	qword ptr [rsp + 0x80], rax
0x433257:	je	0x4336ba
0x43325d:	mov	byte ptr [rip + 0xb17b1], dl
0x433263:	xor	r13d, r13d
0x433266:	xor	ebx, ebx
0x433268:	cmp	dword ptr [rip + 0xb17aa], ebx
0x43326e:	jle	0x433306
0x433274:	mov	r14, qword ptr [rip + 0xb2ded]
0x43327b:	mov	rbp, rbx
0x43327e:	shl	rbp, 5
0x433282:	add	r14, rbp
0x433285:	mov	r12, qword ptr [r14]
0x433288:	mov	rdi, r12
0x43328b:	call	0x4039e0
0x433290:	mov	rdx, qword ptr [r14 + 8]
0x433294:	mov	rdi, r12
0x433297:	mov	rsi, rax
0x43329a:	call	0x43bc60
0x43329f:	test	rax, rax
0x4332a2:	jne	0x4332d7
0x4332a4:	test	r13d, r13d
0x4332a7:	jne	0x433800
0x4332ad:	mov	rax, qword ptr [rsp + 0x80]
0x4332b5:	mov	byte ptr [rax + rbx], 1
0x4332b9:	mov	r11, qword ptr [rip + 0xb2da8]
0x4332c0:	mov	qword ptr [r11 + rbp + 0x10], 0
0x4332c9:	mov	word ptr [r11 + rbp + 0x18], 0
0x4332d1:	add	rbx, 1
0x4332d5:	jmp	0x433268
0x4332d7:	cmp	dword ptr [rax + 0x18], 0
0x4332db:	jne	0x4332e4
0x4332dd:	mov	byte ptr [rip + 0xb1730], 0
0x4332e4:	test	r13d, r13d
0x4332e7:	jne	0x43383e
0x4332ed:	mov	r11, qword ptr [rip + 0xb2d74]
0x4332f4:	mov	qword ptr [rip + 0xb2d4d], rax
0x4332fb:	add	r13d, 1
0x4332ff:	mov	qword ptr [r11 + rbp + 0x10], rax
0x433304:	jmp	0x4332c9
0x433306:	cmp	byte ptr [rip + 0xb1707], 0
0x43330d:	jne	0x433325
0x43330f:	cmp	dword ptr [rip + 0xb16fa], 0
0x433316:	je	0x433325
0x433318:	cmp	dword ptr [rip + 0xb2e99], 0
0x43331f:	jne	0x43366d
0x433325:	xor	ebx, ebx
0x433327:	mov	r12d, dword ptr [rip + 0xb16ea]
0x43332e:	cmp	r12d, ebx
0x433331:	jle	0x433f8a
0x433337:	mov	rbp, qword ptr [rip + 0xb2d2a]
0x43333e:	mov	r13, rbx
0x433341:	mov	dword ptr [rip + 0xb2d29], ebx
0x433347:	shl	r13, 5
0x43334b:	add	rbp, r13
0x43334e:	mov	rdi, qword ptr [rbp]
0x433352:	call	0x43bef0
0x433357:	cmp	byte ptr [rbp + 0x18], 0
0x43335b:	jne	0x433655
0x433361:	mov	r11, qword ptr [rip + 0xb2cf0]
0x433368:	mov	rax, qword ptr [rip + 0xb2cf1]
0x43336f:	mov	rsi, qword ptr [rip + 0xb2cda]
0x433376:	mov	qword ptr [rax + rbx*8], r11
0x43337a:	mov	rdx, qword ptr [rbp + 8]
0x43337e:	mov	rdi, qword ptr [rbp]
0x433382:	call	0x43bc60
0x433387:	mov	qword ptr [rip + 0xb2cba], rax
0x43338e:	mov	r14, rax
0x433391:	test	rax, rax
0x433394:	je	0x43365e
0x43339a:	mov	rdi, qword ptr [rax + 8]
0x43339e:	cmp	byte ptr [rdi], 0x23
0x4333a1:	je	0x4343bf
0x4333a7:	cmp	dword ptr [rip + 0xb2c92], 0
0x4333ae:	jne	0x434539
0x4333b4:	call	0x43c240
0x4333b9:	mov	r10, qword ptr [rip + 0xb2ca8]
0x4333c0:	mov	edx, dword ptr [rip + 0xb2c7a]
0x4333c6:	mov	byte ptr [r10 + r13 + 0x18], 1
0x4333cc:	test	eax, eax
0x4333ce:	js	0x433600
0x4333d4:	test	edx, edx
0x4333d6:	je	0x43364a
0x4333dc:	cmp	qword ptr [rip + 0xb2c4c], 0
0x4333e4:	je	0x4344f3
0x4333ea:	cmp	dword ptr [rip + 0xb2bef], 0
0x4333f1:	jne	0x4344fb
0x4333f7:	mov	rdi, qword ptr [rip + 0xb2dca]
0x4333fe:	mov	rcx, qword ptr [rip + 0xb2c43]
0x433405:	mov	r12d, dword ptr [rip + 0xb2dd8]
0x43340c:	mov	esi, dword ptr [rip + 0xb2dca]
0x433412:	mov	qword ptr [rip + 0xb160f], rdi
0x433419:	mov	rdi, qword ptr [rcx + 8]
0x43341d:	mov	dword ptr [rip + 0xb160c], r12d
0x433424:	xor	r12d, r12d
0x433427:	neg	dword ptr [rip + 0xb2c13]
0x43342d:	mov	dword ptr [rip + 0xb2d9d], esi
0x433433:	call	0x43c240
0x433438:	mov	r13d, dword ptr [rip + 0xb2da1]
0x43343f:	mov	ebp, dword ptr [rip + 0xb2d93]
0x433445:	mov	r11, qword ptr [rip + 0xb2d74]
0x43344c:	neg	dword ptr [rip + 0xb2bee]
0x433452:	mov	dword ptr [rip + 0xb15d7], r13d
0x433459:	mov	dword ptr [rip + 0xb2d71], ebp
0x43345f:	mov	qword ptr [rip + 0xb15c2], r11
0x433466:	test	eax, eax
0x433468:	js	0x43450e
0x43346e:	mov	rsi, qword ptr [rip + 0xb2bc3]
0x433475:	test	rsi, rsi
0x433478:	je	0x434525
0x43347e:	mov	rdi, qword ptr [rip + 0xb2bab]
0x433485:	call	0x403be0
0x43348a:	test	eax, eax
0x43348c:	je	0x434525
0x433492:	cmp	dword ptr [rip + 0xb2b47], 0
0x433499:	jne	0x4345ee
0x43349f:	mov	rdi, qword ptr [rip + 0xb2b8a]
0x4334a6:	pxor	xmm7, xmm7
0x4334aa:	lea	rsi, [rsp + 0xa0]
0x4334b2:	movaps	xmmword ptr [rsp + 0x70], xmm7
0x4334b7:	call	0x403c40
0x4334bc:	test	eax, eax
0x4334be:	js	0x434601
0x4334c4:	mov	eax, dword ptr [rsp + 0xb8]
0x4334cb:	and	eax, 0xf000
0x4334d0:	cmp	eax, 0x8000
0x4334d5:	jne	0x434601
0x4334db:	mov	r13, qword ptr [rsp + 0xd0]
0x4334e3:	mov	rdi, qword ptr [rip + 0xb2b4e]
0x4334ea:	lea	rsi, [rsp + 0xa0]
0x4334f2:	mov	qword ptr [rsp + 0x60], r13
0x4334f7:	call	0x403c40
0x4334fc:	test	eax, eax
0x4334fe:	js	0x434634
0x433504:	mov	r14d, dword ptr [rsp + 0xb8]
0x43350c:	and	r14d, 0xf000
0x433513:	cmp	r14d, 0x8000
0x43351a:	jne	0x434634
0x433520:	mov	r8, qword ptr [rsp + 0xd0]
0x433528:	xor	ebp, ebp
0x43352a:	mov	qword ptr [rsp + 0x68], r8
0x43352f:	cmp	r13, r8
0x433532:	jne	0x4346c4
0x433538:	mov	rdi, qword ptr [rbp + 0x4e6030]
0x43353f:	lea	r9, [rbp + 0x4e6030]
0x433546:	xor	esi, esi
0x433548:	xor	eax, eax
0x43354a:	mov	qword ptr [rsp + 8], r9
0x43354f:	call	0x403db0
0x433554:	mov	r10, qword ptr [rsp + 8]
0x433559:	test	eax, eax
0x43355b:	mov	r14d, eax
0x43355e:	js	0x434739
0x433564:	mov	rsi, qword ptr [rsp + rbp + 0x60]
0x433569:	xor	r9d, r9d
0x43356c:	xor	edi, edi
0x43356e:	mov	r8d, eax
0x433571:	mov	ecx, 2
0x433576:	mov	edx, 1
0x43357b:	call	0x403a00
0x433580:	mov	edi, r14d
0x433583:	mov	qword ptr [rsp + rbp + 0x70], rax
0x433588:	mov	qword ptr [rsp + 8], rax
0x43358d:	call	0x403b00
0x433592:	mov	rsi, qword ptr [rsp + 8]
0x433597:	add	rsi, 1
0x43359b:	je	0x434767
0x4335a1:	add	rbp, 8
0x4335a5:	cmp	rbp, 0x10
0x4335a9:	jne	0x433538
0x4335ab:	mov	r14, qword ptr [rsp + 0x70]
0x4335b0:	mov	rsi, qword ptr [rsp + 0x78]
0x4335b5:	mov	rdx, r13
0x4335b8:	mov	rdi, r14
0x4335bb:	call	0x403b70
0x4335c0:	mov	ebp, eax
0x4335c2:	test	eax, eax
0x4335c4:	jne	0x43476c
0x4335ca:	mov	rsi, r13
0x4335cd:	mov	rdi, r14
0x4335d0:	call	0x403d40
0x4335d5:	mov	rdi, qword ptr [rsp + 0x78]
0x4335da:	test	rdi, rdi
0x4335dd:	je	0x4335e9
0x4335df:	mov	rsi, qword ptr [rsp + 0x68]
0x4335e4:	call	0x403d40
0x4335e9:	cmp	ebp, -1
0x4335ec:	je	0x434660
0x4335f2:	mov	ecx, dword ptr [rip + 0xb2a48]
0x4335f8:	test	ebp, ebp
0x4335fa:	je	0x434653
0x433600:	cmp	dword ptr [rip + 0xb2a39], 0
0x433607:	je	0x4343d6
0x43360d:	mov	r12d, 1
0x433613:	mov	rdi, qword ptr [rip + 0xb2a16]
0x43361a:	call	0x403830
0x43361f:	mov	rdi, qword ptr [rip + 0xb2a12]
0x433626:	mov	qword ptr [rip + 0xb29ff], 0
0x433631:	call	0x403830
0x433636:	mov	qword ptr [rip + 0xb29f7], 0
0x433641:	test	r12d, r12d
0x433644:	jne	0x4343d6
0x43364a:	mov	qword ptr [rip + 0xb13cb], 0
0x433655:	add	rbx, 1
0x433659:	jmp	0x433327
0x43365e:	mov	r8, qword ptr [rsp + 0x80]
0x433666:	mov	byte ptr [r8 + rbx], 1
0x43366b:	jmp	0x43364a
0x43366d:	sub	r13d, 1
0x433671:	jle	0x433325
0x433677:	mov	esi, 0x464c78
0x43367c:	xor	edi, edi
0x43367e:	xor	eax, eax
0x433680:	call	0x43f5d0
0x433685:	mov	r12, qword ptr [rsp + 0xa8]
0x43368d:	cmp	r12, -1
0x433691:	jne	0x434da9
0x433697:	mov	qword ptr [rsp + 0xa0], 0x4000000
0x4336a3:	lea	rsi, [rsp + 0xa0]
0x4336ab:	mov	edi, 3
0x4336b0:	call	0x403d00
0x4336b5:	jmp	0x432ae7
0x4336ba:	cmp	qword ptr [rip + 0xb274e], 0
0x4336c2:	setne	dl
0x4336c5:	jmp	0x43325d
0x4336ca:	mov	edi, 0x4e24d0
0x4336cf:	xor	ecx, ecx
0x4336d1:	mov	edx, 1
0x4336d6:	mov	esi, 0x45b110
0x4336db:	call	0x439620
0x4336e0:	mov	rdi, rax
0x4336e3:	test	rax, rax
0x4336e6:	je	0x433001
0x4336ec:	mov	esi, 0x42ff50
0x4336f1:	call	0x43bbb0
0x4336f6:	mov	edx, 1
0x4336fb:	mov	edi, 0x4e2490
0x433700:	mov	rsi, rax
0x433703:	call	0x43bc00
0x433708:	mov	edi, 0x4e4960
0x43370d:	xor	edx, edx
0x43370f:	xor	esi, esi
0x433711:	mov	r8d, 0x42de10
0x433717:	mov	ecx, 0x42dae0
0x43371c:	call	0x42d700
0x433721:	mov	rdi, qword ptr [rip + 0xb1258]
0x433728:	sub	rdi, qword ptr [rip + 0xb1249]
0x43372f:	cmp	rdi, 0x13
0x433733:	jbe	0x434220
0x433739:	mov	rax, qword ptr [rip + 0xb1238]
0x433740:	movdqa	xmm4, xmmword ptr [rip + 0x8ac48]
0x433748:	mov	dword ptr [rax + 0x10], 0x3d524550
0x43374f:	movups	xmmword ptr [rax], xmm4
0x433752:	mov	r11, qword ptr [rip + 0xb121f]
0x433759:	mov	rdi, qword ptr [rip + 0xaed30]
0x433760:	lea	r14, [r11 + 0x14]
0x433764:	mov	qword ptr [rip + 0xb120d], r14
0x43376b:	call	0x4039e0
0x433770:	mov	r8, qword ptr [rip + 0xb1209]
0x433777:	lea	rbp, [rax + 1]
0x43377b:	sub	r8, r14
0x43377e:	cmp	rbp, r8
0x433781:	ja	0x43420e
0x433787:	mov	rdi, qword ptr [rip + 0xb11ea]
0x43378e:	mov	rsi, qword ptr [rip + 0xaecfb]
0x433795:	mov	rdx, rbp
0x433798:	call	0x403c60
0x43379d:	mov	rdi, qword ptr [rip + 0xb11cc]
0x4337a4:	add	rbp, qword ptr [rip + 0xb11cd]
0x4337ab:	cmp	rbp, rdi
0x4337ae:	je	0x434202
0x4337b4:	mov	r12, qword ptr [rip + 0xb11d5]
0x4337bb:	mov	r13, qword ptr [rip + 0xb11be]
0x4337c2:	add	rbp, r12
0x4337c5:	not	r12
0x4337c8:	mov	r9, r13
0x4337cb:	sub	r9, qword ptr [rip + 0xb1196]
0x4337d2:	and	r12, rbp
0x4337d5:	mov	rbx, r12
0x4337d8:	sub	rbx, qword ptr [rip + 0xb1189]
0x4337df:	cmp	rbx, r9
0x4337e2:	cmovbe	r13, r12
0x4337e6:	movq	xmm5, r13
0x4337eb:	punpcklqdq	xmm5, xmm5
0x4337ef:	movaps	xmmword ptr [rip + 0xb117a], xmm5
0x4337f6:	call	0x4384e0
0x4337fb:	jmp	0x433001
0x433800:	cmp	qword ptr [rip + 0xb2840], 0
0x433808:	je	0x4332ad
0x43380e:	mov	r11, qword ptr [rip + 0xb2853]
0x433815:	lea	r8, [r11 + rbp]
0x433819:	mov	r9, qword ptr [r8 + 8]
0x43381d:	test	r9, r9
0x433820:	je	0x4332ad
0x433826:	cmp	byte ptr [r9], 0x2a
0x43382a:	jne	0x4341f9
0x433830:	test	rax, rax
0x433833:	je	0x4332ad
0x433839:	jmp	0x4332f4
0x43383e:	cmp	qword ptr [rip + 0xb2803], rax
0x433845:	je	0x4332ed
0x43384b:	mov	r11, qword ptr [rip + 0xb2816]
0x433852:	lea	r8, [r11 + rbp]
0x433856:	mov	r9, qword ptr [r8 + 8]
0x43385a:	test	r9, r9
0x43385d:	jne	0x433826
0x43385f:	jmp	0x4332f4
0x433864:	mov	rsi, qword ptr [r10]
0x433867:	lea	rdi, [rsp + 0x98]
0x43386f:	call	0x43bd70
0x433874:	mov	rcx, qword ptr [rip + 0xb11ad]
0x43387b:	mov	rdx, rax
0x43387e:	mov	rsi, qword ptr [rcx + rbp]
0x433882:	test	rax, rax
0x433885:	jne	0x433d67
0x43388b:	mov	edi, 0x463ac0
0x433890:	xor	eax, eax
0x433892:	call	0x43dd90
0x433897:	jmp	0x433137
0x43389c:	mov	rbx, qword ptr [rip + 0xb1125]
0x4338a3:	mov	edi, 0x45b1b3
0x4338a8:	call	0x403a20
0x4338ad:	mov	r8d, 0x4be0c8
0x4338b3:	mov	ecx, 0x4be0e0
0x4338b8:	mov	edi, 1
0x4338bd:	mov	rsi, rax
0x4338c0:	mov	rdx, rbx
0x4338c3:	xor	eax, eax
0x4338c5:	call	0x403d70
0x4338ca:	mov	edi, 0x45b1bc
0x4338cf:	call	0x403a20
0x4338d4:	mov	esi, 0x464ba0
0x4338d9:	mov	edi, 1
0x4338de:	mov	rdx, rax
0x4338e1:	xor	eax, eax
0x4338e3:	call	0x403d70
0x4338e8:	mov	rbp, qword ptr [rip + 0xaf771]
0x4338ef:	mov	edi, 0x464bd8
0x4338f4:	call	0x403a20
0x4338f9:	mov	rdi, rax
0x4338fc:	mov	rsi, rbp
0x4338ff:	lea	rbp, [rsp + 0x98]
0x433907:	call	0x403aa0
0x43390c:	cmp	dword ptr [rip + 0xb26cd], 0
0x433913:	jne	0x434159
0x433919:	mov	rdi, qword ptr [rsp + 0x80]
0x433921:	call	0x403830
0x433926:	mov	rdi, qword ptr [rsp + 0x88]
0x43392e:	call	0x403830
0x433933:	mov	rdi, rbp
0x433936:	call	0x43c2c0
0x43393b:	add	rsp, 0x138
0x433942:	mov	eax, r14d
0x433945:	pop	rbx
0x433946:	pop	rbp
0x433947:	pop	r12
0x433949:	pop	r13
0x43394b:	pop	r14
0x43394d:	pop	r15
0x43394f:	ret	
0x433950:	sub	dword ptr [rsp + 0x28], 1
0x433955:	je	0x43419b
0x43395b:	lea	rbp, [r11 + 1]
0x43395f:	lea	rsi, [rsp + 0xa0]
0x433967:	mov	qword ptr [rsp], rdx
0x43396b:	mov	rdi, rbp
0x43396e:	call	0x403c40
0x433973:	test	eax, eax
0x433975:	js	0x4326b2
0x43397b:	mov	edi, dword ptr [rsp + 0xb8]
0x433982:	mov	r8, qword ptr [rsp]
0x433986:	and	edi, 0xf000
0x43398c:	cmp	edi, 0x4000
0x433992:	je	0x43417b
0x433998:	mov	esi, 0x463577
0x43399d:	mov	rdi, rbp
0x4339a0:	mov	qword ptr [rsp], r8
0x4339a4:	call	0x403dd0
0x4339a9:	test	rax, rax
0x4339ac:	je	0x4326b2
0x4339b2:	xor	esi, esi
0x4339b4:	mov	edx, 2
0x4339b9:	mov	rdi, rax
0x4339bc:	mov	rbp, qword ptr [rsp]
0x4339c0:	mov	qword ptr [rsp], rax
0x4339c4:	call	0x403cf0
0x4339c9:	add	eax, 1
0x4339cc:	je	0x433cfe
0x4339d2:	mov	rdi, qword ptr [rsp]
0x4339d6:	call	0x403c20
0x4339db:	mov	qword ptr [rsp + 0x10], rax
0x4339e0:	add	rax, 1
0x4339e4:	je	0x433cfe
0x4339ea:	mov	rdi, qword ptr [rsp]
0x4339ee:	xor	edx, edx
0x4339f0:	xor	esi, esi
0x4339f2:	call	0x403cf0
0x4339f7:	add	eax, 1
0x4339fa:	je	0x433cfe
0x433a00:	mov	r9, qword ptr [rsp + 0x10]
0x433a05:	lea	rdi, [r9 + 1]
0x433a09:	call	0x42db10
0x433a0e:	mov	rcx, qword ptr [rsp]
0x433a12:	mov	rdx, qword ptr [rsp + 0x10]
0x433a17:	mov	esi, 1
0x433a1c:	mov	rdi, rax
0x433a1f:	mov	qword ptr [rsp + 8], rax
0x433a24:	call	0x403940
0x433a29:	mov	rsi, rax
0x433a2c:	cmp	qword ptr [rsp + 0x10], rax
0x433a31:	jne	0x434e12
0x433a37:	mov	rdx, qword ptr [rsp + 8]
0x433a3c:	mov	byte ptr [rdx + rsi], 0
0x433a40:	mov	rdi, rdx
0x433a43:	movzx	r10d, byte ptr [rdi]
0x433a47:	test	r10b, r10b
0x433a4a:	je	0x434f6f
0x433a50:	test	byte ptr [r10 + r10 + 0x4bc840], 0x40
0x433a59:	jne	0x434dd8
0x433a5f:	mov	rdi, qword ptr [rsp + 8]
0x433a64:	mov	qword ptr [rsp + 0x70], rdi
0x433a69:	call	0x4039e0
0x433a6e:	lea	rdi, [rax + 1]
0x433a72:	call	0x42db10
0x433a77:	xor	ecx, ecx
0x433a79:	xor	r11d, r11d
0x433a7c:	xor	r9d, r9d
0x433a7f:	mov	dword ptr [rsp + 0x18], 0
0x433a87:	xor	r8d, r8d
0x433a8a:	mov	qword ptr [rsp + 0x10], rax
0x433a8f:	xor	eax, eax
0x433a91:	mov	dword ptr [rsp + 0x30], r13d
0x433a96:	mov	r13d, r9d
0x433a99:	mov	dword ptr [rsp + 0x48], r12d
0x433a9e:	mov	r12d, r8d
0x433aa1:	mov	qword ptr [rsp + 0x38], rbp
0x433aa6:	mov	rbp, r11
0x433aa9:	mov	qword ptr [rsp + 0x40], rbx
0x433aae:	mov	ebx, eax
0x433ab0:	mov	dword ptr [rsp + 0x4c], r14d
0x433ab5:	mov	r14, rcx
0x433ab8:	lea	rdi, [rsp + 0x70]
0x433abd:	call	0x435450
0x433ac2:	test	ebx, ebx
0x433ac4:	je	0x433d20
0x433aca:	lea	esi, [rbx - 1]
0x433acd:	cmp	esi, r14d
0x433ad0:	jle	0x433d20
0x433ad6:	mov	rcx, qword ptr [rsp + 0x70]
0x433adb:	mov	r9d, dword ptr [rsp + 0x18]
0x433ae0:	xor	r11d, r11d
0x433ae3:	mov	rdx, qword ptr [rsp + 0x10]
0x433ae8:	jmp	0x433b34
0x433aea:	test	r13d, r13d
0x433aed:	jne	0x4341ea
0x433af3:	cmp	r10b, 0x5c
0x433af7:	je	0x4341df
0x433afd:	test	r9d, r9d
0x433b00:	jne	0x4341cd
0x433b06:	test	r12d, r12d
0x433b09:	jne	0x4341bb
0x433b0f:	cmp	r10b, 0x27
0x433b13:	je	0x4341b0
0x433b19:	cmp	r10b, 0x22
0x433b1d:	je	0x4341a5
0x433b23:	mov	byte ptr [rdx], r10b
0x433b26:	add	rdx, 1
0x433b2a:	add	rcx, 1
0x433b2e:	mov	r11d, 1
0x433b34:	movzx	r10d, byte ptr [rcx]
0x433b38:	test	r10b, r10b
0x433b3b:	je	0x433d0c
0x433b41:	movzx	edi, r10b
0x433b45:	test	byte ptr [rdi + rdi + 0x4bc840], 0x40
0x433b4d:	je	0x433aea
0x433b4f:	mov	eax, r9d
0x433b52:	or	eax, r12d
0x433b55:	or	eax, r13d
0x433b58:	mov	dword ptr [rsp + 0x18], eax
0x433b5c:	jne	0x433aea
0x433b5e:	test	r11b, r11b
0x433b61:	je	0x433b68
0x433b63:	mov	qword ptr [rsp + 0x70], rcx
0x433b68:	xor	r13d, r13d
0x433b6b:	xor	r12d, r12d
0x433b6e:	mov	byte ptr [rdx], 0
0x433b71:	lea	r8, [r14*8]
0x433b79:	mov	rdi, qword ptr [rsp + 0x10]
0x433b7e:	add	r14, 1
0x433b82:	lea	rsi, [rbp + r8]
0x433b87:	mov	qword ptr [rsp + 0x58], r8
0x433b8c:	mov	qword ptr [rsp + 0x50], rsi
0x433b91:	call	0x42db40
0x433b96:	mov	r10, qword ptr [rsp + 0x50]
0x433b9b:	mov	rdx, qword ptr [rsp + 0x58]
0x433ba0:	lea	rdi, [rsp + 0x70]
0x433ba5:	mov	qword ptr [r10], rax
0x433ba8:	mov	qword ptr [rbp + rdx + 8], 0
0x433bb1:	call	0x435450
0x433bb6:	mov	rcx, qword ptr [rsp + 0x70]
0x433bbb:	cmp	byte ptr [rcx], 0
0x433bbe:	jne	0x433ab8
0x433bc4:	mov	rdi, qword ptr [rsp + 0x10]
0x433bc9:	mov	r13d, dword ptr [rsp + 0x30]
0x433bce:	mov	qword ptr [rsp + 0x18], rbp
0x433bd3:	mov	r12d, dword ptr [rsp + 0x48]
0x433bd8:	mov	rbp, qword ptr [rsp + 0x38]
0x433bdd:	mov	rbx, qword ptr [rsp + 0x40]
0x433be2:	mov	r14d, dword ptr [rsp + 0x4c]
0x433be7:	call	0x403830
0x433bec:	mov	eax, 1
0x433bf1:	cmp	qword ptr [rsp + 0x20], r15
0x433bf6:	jne	0x433c5a
0x433bf8:	mov	r9, qword ptr [r15 + rax*8 - 8]
0x433bfd:	movsxd	rdi, eax
0x433c00:	add	rax, 1
0x433c04:	test	r9, r9
0x433c07:	jne	0x433bf8
0x433c09:	shl	rdi, 3
0x433c0d:	call	0x42db10
0x433c12:	mov	qword ptr [rsp + 0x10], rbx
0x433c17:	mov	dword ptr [rsp + 0x30], r14d
0x433c1c:	mov	rbx, rax
0x433c1f:	mov	r14, rbp
0x433c22:	mov	rbp, rax
0x433c25:	jmp	0x433c34
0x433c27:	call	0x42db40
0x433c2c:	add	rbx, 8
0x433c30:	mov	qword ptr [rbx - 8], rax
0x433c34:	mov	rdi, qword ptr [r15]
0x433c37:	add	r15, 8
0x433c3b:	test	rdi, rdi
0x433c3e:	jne	0x433c27
0x433c40:	mov	r8, rbx
0x433c43:	mov	r15, rbp
0x433c46:	mov	rbx, qword ptr [rsp + 0x10]
0x433c4b:	mov	rbp, r14
0x433c4e:	mov	qword ptr [r8], 0
0x433c55:	mov	r14d, dword ptr [rsp + 0x30]
0x433c5a:	xor	r9d, r9d
0x433c5d:	jmp	0x433c63
0x433c5f:	add	r9, 1
0x433c63:	mov	r10, qword ptr [rsp + 0x18]
0x433c68:	lea	rsi, [r9*8]
0x433c70:	cmp	qword ptr [r10 + r9*8], 0
0x433c75:	jne	0x433c5f
0x433c77:	mov	rdi, qword ptr [r15 + rbp]
0x433c7b:	mov	qword ptr [rsp + 0x10], r9
0x433c80:	mov	qword ptr [rsp + 0x30], rsi
0x433c85:	call	0x403830
0x433c8a:	mov	rcx, qword ptr [rsp + 0x10]
0x433c8f:	movsxd	rdx, r14d
0x433c92:	mov	rdi, r15
0x433c95:	lea	rsi, [rcx + rdx + 1]
0x433c9a:	shl	rsi, 3
0x433c9e:	call	0x42db80
0x433ca3:	mov	r15, rax
0x433ca6:	mov	eax, r14d
0x433ca9:	sub	eax, r13d
0x433cac:	mov	r13, qword ptr [rsp + 0x10]
0x433cb1:	lea	rsi, [r15 + rbp + 8]
0x433cb6:	movsxd	rdx, eax
0x433cb9:	add	rbx, r13
0x433cbc:	shl	rdx, 3
0x433cc0:	mov	r13d, r12d
0x433cc3:	lea	rdi, [r15 + rbx*8]
0x433cc7:	call	0x403d90
0x433ccc:	lea	rdi, [r15 + rbp]
0x433cd0:	mov	rbp, qword ptr [rsp + 0x18]
0x433cd5:	mov	rdx, qword ptr [rsp + 0x30]
0x433cda:	mov	rsi, rbp
0x433cdd:	call	0x403c60
0x433ce2:	mov	rdi, rbp
0x433ce5:	mov	rbx, qword ptr [rsp + 0x10]
0x433cea:	call	0x403830
0x433cef:	mov	rdi, qword ptr [rsp + 8]
0x433cf4:	lea	r14d, [r14 + rbx - 1]
0x433cf9:	call	0x403830
0x433cfe:	mov	rdi, qword ptr [rsp]
0x433d02:	call	0x4039c0
0x433d07:	jmp	0x432693
0x433d0c:	test	r11b, r11b
0x433d0f:	je	0x433d16
0x433d11:	mov	qword ptr [rsp + 0x70], rcx
0x433d16:	mov	dword ptr [rsp + 0x18], r9d
0x433d1b:	jmp	0x433b6e
0x433d20:	test	rbp, rbp
0x433d23:	jne	0x433d45
0x433d25:	mov	edi, 0x40
0x433d2a:	mov	ebx, 8
0x433d2f:	call	0x42db10
0x433d34:	mov	rbp, rax
0x433d37:	mov	qword ptr [rbp + r14*8], 0
0x433d40:	jmp	0x433ad6
0x433d45:	add	ebx, ebx
0x433d47:	mov	rdi, rbp
0x433d4a:	movsxd	rsi, ebx
0x433d4d:	shl	rsi, 3
0x433d51:	call	0x42db80
0x433d56:	mov	rbp, rax
0x433d59:	jmp	0x433d37
0x433d5b:	mov	byte ptr [rip + 0xb231e], 1
0x433d62:	jmp	0x4326cd
0x433d67:	mov	edi, 0x463a80
0x433d6c:	xor	eax, eax
0x433d6e:	call	0x43dd90
0x433d73:	jmp	0x433137
0x433d78:	mov	r15, qword ptr [rip + 0xb2431]
0x433d7f:	test	r15, r15
0x433d82:	jne	0x434de1
0x433d88:	mov	edi, 0x4e24d0
0x433d8d:	xor	ecx, ecx
0x433d8f:	mov	edx, 1
0x433d94:	mov	rsi, rbx
0x433d97:	call	0x439620
0x433d9c:	mov	rdi, rax
0x433d9f:	test	rax, rax
0x433da2:	jne	0x433dab
0x433da4:	mov	rdi, qword ptr [rip + 0xb21f5]
0x433dab:	call	0x403910
0x433db0:	lea	rbp, [rsp + 0x98]
0x433db8:	jmp	0x433919
0x433dbd:	mov	esi, 0x45b1c0
0x433dc2:	xor	edi, edi
0x433dc4:	xor	eax, eax
0x433dc6:	call	0x43f5d0
0x433dcb:	mov	rdi, qword ptr [rip + 0xaf2ce]
0x433dd2:	lea	rbp, [rsp + 0x98]
0x433dda:	call	0x43c4b0
0x433ddf:	cmp	dword ptr [rip + 0xb0c32], 0
0x433de6:	je	0x433919
0x433dec:	jmp	0x433200
0x433df1:	mov	rbp, qword ptr [rip + 0xb0c10]
0x433df8:	mov	r14d, 0x4c4893
0x433dfe:	test	rbp, rbp
0x433e01:	je	0x4340d2
0x433e07:	mov	edi, 0x45b15b
0x433e0c:	call	0x403a20
0x433e11:	mov	rcx, r14
0x433e14:	mov	rdx, rbp
0x433e17:	mov	edi, 1
0x433e1c:	mov	rsi, rax
0x433e1f:	xor	eax, eax
0x433e21:	call	0x403d70
0x433e26:	xor	ecx, ecx
0x433e28:	xor	edx, edx
0x433e2a:	mov	esi, 0x4c4893
0x433e2f:	mov	edi, 0x4e24d0
0x433e34:	call	0x43bdb0
0x433e39:	mov	edi, 0x45b16a
0x433e3e:	mov	r12, rax
0x433e41:	call	0x403a20
0x433e46:	mov	rdx, r12
0x433e49:	mov	edi, 1
0x433e4e:	mov	rsi, rax
0x433e51:	xor	eax, eax
0x433e53:	call	0x403d70
0x433e58:	xor	edx, edx
0x433e5a:	mov	esi, 0x4c4893
0x433e5f:	mov	ecx, 1
0x433e64:	mov	edi, 0x4e24b0
0x433e69:	call	0x43bdb0
0x433e6e:	mov	edi, 0x45b178
0x433e73:	mov	r13, rax
0x433e76:	call	0x403a20
0x433e7b:	mov	rdx, r13
0x433e7e:	mov	rsi, rax
0x433e81:	mov	edi, 1
0x433e86:	xor	eax, eax
0x433e88:	xor	r14d, r14d
0x433e8b:	call	0x403d70
0x433e90:	lea	rbp, [rsp + 0x98]
0x433e98:	jmp	0x433919
0x433e9d:	cmp	dword ptr [r12 + 4], 0
0x433ea3:	je	0x432f01
0x433ea9:	xor	edx, edx
0x433eab:	mov	r8d, 0x42de10
0x433eb1:	mov	ecx, 0x42dae0
0x433eb6:	xor	esi, esi
0x433eb8:	mov	edi, 0x4e4960
0x433ebd:	call	0x42d700
0x433ec2:	mov	rdx, qword ptr [rip + 0xb0ab7]
0x433ec9:	sub	rdx, qword ptr [rip + 0xb0aa8]
0x433ed0:	cmp	rdx, 0x12
0x433ed4:	jbe	0x434e86
0x433eda:	mov	rdi, qword ptr [rip + 0xb0a97]
0x433ee1:	mov	esi, 0x45b0fc
0x433ee6:	mov	ecx, 0x13
0x433eeb:	xor	ebp, ebp
0x433eed:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x433eef:	add	qword ptr [rip + 0xb0a81], 0x13
0x433ef7:	mov	r10, qword ptr [rip + 0xb0a82]
0x433efe:	mov	rax, qword ptr [rip + 0xb0a73]
0x433f05:	cmp	ebp, dword ptr [r12 + 4]
0x433f0a:	jb	0x43403f
0x433f10:	cmp	rax, r10
0x433f13:	je	0x434e6b
0x433f19:	lea	r12, [rax + 1]
0x433f1d:	mov	qword ptr [rip + 0xb0a54], r12
0x433f24:	mov	byte ptr [rax], 0
0x433f27:	mov	rdi, qword ptr [rip + 0xb0a42]
0x433f2e:	mov	rbx, qword ptr [rip + 0xb0a43]
0x433f35:	cmp	rdi, rbx
0x433f38:	je	0x434e5f
0x433f3e:	mov	rbp, qword ptr [rip + 0xb0a4b]
0x433f45:	mov	r13, qword ptr [rip + 0xb0a34]
0x433f4c:	add	rbx, rbp
0x433f4f:	not	rbp
0x433f52:	mov	r14, r13
0x433f55:	sub	r14, qword ptr [rip + 0xb0a0c]
0x433f5c:	and	rbx, rbp
0x433f5f:	mov	r11, rbx
0x433f62:	sub	r11, qword ptr [rip + 0xb09ff]
0x433f69:	cmp	r11, r14
0x433f6c:	cmovbe	r13, rbx
0x433f70:	movq	xmm2, r13
0x433f75:	punpcklqdq	xmm2, xmm2
0x433f79:	movaps	xmmword ptr [rip + 0xb09f0], xmm2
0x433f80:	call	0x4384e0
0x433f85:	jmp	0x432f01
0x433f8a:	test	r12d, r12d
0x433f8d:	jle	0x433fc4
0x433f8f:	mov	rsi, qword ptr [rip + 0xb20d2]
0x433f96:	mov	edi, dword ptr [rsp]
0x433f99:	jmp	0x433fa7
0x433f9b:	add	edi, 1
0x433f9e:	add	rsi, 0x20
0x433fa2:	cmp	r12d, edi
0x433fa5:	je	0x433fc4
0x433fa7:	cmp	qword ptr [rsi + 0x10], 0
0x433fac:	jne	0x433fbc
0x433fae:	mov	rcx, qword ptr [rsi + 8]
0x433fb2:	test	rcx, rcx
0x433fb5:	je	0x433f9b
0x433fb7:	cmp	byte ptr [rcx], 0x2a
0x433fba:	je	0x433f9b
0x433fbc:	mov	rdi, qword ptr [rsi]
0x433fbf:	call	0x43bef0
0x433fc4:	cmp	qword ptr [rip + 0xaf10c], 0
0x433fcc:	jne	0x433fd5
0x433fce:	mov	dword ptr [rip + 0xb209b], r12d
0x433fd5:	mov	rsi, qword ptr [r15]
0x433fd8:	lea	rdi, [rsp + 0x80]
0x433fe0:	call	0x43ca70
0x433fe5:	cmp	qword ptr [rip + 0xaf0eb], 0
0x433fed:	jne	0x434e55
0x433ff3:	call	0x40ac12
0x433ff8:	cmp	dword ptr [rip + 0xb2075], 0
0x433fff:	jne	0x434e3c
0x434005:	call	0x42bf5e
0x43400a:	mov	r14d, eax
0x43400d:	lea	rbp, [rsp + 0x98]
0x434015:	jmp	0x433919
0x43401a:	mov	rdi, qword ptr [rip + 0xb09b7]
0x434021:	test	rdi, rdi
0x434024:	je	0x434d28
0x43402a:	call	0x403910
0x43402f:	xor	r14d, r14d
0x434032:	lea	rbp, [rsp + 0x98]
0x43403a:	jmp	0x433919
0x43403f:	mov	r8d, ebp
0x434042:	mov	r13, qword ptr [r12 + r8*8 + 8]
0x434047:	cmp	rax, r10
0x43404a:	je	0x43413e
0x434050:	lea	r9, [rax + 1]
0x434054:	mov	rdi, r13
0x434057:	mov	qword ptr [rip + 0xb091a], r9
0x43405e:	mov	byte ptr [rax], 0x27
0x434061:	call	0x4039e0
0x434066:	mov	rdx, qword ptr [rip + 0xb0913]
0x43406d:	sub	rdx, qword ptr [rip + 0xb0904]
0x434074:	mov	rbx, rax
0x434077:	cmp	rax, rdx
0x43407a:	ja	0x43412c
0x434080:	mov	rdi, qword ptr [rip + 0xb08f1]
0x434087:	mov	rdx, rbx
0x43408a:	mov	rsi, r13
0x43408d:	call	0x403c60
0x434092:	add	rbx, qword ptr [rip + 0xb08df]
0x434099:	cmp	rbx, qword ptr [rip + 0xb08e0]
0x4340a0:	mov	qword ptr [rip + 0xb08d1], rbx
0x4340a7:	je	0x43410a
0x4340a9:	mov	rsi, qword ptr [rip + 0xb08c8]
0x4340b0:	lea	rcx, [rsi + 1]
0x4340b4:	mov	qword ptr [rip + 0xb08bd], rcx
0x4340bb:	mov	byte ptr [rsi], 0x27
0x4340be:	mov	edi, dword ptr [r12 + 4]
0x4340c3:	sub	edi, 1
0x4340c6:	cmp	edi, ebp
0x4340c8:	ja	0x4340e3
0x4340ca:	add	ebp, 1
0x4340cd:	jmp	0x433ef7
0x4340d2:	mov	r14, qword ptr [rip + 0xb0927]
0x4340d9:	mov	ebp, 0x45b059
0x4340de:	jmp	0x433e07
0x4340e3:	mov	r10, qword ptr [rip + 0xb088e]
0x4340ea:	cmp	qword ptr [rip + 0xb088f], r10
0x4340f1:	je	0x43411b
0x4340f3:	mov	rax, qword ptr [rip + 0xb087e]
0x4340fa:	lea	r11, [rax + 1]
0x4340fe:	mov	qword ptr [rip + 0xb0873], r11
0x434105:	mov	byte ptr [rax], 0x20
0x434108:	jmp	0x4340ca
0x43410a:	mov	esi, 1
0x43410f:	mov	edi, 0x4e4960
0x434114:	call	0x4316f0
0x434119:	jmp	0x4340a9
0x43411b:	mov	esi, 1
0x434120:	mov	edi, 0x4e4960
0x434125:	call	0x4316f0
0x43412a:	jmp	0x4340f3
0x43412c:	mov	rsi, rax
0x43412f:	mov	edi, 0x4e4960
0x434134:	call	0x4316f0
0x434139:	jmp	0x434080
0x43413e:	mov	esi, 1
0x434143:	mov	edi, 0x4e4960
0x434148:	call	0x4316f0
0x43414d:	mov	rax, qword ptr [rip + 0xb0824]
0x434154:	jmp	0x434050
0x434159:	mov	rsi, qword ptr [rip + 0xaef00]
0x434160:	mov	edi, 0xa
0x434165:	call	0x403b30
0x43416a:	mov	rdi, qword ptr [rip + 0xaeeef]
0x434171:	call	0x403cb0
0x434176:	jmp	0x4331f3
0x43417b:	mov	rcx, qword ptr [r15]
0x43417e:	mov	edx, 0x463a50
0x434183:	mov	rdi, qword ptr [rip + 0xaef16]
0x43418a:	mov	esi, 1
0x43418f:	xor	eax, eax
0x434191:	call	0x403e90
0x434196:	call	0x42c21c
0x43419b:	mov	rcx, qword ptr [r15]
0x43419e:	mov	edx, 0x463a20
0x4341a3:	jmp	0x434183
0x4341a5:	mov	r12d, 1
0x4341ab:	jmp	0x433b2a
0x4341b0:	mov	r9d, 1
0x4341b6:	jmp	0x433b2a
0x4341bb:	cmp	r10b, 0x22
0x4341bf:	jne	0x433b23
0x4341c5:	xor	r12d, r12d
0x4341c8:	jmp	0x433b2a
0x4341cd:	cmp	r10b, 0x27
0x4341d1:	jne	0x433b23
0x4341d7:	xor	r9d, r9d
0x4341da:	jmp	0x433b2a
0x4341df:	mov	r13d, 1
0x4341e5:	jmp	0x433b2a
0x4341ea:	mov	byte ptr [rdx], r10b
0x4341ed:	xor	r13d, r13d
0x4341f0:	add	rdx, 1
0x4341f4:	jmp	0x433b2a
0x4341f9:	mov	qword ptr [r8 + 0x10], rax
0x4341fd:	jmp	0x4332c9
0x434202:	or	byte ptr [rip + 0xb07a7], 2
0x434209:	jmp	0x4337b4
0x43420e:	mov	rsi, rbp
0x434211:	mov	edi, 0x4e4960
0x434216:	call	0x4316f0
0x43421b:	jmp	0x433787
0x434220:	mov	esi, 0x14
0x434225:	mov	edi, 0x4e4960
0x43422a:	call	0x4316f0
0x43422f:	jmp	0x433739
0x434234:	mov	qword ptr [rsp + 0x70], 0
0x43423d:	movzx	edi, byte ptr [rbx]
0x434240:	test	dil, dil
0x434243:	je	0x4342d8
0x434249:	cmp	dil, 0x2d
0x43424d:	je	0x43431b
0x434253:	mov	rdi, rbx
0x434256:	lea	rbp, [rsp + 0x98]
0x43425e:	call	0x4039e0
0x434263:	cmp	qword ptr [rsp + 0x98], 0
0x43426c:	mov	qword ptr [rsp], rax
0x434270:	je	0x434324
0x434276:	mov	r15, qword ptr [rsp + 0x98]
0x43427e:	xor	r12d, r12d
0x434281:	lea	r13, [rsp + 0x70]
0x434286:	mov	r8, qword ptr [r15]
0x434289:	test	r8, r8
0x43428c:	je	0x434352
0x434292:	cmp	r12d, dword ptr [r8 + 4]
0x434296:	jae	0x434352
0x43429c:	mov	esi, r12d
0x43429f:	mov	r14, qword ptr [r8 + rsi*8 + 8]
0x4342a4:	mov	rdi, r14
0x4342a7:	call	0x4039e0
0x4342ac:	cmp	qword ptr [rsp], rax
0x4342b0:	ja	0x4342c6
0x4342b2:	mov	rsi, rbx
0x4342b5:	mov	rdi, r14
0x4342b8:	call	0x403f20
0x4342bd:	cmp	r14, rax
0x4342c0:	je	0x434375
0x4342c6:	add	r12d, 1
0x4342ca:	jmp	0x434286
0x4342cc:	or	byte ptr [rip + 0xb1ebd], 2
0x4342d3:	jmp	0x432bb1
0x4342d8:	lea	r13, [rsp + 0x70]
0x4342dd:	lea	rbp, [rsp + 0x98]
0x4342e5:	mov	rdi, r13
0x4342e8:	xor	r14d, r14d
0x4342eb:	call	0x415ac4
0x4342f0:	jmp	0x433919
0x4342f5:	mov	esi, 1
0x4342fa:	mov	edi, 0x4e6140
0x4342ff:	call	0x4316f0
0x434304:	jmp	0x432b85
0x434309:	mov	rsi, rbp
0x43430c:	mov	edi, 0x4e4960
0x434311:	call	0x4316f0
0x434316:	jmp	0x43307b
0x43431b:	add	rbx, 1
0x43431f:	jmp	0x434253
0x434324:	mov	rsi, rbx
0x434327:	mov	rdi, rbp
0x43432a:	call	0x43bf80
0x43432f:	cmp	qword ptr [rsp + 0x98], 0
0x434338:	jne	0x434276
0x43433e:	mov	edx, 0x45b14b
0x434343:	mov	esi, 0x46
0x434348:	mov	edi, 0x463af0
0x43434d:	call	0x415bba
0x434352:	xor	ebx, ebx
0x434354:	mov	rax, qword ptr [rsp + 0x70]
0x434359:	test	rax, rax
0x43435c:	je	0x4342e5
0x43435e:	cmp	ebx, dword ptr [rax + 4]
0x434361:	jae	0x4342e5
0x434363:	mov	r9d, ebx
0x434366:	add	ebx, 1
0x434369:	mov	rdi, qword ptr [rax + r9*8 + 8]
0x43436e:	call	0x403910
0x434373:	jmp	0x434354
0x434375:	xor	edx, edx
0x434377:	mov	rsi, r14
0x43437a:	mov	edi, 0x4cd89a
0x43437f:	xor	eax, eax
0x434381:	call	0x42d870
0x434386:	lea	rsi, [rsp + 0xa0]
0x43438e:	mov	rdi, r13
0x434391:	mov	qword ptr [rsp + 0xa0], rax
0x434399:	call	0x439540
0x43439e:	mov	r15, qword ptr [rsp + 0x98]
0x4343a6:	jmp	0x4342c6
0x4343ab:	mov	esi, 0x15
0x4343b0:	mov	edi, 0x4e4960
0x4343b5:	call	0x4316f0
0x4343ba:	jmp	0x433033
0x4343bf:	mov	rsi, qword ptr [rip + 0xb1c92]
0x4343c6:	lea	rdx, [rdi + 1]
0x4343ca:	xor	eax, eax
0x4343cc:	mov	edi, 0x464cc0
0x4343d1:	call	0x43dd90
0x4343d6:	call	0x4134e7
0x4343db:	add	dword ptr [rip + 0xaecf6], 1
0x4343e2:	jmp	0x43364a
0x4343e7:	or	byte ptr [rip + 0xb1da2], 2
0x4343ee:	jmp	0x432e94
0x4343f3:	mov	rsi, rbx
0x4343f6:	mov	edi, 0x4e4960
0x4343fb:	call	0x4316f0
0x434400:	jmp	0x432f84
0x434405:	mov	esi, 0xc
0x43440a:	mov	edi, 0x4e4960
0x43440f:	call	0x4316f0
0x434414:	jmp	0x432f35
0x434419:	mov	esi, 1
0x43441e:	mov	edi, 0x4e6140
0x434423:	call	0x4316f0
0x434428:	jmp	0x432e67
0x43442d:	mov	qword ptr [rip + 0xb050c], r9
0x434434:	movaps	xmmword ptr [rip + 0xb1d14], xmm15
0x43443c:	mov	esi, 3
0x434441:	mov	edi, 0x4e6140
0x434446:	call	0x4316f0
0x43444b:	jmp	0x432e34
0x434450:	or	byte ptr [rip + 0xb1d39], 2
0x434457:	jmp	0x432dc3
0x43445c:	mov	qword ptr [rip + 0xb0555], r12
0x434463:	movaps	xmmword ptr [rip + 0xb1ce5], xmm11
0x43446b:	mov	esi, 1
0x434470:	mov	edi, 0x4e6140
0x434475:	call	0x4316f0
0x43447a:	jmp	0x432d96
0x43447f:	or	byte ptr [rip + 0xb1d0a], 2
0x434486:	jmp	0x432d29
0x43448b:	mov	qword ptr [rip + 0xb04b6], r8
0x434492:	movaps	xmmword ptr [rip + 0xb1cb7], xmm7
0x434499:	mov	esi, 1
0x43449e:	mov	edi, 0x4e6140
0x4344a3:	call	0x4316f0
0x4344a8:	jmp	0x432cfc
0x4344ad:	or	byte ptr [rip + 0xb1cdc], 2
0x4344b4:	jmp	0x432c94
0x4344b9:	mov	esi, 1
0x4344be:	mov	edi, 0x4e6140
0x4344c3:	call	0x4316f0
0x4344c8:	jmp	0x432c67
0x4344cd:	mov	rsi, rax
0x4344d0:	mov	edi, 0x4e6140
0x4344d5:	call	0x4316f0
0x4344da:	jmp	0x432c24
0x4344df:	mov	edx, 0x45b067
0x4344e4:	mov	esi, 0x11f
0x4344e9:	mov	edi, 0x45b07b
0x4344ee:	call	0x415bba
0x4344f3:	xor	r12d, r12d
0x4344f6:	jmp	0x433613
0x4344fb:	mov	esi, 0x464cf0
0x434500:	xor	edi, edi
0x434502:	xor	eax, eax
0x434504:	call	0x43ff00
0x434509:	jmp	0x4333f7
0x43450e:	mov	edi, 0x464d18
0x434513:	xor	eax, eax
0x434515:	mov	r12d, 1
0x43451b:	call	0x43dd90
0x434520:	jmp	0x43346e
0x434525:	mov	edx, 0x45b1cf
0x43452a:	mov	esi, 0x23cf
0x43452f:	mov	edi, 0x45b1e2
0x434534:	call	0x415bba
0x434539:	mov	rdi, qword ptr [rip + 0xb1af0]
0x434540:	call	0x403830
0x434545:	mov	rdi, qword ptr [rip + 0xb1aec]
0x43454c:	mov	qword ptr [rip + 0xb1ad9], 0
0x434557:	call	0x403830
0x43455c:	mov	rdi, qword ptr [r14 + 8]
0x434560:	mov	qword ptr [rip + 0xb1acd], 0
0x43456b:	jmp	0x4333b4
0x434570:	or	byte ptr [rip + 0xb0439], 2
0x434577:	jmp	0x4330a8
0x43457c:	mov	r10, qword ptr [rip + 0xadf1d]
0x434583:	cmp	byte ptr [r10], 0
0x434587:	je	0x4345e0
0x434589:	mov	rdi, qword ptr [rip + 0xb0440]
0x434590:	test	rdi, rdi
0x434593:	jne	0x43402a
0x434599:	mov	edi, 0x4c4893
0x43459e:	jmp	0x43402a
0x4345a3:	mov	rdx, qword ptr [rip + 0xb043e]
0x4345aa:	test	rdx, rdx
0x4345ad:	je	0x43400d
0x4345b3:	mov	rcx, qword ptr [rip + 0xb0426]
0x4345ba:	test	rcx, rcx
0x4345bd:	je	0x43463b
0x4345bf:	mov	esi, 0x45b164
0x4345c4:	mov	edi, 1
0x4345c9:	xor	eax, eax
0x4345cb:	xor	r14d, r14d
0x4345ce:	call	0x403d70
0x4345d3:	lea	rbp, [rsp + 0x98]
0x4345db:	jmp	0x433919
0x4345e0:	mov	esi, 0x463b58
0x4345e5:	xor	edi, edi
0x4345e7:	xor	eax, eax
0x4345e9:	call	0x43f5d0
0x4345ee:	mov	esi, 0x45b1f6
0x4345f3:	xor	edi, edi
0x4345f5:	xor	eax, eax
0x4345f7:	call	0x43ff00
0x4345fc:	jmp	0x43349f
0x434601:	mov	edi, 0x4e6030
0x434606:	mov	rdx, qword ptr [rdi]
0x434609:	mov	rsi, qword ptr [rip + 0xb1a48]
0x434610:	mov	edi, 0x464d48
0x434615:	xor	eax, eax
0x434617:	call	0x43dd90
0x43461c:	mov	rdi, qword ptr [rsp + 0x78]
0x434621:	mov	ebp, 1
0x434626:	test	rdi, rdi
0x434629:	jne	0x4335df
0x43462f:	jmp	0x4335f2
0x434634:	mov	edi, 0x4e6038
0x434639:	jmp	0x434606
0x43463b:	mov	rdi, rdx
0x43463e:	xor	r14d, r14d
0x434641:	lea	rbp, [rsp + 0x98]
0x434649:	call	0x403910
0x43464e:	jmp	0x433919
0x434653:	test	ecx, ecx
0x434655:	je	0x433641
0x43465b:	jmp	0x433613
0x434660:	mov	rdi, qword ptr [rip + 0xb19c9]
0x434667:	mov	esi, 0x463577
0x43466c:	call	0x403dd0
0x434671:	mov	r13, rax
0x434674:	test	rax, rax
0x434677:	je	0x4346dc
0x434679:	mov	rdi, qword ptr [rip + 0xb19b8]
0x434680:	mov	esi, 0x463577
0x434685:	call	0x403dd0
0x43468a:	mov	r14, rax
0x43468d:	test	rax, rax
0x434690:	je	0x4346fb
0x434692:	mov	rdi, r13
0x434695:	call	0x403af0
0x43469a:	mov	rdi, r14
0x43469d:	mov	ebp, eax
0x43469f:	call	0x403af0
0x4346a4:	cmp	ebp, eax
0x4346a6:	jne	0x43471c
0x4346a8:	add	ebp, 1
0x4346ab:	jne	0x434692
0x4346ad:	xor	ebp, ebp
0x4346af:	mov	rdi, r14
0x4346b2:	call	0x4039c0
0x4346b7:	mov	rdi, r13
0x4346ba:	call	0x4039c0
0x4346bf:	jmp	0x4335f2
0x4346c4:	mov	rsi, qword ptr [rip + 0xb198d]
0x4346cb:	mov	edi, 0x464d80
0x4346d0:	xor	eax, eax
0x4346d2:	call	0x43dd90
0x4346d7:	jmp	0x43461c
0x4346dc:	mov	rdx, qword ptr [rip + 0xb194d]
0x4346e3:	mov	rsi, qword ptr [rip + 0xb196e]
0x4346ea:	mov	edi, 0x464db0
0x4346ef:	xor	eax, eax
0x4346f1:	call	0x43dd90
0x4346f6:	jmp	0x433600
0x4346fb:	mov	rdx, qword ptr [rip + 0xb1936]
0x434702:	mov	rsi, qword ptr [rip + 0xb194f]
0x434709:	mov	edi, 0x464db0
0x43470e:	xor	eax, eax
0x434710:	mov	ebp, 1
0x434715:	call	0x43dd90
0x43471a:	jmp	0x4346b7
0x43471c:	mov	rsi, qword ptr [rip + 0xb1935]
0x434723:	mov	edi, 0x464de0
0x434728:	xor	eax, eax
0x43472a:	mov	ebp, 1
0x43472f:	call	0x43dd90
0x434734:	jmp	0x4346af
0x434739:	mov	rdx, qword ptr [r10]
0x43473c:	mov	edi, 0x464db0
0x434741:	xor	eax, eax
0x434743:	mov	ebp, 1
0x434748:	mov	rsi, qword ptr [rip + 0xb1909]
0x43474f:	call	0x43dd90
0x434754:	mov	r14, qword ptr [rsp + 0x70]
0x434759:	test	r14, r14
0x43475c:	jne	0x4335ca
0x434762:	jmp	0x4335d5
0x434767:	or	ebp, 0xffffffff
0x43476a:	jmp	0x434754
0x43476c:	mov	rsi, qword ptr [rip + 0xb18e5]
0x434773:	mov	edi, 0x464de0
0x434778:	xor	eax, eax
0x43477a:	mov	ebp, 1
0x43477f:	call	0x43dd90
0x434784:	jmp	0x4335ca
0x434789:	mov	rdi, qword ptr [rip + 0xb0260]
0x434790:	test	rdi, rdi
0x434793:	jne	0x433dab
0x434799:	mov	edi, 0xa
0x43479e:	lea	rbp, [rsp + 0x98]
0x4347a6:	call	0x403840
0x4347ab:	jmp	0x433919
0x4347b0:	call	0x43f250
0x4347b5:	lea	rbp, [rsp + 0x98]
0x4347bd:	mov	rdi, rax
0x4347c0:	call	0x403910
0x4347c5:	jmp	0x433919
0x4347ca:	mov	rbp, qword ptr [rip + 0xb01f7]
0x4347d1:	mov	edi, 0x45b187
0x4347d6:	call	0x403a20
0x4347db:	mov	edi, 1
0x4347e0:	mov	rdx, rbp
0x4347e3:	mov	rsi, rax
0x4347e6:	xor	eax, eax
0x4347e8:	call	0x403d70
0x4347ed:	mov	r12, qword ptr [rip + 0xae86c]
0x4347f4:	mov	edi, 0x45b1a4
0x4347f9:	call	0x403a20
0x4347fe:	mov	rdi, rax
0x434801:	mov	rsi, r12
0x434804:	call	0x403aa0
0x434809:	mov	r13, qword ptr [rip + 0xae850]
0x434810:	mov	edi, 0x463b88
0x434815:	call	0x403a20
0x43481a:	mov	rdi, rax
0x43481d:	mov	rsi, r13
0x434820:	call	0x403aa0
0x434825:	mov	rbx, qword ptr [rip + 0xae834]
0x43482c:	mov	edi, 0x463bd0
0x434831:	call	0x403a20
0x434836:	mov	rdi, rax
0x434839:	mov	rsi, rbx
0x43483c:	call	0x403aa0
0x434841:	mov	rbp, qword ptr [rip + 0xae818]
0x434848:	mov	edi, 0x463c08
0x43484d:	call	0x403a20
0x434852:	mov	rdi, rax
0x434855:	mov	rsi, rbp
0x434858:	call	0x403aa0
0x43485d:	mov	r12, qword ptr [rip + 0xae7fc]
0x434864:	mov	edi, 0x463c58
0x434869:	call	0x403a20
0x43486e:	mov	rdi, rax
0x434871:	mov	rsi, r12
0x434874:	call	0x403aa0
0x434879:	mov	r13, qword ptr [rip + 0xae7e0]
0x434880:	mov	edi, 0x463cb8
0x434885:	call	0x403a20
0x43488a:	mov	rdi, rax
0x43488d:	mov	rsi, r13
0x434890:	call	0x403aa0
0x434895:	cmp	dword ptr [rip + 0xb1744], 0
0x43489c:	je	0x434d42
0x4348a2:	mov	rbp, qword ptr [rip + 0xae7b7]
0x4348a9:	mov	edi, 0x463d50
0x4348ae:	call	0x403a20
0x4348b3:	mov	rdi, rax
0x4348b6:	mov	rsi, rbp
0x4348b9:	call	0x403aa0
0x4348be:	mov	r12, qword ptr [rip + 0xae79b]
0x4348c5:	mov	edi, 0x463d98
0x4348ca:	call	0x403a20
0x4348cf:	mov	rdi, rax
0x4348d2:	mov	rsi, r12
0x4348d5:	call	0x403aa0
0x4348da:	mov	r13, qword ptr [rip + 0xae77f]
0x4348e1:	mov	edi, 0x463de0
0x4348e6:	call	0x403a20
0x4348eb:	mov	rdi, rax
0x4348ee:	mov	rsi, r13
0x4348f1:	call	0x403aa0
0x4348f6:	mov	rbx, qword ptr [rip + 0xae763]
0x4348fd:	mov	edi, 0x463e28
0x434902:	call	0x403a20
0x434907:	mov	rdi, rax
0x43490a:	mov	rsi, rbx
0x43490d:	call	0x403aa0
0x434912:	mov	rbp, qword ptr [rip + 0xae747]
0x434919:	mov	edi, 0x463e70
0x43491e:	call	0x403a20
0x434923:	mov	rdi, rax
0x434926:	mov	rsi, rbp
0x434929:	call	0x403aa0
0x43492e:	mov	r12, qword ptr [rip + 0xae72b]
0x434935:	mov	edi, 0x463ec8
0x43493a:	call	0x403a20
0x43493f:	mov	rdi, rax
0x434942:	mov	rsi, r12
0x434945:	call	0x403aa0
0x43494a:	mov	r13, qword ptr [rip + 0xae70f]
0x434951:	mov	edi, 0x463f20
0x434956:	call	0x403a20
0x43495b:	mov	rdi, rax
0x43495e:	mov	rsi, r13
0x434961:	call	0x403aa0
0x434966:	mov	rbx, qword ptr [rip + 0xae6f3]
0x43496d:	mov	edi, 0x463f68
0x434972:	call	0x403a20
0x434977:	mov	rdi, rax
0x43497a:	mov	rsi, rbx
0x43497d:	call	0x403aa0
0x434982:	mov	rbp, qword ptr [rip + 0xae6d7]
0x434989:	mov	edi, 0x463fb8
0x43498e:	call	0x403a20
0x434993:	mov	rdi, rax
0x434996:	mov	rsi, rbp
0x434999:	call	0x403aa0
0x43499e:	mov	r12, qword ptr [rip + 0xae6bb]
0x4349a5:	mov	edi, 0x464048
0x4349aa:	call	0x403a20
0x4349af:	mov	rdi, rax
0x4349b2:	mov	rsi, r12
0x4349b5:	call	0x403aa0
0x4349ba:	mov	r13, qword ptr [rip + 0xae69f]
0x4349c1:	mov	edi, 0x464098
0x4349c6:	call	0x403a20
0x4349cb:	mov	rdi, rax
0x4349ce:	mov	rsi, r13
0x4349d1:	call	0x403aa0
0x4349d6:	mov	rbx, qword ptr [rip + 0xae683]
0x4349dd:	mov	edi, 0x464130
0x4349e2:	call	0x403a20
0x4349e7:	mov	rdi, rax
0x4349ea:	mov	rsi, rbx
0x4349ed:	call	0x403aa0
0x4349f2:	mov	rbp, qword ptr [rip + 0xae667]
0x4349f9:	mov	edi, 0x464178
0x4349fe:	call	0x403a20
0x434a03:	mov	rdi, rax
0x434a06:	mov	rsi, rbp
0x434a09:	call	0x403aa0
0x434a0e:	mov	r12, qword ptr [rip + 0xae64b]
0x434a15:	mov	edi, 0x4641c0
0x434a1a:	call	0x403a20
0x434a1f:	mov	rdi, rax
0x434a22:	mov	rsi, r12
0x434a25:	call	0x403aa0
0x434a2a:	mov	r13, qword ptr [rip + 0xae62f]
0x434a31:	mov	edi, 0x464218
0x434a36:	call	0x403a20
0x434a3b:	mov	rdi, rax
0x434a3e:	mov	rsi, r13
0x434a41:	call	0x403aa0
0x434a46:	mov	rbx, qword ptr [rip + 0xae613]
0x434a4d:	mov	edi, 0x464268
0x434a52:	call	0x403a20
0x434a57:	mov	rdi, rax
0x434a5a:	mov	rsi, rbx
0x434a5d:	call	0x403aa0
0x434a62:	mov	rbp, qword ptr [rip + 0xae5f7]
0x434a69:	mov	edi, 0x4642c0
0x434a6e:	call	0x403a20
0x434a73:	mov	rdi, rax
0x434a76:	mov	rsi, rbp
0x434a79:	call	0x403aa0
0x434a7e:	mov	r12, qword ptr [rip + 0xae5db]
0x434a85:	mov	edi, 0x464310
0x434a8a:	call	0x403a20
0x434a8f:	mov	rdi, rax
0x434a92:	mov	rsi, r12
0x434a95:	call	0x403aa0
0x434a9a:	mov	r13, qword ptr [rip + 0xae5bf]
0x434aa1:	mov	edi, 0x464350
0x434aa6:	call	0x403a20
0x434aab:	mov	rdi, rax
0x434aae:	mov	rsi, r13
0x434ab1:	call	0x403aa0
0x434ab6:	mov	rbx, qword ptr [rip + 0xae5a3]
0x434abd:	mov	edi, 0x464390
0x434ac2:	call	0x403a20
0x434ac7:	mov	rdi, rax
0x434aca:	mov	rsi, rbx
0x434acd:	call	0x403aa0
0x434ad2:	mov	rbp, qword ptr [rip + 0xae587]
0x434ad9:	mov	edi, 0x4643d0
0x434ade:	call	0x403a20
0x434ae3:	mov	rdi, rax
0x434ae6:	mov	rsi, rbp
0x434ae9:	call	0x403aa0
0x434aee:	mov	r12, qword ptr [rip + 0xae56b]
0x434af5:	mov	edi, 0x464410
0x434afa:	call	0x403a20
0x434aff:	mov	rdi, rax
0x434b02:	mov	rsi, r12
0x434b05:	call	0x403aa0
0x434b0a:	mov	r13, qword ptr [rip + 0xae54f]
0x434b11:	mov	edi, 0x464450
0x434b16:	call	0x403a20
0x434b1b:	mov	rdi, rax
0x434b1e:	mov	rsi, r13
0x434b21:	call	0x403aa0
0x434b26:	mov	rbx, qword ptr [rip + 0xae533]
0x434b2d:	mov	edi, 0x4644e0
0x434b32:	call	0x403a20
0x434b37:	mov	rdi, rax
0x434b3a:	mov	rsi, rbx
0x434b3d:	call	0x403aa0
0x434b42:	mov	rbp, qword ptr [rip + 0xae517]
0x434b49:	mov	edi, 0x464528
0x434b4e:	call	0x403a20
0x434b53:	mov	rdi, rax
0x434b56:	mov	rsi, rbp
0x434b59:	call	0x403aa0
0x434b5e:	mov	r12, qword ptr [rip + 0xae4fb]
0x434b65:	mov	edi, 0x464570
0x434b6a:	call	0x403a20
0x434b6f:	mov	rdi, rax
0x434b72:	mov	rsi, r12
0x434b75:	call	0x403aa0
0x434b7a:	mov	r13, qword ptr [rip + 0xae4df]
0x434b81:	mov	edi, 0x4645c8
0x434b86:	call	0x403a20
0x434b8b:	mov	rdi, rax
0x434b8e:	mov	rsi, r13
0x434b91:	call	0x403aa0
0x434b96:	mov	rbx, qword ptr [rip + 0xae4c3]
0x434b9d:	mov	edi, 0x464618
0x434ba2:	call	0x403a20
0x434ba7:	mov	rdi, rax
0x434baa:	mov	rsi, rbx
0x434bad:	call	0x403aa0
0x434bb2:	mov	rbp, qword ptr [rip + 0xae4a7]
0x434bb9:	mov	edi, 0x464690
0x434bbe:	call	0x403a20
0x434bc3:	mov	rdi, rax
0x434bc6:	mov	rsi, rbp
0x434bc9:	call	0x403aa0
0x434bce:	mov	r12, qword ptr [rip + 0xae48b]
0x434bd5:	mov	edi, 0x4646e0
0x434bda:	call	0x403a20
0x434bdf:	mov	rdi, rax
0x434be2:	mov	rsi, r12
0x434be5:	call	0x403aa0
0x434bea:	mov	r13, qword ptr [rip + 0xae46f]
0x434bf1:	mov	edi, 0x464730
0x434bf6:	call	0x403a20
0x434bfb:	mov	rdi, rax
0x434bfe:	mov	rsi, r13
0x434c01:	call	0x403aa0
0x434c06:	mov	rbx, qword ptr [rip + 0xae453]
0x434c0d:	mov	edi, 0x464788
0x434c12:	call	0x403a20
0x434c17:	mov	rdi, rax
0x434c1a:	mov	rsi, rbx
0x434c1d:	call	0x403aa0
0x434c22:	mov	rbp, qword ptr [rip + 0xae437]
0x434c29:	mov	edi, 0x4647d8
0x434c2e:	call	0x403a20
0x434c33:	mov	rdi, rax
0x434c36:	mov	rsi, rbp
0x434c39:	call	0x403aa0
0x434c3e:	mov	r12, qword ptr [rip + 0xae41b]
0x434c45:	mov	edi, 0x464820
0x434c4a:	call	0x403a20
0x434c4f:	mov	rdi, rax
0x434c52:	mov	rsi, r12
0x434c55:	call	0x403aa0
0x434c5a:	mov	r13, qword ptr [rip + 0xae3ff]
0x434c61:	mov	edi, 0x464868
0x434c66:	call	0x403a20
0x434c6b:	mov	rdi, rax
0x434c6e:	mov	rsi, r13
0x434c71:	call	0x403aa0
0x434c76:	mov	rbx, qword ptr [rip + 0xae3e3]
0x434c7d:	mov	edi, 0x4648a8
0x434c82:	call	0x403a20
0x434c87:	mov	rdi, rax
0x434c8a:	mov	rsi, rbx
0x434c8d:	call	0x403aa0
0x434c92:	mov	rbp, qword ptr [rip + 0xae3c7]
0x434c99:	mov	edi, 0x464920
0x434c9e:	call	0x403a20
0x434ca3:	mov	rdi, rax
0x434ca6:	mov	rsi, rbp
0x434ca9:	call	0x403aa0
0x434cae:	mov	r12, qword ptr [rip + 0xae3ab]
0x434cb5:	mov	edi, 0x464958
0x434cba:	call	0x403a20
0x434cbf:	mov	rdi, rax
0x434cc2:	mov	rsi, r12
0x434cc5:	call	0x403aa0
0x434cca:	mov	r13, qword ptr [rip + 0xafcf7]
0x434cd1:	mov	edi, 0x464a90
0x434cd6:	call	0x403a20
0x434cdb:	mov	edi, 1
0x434ce0:	mov	rsi, rax
0x434ce3:	mov	rdx, r13
0x434ce6:	xor	eax, eax
0x434ce8:	call	0x403d70
0x434ced:	cmp	dword ptr [rip + 0xb12ec], 0
0x434cf4:	je	0x434d63
0x434cf6:	mov	rsi, qword ptr [rip + 0xae363]
0x434cfd:	mov	edi, 0xa
0x434d02:	call	0x403b30
0x434d07:	mov	rdi, qword ptr [rip + 0xae352]
0x434d0e:	call	0x403cb0
0x434d13:	jmp	0x4331e6
0x434d18:	mov	rdi, qword ptr [rip + 0xafcd9]
0x434d1f:	test	rdi, rdi
0x434d22:	jne	0x433dab
0x434d28:	mov	edi, 0x4cd754
0x434d2d:	xor	r14d, r14d
0x434d30:	lea	rbp, [rsp + 0x98]
0x434d38:	call	0x403910
0x434d3d:	jmp	0x433919
0x434d42:	mov	rbx, qword ptr [rip + 0xae317]
0x434d49:	mov	edi, 0x463d08
0x434d4e:	call	0x403a20
0x434d53:	mov	rdi, rax
0x434d56:	mov	rsi, rbx
0x434d59:	call	0x403aa0
0x434d5e:	jmp	0x4348a2
0x434d63:	mov	edi, 0x464b70
0x434d68:	call	0x403a20
0x434d6d:	mov	edi, 1
0x434d72:	mov	rsi, rax
0x434d75:	xor	eax, eax
0x434d77:	call	0x403d70
0x434d7c:	mov	edx, 0x4be120
0x434d81:	mov	esi, 0x45b1ae
0x434d86:	jmp	0x433e81
0x434d8b:	or	byte ptr [rip + 0xafc1e], 2
0x434d92:	jmp	0x432fad
0x434d97:	mov	rsi, rax
0x434d9a:	mov	edi, 0x4e6140
0x434d9f:	call	0x4316f0
0x434da4:	jmp	0x432b4b
0x434da9:	cmp	rbx, r12
0x434dac:	jae	0x432ae7
0x434db2:	mov	qword ptr [rsp + 0xa0], 0x4000000
0x434dbe:	cmp	r12, 0x3ffffff
0x434dc5:	ja	0x4336a3
0x434dcb:	mov	qword ptr [rsp + 0xa0], r12
0x434dd3:	jmp	0x4336a3
0x434dd8:	add	rdi, 1
0x434ddc:	jmp	0x433a43
0x434de1:	mov	esi, 0x4c42ef
0x434de6:	mov	rdi, rbx
0x434de9:	call	0x403be0
0x434dee:	test	eax, eax
0x434df0:	jne	0x433d88
0x434df6:	mov	rdi, rbx
0x434df9:	xor	edx, edx
0x434dfb:	mov	rsi, r15
0x434dfe:	call	0x42d870
0x434e03:	mov	qword ptr [rip + 0xb1196], rax
0x434e0a:	mov	rbx, rax
0x434e0d:	jmp	0x433d88
0x434e12:	mov	rdi, qword ptr [rsp]
0x434e16:	mov	qword ptr [rsp + 0x10], rax
0x434e1b:	call	0x403920
0x434e20:	mov	rsi, qword ptr [rsp + 0x10]
0x434e25:	test	eax, eax
0x434e27:	je	0x433a37
0x434e2d:	mov	rdi, qword ptr [rsp + 8]
0x434e32:	call	0x403830
0x434e37:	jmp	0x433cfe
0x434e3c:	mov	edi, 0x464e00
0x434e41:	call	0x403910
0x434e46:	mov	edi, 0x4be120
0x434e4b:	call	0x403910
0x434e50:	jmp	0x434005
0x434e55:	call	0x4134e7
0x434e5a:	jmp	0x433ff3
0x434e5f:	or	byte ptr [rip + 0xafb4a], 2
0x434e66:	jmp	0x433f3e
0x434e6b:	mov	esi, 1
0x434e70:	mov	edi, 0x4e4960
0x434e75:	call	0x4316f0
0x434e7a:	mov	rax, qword ptr [rip + 0xafaf7]
0x434e81:	jmp	0x433f19
0x434e86:	mov	esi, 0x13
0x434e8b:	mov	edi, 0x4e4960
0x434e90:	call	0x4316f0
0x434e95:	jmp	0x433eda
0x434e9a:	mov	dword ptr [rsp + 0x48], r14d
0x434e9f:	mov	rax, qword ptr [rip + 0xafb1a]
0x434ea6:	mov	r8, rbx
0x434ea9:	mov	dword ptr [rsp], 0
0x434eb0:	movzx	esi, byte ptr [rax]
0x434eb3:	test	sil, sil
0x434eb6:	je	0x434f51
0x434ebc:	mov	r11, rax
0x434ebf:	cmp	sil, 0xa
0x434ec3:	je	0x434f8a
0x434ec9:	movzx	edx, byte ptr [r11]
0x434ecd:	cmp	dl, 0x20
0x434ed0:	je	0x434f93
0x434ed6:	test	dl, dl
0x434ed8:	je	0x435266
0x434ede:	add	r11, 1
0x434ee2:	jmp	0x434ec9
0x434ee4:	mov	esi, 0x45b0ee
0x434ee9:	xor	edi, edi
0x434eeb:	xor	eax, eax
0x434eed:	call	0x43f5d0
0x434ef2:	mov	esi, 0x45b0da
0x434ef7:	mov	rdi, rax
0x434efa:	call	0x403be0
0x434eff:	test	eax, eax
0x434f01:	jne	0x434f2d
0x434f03:	mov	dword ptr [rip + 0xae2c7], 1
0x434f0d:	jmp	0x4329ac
0x434f12:	mov	qword ptr [rip + 0xad56b], 0x45b0b6
0x434f1d:	mov	qword ptr [rip + 0xad558], 0x45b0ba
0x434f28:	jmp	0x432875
0x434f2d:	mov	esi, 0x45b0e4
0x434f32:	mov	rdi, r14
0x434f35:	call	0x403be0
0x434f3a:	test	eax, eax
0x434f3c:	jne	0x4329ac
0x434f42:	mov	dword ptr [rip + 0xae288], 2
0x434f4c:	jmp	0x4329ac
0x434f51:	mov	r14d, dword ptr [rsp + 0x48]
0x434f56:	lea	rbp, [rsp + 0x98]
0x434f5e:	jmp	0x433919
0x434f63:	mov	byte ptr [rip + 0xb11ce], 1
0x434f6a:	jmp	0x432833
0x434f6f:	mov	edi, 8
0x434f74:	call	0x42db10
0x434f79:	mov	qword ptr [rsp + 0x18], rax
0x434f7e:	mov	qword ptr [rax], 0
0x434f85:	jmp	0x433bec
0x434f8a:	add	rax, 1
0x434f8e:	jmp	0x434eb0
0x434f93:	xor	edi, edi
0x434f95:	cmp	sil, 0x2e
0x434f99:	je	0x435002
0x434f9b:	mov	rbx, qword ptr [rip + 0xafa16]
0x434fa2:	lea	rcx, [r11 + 1]
0x434fa6:	mov	qword ptr [rsp + 0x38], rax
0x434fab:	mov	qword ptr [rsp + 0x30], rcx
0x434fb0:	mov	qword ptr [rsp + 0x18], rbx
0x434fb5:	mov	qword ptr [rsp + 8], r11
0x434fba:	mov	qword ptr [rsp + 0x10], r8
0x434fbf:	mov	dword ptr [rsp + 0x40], edi
0x434fc3:	movzx	r12d, byte ptr [rbx]
0x434fc7:	test	r12b, r12b
0x434fca:	je	0x435014
0x434fcc:	mov	r15d, 1
0x434fd2:	cmp	r12b, 0xa
0x434fd6:	je	0x4351ab
0x434fdc:	movzx	edx, byte ptr [rbx]
0x434fdf:	cmp	dl, 0x3b
0x434fe2:	je	0x4351a6
0x434fe8:	test	dl, dl
0x434fea:	je	0x4351ef
0x434ff0:	lea	r12, [rbx + 1]
0x434ff4:	test	r15d, r15d
0x434ff7:	jne	0x4351ca
0x434ffd:	mov	rbx, r12
0x435000:	jmp	0x434fdc
0x435002:	cmp	byte ptr [rax + 1], 0x3a
0x435006:	jne	0x434f9b
0x435008:	xor	edi, edi
0x43500a:	cmp	byte ptr [rax + 2], 0x3a
0x43500e:	setne	dil
0x435012:	jmp	0x434f9b
0x435014:	mov	r12d, dword ptr [rsp + 0x40]
0x435019:	mov	r15, qword ptr [rsp + 0x38]
0x43501e:	mov	r13, qword ptr [rsp + 8]
0x435023:	mov	r11, qword ptr [rsp + 0x10]
0x435028:	test	r12d, r12d
0x43502b:	jne	0x4350a7
0x43502d:	mov	r8, r13
0x435030:	sub	r8, r15
0x435033:	test	r11, r11
0x435036:	je	0x435042
0x435038:	cmp	r8d, dword ptr [rsp]
0x43503c:	je	0x4350d4
0x435042:	mov	dword ptr [rsp], r8d
0x435046:	lea	r9, [r13 + 1]
0x43504a:	mov	dword ptr [rsp + 8], r12d
0x43504f:	xor	ebp, ebp
0x435051:	mov	r12, r13
0x435054:	mov	qword ptr [rsp + 0x10], r9
0x435059:	mov	rdi, r9
0x43505c:	movzx	eax, byte ptr [rdi]
0x43505f:	cmp	al, 0x3b
0x435061:	je	0x4350f6
0x435067:	test	al, al
0x435069:	je	0x435266
0x43506f:	cmp	al, 0x21
0x435071:	jne	0x435370
0x435077:	add	rdi, 1
0x43507b:	mov	ebx, 1
0x435080:	mov	r13, rdi
0x435083:	movzx	r14d, byte ptr [r13]
0x435088:	cmp	r14b, 0x20
0x43508c:	je	0x435112
0x435092:	cmp	r14b, 0x3b
0x435096:	je	0x435112
0x435098:	test	r14b, r14b
0x43509b:	je	0x435266
0x4350a1:	add	r13, 1
0x4350a5:	jmp	0x435083
0x4350a7:	mov	r15, r11
0x4350aa:	lea	rbx, [r13 + 1]
0x4350ae:	movzx	r14d, byte ptr [rbx]
0x4350b2:	cmp	r14b, 0x3b
0x4350b6:	je	0x43516a
0x4350bc:	test	r14b, r14b
0x4350bf:	je	0x435266
0x4350c5:	test	r12d, r12d
0x4350c8:	je	0x4352ca
0x4350ce:	add	rbx, 1
0x4350d2:	jmp	0x4350ae
0x4350d4:	mov	edx, dword ptr [rsp]
0x4350d7:	mov	rsi, r15
0x4350da:	mov	rdi, r11
0x4350dd:	call	0x4038d0
0x4350e2:	test	eax, eax
0x4350e4:	jne	0x435046
0x4350ea:	mov	r12d, 1
0x4350f0:	lea	rbx, [r13 + 1]
0x4350f4:	jmp	0x4350ae
0x4350f6:	mov	esi, ebp
0x4350f8:	mov	rbx, qword ptr [rsp + 0x10]
0x4350fd:	mov	rbp, r12
0x435100:	mov	r12d, dword ptr [rsp + 8]
0x435105:	test	sil, sil
0x435108:	je	0x435139
0x43510a:	mov	r12d, 1
0x435110:	jmp	0x4350ae
0x435112:	mov	esi, r13d
0x435115:	sub	esi, edi
0x435117:	call	0x43bb40
0x43511c:	test	eax, eax
0x43511e:	jne	0x435377
0x435124:	test	ebx, ebx
0x435126:	jne	0x435384
0x43512c:	mov	rbp, r12
0x43512f:	mov	rbx, qword ptr [rsp + 0x10]
0x435134:	mov	r12d, dword ptr [rsp + 8]
0x435139:	mov	r13, r15
0x43513c:	mov	rsi, qword ptr [rip + 0xadf1d]
0x435143:	cmp	rbp, r13
0x435146:	jbe	0x43527b
0x43514c:	movzx	r10d, byte ptr [r13]
0x435151:	cmp	r10b, 0x3a
0x435155:	je	0x43527b
0x43515b:	movsx	edi, r10b
0x43515f:	add	r13, 1
0x435163:	call	0x403bf0
0x435168:	jmp	0x43513c
0x43516a:	test	r12d, r12d
0x43516d:	jne	0x43519a
0x43516f:	mov	rbp, qword ptr [rip + 0xad322]
0x435176:	test	rbp, rbp
0x435179:	je	0x435189
0x43517b:	movzx	r11d, byte ptr [rbp]
0x435180:	test	r11b, r11b
0x435183:	jne	0x4352fd
0x435189:	mov	rsi, qword ptr [rip + 0xaded0]
0x435190:	mov	edi, 0xa
0x435195:	call	0x403bf0
0x43519a:	mov	r8, r15
0x43519d:	lea	rax, [rbx + 1]
0x4351a1:	jmp	0x434eb0
0x4351a6:	test	r15d, r15d
0x4351a9:	jne	0x4351b4
0x4351ab:	add	rbx, 1
0x4351af:	jmp	0x434fc3
0x4351b4:	mov	rdi, qword ptr [rsp + 8]
0x4351b9:	mov	r12d, r15d
0x4351bc:	mov	r15, qword ptr [rsp + 0x10]
0x4351c1:	lea	rbx, [rdi + 1]
0x4351c5:	jmp	0x4350ae
0x4351ca:	mov	r12, rbx
0x4351cd:	movzx	ebp, byte ptr [r12]
0x4351d2:	cmp	bpl, 0x20
0x4351d6:	je	0x43528a
0x4351dc:	cmp	bpl, 0x3b
0x4351e0:	je	0x43528a
0x4351e6:	test	bpl, bpl
0x4351e9:	jne	0x4352b9
0x4351ef:	mov	rdx, qword ptr [rsp + 0x18]
0x4351f4:	mov	esi, 0x463b30
0x4351f9:	xor	edi, edi
0x4351fb:	xor	eax, eax
0x4351fd:	call	0x43f5d0
0x435202:	cmp	r14b, 0x3b
0x435206:	je	0x43521c
0x435208:	test	r14b, r14b
0x43520b:	je	0x435266
0x43520d:	add	r13, 1
0x435211:	movzx	r14d, byte ptr [r13]
0x435216:	cmp	r14b, 0x20
0x43521a:	jne	0x435202
0x43521c:	mov	rcx, qword ptr [rsp + 0x28]
0x435221:	mov	rdx, r13
0x435224:	mov	rsi, rbx
0x435227:	sub	rdx, rdi
0x43522a:	cmp	rdx, rcx
0x43522d:	cmovl	rdx, rcx
0x435231:	call	0x4038d0
0x435236:	test	eax, eax
0x435238:	je	0x4352a6
0x43523a:	mov	esi, dword ptr [rsp + 0x20]
0x43523e:	mov	rdi, rbx
0x435241:	call	0x43bb40
0x435246:	test	eax, eax
0x435248:	jne	0x4352a6
0x43524a:	mov	rdi, r13
0x43524d:	cmp	r14b, 0x20
0x435251:	jne	0x435257
0x435253:	lea	rdi, [r13 + 1]
0x435257:	movzx	r13d, byte ptr [rdi]
0x43525b:	cmp	r13b, 0x3b
0x43525f:	je	0x4352a3
0x435261:	test	r13b, r13b
0x435264:	jne	0x4352c2
0x435266:	mov	rdx, qword ptr [rip + 0xaf753]
0x43526d:	mov	esi, 0x463b10
0x435272:	xor	edi, edi
0x435274:	xor	eax, eax
0x435276:	call	0x43f5d0
0x43527b:	mov	edi, 0x3b
0x435280:	call	0x403bf0
0x435285:	jmp	0x4350ae
0x43528a:	mov	rsi, r12
0x43528d:	mov	rdi, qword ptr [rsp + 0x30]
0x435292:	sub	rsi, rbx
0x435295:	movsxd	r10, esi
0x435298:	mov	dword ptr [rsp + 0x20], esi
0x43529c:	mov	qword ptr [rsp + 0x28], r10
0x4352a1:	jmp	0x435257
0x4352a3:	xor	r15d, r15d
0x4352a6:	cmp	bpl, 0x20
0x4352aa:	jne	0x434ffd
0x4352b0:	add	r12, 1
0x4352b4:	jmp	0x434ffd
0x4352b9:	add	r12, 1
0x4352bd:	jmp	0x4351cd
0x4352c2:	mov	r13, rdi
0x4352c5:	jmp	0x435211
0x4352ca:	cmp	r14b, 0x21
0x4352ce:	jne	0x435338
0x4352d0:	movzx	r9d, byte ptr [rbx]
0x4352d4:	cmp	r9b, 0x20
0x4352d8:	je	0x4350ce
0x4352de:	cmp	r9b, 0x3b
0x4352e2:	je	0x4350ae
0x4352e8:	test	r9b, r9b
0x4352eb:	je	0x435266
0x4352f1:	cmp	r14b, 0x21
0x4352f5:	jne	0x43535e
0x4352f7:	add	rbx, 1
0x4352fb:	jmp	0x4352d0
0x4352fd:	mov	ecx, 1
0x435302:	mov	rsi, qword ptr [rip + 0xadd57]
0x435309:	cmp	r11b, 0x20
0x43530d:	je	0x43534b
0x43530f:	test	ecx, ecx
0x435311:	jne	0x435352
0x435313:	movsx	edi, byte ptr [rbp]
0x435317:	mov	rsi, qword ptr [rip + 0xadd42]
0x43531e:	call	0x403bf0
0x435323:	xor	ecx, ecx
0x435325:	movzx	r11d, byte ptr [rbp + 1]
0x43532a:	add	rbp, 1
0x43532e:	test	r11b, r11b
0x435331:	jne	0x435302
0x435333:	jmp	0x435189
0x435338:	mov	rsi, qword ptr [rip + 0xadd21]
0x43533f:	mov	edi, 0x40
0x435344:	call	0x403bf0
0x435349:	jmp	0x4352d0
0x43534b:	mov	ecx, 1
0x435350:	jmp	0x435325
0x435352:	mov	edi, 0x40
0x435357:	call	0x403bf0
0x43535c:	jmp	0x435313
0x43535e:	mov	rsi, qword ptr [rip + 0xadcfb]
0x435365:	movsx	edi, r9b
0x435369:	call	0x403bf0
0x43536e:	jmp	0x4352f7
0x435370:	xor	ebx, ebx
0x435372:	jmp	0x435080
0x435377:	test	ebx, ebx
0x435379:	jne	0x43512c
0x43537f:	mov	ebp, 1
0x435384:	cmp	r14b, 0x20
0x435388:	je	0x435392
0x43538a:	mov	rdi, r13
0x43538d:	jmp	0x43505c
0x435392:	add	r13, 1
0x435396:	jmp	0x43538a
0x435398:	nop	dword ptr [rax + rax]
0x4353a0:	endbr64	
0x4353a4:	push	rbx
0x4353a5:	movq	xmm1, rdx
0x4353aa:	movq	xmm0, rsi
0x4353af:	mov	ebx, edi
0x4353b1:	punpcklqdq	xmm0, xmm1
0x4353b5:	mov	edi, 0x90
0x4353ba:	sub	rsp, 0x10
0x4353be:	movaps	xmmword ptr [rsp], xmm0
0x4353c2:	call	0x42db10
0x4353c7:	movdqa	xmm2, xmmword ptr [rsp]
0x4353cc:	mov	rdx, qword ptr [rip + 0x88f9d]
0x4353d3:	pxor	xmm3, xmm3
0x4353d7:	mov	dword ptr [rax], ebx
0x4353d9:	mov	dword ptr [rax + 0x18], 0
0x4353e0:	mov	qword ptr [rax + 0x20], 0
0x4353e8:	mov	qword ptr [rax + 0x28], rdx
0x4353ec:	mov	dword ptr [rax + 0x30], 0
0x4353f3:	mov	qword ptr [rax + 0x48], 0
0x4353fb:	mov	dword ptr [rax + 0x50], 0
0x435402:	mov	qword ptr [rax + 0x68], 0
0x43540a:	mov	dword ptr [rax + 0x70], 0
0x435411:	mov	qword ptr [rax + 0x78], 0
0x435419:	mov	qword ptr [rax + 0x80], 0x4bc7e0
0x435424:	mov	qword ptr [rax + 0x88], 0
0x43542f:	movups	xmmword ptr [rax + 8], xmm2
0x435433:	movups	xmmword ptr [rax + 0x38], xmm3
0x435437:	movups	xmmword ptr [rax + 0x58], xmm3
0x43543b:	add	rsp, 0x10
0x43543f:	pop	rbx
0x435440:	ret	
0x435441:	nop	word ptr cs:[rax + rax]
0x43544c:	nop	dword ptr [rax]
0x435450:	mov	rax, qword ptr [rdi]
0x435453:	movzx	edx, byte ptr [rax]
0x435456:	test	byte ptr [rdx + rdx + 0x4bc840], 0x40
0x43545e:	jne	0x435461
0x435460:	ret	
0x435461:	add	rax, 1
0x435465:	mov	qword ptr [rdi], rax
0x435468:	jmp	0x435450
0x43546a:	nop	word ptr [rax + rax]
0x435470:	endbr64	
0x435474:	push	r15
0x435476:	mov	r10, rcx
0x435479:	mov	r15, rdx
0x43547c:	push	r14
0x43547e:	push	r13
0x435480:	mov	r13, r9
0x435483:	push	r12
0x435485:	mov	r12d, esi
0x435488:	push	rbp
0x435489:	mov	rbp, rdi
0x43548c:	push	rbx
0x43548d:	sub	rsp, 0x38
0x435491:	mov	rdi, qword ptr [rdi + 0x58]
0x435495:	test	rdi, rdi
0x435498:	jne	0x40454e
0x43549e:	cmp	qword ptr [rbp + 0x20], 0
0x4354a3:	jne	0x4044f2
0x4354a9:	mov	r9d, dword ptr [rbp + 0x18]
0x4354ad:	test	r9d, r9d
0x4354b0:	js	0x40444a
0x4354b6:	mov	r14d, r12d
0x4354b9:	and	r14d, 1
0x4354bd:	je	0x435551
0x4354c3:	test	r8, r8
0x4354c6:	jne	0x435672
0x4354cc:	mov	dword ptr [rbp + 0x18], 0xffffffff
0x4354d3:	mov	r8d, dword ptr [rbp + 0x2c]
0x4354d7:	cmp	r8d, -1
0x4354db:	jne	0x4047e8
0x4354e1:	mov	rax, qword ptr [rbp + 0x80]
0x4354e8:	mov	ebx, 2
0x4354ed:	test	r13, r13
0x4354f0:	jne	0x404789
0x4354f6:	test	byte ptr [rbp], 2
0x4354fa:	je	0x435500
0x4354fc:	mov	r8d, dword ptr [rbp + 0x18]
0x435500:	push	rax
0x435501:	mov	r13, qword ptr [rbp + 0x80]
0x435508:	mov	esi, r12d
0x43550b:	mov	rdx, r15
0x43550e:	push	qword ptr [rsp + 0x78]
0x435512:	mov	rdi, rbp
0x435515:	lea	rcx, [rsp + 0x30]
0x43551a:	push	rcx
0x43551b:	mov	rcx, r10
0x43551e:	push	r8
0x435520:	xor	r8d, r8d
0x435523:	push	rbx
0x435524:	push	r14
0x435526:	mov	dword ptr [rsp + 0x38], r9d
0x43552b:	call	qword ptr [r13 + 0x10]
0x43552f:	add	rsp, 0x30
0x435533:	mov	r9d, dword ptr [rsp + 8]
0x435538:	test	eax, eax
0x43553a:	mov	r12d, eax
0x43553d:	jns	0x435642
0x435543:	test	r9d, r9d
0x435546:	je	0x4044ad
0x43554c:	jmp	0x40449c
0x435551:	mov	eax, dword ptr [rbp]
0x435554:	mov	ebx, eax
0x435556:	and	ebx, 2
0x435559:	jne	0x40471a
0x43555f:	test	r8, r8
0x435562:	jne	0x4046c2
0x435568:	mov	r14, qword ptr [rbp + 0x10]
0x43556c:	mov	qword ptr [rsp + 0x10], r10
0x435571:	mov	dword ptr [rsp + 8], r9d
0x435576:	test	r14, r14
0x435579:	jne	0x4045d6
0x43557f:	xor	edi, edi
0x435581:	call	0x436980
0x435586:	mov	r9d, dword ptr [rsp + 8]
0x43558b:	mov	r10, qword ptr [rsp + 0x10]
0x435590:	test	rax, rax
0x435593:	mov	r8, rax
0x435596:	je	0x43563d
0x43559c:	test	byte ptr [rbp], 4
0x4355a0:	jne	0x4044e8
0x4355a6:	mov	eax, dword ptr [rbp + 0x70]
0x4355a9:	mov	rdi, qword ptr [rbp + 0x78]
0x4355ad:	mov	qword ptr [rsp + 0x18], r8
0x4355b2:	mov	qword ptr [rsp + 0x10], r10
0x4355b7:	add	eax, 1
0x4355ba:	mov	dword ptr [rsp + 8], r9d
0x4355bf:	mov	dword ptr [rbp + 0x70], eax
0x4355c2:	cdqe	
0x4355c4:	lea	rsi, [rax*8]
0x4355cc:	call	0x42db80
0x4355d1:	mov	r8, qword ptr [rsp + 0x18]
0x4355d6:	mov	r9d, dword ptr [rsp + 8]
0x4355db:	mov	qword ptr [rbp + 0x78], rax
0x4355df:	mov	r10, qword ptr [rsp + 0x10]
0x4355e4:	mov	r14, r8
0x4355e7:	movsxd	rcx, dword ptr [rbp + 0x70]
0x4355eb:	mov	r11, qword ptr [rbp + 0x78]
0x4355ef:	mov	qword ptr [r11 + rcx*8 - 8], r8
0x4355f4:	mov	r8, r14
0x4355f7:	mov	qword ptr [rbp + 0x20], r8
0x4355fb:	mov	dword ptr [rbp + 0x28], ebx
0x4355fe:	mov	rbx, qword ptr [rbp + 0x80]
0x435605:	mov	ecx, r12d
0x435608:	xor	edx, edx
0x43560a:	mov	rsi, r8
0x43560d:	shr	ecx, 8
0x435610:	mov	dword ptr [rsp + 8], r9d
0x435615:	mov	rdi, rbp
0x435618:	and	ecx, 1
0x43561b:	mov	qword ptr [rsp + 0x10], r10
0x435620:	call	qword ptr [rbx + 8]
0x435623:	mov	r9d, dword ptr [rsp + 8]
0x435628:	test	eax, eax
0x43562a:	mov	r14d, eax
0x43562d:	js	0x404472
0x435633:	mov	r10, qword ptr [rsp + 0x10]
0x435638:	jmp	0x4354d3
0x43563d:	jmp	0x40469b
0x435642:	mov	eax, dword ptr [rbp + 0x30]
0x435645:	mov	rdi, qword ptr [rbp + 0x38]
0x435649:	add	eax, 1
0x43564c:	mov	dword ptr [rbp + 0x30], eax
0x43564f:	cdqe	
0x435651:	lea	rsi, [rax*4]
0x435659:	call	0x42db80
0x43565e:	movsxd	r10, dword ptr [rbp + 0x30]
0x435662:	mov	qword ptr [rbp + 0x38], rax
0x435666:	mov	dword ptr [rax + r10*4 - 4], r12d
0x43566b:	xor	eax, eax
0x43566d:	jmp	0x404463
0x435672:	jmp	0x404805
0x435677:	nop	word ptr [rax + rax]
0x435680:	endbr64	
0x435684:	push	r12
0x435686:	push	rbx
0x435687:	mov	ebx, esi
0x435689:	sub	rsp, 0x78
0x43568d:	mov	dword ptr [rsp + 0x3c], 0
0x435695:	mov	dword ptr [rsp + 0x3c], 1
0x43569d:	mov	eax, dword ptr [rsp + 0x3c]
0x4356a1:	mov	qword ptr [rsp + 0x18], rdi
0x4356a6:	mov	qword ptr [rsp], rdx
0x4356aa:	mov	qword ptr [rsp + 0x20], rcx
0x4356af:	mov	qword ptr [rsp + 8], r8
0x4356b4:	mov	dword ptr [rsp + 0x2c], r9d
0x4356b9:	test	eax, eax
0x4356bb:	je	0x4356d4
0x4356bd:	mov	esi, 0x80000
0x4356c2:	lea	rdi, [rsp + 0x48]
0x4356c7:	call	0x403e60
0x4356cc:	test	eax, eax
0x4356ce:	jne	0x404a73
0x4356d4:	mov	ecx, ebx
0x4356d6:	mov	rdx, qword ptr [rip + 0xad9a3]
0x4356dd:	and	ebx, 2
0x4356e0:	or	r12d, 0xffffffff
0x4356e4:	and	ecx, 8
0x4356e7:	mov	dword ptr [rsp + 0x38], 1
0x4356ef:	mov	dword ptr [rsp + 0x14], ecx
0x4356f3:	mov	qword ptr [rsp + 0x40], rdx
0x4356f8:	mov	dword ptr [rsp + 0x28], ebx
0x4356fc:	mov	dword ptr [rsp + 0x34], 0
0x435704:	mov	esi, dword ptr [rsp + 0x34]
0x435708:	cmp	esi, 3
0x43570b:	jg	0x43595d
0x435711:	call	0x403e00
0x435716:	endbr64	
0x43571a:	mov	r12d, eax
0x43571d:	test	eax, eax
0x43571f:	js	0x404a1b
0x435725:	jne	0x43593f
0x43572b:	mov	qword ptr [rsp + 0x50], 0
0x435734:	mov	r12d, dword ptr [rsp + 0x3c]
0x435739:	test	r12d, r12d
0x43573c:	je	0x435747
0x43573e:	mov	edi, dword ptr [rsp + 0x48]
0x435742:	call	0x403b00
0x435747:	cmp	qword ptr [rsp + 0x50], 0
0x43574d:	jne	0x43575a
0x43574f:	cmp	dword ptr [rsp + 0x2c], 0
0x435754:	jne	0x435962
0x43575a:	cmp	qword ptr [rsp + 0x50], 0
0x435760:	jne	0x435770
0x435762:	cmp	dword ptr [rsp + 0x90], 1
0x43576a:	jne	0x43590d
0x435770:	cmp	qword ptr [rsp + 0x50], 0
0x435776:	jne	0x435786
0x435778:	cmp	dword ptr [rsp + 0x98], 2
0x435780:	jne	0x435944
0x435786:	cmp	qword ptr [rsp + 0x50], 0
0x43578c:	jne	0x43579c
0x43578e:	cmp	dword ptr [rsp + 0xa0], 0
0x435796:	jns	0x435958
0x43579c:	cmp	qword ptr [rsp + 0x50], 0
0x4357a2:	jne	0x4357ed
0x4357a4:	cmp	dword ptr [rsp + 0x14], 0
0x4357a9:	jne	0x40499e
0x4357af:	cmp	qword ptr [rsp + 8], 0
0x4357b5:	jne	0x435953
0x4357bb:	call	0x403890
0x4357c0:	cmp	dword ptr [rsp + 0x28], 0
0x4357c5:	mov	rsi, qword ptr [rsp + 0x20]
0x4357ca:	mov	rdi, qword ptr [rsp]
0x4357ce:	mov	rbx, rax
0x4357d1:	jne	0x4358f2
0x4357d7:	call	0x403f10
0x4357dc:	mov	r11d, dword ptr [rbx]
0x4357df:	mov	qword ptr [rsp + 0x50], 0x45b2a0
0x4357e8:	mov	dword ptr [rsp + 0x58], r11d
0x4357ed:	mov	edx, dword ptr [rsp + 0x3c]
0x4357f1:	test	edx, edx
0x4357f3:	jne	0x404abb
0x4357f9:	mov	rcx, qword ptr [rsp + 0x18]
0x4357fe:	mov	rbx, qword ptr [rcx + 8]
0x435802:	mov	rdi, rbx
0x435805:	call	0x4039e0
0x43580a:	mov	rsi, rbx
0x43580d:	mov	edi, 2
0x435812:	mov	rdx, rax
0x435815:	call	0x403980
0x43581a:	mov	edx, 0x18
0x43581f:	mov	esi, 0x45b2a6
0x435824:	mov	edi, 2
0x435829:	mov	rbx, rax
0x43582c:	call	0x403980
0x435831:	mov	r12, qword ptr [rsp]
0x435835:	or	rbx, rax
0x435838:	mov	rdi, r12
0x43583b:	call	0x4039e0
0x435840:	mov	rsi, r12
0x435843:	mov	edi, 2
0x435848:	mov	rdx, rax
0x43584b:	call	0x403980
0x435850:	mov	edx, 3
0x435855:	mov	esi, 0x45b2bf
0x43585a:	mov	edi, 2
0x43585f:	or	rbx, rax
0x435862:	call	0x403980
0x435867:	mov	r12, qword ptr [rsp + 0x50]
0x43586c:	or	rbx, rax
0x43586f:	mov	rdi, r12
0x435872:	call	0x4039e0
0x435877:	mov	rsi, r12
0x43587a:	mov	edi, 2
0x43587f:	mov	rdx, rax
0x435882:	call	0x403980
0x435887:	mov	edx, 2
0x43588c:	mov	esi, 0x4cd64a
0x435891:	mov	edi, 2
0x435896:	or	rbx, rax
0x435899:	call	0x403980
0x43589e:	mov	edi, dword ptr [rsp + 0x58]
0x4358a2:	or	rbx, rax
0x4358a5:	call	0x43fbb0
0x4358aa:	mov	rdi, rax
0x4358ad:	call	0x4039e0
0x4358b2:	mov	edi, dword ptr [rsp + 0x58]
0x4358b6:	mov	r12, rax
0x4358b9:	call	0x43fbb0
0x4358be:	mov	rdx, r12
0x4358c1:	mov	edi, 2
0x4358c6:	mov	rsi, rax
0x4358c9:	call	0x403980
0x4358ce:	mov	edx, 1
0x4358d3:	mov	esi, 0x45b64d
0x4358d8:	mov	edi, 2
0x4358dd:	or	rbx, rax
0x4358e0:	call	0x403980
0x4358e5:	or	rbx, rax
0x4358e8:	js	0x435949
0x4358ea:	or	edi, 0xffffffff
0x4358ed:	jmp	0x404add
0x4358f2:	call	0x403e20
0x4358f7:	mov	r12d, dword ptr [rbx]
0x4358fa:	mov	qword ptr [rsp + 0x50], 0x45b299
0x435903:	mov	dword ptr [rsp + 0x58], r12d
0x435908:	jmp	0x4357ed
0x43590d:	mov	edi, dword ptr [rsp + 0x90]
0x435914:	mov	esi, 1
0x435919:	call	0x403a30
0x43591e:	test	eax, eax
0x435920:	js	0x404a5a
0x435926:	mov	edi, dword ptr [rsp + 0x90]
0x43592d:	call	0x403b00
0x435932:	test	eax, eax
0x435934:	jns	0x435770
0x43593a:	jmp	0x404a41
0x43593f:	jmp	0x40481b
0x435944:	jmp	0x4048a4
0x435949:	mov	edi, 0xfffffffe
0x43594e:	jmp	0x404add
0x435953:	jmp	0x4049c2
0x435958:	jmp	0x4049d3
0x43595d:	jmp	0x404811
0x435962:	jmp	0x404b23
0x435967:	nop	word ptr [rax + rax]
0x435970:	endbr64	
0x435974:	push	rbx
0x435975:	mov	rbx, rdi
0x435978:	test	esi, esi
0x43597a:	jne	0x404b7d
0x435980:	mov	rax, qword ptr [rdi]
0x435983:	mov	rdx, qword ptr [rax + 8]
0x435987:	mov	rdi, qword ptr [rdx + 0xc0]
0x43598e:	call	0x403a90
0x435993:	mov	edi, eax
0x435995:	call	0x403930
0x43599a:	test	eax, eax
0x43599c:	jne	0x404b8d
0x4359a2:	mov	eax, 0x7fffffff
0x4359a7:	mov	dword ptr [rbx + 0x78], eax
0x4359aa:	pop	rbx
0x4359ab:	ret	
0x4359ac:	nop	dword ptr [rax]
0x4359b0:	endbr64	
0x4359b4:	mov	dword ptr [rdi + 0x1078], 2
0x4359be:	mov	dword ptr [rdi + 0xbb8], 2
0x4359c8:	ret	
0x4359c9:	nop	dword ptr [rax]
0x4359d0:	endbr64	
0x4359d4:	push	r15
0x4359d6:	movsxd	rdi, edi
0x4359d9:	mov	eax, 0x45b2c3
0x4359de:	mov	r15d, 1
0x4359e4:	push	r14
0x4359e6:	movq	xmm0, rax
0x4359eb:	push	r13
0x4359ed:	mov	r13, rsi
0x4359f0:	push	r12
0x4359f2:	mov	r12, rdi
0x4359f5:	push	rbp
0x4359f6:	push	rbx
0x4359f7:	mov	ebx, 1
0x4359fc:	sub	rsp, 0x88
0x435a03:	mov	qword ptr [rsp + 0x10], rdx
0x435a08:	mov	edx, 0x45b2df
0x435a0d:	movhps	xmm0, qword ptr [rip + 0x88964]
0x435a14:	mov	dword ptr [rsp + 0x40], edi
0x435a18:	imul	rdi, rdi, 0x58
0x435a1c:	movq	xmm1, rdx
0x435a21:	movhps	xmm1, qword ptr [rip + 0x88958]
0x435a28:	mov	qword ptr [rsp + 0x18], rcx
0x435a2d:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x435a32:	movaps	xmmword ptr [rsp + 0x20], xmm1
0x435a37:	call	0x42db10
0x435a3c:	mov	rcx, qword ptr [r13]
0x435a40:	mov	qword ptr [rax], 0x827
0x435a47:	mov	qword ptr [rax + 8], 0
0x435a4f:	mov	qword ptr [rax + 0x10], rcx
0x435a53:	mov	qword ptr [rax + 0x18], rcx
0x435a57:	mov	qword ptr [rax + 0x40], 1
0x435a5f:	mov	qword ptr [rax + 0x20], rcx
0x435a63:	mov	qword ptr [rax + 0x28], 0
0x435a6b:	mov	qword ptr [rax + 0x30], 0
0x435a73:	mov	qword ptr [rax + 0x38], 0
0x435a7b:	mov	qword ptr [rax + 0x48], 1
0x435a83:	mov	dword ptr [rax + 0x50], 0
0x435a8a:	mov	qword ptr [rsp + 8], rax
0x435a8f:	cmp	r12d, ebx
0x435a92:	jbe	0x435b07
0x435a94:	mov	r14d, ebx
0x435a97:	mov	rbp, qword ptr [r13 + r14*8]
0x435a9c:	lea	r14d, [rbx + 1]
0x435aa0:	cmp	byte ptr [rbp], 0x2d
0x435aa4:	jne	0x435c8f
0x435aaa:	cmp	byte ptr [rbp + 1], 0
0x435aae:	je	0x435c8f
0x435ab4:	cmp	r12d, r14d
0x435ab7:	jbe	0x435ace
0x435ab9:	mov	esi, 0x45b312
0x435abe:	mov	rdi, rbp
0x435ac1:	call	0x403be0
0x435ac6:	test	eax, eax
0x435ac8:	je	0x404b97
0x435ace:	mov	esi, 0x45b31a
0x435ad3:	mov	rdi, rbp
0x435ad6:	lea	ebp, [r15 + 1]
0x435ada:	call	0x403be0
0x435adf:	mov	r10d, r15d
0x435ae2:	imul	rsi, r10, 0x58
0x435ae6:	test	eax, eax
0x435ae8:	je	0x404c22
0x435aee:	mov	r15d, ebx
0x435af1:	add	rsi, qword ptr [rsp + 8]
0x435af6:	lea	rdi, [r13 + r15*8]
0x435afb:	mov	r15d, ebp
0x435afe:	call	0x435d00
0x435b03:	add	ebx, eax
0x435b05:	jmp	0x435a8f
0x435b07:	mov	rbp, qword ptr [rsp + 8]
0x435b0c:	mov	rbx, qword ptr [rsp + 0x10]
0x435b11:	mov	r8d, r15d
0x435b14:	xor	r14d, r14d
0x435b17:	mov	rsi, qword ptr [rsp + 0x18]
0x435b1c:	imul	rdi, r8, 0x58
0x435b20:	mov	qword ptr [rbx], rbp
0x435b23:	xor	ebx, ebx
0x435b25:	mov	dword ptr [rsi], r15d
0x435b28:	call	0x42db10
0x435b2d:	mov	r9, rbp
0x435b30:	xor	r11d, r11d
0x435b33:	mov	r12, rax
0x435b36:	jmp	0x435b55
0x435b38:	mov	edx, ebx
0x435b3a:	mov	ecx, 0x16
0x435b3f:	mov	rsi, r9
0x435b42:	add	ebx, 1
0x435b45:	imul	rdi, rdx, 0x58
0x435b49:	add	rdi, r12
0x435b4c:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x435b4e:	mov	r11d, r8d
0x435b51:	add	r9, 0x58
0x435b55:	cmp	r15d, r11d
0x435b58:	je	0x435c4c
0x435b5e:	test	dword ptr [r9 + 0x50], 0xfffffffb
0x435b66:	jne	0x404c19
0x435b6c:	mov	rdi, qword ptr [r9]
0x435b6f:	cmp	edi, 0x3fa
0x435b75:	je	0x404c0d
0x435b7b:	lea	eax, [rdi - 0x824]
0x435b81:	lea	r8d, [r11 + 1]
0x435b85:	cmp	eax, 4
0x435b88:	jbe	0x435b38
0x435b8a:	cmp	edi, 0x822
0x435b90:	ja	0x404bf9
0x435b96:	mov	r13d, edi
0x435b99:	imul	r10, r13, 0x60
0x435b9d:	mov	esi, dword ptr [r10 + 0x48bad8]
0x435ba4:	add	r10, 0x48baa0
0x435bab:	test	esi, esi
0x435bad:	js	0x435b38
0x435baf:	test	byte ptr [r10 + 0x3e], 0x40
0x435bb4:	jne	0x435c34
0x435bb6:	add	r11d, 1
0x435bba:	imul	rdx, r11, 0x58
0x435bbe:	mov	r8, r11
0x435bc1:	mov	r13d, r11d
0x435bc4:	add	rdx, rbp
0x435bc7:	cmp	r15d, r13d
0x435bca:	je	0x435b38
0x435bd0:	test	dword ptr [rdx + 0x50], 0xfffffffb
0x435bd7:	jne	0x435c19
0x435bd9:	mov	rax, qword ptr [rdx]
0x435bdc:	cmp	eax, 0x822
0x435be1:	ja	0x435c19
0x435be3:	mov	ecx, eax
0x435be5:	imul	r10, rcx, 0x60
0x435be9:	mov	r11d, dword ptr [r10 + 0x48bad8]
0x435bf0:	test	r11d, r11d
0x435bf3:	js	0x435c19
0x435bf5:	test	byte ptr [r10 + 0x48bade], 0x40
0x435bfd:	jne	0x435c23
0x435bff:	mov	esi, eax
0x435c01:	cdqe	
0x435c03:	imul	rax, rax, 0x60
0x435c07:	mov	eax, dword ptr [rax + 0x48bad8]
0x435c0d:	cmp	edi, eax
0x435c0f:	je	0x435b4e
0x435c15:	cmp	esi, eax
0x435c17:	jne	0x435c01
0x435c19:	add	r13d, 1
0x435c1d:	add	rdx, 0x58
0x435c21:	jmp	0x435bc7
0x435c23:	cmp	byte ptr [r10 + 0x48bae0], 0
0x435c2b:	jns	0x435c19
0x435c2d:	cmp	r11d, eax
0x435c30:	je	0x435bff
0x435c32:	jmp	0x435c19
0x435c34:	cmp	byte ptr [r10 + 0x40], 0
0x435c39:	jns	0x435b38
0x435c3f:	cmp	esi, edi
0x435c41:	je	0x435bb6
0x435c47:	jmp	0x435b38
0x435c4c:	test	r14d, r14d
0x435c4f:	jne	0x404bc0
0x435c55:	mov	rdi, rbp
0x435c58:	call	0x403830
0x435c5d:	mov	r11d, ebx
0x435c60:	mov	rdi, r12
0x435c63:	imul	rsi, r11, 0x58
0x435c67:	call	0x42db80
0x435c6c:	mov	r12, qword ptr [rsp + 0x10]
0x435c71:	mov	r14, qword ptr [rsp + 0x18]
0x435c76:	mov	qword ptr [r12], rax
0x435c7a:	mov	dword ptr [r14], ebx
0x435c7d:	add	rsp, 0x88
0x435c84:	pop	rbx
0x435c85:	pop	rbp
0x435c86:	pop	r12
0x435c88:	pop	r13
0x435c8a:	pop	r14
0x435c8c:	pop	r15
0x435c8e:	ret	
0x435c8f:	mov	r14d, r15d
0x435c92:	mov	eax, 1
0x435c97:	add	r15d, 1
0x435c9b:	imul	r8, r14, 0x58
0x435c9f:	add	r8, qword ptr [rsp + 8]
0x435ca4:	add	ebx, eax
0x435ca6:	mov	qword ptr [r8], 0x828
0x435cad:	mov	qword ptr [r8 + 8], 0
0x435cb5:	mov	qword ptr [r8 + 0x10], rbp
0x435cb9:	mov	qword ptr [r8 + 0x18], rbp
0x435cbd:	mov	qword ptr [r8 + 0x40], 1
0x435cc5:	mov	qword ptr [r8 + 0x20], rbp
0x435cc9:	mov	qword ptr [r8 + 0x28], 0
0x435cd1:	mov	qword ptr [r8 + 0x30], 0
0x435cd9:	mov	qword ptr [r8 + 0x38], 0
0x435ce1:	mov	qword ptr [r8 + 0x48], 1
0x435ce9:	mov	dword ptr [r8 + 0x50], 0
0x435cf1:	jmp	0x435a8f
0x435cf6:	nop	word ptr cs:[rax + rax]
0x435d00:	push	r15
0x435d02:	xor	r15d, r15d
0x435d05:	push	r14
0x435d07:	xor	r14d, r14d
0x435d0a:	push	r13
0x435d0c:	mov	r13, rdi
0x435d0f:	push	r12
0x435d11:	mov	r12d, 0x48b860
0x435d17:	push	rbp
0x435d18:	push	rbx
0x435d19:	mov	rbx, rsi
0x435d1c:	mov	esi, 0x80000
0x435d21:	sub	rsp, 0x58
0x435d25:	mov	rdi, qword ptr [rdi]
0x435d28:	mov	qword ptr [rsp], rdi
0x435d2c:	add	rdi, 1
0x435d30:	mov	qword ptr [rsp + 0x30], rdi
0x435d35:	call	0x42dbc0
0x435d3a:	mov	dword ptr [rsp + 8], 0
0x435d42:	mov	r8d, 1
0x435d48:	mov	rcx, rbx
0x435d4b:	mov	rbp, rax
0x435d4e:	cmp	rbp, 0x824
0x435d55:	sete	r11b
0x435d59:	cmp	r15d, 0x11
0x435d5d:	setbe	al
0x435d60:	and	r11b, al
0x435d63:	jne	0x4361d1
0x435d69:	mov	rbx, rcx
0x435d6c:	cmp	rbp, 0x824
0x435d73:	je	0x436593
0x435d79:	imul	r15, rbp, 0x60
0x435d7d:	add	r15, 0x48baa0
0x435d84:	movzx	eax, byte ptr [r15 + 0x40]
0x435d89:	test	r8, r8
0x435d8c:	je	0x436318
0x435d92:	imul	rdx, rbp, 0x60
0x435d96:	mov	ecx, dword ptr [rsp + 8]
0x435d9a:	xor	esi, esi
0x435d9c:	mov	r10d, eax
0x435d9f:	lea	r12d, [rcx + 1]
0x435da3:	mov	ecx, dword ptr [rdx + 0x48badc]
0x435da9:	cmp	dword ptr [rdx + 0x48bae8], 4
0x435db0:	cmove	r8, rsi
0x435db4:	mov	r9, qword ptr [rdx + 0x48bab8]
0x435dbb:	mov	esi, eax
0x435dbd:	and	r10d, 1
0x435dc1:	mov	edi, ecx
0x435dc3:	and	esi, 1
0x435dc6:	mov	dword ptr [rsp + 0x10], r10d
0x435dcb:	and	edi, 0x400000
0x435dd1:	and	ecx, 0x800000
0x435dd7:	mov	qword ptr [rsp + 0x20], r9
0x435ddc:	je	0x43609b
0x435de2:	test	al, 0x20
0x435de4:	jne	0x43609b
0x435dea:	movzx	edx, byte ptr [rdx + 0x48bae0]
0x435df1:	shr	dl, 1
0x435df3:	and	edx, 3
0x435df6:	lea	r10d, [rdx + 1]
0x435dfa:	mov	dword ptr [rsp + 0x18], r10d
0x435dff:	test	edi, edi
0x435e01:	je	0x436325
0x435e07:	mov	r9d, 1
0x435e0d:	imul	rdi, rbp, 0x60
0x435e11:	mov	edx, dword ptr [rsp + 8]
0x435e15:	movsxd	r14, r14d
0x435e18:	movzx	esi, byte ptr [rdi + 0x48bad4]
0x435e1f:	lea	rcx, [rdi + 0x48baa0]
0x435e26:	lea	r14, [rsi + r14 + 1]
0x435e2b:	add	r14, qword ptr [r13 + rdx*8]
0x435e30:	cmp	byte ptr [r14], 0
0x435e34:	jne	0x4360ae
0x435e3a:	test	byte ptr [rcx + 0x41], 1
0x435e3e:	jne	0x4360ae
0x435e44:	test	r9b, r9b
0x435e47:	je	0x404cad
0x435e4d:	mov	r9d, r12d
0x435e50:	lea	edx, [rdx + 2]
0x435e53:	mov	r14, qword ptr [r13 + r9*8]
0x435e58:	test	r14, r14
0x435e5b:	je	0x404cad
0x435e61:	mov	r12d, edx
0x435e64:	imul	r10, rbp, 0x60
0x435e68:	movzx	edi, word ptr [r10 + 0x48bad0]
0x435e70:	cmp	di, 0x823
0x435e75:	jne	0x4360cc
0x435e7b:	mov	edi, dword ptr [r15 + 0x3c]
0x435e7f:	mov	esi, 0x80000
0x435e84:	mov	qword ptr [rsp + 0x28], r8
0x435e89:	call	0x4365f0
0x435e8e:	mov	r8, qword ptr [rsp + 0x28]
0x435e93:	test	al, al
0x435e95:	je	0x4361ba
0x435e9b:	mov	rdi, qword ptr [r15]
0x435e9e:	mov	esi, 0x45b375
0x435ea3:	mov	qword ptr [rsp + 0x28], r8
0x435ea8:	call	0x403be0
0x435ead:	mov	r8, qword ptr [rsp + 0x28]
0x435eb2:	test	eax, eax
0x435eb4:	je	0x4364de
0x435eba:	test	r14, r14
0x435ebd:	je	0x4361c4
0x435ec3:	movzx	eax, byte ptr [r15 + 0x41]
0x435ec8:	mov	qword ptr [rsp], r14
0x435ecc:	test	al, 8
0x435ece:	jne	0x404e89
0x435ed4:	test	al, 6
0x435ed6:	jne	0x43645b
0x435edc:	cmp	dword ptr [r15 + 0x48], 6
0x435ee1:	je	0x436385
0x435ee7:	movq	xmm1, qword ptr [rsp + 0x20]
0x435eed:	mov	eax, dword ptr [rsp + 0x10]
0x435ef1:	mov	qword ptr [rbx], rbp
0x435ef4:	mov	qword ptr [rbx + 0x48], r8
0x435ef8:	movhps	xmm1, qword ptr [rsp]
0x435efc:	mov	dword ptr [rbx + 0x50], eax
0x435eff:	movups	xmmword ptr [rbx + 8], xmm1
0x435f03:	cmp	rbp, 0x824
0x435f0a:	je	0x4365de
0x435f10:	lea	r14d, [r12 - 1]
0x435f15:	cmp	r14d, 3
0x435f19:	ja	0x404d8a
0x435f1f:	mov	r11d, r12d
0x435f22:	mov	qword ptr [rsp + 0x20], r8
0x435f27:	xor	edi, edi
0x435f29:	xor	r15d, r15d
0x435f2c:	mov	qword ptr [rsp + 0x28], r11
0x435f31:	mov	qword ptr [rbx + 0x40], r11
0x435f35:	mov	dword ptr [rsp + 0x10], r14d
0x435f3a:	mov	r14, r13
0x435f3d:	mov	r13, rbx
0x435f40:	mov	rbx, rdi
0x435f43:	cmp	r12d, ebx
0x435f46:	ja	0x436068
0x435f4c:	mov	qword ptr [r13 + rbx*8 + 0x20], 0
0x435f55:	add	rbx, 1
0x435f59:	cmp	rbx, 4
0x435f5d:	jne	0x435f43
0x435f5f:	lea	rax, [rbp - 0x824]
0x435f66:	mov	rbx, r13
0x435f69:	mov	r9, qword ptr [rsp + 0x20]
0x435f6e:	mov	r13, r14
0x435f71:	mov	r14d, dword ptr [rsp + 0x10]
0x435f76:	cmp	rax, 2
0x435f7a:	jbe	0x435f99
0x435f7c:	mov	rsi, qword ptr [rsp]
0x435f80:	mov	rcx, rbx
0x435f83:	mov	rdx, r9
0x435f86:	mov	rdi, rbp
0x435f89:	call	0x436620
0x435f8e:	cmp	dword ptr [rsp + 0x18], 1
0x435f93:	ja	0x404d3c
0x435f99:	mov	rax, qword ptr [rip + 0xb0160]
0x435fa0:	mov	r8, rax
0x435fa3:	sub	r8, qword ptr [rip + 0xb014e]
0x435faa:	cmp	r8, r15
0x435fad:	jb	0x404f37
0x435fb3:	mov	r9, qword ptr [rip + 0xb013e]
0x435fba:	mov	rbp, qword ptr [rip + 0xb012f]
0x435fc1:	add	r9, r15
0x435fc4:	cmp	r9, rbp
0x435fc7:	je	0x404e7d
0x435fcd:	mov	r15, qword ptr [rip + 0xb013c]
0x435fd4:	mov	rdx, rax
0x435fd7:	sub	rdx, qword ptr [rip + 0xb010a]
0x435fde:	add	r9, r15
0x435fe1:	not	r15
0x435fe4:	and	r9, r15
0x435fe7:	mov	r10, r9
0x435fea:	sub	r10, qword ptr [rip + 0xb00f7]
0x435ff1:	cmp	r10, rdx
0x435ff4:	cmova	r9, rax
0x435ff8:	xor	r15d, r15d
0x435ffb:	movq	xmm2, r9
0x436000:	punpcklqdq	xmm2, xmm2
0x436004:	movaps	xmmword ptr [rip + 0xb00e5], xmm2
0x43600b:	mov	qword ptr [rbx + 0x18], rbp
0x43600f:	mov	rbx, qword ptr [r13 + r15*8]
0x436014:	mov	rdi, rbx
0x436017:	mov	qword ptr [rsp], rbx
0x43601b:	call	0x4039e0
0x436020:	mov	rbx, rax
0x436023:	test	rax, rax
0x436026:	je	0x404d2d
0x43602c:	mov	rsi, qword ptr [rsp]
0x436030:	mov	rdx, rax
0x436033:	mov	rdi, rbp
0x436036:	call	0x403c60
0x43603b:	add	rbx, rbp
0x43603e:	cmp	r14d, r15d
0x436041:	setne	cl
0x436044:	add	r15, 1
0x436048:	lea	rbp, [rbx + 1]
0x43604c:	shl	ecx, 5
0x43604f:	mov	byte ptr [rbx], cl
0x436051:	cmp	r12d, r15d
0x436054:	ja	0x43600f
0x436056:	add	rsp, 0x58
0x43605a:	mov	eax, r12d
0x43605d:	pop	rbx
0x43605e:	pop	rbp
0x43605f:	pop	r12
0x436061:	pop	r13
0x436063:	pop	r14
0x436065:	pop	r15
0x436067:	ret	
0x436068:	xor	r8d, r8d
0x43606b:	cmp	rbp, 0x824
0x436072:	je	0x43658a
0x436078:	mov	qword ptr [r13 + rbx*8 + 0x20], r8
0x43607d:	mov	rdi, qword ptr [r14 + rbx*8]
0x436081:	call	0x4039e0
0x436086:	test	rax, rax
0x436089:	je	0x404d80
0x43608f:	add	rax, 1
0x436093:	add	r15, rax
0x436096:	jmp	0x435f55
0x43609b:	test	edi, edi
0x43609d:	jne	0x436308
0x4360a3:	mov	dword ptr [rsp + 0x18], 0
0x4360ab:	xor	r14d, r14d
0x4360ae:	imul	rcx, rbp, 0x60
0x4360b2:	movzx	edi, word ptr [rcx + 0x48bad0]
0x4360b9:	cmp	di, 0x823
0x4360be:	je	0x435e7b
0x4360c4:	test	al, 8
0x4360c6:	jne	0x435e7b
0x4360cc:	lea	rsi, [rdi - 0x825]
0x4360d3:	cmp	rsi, 1
0x4360d7:	jbe	0x404faf
0x4360dd:	imul	r9, rdi, 0x60
0x4360e1:	cmp	word ptr [r9 + 0x48bad0], 0x823
0x4360eb:	lea	r15, [r9 + 0x48baa0]
0x4360f2:	jne	0x404fec
0x4360f8:	imul	rbp, rbp, 0x60
0x4360fc:	mov	rdx, qword ptr [rbp + 0x48bac8]
0x436103:	add	rbp, 0x48baa0
0x43610a:	mov	r10, qword ptr [rbp + 0x20]
0x43610e:	test	rdx, rdx
0x436111:	jne	0x4364b8
0x436117:	test	r10, r10
0x43611a:	jne	0x436432
0x436120:	test	al, 0x10
0x436122:	jne	0x404dc6
0x436128:	test	r8, r8
0x43612b:	je	0x40502b
0x436131:	imul	rcx, rdi, 0x60
0x436135:	add	rcx, 0x48baa0
0x43613c:	mov	eax, dword ptr [rcx + 0x3c]
0x43613f:	test	eax, 0x800000
0x436144:	jne	0x405015
0x43614a:	shr	eax, 0x16
0x43614d:	and	eax, 1
0x436150:	cmp	dword ptr [rsp + 0x18], 1
0x436155:	ja	0x405072
0x43615b:	imul	rsi, rdi, 0x60
0x43615f:	test	byte ptr [rsi + 0x48bae0], 6
0x436166:	jne	0x405072
0x43616c:	test	byte ptr [rsp + 0x10], 2
0x436171:	jne	0x43618d
0x436173:	test	al, al
0x436175:	jne	0x436366
0x43617b:	test	r11b, r11b
0x43617e:	jne	0x436366
0x436184:	test	r14, r14
0x436187:	jne	0x4050a5
0x43618d:	imul	r10, rdi, 0x60
0x436191:	mov	rcx, qword ptr [r10 + 0x48bab8]
0x436198:	test	rcx, rcx
0x43619b:	jne	0x404dd9
0x4361a1:	imul	rax, rdi, 0x60
0x4361a5:	mov	rbp, rdi
0x4361a8:	test	byte ptr [rax + 0x48bae0], 1
0x4361af:	je	0x435e7b
0x4361b5:	jmp	0x404dcf
0x4361ba:	or	dword ptr [rsp + 0x10], 4
0x4361bf:	jmp	0x435eba
0x4361c4:	mov	qword ptr [rsp], 0
0x4361cc:	jmp	0x435ee7
0x4361d1:	mov	rbp, qword ptr [r12]
0x4361d5:	mov	rsi, qword ptr [r12 + 8]
0x4361da:	mov	byte ptr [rsp + 0x18], r11b
0x4361df:	mov	qword ptr [rsp + 0x10], rcx
0x4361e4:	mov	rdi, rbp
0x4361e7:	mov	qword ptr [rsp + 8], rsi
0x4361ec:	call	0x4039e0
0x4361f1:	mov	rdi, qword ptr [rsp]
0x4361f5:	mov	rsi, rbp
0x4361f8:	mov	rdx, rax
0x4361fb:	mov	rbx, rax
0x4361fe:	call	0x4038d0
0x436203:	mov	r9, qword ptr [rsp + 8]
0x436208:	movzx	r11d, byte ptr [r12 + 0x19]
0x43620e:	mov	rcx, qword ptr [rsp + 0x10]
0x436213:	movzx	edi, byte ptr [rsp + 0x18]
0x436218:	xor	r11d, 1
0x43621c:	test	r9, r9
0x43621f:	movzx	r8d, r11b
0x436223:	jne	0x436570
0x436229:	mov	dword ptr [rsp + 8], 0
0x436231:	mov	ebp, 0x824
0x436236:	test	eax, eax
0x436238:	jne	0x4362fb
0x43623e:	xor	eax, eax
0x436240:	mov	rdx, qword ptr [r13 + rax*8]
0x436245:	cmp	byte ptr [r12 + 0x18], 0
0x43624b:	lea	rsi, [rdx + rbx]
0x43624f:	jne	0x404e5a
0x436255:	mov	r14, qword ptr [r12 + 0x10]
0x43625a:	mov	qword ptr [rsp + 0x28], r8
0x43625f:	mov	qword ptr [rsp + 0x18], rdx
0x436264:	mov	rdi, r14
0x436267:	mov	qword ptr [rsp + 0x20], rsi
0x43626c:	mov	qword ptr [rsp + 0x38], rcx
0x436271:	mov	qword ptr [rsp + 0x10], r14
0x436276:	mov	r14d, ebx
0x436279:	call	0x4039e0
0x43627e:	mov	rdi, qword ptr [rsp + 0x18]
0x436283:	mov	rbp, rax
0x436286:	call	0x4039e0
0x43628b:	sub	r14d, ebp
0x43628e:	movsxd	rcx, r14d
0x436291:	lea	rdi, [rax + 1]
0x436295:	mov	qword ptr [rsp + 0x18], rax
0x43629a:	sub	rdi, rcx
0x43629d:	call	0x42db10
0x4362a2:	mov	rsi, qword ptr [rsp + 0x10]
0x4362a7:	mov	rdx, rbp
0x4362aa:	mov	rdi, rax
0x4362ad:	call	0x403c60
0x4362b2:	mov	r11, qword ptr [rsp + 0x18]
0x4362b7:	mov	rsi, qword ptr [rsp + 0x20]
0x4362bc:	lea	rdi, [rax + rbp]
0x4362c0:	mov	qword ptr [rsp + 0x10], rax
0x4362c5:	sub	r11, rbx
0x4362c8:	lea	rdx, [r11 + 1]
0x4362cc:	call	0x403c60
0x4362d1:	mov	rbx, qword ptr [rsp + 0x10]
0x4362d6:	mov	esi, 0x80000
0x4362db:	lea	rdi, [rbx + 1]
0x4362df:	call	0x42dbc0
0x4362e4:	mov	rdi, qword ptr [rsp + 0x10]
0x4362e9:	mov	rbp, rax
0x4362ec:	call	0x403830
0x4362f1:	mov	rcx, qword ptr [rsp + 0x38]
0x4362f6:	mov	r8, qword ptr [rsp + 0x28]
0x4362fb:	add	r15d, 1
0x4362ff:	add	r12, 0x20
0x436303:	jmp	0x435d4e
0x436308:	mov	dword ptr [rsp + 0x18], 0
0x436310:	xor	r9d, r9d
0x436313:	jmp	0x435e0d
0x436318:	test	al, al
0x43631a:	jns	0x435d92
0x436320:	jmp	0x404e4f
0x436325:	mov	edi, dword ptr [rsp + 8]
0x436329:	mov	ecx, r12d
0x43632c:	xor	edx, edx
0x43632e:	mov	r14, qword ptr [r13 + rcx*8]
0x436333:	lea	r9, [r13 + rdi*8]
0x436338:	cmp	qword ptr [r9 + rdx*8 + 8], 0
0x43633e:	mov	r10d, edx
0x436341:	je	0x404e6d
0x436347:	lea	r10d, [rdx + 1]
0x43634b:	add	rdx, 1
0x43634f:	cmp	dword ptr [rsp + 0x18], edx
0x436353:	ja	0x436338
0x436355:	add	r12d, r10d
0x436358:	test	r14, r14
0x43635b:	jne	0x435e64
0x436361:	jmp	0x404cad
0x436366:	imul	rdx, rdi, 0x60
0x43636a:	test	byte ptr [rdx + 0x48bae1], 1
0x436371:	jne	0x404dff
0x436377:	test	r14, r14
0x43637a:	jne	0x43618d
0x436380:	jmp	0x404deb
0x436385:	movzx	r15d, word ptr [r15 + 0x44]
0x43638a:	cmp	r8, 1
0x43638e:	jne	0x404f9b
0x436394:	imul	r9, r15, 0x30
0x436398:	mov	qword ptr [rsp + 0x38], r8
0x43639d:	mov	r14, qword ptr [rsp]
0x4363a1:	xor	r15d, r15d
0x4363a4:	mov	qword ptr [rsp + 0x30], rbx
0x4363a9:	mov	r10, qword ptr [r9 + 0x48ad70]
0x4363b0:	mov	qword ptr [rsp + 0x28], r10
0x4363b5:	mov	r8, qword ptr [rsp + 0x28]
0x4363ba:	mov	ebx, r15d
0x4363bd:	shl	rbx, 4
0x4363c1:	lea	rbx, [r8 + rbx]
0x4363c5:	mov	rsi, qword ptr [rbx]
0x4363c8:	test	rsi, rsi
0x4363cb:	je	0x404db2
0x4363d1:	mov	rdi, r14
0x4363d4:	call	0x403be0
0x4363d9:	test	eax, eax
0x4363db:	je	0x4363e3
0x4363dd:	add	r15d, 1
0x4363e1:	jmp	0x4363b5
0x4363e3:	mov	rcx, rbx
0x4363e6:	mov	rdi, qword ptr [rsp + 0x28]
0x4363eb:	lea	rsi, [rsp + 0x48]
0x4363f0:	mov	rbx, qword ptr [rsp + 0x30]
0x4363f5:	movsxd	r11, dword ptr [rcx + 8]
0x4363f9:	mov	ecx, 0x80000
0x4363fe:	mov	qword ptr [rsp + 0x48], 0
0x436407:	mov	rdx, r11
0x43640a:	mov	qword ptr [rsp + 0x30], r11
0x43640f:	call	0x436bc0
0x436414:	mov	r8, qword ptr [rsp + 0x30]
0x436419:	test	al, al
0x43641b:	jne	0x4365e9
0x436421:	cmp	qword ptr [rsp + 0x48], 0
0x436427:	jne	0x435ee7
0x43642d:	jmp	0x405050
0x436432:	sub	r8, 1
0x436436:	jne	0x404e3b
0x43643c:	test	r14, r14
0x43643f:	jne	0x404e13
0x436445:	test	al, 0x10
0x436447:	jne	0x4050d5
0x43644d:	mov	r14, r10
0x436450:	mov	r8d, 1
0x436456:	jmp	0x436131
0x43645b:	mov	rdi, qword ptr [rsp]
0x43645f:	mov	dword ptr [rsp + 0x48], 0
0x436467:	cmp	byte ptr [rdi], 0
0x43646a:	je	0x40512f
0x436470:	shr	al, 4
0x436473:	lea	rsi, [rsp + 0x48]
0x436478:	mov	edx, eax
0x43647a:	and	edx, 1
0x43647d:	call	0x436b20
0x436482:	cmp	dword ptr [rsp + 0x48], 0
0x436487:	mov	r8, rax
0x43648a:	jne	0x405125
0x436490:	movsxd	rsi, dword ptr [r15 + 0x5c]
0x436494:	cmp	esi, -1
0x436497:	je	0x435edc
0x43649d:	movsxd	rdx, dword ptr [r15 + 0x58]
0x4364a1:	cmp	rdx, r8
0x4364a4:	jg	0x40500b
0x4364aa:	cmp	rsi, r8
0x4364ad:	jge	0x435edc
0x4364b3:	jmp	0x40500b
0x4364b8:	test	r10, r10
0x4364bb:	je	0x405111
0x4364c1:	test	r14, r14
0x4364c4:	jne	0x4050fd
0x4364ca:	test	al, 0x10
0x4364cc:	jne	0x4050e9
0x4364d2:	test	r8, r8
0x4364d5:	cmove	r10, rdx
0x4364d9:	jmp	0x43644d
0x4364de:	mov	rdi, qword ptr [rsp + 0x30]
0x4364e3:	mov	esi, 0x2c
0x4364e8:	call	0x403a40
0x4364ed:	mov	r8, qword ptr [rsp + 0x28]
0x4364f2:	test	rax, rax
0x4364f5:	jne	0x435eba
0x4364fb:	mov	rdi, qword ptr [rsp]
0x4364ff:	mov	qword ptr [rsp + 0x30], r8
0x436504:	add	rdi, 7
0x436508:	call	0x42db40
0x43650d:	mov	esi, 0x80000
0x436512:	mov	byte ptr [rax], 0x57
0x436515:	mov	rdi, rax
0x436518:	mov	qword ptr [rsp + 0x28], rax
0x43651d:	call	0x42dbc0
0x436522:	mov	rdi, qword ptr [rsp + 0x28]
0x436527:	mov	qword ptr [rsp], rax
0x43652b:	call	0x403830
0x436530:	mov	rdi, qword ptr [rsp]
0x436534:	mov	r8, qword ptr [rsp + 0x30]
0x436539:	cmp	rdi, 0x824
0x436540:	je	0x435eba
0x436546:	mov	qword ptr [rsp], r8
0x43654a:	imul	r8, rdi, 0x60
0x43654e:	mov	esi, 0x80000
0x436553:	mov	edi, dword ptr [r8 + 0x48badc]
0x43655a:	call	0x4365f0
0x43655f:	mov	r8, qword ptr [rsp]
0x436563:	test	al, al
0x436565:	jne	0x435eba
0x43656b:	jmp	0x404f50
0x436570:	mov	dword ptr [rsp + 8], 1
0x436578:	mov	ebp, 0x824
0x43657d:	test	eax, eax
0x43657f:	jne	0x4362fb
0x436585:	jmp	0x404cba
0x43658a:	mov	r8, qword ptr [r14 + rbx*8]
0x43658e:	jmp	0x436078
0x436593:	mov	dword ptr [rsp + 8], 0
0x43659b:	mov	r8d, 1
0x4365a1:	xor	r12d, r12d
0x4365a4:	mov	rbp, qword ptr [rsp]
0x4365a8:	mov	qword ptr [rbx], 0x824
0x4365af:	mov	qword ptr [rbx + 0x48], r8
0x4365b3:	mov	qword ptr [rbx + 0x10], rbp
0x4365b7:	mov	dword ptr [rbx + 0x50], r12d
0x4365bb:	mov	qword ptr [rbx + 8], 0
0x4365c3:	mov	dword ptr [rsp + 0x18], 0
0x4365cb:	mov	r12d, 1
0x4365d1:	mov	ebp, 0x824
0x4365d6:	xor	r14d, r14d
0x4365d9:	jmp	0x435f1f
0x4365de:	sub	r12d, 1
0x4365e2:	je	0x4365cb
0x4365e4:	jmp	0x404d19
0x4365e9:	jmp	0x405064
0x4365ee:	nop	
0x4365f0:	xor	eax, eax
0x4365f2:	and	esi, edi
0x4365f4:	jne	0x4365f7
0x4365f6:	ret	
0x4365f7:	mov	eax, 1
0x4365fc:	test	edi, 0x100000
0x436602:	je	0x4365f6
0x436604:	and	edi, 0x83fff
0x43660a:	jne	0x405274
0x436610:	ret	
0x436611:	nop	word ptr cs:[rax + rax]
0x43661c:	nop	dword ptr [rax]
0x436620:	push	r14
0x436622:	imul	rax, rdi, 0x60
0x436626:	push	r13
0x436628:	mov	r13, rsi
0x43662b:	push	r12
0x43662d:	mov	r12, rdi
0x436630:	push	rbp
0x436631:	push	rbx
0x436632:	mov	rbx, rcx
0x436635:	sub	rsp, 0x10
0x436639:	mov	rbp, qword ptr [rax + 0x48baa0]
0x436640:	test	rdx, rdx
0x436643:	je	0x4366d3
0x436649:	pxor	xmm1, xmm1
0x43664d:	mov	r8d, 1
0x436653:	movups	xmmword ptr [rbx + 0x30], xmm1
0x436657:	test	r13, r13
0x43665a:	jne	0x43667f
0x43665c:	movq	xmm2, rbp
0x436661:	movq	xmm3, r13
0x436666:	mov	qword ptr [rbx + 0x40], r8
0x43666a:	punpcklqdq	xmm2, xmm3
0x43666e:	movups	xmmword ptr [rbx + 0x20], xmm2
0x436672:	add	rsp, 0x10
0x436676:	pop	rbx
0x436677:	pop	rbp
0x436678:	pop	r12
0x43667a:	pop	r13
0x43667c:	pop	r14
0x43667e:	ret	
0x43667f:	imul	r12, r12, 0x60
0x436683:	mov	r14d, dword ptr [r12 + 0x48badc]
0x43668b:	add	r12, 0x48baa0
0x436692:	test	r14d, 0x800000
0x436699:	je	0x4366a9
0x43669b:	mov	r8d, 2
0x4366a1:	test	byte ptr [r12 + 0x40], 8
0x4366a7:	je	0x43665c
0x4366a9:	and	r14d, 0x400000
0x4366b0:	je	0x40527e
0x4366b6:	mov	rsi, r13
0x4366b9:	mov	rdi, rbp
0x4366bc:	xor	edx, edx
0x4366be:	xor	eax, eax
0x4366c0:	call	0x4367b0
0x4366c5:	xor	r13d, r13d
0x4366c8:	mov	r8d, 1
0x4366ce:	mov	rbp, rax
0x4366d1:	jmp	0x43665c
0x4366d3:	cmp	byte ptr [rax + 0x48bae0], 0
0x4366da:	js	0x436649
0x4366e0:	movzx	edx, byte ptr [rbp + 1]
0x4366e4:	lea	rsi, [rax + 0x48baa0]
0x4366eb:	lea	ecx, [rdx - 0x57]
0x4366ee:	cmp	cl, 0x16
0x4366f1:	ja	0x436649
0x4366f7:	mov	rax, 0xffffffffffbe7ffe
0x4366fe:	sar	rax, cl
0x436701:	test	al, 1
0x436703:	jne	0x436649
0x436709:	movzx	edi, byte ptr [rsi + 0x34]
0x43670d:	mov	r9, qword ptr [rip + 0xaf9ec]
0x436714:	lea	r14, [rdi + 5]
0x436718:	mov	r8, r9
0x43671b:	sub	r8, qword ptr [rip + 0xaf9d6]
0x436722:	mov	rcx, rdi
0x436725:	cmp	r14, r8
0x436728:	ja	0x40529e
0x43672e:	mov	r10, qword ptr [rip + 0xaf9bb]
0x436735:	add	r14, qword ptr [rip + 0xaf9bc]
0x43673c:	cmp	r14, r10
0x43673f:	je	0x405292
0x436745:	mov	r11, qword ptr [rip + 0xaf9c4]
0x43674c:	mov	rsi, r9
0x43674f:	lea	rdi, [r10 + 5]
0x436753:	sub	rsi, qword ptr [rip + 0xaf98e]
0x43675a:	add	r14, r11
0x43675d:	not	r11
0x436760:	and	r14, r11
0x436763:	mov	rdx, r14
0x436766:	sub	rdx, qword ptr [rip + 0xaf97b]
0x43676d:	cmp	rdx, rsi
0x436770:	lea	rsi, [rbp + 2]
0x436774:	cmova	r14, r9
0x436778:	movq	xmm0, r14
0x43677d:	punpcklqdq	xmm0, xmm0
0x436781:	movaps	xmmword ptr [rip + 0xaf968], xmm0
0x436788:	mov	byte ptr [r10], 0x2d
0x43678c:	movzx	eax, byte ptr [rbp + 1]
0x436790:	mov	rbp, r10
0x436793:	mov	word ptr [r10 + 2], 0x6f6e
0x43679a:	mov	byte ptr [r10 + 1], al
0x43679e:	mov	byte ptr [r10 + 4], 0x2d
0x4367a3:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x4367a5:	jmp	0x436649
0x4367aa:	nop	word ptr [rax + rax]
0x4367b0:	push	r13
0x4367b2:	push	r12
0x4367b4:	push	rbp
0x4367b5:	mov	rbp, rdi
0x4367b8:	push	rbx
0x4367b9:	sub	rsp, 0xd8
0x4367c0:	mov	qword ptr [rsp + 0x28], rsi
0x4367c5:	mov	qword ptr [rsp + 0x30], rdx
0x4367ca:	mov	qword ptr [rsp + 0x38], rcx
0x4367cf:	mov	qword ptr [rsp + 0x40], r8
0x4367d4:	mov	qword ptr [rsp + 0x48], r9
0x4367d9:	test	al, al
0x4367db:	je	0x436814
0x4367dd:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x4367e2:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x4367e7:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x4367ec:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x4367f4:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x4367fc:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x436804:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x43680c:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x436814:	lea	rax, [rsp + 0x100]
0x43681c:	lea	rdx, [rsp + 0x20]
0x436821:	mov	rdi, rbp
0x436824:	mov	dword ptr [rsp], 8
0x43682b:	mov	dword ptr [rsp + 4], 0x30
0x436833:	xor	r12d, r12d
0x436836:	mov	qword ptr [rsp + 8], rax
0x43683b:	mov	qword ptr [rsp + 0x10], rdx
0x436840:	test	rdi, rdi
0x436843:	je	0x43687a
0x436845:	call	0x4039e0
0x43684a:	mov	ecx, dword ptr [rsp]
0x43684d:	add	r12, rax
0x436850:	cmp	ecx, 0x2f
0x436853:	ja	0x43686a
0x436855:	mov	edx, ecx
0x436857:	add	ecx, 8
0x43685a:	lea	rsi, [rsp + 0x20]
0x43685f:	mov	dword ptr [rsp], ecx
0x436862:	add	rdx, rsi
0x436865:	mov	rdi, qword ptr [rdx]
0x436868:	jmp	0x436840
0x43686a:	mov	rdx, qword ptr [rsp + 8]
0x43686f:	lea	rdi, [rdx + 8]
0x436873:	mov	qword ptr [rsp + 8], rdi
0x436878:	jmp	0x436865
0x43687a:	mov	rsi, qword ptr [rip + 0xaf87f]
0x436881:	add	r12, 1
0x436885:	mov	rcx, rsi
0x436888:	sub	rcx, qword ptr [rip + 0xaf869]
0x43688f:	cmp	r12, rcx
0x436892:	ja	0x4052c1
0x436898:	mov	r13, qword ptr [rip + 0xaf851]
0x43689f:	add	r12, qword ptr [rip + 0xaf852]
0x4368a6:	cmp	r12, r13
0x4368a9:	je	0x4052da
0x4368af:	mov	rdi, qword ptr [rip + 0xaf85a]
0x4368b6:	mov	r9, rsi
0x4368b9:	sub	r9, qword ptr [rip + 0xaf828]
0x4368c0:	lea	rbx, [rsp + 0x100]
0x4368c8:	lea	r10, [rsp + 0x20]
0x4368cd:	mov	dword ptr [rsp], 8
0x4368d4:	add	r12, rdi
0x4368d7:	not	rdi
0x4368da:	mov	qword ptr [rsp + 8], rbx
0x4368df:	and	r12, rdi
0x4368e2:	mov	dword ptr [rsp + 4], 0x30
0x4368ea:	mov	r8, r12
0x4368ed:	sub	r8, qword ptr [rip + 0xaf7f4]
0x4368f4:	mov	qword ptr [rsp + 0x10], r10
0x4368f9:	cmp	r8, r9
0x4368fc:	cmova	r12, rsi
0x436900:	movq	xmm0, r12
0x436905:	mov	r12, r13
0x436908:	punpcklqdq	xmm0, xmm0
0x43690c:	movaps	xmmword ptr [rip + 0xaf7dd], xmm0
0x436913:	test	rbp, rbp
0x436916:	je	0x43695f
0x436918:	mov	rdi, rbp
0x43691b:	call	0x4039e0
0x436920:	mov	rsi, rbp
0x436923:	mov	rdi, r12
0x436926:	mov	rdx, rax
0x436929:	mov	rbx, rax
0x43692c:	call	0x403c60
0x436931:	mov	ebp, dword ptr [rsp]
0x436934:	add	r12, rbx
0x436937:	cmp	ebp, 0x2f
0x43693a:	ja	0x43694f
0x43693c:	mov	r11d, ebp
0x43693f:	add	ebp, 8
0x436942:	add	r11, qword ptr [rsp + 0x10]
0x436947:	mov	dword ptr [rsp], ebp
0x43694a:	mov	rbp, qword ptr [r11]
0x43694d:	jmp	0x436913
0x43694f:	mov	r11, qword ptr [rsp + 8]
0x436954:	lea	rax, [r11 + 8]
0x436958:	mov	qword ptr [rsp + 8], rax
0x43695d:	jmp	0x43694a
0x43695f:	mov	byte ptr [r12], 0
0x436964:	add	rsp, 0xd8
0x43696b:	mov	rax, r13
0x43696e:	pop	rbx
0x43696f:	pop	rbp
0x436970:	pop	r12
0x436972:	pop	r13
0x436974:	ret	
0x436975:	nop	word ptr cs:[rax + rax]
0x436980:	endbr64	
0x436984:	push	r15
0x436986:	push	r14
0x436988:	push	r13
0x43698a:	push	r12
0x43698c:	push	rbp
0x43698d:	mov	rbp, rdi
0x436990:	push	rbx
0x436991:	sub	rsp, 0x18
0x436995:	cmp	qword ptr [rip + 0xaf73b], 0
0x43699d:	jne	0x436a62
0x4369a3:	mov	edi, 0x45b398
0x4369a8:	call	0x403800
0x4369ad:	xor	esi, esi
0x4369af:	mov	rdi, rax
0x4369b2:	call	0x436c40
0x4369b7:	mov	edi, 0x45b39f
0x4369bc:	mov	r12, rax
0x4369bf:	call	0x403800
0x4369c4:	mov	rsi, r12
0x4369c7:	mov	rdi, rax
0x4369ca:	call	0x436c40
0x4369cf:	mov	edi, 0x45b3a3
0x4369d4:	mov	rbx, rax
0x4369d7:	call	0x403800
0x4369dc:	mov	rsi, rbx
0x4369df:	mov	rdi, rax
0x4369e2:	call	0x436c40
0x4369e7:	mov	edi, 0x45b3a8
0x4369ec:	mov	rsi, rax
0x4369ef:	call	0x436c40
0x4369f4:	mov	edi, 0x48ad38
0x4369f9:	mov	rsi, rax
0x4369fc:	call	0x436c40
0x436a01:	mov	edi, 0x48ad28
0x436a06:	mov	rsi, rax
0x436a09:	call	0x436c40
0x436a0e:	mov	edi, 0x48ad20
0x436a13:	mov	rsi, rax
0x436a16:	call	0x436c40
0x436a1b:	mov	r13, rax
0x436a1e:	test	rax, rax
0x436a21:	je	0x4052e6
0x436a27:	mov	rdi, r13
0x436a2a:	call	0x4039e0
0x436a2f:	lea	edi, [rax + 2]
0x436a32:	mov	r14, rax
0x436a35:	call	0x42db10
0x436a3a:	lea	rdx, [r14 + 1]
0x436a3e:	mov	rsi, r13
0x436a41:	mov	rdi, rax
0x436a44:	call	0x403c60
0x436a49:	lea	edx, [r14 + 1]
0x436a4d:	mov	rcx, rax
0x436a50:	mov	eax, r14d
0x436a53:	mov	byte ptr [rcx + rax], 0x2f
0x436a57:	mov	qword ptr [rip + 0xaf67a], rcx
0x436a5e:	mov	byte ptr [rcx + rdx], 0
0x436a62:	mov	r15, qword ptr [rip + 0xaf66f]
0x436a69:	test	rbp, rbp
0x436a6c:	je	0x436b15
0x436a72:	mov	rdi, r15
0x436a75:	call	0x4039e0
0x436a7a:	mov	rdi, rbp
0x436a7d:	mov	r13, rax
0x436a80:	call	0x4039e0
0x436a85:	movsxd	r14, r13d
0x436a88:	movsxd	rsi, eax
0x436a8b:	mov	rbx, rax
0x436a8e:	mov	dword ptr [rsp + 0xc], eax
0x436a92:	lea	rdi, [r14 + rsi + 9]
0x436a97:	call	0x42db10
0x436a9c:	lea	rdx, [r13 + 1]
0x436aa0:	mov	rsi, r15
0x436aa3:	mov	r12, rax
0x436aa6:	mov	rdi, rax
0x436aa9:	call	0x403c60
0x436aae:	lea	r9, [r12 + r14]
0x436ab2:	lea	rdi, [r12 + r14 + 2]
0x436ab7:	mov	esi, 0x45b277
0x436abc:	mov	word ptr [r9], 0x6363
0x436ac2:	mov	ecx, 7
0x436ac7:	lea	rdx, [rbx + 1]
0x436acb:	mov	byte ptr [r9 + 2], 0
0x436ad0:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x436ad2:	lea	rdi, [r12 + r14 + 8]
0x436ad7:	mov	rsi, rbp
0x436ada:	call	0x403c60
0x436adf:	mov	esi, dword ptr [rsp + 0xc]
0x436ae3:	mov	rdi, r12
0x436ae6:	call	0x4037f0
0x436aeb:	mov	edi, eax
0x436aed:	cmp	eax, -1
0x436af0:	je	0x4052f6
0x436af6:	call	0x403b00
0x436afb:	test	eax, eax
0x436afd:	jne	0x4052f1
0x436b03:	add	rsp, 0x18
0x436b07:	mov	rax, r12
0x436b0a:	pop	rbx
0x436b0b:	pop	rbp
0x436b0c:	pop	r12
0x436b0e:	pop	r13
0x436b10:	pop	r14
0x436b12:	pop	r15
0x436b14:	ret	
0x436b15:	mov	ebp, 0x4c4893
0x436b1a:	jmp	0x436a72
0x436b1f:	nop	
0x436b20:	endbr64	
0x436b24:	push	r15
0x436b26:	push	r14
0x436b28:	mov	r14d, edx
0x436b2b:	push	r13
0x436b2d:	push	r12
0x436b2f:	mov	r12, rdi
0x436b32:	push	rbp
0x436b33:	push	rbx
0x436b34:	sub	rsp, 0x18
0x436b38:	test	rsi, rsi
0x436b3b:	jne	0x436bb0
0x436b3d:	call	0x403890
0x436b42:	mov	rbx, rax
0x436b45:	movzx	eax, byte ptr [r12]
0x436b4a:	test	byte ptr [rax + rax + 0x4bc840], 4
0x436b52:	je	0x405357
0x436b58:	mov	dword ptr [rbx], 0
0x436b5e:	call	0x403890
0x436b63:	mov	edx, 0xa
0x436b68:	lea	rsi, [rsp + 8]
0x436b6d:	mov	rdi, r12
0x436b70:	mov	dword ptr [rax], 0
0x436b76:	mov	r13, rax
0x436b79:	mov	qword ptr [rsp + 8], 0
0x436b82:	call	0x403bb0
0x436b87:	mov	r15, qword ptr [rsp + 8]
0x436b8c:	mov	rbp, rax
0x436b8f:	test	r15, r15
0x436b92:	je	0x436b9e
0x436b94:	cmp	byte ptr [r15], 0
0x436b98:	jne	0x405325
0x436b9e:	mov	rax, rbp
0x436ba1:	add	rsp, 0x18
0x436ba5:	pop	rbx
0x436ba6:	pop	rbp
0x436ba7:	pop	r12
0x436ba9:	pop	r13
0x436bab:	pop	r14
0x436bad:	pop	r15
0x436baf:	ret	
0x436bb0:	mov	rbx, rsi
0x436bb3:	jmp	0x436b45
0x436bb5:	nop	word ptr cs:[rax + rax]
0x436bc0:	endbr64	
0x436bc4:	mov	r9, rsi
0x436bc7:	mov	r8d, edx
0x436bca:	and	ecx, 0x80000
0x436bd0:	xor	r11d, r11d
0x436bd3:	jmp	0x436bdf
0x436bd5:	cmp	dword ptr [rax + 8], r8d
0x436bd9:	je	0x436c14
0x436bdb:	add	r11d, 1
0x436bdf:	mov	eax, r11d
0x436be2:	shl	rax, 4
0x436be6:	add	rax, rdi
0x436be9:	mov	rdx, qword ptr [rax]
0x436bec:	test	rdx, rdx
0x436bef:	jne	0x436bd5
0x436bf1:	xor	esi, esi
0x436bf3:	mov	r10d, esi
0x436bf6:	shl	r10, 4
0x436bfa:	add	r10, rdi
0x436bfd:	mov	rdx, qword ptr [r10]
0x436c00:	test	rdx, rdx
0x436c03:	je	0x40550c
0x436c09:	cmp	dword ptr [r10 + 8], r8d
0x436c0d:	je	0x436c20
0x436c0f:	add	esi, 1
0x436c12:	jmp	0x436bf3
0x436c14:	mov	eax, dword ptr [rax + 0xc]
0x436c17:	test	al, 1
0x436c19:	je	0x436bdb
0x436c1b:	jmp	0x405513
0x436c20:	test	ecx, ecx
0x436c22:	jne	0x436c31
0x436c24:	test	byte ptr [r10 + 0xc], 2
0x436c29:	jne	0x436c0f
0x436c2b:	xor	eax, eax
0x436c2d:	mov	qword ptr [r9], rdx
0x436c30:	ret	
0x436c31:	xor	eax, eax
0x436c33:	jmp	0x436c2d
0x436c35:	nop	word ptr cs:[rax + rax]
0x436c40:	push	r12
0x436c42:	mov	r12, rsi
0x436c45:	sub	rsp, 0x10
0x436c49:	test	rsi, rsi
0x436c4c:	jne	0x436c53
0x436c4e:	test	rdi, rdi
0x436c51:	jne	0x436c5d
0x436c53:	add	rsp, 0x10
0x436c57:	mov	rax, r12
0x436c5a:	pop	r12
0x436c5c:	ret	
0x436c5d:	mov	esi, 7
0x436c62:	mov	qword ptr [rsp + 8], rdi
0x436c67:	call	0x403dc0
0x436c6c:	mov	rdi, qword ptr [rsp + 8]
0x436c71:	test	eax, eax
0x436c73:	cmove	r12, rdi
0x436c77:	jmp	0x436c53
0x436c79:	nop	dword ptr [rax]
0x436c80:	endbr64	
0x436c84:	push	rbx
0x436c85:	mov	rbx, rdi
0x436c88:	test	esi, esi
0x436c8a:	jns	0x40554c
0x436c90:	call	0x436cb0
0x436c95:	test	al, al
0x436c97:	jne	0x405574
0x436c9d:	mov	byte ptr [rbx + 0x43], al
0x436ca0:	pop	rbx
0x436ca1:	ret	
0x436ca2:	nop	word ptr cs:[rax + rax]
0x436cad:	nop	dword ptr [rax]
0x436cb0:	push	rcx
0x436cb1:	mov	edi, 0x45b3ee
0x436cb6:	call	0x403800
0x436cbb:	test	rax, rax
0x436cbe:	je	0x40558f
0x436cc4:	mov	rdi, rax
0x436cc7:	mov	esi, 0x45b3e4
0x436ccc:	call	0x403be0
0x436cd1:	test	eax, eax
0x436cd3:	je	0x405596
0x436cd9:	mov	edi, 2
0x436cde:	call	0x403930
0x436ce3:	test	eax, eax
0x436ce5:	setne	al
0x436ce8:	pop	rdx
0x436ce9:	ret	
0x436cea:	nop	word ptr [rax + rax]
0x436cf0:	endbr64	
0x436cf4:	push	r12
0x436cf6:	push	rbp
0x436cf7:	push	rbx
0x436cf8:	mov	rbx, rdi
0x436cfb:	test	esi, esi
0x436cfd:	jns	0x40559d
0x436d03:	call	0x436cb0
0x436d08:	test	al, al
0x436d0a:	jne	0x4055cd
0x436d10:	xor	eax, eax
0x436d12:	mov	dword ptr [rbx + 0x44], eax
0x436d15:	pop	rbx
0x436d16:	pop	rbp
0x436d17:	pop	r12
0x436d19:	ret	
0x436d1a:	nop	word ptr [rax + rax]
0x436d20:	endbr64	
0x436d24:	push	rax
0x436d25:	mov	edx, 1
0x436d2a:	mov	esi, 0xa
0x436d2f:	mov	edi, 0x4e32c8
0x436d34:	mov	qword ptr [rip + 0xac589], 0
0x436d3f:	call	0x436d70
0x436d44:	mov	edx, 1
0x436d49:	mov	esi, 0xa
0x436d4e:	mov	qword ptr [rip + 0xac567], 0
0x436d59:	mov	edi, 0x4e32c0
0x436d5e:	pop	rcx
0x436d5f:	jmp	0x436d70
0x436d61:	nop	
0x436d62:	nop	word ptr cs:[rax + rax]
0x436d6d:	nop	dword ptr [rax]
0x436d70:	endbr64	
0x436d74:	push	r13
0x436d76:	push	r12
0x436d78:	push	rbp
0x436d79:	push	rbx
0x436d7a:	mov	rbx, rdi
0x436d7d:	push	rcx
0x436d7e:	mov	rbp, qword ptr [rdi]
0x436d81:	test	rbp, rbp
0x436d84:	je	0x436ddc
0x436d86:	mov	ecx, dword ptr [rbp]
0x436d89:	and	ecx, 0x7fffffff
0x436d8f:	sub	ecx, dword ptr [rbp + 4]
0x436d92:	cmp	ecx, esi
0x436d94:	setae	al
0x436d97:	test	al, al
0x436d99:	je	0x436da3
0x436d9b:	pop	rax
0x436d9c:	pop	rbx
0x436d9d:	pop	rbp
0x436d9e:	pop	r12
0x436da0:	pop	r13
0x436da2:	ret	
0x436da3:	movzx	edx, dl
0x436da6:	test	rbp, rbp
0x436da9:	jne	0x436de3
0x436dab:	xor	edi, edi
0x436dad:	mov	r12, qword ptr [rbx]
0x436db0:	call	0x436e30
0x436db5:	mov	r13d, eax
0x436db8:	mov	edx, eax
0x436dba:	mov	rdi, r12
0x436dbd:	lea	rsi, [rdx*8 + 8]
0x436dc5:	and	r13d, 0x7fffffff
0x436dcc:	call	0x42db80
0x436dd1:	mov	esi, r13d
0x436dd4:	mov	qword ptr [rbx], rax
0x436dd7:	mov	qword ptr [rax], rsi
0x436dda:	jmp	0x436d9b
0x436ddc:	test	esi, esi
0x436dde:	sete	al
0x436de1:	jmp	0x436d97
0x436de3:	cmp	byte ptr [rbp + 3], 0
0x436de7:	js	0x405684
0x436ded:	mov	rdi, rbp
0x436df0:	call	0x436e30
0x436df5:	mov	r13d, dword ptr [rbp + 4]
0x436df9:	mov	edi, eax
0x436dfb:	mov	r12d, eax
0x436dfe:	lea	rsi, [rdi*8 + 8]
0x436e06:	mov	rdi, rbp
0x436e09:	and	r12d, 0x7fffffff
0x436e10:	call	0x42db80
0x436e15:	mov	qword ptr [rbx], rax
0x436e18:	mov	dword ptr [rax], r12d
0x436e1b:	mov	dword ptr [rax + 4], r13d
0x436e1f:	jmp	0x436d9b
0x436e24:	nop	word ptr cs:[rax + rax]
0x436e2f:	nop	
0x436e30:	endbr64	
0x436e34:	mov	eax, esi
0x436e36:	test	dl, dl
0x436e38:	jne	0x436e67
0x436e3a:	test	rdi, rdi
0x436e3d:	je	0x436e7c
0x436e3f:	mov	edx, dword ptr [rdi]
0x436e41:	add	eax, dword ptr [rdi + 4]
0x436e44:	and	edx, 0x7fffffff
0x436e4a:	cmp	eax, edx
0x436e4c:	jbe	0x4056f2
0x436e52:	test	edx, edx
0x436e54:	je	0x4056e8
0x436e5a:	cmp	edx, 0xf
0x436e5d:	ja	0x436e75
0x436e5f:	add	edx, edx
0x436e61:	cmp	eax, edx
0x436e63:	cmovb	eax, edx
0x436e66:	ret	
0x436e67:	xor	esi, esi
0x436e69:	test	rdi, rdi
0x436e6c:	jne	0x4056e0
0x436e72:	add	eax, esi
0x436e74:	ret	
0x436e75:	lea	edx, [rdx + rdx*2]
0x436e78:	shr	edx, 1
0x436e7a:	jmp	0x436e61
0x436e7c:	mov	ecx, 4
0x436e81:	cmp	esi, ecx
0x436e83:	cmovb	eax, ecx
0x436e86:	ret	
0x436e87:	nop	
0x436e88:	nop	dword ptr [rax + rax]
0x436e90:	push	rbp
0x436e91:	mov	r8, rdi
0x436e94:	mov	edi, esi
0x436e96:	mov	rsi, r8
0x436e99:	mov	rbp, rsp
0x436e9c:	push	r15
0x436e9e:	push	r14
0x436ea0:	push	r13
0x436ea2:	push	r12
0x436ea4:	push	rbx
0x436ea5:	sub	rsp, 0x28
0x436ea9:	call	0x437690
0x436eae:	mov	edi, 0xee0
0x436eb3:	call	0x42db10
0x436eb8:	mov	rdx, qword ptr [rip + 0x52f81]
0x436ebf:	mov	esi, 0x489e40
0x436ec4:	mov	rcx, qword ptr [rip + 0x53e4d]
0x436ecb:	lea	rdi, [rax + 8]
0x436ecf:	mov	qword ptr [rip + 0xac3e2], rax
0x436ed6:	mov	r8d, 0x489e38
0x436edc:	xor	r9d, r9d
0x436edf:	and	rdi, 0xfffffffffffffff8
0x436ee3:	mov	qword ptr [rax], rdx
0x436ee6:	mov	edx, 0x4636d9
0x436eeb:	mov	qword ptr [rax + 0xed8], rcx
0x436ef2:	sub	rax, rdi
0x436ef5:	sub	rsi, rax
0x436ef8:	add	eax, 0xee0
0x436efd:	shr	eax, 3
0x436f00:	mov	ecx, eax
0x436f02:	xor	eax, eax
0x436f04:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x436f07:	mov	ecx, 0x4c4893
0x436f0c:	mov	rsi, r8
0x436f0f:	mov	edi, 0x45b470
0x436f14:	mov	dword ptr [rip + 0xac392], 0x76
0x436f1e:	call	0x42d870
0x436f23:	xor	edx, edx
0x436f25:	mov	esi, 0x489e38
0x436f2a:	mov	edi, 0x45b470
0x436f2f:	mov	qword ptr [rip + 0xadaca], rax
0x436f36:	xor	eax, eax
0x436f38:	call	0x42d870
0x436f3d:	mov	ecx, 1
0x436f42:	mov	edx, 4
0x436f47:	mov	esi, 0x45cc56
0x436f4c:	mov	edi, 0x4e24b0
0x436f51:	mov	qword ptr [rip + 0xac350], rax
0x436f58:	call	0x439620
0x436f5d:	test	rax, rax
0x436f60:	je	0x405708
0x436f66:	mov	esi, 0x45cc56
0x436f6b:	mov	rdi, rax
0x436f6e:	mov	r12, rax
0x436f71:	call	0x403be0
0x436f76:	test	eax, eax
0x436f78:	je	0x405708
0x436f7e:	xor	edx, edx
0x436f80:	mov	esi, 1
0x436f85:	mov	rdi, r12
0x436f88:	call	0x439ab0
0x436f8d:	mov	rbx, qword ptr [rip + 0xac314]
0x436f94:	mov	rdi, rbx
0x436f97:	call	0x4039e0
0x436f9c:	mov	r10, rsp
0x436f9f:	add	rax, 0x2a
0x436fa3:	mov	r9, rax
0x436fa6:	and	rax, 0xfffffffffffff000
0x436fac:	and	r9, 0xfffffffffffffff0
0x436fb0:	sub	r10, rax
0x436fb3:	cmp	rsp, r10
0x436fb6:	je	0x436fca
0x436fb8:	sub	rsp, 0x1000
0x436fbf:	or	qword ptr [rsp + 0xff8], 0
0x436fc8:	jmp	0x436fb3
0x436fca:	and	r9d, 0xfff
0x436fd1:	sub	rsp, r9
0x436fd4:	test	r9, r9
0x436fd7:	jne	0x437665
0x436fdd:	lea	r13, [rsp + 0xf]
0x436fe2:	mov	esi, 0x45b059
0x436fe7:	mov	ecx, 0xd
0x436fec:	and	r13, 0xfffffffffffffff0
0x436ff0:	mov	rdi, r13
0x436ff3:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x436ff5:	mov	rsi, rbx
0x436ff8:	call	0x4038f0
0x436ffd:	mov	esi, 0x45cc56
0x437002:	mov	rdi, r13
0x437005:	call	0x403e40
0x43700a:	mov	esi, 4
0x43700f:	mov	rdi, r13
0x437012:	call	0x403dc0
0x437017:	test	eax, eax
0x437019:	je	0x405712
0x43701f:	xor	r14d, r14d
0x437022:	mov	rsi, qword ptr [r14 + 0x489da8]
0x437029:	mov	rdi, qword ptr [r14 + 0x489da0]
0x437030:	add	r14, 0x10
0x437034:	call	0x439f50
0x437039:	cmp	r14, 0x90
0x437040:	jne	0x437022
0x437042:	mov	edi, 0x464f30
0x437047:	call	0x43a0b0
0x43704c:	mov	edi, 0x4c4893
0x437051:	call	0x43a0b0
0x437056:	mov	edi, 0x4c4893
0x43705b:	call	0x43a0b0
0x437060:	mov	edi, 0x464f70
0x437065:	call	0x43a0b0
0x43706a:	mov	edi, 0x45b481
0x43706f:	call	0x43a0b0
0x437074:	mov	rax, qword ptr [rip + 0xab3f5]
0x43707b:	cmp	byte ptr [rax], 0x30
0x43707e:	jne	0x437090
0x437080:	mov	rsi, qword ptr [rip + 0xab3e1]
0x437087:	cmp	byte ptr [rsi], 0
0x43708a:	jne	0x405726
0x437090:	mov	rdi, qword ptr [rip + 0xab3c9]
0x437097:	cmp	byte ptr [rdi], 0
0x43709a:	jne	0x405745
0x4370a0:	cmp	qword ptr [rip + 0xad940], 0
0x4370a8:	jne	0x405797
0x4370ae:	mov	rdi, qword ptr [rip + 0xab3eb]
0x4370b5:	cmp	byte ptr [rdi], 0
0x4370b8:	jne	0x4058fd
0x4370be:	mov	rdi, qword ptr [rip + 0xab38b]
0x4370c5:	cmp	byte ptr [rdi], 0
0x4370c8:	jne	0x40588f
0x4370ce:	mov	r11, qword ptr [rip + 0xab39b]
0x4370d5:	cmp	byte ptr [r11], 0x30
0x4370d9:	jne	0x437670
0x4370df:	mov	rdi, qword ptr [rip + 0xab362]
0x4370e6:	cmp	byte ptr [rdi], 0
0x4370e9:	jne	0x40599b
0x4370ef:	mov	rdi, qword ptr [rip + 0xab34a]
0x4370f6:	cmp	byte ptr [rdi], 0
0x4370f9:	jne	0x4059aa
0x4370ff:	mov	r8, qword ptr [rip + 0xab36a]
0x437106:	cmp	byte ptr [r8], 0x30
0x43710a:	jne	0x43714e
0x43710c:	mov	rdi, qword ptr [rip + 0xad8f5]
0x437113:	mov	rsi, qword ptr [rip + 0xad8e6]
0x43711a:	test	rdi, rdi
0x43711d:	je	0x4059b9
0x437123:	xor	ecx, ecx
0x437125:	mov	edx, 0x45b56b
0x43712a:	xor	eax, eax
0x43712c:	call	0x42d870
0x437131:	mov	r9d, 1
0x437137:	xor	r8d, r8d
0x43713a:	xor	edx, edx
0x43713c:	mov	rsi, rax
0x43713f:	mov	ecx, 1
0x437144:	mov	edi, 0x4e24b0
0x437149:	call	0x438670
0x43714e:	mov	esi, 0x45b49a
0x437153:	mov	edi, 0x45b4a7
0x437158:	call	0x43b660
0x43715d:	mov	esi, 0x45b49a
0x437162:	mov	edi, 0x45b4a3
0x437167:	call	0x43b660
0x43716c:	mov	r15, qword ptr [rip + 0xaef5d]
0x437173:	test	r15, r15
0x437176:	jne	0x4059c3
0x43717c:	mov	r14, qword ptr [rip + 0xac11d]
0x437183:	jmp	0x437189
0x437185:	mov	r14, qword ptr [r14 + 0x18]
0x437189:	test	r14, r14
0x43718c:	je	0x4371b4
0x43718e:	cmp	dword ptr [r14 + 0x20], 9
0x437193:	jne	0x437185
0x437195:	mov	rdi, qword ptr [r14]
0x437198:	mov	esi, 0x45b4ad
0x43719d:	call	0x403be0
0x4371a2:	test	eax, eax
0x4371a4:	jne	0x437185
0x4371a6:	mov	rsi, qword ptr [r14 + 0x10]
0x4371aa:	mov	rdi, qword ptr [rsi]
0x4371ad:	call	0x43a0b0
0x4371b2:	jmp	0x437185
0x4371b4:	cmp	dword ptr [rip + 0xaee85], 0
0x4371bb:	jne	0x4059fb
0x4371c1:	mov	rdi, qword ptr [rip + 0xad840]
0x4371c8:	test	rdi, rdi
0x4371cb:	je	0x4371f9
0x4371cd:	push	rax
0x4371ce:	mov	r9d, 0x489e38
0x4371d4:	mov	ecx, 0x4636d9
0x4371d9:	xor	eax, eax
0x4371db:	push	0
0x4371dd:	mov	rdx, r9
0x4371e0:	mov	r8d, 0x4c4893
0x4371e6:	mov	esi, 0x45b470
0x4371eb:	call	0x42d870
0x4371f0:	pop	rdx
0x4371f1:	pop	rcx
0x4371f2:	mov	qword ptr [rip + 0xad80f], rax
0x4371f9:	mov	rbx, qword ptr [rip + 0xac0b8]
0x437200:	jmp	0x43720d
0x437202:	xor	esi, esi
0x437204:	add	rbx, 0x20
0x437208:	call	0x43b6b0
0x43720d:	mov	rdi, qword ptr [rbx + 8]
0x437211:	test	rdi, rdi
0x437214:	jne	0x437202
0x437216:	mov	r13, qword ptr [rip + 0xac083]
0x43721d:	jmp	0x437235
0x43721f:	mov	r12, qword ptr [r13 + 0x10]
0x437223:	movzx	esi, byte ptr [r13 + 0x24]
0x437228:	mov	rdi, qword ptr [r12]
0x43722c:	call	0x43b6b0
0x437231:	mov	r13, qword ptr [r13 + 0x18]
0x437235:	test	r13, r13
0x437238:	jne	0x43721f
0x43723a:	mov	rdi, qword ptr [rip + 0xab1f7]
0x437241:	xor	esi, esi
0x437243:	call	0x43b6b0
0x437248:	mov	r12, qword ptr [rip + 0xad6e9]
0x43724f:	mov	dword ptr [rip + 0xac03f], 0
0x437259:	mov	rcx, r12
0x43725c:	movzx	r14d, byte ptr [rcx]
0x437260:	cmp	r14b, 9
0x437264:	je	0x405a92
0x43726a:	cmp	r14b, 0x20
0x43726e:	je	0x437675
0x437274:	cmp	byte ptr [rcx], 0
0x437277:	mov	r13d, dword ptr [rip + 0xac01a]
0x43727e:	jne	0x4372e2
0x437280:	test	r13d, r13d
0x437283:	je	0x4373e5
0x437289:	movsxd	rdi, r13d
0x43728c:	xor	ebx, ebx
0x43728e:	shl	rdi, 4
0x437292:	call	0x42db10
0x437297:	mov	qword ptr [rip + 0xabff2], rax
0x43729e:	cmp	byte ptr [r12], 0
0x4372a3:	je	0x4373e5
0x4372a9:	movzx	edi, byte ptr [r12]
0x4372ae:	cmp	dil, 9
0x4372b2:	je	0x405b39
0x4372b8:	cmp	dil, 0x20
0x4372bc:	je	0x405b39
0x4372c2:	test	dil, dil
0x4372c5:	je	0x4373e5
0x4372cb:	lea	r15, [r12 + 1]
0x4372d0:	movzx	eax, byte ptr [r15]
0x4372d4:	test	al, 0xdf
0x4372d6:	je	0x43730b
0x4372d8:	cmp	al, 9
0x4372da:	je	0x43730b
0x4372dc:	add	r15, 1
0x4372e0:	jmp	0x4372d0
0x4372e2:	add	r13d, 1
0x4372e6:	mov	dword ptr [rip + 0xabfab], r13d
0x4372ed:	movzx	r15d, byte ptr [rcx]
0x4372f1:	test	r15b, 0xdf
0x4372f5:	je	0x43757b
0x4372fb:	cmp	r15b, 9
0x4372ff:	je	0x43757b
0x437305:	add	rcx, 1
0x437309:	jmp	0x4372ed
0x43730b:	mov	r14, r15
0x43730e:	mov	r9, qword ptr [rip + 0xaee4b]
0x437315:	sub	r9, qword ptr [rip + 0xaee3c]
0x43731c:	sub	r14, r12
0x43731f:	cmp	r14, r9
0x437322:	ja	0x405b4b
0x437328:	mov	rdi, qword ptr [rip + 0xaee29]
0x43732f:	mov	rdx, r14
0x437332:	mov	rsi, r12
0x437335:	call	0x403c60
0x43733a:	mov	r10, qword ptr [rip + 0xaee17]
0x437341:	add	r10, r14
0x437344:	cmp	r10, qword ptr [rip + 0xaee15]
0x43734b:	mov	qword ptr [rip + 0xaee06], r10
0x437352:	je	0x405b5d
0x437358:	mov	rcx, qword ptr [rip + 0xaedf9]
0x43735f:	lea	rsi, [rcx + 1]
0x437363:	mov	qword ptr [rip + 0xaedee], rsi
0x43736a:	mov	byte ptr [rcx], 0
0x43736d:	mov	r11, qword ptr [rip + 0xabf1c]
0x437374:	mov	r12, qword ptr [rip + 0xaedd5]
0x43737b:	mov	r13, qword ptr [rip + 0xaedd6]
0x437382:	add	r11, rbx
0x437385:	cmp	r12, r13
0x437388:	je	0x405b71
0x43738e:	mov	r8, qword ptr [rip + 0xaeddb]
0x437395:	mov	rdx, qword ptr [rip + 0xaedc4]
0x43739c:	add	r13, r8
0x43739f:	not	r8
0x4373a2:	mov	rdi, rdx
0x4373a5:	sub	rdi, qword ptr [rip + 0xaed9c]
0x4373ac:	and	r13, r8
0x4373af:	mov	rax, r13
0x4373b2:	sub	rax, qword ptr [rip + 0xaed8f]
0x4373b9:	cmp	rax, rdi
0x4373bc:	cmova	r13, rdx
0x4373c0:	add	rbx, 0x10
0x4373c4:	movq	xmm2, r13
0x4373c9:	punpcklqdq	xmm2, xmm2
0x4373cd:	movaps	xmmword ptr [rip + 0xaed7c], xmm2
0x4373d4:	mov	qword ptr [r11], r12
0x4373d7:	mov	dword ptr [r11 + 8], r14d
0x4373db:	cmp	byte ptr [r15], 0
0x4373df:	jne	0x405b7d
0x4373e5:	mov	rdi, qword ptr [rip + 0xad5cc]
0x4373ec:	movzx	r15d, byte ptr [rdi]
0x4373f0:	test	r15b, r15b
0x4373f3:	jne	0x405b86
0x4373f9:	mov	rsi, qword ptr [rip + 0xad540]
0x437400:	mov	rbx, qword ptr [rip + 0xad5b9]
0x437407:	cmp	byte ptr [rsi], 0
0x43740a:	jne	0x405bab
0x437410:	mov	dword ptr [rbp - 0x44], 1
0x437417:	movzx	r14d, byte ptr [rbx]
0x43741b:	test	r14b, r14b
0x43741e:	je	0x43767a
0x437424:	mov	rdi, rbx
0x437427:	cmp	r14b, 0xa
0x43742b:	jne	0x43743f
0x43742d:	jmp	0x405c13
0x437432:	test	r9b, r9b
0x437435:	je	0x405c1c
0x43743b:	add	rdi, 1
0x43743f:	movzx	r9d, byte ptr [rdi]
0x437443:	cmp	r9b, 0x20
0x437447:	jne	0x437432
0x437449:	mov	r10, rdi
0x43744c:	lea	r14, [rdi + 1]
0x437450:	mov	r15d, 1
0x437456:	mov	r8d, 1
0x43745c:	sub	r10, rbx
0x43745f:	mov	qword ptr [rbp - 0x40], r10
0x437463:	jmp	0x437468
0x437465:	mov	r14, r12
0x437468:	movzx	ecx, byte ptr [r14]
0x43746c:	cmp	cl, 0x3b
0x43746f:	je	0x43750c
0x437475:	test	cl, cl
0x437477:	je	0x405c1c
0x43747d:	lea	r12, [r14 + 1]
0x437481:	test	r8d, r8d
0x437484:	je	0x437465
0x437486:	mov	r12, r14
0x437489:	movzx	r10d, byte ptr [r12]
0x43748e:	cmp	r10b, 0x3b
0x437492:	je	0x4374a9
0x437494:	cmp	r10b, 0x20
0x437498:	je	0x4374a9
0x43749a:	test	r10b, r10b
0x43749d:	je	0x405c1c
0x4374a3:	add	r12, 1
0x4374a7:	jmp	0x437489
0x4374a9:	cmp	cl, 0x21
0x4374ac:	jne	0x43753f
0x4374b2:	add	r14, 1
0x4374b6:	mov	r13d, r12d
0x4374b9:	sub	r13d, r14d
0x4374bc:	mov	rdi, r14
0x4374bf:	mov	esi, r13d
0x4374c2:	call	0x43b7d0
0x4374c7:	xor	esi, esi
0x4374c9:	mov	ecx, 0
0x4374ce:	cmp	eax, 1
0x4374d1:	setb	sil
0x4374d5:	test	eax, eax
0x4374d7:	cmovne	r15d, ecx
0x4374db:	mov	dword ptr [rbp - 0x38], esi
0x4374de:	mov	rdi, r14
0x4374e1:	mov	esi, r13d
0x4374e4:	call	0x43bb40
0x4374e9:	mov	edx, dword ptr [rbp - 0x38]
0x4374ec:	mov	r8d, 1
0x4374f2:	test	eax, eax
0x4374f4:	cmove	r8d, edx
0x4374f8:	cmp	byte ptr [r12], 0x20
0x4374fd:	jne	0x437465
0x437503:	add	r12, 1
0x437507:	jmp	0x437465
0x43750c:	test	r8d, r8d
0x43750f:	je	0x437531
0x437511:	cmp	dword ptr [rbp - 0x44], 0
0x437515:	je	0x437531
0x437517:	cmp	dword ptr [rbp - 0x40], 1
0x43751b:	jne	0x405c38
0x437521:	cmp	byte ptr [rbx], 0x2e
0x437524:	mov	dword ptr [rbp - 0x44], 0
0x43752b:	jne	0x405c38
0x437531:	test	r15d, r15d
0x437534:	jne	0x437560
0x437536:	lea	rbx, [r14 + 1]
0x43753a:	jmp	0x437417
0x43753f:	mov	r13d, r12d
0x437542:	mov	rdi, r14
0x437545:	sub	r13d, r14d
0x437548:	mov	esi, r13d
0x43754b:	call	0x43b7d0
0x437550:	xor	r11d, r11d
0x437553:	test	eax, eax
0x437555:	mov	esi, eax
0x437557:	cmove	r15d, r11d
0x43755b:	jmp	0x4374db
0x437560:	mov	r11d, dword ptr [rbp - 0x40]
0x437564:	lea	r15, [rbx + r11]
0x437568:	cmp	r15, rbx
0x43756b:	jbe	0x437536
0x43756d:	cmp	byte ptr [rbx], 0x3a
0x437570:	lea	r9, [rbx + 1]
0x437574:	je	0x437598
0x437576:	mov	rbx, r9
0x437579:	jmp	0x437568
0x43757b:	movzx	r10d, byte ptr [rcx]
0x43757f:	cmp	r10b, 0x20
0x437583:	je	0x405cbe
0x437589:	cmp	r10b, 9
0x43758d:	jne	0x437274
0x437593:	jmp	0x405cbe
0x437598:	mov	r12, r9
0x43759b:	jmp	0x4375a1
0x43759d:	add	r12, 1
0x4375a1:	movzx	r8d, byte ptr [r12]
0x4375a6:	cmp	r15, r12
0x4375a9:	jbe	0x405cc7
0x4375af:	cmp	r8b, 0x3a
0x4375b3:	jne	0x43759d
0x4375b5:	mov	r14, r12
0x4375b8:	sub	r14, rbx
0x4375bb:	cmp	r14, 1
0x4375bf:	je	0x405c8b
0x4375c5:	mov	rdi, r14
0x4375c8:	mov	qword ptr [rbp - 0x38], r9
0x4375cc:	call	0x42db10
0x4375d1:	mov	rsi, qword ptr [rbp - 0x38]
0x4375d5:	lea	rdx, [r14 - 1]
0x4375d9:	mov	rdi, rax
0x4375dc:	call	0x403c60
0x4375e1:	mov	byte ptr [rax + r14 - 1], 0
0x4375e7:	mov	rdx, rax
0x4375ea:	mov	qword ptr [rip + 0xad3e7], rdx
0x4375f1:	cmp	r15, r12
0x4375f4:	jbe	0x405c9d
0x4375fa:	cmp	byte ptr [r12], 0x3a
0x4375ff:	jne	0x405c9d
0x437605:	sub	r15, r12
0x437608:	mov	rdi, r15
0x43760b:	call	0x42db10
0x437610:	lea	rdx, [r15 - 1]
0x437614:	lea	rsi, [r12 + 1]
0x437619:	mov	rdi, rax
0x43761c:	call	0x403c60
0x437621:	mov	r13, qword ptr [rip + 0xad3b0]
0x437628:	mov	byte ptr [rax + r15 - 1], 0
0x43762e:	mov	r15, qword ptr [rip + 0xad3c3]
0x437635:	mov	qword ptr [rip + 0xad3b4], rax
0x43763c:	test	r15, r15
0x43763f:	jne	0x43767f
0x437641:	mov	esi, 0x4cd754
0x437646:	mov	rdi, r13
0x437649:	call	0x403be0
0x43764e:	test	eax, eax
0x437650:	je	0x405cd7
0x437656:	lea	rsp, [rbp - 0x28]
0x43765a:	pop	rbx
0x43765b:	pop	r12
0x43765d:	pop	r13
0x43765f:	pop	r14
0x437661:	pop	r15
0x437663:	pop	rbp
0x437664:	ret	
0x437665:	or	qword ptr [rsp + r9 - 8], 0
0x43766b:	jmp	0x436fdd
0x437670:	jmp	0x4058ea
0x437675:	jmp	0x405a92
0x43767a:	jmp	0x405c9d
0x43767f:	jmp	0x405d29
0x437684:	nop	word ptr cs:[rax + rax]
0x43768f:	nop	
0x437690:	push	rbp
0x437691:	mov	rbp, rsp
0x437694:	push	r15
0x437696:	push	r14
0x437698:	push	r13
0x43769a:	mov	r13, rsi
0x43769d:	push	r12
0x43769f:	push	rbx
0x4376a0:	mov	ebx, edi
0x4376a2:	mov	edi, 0x45b4d2
0x4376a7:	sub	rsp, 0x78
0x4376ab:	call	0x4383f0
0x4376b0:	mov	edi, 0x4be0c8
0x4376b5:	mov	dword ptr [rip + 0xad371], 0
0x4376bf:	mov	qword ptr [rip + 0xad342], rax
0x4376c6:	mov	r14, rax
0x4376c9:	mov	dword ptr [rip + 0xad345], 0
0x4376d3:	mov	dword ptr [rip + 0xaeadf], 0
0x4376dd:	call	0x42db40
0x4376e2:	mov	qword ptr [rip + 0xabb87], rax
0x4376e9:	jmp	0x4376f8
0x4376eb:	cmp	dl, 0x20
0x4376ee:	je	0x40602f
0x4376f4:	add	rax, 1
0x4376f8:	movzx	edx, byte ptr [rax]
0x4376fb:	test	dl, dl
0x4376fd:	jne	0x4376eb
0x4376ff:	lea	rdx, [r13 + 0x58]
0x437703:	mov	eax, 1
0x437708:	mov	qword ptr [rbp - 0x88], rdx
0x43770f:	mov	rcx, rdx
0x437712:	mov	r12, rdx
0x437715:	jmp	0x43772c
0x437717:	add	rcx, 0x58
0x43771b:	cmp	qword ptr [rcx - 0x58], 0x797
0x437723:	je	0x406003
0x437729:	add	eax, 1
0x43772c:	cmp	eax, ebx
0x43772e:	jb	0x437717
0x437730:	mov	r15d, 0x432030
0x437736:	mov	qword ptr [rip + 0xae97f], 0x45b059
0x437741:	test	r14, r14
0x437744:	jne	0x4380d0
0x43774a:	mov	rdi, qword ptr [r13 + 0x10]
0x43774e:	mov	edx, 0x45b059
0x437753:	mov	esi, 0x45b4e2
0x437758:	call	r15
0x43775b:	mov	esi, 0x45b4e2
0x437760:	mov	rdi, qword ptr [r13 + 0x10]
0x437764:	mov	edx, 0x45b059
0x437769:	mov	qword ptr [rip + 0xad298], rax
0x437770:	call	r15
0x437773:	mov	rsi, qword ptr [rip + 0xad28e]
0x43777a:	mov	qword ptr [rip + 0xae93f], rax
0x437781:	test	rsi, rsi
0x437784:	je	0x43779c
0x437786:	mov	edi, 0x45b4ec
0x43778b:	xor	edx, edx
0x43778d:	xor	eax, eax
0x43778f:	call	0x42d870
0x437794:	mov	rdi, rax
0x437797:	call	0x4384e0
0x43779c:	xor	r14d, r14d
0x43779f:	mov	r15d, 1
0x4377a5:	jmp	0x4377cf
0x4377a7:	mov	rdx, qword ptr [r12]
0x4377ab:	cmp	rdx, 0x828
0x4377b2:	je	0x437aa9
0x4377b8:	ja	0x4377c7
0x4377ba:	and	rdx, 0xfffffffffffffffd
0x4377be:	cmp	rdx, 0x7c8
0x4377c5:	je	0x4377dd
0x4377c7:	add	r15d, 1
0x4377cb:	add	r12, 0x58
0x4377cf:	cmp	r15d, ebx
0x4377d2:	jb	0x4377a7
0x4377d4:	test	r14d, r14d
0x4377d7:	jne	0x4062fc
0x4377dd:	mov	r15, qword ptr [rip + 0xad224]
0x4377e4:	test	r15, r15
0x4377e7:	je	0x4378a3
0x4377ed:	mov	rdi, r15
0x4377f0:	call	0x4039e0
0x4377f5:	mov	r13, rax
0x4377f8:	mov	r12d, eax
0x4377fb:	cmp	eax, 9
0x4377fe:	jle	0x43784f
0x437800:	movsxd	r9, eax
0x437803:	cmp	byte ptr [r15 + r9 - 1], 0x2f
0x437809:	jne	0x43784f
0x43780b:	lea	r14, [r15 + r9 - 9]
0x437810:	cmp	byte ptr [r14], 0x2f
0x437814:	jne	0x43784f
0x437816:	lea	rdi, [r14 + 1]
0x43781a:	mov	edx, 3
0x43781f:	mov	esi, 0x45cbba
0x437824:	call	0x4038d0
0x437829:	test	eax, eax
0x43782b:	jne	0x43784f
0x43782d:	cmp	byte ptr [r14 + 4], 0x2f
0x437832:	jne	0x43784f
0x437834:	lea	rdi, [r14 + 5]
0x437838:	mov	edx, 3
0x43783d:	mov	esi, 0x4bef00
0x437842:	call	0x4038d0
0x437847:	test	eax, eax
0x437849:	jne	0x43784f
0x43784b:	lea	r12d, [r13 - 9]
0x43784f:	mov	esi, r12d
0x437852:	mov	rdi, r15
0x437855:	call	0x438640
0x43785a:	xor	r9d, r9d
0x43785d:	xor	r8d, r8d
0x437860:	mov	ecx, 1
0x437865:	mov	rsi, qword ptr [rip + 0xae854]
0x43786c:	mov	edx, 0x45b496
0x437871:	mov	edi, 0x4e24d0
0x437876:	mov	qword ptr [rip + 0xaab93], rax
0x43787d:	call	0x438670
0x437882:	xor	r9d, r9d
0x437885:	xor	r8d, r8d
0x437888:	mov	ecx, 1
0x43788d:	mov	rsi, qword ptr [rip + 0xad174]
0x437894:	mov	edx, 0x45b496
0x437899:	mov	edi, 0x4e24b0
0x43789e:	call	0x438670
0x4378a3:	mov	edi, 0x45b4fd
0x4378a8:	call	0x4383f0
0x4378ad:	mov	r15, rax
0x4378b0:	test	rax, rax
0x4378b3:	jne	0x438189
0x4378b9:	mov	edi, 0x45b50b
0x4378be:	call	0x4383f0
0x4378c3:	mov	r14, rax
0x4378c6:	test	rax, rax
0x4378c9:	jne	0x43810f
0x4378cf:	mov	edi, 0x45b518
0x4378d4:	call	0x4383f0
0x4378d9:	mov	r13, rax
0x4378dc:	test	rax, rax
0x4378df:	jne	0x4062b1
0x4378e5:	mov	r8d, 0x407754
0x4378eb:	mov	r15, qword ptr [rbp - 0x88]
0x4378f2:	mov	dword ptr [rip + 0xae7bc], 0xffffffff
0x4378fc:	mov	r9d, 1
0x437902:	movq	xmm0, r8
0x437907:	mov	qword ptr [rbp - 0x68], 3
0x43790f:	mov	r11d, dword ptr [rip + 0xad0fa]
0x437916:	movhps	xmm0, qword ptr [rip + 0x86a6b]
0x43791d:	mov	qword ptr [rbp - 0x60], 0x42de40
0x437925:	mov	r10, r15
0x437928:	mov	dword ptr [rbp - 0x58], 0x80000
0x43792f:	mov	qword ptr [rbp - 0x50], 0x42e340
0x437937:	mov	dword ptr [rbp - 0x48], 0x200000
0x43793e:	mov	qword ptr [rbp - 0x40], 0x43f8a0
0x437946:	mov	dword ptr [rbp - 0x38], 0x100000
0x43794d:	movaps	xmmword ptr [rbp - 0x80], xmm0
0x437951:	jmp	0x437969
0x437953:	cmp	rdi, 0x177
0x43795a:	je	0x437983
0x43795c:	add	r10, 0x58
0x437960:	test	r11d, r11d
0x437963:	jne	0x43798d
0x437965:	add	r9d, 1
0x437969:	cmp	r9d, ebx
0x43796c:	jae	0x43798d
0x43796e:	mov	rdi, qword ptr [r10]
0x437971:	cmp	rdi, 0x194
0x437978:	je	0x437983
0x43797a:	cmp	rdi, 0x329
0x437981:	jne	0x437953
0x437983:	mov	dword ptr [rip + 0xad083], 1
0x43798d:	mov	r14d, 1
0x437993:	jmp	0x4379ae
0x437995:	mov	edx, 0x4e30c0
0x43799a:	lea	rsi, [rbp - 0x80]
0x43799e:	mov	rdi, r15
0x4379a1:	call	0x438920
0x4379a6:	add	r14d, 1
0x4379aa:	add	r15, 0x58
0x4379ae:	cmp	r14d, ebx
0x4379b1:	jae	0x4379ce
0x4379b3:	cmp	qword ptr [r15], 0x828
0x4379ba:	jne	0x437995
0x4379bc:	mov	rdi, qword ptr [r15 + 0x10]
0x4379c0:	mov	rsi, qword ptr [rip + 0xae6e9]
0x4379c7:	call	0x439090
0x4379cc:	jmp	0x4379a6
0x4379ce:	cmp	qword ptr [rip + 0xae7ca], 0
0x4379d6:	jne	0x4379e9
0x4379d8:	mov	edi, 0x45b51e
0x4379dd:	call	0x439130
0x4379e2:	mov	byte ptr [rip + 0xae7af], 1
0x4379e9:	cmp	dword ptr [rip + 0xae474], 0
0x4379f0:	jne	0x405df6
0x4379f6:	mov	r12, qword ptr [rip + 0xae6ab]
0x4379fd:	test	r12, r12
0x437a00:	je	0x437e40
0x437a06:	mov	esi, 0x4cd89a
0x437a0b:	mov	rdi, r12
0x437a0e:	call	0x403be0
0x437a13:	test	eax, eax
0x437a15:	je	0x437aff
0x437a1b:	mov	esi, 0x45b537
0x437a20:	mov	rdi, r12
0x437a23:	xor	r13d, r13d
0x437a26:	call	0x403be0
0x437a2b:	test	eax, eax
0x437a2d:	je	0x437aff
0x437a33:	cmp	dword ptr [rip + 0xacfde], r13d
0x437a3a:	jle	0x437aff
0x437a40:	mov	r15, r13
0x437a43:	shl	r15, 5
0x437a47:	add	r15, qword ptr [rip + 0xae61a]
0x437a4e:	mov	r14, qword ptr [r15 + 8]
0x437a52:	test	r14, r14
0x437a55:	je	0x437a63
0x437a57:	cmp	byte ptr [r14], 0x2a
0x437a5b:	jne	0x437a63
0x437a5d:	add	r13, 1
0x437a61:	jmp	0x437a33
0x437a63:	mov	rdi, qword ptr [r15]
0x437a66:	call	0x42d670
0x437a6b:	mov	rdi, r12
0x437a6e:	mov	r15, rax
0x437a71:	call	0x42d670
0x437a76:	mov	rdi, r15
0x437a79:	mov	rsi, rax
0x437a7c:	mov	r14, rax
0x437a7f:	call	0x403be0
0x437a84:	mov	rdi, r15
0x437a87:	mov	dword ptr [rbp - 0x88], eax
0x437a8d:	call	0x403830
0x437a92:	mov	rdi, r14
0x437a95:	call	0x403830
0x437a9a:	mov	edi, dword ptr [rbp - 0x88]
0x437aa0:	test	edi, edi
0x437aa2:	jne	0x437a5d
0x437aa4:	jmp	0x406380
0x437aa9:	mov	rax, qword ptr [r12 + 0x10]
0x437aae:	mov	rdi, rax
0x437ab1:	mov	qword ptr [rbp - 0x90], rax
0x437ab8:	call	0x4039e0
0x437abd:	cmp	eax, 2
0x437ac0:	jle	0x4377c7
0x437ac6:	mov	rdi, qword ptr [rbp - 0x90]
0x437acd:	movsxd	rcx, eax
0x437ad0:	movzx	esi, byte ptr [rdi + rcx - 2]
0x437ad5:	cmp	sil, 0x2e
0x437ad9:	jne	0x437ae6
0x437adb:	cmp	byte ptr [rdi + rcx - 1], 0x6d
0x437ae0:	je	0x406375
0x437ae6:	cmp	eax, 3
0x437ae9:	je	0x4377c7
0x437aef:	cmp	byte ptr [rdi + rcx - 3], 0x2e
0x437af4:	jne	0x4377c7
0x437afa:	jmp	0x406285
0x437aff:	cmp	byte ptr [r12], 0
0x437b04:	je	0x4383d2
0x437b0a:	mov	r14, qword ptr [rip + 0xab757]
0x437b11:	cmp	byte ptr [rip + 0xae588], 0
0x437b18:	mov	r13, r14
0x437b1b:	jne	0x437b26
0x437b1d:	test	r14, r14
0x437b20:	jne	0x43820f
0x437b26:	mov	rdi, r12
0x437b29:	call	0x439d70
0x437b2e:	mov	edx, dword ptr [rip + 0xab768]
0x437b34:	test	al, al
0x437b36:	jne	0x4383cd
0x437b3c:	sub	edx, 1
0x437b3f:	je	0x4383c3
0x437b45:	mov	rdi, r14
0x437b48:	call	0x403830
0x437b4d:	mov	rdi, r12
0x437b50:	mov	qword ptr [rip + 0xab70d], 0
0x437b5b:	call	0x4322e0
0x437b60:	mov	r14, rax
0x437b63:	cmp	r12, rax
0x437b66:	je	0x437e27
0x437b6c:	call	0x4039e0
0x437b71:	mov	rdi, r14
0x437b74:	mov	r15, rax
0x437b77:	call	0x4039e0
0x437b7c:	mov	rsi, r15
0x437b7f:	mov	rdi, r12
0x437b82:	sub	rsi, rax
0x437b85:	call	0x439da0
0x437b8a:	cmp	dword ptr [rip + 0xab70b], 0
0x437b91:	mov	qword ptr [rip + 0xab6d0], rax
0x437b98:	mov	r14, rax
0x437b9b:	jne	0x405fe4
0x437ba1:	mov	r15, qword ptr [rip + 0xab6b8]
0x437ba8:	test	r15, r15
0x437bab:	jne	0x438159
0x437bb1:	mov	r14, qword ptr [rip + 0xab6a0]
0x437bb8:	test	r14, r14
0x437bbb:	jne	0x406200
0x437bc1:	mov	r14, r15
0x437bc4:	test	r15, r15
0x437bc7:	jne	0x438051
0x437bcd:	cmp	dword ptr [rip + 0xace3c], 0
0x437bd4:	je	0x437e7c
0x437bda:	xor	r15d, r15d
0x437bdd:	cmp	qword ptr [rip + 0xab663], 0
0x437be5:	jne	0x4383c8
0x437beb:	test	r12, r12
0x437bee:	je	0x437c3c
0x437bf0:	mov	rdi, r12
0x437bf3:	call	0x439d70
0x437bf8:	test	al, al
0x437bfa:	jne	0x437c3c
0x437bfc:	mov	rdi, r12
0x437bff:	call	0x4322e0
0x437c04:	mov	rdi, rax
0x437c07:	call	0x42db40
0x437c0c:	mov	esi, 0x2e
0x437c11:	lea	rdi, [rax + 1]
0x437c15:	mov	qword ptr [rip + 0xab62c], rax
0x437c1c:	call	0x403a60
0x437c21:	test	rax, rax
0x437c24:	je	0x437c29
0x437c26:	mov	byte ptr [rax], 0
0x437c29:	mov	rdi, qword ptr [rip + 0xab618]
0x437c30:	call	0x4039e0
0x437c35:	mov	qword ptr [rip + 0xab604], rax
0x437c3c:	mov	rdi, qword ptr [rip + 0xab625]
0x437c43:	xor	eax, eax
0x437c45:	test	rdi, rdi
0x437c48:	je	0x437c4f
0x437c4a:	call	0x4039e0
0x437c4f:	mov	r12, qword ptr [rip + 0xab602]
0x437c56:	mov	qword ptr [rip + 0xab5db], rax
0x437c5d:	test	r12, r12
0x437c60:	jne	0x406052
0x437c66:	cmp	dword ptr [rip + 0xab62f], 0
0x437c6d:	jne	0x406075
0x437c73:	cmp	dword ptr [rip + 0xae3c6], 0
0x437c7a:	jne	0x4060df
0x437c80:	mov	edi, 0x45b556
0x437c85:	call	0x4383f0
0x437c8a:	test	rax, rax
0x437c8d:	jne	0x40619e
0x437c93:	cmp	qword ptr [rip + 0xacd6d], 0
0x437c9b:	je	0x406111
0x437ca1:	mov	edi, 0x45b568
0x437ca6:	xor	ecx, ecx
0x437ca8:	mov	edx, 0x489e38
0x437cad:	xor	eax, eax
0x437caf:	mov	esi, 0x45b470
0x437cb4:	call	0x42d870
0x437cb9:	mov	rdi, qword ptr [rip + 0xacd48]
0x437cc0:	mov	r15, rax
0x437cc3:	test	rdi, rdi
0x437cc6:	je	0x4061f6
0x437ccc:	push	0
0x437cce:	mov	r9d, 0x489e38
0x437cd4:	mov	r8d, 0x4c4893
0x437cda:	xor	eax, eax
0x437cdc:	push	r15
0x437cde:	mov	rdx, r9
0x437ce1:	mov	ecx, 0x4636d9
0x437ce6:	mov	esi, 0x45b470
0x437ceb:	call	0x42d870
0x437cf0:	mov	rdi, r15
0x437cf3:	mov	r14, rax
0x437cf6:	call	0x403830
0x437cfb:	xor	ecx, ecx
0x437cfd:	mov	edx, 0x489e38
0x437d02:	mov	rdi, r14
0x437d05:	mov	esi, 0x45b575
0x437d0a:	xor	eax, eax
0x437d0c:	call	0x42d870
0x437d11:	xor	r9d, r9d
0x437d14:	xor	r8d, r8d
0x437d17:	mov	ecx, 1
0x437d1c:	mov	rsi, rax
0x437d1f:	mov	edx, 0x45b49a
0x437d24:	mov	edi, 0x4e24d0
0x437d29:	call	0x438670
0x437d2e:	xor	ecx, ecx
0x437d30:	mov	edx, 0x489e38
0x437d35:	mov	rdi, r14
0x437d38:	mov	esi, 0x45cbba
0x437d3d:	xor	eax, eax
0x437d3f:	call	0x42d870
0x437d44:	mov	ecx, 1
0x437d49:	mov	edx, 0x45b49a
0x437d4e:	xor	r8d, r8d
0x437d51:	mov	rsi, rax
0x437d54:	mov	r9d, 1
0x437d5a:	mov	edi, 0x4e24b0
0x437d5f:	call	0x438670
0x437d64:	mov	rdi, r14
0x437d67:	call	0x403830
0x437d6c:	mov	edi, dword ptr [rip + 0xacca6]
0x437d72:	pop	rdx
0x437d73:	pop	rcx
0x437d74:	test	edi, edi
0x437d76:	je	0x4381c3
0x437d7c:	cmp	edi, dword ptr [rip + 0xae336]
0x437d82:	je	0x405db4
0x437d88:	mov	edx, dword ptr [rip + 0xae2b2]
0x437d8e:	sub	edx, 2
0x437d91:	cmp	edx, 1
0x437d94:	jbe	0x4383b9
0x437d9a:	xor	r9d, r9d
0x437d9d:	cmp	dword ptr [rip + 0xae404], 0
0x437da4:	setne	r9b
0x437da8:	cmp	dword ptr [rip + 0xae2c5], 1
0x437daf:	sbb	r9d, -1
0x437db3:	cmp	dword ptr [rip + 0xae226], 0
0x437dba:	setne	r12b
0x437dbe:	cmp	ebx, 2
0x437dc1:	sete	r10b
0x437dc5:	and	r12b, r10b
0x437dc8:	jne	0x437dd4
0x437dca:	sub	ebx, 1
0x437dcd:	cmp	ebx, r9d
0x437dd0:	sete	r12b
0x437dd4:	mov	byte ptr [rip + 0xab449], r12b
0x437ddb:	call	0x438fa0
0x437de0:	movsxd	rbx, dword ptr [rip + 0xacc49]
0x437de7:	imul	r13, rbx, 0x18
0x437deb:	add	r13, qword ptr [rip + 0xacc36]
0x437df2:	mov	qword ptr [r13], 0
0x437dfa:	call	0x4390d0
0x437dff:	movsxd	r11, dword ptr [rip + 0xacc12]
0x437e06:	shl	r11, 5
0x437e0a:	add	r11, qword ptr [rip + 0xae257]
0x437e11:	mov	qword ptr [r11], 0
0x437e18:	lea	rsp, [rbp - 0x28]
0x437e1c:	pop	rbx
0x437e1d:	pop	r12
0x437e1f:	pop	r13
0x437e21:	pop	r14
0x437e23:	pop	r15
0x437e25:	pop	rbp
0x437e26:	ret	
0x437e27:	cmp	dword ptr [rip + 0xab46e], 0
0x437e2e:	jne	0x405fdd
0x437e34:	mov	r15, qword ptr [rip + 0xab425]
0x437e3b:	jmp	0x437bb1
0x437e40:	mov	r14, qword ptr [rip + 0xab421]
0x437e47:	cmp	byte ptr [rip + 0xae252], 0
0x437e4e:	mov	r13, r14
0x437e51:	jne	0x4383be
0x437e57:	test	r14, r14
0x437e5a:	jne	0x43820f
0x437e60:	xor	r13d, r13d
0x437e63:	cmp	dword ptr [rip + 0xab432], 0
0x437e6a:	jne	0x405fe4
0x437e70:	mov	r15, qword ptr [rip + 0xab3e9]
0x437e77:	jmp	0x437bb1
0x437e7c:	mov	qword ptr [rbp - 0x88], 0
0x437e87:	test	r13, r13
0x437e8a:	jne	0x437fd0
0x437e90:	test	r12, r12
0x437e93:	je	0x438043
0x437e99:	mov	rdi, r12
0x437e9c:	call	0x439d70
0x437ea1:	test	al, al
0x437ea3:	jne	0x405e3b
0x437ea9:	mov	rdi, r12
0x437eac:	call	0x4322e0
0x437eb1:	mov	rdi, rax
0x437eb4:	mov	r14, rax
0x437eb7:	call	0x4039e0
0x437ebc:	mov	r15, qword ptr [rip + 0xab395]
0x437ec3:	mov	qword ptr [rbp - 0x90], rax
0x437eca:	test	r15, r15
0x437ecd:	jne	0x405d5b
0x437ed3:	lea	rdi, [r14 + 1]
0x437ed7:	mov	esi, 0x2e
0x437edc:	call	0x403a60
0x437ee1:	mov	rdi, rax
0x437ee4:	test	rax, rax
0x437ee7:	jne	0x438365
0x437eed:	cmp	qword ptr [rip + 0xab353], 0
0x437ef5:	jne	0x405d47
0x437efb:	mov	qword ptr [rip + 0xab33a], 0
0x437f06:	test	r13, r13
0x437f09:	jne	0x437f7b
0x437f0b:	call	0x439450
0x437f10:	test	eax, eax
0x437f12:	js	0x437fe2
0x437f18:	cdqe	
0x437f1a:	shl	rax, 5
0x437f1e:	add	rax, qword ptr [rip + 0xae143]
0x437f25:	mov	rdi, qword ptr [rax]
0x437f28:	call	0x4322e0
0x437f2d:	mov	rdi, r14
0x437f30:	mov	qword ptr [rbp - 0x90], rax
0x437f37:	call	0x4039e0
0x437f3c:	mov	rsi, qword ptr [rbp - 0x90]
0x437f43:	mov	rdi, r14
0x437f46:	mov	rdx, rax
0x437f49:	mov	r13, rax
0x437f4c:	call	0x4038d0
0x437f51:	test	eax, eax
0x437f53:	jne	0x437fe2
0x437f59:	mov	r10, qword ptr [rbp - 0x90]
0x437f60:	cmp	byte ptr [r10 + r13], 0x2e
0x437f65:	jne	0x437fe2
0x437f67:	lea	rdi, [r10 + r13 + 1]
0x437f6c:	mov	esi, 0x2e
0x437f71:	call	0x403a40
0x437f76:	test	rax, rax
0x437f79:	jne	0x437fe2
0x437f7b:	cmp	r14, r15
0x437f7e:	je	0x4383b4
0x437f84:	mov	rdi, r14
0x437f87:	call	0x42db40
0x437f8c:	mov	rdi, r15
0x437f8f:	mov	qword ptr [rip + 0xab2b2], rax
0x437f96:	call	0x403830
0x437f9b:	cmp	qword ptr [rbp - 0x88], 0
0x437fa3:	jne	0x405fbb
0x437fa9:	mov	rdi, qword ptr [rip + 0xab2a8]
0x437fb0:	call	0x403830
0x437fb5:	mov	r15, qword ptr [rip + 0xab2a4]
0x437fbc:	mov	qword ptr [rip + 0xab291], 0
0x437fc7:	test	r15, r15
0x437fca:	jne	0x438086
0x437fd0:	cmp	dword ptr [rip + 0xaca39], 0
0x437fd7:	je	0x437c3c
0x437fdd:	jmp	0x437bdd
0x437fe2:	mov	rdi, qword ptr [rip + 0xab27f]
0x437fe9:	test	rdi, rdi
0x437fec:	jne	0x43801a
0x437fee:	mov	rdi, r14
0x437ff1:	xor	edx, edx
0x437ff3:	mov	esi, 0x4cd89a
0x437ff8:	xor	eax, eax
0x437ffa:	call	0x42d870
0x437fff:	mov	r14, rax
0x438002:	mov	rdi, r15
0x438005:	mov	qword ptr [rip + 0xab25c], r14
0x43800c:	mov	byte ptr [rip + 0xab23d], 1
0x438013:	call	0x403830
0x438018:	jmp	0x437f9b
0x43801a:	mov	rsi, r14
0x43801d:	xor	ecx, ecx
0x43801f:	mov	edx, 0x4cd89a
0x438024:	xor	eax, eax
0x438026:	mov	qword ptr [rbp - 0x90], rdi
0x43802d:	call	0x42d870
0x438032:	mov	rdi, qword ptr [rbp - 0x90]
0x438039:	mov	r14, rax
0x43803c:	call	0x403830
0x438041:	jmp	0x438002
0x438043:	xor	r15d, r15d
0x438046:	mov	r14d, 0x45b67c
0x43804c:	jmp	0x437eed
0x438051:	cmp	byte ptr [r14], 0
0x438055:	je	0x405f54
0x43805b:	call	0x439450
0x438060:	cmp	eax, -2
0x438063:	je	0x405e51
0x438069:	cmp	dword ptr [rip + 0xac9a0], 0
0x438070:	je	0x405e0e
0x438076:	mov	r15, qword ptr [rip + 0xab1e3]
0x43807d:	test	r15, r15
0x438080:	je	0x437bdd
0x438086:	cmp	byte ptr [r15], 0
0x43808a:	je	0x437c3c
0x438090:	cmp	qword ptr [rip + 0xab1b0], 0
0x438098:	jne	0x4383d7
0x43809e:	call	0x439450
0x4380a3:	cmp	eax, -2
0x4380a6:	je	0x406391
0x4380ac:	mov	r13, qword ptr [rip + 0xab1a5]
0x4380b3:	test	r13, r13
0x4380b6:	jne	0x4063ff
0x4380bc:	mov	rdi, r15
0x4380bf:	call	0x42db40
0x4380c4:	mov	qword ptr [rip + 0xab17d], rax
0x4380cb:	jmp	0x437c29
0x4380d0:	mov	rdi, r14
0x4380d3:	xor	edx, edx
0x4380d5:	mov	esi, 0x4bef00
0x4380da:	xor	eax, eax
0x4380dc:	call	0x42d870
0x4380e1:	mov	edx, 0x45b059
0x4380e6:	mov	r14, rax
0x4380e9:	mov	rsi, rdx
0x4380ec:	mov	rdi, rax
0x4380ef:	call	r15
0x4380f2:	mov	qword ptr [rip + 0xadfc7], rax
0x4380f9:	test	rax, rax
0x4380fc:	je	0x4063a5
0x438102:	mov	rdi, r14
0x438105:	call	0x403830
0x43810a:	jmp	0x43779c
0x43810f:	mov	rdi, qword ptr [rip + 0xaa35a]
0x438116:	cmp	byte ptr [rdi], 0x30
0x438119:	jne	0x4378cf
0x43811f:	mov	rdi, rax
0x438122:	call	0x4039e0
0x438127:	mov	r8, rsp
0x43812a:	add	rax, 0x1a
0x43812e:	mov	rsi, rax
0x438131:	and	rax, 0xfffffffffffff000
0x438137:	and	rsi, 0xfffffffffffffff0
0x43813b:	sub	r8, rax
0x43813e:	cmp	rsp, r8
0x438141:	je	0x438221
0x438147:	sub	rsp, 0x1000
0x43814e:	or	qword ptr [rsp + 0xff8], 0
0x438157:	jmp	0x43813e
0x438159:	mov	rdi, r15
0x43815c:	call	0x4322e0
0x438161:	cmp	r15, rax
0x438164:	je	0x4063b5
0x43816a:	mov	rdi, r14
0x43816d:	call	0x403830
0x438172:	mov	r15, qword ptr [rip + 0xab0e7]
0x438179:	mov	qword ptr [rip + 0xab0e4], 0
0x438184:	jmp	0x437bb1
0x438189:	mov	rdi, rax
0x43818c:	call	0x4039e0
0x438191:	mov	r11, rsp
0x438194:	add	rax, 0x1a
0x438198:	mov	r10, rax
0x43819b:	and	rax, 0xfffffffffffff000
0x4381a1:	and	r10, 0xfffffffffffffff0
0x4381a5:	sub	r11, rax
0x4381a8:	cmp	rsp, r11
0x4381ab:	je	0x4382b8
0x4381b1:	sub	rsp, 0x1000
0x4381b8:	or	qword ptr [rsp + 0xff8], 0
0x4381c1:	jmp	0x4381a8
0x4381c3:	mov	ecx, dword ptr [rip + 0xade77]
0x4381c9:	sub	ecx, 2
0x4381cc:	cmp	ecx, 1
0x4381cf:	jbe	0x4383dc
0x4381d5:	mov	esi, dword ptr [rip + 0xadfcd]
0x4381db:	xor	r9d, r9d
0x4381de:	mov	r8d, dword ptr [rip + 0xab043]
0x4381e5:	test	esi, esi
0x4381e7:	setne	r9b
0x4381eb:	or	r8d, dword ptr [rip + 0xade82]
0x4381f2:	or	r8d, esi
0x4381f5:	je	0x437db3
0x4381fb:	mov	esi, 0x45bc4a
0x438200:	mov	edi, 0x45b58a
0x438205:	call	0x439090
0x43820a:	jmp	0x437d9a
0x43820f:	cmp	dword ptr [rip + 0xab086], 0
0x438216:	je	0x437ba1
0x43821c:	jmp	0x405fe4
0x438221:	mov	rdx, rsi
0x438224:	and	edx, 0xfff
0x43822a:	sub	rsp, rdx
0x43822d:	test	rdx, rdx
0x438230:	je	0x438238
0x438232:	or	qword ptr [rsp + rdx - 8], 0
0x438238:	lea	r15, [rsp + 0xf]
0x43823d:	and	r15, 0xfffffffffffffff0
0x438241:	mov	r13, r14
0x438244:	jmp	0x438250
0x438246:	cmp	r9b, 0x3a
0x43824a:	je	0x43825a
0x43824c:	add	r13, 1
0x438250:	movzx	r9d, byte ptr [r13]
0x438255:	test	r9b, r9b
0x438258:	jne	0x438246
0x43825a:	mov	r12, r13
0x43825d:	mov	rsi, r14
0x438260:	mov	rdi, r15
0x438263:	sub	r12, r14
0x438266:	mov	rdx, r12
0x438269:	call	0x4038b0
0x43826e:	cmp	r13, r14
0x438271:	je	0x4063dc
0x438277:	cmp	byte ptr [r13 - 1], 0x2f
0x43827c:	lea	r10, [r15 + r12]
0x438280:	jne	0x4063cd
0x438286:	mov	byte ptr [r10], 0
0x43828a:	xor	r8d, r8d
0x43828d:	xor	edx, edx
0x43828f:	mov	r9d, 1
0x438295:	mov	ecx, 1
0x43829a:	mov	rsi, r15
0x43829d:	mov	edi, 0x4e24b0
0x4382a2:	call	0x438670
0x4382a7:	cmp	byte ptr [r13], 0
0x4382ac:	je	0x4378cf
0x4382b2:	lea	r14, [r13 + 1]
0x4382b6:	jmp	0x438241
0x4382b8:	mov	rdx, r10
0x4382bb:	and	edx, 0xfff
0x4382c1:	sub	rsp, rdx
0x4382c4:	test	rdx, rdx
0x4382c7:	je	0x4382cf
0x4382c9:	or	qword ptr [rsp + rdx - 8], 0
0x4382cf:	lea	r14, [rsp + 0xf]
0x4382d4:	and	r14, 0xfffffffffffffff0
0x4382d8:	mov	r13, r15
0x4382db:	jmp	0x4382e5
0x4382dd:	cmp	al, 0x3a
0x4382df:	je	0x4382ee
0x4382e1:	add	r13, 1
0x4382e5:	movzx	eax, byte ptr [r13]
0x4382ea:	test	al, al
0x4382ec:	jne	0x4382dd
0x4382ee:	mov	r12, r13
0x4382f1:	mov	rsi, r15
0x4382f4:	mov	rdi, r14
0x4382f7:	sub	r12, r15
0x4382fa:	mov	rdx, r12
0x4382fd:	call	0x4038b0
0x438302:	cmp	r13, r15
0x438305:	je	0x405ef9
0x43830b:	cmp	byte ptr [r13 - 1], 0x2f
0x438310:	lea	rcx, [r14 + r12]
0x438314:	jne	0x405eeb
0x43831a:	mov	byte ptr [rcx], 0
0x43831d:	xor	r9d, r9d
0x438320:	xor	r8d, r8d
0x438323:	xor	edx, edx
0x438325:	mov	ecx, 1
0x43832a:	mov	rsi, r14
0x43832d:	mov	edi, 0x4e24d0
0x438332:	call	0x438670
0x438337:	xor	r9d, r9d
0x43833a:	xor	r8d, r8d
0x43833d:	xor	edx, edx
0x43833f:	mov	ecx, 1
0x438344:	mov	rsi, r14
0x438347:	mov	edi, 0x4e2420
0x43834c:	call	0x438670
0x438351:	cmp	byte ptr [r13], 0
0x438356:	je	0x4378b9
0x43835c:	lea	r15, [r13 + 1]
0x438360:	jmp	0x4382d8
0x438365:	mov	qword ptr [rbp - 0xa0], rax
0x43836c:	call	0x4039e0
0x438371:	mov	qword ptr [rbp - 0x98], rax
0x438378:	test	rax, rax
0x43837b:	je	0x437eed
0x438381:	mov	rdi, qword ptr [rbp - 0xa0]
0x438388:	mov	esi, 0x45b551
0x43838d:	call	0x403be0
0x438392:	test	eax, eax
0x438394:	je	0x405d93
0x43839a:	mov	esi, 0x4c933f
0x43839f:	mov	rdi, r14
0x4383a2:	call	0x403be0
0x4383a7:	test	eax, eax
0x4383a9:	jne	0x437eed
0x4383af:	jmp	0x405d93
0x4383b4:	jmp	0x405fd1
0x4383b9:	jmp	0x405f1c
0x4383be:	jmp	0x40600e
0x4383c3:	jmp	0x406037
0x4383c8:	jmp	0x40603e
0x4383cd:	jmp	0x406267
0x4383d2:	jmp	0x4062a3
0x4383d7:	jmp	0x40603e
0x4383dc:	jmp	0x405f1c
0x4383e1:	nop	
0x4383e2:	nop	word ptr cs:[rax + rax]
0x4383ed:	nop	dword ptr [rax]
0x4383f0:	endbr64	
0x4383f4:	push	r13
0x4383f6:	push	r12
0x4383f8:	mov	r12, rdi
0x4383fb:	push	rcx
0x4383fc:	call	0x403800
0x438401:	cmp	byte ptr [rip + 0xac549], 0
0x438408:	mov	r13, rax
0x43840b:	jne	0x4064f0
0x438411:	mov	rax, r13
0x438414:	pop	rdx
0x438415:	pop	r12
0x438417:	pop	r13
0x438419:	ret	
0x43841a:	nop	word ptr [rax + rax]
0x438420:	endbr64	
0x438424:	lea	rax, [rdi + 0x10]
0x438428:	push	r12
0x43842a:	mov	r12, rdi
0x43842d:	push	rbp
0x43842e:	mov	rbp, rsi
0x438431:	push	rdx
0x438432:	mov	qword ptr [rdi], rax
0x438435:	test	rsi, rsi
0x438438:	je	0x406838
0x43843e:	mov	rdi, rsi
0x438441:	call	0x4039e0
0x438446:	lea	rdx, [rbp + rax]
0x43844b:	pop	rax
0x43844c:	mov	rsi, rbp
0x43844f:	mov	rdi, r12
0x438452:	pop	rbp
0x438453:	pop	r12
0x438455:	jmp	0x438460
0x438457:	nop	
0x438458:	nop	dword ptr [rax + rax]
0x438460:	endbr64	
0x438464:	push	r12
0x438466:	mov	r12, rdx
0x438469:	push	rbp
0x43846a:	mov	rbp, rsi
0x43846d:	push	rbx
0x43846e:	mov	rbx, rdi
0x438471:	sub	rsp, 0x10
0x438475:	test	rsi, rsi
0x438478:	jne	0x438483
0x43847a:	test	rdx, rdx
0x43847d:	jne	0x406842
0x438483:	sub	r12, rbp
0x438486:	mov	qword ptr [rsp + 8], r12
0x43848b:	cmp	r12, 0xf
0x43848f:	ja	0x4384b8
0x438491:	mov	rdi, qword ptr [rbx]
0x438494:	mov	rdx, r12
0x438497:	mov	rsi, rbp
0x43849a:	call	0x440f00
0x43849f:	mov	rcx, qword ptr [rsp + 8]
0x4384a4:	mov	rdx, qword ptr [rbx]
0x4384a7:	mov	qword ptr [rbx + 8], rcx
0x4384ab:	mov	byte ptr [rdx + rcx], 0
0x4384af:	add	rsp, 0x10
0x4384b3:	pop	rbx
0x4384b4:	pop	rbp
0x4384b5:	pop	r12
0x4384b7:	ret	
0x4384b8:	xor	edx, edx
0x4384ba:	lea	rsi, [rsp + 8]
0x4384bf:	mov	rdi, rbx
0x4384c2:	call	0x440cf0
0x4384c7:	mov	qword ptr [rbx], rax
0x4384ca:	mov	rax, qword ptr [rsp + 8]
0x4384cf:	mov	qword ptr [rbx + 0x10], rax
0x4384d3:	jmp	0x438491
0x4384d5:	nop	
0x4384d6:	nop	word ptr cs:[rax + rax]
0x4384e0:	endbr64	
0x4384e4:	push	r14
0x4384e6:	push	r13
0x4384e8:	push	r12
0x4384ea:	push	rbp
0x4384eb:	mov	rbp, rdi
0x4384ee:	push	rbx
0x4384ef:	sub	rsp, 0x10
0x4384f3:	cmp	byte ptr [rip + 0xac457], 0
0x4384fa:	jne	0x40684c
0x438500:	cmp	dword ptr [rip + 0xadad9], 0
0x438507:	jne	0x43852a
0x438509:	cmp	byte ptr [rip + 0xac440], 0
0x438510:	jne	0x40686c
0x438516:	add	rsp, 0x10
0x43851a:	mov	rdi, rbp
0x43851d:	pop	rbx
0x43851e:	pop	rbp
0x43851f:	pop	r12
0x438521:	pop	r13
0x438523:	pop	r14
0x438525:	jmp	0x403bd0
0x43852a:	mov	rdi, qword ptr [rip + 0xaab6f]
0x438531:	mov	rdx, rbp
0x438534:	mov	esi, 0x45b5ce
0x438539:	xor	eax, eax
0x43853b:	call	0x43a390
0x438540:	jmp	0x438509
0x438542:	nop	word ptr cs:[rax + rax]
0x43854d:	nop	dword ptr [rax]
0x438550:	endbr64	
0x438554:	imul	rax, rdi, 0x60
0x438558:	mov	r10, rsi
0x43855b:	push	rbx
0x43855c:	mov	r9, rdi
0x43855f:	mov	qword ptr [r8], rdi
0x438562:	mov	esi, ecx
0x438564:	mov	rbx, r8
0x438567:	mov	qword ptr [r8 + 0x48], rdx
0x43856b:	mov	qword ptr [r8 + 8], 0
0x438573:	mov	edi, dword ptr [rax + 0x48badc]
0x438579:	mov	qword ptr [r8 + 0x10], r10
0x43857d:	call	0x4365f0
0x438582:	mov	rsi, r10
0x438585:	mov	rdi, r9
0x438588:	xor	eax, 1
0x43858b:	movzx	ecx, al
0x43858e:	shl	ecx, 2
0x438591:	mov	dword ptr [r8 + 0x50], ecx
0x438595:	mov	rcx, r8
0x438598:	call	0x436620
0x43859d:	mov	rdx, qword ptr [rbx + 0x40]
0x4385a1:	cmp	rdx, 1
0x4385a5:	jne	0x4385b1
0x4385a7:	mov	rax, qword ptr [rbx + 0x20]
0x4385ab:	mov	qword ptr [rbx + 0x18], rax
0x4385af:	pop	rbx
0x4385b0:	ret	
0x4385b1:	cmp	rdx, 2
0x4385b5:	jne	0x4385cf
0x4385b7:	mov	rdx, qword ptr [rbx + 0x28]
0x4385bb:	mov	rdi, qword ptr [rbx + 0x20]
0x4385bf:	xor	ecx, ecx
0x4385c1:	mov	esi, 0x4c6c55
0x4385c6:	xor	eax, eax
0x4385c8:	call	0x4367b0
0x4385cd:	jmp	0x4385ab
0x4385cf:	jmp	0x406ac0
0x4385d4:	nop	word ptr cs:[rax + rax]
0x4385df:	nop	
0x4385e0:	endbr64	
0x4385e4:	push	r12
0x4385e6:	mov	r12, rdi
0x4385e9:	mov	rdi, rsi
0x4385ec:	mov	rsi, rdx
0x4385ef:	call	0x442be0
0x4385f4:	lea	rdx, [r12 + 0x10]
0x4385f9:	mov	qword ptr [r12], rdx
0x4385fd:	mov	rcx, qword ptr [rax]
0x438600:	lea	rsi, [rax + 0x10]
0x438604:	cmp	rcx, rsi
0x438607:	je	0x406ad4
0x43860d:	mov	rdi, qword ptr [rax + 0x10]
0x438611:	mov	qword ptr [r12], rcx
0x438615:	mov	qword ptr [r12 + 0x10], rdi
0x43861a:	mov	r8, qword ptr [rax + 8]
0x43861e:	mov	qword ptr [rax], rsi
0x438621:	mov	qword ptr [rax + 8], 0
0x438629:	mov	qword ptr [r12 + 8], r8
0x43862e:	mov	byte ptr [rax + 0x10], 0
0x438632:	mov	rax, r12
0x438635:	pop	r12
0x438637:	ret	
0x438638:	nop	dword ptr [rax + rax]
0x438640:	endbr64	
0x438644:	push	rbp
0x438645:	mov	rbp, rdi
0x438648:	push	rbx
0x438649:	movsxd	rbx, esi
0x43864c:	push	rax
0x43864d:	lea	edi, [rbx + 1]
0x438650:	movsxd	rdi, edi
0x438653:	call	0x42db10
0x438658:	mov	rdx, rbx
0x43865b:	mov	rsi, rbp
0x43865e:	mov	rdi, rax
0x438661:	call	0x403c60
0x438666:	mov	byte ptr [rax + rbx], 0
0x43866a:	pop	rdx
0x43866b:	pop	rbx
0x43866c:	pop	rbp
0x43866d:	ret	
0x43866e:	nop	
0x438670:	endbr64	
0x438674:	push	r15
0x438676:	movd	xmm1, r8d
0x43867b:	movd	xmm2, ecx
0x43867f:	mov	r15, rsi
0x438682:	push	r14
0x438684:	punpckldq	xmm1, xmm2
0x438688:	mov	r14, rdx
0x43868b:	push	r13
0x43868d:	mov	r13d, r9d
0x438690:	push	r12
0x438692:	mov	r12, rdi
0x438695:	push	rbp
0x438696:	mov	rbp, rdi
0x438699:	push	rbx
0x43869a:	sub	rsp, 0x18
0x43869e:	mov	r11, qword ptr [rdi]
0x4386a1:	movq	qword ptr [rsp], xmm1
0x4386a6:	test	r11, r11
0x4386a9:	je	0x4386bb
0x4386ab:	cmp	dword ptr [r11 + 0x14], ecx
0x4386af:	jg	0x4386bb
0x4386b1:	lea	r12, [r11 + 8]
0x4386b5:	mov	r11, qword ptr [r11 + 8]
0x4386b9:	jmp	0x4386a6
0x4386bb:	mov	rsi, qword ptr [rip + 0xa9d4e]
0x4386c2:	mov	rdi, rsi
0x4386c5:	mov	qword ptr [rsp + 8], rsi
0x4386ca:	call	0x4039e0
0x4386cf:	mov	rsi, qword ptr [rsp + 8]
0x4386d4:	mov	rdi, r15
0x4386d7:	movsxd	rbx, eax
0x4386da:	mov	rdx, rbx
0x4386dd:	call	0x4038d0
0x4386e2:	test	eax, eax
0x4386e4:	je	0x438788
0x4386ea:	mov	rdi, r15
0x4386ed:	call	0x42db40
0x4386f2:	mov	r15, rax
0x4386f5:	mov	rdi, r15
0x4386f8:	mov	esi, 0x2e
0x4386fd:	call	0x403a40
0x438702:	mov	rbx, rax
0x438705:	test	rax, rax
0x438708:	je	0x438742
0x43870a:	cmp	byte ptr [rax + 1], 0x2e
0x43870e:	je	0x438716
0x438710:	lea	rdi, [rbx + 1]
0x438714:	jmp	0x4386f8
0x438716:	cmp	byte ptr [rax + 2], 0x2f
0x43871a:	jne	0x438710
0x43871c:	cmp	rax, r15
0x43871f:	je	0x438710
0x438721:	cmp	byte ptr [rax - 1], 0x2f
0x438725:	jne	0x438710
0x438727:	mov	byte ptr [rax], 0
0x43872a:	mov	esi, 1
0x43872f:	mov	rdi, r15
0x438732:	call	0x403dc0
0x438737:	test	eax, eax
0x438739:	jne	0x406ae4
0x43873f:	mov	byte ptr [rbx], 0x2e
0x438742:	mov	rdi, r15
0x438745:	call	0x4039e0
0x43874a:	cmp	dword ptr [rbp + 8], eax
0x43874d:	jge	0x438752
0x43874f:	mov	dword ptr [rbp + 8], eax
0x438752:	mov	edi, 0x20
0x438757:	call	0x42db10
0x43875c:	mov	rdi, qword ptr [rsp]
0x438760:	movq	xmm0, r15
0x438765:	movhps	xmm0, qword ptr [r12]
0x43876a:	mov	dword ptr [rax + 0x18], r13d
0x43876e:	mov	qword ptr [rax + 0x10], rdi
0x438772:	movups	xmmword ptr [rax], xmm0
0x438775:	mov	qword ptr [r12], rax
0x438779:	add	rsp, 0x18
0x43877d:	pop	rbx
0x43877e:	pop	rbp
0x43877f:	pop	r12
0x438781:	pop	r13
0x438783:	pop	r14
0x438785:	pop	r15
0x438787:	ret	
0x438788:	add	rbx, r15
0x43878b:	movzx	eax, byte ptr [rbx]
0x43878e:	test	al, al
0x438790:	jne	0x4387df
0x438792:	test	r14, r14
0x438795:	je	0x4386ea
0x43879b:	cmp	byte ptr [r14], 0x24
0x43879f:	je	0x4387e8
0x4387a1:	mov	rsi, r14
0x4387a4:	xor	edx, edx
0x4387a6:	mov	edi, 0x45b5e2
0x4387ab:	xor	eax, eax
0x4387ad:	call	0x42d870
0x4387b2:	xor	edx, edx
0x4387b4:	mov	rsi, rbx
0x4387b7:	mov	rdi, rax
0x4387ba:	mov	r14, rax
0x4387bd:	xor	eax, eax
0x4387bf:	call	0x42d870
0x4387c4:	mov	rdi, r14
0x4387c7:	mov	r15, rax
0x4387ca:	call	0x403830
0x4387cf:	mov	rdi, r15
0x4387d2:	call	0x4387f0
0x4387d7:	mov	r15, rax
0x4387da:	jmp	0x4386f5
0x4387df:	cmp	al, 0x2f
0x4387e1:	je	0x438792
0x4387e3:	jmp	0x4386ea
0x4387e8:	jmp	0x406b3c
0x4387ed:	nop	dword ptr [rax]
0x4387f0:	push	rbp
0x4387f1:	mov	rbp, rsp
0x4387f4:	push	r15
0x4387f6:	push	r14
0x4387f8:	push	r13
0x4387fa:	push	r12
0x4387fc:	mov	r12, rdi
0x4387ff:	push	rbx
0x438800:	push	rax
0x438801:	movzx	ebx, byte ptr [r12]
0x438806:	cmp	bl, 0x40
0x438809:	je	0x438822
0x43880b:	cmp	bl, 0x24
0x43880e:	je	0x438822
0x438810:	lea	rsp, [rbp - 0x28]
0x438814:	mov	rax, r12
0x438817:	pop	rbx
0x438818:	pop	r12
0x43881a:	pop	r13
0x43881c:	pop	r14
0x43881e:	pop	r15
0x438820:	pop	rbp
0x438821:	ret	
0x438822:	mov	eax, 1
0x438827:	jmp	0x43882d
0x438829:	test	dl, dl
0x43882b:	je	0x438846
0x43882d:	movzx	edx, byte ptr [r12 + rax]
0x438832:	lea	r14, [rax - 1]
0x438836:	lea	r13, [r12 + rax]
0x43883a:	mov	rcx, rax
0x43883d:	add	rax, 1
0x438841:	cmp	dl, 0x2f
0x438844:	jne	0x438829
0x438846:	add	rcx, 0x17
0x43884a:	mov	rdi, rsp
0x43884d:	mov	rsi, rcx
0x438850:	and	rcx, 0xfffffffffffff000
0x438857:	and	rsi, 0xfffffffffffffff0
0x43885b:	sub	rdi, rcx
0x43885e:	cmp	rsp, rdi
0x438861:	je	0x438875
0x438863:	sub	rsp, 0x1000
0x43886a:	or	qword ptr [rsp + 0xff8], 0
0x438873:	jmp	0x43885e
0x438875:	and	esi, 0xfff
0x43887b:	sub	rsp, rsi
0x43887e:	test	rsi, rsi
0x438881:	jne	0x43890d
0x438887:	lea	rdi, [rsp + 0xf]
0x43888c:	lea	rsi, [r12 + 1]
0x438891:	mov	rdx, r14
0x438894:	and	rdi, 0xfffffffffffffff0
0x438898:	call	0x403c60
0x43889d:	mov	byte ptr [rax + r14], 0
0x4388a2:	mov	rdi, rax
0x4388a5:	cmp	bl, 0x40
0x4388a8:	jne	0x406bec
0x4388ae:	xor	edx, edx
0x4388b0:	mov	esi, 0x45b5e9
0x4388b5:	xor	eax, eax
0x4388b7:	call	0x42d870
0x4388bc:	mov	rdi, rax
0x4388bf:	mov	r15, rax
0x4388c2:	call	0x403800
0x4388c7:	mov	rbx, rax
0x4388ca:	test	rax, rax
0x4388cd:	jne	0x406c07
0x4388d3:	mov	rbx, qword ptr [rip + 0xa9b36]
0x4388da:	mov	rdi, r15
0x4388dd:	call	0x403830
0x4388e2:	test	rbx, rbx
0x4388e5:	je	0x406bfd
0x4388eb:	xor	edx, edx
0x4388ed:	mov	rsi, r13
0x4388f0:	mov	rdi, rbx
0x4388f3:	xor	eax, eax
0x4388f5:	call	0x42d870
0x4388fa:	mov	rdi, r12
0x4388fd:	mov	r14, rax
0x438900:	call	0x403830
0x438905:	mov	r12, r14
0x438908:	jmp	0x438801
0x43890d:	or	qword ptr [rsp + rsi - 8], 0
0x438913:	jmp	0x438887
0x438918:	nop	dword ptr [rax + rax]
0x438920:	endbr64	
0x438924:	push	r13
0x438926:	push	r12
0x438928:	mov	r12, rdi
0x43892b:	push	rbp
0x43892c:	mov	rbp, rdx
0x43892f:	push	rbx
0x438930:	mov	rbx, rsi
0x438933:	push	r10
0x438935:	mov	rdx, qword ptr [rdi + 8]
0x438939:	mov	r13, qword ptr [rdi + 0x18]
0x43893d:	test	rdx, rdx
0x438940:	jne	0x406c53
0x438946:	mov	rsi, qword ptr [r12]
0x43894a:	cmp	rsi, 0x824
0x438951:	je	0x4389f0
0x438957:	cmp	rsi, 0x825
0x43895e:	je	0x4389a5
0x438960:	cmp	rsi, 0x826
0x438967:	je	0x406c14
0x43896d:	mov	r8d, dword ptr [r12 + 0x50]
0x438972:	test	r8d, r8d
0x438975:	jne	0x4389ad
0x438977:	push	rsi
0x438978:	xor	r9d, r9d
0x43897b:	xor	r8d, r8d
0x43897e:	mov	ecx, 0x80000
0x438983:	push	rbp
0x438984:	mov	rdx, r12
0x438987:	mov	esi, 0x4e32e0
0x43898c:	mov	edi, 0x4e4a40
0x438991:	push	0
0x438993:	push	rbx
0x438994:	call	0x438a10
0x438999:	add	rsp, 0x20
0x43899d:	test	al, al
0x43899f:	je	0x406c3b
0x4389a5:	pop	rax
0x4389a6:	pop	rbx
0x4389a7:	pop	rbp
0x4389a8:	pop	r12
0x4389aa:	pop	r13
0x4389ac:	ret	
0x4389ad:	imul	rsi, rsi, 0x60
0x4389b1:	mov	rcx, qword ptr [r12 + 0x10]
0x4389b6:	xor	edi, edi
0x4389b8:	mov	rdx, r13
0x4389bb:	mov	r9d, 0x80000
0x4389c1:	add	rsi, 0x48baa0
0x4389c8:	call	0x439000
0x4389cd:	test	al, al
0x4389cf:	jne	0x4389a5
0x4389d1:	mov	eax, dword ptr [r12 + 0x50]
0x4389d6:	test	al, 4
0x4389d8:	je	0x4389fe
0x4389da:	mov	rdx, qword ptr [rbx + 8]
0x4389de:	mov	rdi, r12
0x4389e1:	pop	r8
0x4389e3:	mov	esi, 0x80000
0x4389e8:	pop	rbx
0x4389e9:	pop	rbp
0x4389ea:	pop	r12
0x4389ec:	pop	r13
0x4389ee:	jmp	rdx
0x4389f0:	mov	rdi, r12
0x4389f3:	call	qword ptr [rbx]
0x4389f5:	test	al, al
0x4389f7:	je	0x4389a5
0x4389f9:	jmp	0x406c66
0x4389fe:	test	eax, eax
0x438a00:	je	0x438977
0x438a06:	jmp	0x406c6d
0x438a0b:	nop	dword ptr [rax + rax]
0x438a10:	endbr64	
0x438a14:	push	r15
0x438a16:	push	r14
0x438a18:	push	r13
0x438a1a:	mov	r13, rdi
0x438a1d:	push	r12
0x438a1f:	push	rbp
0x438a20:	mov	rbp, rdx
0x438a23:	push	rbx
0x438a24:	sub	rsp, 0x58
0x438a28:	mov	r15, qword ptr [rdx]
0x438a2b:	mov	rdi, qword ptr [rdx + 0x10]
0x438a2f:	mov	r11, qword ptr [rdx + 0x48]
0x438a33:	mov	qword ptr [rsp], rsi
0x438a37:	movsxd	r14, r15d
0x438a3a:	mov	dword ptr [rsp + 0x40], ecx
0x438a3e:	mov	rbx, qword ptr [rsp + 0x90]
0x438a46:	imul	rdx, r14, 0x60
0x438a4a:	mov	qword ptr [rsp + 8], rdi
0x438a4f:	mov	eax, dword ptr [rsp + 0x98]
0x438a56:	movzx	r12d, word ptr [rdx + 0x48bae2]
0x438a5e:	cmp	r12w, -1
0x438a63:	je	0x438adc
0x438a65:	mov	r10, r13
0x438a68:	add	r10, r12
0x438a6b:	je	0x438adc
0x438a6d:	cmp	qword ptr [rsp + 0xa0], 0
0x438a76:	mov	esi, r15d
0x438a79:	setne	dil
0x438a7d:	test	r8d, r8d
0x438a80:	setne	cl
0x438a83:	and	edi, ecx
0x438a85:	test	al, al
0x438a87:	je	0x438cbb
0x438a8d:	test	dil, dil
0x438a90:	jne	0x438e9e
0x438a96:	xor	r12d, r12d
0x438a99:	imul	rsi, r14, 0x60
0x438a9d:	mov	edi, dword ptr [rsi + 0x48bae8]
0x438aa3:	cmp	edi, 7
0x438aa6:	ja	0x438adc
0x438aa8:	mov	edx, edi
0x438aaa:	notrack jmp	qword ptr ds:[rdx*8 + 0x488560]
0x438ab2:	imul	rdi, r14, 0x60
0x438ab6:	test	byte ptr [rdi + 0x48bae1], 4
0x438abd:	jne	0x406c81
0x438ac3:	cmp	r11, 0x7fffffff
0x438aca:	jg	0x406d9f
0x438ad0:	mov	dword ptr [r10], r11d
0x438ad3:	test	r12, r12
0x438ad6:	jne	0x438e91
0x438adc:	cmp	qword ptr [rbx + 0x18], 0
0x438ae1:	je	0x438b60
0x438ae3:	imul	r15, r15, 0x60
0x438ae7:	mov	r12d, dword ptr [r15 + 0x48badc]
0x438aee:	mov	r10d, r12d
0x438af1:	and	r10d, dword ptr [rbx + 0x28]
0x438af5:	jne	0x438b74
0x438af7:	cmp	qword ptr [rbx + 0x18], 1
0x438afc:	jbe	0x438b60
0x438afe:	mov	esi, r12d
0x438b01:	and	esi, dword ptr [rbx + 0x38]
0x438b04:	jne	0x438bb5
0x438b0a:	cmp	qword ptr [rbx + 0x18], 2
0x438b0f:	jbe	0x438b60
0x438b11:	mov	r14d, r12d
0x438b14:	and	r14d, dword ptr [rbx + 0x48]
0x438b18:	jne	0x438c35
0x438b1e:	cmp	qword ptr [rbx + 0x18], 3
0x438b23:	jbe	0x438b60
0x438b25:	mov	eax, r12d
0x438b28:	and	eax, dword ptr [rbx + 0x58]
0x438b2b:	jne	0x438c78
0x438b31:	cmp	qword ptr [rbx + 0x18], 4
0x438b36:	jbe	0x438b60
0x438b38:	mov	r14d, 4
0x438b3e:	mov	r15d, r8d
0x438b41:	mov	rax, r14
0x438b44:	mov	r8d, r12d
0x438b47:	shl	rax, 4
0x438b4b:	and	r8d, dword ptr [rbx + rax + 0x28]
0x438b50:	jne	0x438bf8
0x438b56:	add	r14, 1
0x438b5a:	cmp	qword ptr [rbx + 0x18], r14
0x438b5e:	ja	0x438b41
0x438b60:	mov	eax, 1
0x438b65:	add	rsp, 0x58
0x438b69:	pop	rbx
0x438b6a:	pop	rbp
0x438b6b:	pop	r12
0x438b6d:	pop	r13
0x438b6f:	pop	r14
0x438b71:	pop	r15
0x438b73:	ret	
0x438b74:	push	r10
0x438b76:	mov	rdx, rbp
0x438b79:	mov	rdi, r13
0x438b7c:	push	qword ptr [rbx + 0x10]
0x438b7f:	push	qword ptr [rsp + 0xb0]
0x438b86:	push	rbx
0x438b87:	mov	ecx, dword ptr [rsp + 0x60]
0x438b8b:	mov	rsi, qword ptr [rsp + 0x20]
0x438b90:	mov	dword ptr [rsp + 0x30], r9d
0x438b95:	mov	dword ptr [rsp + 0x28], r8d
0x438b9a:	call	qword ptr [rbx + 0x20]
0x438b9d:	add	rsp, 0x20
0x438ba1:	mov	r8d, dword ptr [rsp + 8]
0x438ba6:	mov	r9d, dword ptr [rsp + 0x10]
0x438bab:	test	al, al
0x438bad:	jne	0x438af7
0x438bb3:	jmp	0x438b65
0x438bb5:	push	rdi
0x438bb6:	mov	rdx, rbp
0x438bb9:	mov	rdi, r13
0x438bbc:	push	qword ptr [rbx + 0x10]
0x438bbf:	push	qword ptr [rsp + 0xb0]
0x438bc6:	push	rbx
0x438bc7:	mov	ecx, dword ptr [rsp + 0x60]
0x438bcb:	mov	rsi, qword ptr [rsp + 0x20]
0x438bd0:	mov	dword ptr [rsp + 0x30], r9d
0x438bd5:	mov	dword ptr [rsp + 0x28], r8d
0x438bda:	call	qword ptr [rbx + 0x30]
0x438bdd:	add	rsp, 0x20
0x438be1:	mov	r8d, dword ptr [rsp + 8]
0x438be6:	mov	r9d, dword ptr [rsp + 0x10]
0x438beb:	test	al, al
0x438bed:	jne	0x438b0a
0x438bf3:	jmp	0x438b65
0x438bf8:	push	rdx
0x438bf9:	mov	r8d, r15d
0x438bfc:	mov	rdx, rbp
0x438bff:	mov	rdi, r13
0x438c02:	push	qword ptr [rbx + 0x10]
0x438c05:	push	qword ptr [rsp + 0xb0]
0x438c0c:	push	rbx
0x438c0d:	mov	ecx, dword ptr [rsp + 0x60]
0x438c11:	mov	rsi, qword ptr [rsp + 0x20]
0x438c16:	mov	dword ptr [rsp + 0x28], r9d
0x438c1b:	call	qword ptr [rbx + rax + 0x20]
0x438c1f:	add	rsp, 0x20
0x438c23:	mov	r9d, dword ptr [rsp + 8]
0x438c28:	test	al, al
0x438c2a:	jne	0x438b56
0x438c30:	jmp	0x438b65
0x438c35:	push	rsi
0x438c36:	mov	rdx, rbp
0x438c39:	mov	rdi, r13
0x438c3c:	push	qword ptr [rbx + 0x10]
0x438c3f:	push	qword ptr [rsp + 0xb0]
0x438c46:	push	rbx
0x438c47:	mov	ecx, dword ptr [rsp + 0x60]
0x438c4b:	mov	rsi, qword ptr [rsp + 0x20]
0x438c50:	mov	dword ptr [rsp + 0x30], r9d
0x438c55:	mov	dword ptr [rsp + 0x28], r8d
0x438c5a:	call	qword ptr [rbx + 0x40]
0x438c5d:	add	rsp, 0x20
0x438c61:	mov	r8d, dword ptr [rsp + 8]
0x438c66:	mov	r9d, dword ptr [rsp + 0x10]
0x438c6b:	test	al, al
0x438c6d:	jne	0x438b1e
0x438c73:	jmp	0x438b65
0x438c78:	push	rcx
0x438c79:	mov	rdx, rbp
0x438c7c:	mov	rdi, r13
0x438c7f:	push	qword ptr [rbx + 0x10]
0x438c82:	push	qword ptr [rsp + 0xb0]
0x438c89:	push	rbx
0x438c8a:	mov	ecx, dword ptr [rsp + 0x60]
0x438c8e:	mov	rsi, qword ptr [rsp + 0x20]
0x438c93:	mov	dword ptr [rsp + 0x30], r9d
0x438c98:	mov	dword ptr [rsp + 0x28], r8d
0x438c9d:	call	qword ptr [rbx + 0x50]
0x438ca0:	add	rsp, 0x20
0x438ca4:	mov	r8d, dword ptr [rsp + 8]
0x438ca9:	mov	r9d, dword ptr [rsp + 0x10]
0x438cae:	test	al, al
0x438cb0:	jne	0x438b31
0x438cb6:	jmp	0x438b65
0x438cbb:	mov	rax, qword ptr [rsp]
0x438cbf:	test	dil, dil
0x438cc2:	jne	0x438ea0
0x438cc8:	add	r12, rax
0x438ccb:	test	rax, rax
0x438cce:	jne	0x438a99
0x438cd4:	jmp	0x438a96
0x438cd9:	mov	r11, qword ptr [rsp + 8]
0x438cde:	mov	qword ptr [r10], r11
0x438ce1:	test	r12, r12
0x438ce4:	je	0x438adc
0x438cea:	mov	qword ptr [r12], 0x4c4893
0x438cf2:	jmp	0x438adc
0x438cf7:	imul	r14, r14, 0x60
0x438cfb:	mov	dword ptr [rsp + 8], r8d
0x438d00:	mov	esi, r11d
0x438d03:	mov	rdi, r10
0x438d06:	mov	dword ptr [rsp + 0x10], r9d
0x438d0b:	movzx	r8d, word ptr [r14 + 0x48bae4]
0x438d13:	imul	r9, r8, 0x30
0x438d17:	mov	r14, qword ptr [r9 + 0x48ad80]
0x438d1e:	call	r14
0x438d21:	test	r12, r12
0x438d24:	mov	r8d, dword ptr [rsp + 8]
0x438d29:	mov	r9d, dword ptr [rsp + 0x10]
0x438d2e:	je	0x438adc
0x438d34:	mov	esi, 1
0x438d39:	mov	rdi, r12
0x438d3c:	call	r14
0x438d3f:	mov	r9d, dword ptr [rsp + 0x10]
0x438d44:	mov	r8d, dword ptr [rsp + 8]
0x438d49:	jmp	0x438adc
0x438d4e:	imul	rax, r14, 0x60
0x438d52:	mov	rdx, qword ptr [rax + 0x48baf0]
0x438d59:	add	rax, 0x48baa0
0x438d5f:	test	byte ptr [rax + 0x41], 4
0x438d63:	jne	0x406cd1
0x438d69:	test	r11, r11
0x438d6c:	jne	0x438d79
0x438d6e:	test	rdx, rdx
0x438d71:	sete	r14b
0x438d75:	movzx	edx, r14b
0x438d79:	mov	dword ptr [r10], edx
0x438d7c:	test	r12, r12
0x438d7f:	je	0x438adc
0x438d85:	mov	dword ptr [r12], 1
0x438d8d:	jmp	0x438adc
0x438d92:	mov	rcx, qword ptr [r10]
0x438d95:	mov	qword ptr [rsp + 0x10], rcx
0x438d9a:	test	rcx, rcx
0x438d9d:	jne	0x438ddb
0x438d9f:	mov	esi, 8
0x438da4:	mov	edi, 1
0x438da9:	mov	dword ptr [rsp + 0x30], r9d
0x438dae:	mov	dword ptr [rsp + 0x28], r8d
0x438db3:	mov	qword ptr [rsp + 0x20], r10
0x438db8:	mov	qword ptr [rsp + 0x18], r11
0x438dbd:	call	0x42d6b0
0x438dc2:	mov	r9d, dword ptr [rsp + 0x30]
0x438dc7:	mov	r8d, dword ptr [rsp + 0x28]
0x438dcc:	mov	r10, qword ptr [rsp + 0x20]
0x438dd1:	mov	r11, qword ptr [rsp + 0x18]
0x438dd6:	mov	qword ptr [rsp + 0x10], rax
0x438ddb:	mov	rax, qword ptr [rsp + 0x10]
0x438de0:	mov	rcx, qword ptr [rax]
0x438de3:	test	rcx, rcx
0x438de6:	jne	0x406cf3
0x438dec:	xor	edx, edx
0x438dee:	mov	esi, 1
0x438df3:	xor	edi, edi
0x438df5:	mov	dword ptr [rsp + 0x38], r9d
0x438dfa:	mov	dword ptr [rsp + 0x30], r8d
0x438dff:	mov	qword ptr [rsp + 0x20], r11
0x438e04:	mov	qword ptr [rsp + 0x28], r10
0x438e09:	call	0x436e30
0x438e0e:	xor	edi, edi
0x438e10:	mov	r10d, eax
0x438e13:	imul	rsi, r10, 0x18
0x438e17:	mov	dword ptr [rsp + 0x18], r10d
0x438e1c:	add	rsi, 8
0x438e20:	call	0x42db80
0x438e25:	mov	r11d, dword ptr [rsp + 0x18]
0x438e2a:	mov	r9, qword ptr [rsp + 0x10]
0x438e2f:	mov	r10, qword ptr [rsp + 0x28]
0x438e34:	mov	r8d, dword ptr [rsp + 0x30]
0x438e39:	and	r11d, 0x7fffffff
0x438e40:	mov	qword ptr [r9], rax
0x438e43:	mov	edx, r11d
0x438e46:	mov	r11, qword ptr [rsp + 0x20]
0x438e4b:	mov	qword ptr [rax], rdx
0x438e4e:	mov	rcx, qword ptr [r9]
0x438e51:	mov	r9d, dword ptr [rsp + 0x38]
0x438e56:	mov	eax, dword ptr [rcx + 4]
0x438e59:	imul	rdi, rax, 0x18
0x438e5d:	lea	edx, [rax + 1]
0x438e60:	mov	dword ptr [rcx + 4], edx
0x438e63:	add	rdi, rcx
0x438e66:	mov	rcx, qword ptr [rsp + 8]
0x438e6b:	mov	dword ptr [rdi + 0x18], r11d
0x438e6f:	mov	r11, qword ptr [rsp + 0x10]
0x438e74:	mov	qword ptr [rdi + 8], r14
0x438e78:	mov	qword ptr [rdi + 0x10], rcx
0x438e7c:	mov	qword ptr [r10], r11
0x438e7f:	test	r12, r12
0x438e82:	je	0x438adc
0x438e88:	mov	qword ptr [r12], r11
0x438e8c:	jmp	0x438adc
0x438e91:	mov	dword ptr [r12], 1
0x438e99:	jmp	0x438adc
0x438e9e:	xor	eax, eax
0x438ea0:	mov	rdi, qword ptr [rsp + 0xa0]
0x438ea8:	mov	ecx, r9d
0x438eab:	mov	edx, r8d
0x438eae:	mov	qword ptr [rsp + 0x30], rax
0x438eb3:	mov	qword ptr [rsp + 0x28], r10
0x438eb8:	mov	qword ptr [rsp + 0x20], r11
0x438ebd:	mov	dword ptr [rsp + 0x18], r9d
0x438ec2:	mov	dword ptr [rsp + 0x10], r8d
0x438ec7:	call	0x43fa60
0x438ecc:	mov	rax, qword ptr [rsp + 0x30]
0x438ed1:	mov	r10, qword ptr [rsp + 0x28]
0x438ed6:	mov	r11, qword ptr [rsp + 0x20]
0x438edb:	mov	r9d, dword ptr [rsp + 0x18]
0x438ee0:	mov	r8d, dword ptr [rsp + 0x10]
0x438ee5:	jmp	0x438cc8
0x438eea:	nop	word ptr [rax + rax]
0x438ef0:	endbr64	
0x438ef4:	xor	eax, eax
0x438ef6:	push	r15
0x438ef8:	push	r14
0x438efa:	mov	al, r8b
0x438efd:	push	r13
0x438eff:	mov	r13, rdx
0x438f02:	mov	edx, eax
0x438f04:	push	r12
0x438f06:	mov	dh, cl
0x438f08:	mov	r12, rdi
0x438f0b:	push	rbp
0x438f0c:	mov	r15d, edx
0x438f0f:	mov	rbp, rsi
0x438f12:	push	rbx
0x438f13:	push	r9
0x438f15:	call	0x438fa0
0x438f1a:	movsxd	rbx, dword ptr [rip + 0xabb0f]
0x438f21:	lea	rcx, [r12 + 1]
0x438f26:	mov	r14, rbx
0x438f29:	imul	rbx, rbx, 0x18
0x438f2d:	add	rbx, qword ptr [rip + 0xabaf4]
0x438f34:	mov	qword ptr [rbx], rcx
0x438f37:	test	rbp, rbp
0x438f3a:	je	0x438f93
0x438f3c:	lea	r12, [rbp*8 + 8]
0x438f44:	mov	rdi, r12
0x438f47:	call	0x42db10
0x438f4c:	mov	rsi, r13
0x438f4f:	lea	rdx, [r12 - 8]
0x438f54:	mov	qword ptr [rbx + 8], rax
0x438f58:	mov	rdi, rax
0x438f5b:	call	0x403c60
0x438f60:	mov	rsi, qword ptr [rbx + 8]
0x438f64:	mov	qword ptr [rsi + r12 - 8], 0
0x438f6d:	lea	edi, [r14 + 1]
0x438f71:	mov	dword ptr [rbx + 0x10], 0
0x438f78:	mov	word ptr [rbx + 0x14], r15w
0x438f7d:	mov	byte ptr [rbx + 0x16], 0
0x438f81:	mov	dword ptr [rip + 0xabaa9], edi
0x438f87:	pop	rax
0x438f88:	pop	rbx
0x438f89:	pop	rbp
0x438f8a:	pop	r12
0x438f8c:	pop	r13
0x438f8e:	pop	r14
0x438f90:	pop	r15
0x438f92:	ret	
0x438f93:	mov	qword ptr [rbx + 8], 0
0x438f9b:	jmp	0x438f6d
0x438f9d:	nop	dword ptr [rax]
0x438fa0:	endbr64	
0x438fa4:	push	rdx
0x438fa5:	mov	eax, dword ptr [rip + 0xad225]
0x438fab:	test	eax, eax
0x438fad:	je	0x438fdc
0x438faf:	cmp	eax, dword ptr [rip + 0xaba7b]
0x438fb5:	je	0x438fb9
0x438fb7:	pop	rax
0x438fb8:	ret	
0x438fb9:	add	eax, eax
0x438fbb:	mov	rdi, qword ptr [rip + 0xaba66]
0x438fc2:	mov	dword ptr [rip + 0xad208], eax
0x438fc8:	cdqe	
0x438fca:	imul	rsi, rax, 0x18
0x438fce:	call	0x42db80
0x438fd3:	mov	qword ptr [rip + 0xaba4e], rax
0x438fda:	pop	rax
0x438fdb:	ret	
0x438fdc:	mov	dword ptr [rip + 0xad1ea], 0x10
0x438fe6:	mov	edi, 0x180
0x438feb:	call	0x42db10
0x438ff0:	mov	qword ptr [rip + 0xaba31], rax
0x438ff7:	pop	rax
0x438ff8:	ret	
0x438ff9:	nop	dword ptr [rax]
0x439000:	endbr64	
0x439004:	push	r15
0x439006:	push	r14
0x439008:	push	r13
0x43900a:	push	r12
0x43900c:	push	rbp
0x43900d:	mov	ebp, edi
0x43900f:	push	rbx
0x439010:	sub	rsp, 0x38
0x439014:	test	r8b, 1
0x439018:	jne	0x4074e1
0x43901e:	mov	rbx, rsi
0x439021:	test	r8b, 2
0x439025:	jne	0x4075ec
0x43902b:	test	r8b, 8
0x43902f:	jne	0x4075cd
0x439035:	test	r8b, 0x10
0x439039:	jne	0x40758d
0x43903f:	xor	eax, eax
0x439041:	and	r8b, 0x20
0x439045:	jne	0x4074f7
0x43904b:	add	rsp, 0x38
0x43904f:	pop	rbx
0x439050:	pop	rbp
0x439051:	pop	r12
0x439053:	pop	r13
0x439055:	pop	r14
0x439057:	pop	r15
0x439059:	ret	
0x43905a:	nop	word ptr [rax + rax]
0x439060:	sub	rsp, 0x18
0x439064:	call	0x438640
0x439069:	lea	rsi, [rsp + 8]
0x43906e:	mov	edi, 0x4e6078
0x439073:	mov	qword ptr [rsp + 8], rax
0x439078:	call	0x439540
0x43907d:	add	rsp, 0x18
0x439081:	ret	
0x439082:	nop	word ptr cs:[rax + rax]
0x43908d:	nop	dword ptr [rax]
0x439090:	push	rbp
0x439091:	mov	rbp, rdi
0x439094:	push	rbx
0x439095:	mov	rbx, rsi
0x439098:	push	rax
0x439099:	call	0x4390d0
0x43909e:	movsxd	rax, dword ptr [rip + 0xab973]
0x4390a5:	mov	rdx, rax
0x4390a8:	shl	rax, 5
0x4390ac:	add	rax, qword ptr [rip + 0xacfb5]
0x4390b3:	add	edx, 1
0x4390b6:	mov	qword ptr [rax], rbp
0x4390b9:	mov	qword ptr [rax + 8], rbx
0x4390bd:	mov	dword ptr [rip + 0xab955], edx
0x4390c3:	pop	rdx
0x4390c4:	pop	rbx
0x4390c5:	pop	rbp
0x4390c6:	ret	
0x4390c7:	nop	word ptr [rax + rax]
0x4390d0:	push	rdx
0x4390d1:	mov	eax, dword ptr [rip + 0xacfb9]
0x4390d7:	test	eax, eax
0x4390d9:	je	0x4390e5
0x4390db:	cmp	eax, dword ptr [rip + 0xab937]
0x4390e1:	je	0x439102
0x4390e3:	pop	rax
0x4390e4:	ret	
0x4390e5:	mov	dword ptr [rip + 0xacfa1], 0x10
0x4390ef:	mov	edi, 0x200
0x4390f4:	call	0x42db10
0x4390f9:	mov	qword ptr [rip + 0xacf68], rax
0x439100:	pop	rax
0x439101:	ret	
0x439102:	add	eax, eax
0x439104:	mov	rdi, qword ptr [rip + 0xacf5d]
0x43910b:	movsxd	rsi, eax
0x43910e:	mov	dword ptr [rip + 0xacf7c], eax
0x439114:	shl	rsi, 5
0x439118:	call	0x42db80
0x43911d:	mov	qword ptr [rip + 0xacf44], rax
0x439124:	pop	rax
0x439125:	ret	
0x439126:	nop	word ptr cs:[rax + rax]
0x439130:	cmp	byte ptr [rdi], 0x2d
0x439133:	je	0x43930a
0x439139:	push	r15
0x43913b:	mov	esi, 0x3d
0x439140:	push	r14
0x439142:	push	r13
0x439144:	push	r12
0x439146:	mov	r12, rdi
0x439149:	push	rbp
0x43914a:	push	rbx
0x43914b:	sub	rsp, 0x28
0x43914f:	call	0x403a40
0x439154:	mov	r13, rax
0x439157:	test	rax, rax
0x43915a:	jne	0x439168
0x43915c:	mov	rdi, r12
0x43915f:	call	0x4039e0
0x439164:	lea	r13, [r12 + rax]
0x439168:	cmp	r12, r13
0x43916b:	jae	0x4392fb
0x439171:	mov	esi, 0x2c
0x439176:	mov	rdi, r12
0x439179:	call	0x403a40
0x43917e:	test	rax, rax
0x439181:	mov	rbx, rax
0x439184:	cmove	rbx, r13
0x439188:	cmp	rbx, r13
0x43918b:	cmova	rbx, r13
0x43918f:	mov	r14, rbx
0x439192:	sub	r14, r12
0x439195:	lea	rdi, [r14 + 1]
0x439199:	mov	qword ptr [rsp + 8], rdi
0x43919e:	call	0x42db10
0x4391a3:	mov	rsi, r12
0x4391a6:	mov	rdx, r14
0x4391a9:	mov	rbp, rax
0x4391ac:	mov	rdi, rax
0x4391af:	call	0x403c60
0x4391b4:	mov	byte ptr [rbp + r14], 0
0x4391ba:	mov	esi, 0x45b6cf
0x4391bf:	mov	rdi, rbp
0x4391c2:	call	0x403be0
0x4391c7:	test	eax, eax
0x4391c9:	je	0x40780a
0x4391cf:	mov	r15d, 0x45b51e
0x4391d5:	mov	esi, 0x2c
0x4391da:	mov	rdi, r15
0x4391dd:	call	0x403a40
0x4391e2:	mov	rcx, rax
0x4391e5:	test	rax, rax
0x4391e8:	jne	0x4391f6
0x4391ea:	mov	rdi, r15
0x4391ed:	call	0x4039e0
0x4391f2:	lea	rcx, [r15 + rax]
0x4391f6:	mov	rax, rcx
0x4391f9:	sub	rax, r15
0x4391fc:	cmp	r14, rax
0x4391ff:	jne	0x4392e9
0x439205:	mov	rdx, r14
0x439208:	mov	rsi, r15
0x43920b:	mov	rdi, rbp
0x43920e:	mov	qword ptr [rsp], rcx
0x439212:	call	0x4038d0
0x439217:	mov	rcx, qword ptr [rsp]
0x43921b:	test	eax, eax
0x43921d:	jne	0x4392e9
0x439223:	mov	r8, qword ptr [rip + 0xacf76]
0x43922a:	mov	rdi, r8
0x43922d:	test	r8, r8
0x439230:	je	0x4392de
0x439236:	mov	esi, 0x3a
0x43923b:	mov	qword ptr [rsp + 0x10], r8
0x439240:	mov	qword ptr [rsp], rdi
0x439244:	call	0x403a40
0x439249:	mov	rdi, qword ptr [rsp]
0x43924d:	mov	r8, qword ptr [rsp + 0x10]
0x439252:	test	rax, rax
0x439255:	mov	rsi, rax
0x439258:	jne	0x43926c
0x43925a:	call	0x4039e0
0x43925f:	mov	rdi, qword ptr [rsp]
0x439263:	mov	r8, qword ptr [rsp + 0x10]
0x439268:	lea	rsi, [rdi + rax]
0x43926c:	mov	rdx, rsi
0x43926f:	sub	rdx, rdi
0x439272:	cmp	r14, rdx
0x439275:	je	0x4077d6
0x43927b:	cmp	byte ptr [rsi], 0
0x43927e:	lea	rdi, [rsi + 1]
0x439282:	jne	0x439236
0x439284:	cmp	rdi, rsi
0x439287:	jbe	0x4392cd
0x439289:	mov	rdi, r8
0x43928c:	mov	qword ptr [rsp], r8
0x439290:	call	0x4039e0
0x439295:	mov	r9, rbx
0x439298:	mov	rdi, qword ptr [rsp]
0x43929c:	sub	r9, r12
0x43929f:	mov	r14, rax
0x4392a2:	lea	r15, [rax + 1]
0x4392a6:	lea	rsi, [rax + r9 + 2]
0x4392ab:	call	0x42db80
0x4392b0:	mov	rdx, qword ptr [rsp + 8]
0x4392b5:	mov	rsi, rbp
0x4392b8:	mov	byte ptr [rax + r14], 0x3a
0x4392bd:	lea	rdi, [rax + r15]
0x4392c1:	mov	qword ptr [rip + 0xaced8], rax
0x4392c8:	call	0x403c60
0x4392cd:	mov	rdi, rbp
0x4392d0:	lea	r12, [rbx + 1]
0x4392d4:	call	0x403830
0x4392d9:	jmp	0x439168
0x4392de:	mov	qword ptr [rip + 0xacebb], rbp
0x4392e5:	xor	ebp, ebp
0x4392e7:	jmp	0x4392cd
0x4392e9:	cmp	byte ptr [rcx], 0
0x4392ec:	je	0x4077c5
0x4392f2:	lea	r15, [rcx + 1]
0x4392f6:	jmp	0x4391d5
0x4392fb:	add	rsp, 0x28
0x4392ff:	pop	rbx
0x439300:	pop	rbp
0x439301:	pop	r12
0x439303:	pop	r13
0x439305:	pop	r14
0x439307:	pop	r15
0x439309:	ret	
0x43930a:	ret	
0x43930b:	nop	dword ptr [rax + rax]
0x439310:	endbr64	
0x439314:	push	rbp
0x439315:	mov	rbp, rsp
0x439318:	push	r14
0x43931a:	push	r13
0x43931c:	mov	r13, rdi
0x43931f:	push	r12
0x439321:	mov	r12d, esi
0x439324:	push	rbx
0x439325:	sub	rsp, 0x90
0x43932c:	call	0x4039e0
0x439331:	mov	rsi, rsp
0x439334:	lea	edx, [rax + 3]
0x439337:	movsxd	rbx, edx
0x43933a:	add	rbx, 0x17
0x43933e:	mov	rcx, rbx
0x439341:	and	rbx, 0xfffffffffffff000
0x439348:	and	rcx, 0xfffffffffffffff0
0x43934c:	sub	rsi, rbx
0x43934f:	cmp	rsp, rsi
0x439352:	je	0x439366
0x439354:	sub	rsp, 0x1000
0x43935b:	or	qword ptr [rsp + 0xff8], 0
0x439364:	jmp	0x43934f
0x439366:	and	ecx, 0xfff
0x43936c:	sub	rsp, rcx
0x43936f:	test	rcx, rcx
0x439372:	jne	0x4393f0
0x439374:	lea	r14, [rsp + 0xf]
0x439379:	movsxd	rbx, eax
0x43937c:	mov	rsi, r13
0x43937f:	and	r14, 0xfffffffffffffff0
0x439383:	mov	rdx, rbx
0x439386:	mov	rdi, r14
0x439389:	call	0x403c60
0x43938e:	lea	rax, [r14 + rbx]
0x439392:	cmp	byte ptr [rax - 1], 0x2f
0x439396:	je	0x43939f
0x439398:	mov	byte ptr [rax], 0x2f
0x43939b:	add	rax, 1
0x43939f:	mov	word ptr [rax], 0x2e
0x4393a4:	lea	rdi, [rax + 1]
0x4393a8:	test	r12b, r12b
0x4393ab:	je	0x4393c9
0x4393ad:	cmp	byte ptr [r14], 0x2f
0x4393b1:	jne	0x4393c9
0x4393b3:	mov	rdx, rdi
0x4393b6:	lea	rdi, [r14 + 1]
0x4393ba:	sub	rdx, r14
0x4393bd:	cmp	rdx, 6
0x4393c1:	je	0x439438
0x4393c3:	cmp	rdx, 0xa
0x4393c7:	je	0x439416
0x4393c9:	lea	rsi, [rbp - 0xb0]
0x4393d0:	mov	rdi, r14
0x4393d3:	call	0x403c40
0x4393d8:	xor	r10d, r10d
0x4393db:	test	eax, eax
0x4393dd:	jns	0x4393fb
0x4393df:	movzx	eax, r10b
0x4393e3:	lea	rsp, [rbp - 0x20]
0x4393e7:	pop	rbx
0x4393e8:	pop	r12
0x4393ea:	pop	r13
0x4393ec:	pop	r14
0x4393ee:	pop	rbp
0x4393ef:	ret	
0x4393f0:	or	qword ptr [rsp + rcx - 8], 0
0x4393f6:	jmp	0x439374
0x4393fb:	mov	r9d, dword ptr [rbp - 0x98]
0x439402:	and	r9d, 0xf000
0x439409:	cmp	r9d, 0x4000
0x439410:	sete	r10b
0x439414:	jmp	0x4393df
0x439416:	lea	rdi, [r14 + 1]
0x43941a:	mov	edx, 3
0x43941f:	mov	esi, 0x45b5e5
0x439424:	call	0x4038d0
0x439429:	test	eax, eax
0x43942b:	jne	0x4393c9
0x43942d:	cmp	byte ptr [r14 + 4], 0x2f
0x439432:	jne	0x4393c9
0x439434:	lea	rdi, [r14 + 5]
0x439438:	mov	edx, 3
0x43943d:	mov	esi, 0x45cbba
0x439442:	call	0x4038d0
0x439447:	test	eax, eax
0x439449:	je	0x4393e3
0x43944b:	jmp	0x4393c9
0x439450:	endbr64	
0x439454:	push	r15
0x439456:	push	r14
0x439458:	or	r14d, 0xffffffff
0x43945c:	push	r13
0x43945e:	push	r12
0x439460:	push	rbp
0x439461:	push	rbx
0x439462:	xor	ebx, ebx
0x439464:	push	rcx
0x439465:	mov	ebp, dword ptr [rip + 0xab5ad]
0x43946b:	mov	r13, qword ptr [rip + 0xacbf6]
0x439472:	mov	r15, qword ptr [rip + 0xac997]
0x439479:	mov	r12d, ebx
0x43947c:	cmp	ebp, ebx
0x43947e:	jle	0x4394a2
0x439480:	mov	rax, rbx
0x439483:	shl	rax, 5
0x439487:	mov	rdi, qword ptr [r13 + rax + 8]
0x43948c:	test	rdi, rdi
0x43948f:	je	0x4394c4
0x439491:	cmp	byte ptr [rdi], 0x2a
0x439494:	jne	0x4394b1
0x439496:	add	rbx, 1
0x43949a:	jmp	0x439479
0x43949c:	mov	r14d, 0xfffffffe
0x4394a2:	pop	rdx
0x4394a3:	mov	eax, r14d
0x4394a6:	pop	rbx
0x4394a7:	pop	rbp
0x4394a8:	pop	r12
0x4394aa:	pop	r13
0x4394ac:	pop	r14
0x4394ae:	pop	r15
0x4394b0:	ret	
0x4394b1:	test	r15, r15
0x4394b4:	je	0x4394c4
0x4394b6:	mov	esi, 0x45bc2c
0x4394bb:	call	0x403be0
0x4394c0:	test	eax, eax
0x4394c2:	je	0x439496
0x4394c4:	add	r14d, 1
0x4394c8:	jne	0x43949c
0x4394ca:	mov	r14d, r12d
0x4394cd:	jmp	0x439496
0x4394cf:	nop	
0x4394d0:	push	r12
0x4394d2:	mov	r12, rdx
0x4394d5:	push	rbp
0x4394d6:	sub	rsp, 0x28
0x4394da:	test	esi, esi
0x4394dc:	setne	byte ptr [rcx + 0x57]
0x4394e0:	test	edi, edi
0x4394e2:	jne	0x43951d
0x4394e4:	cmp	dword ptr [rcx + 0x84], 0
0x4394eb:	jne	0x4394f7
0x4394ed:	mov	dword ptr [rcx + 0x84], 2
0x4394f7:	cmp	byte ptr [r12], 0
0x4394fc:	jne	0x408a11
0x439502:	cmp	dword ptr [rcx + 0x80], 1
0x439509:	jg	0x439515
0x43950b:	mov	dword ptr [rcx + 0x80], 2
0x439515:	add	rsp, 0x28
0x439519:	pop	rbp
0x43951a:	pop	r12
0x43951c:	ret	
0x43951d:	cmp	dword ptr [r8 + 0x84], 0
0x439525:	mov	ebp, edi
0x439527:	jne	0x408a46
0x43952d:	mov	dword ptr [rcx + 0x84], ebp
0x439533:	mov	dword ptr [r8 + 0x84], ebp
0x43953a:	jmp	0x4394f7
0x43953c:	nop	dword ptr [rax]
0x439540:	endbr64	
0x439544:	push	rbp
0x439545:	mov	rbp, rsi
0x439548:	xor	esi, esi
0x43954a:	push	rbx
0x43954b:	mov	rbx, rdi
0x43954e:	push	rax
0x43954f:	call	0x439570
0x439554:	mov	rdx, qword ptr [rbx]
0x439557:	mov	rsi, qword ptr [rbp]
0x43955b:	mov	eax, dword ptr [rdx + 4]
0x43955e:	lea	ecx, [rax + 1]
0x439561:	mov	dword ptr [rdx + 4], ecx
0x439564:	mov	qword ptr [rdx + rax*8 + 8], rsi
0x439569:	pop	rdx
0x43956a:	pop	rbx
0x43956b:	pop	rbp
0x43956c:	ret	
0x43956d:	nop	
0x43956e:	nop	
0x439570:	endbr64	
0x439574:	push	r13
0x439576:	push	r12
0x439578:	push	rbp
0x439579:	push	rbx
0x43957a:	mov	rbx, rdi
0x43957d:	push	rdx
0x43957e:	mov	rbp, qword ptr [rdi]
0x439581:	test	rbp, rbp
0x439584:	je	0x4395e5
0x439586:	mov	r12d, dword ptr [rbp]
0x43958a:	mov	r13d, dword ptr [rbp + 4]
0x43958e:	and	r12d, 0x7fffffff
0x439595:	cmp	r12d, r13d
0x439598:	je	0x4395a2
0x43959a:	pop	rax
0x43959b:	pop	rbx
0x43959c:	pop	rbp
0x43959d:	pop	r12
0x43959f:	pop	r13
0x4395a1:	ret	
0x4395a2:	cmp	byte ptr [rbp + 3], 0
0x4395a6:	movzx	edx, sil
0x4395aa:	js	0x408ae0
0x4395b0:	mov	esi, 1
0x4395b5:	mov	rdi, rbp
0x4395b8:	call	0x436e30
0x4395bd:	mov	rdi, rbp
0x4395c0:	mov	edx, eax
0x4395c2:	mov	r13d, eax
0x4395c5:	lea	rsi, [rdx*8 + 8]
0x4395cd:	and	r13d, 0x7fffffff
0x4395d4:	call	0x42db80
0x4395d9:	mov	qword ptr [rbx], rax
0x4395dc:	mov	dword ptr [rax], r13d
0x4395df:	mov	dword ptr [rax + 4], r12d
0x4395e3:	jmp	0x43959a
0x4395e5:	movzx	edx, sil
0x4395e9:	xor	edi, edi
0x4395eb:	mov	esi, 1
0x4395f0:	call	0x436e30
0x4395f5:	xor	edi, edi
0x4395f7:	mov	ebp, eax
0x4395f9:	mov	eax, eax
0x4395fb:	lea	rsi, [rax*8 + 8]
0x439603:	and	ebp, 0x7fffffff
0x439609:	call	0x42db80
0x43960e:	mov	ecx, ebp
0x439610:	mov	qword ptr [rbx], rax
0x439613:	mov	qword ptr [rax], rcx
0x439616:	jmp	0x43959a
0x439618:	nop	dword ptr [rax + rax]
0x439620:	endbr64	
0x439624:	push	r12
0x439626:	mov	r12, rdi
0x439629:	mov	rdi, rsi
0x43962c:	push	rbp
0x43962d:	mov	ebp, edx
0x43962f:	push	rbx
0x439630:	sub	rsp, 0x30
0x439634:	cmp	byte ptr [rsi], 0x2f
0x439637:	je	0x408b36
0x43963d:	mov	ebx, ecx
0x43963f:	mov	qword ptr [rsp + 0x10], rsi
0x439644:	mov	qword ptr [rsp + 0x18], 0x4c4893
0x43964d:	call	0x4039e0
0x439652:	movzx	esi, bl
0x439655:	lea	r8, [rsp + 0x10]
0x43965a:	mov	rdi, r12
0x43965d:	movsxd	rdx, eax
0x439660:	mov	ecx, 0x42f0f0
0x439665:	mov	dword ptr [rsp + 0x20], eax
0x439669:	mov	dword ptr [rsp + 0x24], 0
0x439671:	mov	dword ptr [rsp + 0x28], ebp
0x439675:	call	0x439690
0x43967a:	add	rsp, 0x30
0x43967e:	pop	rbx
0x43967f:	pop	rbp
0x439680:	pop	r12
0x439682:	ret	
0x439683:	nop	word ptr cs:[rax + rax]
0x43968e:	nop	
0x439690:	push	r15
0x439692:	push	r14
0x439694:	push	r13
0x439696:	mov	r13, rcx
0x439699:	push	r12
0x43969b:	mov	r12, r8
0x43969e:	push	rbp
0x43969f:	push	rbx
0x4396a0:	sub	rsp, 0x78
0x4396a4:	mov	rax, qword ptr [rip + 0xab355]
0x4396ab:	mov	qword ptr [rsp + 0x58], rdx
0x4396b0:	mov	rdx, qword ptr [rip + 0xa9bf1]
0x4396b7:	mov	qword ptr [rsp + 0x40], rdi
0x4396bc:	mov	qword ptr [rsp + 0x20], rax
0x4396c1:	mov	qword ptr [rsp + 0x50], rdx
0x4396c6:	test	sil, sil
0x4396c9:	jne	0x43990b
0x4396cf:	mov	qword ptr [rsp + 0x10], 0
0x4396d8:	xor	ebp, ebp
0x4396da:	mov	r15, qword ptr [rip + 0xab30f]
0x4396e1:	test	r15, r15
0x4396e4:	je	0x4396fa
0x4396e6:	mov	rdi, r15
0x4396e9:	xor	edx, edx
0x4396eb:	mov	esi, 0x489e38
0x4396f0:	xor	eax, eax
0x4396f2:	call	0x42d870
0x4396f7:	mov	r15, rax
0x4396fa:	mov	byte ptr [rsp + 0x67], 0
0x4396ff:	xor	r14d, r14d
0x439702:	mov	byte ptr [rsp], 0
0x439706:	mov	rsi, qword ptr [rsp + 0x10]
0x43970b:	mov	qword ptr [rsp + 0x10], rbp
0x439710:	mov	qword ptr [rsp + 8], rsi
0x439715:	mov	qword ptr [rsp + 0x38], 0
0x43971e:	cmp	qword ptr [rsp + 8], 0
0x439724:	jne	0x408c13
0x43972a:	mov	qword ptr [rsp + 0x48], 0
0x439733:	cmp	qword ptr [rsp + 0x10], 0
0x439739:	jne	0x4399b0
0x43973f:	test	r15, r15
0x439742:	je	0x43995e
0x439748:	mov	rdi, r15
0x43974b:	call	0x4039e0
0x439750:	mov	qword ptr [rsp + 0x28], rax
0x439755:	mov	rdi, qword ptr [rsp + 0x20]
0x43975a:	call	0x4039e0
0x43975f:	mov	rdi, qword ptr [rsp + 0x50]
0x439764:	mov	qword ptr [rsp + 0x30], rax
0x439769:	mov	rbx, rax
0x43976c:	call	0x4039e0
0x439771:	mov	qword ptr [rsp + 0x68], rax
0x439776:	test	r14, r14
0x439779:	jne	0x4397c4
0x43977b:	mov	r11, qword ptr [rsp + 0x28]
0x439780:	mov	rdi, qword ptr [rsp + 0x40]
0x439785:	mov	r10d, 0x10
0x43978b:	mov	r14, rbx
0x43978e:	mov	r9, qword ptr [rsp + 0x58]
0x439793:	mov	rax, qword ptr [rsp + 0x48]
0x439798:	cmp	r11, r10
0x43979b:	movsxd	r8, dword ptr [rdi + 8]
0x43979f:	cmovae	r10, r11
0x4397a3:	lea	rdi, [r9 + r8 + 3]
0x4397a8:	add	rdi, r10
0x4397ab:	cmp	r11, rbx
0x4397ae:	cmovae	r14, r11
0x4397b2:	cmp	r14, rax
0x4397b5:	cmovb	r14, rax
0x4397b9:	add	rdi, r14
0x4397bc:	call	0x42db10
0x4397c1:	mov	r14, rax
0x4397c4:	mov	rdx, qword ptr [rsp + 0x40]
0x4397c9:	mov	rbp, qword ptr [rdx]
0x4397cc:	test	rbp, rbp
0x4397cf:	je	0x4398e9
0x4397d5:	mov	rsi, qword ptr [rbp]
0x4397d9:	mov	rdi, rsi
0x4397dc:	mov	qword ptr [rsp + 0x18], rsi
0x4397e1:	call	0x4039e0
0x4397e6:	mov	rsi, qword ptr [rsp + 0x18]
0x4397eb:	mov	rdi, r14
0x4397ee:	mov	rdx, rax
0x4397f1:	mov	rbx, rax
0x4397f4:	call	0x403c60
0x4397f9:	cmp	byte ptr [rsp], 0
0x4397fd:	jne	0x439875
0x4397ff:	mov	rdi, qword ptr [rsp + 0x30]
0x439804:	lea	r8, [r14 + rbx]
0x439808:	mov	rsi, qword ptr [rsp + 0x20]
0x43980d:	mov	qword ptr [rsp + 0x18], r8
0x439812:	lea	rdx, [rdi + 1]
0x439816:	mov	rdi, r8
0x439819:	call	0x403c60
0x43981e:	mov	rsi, r12
0x439821:	mov	rdi, r14
0x439824:	call	r13
0x439827:	mov	r9, qword ptr [rsp + 0x18]
0x43982c:	test	rax, rax
0x43982f:	jne	0x4398bd
0x439835:	cmp	dword ptr [rbp + 0x10], 2
0x439839:	je	0x439a15
0x43983f:	cmp	dword ptr [rbp + 0x10], 0
0x439843:	jne	0x4398b4
0x439845:	cmp	qword ptr [rip + 0xab1a3], 0
0x43984d:	je	0x43996c
0x439853:	mov	r11, qword ptr [rsp + 0x28]
0x439858:	mov	rsi, r15
0x43985b:	mov	rdi, r9
0x43985e:	lea	rdx, [r11 + 1]
0x439862:	call	0x403c60
0x439867:	mov	rsi, r12
0x43986a:	mov	rdi, r14
0x43986d:	call	r13
0x439870:	test	rax, rax
0x439873:	jne	0x4398bd
0x439875:	cmp	dword ptr [rbp + 0x10], 0
0x439879:	jne	0x4398b4
0x43987b:	cmp	dword ptr [rbp + 0x18], 0
0x43987f:	jne	0x439981
0x439885:	cmp	byte ptr [rsp], 0
0x439889:	jne	0x4398b4
0x43988b:	mov	rdx, qword ptr [rsp + 0x38]
0x439890:	mov	rsi, qword ptr [rsp + 8]
0x439895:	lea	r9, [r14 + rbx]
0x439899:	test	rdx, rdx
0x43989c:	jne	0x43999f
0x4398a2:	mov	byte ptr [r9], 0
0x4398a6:	mov	rsi, r12
0x4398a9:	mov	rdi, r14
0x4398ac:	call	r13
0x4398af:	test	rax, rax
0x4398b2:	jne	0x4398bd
0x4398b4:	mov	rbp, qword ptr [rbp + 8]
0x4398b8:	jmp	0x4397cc
0x4398bd:	cmp	qword ptr [rsp + 8], 0
0x4398c3:	jne	0x439a1a
0x4398c9:	cmp	qword ptr [rsp + 0x10], 0
0x4398cf:	jne	0x4399c4
0x4398d5:	cmp	r14, rax
0x4398d8:	jne	0x4398f9
0x4398da:	add	rsp, 0x78
0x4398de:	pop	rbx
0x4398df:	pop	rbp
0x4398e0:	pop	r12
0x4398e2:	pop	r13
0x4398e4:	pop	r14
0x4398e6:	pop	r15
0x4398e8:	ret	
0x4398e9:	mov	rax, qword ptr [rsp + 8]
0x4398ee:	or	rax, qword ptr [rsp + 0x10]
0x4398f3:	jne	0x4399db
0x4398f9:	mov	rdi, r14
0x4398fc:	mov	qword ptr [rsp], rax
0x439900:	call	0x403830
0x439905:	mov	rax, qword ptr [rsp]
0x439909:	jmp	0x4398da
0x43990b:	mov	rcx, qword ptr [rip + 0xab0e6]
0x439912:	mov	qword ptr [rsp + 0x10], rcx
0x439917:	test	rcx, rcx
0x43991a:	jne	0x408b5f
0x439920:	mov	rbp, qword ptr [rip + 0xab0b1]
0x439927:	test	rbp, rbp
0x43992a:	je	0x4396da
0x439930:	mov	esi, 0x4cd754
0x439935:	mov	rdi, rbp
0x439938:	call	0x403be0
0x43993d:	test	eax, eax
0x43993f:	je	0x408c5a
0x439945:	mov	rdi, rbp
0x439948:	xor	edx, edx
0x43994a:	mov	esi, 0x489e38
0x43994f:	xor	eax, eax
0x439951:	call	0x42d870
0x439956:	mov	rbp, rax
0x439959:	jmp	0x4396da
0x43995e:	mov	qword ptr [rsp + 0x28], 0
0x439967:	jmp	0x439755
0x43996c:	cmp	dword ptr [rbp + 0x18], 0
0x439970:	jne	0x439981
0x439972:	mov	rdx, qword ptr [rsp + 0x38]
0x439977:	mov	rsi, qword ptr [rsp + 8]
0x43997c:	jmp	0x439899
0x439981:	cmp	byte ptr [rsp + 0x67], 0
0x439986:	jne	0x4398b4
0x43998c:	mov	rdx, qword ptr [rsp + 0x48]
0x439991:	mov	rsi, qword ptr [rsp + 0x10]
0x439996:	lea	r9, [r14 + rbx]
0x43999a:	jmp	0x439899
0x43999f:	add	rdx, 1
0x4399a3:	mov	rdi, r9
0x4399a6:	call	0x403c60
0x4399ab:	jmp	0x4398a6
0x4399b0:	mov	rdi, qword ptr [rsp + 0x10]
0x4399b5:	call	0x4039e0
0x4399ba:	mov	qword ptr [rsp + 0x48], rax
0x4399bf:	jmp	0x43973f
0x4399c4:	mov	rdi, qword ptr [rsp + 0x10]
0x4399c9:	mov	qword ptr [rsp], rax
0x4399cd:	call	0x403830
0x4399d2:	mov	rax, qword ptr [rsp]
0x4399d6:	jmp	0x4398d5
0x4399db:	cmp	qword ptr [rsp + 8], 0
0x4399e1:	jne	0x408b8c
0x4399e7:	mov	byte ptr [rsp], 1
0x4399eb:	mov	rdi, qword ptr [rsp + 0x10]
0x4399f0:	test	rdi, rdi
0x4399f3:	je	0x408b80
0x4399f9:	call	0x403830
0x4399fe:	mov	qword ptr [rsp + 0x10], 0
0x439a07:	mov	qword ptr [rsp + 8], 0
0x439a10:	jmp	0x439715
0x439a15:	jmp	0x408c27
0x439a1a:	jmp	0x408c61
0x439a1f:	nop	
0x439a20:	endbr64	
0x439a24:	sub	rsp, 0x18
0x439a28:	call	0x438640
0x439a2d:	lea	rsi, [rsp + 8]
0x439a32:	mov	edi, 0x4e6318
0x439a37:	mov	qword ptr [rsp + 8], rax
0x439a3c:	call	0x439540
0x439a41:	add	rsp, 0x18
0x439a45:	ret	
0x439a46:	nop	word ptr cs:[rax + rax]
0x439a50:	push	r12
0x439a52:	mov	r12, rdi
0x439a55:	push	rbp
0x439a56:	mov	ebp, esi
0x439a58:	sub	rsp, 0x98
0x439a5f:	sub	esi, 1
0x439a62:	je	0x439a78
0x439a64:	add	rsp, 0x98
0x439a6b:	mov	esi, ebp
0x439a6d:	mov	rdi, r12
0x439a70:	pop	rbp
0x439a71:	pop	r12
0x439a73:	jmp	0x403dc0
0x439a78:	mov	rsi, rsp
0x439a7b:	call	0x403c40
0x439a80:	test	eax, eax
0x439a82:	jns	0x439a92
0x439a84:	add	rsp, 0x98
0x439a8b:	or	eax, 0xffffffff
0x439a8e:	pop	rbp
0x439a8f:	pop	r12
0x439a91:	ret	
0x439a92:	mov	eax, dword ptr [rsp + 0x18]
0x439a96:	and	eax, 0xf000
0x439a9b:	cmp	eax, 0x4000
0x439aa0:	jne	0x439a64
0x439aa2:	jmp	0x439a84
0x439aa4:	nop	word ptr cs:[rax + rax]
0x439aaf:	nop	
0x439ab0:	endbr64	
0x439ab4:	push	r15
0x439ab6:	push	r14
0x439ab8:	push	r13
0x439aba:	movzx	r13d, dl
0x439abe:	push	r12
0x439ac0:	push	rbp
0x439ac1:	push	rbx
0x439ac2:	sub	rsp, 0xb8
0x439ac9:	cmp	dword ptr [rip + 0xac510], 0
0x439ad0:	mov	qword ptr [rsp + 0x10], rdi
0x439ad5:	mov	byte ptr [rsp + 0x1b], sil
0x439ada:	jne	0x439d4c
0x439ae0:	mov	rdi, qword ptr [rsp + 0x10]
0x439ae5:	xor	edx, edx
0x439ae7:	xor	esi, esi
0x439ae9:	xor	eax, eax
0x439aeb:	call	0x403db0
0x439af0:	mov	r12d, eax
0x439af3:	test	eax, eax
0x439af5:	js	0x408e80
0x439afb:	mov	rdi, qword ptr [rsp + 0x10]
0x439b00:	lea	rsi, [rsp + 0x20]
0x439b05:	call	0x403c40
0x439b0a:	test	eax, eax
0x439b0c:	js	0x408e80
0x439b12:	mov	rbx, qword ptr [rsp + 0x50]
0x439b17:	lea	rdi, [rbx + 1]
0x439b1b:	call	0x42db10
0x439b20:	mov	edx, ebx
0x439b22:	mov	edi, r12d
0x439b25:	mov	rsi, rax
0x439b28:	mov	rbp, rax
0x439b2b:	call	0x403b50
0x439b30:	mov	r14, rax
0x439b33:	test	eax, eax
0x439b35:	js	0x408e80
0x439b3b:	cdqe	
0x439b3d:	mov	edi, r12d
0x439b40:	mov	byte ptr [rbp + rax], 0
0x439b45:	call	0x403b00
0x439b4a:	lea	edi, [r14 + 1]
0x439b4e:	movsxd	rdi, edi
0x439b51:	call	0x42db10
0x439b56:	movzx	esi, byte ptr [rbp]
0x439b5a:	mov	r12, rax
0x439b5d:	mov	rdx, rax
0x439b60:	test	sil, sil
0x439b63:	je	0x439b8e
0x439b65:	mov	rcx, rbp
0x439b68:	nop	dword ptr [rax + rax]
0x439b70:	cmp	sil, 0xd
0x439b74:	je	0x408e5b
0x439b7a:	mov	byte ptr [rdx], sil
0x439b7d:	add	rdx, 1
0x439b81:	movzx	esi, byte ptr [rcx + 1]
0x439b85:	add	rcx, 1
0x439b89:	test	sil, sil
0x439b8c:	jne	0x439b70
0x439b8e:	mov	byte ptr [rdx], 0
0x439b91:	mov	rdi, rbp
0x439b94:	mov	r14, r12
0x439b97:	call	0x403830
0x439b9c:	mov	rdi, r14
0x439b9f:	call	0x439de0
0x439ba4:	movzx	r14d, byte ptr [rax]
0x439ba8:	mov	rbp, rax
0x439bab:	test	r14b, r14b
0x439bae:	je	0x439d1c
0x439bb4:	mov	rbx, rax
0x439bb7:	cmp	r14b, 0x25
0x439bbb:	jne	0x439bec
0x439bbd:	cmp	byte ptr [rsp + 0x1b], 0
0x439bc2:	jne	0x439bec
0x439bc4:	jmp	0x408da2
0x439bc9:	nop	dword ptr [rax]
0x439bd0:	cmp	r14b, 0xa
0x439bd4:	je	0x439d67
0x439bda:	movzx	r14d, byte ptr [rbx + 1]
0x439bdf:	add	rbx, 1
0x439be3:	test	r14b, r14b
0x439be6:	je	0x439d04
0x439bec:	cmp	r14b, 0x3a
0x439bf0:	jne	0x439bd0
0x439bf2:	mov	rsi, rbx
0x439bf5:	cmp	rsi, r12
0x439bf8:	jbe	0x439c13
0x439bfa:	movzx	r10d, byte ptr [rsi - 1]
0x439bff:	cmp	r10b, 0x20
0x439c03:	je	0x408ea7
0x439c09:	cmp	r10b, 9
0x439c0d:	je	0x408ea7
0x439c13:	sub	esi, ebp
0x439c15:	mov	rdi, rbp
0x439c18:	call	0x438640
0x439c1d:	lea	rdi, [rbx + 1]
0x439c21:	mov	rbp, rax
0x439c24:	call	0x439de0
0x439c29:	cmp	byte ptr [rax + 1], 0
0x439c2d:	mov	rdi, rax
0x439c30:	je	0x408e93
0x439c36:	movzx	edx, byte ptr [rax]
0x439c39:	mov	r14, rax
0x439c3c:	test	dl, dl
0x439c3e:	jne	0x439c50
0x439c40:	jmp	0x439c68
0x439c42:	nop	word ptr [rax + rax]
0x439c48:	add	r14, 1
0x439c4c:	test	dl, dl
0x439c4e:	je	0x439c68
0x439c50:	mov	eax, edx
0x439c52:	movzx	edx, byte ptr [r14 + 1]
0x439c57:	cmp	al, 0xa
0x439c59:	jne	0x439c48
0x439c5b:	cmp	dl, 0xa
0x439c5e:	je	0x439c68
0x439c60:	test	dl, dl
0x439c62:	jne	0x439d13
0x439c68:	mov	esi, r14d
0x439c6b:	sub	esi, edi
0x439c6d:	call	0x438640
0x439c72:	movq	xmm0, rbp
0x439c77:	movq	xmm1, rax
0x439c7c:	mov	rbx, rax
0x439c7f:	mov	rcx, rax
0x439c82:	mov	rdi, rax
0x439c85:	punpcklqdq	xmm0, xmm1
0x439c89:	movzx	r15d, byte ptr [rdi]
0x439c8d:	test	r15b, r15b
0x439c90:	je	0x439cc0
0x439c92:	nop	word ptr [rax + rax]
0x439c98:	cmp	r15b, 0x5c
0x439c9c:	je	0x408d71
0x439ca2:	cmp	r15b, 0x23
0x439ca6:	je	0x408d62
0x439cac:	add	rdi, 1
0x439cb0:	mov	byte ptr [rcx], r15b
0x439cb3:	add	rcx, 1
0x439cb7:	movzx	r15d, byte ptr [rdi]
0x439cbb:	test	r15b, r15b
0x439cbe:	jne	0x439c98
0x439cc0:	mov	byte ptr [rcx], 0
0x439cc3:	cmp	byte ptr [rbp], 0x2a
0x439cc7:	jne	0x408cf7
0x439ccd:	mov	esi, 0x4be49f
0x439cd2:	mov	rdi, rbp
0x439cd5:	call	0x403be0
0x439cda:	test	eax, eax
0x439cdc:	je	0x439d43
0x439cde:	lea	rdi, [rbp + 1]
0x439ce2:	mov	edx, r13d
0x439ce5:	mov	rsi, rbx
0x439ce8:	call	0x439e20
0x439ced:	mov	rdi, rbx
0x439cf0:	call	0x403830
0x439cf5:	cmp	byte ptr [rbp], 0
0x439cf9:	jne	0x439b9c
0x439cff:	jmp	0x408ceb
0x439d04:	cmp	r14b, 0x3a
0x439d08:	je	0x439bf2
0x439d0e:	jmp	0x408cd7
0x439d13:	add	r14, 1
0x439d17:	jmp	0x439c50
0x439d1c:	cmp	qword ptr [rip + 0xa8714], 0
0x439d24:	je	0x408cc9
0x439d2a:	add	rsp, 0xb8
0x439d31:	mov	rdi, r12
0x439d34:	pop	rbx
0x439d35:	pop	rbp
0x439d36:	pop	r12
0x439d38:	pop	r13
0x439d3a:	pop	r14
0x439d3c:	pop	r15
0x439d3e:	jmp	0x403830
0x439d43:	mov	qword ptr [rip + 0xa86ee], rbx
0x439d4a:	jmp	0x439cf5
0x439d4c:	mov	rdx, rdi
0x439d4f:	mov	rdi, qword ptr [rip + 0xa934a]
0x439d56:	mov	esi, 0x4be416
0x439d5b:	xor	eax, eax
0x439d5d:	call	0x43a390
0x439d62:	jmp	0x439ae0
0x439d67:	jmp	0x408cd7
0x439d6c:	nop	dword ptr [rax]
0x439d70:	endbr64	
0x439d74:	push	rbp
0x439d75:	mov	esi, 0x4cd89a
0x439d7a:	mov	rbp, rdi
0x439d7d:	call	0x403be0
0x439d82:	test	eax, eax
0x439d84:	je	0x40919c
0x439d8a:	mov	esi, 0x45b537
0x439d8f:	mov	rdi, rbp
0x439d92:	call	0x403be0
0x439d97:	test	eax, eax
0x439d99:	sete	al
0x439d9c:	pop	rbp
0x439d9d:	ret	
0x439d9e:	nop	
0x439da0:	endbr64	
0x439da4:	push	r12
0x439da6:	push	rbp
0x439da7:	mov	rbp, rdi
0x439daa:	push	rax
0x439dab:	call	0x403ae0
0x439db0:	lea	rdi, [rax + 1]
0x439db4:	mov	r12, rax
0x439db7:	call	0x42db10
0x439dbc:	mov	rdx, r12
0x439dbf:	mov	rsi, rbp
0x439dc2:	mov	byte ptr [rax + r12], 0
0x439dc7:	mov	rdi, rax
0x439dca:	pop	rcx
0x439dcb:	pop	rbp
0x439dcc:	pop	r12
0x439dce:	jmp	0x403c60
0x439dd3:	nop	word ptr cs:[rax + rax]
0x439dde:	nop	
0x439de0:	mov	rax, rdi
0x439de3:	movzx	edx, byte ptr [rax]
0x439de6:	cmp	dl, 0xa
0x439de9:	jne	0x439df7
0x439deb:	cmp	byte ptr [rax + 1], 0xa
0x439def:	je	0x439e0b
0x439df1:	add	rax, 1
0x439df5:	jmp	0x439de3
0x439df7:	cmp	dl, 0x20
0x439dfa:	je	0x439df1
0x439dfc:	cmp	dl, 9
0x439dff:	je	0x439df1
0x439e01:	cmp	dl, 0x23
0x439e04:	je	0x4091a6
0x439e0a:	ret	
0x439e0b:	cmp	byte ptr [rax + 2], 0xa
0x439e0f:	jne	0x439df1
0x439e11:	add	rax, 1
0x439e15:	ret	
0x439e16:	nop	word ptr cs:[rax + rax]
0x439e20:	endbr64	
0x439e24:	push	r15
0x439e26:	mov	r15d, edx
0x439e29:	push	r14
0x439e2b:	push	r13
0x439e2d:	mov	r13, rsi
0x439e30:	push	r12
0x439e32:	mov	r12, rdi
0x439e35:	push	rbp
0x439e36:	push	rbx
0x439e37:	push	rcx
0x439e38:	call	0x4039e0
0x439e3d:	mov	r14, rax
0x439e40:	mov	ebp, eax
0x439e42:	mov	rax, qword ptr [rip + 0xa9457]
0x439e49:	mov	rbx, rax
0x439e4c:	test	rax, rax
0x439e4f:	jne	0x439e65
0x439e51:	jmp	0x439ebd
0x439e53:	nop	dword ptr [rax + rax]
0x439e58:	mov	rbx, qword ptr [rbx + 0x18]
0x439e5c:	test	rbx, rbx
0x439e5f:	je	0x439eeb
0x439e65:	cmp	dword ptr [rbx + 0x20], ebp
0x439e68:	jne	0x439e58
0x439e6a:	mov	rdi, qword ptr [rbx]
0x439e6d:	mov	rsi, r12
0x439e70:	call	0x403be0
0x439e75:	test	eax, eax
0x439e77:	jne	0x439e58
0x439e79:	mov	r9, qword ptr [rbx + 0x10]
0x439e7d:	cmp	byte ptr [r13], 0x2b
0x439e82:	mov	r12, qword ptr [r9]
0x439e85:	je	0x4091c8
0x439e8b:	mov	rdi, r13
0x439e8e:	call	0x42db40
0x439e93:	mov	r11, qword ptr [rbx + 0x10]
0x439e97:	mov	qword ptr [r11], rax
0x439e9a:	test	r12, r12
0x439e9d:	je	0x439ea9
0x439e9f:	cmp	byte ptr [rbx + 0x25], 0
0x439ea3:	jne	0x4091bb
0x439ea9:	mov	byte ptr [rbx + 0x24], r15b
0x439ead:	mov	byte ptr [rbx + 0x25], 1
0x439eb1:	pop	rax
0x439eb2:	pop	rbx
0x439eb3:	pop	rbp
0x439eb4:	pop	r12
0x439eb6:	pop	r13
0x439eb8:	pop	r14
0x439eba:	pop	r15
0x439ebc:	ret	
0x439ebd:	mov	edx, 0x4e2e70
0x439ec2:	mov	esi, 0x4e2600
0x439ec7:	mov	rcx, rax
0x439eca:	mov	rax, rdx
0x439ecd:	sub	rdx, 0x30
0x439ed1:	mov	qword ptr [rdx + 0x48], rcx
0x439ed5:	cmp	rsi, rax
0x439ed8:	jne	0x439ec7
0x439eda:	mov	ebx, 0x4e2600
0x439edf:	mov	qword ptr [rip + 0xa93ba], rbx
0x439ee6:	jmp	0x439e65
0x439eeb:	mov	edi, 0x30
0x439ef0:	call	0x42db10
0x439ef5:	mov	rdi, r12
0x439ef8:	mov	rbx, rax
0x439efb:	call	0x42db40
0x439f00:	mov	r8, qword ptr [rip + 0xa9399]
0x439f07:	lea	rdi, [rbx + 8]
0x439f0b:	mov	dword ptr [rbx + 0x20], r14d
0x439f0f:	mov	qword ptr [rbx], rax
0x439f12:	mov	qword ptr [rbx + 0x10], rdi
0x439f16:	mov	byte ptr [rbx + 0x25], 0
0x439f1a:	mov	qword ptr [rbx + 8], 0x4c4893
0x439f22:	mov	qword ptr [rbx + 0x18], r8
0x439f26:	mov	qword ptr [rbx + 0x28], 0
0x439f2e:	mov	qword ptr [rip + 0xa936b], rbx
0x439f35:	jmp	0x439e79
0x439f3a:	nop	word ptr [rax + rax]
0x439f40:	endbr64	
0x439f44:	mov	dword ptr [rdi], esi
0x439f46:	ret	
0x439f47:	nop	word ptr [rax + rax]
0x439f50:	endbr64	
0x439f54:	push	rbp
0x439f55:	mov	rbp, rsp
0x439f58:	push	r15
0x439f5a:	push	r14
0x439f5c:	mov	r14, rsi
0x439f5f:	push	r13
0x439f61:	push	r12
0x439f63:	mov	r12, rdi
0x439f66:	push	rbx
0x439f67:	xor	ebx, ebx
0x439f69:	sub	rsp, 0x18
0x439f6d:	mov	rax, rbx
0x439f70:	mov	rsi, r12
0x439f73:	mov	r13d, ebx
0x439f76:	shl	rax, 4
0x439f7a:	mov	rdi, qword ptr [rax + 0x4c40c0]
0x439f81:	call	0x403be0
0x439f86:	test	eax, eax
0x439f88:	je	0x439fa3
0x439f8a:	add	rbx, 1
0x439f8e:	cmp	rbx, 5
0x439f92:	jne	0x439f6d
0x439f94:	lea	rsp, [rbp - 0x28]
0x439f98:	pop	rbx
0x439f99:	pop	r12
0x439f9b:	pop	r13
0x439f9d:	pop	r14
0x439f9f:	pop	r15
0x439fa1:	pop	rbp
0x439fa2:	ret	
0x439fa3:	shl	r13, 4
0x439fa7:	xor	r12d, r12d
0x439faa:	mov	r13, qword ptr [r13 + 0x4c40c8]
0x439fb1:	mov	rdi, r13
0x439fb4:	call	0x4039e0
0x439fb9:	mov	rdi, r14
0x439fbc:	mov	r15, rax
0x439fbf:	mov	esi, 0x4be4ad
0x439fc4:	call	0x403f20
0x439fc9:	test	rax, rax
0x439fcc:	jne	0x43a011
0x439fce:	mov	rdi, r14
0x439fd1:	mov	ebx, r15d
0x439fd4:	call	0x4039e0
0x439fd9:	lea	rdx, [rbx - 8]
0x439fdd:	mov	rcx, rsp
0x439fe0:	imul	r12, rdx
0x439fe4:	lea	rsi, [r12 + rax + 0x18]
0x439fe9:	mov	rdi, rsi
0x439fec:	and	rsi, 0xfffffffffffff000
0x439ff3:	and	rdi, 0xfffffffffffffff0
0x439ff7:	sub	rcx, rsi
0x439ffa:	cmp	rsp, rcx
0x439ffd:	je	0x43a01b
0x439fff:	sub	rsp, 0x1000
0x43a006:	or	qword ptr [rsp + 0xff8], 0
0x43a00f:	jmp	0x439ffa
0x43a011:	lea	rdi, [rax + 1]
0x43a015:	add	r12d, 1
0x43a019:	jmp	0x439fbf
0x43a01b:	and	edi, 0xfff
0x43a021:	sub	rsp, rdi
0x43a024:	test	rdi, rdi
0x43a027:	je	0x43a02f
0x43a029:	or	qword ptr [rsp + rdi - 8], 0
0x43a02f:	lea	r15, [rsp + 0xf]
0x43a034:	and	r15, 0xfffffffffffffff0
0x43a038:	mov	r12, r15
0x43a03b:	mov	esi, 0x4be4ad
0x43a040:	mov	rdi, r14
0x43a043:	call	0x403f20
0x43a048:	mov	r9, rax
0x43a04b:	test	rax, rax
0x43a04e:	jne	0x43a068
0x43a050:	mov	rdi, r12
0x43a053:	mov	rsi, r14
0x43a056:	call	0x4038f0
0x43a05b:	mov	rdi, r15
0x43a05e:	call	0x43a0b0
0x43a063:	jmp	0x439f94
0x43a068:	mov	rdx, r9
0x43a06b:	mov	rsi, r14
0x43a06e:	mov	rdi, r12
0x43a071:	mov	qword ptr [rbp - 0x40], r9
0x43a075:	sub	rdx, r14
0x43a078:	mov	qword ptr [rbp - 0x38], rdx
0x43a07c:	call	0x403c60
0x43a081:	mov	r10, qword ptr [rbp - 0x38]
0x43a085:	mov	rdx, rbx
0x43a088:	mov	rsi, r13
0x43a08b:	lea	rdi, [r12 + r10]
0x43a08f:	call	0x403c60
0x43a094:	mov	r14, qword ptr [rbp - 0x40]
0x43a098:	lea	r12, [rax + rbx]
0x43a09c:	lea	r14, [r14 + 8]
0x43a0a0:	jmp	0x43a03b
0x43a0a2:	nop	word ptr cs:[rax + rax]
0x43a0ad:	nop	dword ptr [rax]
0x43a0b0:	endbr64	
0x43a0b4:	push	r12
0x43a0b6:	xor	esi, esi
0x43a0b8:	push	rbp
0x43a0b9:	push	rbx
0x43a0ba:	sub	rsp, 0x60
0x43a0be:	call	0x43a440
0x43a0c3:	xor	edx, edx
0x43a0c5:	xor	esi, esi
0x43a0c7:	mov	edi, 0x4c6c55
0x43a0cc:	call	0x43a4f0
0x43a0d1:	mov	eax, dword ptr [rip + 0xaa959]
0x43a0d7:	test	eax, eax
0x43a0d9:	jle	0x43a235
0x43a0df:	sub	eax, 1
0x43a0e2:	mov	rcx, qword ptr [rip + 0xaa93f]
0x43a0e9:	imul	rbx, rax, 0x18
0x43a0ed:	lea	rdx, [rcx + 0x10]
0x43a0f1:	lea	rsi, [rcx + rbx + 0x28]
0x43a0f6:	movabs	rbp, 0xaaaaaaaaaaaaaab
0x43a100:	mov	rdi, rsi
0x43a103:	sub	rdi, rdx
0x43a106:	sub	rdi, 0x18
0x43a10a:	shr	rdi, 3
0x43a10e:	imul	rdi, rbp
0x43a112:	add	rdi, 1
0x43a116:	and	edi, 7
0x43a119:	je	0x43a1a4
0x43a11f:	cmp	rdi, 1
0x43a123:	je	0x43a18d
0x43a125:	cmp	rdi, 2
0x43a129:	je	0x43a17f
0x43a12b:	cmp	rdi, 3
0x43a12f:	je	0x43a171
0x43a131:	cmp	rdi, 4
0x43a135:	je	0x43a163
0x43a137:	cmp	rdi, 5
0x43a13b:	je	0x43a155
0x43a13d:	cmp	rdi, 6
0x43a141:	jne	0x43a251
0x43a147:	mov	eax, dword ptr [rdx]
0x43a149:	test	al, 4
0x43a14b:	jne	0x409217
0x43a151:	add	rdx, 0x18
0x43a155:	mov	eax, dword ptr [rdx]
0x43a157:	test	al, 4
0x43a159:	jne	0x409217
0x43a15f:	add	rdx, 0x18
0x43a163:	mov	eax, dword ptr [rdx]
0x43a165:	test	al, 4
0x43a167:	jne	0x409217
0x43a16d:	add	rdx, 0x18
0x43a171:	mov	eax, dword ptr [rdx]
0x43a173:	test	al, 4
0x43a175:	jne	0x409217
0x43a17b:	add	rdx, 0x18
0x43a17f:	mov	eax, dword ptr [rdx]
0x43a181:	test	al, 4
0x43a183:	jne	0x409217
0x43a189:	add	rdx, 0x18
0x43a18d:	mov	eax, dword ptr [rdx]
0x43a18f:	test	al, 4
0x43a191:	jne	0x409217
0x43a197:	add	rdx, 0x18
0x43a19b:	cmp	rdx, rsi
0x43a19e:	je	0x43a235
0x43a1a4:	mov	eax, dword ptr [rdx]
0x43a1a6:	test	al, 4
0x43a1a8:	jne	0x409217
0x43a1ae:	mov	eax, dword ptr [rdx + 0x18]
0x43a1b1:	lea	r8, [rdx + 0x18]
0x43a1b5:	mov	rdx, r8
0x43a1b8:	test	al, 4
0x43a1ba:	jne	0x409217
0x43a1c0:	mov	eax, dword ptr [rdx + 0x18]
0x43a1c3:	add	rdx, 0x18
0x43a1c7:	test	al, 4
0x43a1c9:	jne	0x409217
0x43a1cf:	mov	eax, dword ptr [r8 + 0x30]
0x43a1d3:	lea	rdx, [r8 + 0x30]
0x43a1d7:	test	al, 4
0x43a1d9:	jne	0x409217
0x43a1df:	mov	eax, dword ptr [r8 + 0x48]
0x43a1e3:	lea	rdx, [r8 + 0x48]
0x43a1e7:	test	al, 4
0x43a1e9:	jne	0x409217
0x43a1ef:	mov	eax, dword ptr [r8 + 0x60]
0x43a1f3:	lea	rdx, [r8 + 0x60]
0x43a1f7:	test	al, 4
0x43a1f9:	jne	0x409217
0x43a1ff:	mov	eax, dword ptr [r8 + 0x78]
0x43a203:	lea	rdx, [r8 + 0x78]
0x43a207:	test	al, 4
0x43a209:	jne	0x409217
0x43a20f:	mov	eax, dword ptr [r8 + 0x90]
0x43a216:	lea	rdx, [r8 + 0x90]
0x43a21d:	test	al, 4
0x43a21f:	jne	0x409217
0x43a225:	lea	rdx, [r8 + 0xa8]
0x43a22c:	cmp	rdx, rsi
0x43a22f:	jne	0x43a1a4
0x43a235:	mov	rbx, qword ptr [rip + 0xa908c]
0x43a23c:	test	rbx, rbx
0x43a23f:	je	0x43a248
0x43a241:	mov	ebp, dword ptr [rbx + 4]
0x43a244:	test	ebp, ebp
0x43a246:	jne	0x43a264
0x43a248:	add	rsp, 0x60
0x43a24c:	pop	rbx
0x43a24d:	pop	rbp
0x43a24e:	pop	r12
0x43a250:	ret	
0x43a251:	mov	eax, dword ptr [rdx]
0x43a253:	test	al, 4
0x43a255:	jne	0x409217
0x43a25b:	add	rdx, 0x18
0x43a25f:	jmp	0x43a147
0x43a264:	lea	edi, [rbp + 1]
0x43a267:	shl	rdi, 3
0x43a26b:	call	0x42db10
0x43a270:	mov	edx, ebp
0x43a272:	lea	rsi, [rbx + 8]
0x43a276:	mov	qword ptr [rax], 0x4c4893
0x43a27d:	lea	rdi, [rax + 8]
0x43a281:	shl	rdx, 3
0x43a285:	mov	r12, rax
0x43a288:	call	0x403c60
0x43a28d:	mov	edi, dword ptr [rbx + 4]
0x43a290:	lea	rcx, [rsp + 4]
0x43a295:	mov	rsi, r12
0x43a298:	lea	rdx, [rsp + 8]
0x43a29d:	mov	ebx, 1
0x43a2a2:	add	edi, 1
0x43a2a5:	call	0x4359d0
0x43a2aa:	mov	rdi, r12
0x43a2ad:	call	0x403830
0x43a2b2:	mov	r9d, 0x407754
0x43a2b8:	mov	qword ptr [rsp + 0x28], 3
0x43a2c1:	movq	xmm0, r9
0x43a2c6:	mov	qword ptr [rsp + 0x30], 0x42de40
0x43a2cf:	mov	dword ptr [rsp + 0x38], 0x80000
0x43a2d7:	movhps	xmm0, qword ptr [rip + 0x89f52]
0x43a2de:	mov	qword ptr [rsp + 0x40], 0x42e340
0x43a2e7:	mov	dword ptr [rsp + 0x48], 0x200000
0x43a2ef:	mov	qword ptr [rsp + 0x50], 0x43f8a0
0x43a2f8:	mov	dword ptr [rsp + 0x58], 0x100000
0x43a300:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x43a305:	mov	rdi, qword ptr [rsp + 8]
0x43a30a:	cmp	dword ptr [rsp + 4], ebx
0x43a30e:	ja	0x43a338
0x43a310:	call	0x403830
0x43a315:	call	0x438fa0
0x43a31a:	movsxd	r10, dword ptr [rip + 0xaa70f]
0x43a321:	imul	r11, r10, 0x18
0x43a325:	add	r11, qword ptr [rip + 0xaa6fc]
0x43a32c:	mov	qword ptr [r11], 0
0x43a333:	jmp	0x43a248
0x43a338:	mov	ecx, ebx
0x43a33a:	imul	rsi, rcx, 0x58
0x43a33e:	add	rdi, rsi
0x43a341:	mov	r8, qword ptr [rdi]
0x43a344:	cmp	r8, 0x828
0x43a34b:	je	0x4091f1
0x43a351:	ja	0x43a365
0x43a353:	cmp	r8, 0x3b5
0x43a35a:	ja	0x43a379
0x43a35c:	cmp	r8, 0x3b2
0x43a363:	ja	0x43a387
0x43a365:	mov	edx, 0x4e30c0
0x43a36a:	lea	rsi, [rsp + 0x10]
0x43a36f:	call	0x438920
0x43a374:	add	ebx, 1
0x43a377:	jmp	0x43a305
0x43a379:	cmp	r8, 0x7a2
0x43a380:	jne	0x43a365
0x43a382:	jmp	0x40923d
0x43a387:	jmp	0x40923d
0x43a38c:	nop	dword ptr [rax]
0x43a390:	endbr64	
0x43a394:	push	rbp
0x43a395:	mov	rbp, rdi
0x43a398:	mov	rdi, rsi
0x43a39b:	sub	rsp, 0xd0
0x43a3a2:	mov	qword ptr [rsp + 0x30], rdx
0x43a3a7:	mov	qword ptr [rsp + 0x38], rcx
0x43a3ac:	mov	qword ptr [rsp + 0x40], r8
0x43a3b1:	mov	qword ptr [rsp + 0x48], r9
0x43a3b6:	test	al, al
0x43a3b8:	je	0x43a3f1
0x43a3ba:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x43a3bf:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x43a3c4:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x43a3c9:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x43a3d1:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x43a3d9:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x43a3e1:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x43a3e9:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x43a3f1:	lea	rdx, [rsp + 0x20]
0x43a3f6:	lea	rax, [rsp + 0xe0]
0x43a3fe:	mov	dword ptr [rsp], 0x10
0x43a405:	mov	qword ptr [rsp + 0x10], rdx
0x43a40a:	mov	dword ptr [rsp + 4], 0x30
0x43a412:	mov	qword ptr [rsp + 8], rax
0x43a417:	call	0x403a20
0x43a41c:	mov	rcx, rsp
0x43a41f:	mov	rdi, rbp
0x43a422:	mov	esi, 1
0x43a427:	mov	rdx, rax
0x43a42a:	call	0x403860
0x43a42f:	add	rsp, 0xd0
0x43a436:	pop	rbp
0x43a437:	ret	
0x43a438:	nop	dword ptr [rax + rax]
0x43a440:	endbr64	
0x43a444:	push	r13
0x43a446:	mov	r13, rsi
0x43a449:	push	r12
0x43a44b:	mov	r12, rdi
0x43a44e:	push	rax
0x43a44f:	call	0x43a4c0
0x43a454:	mov	rdx, r13
0x43a457:	mov	rdi, r12
0x43a45a:	xor	esi, esi
0x43a45c:	mov	dword ptr [rip + 0xabeae], 0
0x43a466:	mov	dword ptr [rip + 0xabea0], 0
0x43a470:	mov	dword ptr [rip + 0xabe92], 0
0x43a47a:	mov	dword ptr [rip + 0xabe84], 0
0x43a484:	mov	dword ptr [rip + 0xabe76], 0
0x43a48e:	mov	dword ptr [rip + 0xabe68], 0
0x43a498:	mov	qword ptr [rip + 0xabe55], 0
0x43a4a3:	call	0x43a4f0
0x43a4a8:	mov	r12d, eax
0x43a4ab:	call	0x43b080
0x43a4b0:	mov	eax, r12d
0x43a4b3:	pop	rdx
0x43a4b4:	pop	r12
0x43a4b6:	pop	r13
0x43a4b8:	ret	
0x43a4b9:	nop	dword ptr [rax]
0x43a4c0:	mov	rax, qword ptr [rip + 0xa8e01]
0x43a4c7:	test	rax, rax
0x43a4ca:	je	0x43a4d3
0x43a4cc:	mov	dword ptr [rax + 4], 0
0x43a4d3:	mov	rdx, qword ptr [rip + 0xa8de6]
0x43a4da:	test	rdx, rdx
0x43a4dd:	je	0x43a4e6
0x43a4df:	mov	dword ptr [rdx + 4], 0
0x43a4e6:	ret	
0x43a4e7:	nop	word ptr [rax + rax]
0x43a4f0:	endbr64	
0x43a4f4:	push	rbp
0x43a4f5:	mov	eax, 0x46277b
0x43a4fa:	movq	xmm0, rax
0x43a4ff:	mov	rbp, rsp
0x43a502:	push	r15
0x43a504:	mov	r15d, esi
0x43a507:	push	r14
0x43a509:	push	r13
0x43a50b:	push	r12
0x43a50d:	mov	r12, rdi
0x43a510:	push	rbx
0x43a511:	sub	rsp, 0xf8
0x43a518:	mov	qword ptr [rbp - 0xc8], rdx
0x43a51f:	movzx	r10d, byte ptr [rdi]
0x43a523:	movhps	xmm0, qword ptr [rip + 0x89d0e]
0x43a52a:	movaps	xmmword ptr [rbp - 0xe0], xmm0
0x43a531:	test	esi, esi
0x43a533:	jne	0x43a73a
0x43a539:	movsx	ebx, r10b
0x43a53d:	lea	r13, [r12 + 1]
0x43a542:	mov	r14, r12
0x43a545:	test	ebx, ebx
0x43a547:	je	0x43a6cf
0x43a54d:	mov	qword ptr [rbp - 0xd0], r12
0x43a554:	jmp	0x43a5a1
0x43a556:	nop	word ptr cs:[rax + rax]
0x43a560:	mov	rcx, qword ptr [rip + 0xaa391]
0x43a567:	cmp	qword ptr [rip + 0xaa392], rcx
0x43a56e:	je	0x409df3
0x43a574:	lea	r11, [rcx + 1]
0x43a578:	mov	r14, r13
0x43a57b:	mov	dword ptr [rip + 0xabd8f], 1
0x43a585:	mov	qword ptr [rip + 0xaa36c], r11
0x43a58c:	mov	byte ptr [rcx], bl
0x43a58e:	movsx	ebx, byte ptr [r14]
0x43a592:	lea	r13, [r14 + 1]
0x43a596:	mov	r10d, ebx
0x43a599:	test	ebx, ebx
0x43a59b:	je	0x43a6cf
0x43a5a1:	test	r15d, r15d
0x43a5a4:	jne	0x43a560
0x43a5a6:	cmp	r10b, 0x20
0x43a5aa:	je	0x43a6ec
0x43a5b0:	jle	0x43a5e0
0x43a5b2:	cmp	r10b, 0x25
0x43a5b6:	jne	0x43a670
0x43a5bc:	movsx	r8d, byte ptr [r14 + 1]
0x43a5c1:	lea	r12, [r14 + 2]
0x43a5c5:	mov	ebx, r8d
0x43a5c8:	cmp	r8b, 0x7c
0x43a5cc:	ja	0x409d38
0x43a5d2:	movzx	edx, r8b
0x43a5d6:	notrack jmp	qword ptr ds:[rdx*8 + 0x4c20a8]
0x43a5de:	nop	
0x43a5e0:	cmp	r10b, 9
0x43a5e4:	je	0x43a6ec
0x43a5ea:	cmp	r10b, 0xa
0x43a5ee:	jne	0x43a560
0x43a5f4:	call	0x43b080
0x43a5f9:	mov	r12, qword ptr [rip + 0xa8cc8]
0x43a600:	test	r12, r12
0x43a603:	je	0x43a639
0x43a605:	mov	edx, dword ptr [r12 + 4]
0x43a60a:	test	edx, edx
0x43a60c:	je	0x43a639
0x43a60e:	lea	esi, [rdx - 1]
0x43a611:	mov	rdi, qword ptr [r12 + rsi*8 + 8]
0x43a616:	mov	r14, rsi
0x43a619:	mov	esi, 0x4be7ac
0x43a61e:	call	0x403be0
0x43a623:	test	eax, eax
0x43a625:	jne	0x43a639
0x43a627:	cmp	dword ptr [rip + 0xab956], 0
0x43a62e:	jne	0x409e28
0x43a634:	mov	dword ptr [r12 + 4], r14d
0x43a639:	call	0x43d180
0x43a63e:	mov	rbx, qword ptr [rip + 0xa8c83]
0x43a645:	test	rbx, rbx
0x43a648:	je	0x409302
0x43a64e:	cmp	dword ptr [rbx + 4], 0
0x43a652:	je	0x409302
0x43a658:	call	0x43d590
0x43a65d:	test	eax, eax
0x43a65f:	je	0x409302
0x43a665:	jmp	0x43a6dd
0x43a667:	nop	word ptr [rax + rax]
0x43a670:	cmp	r10b, 0x24
0x43a674:	jle	0x43a560
0x43a67a:	cmp	r10b, 0x5c
0x43a67e:	je	0x409d4f
0x43a684:	cmp	r10b, 0x7c
0x43a688:	jne	0x43a560
0x43a68e:	call	0x43b080
0x43a693:	mov	r9, qword ptr [rip + 0xaa25e]
0x43a69a:	cmp	qword ptr [rip + 0xaa25f], r9
0x43a6a1:	je	0x40925f
0x43a6a7:	mov	r10, qword ptr [rip + 0xaa24a]
0x43a6ae:	mov	r14, r13
0x43a6b1:	mov	dword ptr [rip + 0xabc59], 1
0x43a6bb:	lea	r8, [r10 + 1]
0x43a6bf:	mov	qword ptr [rip + 0xaa232], r8
0x43a6c6:	mov	byte ptr [r10], 0x7c
0x43a6ca:	jmp	0x43a58e
0x43a6cf:	mov	eax, dword ptr [rip + 0xabb53]
0x43a6d5:	test	eax, eax
0x43a6d7:	jne	0x43af89
0x43a6dd:	lea	rsp, [rbp - 0x28]
0x43a6e1:	pop	rbx
0x43a6e2:	pop	r12
0x43a6e4:	pop	r13
0x43a6e6:	pop	r14
0x43a6e8:	pop	r15
0x43a6ea:	pop	rbp
0x43a6eb:	ret	
0x43a6ec:	call	0x43b080
0x43a6f1:	mov	r14, r13
0x43a6f4:	mov	dword ptr [rip + 0xabc12], 0
0x43a6fe:	mov	dword ptr [rip + 0xabc04], 0
0x43a708:	mov	dword ptr [rip + 0xabbf6], 0
0x43a712:	mov	dword ptr [rip + 0xabbe8], 0
0x43a71c:	jmp	0x43a58e
0x43a721:	mov	rdi, r12
0x43a724:	call	0x42f200
0x43a729:	mov	r14, rax
0x43a72c:	test	rax, rax
0x43a72f:	jne	0x43a58e
0x43a735:	jmp	0x4095c5
0x43a73a:	test	r10b, r10b
0x43a73d:	jne	0x43a539
0x43a743:	jmp	0x4095cd
0x43a748:	cmp	dword ptr [rip + 0xab835], 0
0x43a74f:	jne	0x40969e
0x43a755:	mov	r14, r12
0x43a758:	movzx	edi, byte ptr [r14]
0x43a75c:	cmp	dil, 0x2e
0x43a760:	je	0x43af95
0x43a766:	movzx	r13d, dil
0x43a76a:	test	byte ptr [r13 + r13 + 0x4bc840], 0x8c
0x43a773:	jne	0x43af95
0x43a779:	mov	qword ptr [rbp - 0xe8], 0
0x43a784:	mov	rcx, r14
0x43a787:	sub	rcx, r12
0x43a78a:	mov	r13d, ecx
0x43a78d:	cmp	dil, 0x25
0x43a791:	je	0x409cbd
0x43a797:	cmp	dword ptr [rip + 0xab8a2], 0
0x43a79e:	js	0x409802
0x43a7a4:	cmp	dword ptr [rip + 0xa8af1], 0
0x43a7ab:	jne	0x409764
0x43a7b1:	mov	r11, qword ptr [rip + 0xaba78]
0x43a7b8:	and	ebx, 0xffffffdf
0x43a7bb:	movsxd	rdx, r13d
0x43a7be:	mov	qword ptr [rbp - 0xf8], r14
0x43a7c5:	mov	byte ptr [rbp - 0x110], bl
0x43a7cb:	mov	r14d, r13d
0x43a7ce:	mov	qword ptr [rbp - 0x108], r11
0x43a7d5:	mov	rbx, r11
0x43a7d8:	mov	dword ptr [rbp - 0x100], r15d
0x43a7df:	mov	r15, r12
0x43a7e2:	mov	r12d, r8d
0x43a7e5:	cmp	r12d, 0x6a
0x43a7e9:	sete	r13b
0x43a7ed:	cmp	r12d, 0x75
0x43a7f1:	sete	byte ptr [rbp - 0xf0]
0x43a7f8:	test	rbx, rbx
0x43a7fb:	jne	0x43b076
0x43a801:	mov	edi, 0x28
0x43a806:	mov	dword ptr [rbp - 0x110], r12d
0x43a80d:	mov	ebx, r13d
0x43a810:	mov	r12, r15
0x43a813:	mov	r13d, r14d
0x43a816:	mov	r15d, dword ptr [rbp - 0x100]
0x43a81d:	mov	r14, qword ptr [rbp - 0xf8]
0x43a824:	call	0x42db10
0x43a829:	mov	rdx, qword ptr [rbp - 0x108]
0x43a830:	mov	qword ptr [rip + 0xab9f9], rax
0x43a837:	mov	r10, rax
0x43a83a:	mov	qword ptr [rax + 0x20], rdx
0x43a83e:	mov	eax, dword ptr [rbp - 0x110]
0x43a844:	cmp	qword ptr [rbp - 0xe8], 0
0x43a84c:	mov	dword ptr [r10 + 8], r13d
0x43a850:	jne	0x43a87e
0x43a852:	mov	esi, r13d
0x43a855:	mov	rdi, r12
0x43a858:	mov	qword ptr [rbp - 0xf8], r10
0x43a85f:	mov	dword ptr [rbp - 0x100], eax
0x43a865:	call	0x438640
0x43a86a:	mov	r10, qword ptr [rbp - 0xf8]
0x43a871:	mov	qword ptr [rbp - 0xe8], rax
0x43a878:	mov	eax, dword ptr [rbp - 0x100]
0x43a87e:	cmp	eax, 0x55
0x43a881:	mov	rdi, qword ptr [rbp - 0xe8]
0x43a888:	mov	qword ptr [rbp - 0xe8], r10
0x43a88f:	sete	r8b
0x43a893:	or	ebx, dword ptr [rbp - 0xf0]
0x43a899:	or	r8d, ebx
0x43a89c:	mov	qword ptr [r10], rdi
0x43a89f:	movzx	esi, r8b
0x43a8a3:	mov	dword ptr [r10 + 0xc], esi
0x43a8a7:	call	0x436980
0x43a8ac:	mov	rdi, rax
0x43a8af:	mov	r12, rax
0x43a8b2:	mov	qword ptr [rip + 0xaba1f], rax
0x43a8b9:	call	0x4039e0
0x43a8be:	mov	r10, qword ptr [rbp - 0xe8]
0x43a8c5:	mov	qword ptr [rbp - 0xe8], 0
0x43a8d0:	mov	dword ptr [rip + 0xaba0a], eax
0x43a8d6:	mov	qword ptr [r10 + 0x10], r12
0x43a8da:	mov	dword ptr [r10 + 0x18], eax
0x43a8de:	mov	rdi, qword ptr [rbp - 0xe8]
0x43a8e5:	mov	qword ptr [rbp - 0xf0], r10
0x43a8ec:	call	0x403830
0x43a8f1:	mov	r11, qword ptr [rbp - 0xf0]
0x43a8f8:	mov	rcx, qword ptr [rip + 0xaa001]
0x43a8ff:	sub	rcx, qword ptr [rip + 0xa9ff2]
0x43a906:	movsxd	rbx, dword ptr [r11 + 0x18]
0x43a90a:	cmp	rbx, rcx
0x43a90d:	ja	0x409560
0x43a913:	mov	rsi, qword ptr [r11 + 0x10]
0x43a917:	mov	rdi, qword ptr [rip + 0xa9fda]
0x43a91e:	mov	rdx, rbx
0x43a921:	call	0x403c60
0x43a926:	add	qword ptr [rip + 0xa9fcb], rbx
0x43a92d:	mov	dword ptr [rip + 0xab9d9], 1
0x43a937:	mov	dword ptr [rip + 0xab9d3], 1
0x43a941:	jmp	0x43a58e
0x43a946:	cmp	r8d, 0x3e
0x43a94a:	mov	ecx, 0x14
0x43a94f:	mov	r11d, 4
0x43a955:	cmove	r11d, ecx
0x43a959:	xor	ebx, ebx
0x43a95b:	mov	dword ptr [rbp - 0x110], r11d
0x43a962:	jmp	0x43a96b
0x43a964:	cmp	al, 9
0x43a966:	je	0x43a979
0x43a968:	add	ebx, 1
0x43a96b:	mov	edi, ebx
0x43a96d:	lea	r9, [r12 + rdi]
0x43a971:	movzx	eax, byte ptr [r9]
0x43a975:	test	al, 0xdf
0x43a977:	jne	0x43a964
0x43a979:	lea	r10d, [rbx - 1]
0x43a97d:	mov	r8d, dword ptr [rip + 0xaa0ac]
0x43a984:	mov	rdx, qword ptr [rip + 0xaa09d]
0x43a98b:	mov	eax, ebx
0x43a98d:	movzx	r13d, byte ptr [r12 + r10]
0x43a992:	mov	dword ptr [rbp - 0xf8], r15d
0x43a999:	mov	r14d, 0
0x43a99f:	mov	qword ptr [rbp - 0x100], rdi
0x43a9a6:	mov	r15, rdx
0x43a9a9:	cmp	r13b, 0x2a
0x43a9ad:	mov	byte ptr [rbp - 0x108], r13b
0x43a9b4:	sete	sil
0x43a9b8:	mov	dword ptr [rbp - 0xe8], r8d
0x43a9bf:	movzx	ecx, sil
0x43a9c3:	mov	qword ptr [rbp - 0xf0], r9
0x43a9ca:	sub	eax, ecx
0x43a9cc:	mov	r13, rax
0x43a9cf:	jmp	0x43a9f2
0x43a9d1:	mov	rbx, qword ptr [r15]
0x43a9d4:	mov	rdx, r13
0x43a9d7:	mov	rsi, r12
0x43a9da:	mov	rdi, rbx
0x43a9dd:	call	0x4038d0
0x43a9e2:	test	eax, eax
0x43a9e4:	je	0x43b00c
0x43a9ea:	add	r14d, 1
0x43a9ee:	add	r15, 0x18
0x43a9f2:	cmp	dword ptr [rbp - 0xe8], r14d
0x43a9f9:	jg	0x43a9d1
0x43a9fb:	mov	r14, qword ptr [rbp - 0xf0]
0x43aa02:	mov	r15d, dword ptr [rbp - 0xf8]
0x43aa09:	jmp	0x43a58e
0x43aa0e:	mov	r8, r12
0x43aa11:	jmp	0x43aa1c
0x43aa13:	cmp	dl, 0x29
0x43aa16:	je	0x43aa24
0x43aa18:	add	r8, 1
0x43aa1c:	movzx	edx, byte ptr [r8]
0x43aa20:	test	dl, dl
0x43aa22:	jne	0x43aa13
0x43aa24:	mov	esi, r8d
0x43aa27:	mov	r13, r12
0x43aa2a:	mov	qword ptr [rbp - 0xe8], r8
0x43aa31:	mov	rbx, qword ptr [rip + 0xa8868]
0x43aa38:	sub	esi, r12d
0x43aa3b:	movsxd	r14, esi
0x43aa3e:	mov	r12d, esi
0x43aa41:	jmp	0x43aa47
0x43aa43:	mov	rbx, qword ptr [rbx + 0x18]
0x43aa47:	test	rbx, rbx
0x43aa4a:	je	0x43b046
0x43aa50:	cmp	dword ptr [rbx + 0x20], r12d
0x43aa54:	jne	0x43aa43
0x43aa56:	mov	rdi, qword ptr [rbx]
0x43aa59:	mov	rdx, r14
0x43aa5c:	mov	rsi, r13
0x43aa5f:	call	0x4038d0
0x43aa64:	test	eax, eax
0x43aa66:	jne	0x43aa43
0x43aa68:	mov	rcx, qword ptr [rbx + 0x10]
0x43aa6c:	xor	edx, edx
0x43aa6e:	xor	esi, esi
0x43aa70:	mov	r14, qword ptr [rbp - 0xe8]
0x43aa77:	mov	rdi, qword ptr [rcx]
0x43aa7a:	call	0x43a4f0
0x43aa7f:	test	eax, eax
0x43aa81:	jne	0x43a6dd
0x43aa87:	cmp	byte ptr [r14], 0
0x43aa8b:	je	0x43a6cf
0x43aa91:	add	r14, 1
0x43aa95:	jmp	0x43a58e
0x43aa9a:	xor	esi, esi
0x43aa9c:	mov	r14d, esi
0x43aa9f:	add	esi, 1
0x43aaa2:	add	r14, r12
0x43aaa5:	movzx	eax, byte ptr [r14]
0x43aaa9:	test	al, 0xdf
0x43aaab:	je	0x43aab1
0x43aaad:	cmp	al, 0x25
0x43aaaf:	jne	0x43aa9c
0x43aab1:	mov	rdi, r13
0x43aab4:	call	0x438640
0x43aab9:	mov	qword ptr [rip + 0xab838], rax
0x43aac0:	jmp	0x43a58e
0x43aac5:	mov	r15, r12
0x43aac8:	movzx	r10d, byte ptr [r15]
0x43aacc:	test	r10b, r10b
0x43aacf:	je	0x409279
0x43aad5:	jmp	0x409273
0x43aada:	mov	r14, r12
0x43aadd:	movzx	eax, byte ptr [r14]
0x43aae1:	cmp	al, 0xa
0x43aae3:	je	0x40943a
0x43aae9:	jmp	0x409436
0x43aaee:	movzx	esi, byte ptr [r14 + 2]
0x43aaf3:	cmp	sil, 0x7b
0x43aaf7:	jne	0x40974b
0x43aafd:	cmp	byte ptr [rip + 0xab57c], 0
0x43ab04:	jne	0x409741
0x43ab0a:	lea	rdi, [r14 + 3]
0x43ab0e:	call	0x42f200
0x43ab13:	cmp	byte ptr [rip + 0xab566], 0
0x43ab1a:	mov	r14, rax
0x43ab1d:	jne	0x409cb3
0x43ab23:	test	r14, r14
0x43ab26:	jne	0x43a58e
0x43ab2c:	jmp	0x4095c5
0x43ab31:	cmp	byte ptr [rip + 0xa9edc], 0
0x43ab38:	jne	0x43afa6
0x43ab3e:	mov	r13, qword ptr [rip + 0xab50b]
0x43ab45:	mov	rsi, qword ptr [rip + 0xa9db4]
0x43ab4c:	sub	rsi, qword ptr [rip + 0xa9da5]
0x43ab53:	cmp	r13, rsi
0x43ab56:	ja	0x4094cb
0x43ab5c:	mov	rsi, qword ptr [rip + 0xab4f5]
0x43ab63:	mov	rdi, qword ptr [rip + 0xa9d8e]
0x43ab6a:	mov	rdx, r13
0x43ab6d:	mov	r14, r12
0x43ab70:	call	0x403c60
0x43ab75:	add	qword ptr [rip + 0xa9d7c], r13
0x43ab7c:	mov	dword ptr [rip + 0xab78e], 1
0x43ab86:	jmp	0x43a58e
0x43ab8b:	mov	rdx, qword ptr [rbp - 0xc8]
0x43ab92:	xor	esi, esi
0x43ab94:	mov	rdi, r12
0x43ab97:	call	0x43b390
0x43ab9c:	mov	r14, rax
0x43ab9f:	test	rax, rax
0x43aba2:	jne	0x43a58e
0x43aba8:	jmp	0x4095c5
0x43abad:	mov	rdi, qword ptr [rip + 0xa7a3c]
0x43abb4:	xor	edx, edx
0x43abb6:	xor	esi, esi
0x43abb8:	call	0x43a4f0
0x43abbd:	test	eax, eax
0x43abbf:	jne	0x43a6dd
0x43abc5:	mov	r14, r12
0x43abc8:	jmp	0x43a58e
0x43abcd:	cmp	qword ptr [rip + 0xa9e23], 0
0x43abd5:	jne	0x409360
0x43abdb:	cmp	qword ptr [rip + 0xa9e0d], 0
0x43abe3:	je	0x43ac25
0x43abe5:	xor	edx, edx
0x43abe7:	mov	esi, 1
0x43abec:	mov	edi, 0x46273c
0x43abf1:	call	0x43a4f0
0x43abf6:	xor	edx, edx
0x43abf8:	xor	esi, esi
0x43abfa:	mov	edi, 0x4c6c55
0x43abff:	call	0x43a4f0
0x43ac04:	mov	rdi, qword ptr [rip + 0xa9de5]
0x43ac0b:	xor	edx, edx
0x43ac0d:	mov	esi, 1
0x43ac12:	call	0x43a4f0
0x43ac17:	xor	edx, edx
0x43ac19:	xor	esi, esi
0x43ac1b:	mov	edi, 0x4c6c55
0x43ac20:	call	0x43a4f0
0x43ac25:	cmp	qword ptr [rip + 0xa9ddb], 0
0x43ac2d:	je	0x43ac6f
0x43ac2f:	xor	edx, edx
0x43ac31:	mov	esi, 1
0x43ac36:	mov	edi, 0x462760
0x43ac3b:	call	0x43a4f0
0x43ac40:	xor	edx, edx
0x43ac42:	xor	esi, esi
0x43ac44:	mov	edi, 0x4c6c55
0x43ac49:	call	0x43a4f0
0x43ac4e:	mov	rdi, qword ptr [rip + 0xa9db3]
0x43ac55:	xor	edx, edx
0x43ac57:	mov	esi, 1
0x43ac5c:	call	0x43a4f0
0x43ac61:	xor	edx, edx
0x43ac63:	xor	esi, esi
0x43ac65:	mov	edi, 0x4c6c55
0x43ac6a:	call	0x43a4f0
0x43ac6f:	cmp	dword ptr [rip + 0xa85aa], 0
0x43ac76:	jne	0x4093d9
0x43ac7c:	cmp	qword ptr [rip + 0xa9d64], 0
0x43ac84:	jne	0x4093cb
0x43ac8a:	movdqa	xmm1, xmmword ptr [rbp - 0xe0]
0x43ac92:	mov	ecx, 0x430300
0x43ac97:	xor	esi, esi
0x43ac99:	lea	r8, [rbp - 0xc0]
0x43aca0:	mov	edx, 7
0x43aca5:	mov	edi, 0x4e2420
0x43acaa:	mov	qword ptr [rbp - 0xb0], 7
0x43acb5:	mov	word ptr [rbp - 0xa8], 0x100
0x43acbe:	movaps	xmmword ptr [rbp - 0xc0], xmm1
0x43acc5:	call	0x439690
0x43acca:	mov	rcx, qword ptr [rip + 0xa77cf]
0x43acd1:	mov	qword ptr [rbp - 0xb8], 0x4be4d8
0x43acdc:	cmp	byte ptr [rcx], 0
0x43acdf:	jne	0x4093a5
0x43ace5:	mov	rdi, qword ptr [rbp - 0xb8]
0x43acec:	mov	r14, r12
0x43acef:	call	0x4039e0
0x43acf4:	lea	r8, [rbp - 0xc0]
0x43acfb:	mov	ecx, 0x430300
0x43ad00:	xor	esi, esi
0x43ad02:	mov	rdx, rax
0x43ad05:	mov	edi, 0x4e2420
0x43ad0a:	mov	qword ptr [rbp - 0xb0], rax
0x43ad11:	call	0x439690
0x43ad16:	jmp	0x43a58e
0x43ad1b:	mov	rdi, qword ptr [rip + 0xab4e6]
0x43ad22:	mov	r14, r12
0x43ad25:	call	0x43c930
0x43ad2a:	jmp	0x43a58e
0x43ad2f:	mov	r11, qword ptr [rip + 0xab312]
0x43ad36:	mov	rdi, qword ptr [r11 + 0x10]
0x43ad3a:	test	rdi, rdi
0x43ad3d:	jne	0x43ad46
0x43ad3f:	mov	rdi, qword ptr [rip + 0xa788a]
0x43ad46:	xor	edx, edx
0x43ad48:	xor	esi, esi
0x43ad4a:	call	0x43a4f0
0x43ad4f:	test	eax, eax
0x43ad51:	jne	0x43a6dd
0x43ad57:	mov	r14, r12
0x43ad5a:	jmp	0x43a58e
0x43ad5f:	mov	r9, qword ptr [rbp - 0xc8]
0x43ad66:	test	r9, r9
0x43ad69:	je	0x409c9f
0x43ad6f:	cmp	byte ptr [r9], 0
0x43ad73:	jne	0x409c87
0x43ad79:	movzx	r10d, byte ptr [r14 + 2]
0x43ad7e:	cmp	r10b, 0x7d
0x43ad82:	je	0x43ad8d
0x43ad84:	test	r10b, r10b
0x43ad87:	jne	0x43af9e
0x43ad8d:	xor	edx, edx
0x43ad8f:	xor	esi, esi
0x43ad91:	mov	edi, 0x4c6c55
0x43ad96:	mov	r14, r12
0x43ad99:	call	0x43a4f0
0x43ad9e:	jmp	0x43a58e
0x43ada3:	mov	rdi, qword ptr [rip + 0xa783e]
0x43adaa:	xor	edx, edx
0x43adac:	xor	esi, esi
0x43adae:	call	0x43a4f0
0x43adb3:	test	eax, eax
0x43adb5:	jne	0x43a6dd
0x43adbb:	mov	r14, r12
0x43adbe:	jmp	0x43a58e
0x43adc3:	mov	dword ptr [rip + 0xab53f], 1
0x43adcd:	mov	r14, r12
0x43add0:	jmp	0x43a58e
0x43add5:	mov	rdi, qword ptr [rip + 0xa77dc]
0x43addc:	xor	edx, edx
0x43adde:	xor	esi, esi
0x43ade0:	call	0x43a4f0
0x43ade5:	test	eax, eax
0x43ade7:	jne	0x43a6dd
0x43aded:	mov	r14, r12
0x43adf0:	jmp	0x43a58e
0x43adf5:	mov	dword ptr [rip + 0xab509], 1
0x43adff:	mov	r14, r12
0x43ae02:	jmp	0x43a58e
0x43ae07:	mov	r9, qword ptr [rip + 0xa84ba]
0x43ae0e:	test	r9, r9
0x43ae11:	je	0x4095bd
0x43ae17:	mov	r12d, dword ptr [r9 + 4]
0x43ae1b:	movzx	r10d, byte ptr [r14 + 2]
0x43ae20:	cmp	r10b, 0x7b
0x43ae24:	jne	0x4095a4
0x43ae2a:	lea	rdi, [r14 + 3]
0x43ae2e:	call	0x42f200
0x43ae33:	mov	r14, rax
0x43ae36:	test	rax, rax
0x43ae39:	je	0x4095c5
0x43ae3f:	call	0x43b080
0x43ae44:	mov	r11, qword ptr [rip + 0xa847d]
0x43ae4b:	test	r11, r11
0x43ae4e:	je	0x40959d
0x43ae54:	mov	edx, dword ptr [r11 + 4]
0x43ae58:	cmp	r12d, edx
0x43ae5b:	je	0x43a58e
0x43ae61:	jmp	0x409580
0x43ae66:	mov	rdi, qword ptr [rip + 0xab4ab]
0x43ae6d:	mov	r14, r12
0x43ae70:	call	0x43c930
0x43ae75:	jmp	0x43a58e
0x43ae7a:	mov	rdi, qword ptr [rip + 0xa773f]
0x43ae81:	xor	edx, edx
0x43ae83:	xor	esi, esi
0x43ae85:	call	0x43a4f0
0x43ae8a:	test	eax, eax
0x43ae8c:	jne	0x43a6dd
0x43ae92:	mov	r14, r12
0x43ae95:	jmp	0x43a58e
0x43ae9a:	mov	rdi, qword ptr [rip + 0xa770f]
0x43aea1:	xor	edx, edx
0x43aea3:	xor	esi, esi
0x43aea5:	call	0x43a4f0
0x43aeaa:	test	eax, eax
0x43aeac:	jne	0x43a6dd
0x43aeb2:	mov	r14, r12
0x43aeb5:	jmp	0x43a58e
0x43aeba:	mov	rdi, qword ptr [rip + 0xa7597]
0x43aec1:	xor	edx, edx
0x43aec3:	xor	esi, esi
0x43aec5:	call	0x43a4f0
0x43aeca:	test	eax, eax
0x43aecc:	jne	0x43a6dd
0x43aed2:	mov	r14, r12
0x43aed5:	jmp	0x43a58e
0x43aeda:	mov	ecx, 0x430300
0x43aedf:	xor	edx, edx
0x43aee1:	mov	esi, 1
0x43aee6:	mov	r14, r12
0x43aee9:	lea	r8, [rbp - 0xc0]
0x43aef0:	mov	edi, 0x4e24b0
0x43aef5:	mov	qword ptr [rbp - 0xc0], 0x45b6a6
0x43af00:	mov	qword ptr [rbp - 0xb0], 0
0x43af0b:	mov	word ptr [rbp - 0xa8], 0
0x43af14:	call	0x439690
0x43af19:	jmp	0x43a58e
0x43af1e:	mov	rdi, qword ptr [rip + 0xa76a3]
0x43af25:	xor	edx, edx
0x43af27:	xor	esi, esi
0x43af29:	call	0x43a4f0
0x43af2e:	test	eax, eax
0x43af30:	jne	0x43a6dd
0x43af36:	mov	r14, r12
0x43af39:	jmp	0x43a58e
0x43af3e:	cmp	byte ptr [rip + 0xab13b], 0
0x43af45:	jne	0x4096fd
0x43af4b:	xor	ebx, ebx
0x43af4d:	jmp	0x43af6c
0x43af4f:	mov	r11, qword ptr [rip + 0xab10a]
0x43af56:	mov	rdi, qword ptr [r11 + rbx*8]
0x43af5a:	test	rdi, rdi
0x43af5d:	je	0x43af68
0x43af5f:	xor	edx, edx
0x43af61:	xor	esi, esi
0x43af63:	call	0x43b180
0x43af68:	add	rbx, 1
0x43af6c:	cmp	dword ptr [rip + 0xa9aa6], ebx
0x43af72:	jg	0x43af4f
0x43af74:	cmp	byte ptr [rip + 0xab105], 0
0x43af7b:	mov	r14, r12
0x43af7e:	je	0x43a58e
0x43af84:	jmp	0x40934b
0x43af89:	call	0x43b080
0x43af8e:	xor	eax, eax
0x43af90:	jmp	0x43a6dd
0x43af95:	add	r14, 1
0x43af99:	jmp	0x43a758
0x43af9e:	mov	r14, r12
0x43afa1:	jmp	0x43a58e
0x43afa6:	cmp	byte ptr [rip + 0xab0d3], 0
0x43afad:	jne	0x43b06c
0x43afb3:	xor	ebx, ebx
0x43afb5:	cmp	dword ptr [rip + 0xa9a5d], ebx
0x43afbb:	jle	0x43b052
0x43afc1:	mov	rdi, qword ptr [rip + 0xab0a0]
0x43afc8:	mov	r14, rbx
0x43afcb:	shl	r14, 5
0x43afcf:	add	rdi, r14
0x43afd2:	mov	rcx, qword ptr [rdi + 8]
0x43afd6:	test	rcx, rcx
0x43afd9:	je	0x43afe0
0x43afdb:	cmp	byte ptr [rcx], 0x2a
0x43afde:	je	0x43b006
0x43afe0:	mov	r8, qword ptr [rip + 0xab061]
0x43afe7:	cmp	qword ptr [rdi + 0x10], r8
0x43afeb:	jne	0x43b006
0x43afed:	mov	rdi, qword ptr [rdi]
0x43aff0:	xor	edx, edx
0x43aff2:	xor	esi, esi
0x43aff4:	call	0x43b180
0x43aff9:	mov	r9, qword ptr [rip + 0xab068]
0x43b000:	mov	byte ptr [r9 + r14 + 0x18], 1
0x43b006:	add	rbx, 1
0x43b00a:	jmp	0x43afb5
0x43b00c:	cmp	byte ptr [rbp - 0x108], 0x2a
0x43b013:	je	0x43b027
0x43b015:	mov	r11, qword ptr [rbp - 0x100]
0x43b01c:	cmp	byte ptr [rbx + r11], 0
0x43b021:	jne	0x43a9ea
0x43b027:	mov	edi, dword ptr [rbp - 0x110]
0x43b02d:	or	dword ptr [r15 + 0x10], edi
0x43b031:	cmp	byte ptr [r15 + 0x14], 0
0x43b036:	je	0x43a9ea
0x43b03c:	mov	byte ptr [r15 + 0x15], 1
0x43b041:	jmp	0x43a9ea
0x43b046:	mov	r14, qword ptr [rbp - 0xe8]
0x43b04d:	jmp	0x43aa87
0x43b052:	cmp	byte ptr [rip + 0xab027], 0
0x43b059:	mov	r14, r12
0x43b05c:	je	0x43a58e
0x43b062:	call	0x43e3d0
0x43b067:	jmp	0x43a58e
0x43b06c:	call	0x43e3b0
0x43b071:	jmp	0x43afb3
0x43b076:	jmp	0x4094e5
0x43b07b:	nop	dword ptr [rax + rax]
0x43b080:	cmp	dword ptr [rip + 0xab28d], 0
0x43b087:	jne	0x43b08a
0x43b089:	ret	
0x43b08a:	push	rbp
0x43b08b:	push	rbx
0x43b08c:	push	rcx
0x43b08d:	mov	rax, qword ptr [rip + 0xa9864]
0x43b094:	cmp	qword ptr [rip + 0xa9865], rax
0x43b09b:	je	0x40a6e3
0x43b0a1:	mov	rcx, qword ptr [rip + 0xa9850]
0x43b0a8:	lea	rdx, [rcx + 1]
0x43b0ac:	mov	qword ptr [rip + 0xa9845], rdx
0x43b0b3:	mov	byte ptr [rcx], 0
0x43b0b6:	mov	rbp, qword ptr [rip + 0xa9833]
0x43b0bd:	mov	rbx, qword ptr [rip + 0xa9834]
0x43b0c4:	cmp	rbp, rbx
0x43b0c7:	je	0x40a6f7
0x43b0cd:	mov	rsi, qword ptr [rip + 0xa983c]
0x43b0d4:	mov	rdi, qword ptr [rip + 0xa9825]
0x43b0db:	add	rbx, rsi
0x43b0de:	not	rsi
0x43b0e1:	mov	r9, rdi
0x43b0e4:	sub	r9, qword ptr [rip + 0xa97fd]
0x43b0eb:	and	rbx, rsi
0x43b0ee:	mov	r8, rbx
0x43b0f1:	sub	r8, qword ptr [rip + 0xa97f0]
0x43b0f8:	cmp	r8, r9
0x43b0fb:	cmova	rbx, rdi
0x43b0ff:	cmp	dword ptr [rip + 0xab202], 0
0x43b106:	movq	xmm0, rbx
0x43b10b:	punpcklqdq	xmm0, xmm0
0x43b10f:	movaps	xmmword ptr [rip + 0xa97da], xmm0
0x43b116:	jne	0x43b150
0x43b118:	cmp	dword ptr [rip + 0xab1e5], 0
0x43b11f:	jne	0x40a6ae
0x43b125:	mov	edx, dword ptr [rip + 0xab1e1]
0x43b12b:	mov	esi, dword ptr [rip + 0xab1df]
0x43b131:	mov	rdi, rbp
0x43b134:	call	0x43b180
0x43b139:	cmp	dword ptr [rip + 0xab1cc], 0
0x43b140:	jne	0x43b15d
0x43b142:	mov	dword ptr [rip + 0xab1c8], 0
0x43b14c:	pop	rax
0x43b14d:	pop	rbx
0x43b14e:	pop	rbp
0x43b14f:	ret	
0x43b150:	mov	rdi, rbp
0x43b153:	call	0x43f250
0x43b158:	mov	rbp, rax
0x43b15b:	jmp	0x43b118
0x43b15d:	movsxd	r10, dword ptr [rip + 0xaaf0c]
0x43b164:	mov	r11, qword ptr [rip + 0xaaef5]
0x43b16b:	mov	qword ptr [r11 + r10*8], rbp
0x43b16f:	jmp	0x43b142
0x43b171:	nop	word ptr cs:[rax + rax]
0x43b17c:	nop	dword ptr [rax]
0x43b180:	endbr64	
0x43b184:	push	r12
0x43b186:	mov	r12d, edx
0x43b189:	push	rbp
0x43b18a:	mov	ebp, esi
0x43b18c:	sub	rsp, 0x18
0x43b190:	cmp	byte ptr [rip + 0xab06d], 0
0x43b197:	mov	qword ptr [rsp + 8], rdi
0x43b19c:	lea	rsi, [rsp + 8]
0x43b1a1:	jne	0x43b1f7
0x43b1a3:	mov	edi, 0x4e32c8
0x43b1a8:	call	0x43b210
0x43b1ad:	mov	eax, ebp
0x43b1af:	or	eax, r12d
0x43b1b2:	jne	0x43b1bc
0x43b1b4:	add	rsp, 0x18
0x43b1b8:	pop	rbp
0x43b1b9:	pop	r12
0x43b1bb:	ret	
0x43b1bc:	mov	rdi, qword ptr [rsp + 8]
0x43b1c1:	cmp	byte ptr [rdi], 0x2d
0x43b1c4:	je	0x43b1d2
0x43b1c6:	mov	edx, r12d
0x43b1c9:	mov	esi, ebp
0x43b1cb:	call	0x43d0d0
0x43b1d0:	jmp	0x43b1b4
0x43b1d2:	mov	esi, 0x3d
0x43b1d7:	mov	qword ptr [rsp], rdi
0x43b1db:	call	0x403a60
0x43b1e0:	mov	rdi, qword ptr [rsp]
0x43b1e4:	test	rax, rax
0x43b1e7:	je	0x43b1c6
0x43b1e9:	add	rax, 1
0x43b1ed:	mov	qword ptr [rsp + 8], rax
0x43b1f2:	mov	rdi, rax
0x43b1f5:	jmp	0x43b1c6
0x43b1f7:	mov	edi, 0x4e32c0
0x43b1fc:	call	0x43b210
0x43b201:	jmp	0x43b1ad
0x43b203:	nop	
0x43b204:	nop	word ptr cs:[rax + rax]
0x43b20f:	nop	
0x43b210:	endbr64	
0x43b214:	push	rbp
0x43b215:	mov	rbp, rsi
0x43b218:	xor	edx, edx
0x43b21a:	mov	esi, 1
0x43b21f:	push	rbx
0x43b220:	mov	rbx, rdi
0x43b223:	push	rax
0x43b224:	call	0x436d70
0x43b229:	mov	rdx, qword ptr [rbx]
0x43b22c:	mov	rsi, qword ptr [rbp]
0x43b230:	mov	eax, dword ptr [rdx + 4]
0x43b233:	lea	ecx, [rax + 1]
0x43b236:	mov	dword ptr [rdx + 4], ecx
0x43b239:	mov	qword ptr [rdx + rax*8 + 8], rsi
0x43b23e:	pop	rdx
0x43b23f:	pop	rbx
0x43b240:	pop	rbp
0x43b241:	ret	
0x43b242:	nop	word ptr cs:[rax + rax]
0x43b24d:	nop	dword ptr [rax]
0x43b250:	endbr64	
0x43b254:	push	r15
0x43b256:	movsxd	rax, edi
0x43b259:	push	r14
0x43b25b:	imul	rdx, rax, 0x18
0x43b25f:	push	r13
0x43b261:	push	r12
0x43b263:	push	rbp
0x43b264:	push	rbx
0x43b265:	mov	rbx, rax
0x43b268:	sub	rsp, 0x18
0x43b26c:	mov	rbp, qword ptr [rip + 0xa97b5]
0x43b273:	lea	r12, [rbp + rdx]
0x43b278:	mov	ecx, dword ptr [r12 + 0x10]
0x43b27d:	test	ecx, ecx
0x43b27f:	jne	0x43b349
0x43b285:	mov	eax, 1
0x43b28a:	cmp	esi, 1
0x43b28d:	ja	0x43b29e
0x43b28f:	add	rsp, 0x18
0x43b293:	pop	rbx
0x43b294:	pop	rbp
0x43b295:	pop	r12
0x43b297:	pop	r13
0x43b299:	pop	r14
0x43b29b:	pop	r15
0x43b29d:	ret	
0x43b29e:	mov	rsi, qword ptr [r12]
0x43b2a2:	movzx	r13d, byte ptr [rsi]
0x43b2a6:	cmp	r13b, 0x67
0x43b2aa:	jg	0x43b2d2
0x43b2ac:	cmp	r13b, 0x65
0x43b2b0:	jg	0x43b2d8
0x43b2b2:	cmp	r13b, 0x4f
0x43b2b6:	je	0x40a715
0x43b2bc:	cmp	r13b, 0x57
0x43b2c0:	je	0x43b2d8
0x43b2c2:	mov	dword ptr [r12 + 0x10], 1
0x43b2cb:	mov	eax, 1
0x43b2d0:	jmp	0x43b28f
0x43b2d2:	cmp	r13b, 0x6d
0x43b2d6:	jne	0x43b2c2
0x43b2d8:	lea	r15, [rsi + 1]
0x43b2dc:	mov	qword ptr [rsp + 8], rsi
0x43b2e1:	mov	edx, 3
0x43b2e6:	add	ebx, 1
0x43b2e9:	mov	esi, 0x45be4d
0x43b2ee:	mov	rdi, r15
0x43b2f1:	movsxd	rbx, ebx
0x43b2f4:	call	0x4038d0
0x43b2f9:	mov	r14d, dword ptr [rip + 0xa9730]
0x43b300:	mov	r10, qword ptr [rsp + 8]
0x43b305:	test	eax, eax
0x43b307:	jne	0x43b30f
0x43b309:	jmp	0x43b35a
0x43b30b:	add	rbx, 1
0x43b30f:	cmp	r14d, ebx
0x43b312:	jle	0x43b2c2
0x43b314:	imul	r11, rbx, 0x18
0x43b318:	mov	rdi, qword ptr [rbp + r11]
0x43b31d:	cmp	r13b, byte ptr [rdi]
0x43b320:	jne	0x43b30b
0x43b322:	cmp	byte ptr [rdi + 1], 0x6e
0x43b326:	jne	0x43b30b
0x43b328:	cmp	byte ptr [rdi + 2], 0x6f
0x43b32c:	jne	0x43b30b
0x43b32e:	cmp	byte ptr [rdi + 3], 0x2d
0x43b332:	jne	0x43b30b
0x43b334:	add	rdi, 4
0x43b338:	mov	rsi, r15
0x43b33b:	call	0x403be0
0x43b340:	test	eax, eax
0x43b342:	jne	0x43b30b
0x43b344:	jmp	0x40a74d
0x43b349:	and	ecx, 0xb
0x43b34c:	sub	ecx, 1
0x43b34f:	sete	cl
0x43b352:	movzx	eax, cl
0x43b355:	jmp	0x43b28f
0x43b35a:	lea	r15, [r10 + 4]
0x43b35e:	jmp	0x43b364
0x43b360:	add	rbx, 1
0x43b364:	cmp	r14d, ebx
0x43b367:	jle	0x43b2c2
0x43b36d:	imul	rdx, rbx, 0x18
0x43b371:	mov	rdi, qword ptr [rbp + rdx]
0x43b376:	cmp	r13b, byte ptr [rdi]
0x43b379:	jne	0x43b360
0x43b37b:	add	rdi, 1
0x43b37f:	mov	rsi, r15
0x43b382:	call	0x403be0
0x43b387:	test	eax, eax
0x43b389:	jne	0x43b360
0x43b38b:	jmp	0x40a74d
0x43b390:	push	r15
0x43b392:	push	r14
0x43b394:	push	r13
0x43b396:	push	r12
0x43b398:	push	rbp
0x43b399:	push	rbx
0x43b39a:	mov	rbx, rdi
0x43b39d:	sub	rsp, 0x48
0x43b3a1:	add	dword ptr [rip + 0xaae80], 1
0x43b3a8:	mov	qword ptr [rsp + 0x30], rsi
0x43b3ad:	mov	qword ptr [rsp + 0x38], rdx
0x43b3b2:	jmp	0x43b3d9
0x43b3b4:	movzx	edx, al
0x43b3b7:	test	byte ptr [rdx + rdx + 0x4bc840], 0x8c
0x43b3bf:	jne	0x43b3d5
0x43b3c1:	cmp	al, 0x5f
0x43b3c3:	setne	cl
0x43b3c6:	cmp	al, 0x2d
0x43b3c8:	setne	sil
0x43b3cc:	test	cl, sil
0x43b3cf:	jne	0x40a7d1
0x43b3d5:	add	rbx, 1
0x43b3d9:	movzx	eax, byte ptr [rbx]
0x43b3dc:	test	al, al
0x43b3de:	je	0x43b5ef
0x43b3e4:	cmp	al, 0x28
0x43b3e6:	jne	0x43b3b4
0x43b3e8:	mov	esi, ebx
0x43b3ea:	sub	esi, edi
0x43b3ec:	call	0x438640
0x43b3f1:	lea	rdi, [rbx + 1]
0x43b3f5:	xor	r8d, r8d
0x43b3f8:	mov	rbp, rax
0x43b3fb:	mov	r12, rdi
0x43b3fe:	jmp	0x43b40e
0x43b400:	cmp	r9b, 0x28
0x43b404:	je	0x43b5e6
0x43b40a:	add	r12, 1
0x43b40e:	movzx	r9d, byte ptr [r12]
0x43b413:	test	r9b, r9b
0x43b416:	je	0x43b5f9
0x43b41c:	cmp	r9b, 0x29
0x43b420:	jne	0x43b400
0x43b422:	test	r8d, r8d
0x43b425:	jne	0x43b5dd
0x43b42b:	mov	esi, r12d
0x43b42e:	mov	r14d, 0x4c3f60
0x43b434:	add	r12, 1
0x43b438:	sub	esi, edi
0x43b43a:	call	0x438640
0x43b43f:	mov	edi, 0x4be4ef
0x43b444:	mov	r13, rax
0x43b447:	jmp	0x43b45a
0x43b449:	mov	rdi, qword ptr [r14 + 0x10]
0x43b44d:	add	r14, 0x10
0x43b451:	test	rdi, rdi
0x43b454:	je	0x43b5f4
0x43b45a:	mov	rsi, rbp
0x43b45d:	call	0x403be0
0x43b462:	test	eax, eax
0x43b464:	jne	0x43b449
0x43b466:	mov	r15d, dword ptr [rip + 0xaae9f]
0x43b46d:	mov	ebx, dword ptr [rip + 0xaae91]
0x43b473:	mov	r8, qword ptr [rip + 0xa947e]
0x43b47a:	mov	rdi, qword ptr [rip + 0xa7e47]
0x43b481:	mov	dword ptr [rsp + 0x18], r15d
0x43b486:	mov	r15, qword ptr [rip + 0xa9463]
0x43b48d:	mov	eax, dword ptr [rip + 0xaae75]
0x43b493:	mov	edx, dword ptr [rip + 0xaae67]
0x43b499:	mov	dword ptr [rsp + 0x20], ebx
0x43b49d:	mov	rbx, r8
0x43b4a0:	mov	r10d, dword ptr [rip + 0xaae6d]
0x43b4a7:	mov	r11d, dword ptr [rip + 0xaae62]
0x43b4ae:	sub	rbx, r15
0x43b4b1:	mov	qword ptr [rsp + 8], rdi
0x43b4b6:	mov	rcx, qword ptr [rip + 0xaae3b]
0x43b4bd:	mov	dword ptr [rsp + 0x1c], eax
0x43b4c1:	mov	dword ptr [rsp + 0x10], r10d
0x43b4c6:	mov	dword ptr [rsp + 0x14], r11d
0x43b4cb:	mov	dword ptr [rsp + 0x24], edx
0x43b4cf:	mov	qword ptr [rsp + 0x28], rcx
0x43b4d4:	test	ebx, ebx
0x43b4d6:	jg	0x40a76e
0x43b4dc:	xor	r15d, r15d
0x43b4df:	call	0x436d20
0x43b4e4:	mov	rsi, qword ptr [rsp + 0x38]
0x43b4e9:	mov	rdi, r13
0x43b4ec:	call	0x43a440
0x43b4f1:	test	eax, eax
0x43b4f3:	js	0x40a813
0x43b4f9:	mov	rsi, qword ptr [rip + 0xa7dc8]
0x43b500:	mov	r14, qword ptr [r14 + 8]
0x43b504:	test	rsi, rsi
0x43b507:	je	0x40a824
0x43b50d:	mov	edi, dword ptr [rsi + 4]
0x43b510:	add	rsi, 8
0x43b514:	call	r14
0x43b517:	mov	edi, 0x4e32c8
0x43b51c:	mov	r14, rax
0x43b51f:	call	0x43b630
0x43b524:	mov	r11, qword ptr [rsp + 8]
0x43b529:	mov	eax, dword ptr [rsp + 0x10]
0x43b52d:	mov	edx, dword ptr [rsp + 0x14]
0x43b531:	mov	ecx, dword ptr [rsp + 0x18]
0x43b535:	mov	r8d, dword ptr [rsp + 0x1c]
0x43b53a:	mov	esi, dword ptr [rsp + 0x20]
0x43b53e:	mov	qword ptr [rip + 0xa7d83], r11
0x43b545:	mov	r9d, dword ptr [rsp + 0x24]
0x43b54a:	mov	rdi, qword ptr [rsp + 0x28]
0x43b54f:	mov	dword ptr [rip + 0xaadbf], eax
0x43b555:	mov	dword ptr [rip + 0xaadb5], edx
0x43b55b:	mov	dword ptr [rip + 0xaadab], ecx
0x43b561:	mov	dword ptr [rip + 0xaada0], r8d
0x43b568:	mov	dword ptr [rip + 0xaad96], esi
0x43b56e:	mov	dword ptr [rip + 0xaad8b], r9d
0x43b575:	mov	qword ptr [rip + 0xaad7c], rdi
0x43b57c:	test	ebx, ebx
0x43b57e:	jg	0x40a7df
0x43b584:	test	r14, r14
0x43b587:	jne	0x43b5c3
0x43b589:	mov	r11, qword ptr [rsp + 0x30]
0x43b58e:	test	r11, r11
0x43b591:	je	0x43b59a
0x43b593:	test	r14, r14
0x43b596:	setne	byte ptr [r11]
0x43b59a:	mov	rdi, rbp
0x43b59d:	call	0x403830
0x43b5a2:	mov	rdi, r13
0x43b5a5:	call	0x403830
0x43b5aa:	sub	dword ptr [rip + 0xaac77], 1
0x43b5b1:	add	rsp, 0x48
0x43b5b5:	mov	rax, r12
0x43b5b8:	pop	rbx
0x43b5b9:	pop	rbp
0x43b5ba:	pop	r12
0x43b5bc:	pop	r13
0x43b5be:	pop	r14
0x43b5c0:	pop	r15
0x43b5c2:	ret	
0x43b5c3:	xor	edx, edx
0x43b5c5:	xor	esi, esi
0x43b5c7:	mov	rdi, r14
0x43b5ca:	mov	r15d, 0
0x43b5d0:	call	0x43a4f0
0x43b5d5:	test	eax, eax
0x43b5d7:	cmovs	r12, r15
0x43b5db:	jmp	0x43b589
0x43b5dd:	sub	r8d, 1
0x43b5e1:	jmp	0x43b40a
0x43b5e6:	add	r8d, 1
0x43b5ea:	jmp	0x43b40a
0x43b5ef:	jmp	0x40a7ba
0x43b5f4:	jmp	0x40a83a
0x43b5f9:	jmp	0x40a84b
0x43b5fe:	nop	
0x43b600:	endbr64	
0x43b604:	push	r14
0x43b606:	push	r13
0x43b608:	push	r12
0x43b60a:	xor	r12d, r12d
0x43b60d:	push	rbp
0x43b60e:	push	rbx
0x43b60f:	sub	rsp, 0x10
0x43b613:	cmp	edi, 1
0x43b616:	jne	0x40a859
0x43b61c:	add	rsp, 0x10
0x43b620:	mov	rax, r12
0x43b623:	pop	rbx
0x43b624:	pop	rbp
0x43b625:	pop	r12
0x43b627:	pop	r13
0x43b629:	pop	r14
0x43b62b:	ret	
0x43b62c:	nop	dword ptr [rax]
0x43b630:	endbr64	
0x43b634:	push	rbx
0x43b635:	mov	rbx, rdi
0x43b638:	mov	rdi, qword ptr [rdi]
0x43b63b:	test	rdi, rdi
0x43b63e:	je	0x43b656
0x43b640:	cmp	byte ptr [rdi + 3], 0
0x43b644:	js	0x40a8fe
0x43b64a:	call	0x403830
0x43b64f:	mov	qword ptr [rbx], 0
0x43b656:	pop	rbx
0x43b657:	ret	
0x43b658:	nop	dword ptr [rax + rax]
0x43b660:	endbr64	
0x43b664:	push	r12
0x43b666:	push	rbp
0x43b667:	mov	rbp, rdi
0x43b66a:	push	rbx
0x43b66b:	cmp	byte ptr [rdi], 0x2f
0x43b66e:	jne	0x40a90a
0x43b674:	mov	rdi, qword ptr [rip + 0xa936d]
0x43b67b:	test	rdi, rdi
0x43b67e:	jne	0x40a91b
0x43b684:	mov	rdx, rsi
0x43b687:	pop	rbx
0x43b688:	mov	rsi, rbp
0x43b68b:	mov	r9d, 1
0x43b691:	pop	rbp
0x43b692:	xor	r8d, r8d
0x43b695:	mov	ecx, 1
0x43b69a:	mov	edi, 0x4e24b0
0x43b69f:	pop	r12
0x43b6a1:	jmp	0x438670
0x43b6a6:	nop	word ptr cs:[rax + rax]
0x43b6b0:	endbr64	
0x43b6b4:	push	rbx
0x43b6b5:	mov	rax, rdi
0x43b6b8:	movzx	ebx, sil
0x43b6bc:	movzx	ecx, byte ptr [rax]
0x43b6bf:	lea	rdx, [rax + 1]
0x43b6c3:	test	cl, cl
0x43b6c5:	je	0x43b788
0x43b6cb:	cmp	cl, 0x25
0x43b6ce:	je	0x43b797
0x43b6d4:	movzx	edi, byte ptr [rax + 1]
0x43b6d8:	lea	rsi, [rax + 2]
0x43b6dc:	test	dil, dil
0x43b6df:	je	0x43b788
0x43b6e5:	cmp	dil, 0x25
0x43b6e9:	je	0x43b78a
0x43b6ef:	movzx	r8d, byte ptr [rax + 2]
0x43b6f4:	lea	rdx, [rax + 3]
0x43b6f8:	test	r8b, r8b
0x43b6fb:	je	0x43b788
0x43b701:	cmp	r8b, 0x25
0x43b705:	je	0x43b78f
0x43b70b:	movzx	r9d, byte ptr [rax + 3]
0x43b710:	lea	rsi, [rax + 4]
0x43b714:	test	r9b, r9b
0x43b717:	je	0x43b788
0x43b719:	cmp	r9b, 0x25
0x43b71d:	je	0x43b78a
0x43b71f:	movzx	r10d, byte ptr [rax + 4]
0x43b724:	lea	rdx, [rax + 5]
0x43b728:	test	r10b, r10b
0x43b72b:	je	0x43b788
0x43b72d:	cmp	r10b, 0x25
0x43b731:	je	0x43b78f
0x43b733:	lea	r11, [rax + 6]
0x43b737:	movzx	eax, byte ptr [rax + 5]
0x43b73b:	test	al, al
0x43b73d:	je	0x43b788
0x43b73f:	cmp	al, 0x25
0x43b741:	mov	rax, r11
0x43b744:	je	0x43b760
0x43b746:	mov	rdx, rax
0x43b749:	movzx	ecx, byte ptr [rax]
0x43b74c:	add	rax, 1
0x43b750:	test	cl, cl
0x43b752:	je	0x43b788
0x43b754:	cmp	cl, 0x25
0x43b757:	jne	0x43b746
0x43b759:	nop	dword ptr [rax]
0x43b760:	movzx	edi, byte ptr [rdx + 1]
0x43b764:	cmp	dil, 0x7b
0x43b768:	je	0x43b770
0x43b76a:	cmp	dil, 0x3c
0x43b76e:	jne	0x43b79b
0x43b770:	xor	edx, edx
0x43b772:	cmp	byte ptr [rax], 0x7b
0x43b775:	lea	rdi, [rax + 1]
0x43b779:	mov	esi, ebx
0x43b77b:	sete	dl
0x43b77e:	call	0x42fa70
0x43b783:	jmp	0x43b6bc
0x43b788:	pop	rbx
0x43b789:	ret	
0x43b78a:	mov	rax, rsi
0x43b78d:	jmp	0x43b760
0x43b78f:	mov	rax, rdx
0x43b792:	mov	rdx, rsi
0x43b795:	jmp	0x43b760
0x43b797:	xchg	rdx, rax
0x43b799:	jmp	0x43b760
0x43b79b:	mov	r8, rax
0x43b79e:	cmp	dil, 0x57
0x43b7a2:	je	0x40a98a
0x43b7a8:	cmp	byte ptr [rax], 0x40
0x43b7ab:	jne	0x43b6bc
0x43b7b1:	add	rax, 1
0x43b7b5:	cmp	byte ptr [r8 + 1], 0x7b
0x43b7ba:	je	0x43b770
0x43b7bc:	jmp	0x43b6bc
0x43b7c1:	nop	
0x43b7c2:	nop	word ptr cs:[rax + rax]
0x43b7cd:	nop	dword ptr [rax]
0x43b7d0:	endbr64	
0x43b7d4:	push	rbp
0x43b7d5:	mov	rbp, rsp
0x43b7d8:	push	r15
0x43b7da:	push	r14
0x43b7dc:	push	r13
0x43b7de:	push	r12
0x43b7e0:	push	rbx
0x43b7e1:	sub	rsp, 0x38
0x43b7e5:	cmp	qword ptr [rip + 0xa7a93], 0
0x43b7ed:	mov	qword ptr [rbp - 0x48], rdi
0x43b7f1:	mov	dword ptr [rbp - 0x3c], esi
0x43b7f4:	je	0x43b84e
0x43b7f6:	mov	r15d, dword ptr [rip + 0xa7a8b]
0x43b7fd:	mov	r14, qword ptr [rip + 0xa7a7c]
0x43b804:	xor	r13d, r13d
0x43b807:	movsxd	r12, dword ptr [rbp - 0x3c]
0x43b80b:	cmp	r13d, r15d
0x43b80e:	jl	0x43b821
0x43b810:	xor	eax, eax
0x43b812:	lea	rsp, [rbp - 0x28]
0x43b816:	pop	rbx
0x43b817:	pop	r12
0x43b819:	pop	r13
0x43b81b:	pop	r14
0x43b81d:	pop	r15
0x43b81f:	pop	rbp
0x43b820:	ret	
0x43b821:	mov	edx, dword ptr [rbp - 0x3c]
0x43b824:	cmp	dword ptr [r14 + 0x10], edx
0x43b828:	jne	0x43b83d
0x43b82a:	mov	rsi, qword ptr [r14]
0x43b82d:	mov	rdi, qword ptr [rbp - 0x48]
0x43b831:	mov	rdx, r12
0x43b834:	call	0x4038d0
0x43b839:	test	eax, eax
0x43b83b:	je	0x43b847
0x43b83d:	add	r13d, 1
0x43b841:	add	r14, 0x18
0x43b845:	jmp	0x43b80b
0x43b847:	mov	eax, 1
0x43b84c:	jmp	0x43b812
0x43b84e:	mov	r8, qword ptr [rip + 0xa90f3]
0x43b855:	xor	esi, esi
0x43b857:	mov	r13, r8
0x43b85a:	jmp	0x43b860
0x43b85c:	add	r13, 1
0x43b860:	movzx	edx, byte ptr [r13]
0x43b865:	test	dl, dl
0x43b867:	je	0x43b873
0x43b869:	cmp	dl, 0x3b
0x43b86c:	jne	0x43b85c
0x43b86e:	add	esi, 1
0x43b871:	jmp	0x43b85c
0x43b873:	movsxd	r12, esi
0x43b876:	mov	rcx, rsp
0x43b879:	imul	rax, r12, 0x18
0x43b87d:	add	rax, 0x17
0x43b881:	mov	rbx, rax
0x43b884:	and	rax, 0xfffffffffffff000
0x43b88a:	and	rbx, 0xfffffffffffffff0
0x43b88e:	sub	rcx, rax
0x43b891:	cmp	rsp, rcx
0x43b894:	je	0x43b8a8
0x43b896:	sub	rsp, 0x1000
0x43b89d:	or	qword ptr [rsp + 0xff8], 0
0x43b8a6:	jmp	0x43b891
0x43b8a8:	and	ebx, 0xfff
0x43b8ae:	sub	rsp, rbx
0x43b8b1:	test	rbx, rbx
0x43b8b4:	je	0x43b8bc
0x43b8b6:	or	qword ptr [rsp + rbx - 8], 0
0x43b8bc:	lea	r13, [rsp + 0xf]
0x43b8c1:	mov	r15, r8
0x43b8c4:	xor	ecx, ecx
0x43b8c6:	and	r13, 0xfffffffffffffff0
0x43b8ca:	movsxd	rdi, ecx
0x43b8cd:	imul	rsi, rdi, 0x18
0x43b8d1:	add	rsi, r13
0x43b8d4:	cmp	byte ptr [r15], 0
0x43b8d8:	je	0x43b948
0x43b8da:	mov	qword ptr [rsi], r15
0x43b8dd:	mov	r11, r15
0x43b8e0:	movzx	r10d, byte ptr [r11]
0x43b8e4:	cmp	r10b, 0x20
0x43b8e8:	je	0x43b8f9
0x43b8ea:	test	r10b, r10b
0x43b8ed:	je	0x40aa0d
0x43b8f3:	add	r11, 1
0x43b8f7:	jmp	0x43b8e0
0x43b8f9:	mov	rbx, r11
0x43b8fc:	add	r11, 1
0x43b900:	sub	rbx, r15
0x43b903:	mov	qword ptr [rsi + 8], r11
0x43b907:	mov	r15, r11
0x43b90a:	mov	dword ptr [rsi + 0x10], ebx
0x43b90d:	movzx	r14d, byte ptr [r15]
0x43b911:	cmp	r14b, 0x3b
0x43b915:	je	0x43b92c
0x43b917:	test	r14b, r14b
0x43b91a:	je	0x43b92c
0x43b91c:	cmp	r14b, 0x20
0x43b920:	je	0x40aa0d
0x43b926:	add	r15, 1
0x43b92a:	jmp	0x43b90d
0x43b92c:	mov	rax, r15
0x43b92f:	add	ecx, 1
0x43b932:	add	rsi, 0x18
0x43b936:	sub	rax, r11
0x43b939:	mov	dword ptr [rsi - 4], eax
0x43b93c:	cmp	r14b, 0x3b
0x43b940:	jne	0x43b8ca
0x43b942:	add	r15, 1
0x43b946:	jmp	0x43b8d4
0x43b948:	mov	r8d, dword ptr [rip + 0xa90e1]
0x43b94f:	test	r8d, r8d
0x43b952:	je	0x40a9c4
0x43b958:	add	r8d, dword ptr [rip + 0xa7939]
0x43b95f:	xor	r15d, r15d
0x43b962:	movsxd	r9, r8d
0x43b965:	imul	rdi, r9, 0x18
0x43b969:	call	0x42db10
0x43b96e:	mov	r10d, dword ptr [rip + 0xa90bb]
0x43b975:	imul	r11, r12, 0x18
0x43b979:	mov	rbx, qword ptr [rip + 0xa90a8]
0x43b980:	mov	qword ptr [rbp - 0x60], rax
0x43b984:	mov	qword ptr [rip + 0xa78f5], rax
0x43b98b:	mov	dword ptr [rbp - 0x38], r10d
0x43b98f:	lea	r12, [r13 + r11]
0x43b994:	cmp	r15d, dword ptr [rbp - 0x38]
0x43b998:	jge	0x43b9fa
0x43b99a:	test	byte ptr [rbx + 0x10], 4
0x43b99e:	jne	0x43b9c5
0x43b9a0:	mov	r14, qword ptr [rbx]
0x43b9a3:	mov	rdi, r14
0x43b9a6:	call	0x4039e0
0x43b9ab:	mov	r11, r13
0x43b9ae:	movsxd	rdx, eax
0x43b9b1:	mov	rcx, rdx
0x43b9b4:	cmp	r11, r12
0x43b9b7:	je	0x43b9c5
0x43b9b9:	cmp	ecx, dword ptr [r11 + 0x10]
0x43b9bd:	je	0x43b9cf
0x43b9bf:	add	r11, 0x18
0x43b9c3:	jmp	0x43b9b4
0x43b9c5:	add	r15d, 1
0x43b9c9:	add	rbx, 0x18
0x43b9cd:	jmp	0x43b994
0x43b9cf:	mov	rsi, qword ptr [r11]
0x43b9d2:	mov	rdi, r14
0x43b9d5:	mov	qword ptr [rbp - 0x50], r11
0x43b9d9:	mov	dword ptr [rbp - 0x40], ecx
0x43b9dc:	mov	qword ptr [rbp - 0x58], rdx
0x43b9e0:	call	0x4038d0
0x43b9e5:	mov	r11, qword ptr [rbp - 0x50]
0x43b9e9:	test	eax, eax
0x43b9eb:	je	0x40a9cf
0x43b9f1:	mov	rdx, qword ptr [rbp - 0x58]
0x43b9f5:	mov	ecx, dword ptr [rbp - 0x40]
0x43b9f8:	jmp	0x43b9bf
0x43b9fa:	xor	r13d, r13d
0x43b9fd:	cmp	dword ptr [rip + 0xa7894], r13d
0x43ba04:	jle	0x43b7f6
0x43ba0a:	mov	rax, r13
0x43ba0d:	mov	r12, qword ptr [rip + 0xa6b94]
0x43ba14:	shl	rax, 4
0x43ba18:	add	rax, qword ptr [rip + 0xa7871]
0x43ba1f:	mov	qword ptr [rbp - 0x38], rax
0x43ba23:	cmp	byte ptr [r12], 0
0x43ba28:	je	0x43bb0d
0x43ba2e:	cmp	byte ptr [r12], 0x20
0x43ba33:	je	0x40aa1e
0x43ba39:	mov	rbx, qword ptr [rbp - 0x38]
0x43ba3d:	movsxd	r15, dword ptr [rbx + 8]
0x43ba41:	mov	r14, qword ptr [rbx]
0x43ba44:	mov	rbx, r12
0x43ba47:	mov	rdx, r15
0x43ba4a:	mov	rsi, r14
0x43ba4d:	mov	rdi, rbx
0x43ba50:	call	0x4038d0
0x43ba55:	test	eax, eax
0x43ba57:	jne	0x43ba97
0x43ba59:	movsx	esi, byte ptr [rbx + r15]
0x43ba5e:	mov	edi, 0x4be561
0x43ba63:	call	0x403a40
0x43ba68:	test	rax, rax
0x43ba6b:	je	0x43ba97
0x43ba6d:	movzx	eax, byte ptr [rbx]
0x43ba70:	test	al, 0xdf
0x43ba72:	je	0x43bb28
0x43ba78:	test	byte ptr [r12], 0xdf
0x43ba7d:	je	0x43bb0d
0x43ba83:	mov	rbx, r12
0x43ba86:	movzx	eax, byte ptr [rbx]
0x43ba89:	test	al, 0xdf
0x43ba8b:	je	0x43bab2
0x43ba8d:	cmp	al, 0x2f
0x43ba8f:	je	0x43bab2
0x43ba91:	add	rbx, 1
0x43ba95:	jmp	0x43ba86
0x43ba97:	movzx	ecx, byte ptr [rbx]
0x43ba9a:	cmp	cl, 0x20
0x43ba9d:	je	0x43bb16
0x43ba9f:	cmp	cl, 0x2f
0x43baa2:	je	0x43bb1f
0x43baa4:	test	cl, cl
0x43baa6:	je	0x43bb2d
0x43baac:	add	rbx, 1
0x43bab0:	jmp	0x43ba97
0x43bab2:	mov	esi, ebx
0x43bab4:	mov	rdi, r12
0x43bab7:	sub	esi, r12d
0x43baba:	call	0x43b7d0
0x43babf:	test	eax, eax
0x43bac1:	jne	0x43bb0d
0x43bac3:	cmp	byte ptr [rbx], 0x2f
0x43bac6:	jne	0x43bace
0x43bac8:	lea	r12, [rbx + 1]
0x43bacc:	jmp	0x43ba78
0x43bace:	movsxd	rdi, dword ptr [rip + 0xa77b3]
0x43bad5:	mov	rsi, qword ptr [rbp - 0x38]
0x43bad9:	mov	r8, rdi
0x43badc:	mov	r10d, dword ptr [rsi + 8]
0x43bae0:	imul	r9, rdi, 0x18
0x43bae4:	add	r9, qword ptr [rip + 0xa7795]
0x43baeb:	add	r8d, 1
0x43baef:	mov	qword ptr [r9], r14
0x43baf2:	mov	qword ptr [r9 + 8], 0
0x43bafa:	mov	dword ptr [r9 + 0x10], r10d
0x43bafe:	mov	dword ptr [r9 + 0x14], 0
0x43bb06:	mov	dword ptr [rip + 0xa777b], r8d
0x43bb0d:	add	r13, 1
0x43bb11:	jmp	0x43b9fd
0x43bb16:	cmp	cl, 0x2f
0x43bb19:	jne	0x43ba6d
0x43bb1f:	add	rbx, 1
0x43bb23:	jmp	0x43ba47
0x43bb28:	jmp	0x40aa27
0x43bb2d:	jmp	0x40aa2b
0x43bb32:	nop	word ptr cs:[rax + rax]
0x43bb3d:	nop	dword ptr [rax]
0x43bb40:	endbr64	
0x43bb44:	push	r15
0x43bb46:	movsxd	r15, esi
0x43bb49:	push	r14
0x43bb4b:	push	r13
0x43bb4d:	mov	r13, rdi
0x43bb50:	push	r12
0x43bb52:	push	rbp
0x43bb53:	xor	ebp, ebp
0x43bb55:	push	rbx
0x43bb56:	mov	rbx, r15
0x43bb59:	push	rcx
0x43bb5a:	mov	r14d, dword ptr [rip + 0xa7737]
0x43bb61:	mov	r12, qword ptr [rip + 0xa7728]
0x43bb68:	cmp	r14d, ebp
0x43bb6b:	jle	0x43bb90
0x43bb6d:	cmp	dword ptr [r12 + 8], ebx
0x43bb72:	jne	0x43bb87
0x43bb74:	mov	rsi, qword ptr [r12]
0x43bb78:	mov	rdx, r15
0x43bb7b:	mov	rdi, r13
0x43bb7e:	call	0x4038d0
0x43bb83:	test	eax, eax
0x43bb85:	je	0x43bb9e
0x43bb87:	add	ebp, 1
0x43bb8a:	add	r12, 0x10
0x43bb8e:	jmp	0x43bb68
0x43bb90:	xor	eax, eax
0x43bb92:	pop	rdx
0x43bb93:	pop	rbx
0x43bb94:	pop	rbp
0x43bb95:	pop	r12
0x43bb97:	pop	r13
0x43bb99:	pop	r14
0x43bb9b:	pop	r15
0x43bb9d:	ret	
0x43bb9e:	mov	eax, 1
0x43bba3:	jmp	0x43bb92
0x43bba5:	nop	word ptr cs:[rax + rax]
0x43bbb0:	endbr64	
0x43bbb4:	push	r15
0x43bbb6:	push	r14
0x43bbb8:	push	r13
0x43bbba:	mov	r13, rsi
0x43bbbd:	push	r12
0x43bbbf:	mov	r12, rdi
0x43bbc2:	push	rbp
0x43bbc3:	xor	ebp, ebp
0x43bbc5:	push	rbx
0x43bbc6:	xor	ebx, ebx
0x43bbc8:	push	rcx
0x43bbc9:	jmp	0x43bbd9
0x43bbcb:	xor	esi, esi
0x43bbcd:	call	r13
0x43bbd0:	cmp	al, 1
0x43bbd2:	sbb	ebp, -1
0x43bbd5:	add	rbx, 1
0x43bbd9:	movsx	edi, byte ptr [r12 + rbx]
0x43bbde:	mov	r14d, ebx
0x43bbe1:	test	dil, dil
0x43bbe4:	jne	0x43bbcb
0x43bbe6:	test	ebp, ebp
0x43bbe8:	jne	0x40aa3c
0x43bbee:	pop	rdx
0x43bbef:	mov	rax, r12
0x43bbf2:	pop	rbx
0x43bbf3:	pop	rbp
0x43bbf4:	pop	r12
0x43bbf6:	pop	r13
0x43bbf8:	pop	r14
0x43bbfa:	pop	r15
0x43bbfc:	ret	
0x43bbfd:	nop	dword ptr [rax]
0x43bc00:	endbr64	
0x43bc04:	push	r13
0x43bc06:	xor	eax, eax
0x43bc08:	push	r12
0x43bc0a:	mov	r12, rsi
0x43bc0d:	push	rbp
0x43bc0e:	mov	ebp, edx
0x43bc10:	push	rbx
0x43bc11:	mov	rbx, rdi
0x43bc14:	push	rcx
0x43bc15:	jmp	0x43bc21
0x43bc17:	add	rax, 1
0x43bc1b:	cmp	rax, 0x2e
0x43bc1f:	je	0x43bc55
0x43bc21:	imul	rcx, rax, 0x30
0x43bc25:	cmp	qword ptr [rcx + 0x4e2610], rbx
0x43bc2c:	jne	0x43bc17
0x43bc2e:	cmp	byte ptr [rcx + 0x4e2625], 0
0x43bc35:	lea	r13, [rcx + 0x4e2600]
0x43bc3c:	je	0x43bc46
0x43bc3e:	mov	rdi, qword ptr [rbx]
0x43bc41:	call	0x403830
0x43bc46:	mov	qword ptr [rbx], r12
0x43bc49:	mov	byte ptr [r13 + 0x25], bpl
0x43bc4d:	pop	rax
0x43bc4e:	pop	rbx
0x43bc4f:	pop	rbp
0x43bc50:	pop	r12
0x43bc52:	pop	r13
0x43bc54:	ret	
0x43bc55:	jmp	0x40aa9e
0x43bc5a:	nop	word ptr [rax + rax]
0x43bc60:	endbr64	
0x43bc64:	push	r15
0x43bc66:	mov	r15, rdx
0x43bc69:	push	r14
0x43bc6b:	push	r13
0x43bc6d:	mov	r13, rdi
0x43bc70:	push	r12
0x43bc72:	push	rbp
0x43bc73:	push	rbx
0x43bc74:	mov	rbx, rsi
0x43bc77:	push	rcx
0x43bc78:	movsxd	rax, dword ptr [rip + 0xa7631]
0x43bc7f:	mov	rbp, qword ptr [rip + 0xa7632]
0x43bc86:	shl	rax, 5
0x43bc8a:	lea	r14, [rbp + rax - 0x20]
0x43bc8f:	test	r15, r15
0x43bc92:	je	0x43bcf3
0x43bc94:	cmp	byte ptr [r15], 0x2a
0x43bc98:	je	0x43bce1
0x43bc9a:	mov	r12, r14
0x43bc9d:	jmp	0x43bca3
0x43bc9f:	sub	r12, 0x20
0x43bca3:	cmp	rbp, r12
0x43bca6:	ja	0x40aade
0x43bcac:	mov	r14, qword ptr [r12]
0x43bcb0:	cmp	byte ptr [r14], 0x40
0x43bcb4:	jne	0x43bc9f
0x43bcb6:	lea	rdi, [r14 + 1]
0x43bcba:	mov	rsi, r15
0x43bcbd:	call	0x403be0
0x43bcc2:	test	eax, eax
0x43bcc4:	jne	0x43bc9f
0x43bcc6:	test	r13, r13
0x43bcc9:	je	0x43bce4
0x43bccb:	mov	esi, 0x4cd89a
0x43bcd0:	mov	rdi, r13
0x43bcd3:	call	0x403be0
0x43bcd8:	test	eax, eax
0x43bcda:	jne	0x43bce4
0x43bcdc:	jmp	0x40aab2
0x43bce1:	xor	r12d, r12d
0x43bce4:	pop	rdx
0x43bce5:	mov	rax, r12
0x43bce8:	pop	rbx
0x43bce9:	pop	rbp
0x43bcea:	pop	r12
0x43bcec:	pop	r13
0x43bcee:	pop	r14
0x43bcf0:	pop	r15
0x43bcf2:	ret	
0x43bcf3:	mov	r12, r14
0x43bcf6:	jmp	0x43bd1e
0x43bcf8:	mov	rdi, r15
0x43bcfb:	call	0x4039e0
0x43bd00:	cmp	rax, rbx
0x43bd03:	jae	0x43bd1a
0x43bd05:	mov	rsi, rbx
0x43bd08:	mov	rdi, r15
0x43bd0b:	sub	rsi, rax
0x43bd0e:	add	rsi, r13
0x43bd11:	call	0x403be0
0x43bd16:	test	eax, eax
0x43bd18:	je	0x43bd49
0x43bd1a:	sub	r12, 0x20
0x43bd1e:	cmp	rbp, r12
0x43bd21:	ja	0x43bce1
0x43bd23:	mov	r15, qword ptr [r12]
0x43bd27:	mov	esi, 0x4cd89a
0x43bd2c:	mov	rdi, r15
0x43bd2f:	call	0x403be0
0x43bd34:	test	eax, eax
0x43bd36:	jne	0x43bcf8
0x43bd38:	mov	esi, 0x4cd89a
0x43bd3d:	mov	rdi, r13
0x43bd40:	call	0x403be0
0x43bd45:	test	eax, eax
0x43bd47:	jne	0x43bcf8
0x43bd49:	mov	rdx, qword ptr [r12 + 8]
0x43bd4e:	cmp	byte ptr [rdx], 0x40
0x43bd51:	jne	0x43bce4
0x43bd53:	xor	r13d, r13d
0x43bd56:	lea	r15, [rdx + 1]
0x43bd5a:	xor	ebx, ebx
0x43bd5c:	jmp	0x43bc8f
0x43bd61:	nop	
0x43bd62:	nop	word ptr cs:[rax + rax]
0x43bd6d:	nop	dword ptr [rax]
0x43bd70:	endbr64	
0x43bd74:	push	rbp
0x43bd75:	mov	rbp, rsi
0x43bd78:	push	rbx
0x43bd79:	push	rdx
0x43bd7a:	mov	rsi, qword ptr [rdi]
0x43bd7d:	test	rsi, rsi
0x43bd80:	jne	0x43bd96
0x43bd82:	mov	rbx, rdi
0x43bd85:	call	0x43bf80
0x43bd8a:	mov	rsi, qword ptr [rbx]
0x43bd8d:	test	rsi, rsi
0x43bd90:	je	0x40ab0c
0x43bd96:	pop	rax
0x43bd97:	mov	rdi, rbp
0x43bd9a:	pop	rbx
0x43bd9b:	pop	rbp
0x43bd9c:	jmp	0x43c950
0x43bda1:	nop	word ptr cs:[rax + rax]
0x43bdac:	nop	dword ptr [rax]
0x43bdb0:	endbr64	
0x43bdb4:	push	r13
0x43bdb6:	mov	r13, rdi
0x43bdb9:	mov	rdi, rsi
0x43bdbc:	push	r12
0x43bdbe:	mov	r12, rsi
0x43bdc1:	push	rbp
0x43bdc2:	mov	ebp, ecx
0x43bdc4:	push	rbx
0x43bdc5:	sub	rsp, 0x18
0x43bdc9:	mov	qword ptr [rsp], 0x4e4960
0x43bdd1:	mov	byte ptr [rsp + 8], dl
0x43bdd5:	mov	byte ptr [rsp + 9], 1
0x43bdda:	call	0x4039e0
0x43bddf:	mov	rbx, rax
0x43bde2:	mov	rax, qword ptr [rip + 0xa8b97]
0x43bde9:	sub	rax, qword ptr [rip + 0xa8b88]
0x43bdf0:	cmp	rbx, rax
0x43bdf3:	ja	0x40ab20
0x43bdf9:	mov	rdi, qword ptr [rip + 0xa8b78]
0x43be00:	mov	rdx, rbx
0x43be03:	mov	rsi, r12
0x43be06:	call	0x403c60
0x43be0b:	add	rbx, qword ptr [rip + 0xa8b66]
0x43be12:	cmp	rbx, qword ptr [rip + 0xa8b67]
0x43be19:	mov	qword ptr [rip + 0xa8b58], rbx
0x43be20:	je	0x40ab52
0x43be26:	mov	rcx, qword ptr [rip + 0xa8b4b]
0x43be2d:	movzx	esi, bpl
0x43be31:	mov	r8, rsp
0x43be34:	mov	rdi, r13
0x43be37:	lea	rdx, [rcx + 1]
0x43be3b:	mov	qword ptr [rip + 0xa8b36], rdx
0x43be42:	xor	edx, edx
0x43be44:	mov	byte ptr [rcx], 0x3d
0x43be47:	mov	ecx, 0x43c1a0
0x43be4c:	call	0x439690
0x43be51:	mov	rsi, qword ptr [rip + 0xa8b20]
0x43be58:	cmp	qword ptr [rip + 0xa8b21], rsi
0x43be5f:	je	0x40ab3e
0x43be65:	mov	rdi, qword ptr [rip + 0xa8b0c]
0x43be6c:	lea	r8, [rdi + 1]
0x43be70:	mov	qword ptr [rip + 0xa8b01], r8
0x43be77:	mov	byte ptr [rdi], 0
0x43be7a:	mov	r9, qword ptr [rip + 0xa8aef]
0x43be81:	mov	r10, qword ptr [rip + 0xa8af0]
0x43be88:	cmp	r10, r9
0x43be8b:	je	0x40ab32
0x43be91:	mov	r11, qword ptr [rip + 0xa8af8]
0x43be98:	mov	r13, qword ptr [rip + 0xa8ae1]
0x43be9f:	mov	rax, r9
0x43bea2:	add	r10, r11
0x43bea5:	not	r11
0x43bea8:	mov	rbp, r13
0x43beab:	sub	rbp, qword ptr [rip + 0xa8ab6]
0x43beb2:	and	r10, r11
0x43beb5:	mov	r12, r10
0x43beb8:	sub	r12, qword ptr [rip + 0xa8aa9]
0x43bebf:	cmp	r12, rbp
0x43bec2:	cmova	r10, r13
0x43bec6:	movq	xmm0, r10
0x43becb:	punpcklqdq	xmm0, xmm0
0x43becf:	movaps	xmmword ptr [rip + 0xa8a9a], xmm0
0x43bed6:	add	rsp, 0x18
0x43beda:	pop	rbx
0x43bedb:	pop	rbp
0x43bedc:	pop	r12
0x43bede:	pop	r13
0x43bee0:	ret	
0x43bee1:	nop	word ptr cs:[rax + rax]
0x43beec:	nop	dword ptr [rax]
0x43bef0:	endbr64	
0x43bef4:	push	rbp
0x43bef5:	mov	rbp, rdi
0x43bef8:	push	rbx
0x43bef9:	push	rdx
0x43befa:	mov	qword ptr [rip + 0xaa157], rdi
0x43bf01:	call	0x4039e0
0x43bf06:	mov	rdi, rbp
0x43bf09:	mov	qword ptr [rip + 0xaa140], rax
0x43bf10:	call	0x4322e0
0x43bf15:	mov	rdi, rax
0x43bf18:	mov	rbx, rax
0x43bf1b:	mov	qword ptr [rip + 0xaa3c6], rax
0x43bf22:	call	0x4039e0
0x43bf27:	mov	dword ptr [rip + 0xaa3c3], eax
0x43bf2d:	mov	dword ptr [rip + 0xaa3c1], eax
0x43bf33:	cdqe	
0x43bf35:	add	rax, rbx
0x43bf38:	cmp	rbx, rax
0x43bf3b:	je	0x43bf6d
0x43bf3d:	cmp	byte ptr [rax], 0x2e
0x43bf40:	je	0x43bf48
0x43bf42:	sub	rax, 1
0x43bf46:	jmp	0x43bf38
0x43bf48:	mov	rdx, rax
0x43bf4b:	add	rax, 1
0x43bf4f:	sub	rdx, rbx
0x43bf52:	mov	dword ptr [rip + 0xaa398], edx
0x43bf58:	mov	qword ptr [rip + 0xaa2c1], rax
0x43bf5f:	mov	dword ptr [rip + 0xaa367], 0
0x43bf69:	pop	rax
0x43bf6a:	pop	rbx
0x43bf6b:	pop	rbp
0x43bf6c:	ret	
0x43bf6d:	mov	eax, 0x4c4893
0x43bf72:	jmp	0x43bf58
0x43bf74:	nop	word ptr cs:[rax + rax]
0x43bf7f:	nop	
0x43bf80:	endbr64	
0x43bf84:	push	r15
0x43bf86:	push	r14
0x43bf88:	push	r13
0x43bf8a:	push	r12
0x43bf8c:	push	rbp
0x43bf8d:	push	rbx
0x43bf8e:	sub	rsp, 0x88
0x43bf95:	cmp	qword ptr [rdi], 0
0x43bf99:	mov	qword ptr [rsp + 0x18], rsi
0x43bf9e:	jne	0x40ab66
0x43bfa4:	mov	r13, rdi
0x43bfa7:	mov	edi, 8
0x43bfac:	mov	ebx, 0x48baa0
0x43bfb1:	xor	ebp, ebp
0x43bfb3:	call	0x440420
0x43bfb8:	mov	qword ptr [rax], 0
0x43bfbf:	mov	qword ptr [r13], rax
0x43bfc3:	jmp	0x43bfe7
0x43bfc5:	mov	rdi, qword ptr [r13]
0x43bfc9:	mov	rdx, r12
0x43bfcc:	mov	rsi, rbx
0x43bfcf:	call	0x42ff70
0x43bfd4:	add	ebp, 1
0x43bfd7:	add	rbx, 0x60
0x43bfdb:	cmp	ebp, 0x823
0x43bfe1:	je	0x43c186
0x43bfe7:	mov	r12, qword ptr [rbx]
0x43bfea:	mov	r14, rbx
0x43bfed:	cmp	ebp, 0x5ae
0x43bff3:	je	0x43c0f0
0x43bff9:	cmp	ebp, 0x5b1
0x43bfff:	je	0x43c0f0
0x43c005:	cmp	dword ptr [rbx + 0x48], 6
0x43c009:	je	0x43c036
0x43c00b:	test	byte ptr [rbx + 0x3e], 0x10
0x43c00f:	je	0x43bfc5
0x43c011:	mov	rsi, qword ptr [rsp + 0x18]
0x43c016:	mov	edi, ebp
0x43c018:	call	0x43c870
0x43c01d:	mov	qword ptr [rsp + 0x20], rax
0x43c022:	mov	r15, rax
0x43c025:	test	rax, rax
0x43c028:	jne	0x43c092
0x43c02a:	lea	rdi, [rsp + 0x20]
0x43c02f:	call	0x43b630
0x43c034:	jmp	0x43bfc5
0x43c036:	movzx	eax, word ptr [rbx + 0x44]
0x43c03a:	xor	r14d, r14d
0x43c03d:	imul	rcx, rax, 0x30
0x43c041:	mov	rdi, qword ptr [rcx + 0x48ad70]
0x43c048:	mov	qword ptr [rsp + 8], rdi
0x43c04d:	mov	r9, qword ptr [rsp + 8]
0x43c052:	mov	esi, r14d
0x43c055:	shl	rsi, 4
0x43c059:	mov	rsi, qword ptr [r9 + rsi]
0x43c05d:	test	rsi, rsi
0x43c060:	je	0x43bfc5
0x43c066:	xor	edx, edx
0x43c068:	mov	rdi, r12
0x43c06b:	xor	eax, eax
0x43c06d:	add	r14d, 1
0x43c071:	call	0x42d870
0x43c076:	mov	rdi, qword ptr [r13]
0x43c07a:	mov	rsi, rbx
0x43c07d:	mov	r15, rax
0x43c080:	mov	rdx, rax
0x43c083:	call	0x42ff70
0x43c088:	mov	rdi, r15
0x43c08b:	call	0x403830
0x43c090:	jmp	0x43c04d
0x43c092:	cmp	dword ptr [rax + 4], 0
0x43c096:	je	0x43c02a
0x43c098:	xor	r8d, r8d
0x43c09b:	mov	r10d, r8d
0x43c09e:	xor	edx, edx
0x43c0a0:	mov	rdi, r12
0x43c0a3:	xor	eax, eax
0x43c0a5:	mov	rsi, qword ptr [r15 + r10*8 + 8]
0x43c0aa:	mov	dword ptr [rsp + 0x10], r8d
0x43c0af:	call	0x42d870
0x43c0b4:	mov	rdi, qword ptr [r13]
0x43c0b8:	mov	rsi, rbx
0x43c0bb:	mov	rdx, rax
0x43c0be:	mov	qword ptr [rsp + 8], rax
0x43c0c3:	call	0x42ff70
0x43c0c8:	mov	rdi, qword ptr [rsp + 8]
0x43c0cd:	call	0x403830
0x43c0d2:	mov	r8d, dword ptr [rsp + 0x10]
0x43c0d7:	add	r8d, 1
0x43c0db:	cmp	r8d, dword ptr [r15 + 4]
0x43c0df:	jb	0x43c09b
0x43c0e1:	lea	rdi, [rsp + 0x20]
0x43c0e6:	call	0x43b630
0x43c0eb:	jmp	0x43bfd4
0x43c0f0:	mov	rdi, qword ptr [r13]
0x43c0f4:	mov	rdx, r12
0x43c0f7:	mov	rsi, rbx
0x43c0fa:	call	0x42ff70
0x43c0ff:	mov	edx, 0x4c3b40
0x43c104:	jmp	0x43c141
0x43c106:	mov	rsi, r8
0x43c109:	mov	qword ptr [rsp + 0x10], rdx
0x43c10e:	mov	rdi, r12
0x43c111:	xor	edx, edx
0x43c113:	xor	eax, eax
0x43c115:	call	0x42d870
0x43c11a:	mov	rdi, qword ptr [r13]
0x43c11e:	mov	rsi, r14
0x43c121:	mov	rdx, rax
0x43c124:	mov	qword ptr [rsp + 8], rax
0x43c129:	call	0x42ff70
0x43c12e:	mov	rdi, qword ptr [rsp + 8]
0x43c133:	call	0x403830
0x43c138:	mov	rdx, qword ptr [rsp + 0x10]
0x43c13d:	add	rdx, 0x20
0x43c141:	mov	r8, qword ptr [rdx]
0x43c144:	test	r8, r8
0x43c147:	je	0x43bfd4
0x43c14d:	cmp	dword ptr [rdx + 8], -1
0x43c151:	jne	0x43c106
0x43c153:	cmp	ebp, 0x5b1
0x43c159:	jne	0x43c106
0x43c15b:	lea	rax, [rsp + 0x20]
0x43c160:	mov	rsi, r14
0x43c163:	mov	ecx, 0x18
0x43c168:	mov	r12d, 0x4be59e
0x43c16e:	mov	rdi, rax
0x43c171:	mov	r14, rax
0x43c174:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x43c176:	mov	qword ptr [rsp + 0x20], 0x4be59e
0x43c17f:	or	byte ptr [rsp + 0x60], 0x80
0x43c184:	jmp	0x43c106
0x43c186:	add	rsp, 0x88
0x43c18d:	pop	rbx
0x43c18e:	pop	rbp
0x43c18f:	pop	r12
0x43c191:	pop	r13
0x43c193:	pop	r14
0x43c195:	pop	r15
0x43c197:	ret	
0x43c198:	nop	dword ptr [rax + rax]
0x43c1a0:	endbr64	
0x43c1a4:	push	r13
0x43c1a6:	push	r12
0x43c1a8:	push	rbp
0x43c1a9:	mov	rbp, rdi
0x43c1ac:	push	rbx
0x43c1ad:	mov	rbx, rsi
0x43c1b0:	push	rcx
0x43c1b1:	cmp	byte ptr [rsi + 8], 0
0x43c1b5:	je	0x43c1cc
0x43c1b7:	xor	esi, esi
0x43c1b9:	call	0x439310
0x43c1be:	test	eax, eax
0x43c1c0:	jne	0x43c1cc
0x43c1c2:	pop	rdx
0x43c1c3:	xor	eax, eax
0x43c1c5:	pop	rbx
0x43c1c6:	pop	rbp
0x43c1c7:	pop	r12
0x43c1c9:	pop	r13
0x43c1cb:	ret	
0x43c1cc:	cmp	byte ptr [rbx + 9], 0
0x43c1d0:	mov	r12, qword ptr [rbx]
0x43c1d3:	jne	0x43c1f9
0x43c1d5:	mov	rax, qword ptr [r12 + 0x18]
0x43c1da:	cmp	qword ptr [r12 + 0x20], rax
0x43c1df:	je	0x40ab7a
0x43c1e5:	mov	rcx, qword ptr [r12 + 0x18]
0x43c1ea:	lea	rdx, [rcx + 1]
0x43c1ee:	mov	qword ptr [r12 + 0x18], rdx
0x43c1f3:	mov	byte ptr [rcx], 0x3a
0x43c1f6:	mov	r12, qword ptr [rbx]
0x43c1f9:	mov	rdi, rbp
0x43c1fc:	call	0x4039e0
0x43c201:	mov	rsi, qword ptr [r12 + 0x20]
0x43c206:	sub	rsi, qword ptr [r12 + 0x18]
0x43c20b:	mov	r13, rax
0x43c20e:	cmp	rax, rsi
0x43c211:	ja	0x40ab8c
0x43c217:	mov	rdi, qword ptr [r12 + 0x18]
0x43c21c:	mov	rdx, r13
0x43c21f:	mov	rsi, rbp
0x43c222:	call	0x403c60
0x43c227:	add	qword ptr [r12 + 0x18], r13
0x43c22c:	mov	byte ptr [rbx + 9], 0
0x43c230:	jmp	0x43c1c2
0x43c232:	nop	word ptr cs:[rax + rax]
0x43c23d:	nop	dword ptr [rax]
0x43c240:	endbr64	
0x43c244:	push	r12
0x43c246:	xor	esi, esi
0x43c248:	push	rbp
0x43c249:	push	rbx
0x43c24a:	call	0x43a440
0x43c24f:	mov	r12d, eax
0x43c252:	test	eax, eax
0x43c254:	jne	0x40aba4
0x43c25a:	mov	rbp, qword ptr [rip + 0xa7067]
0x43c261:	test	rbp, rbp
0x43c264:	je	0x43c28a
0x43c266:	mov	eax, dword ptr [rbp + 4]
0x43c269:	test	eax, eax
0x43c26b:	je	0x43c28a
0x43c26d:	sub	eax, 1
0x43c270:	mov	esi, 0x4be7ac
0x43c275:	mov	rdi, qword ptr [rbp + rax*8 + 8]
0x43c27a:	mov	rbx, rax
0x43c27d:	call	0x403be0
0x43c282:	test	eax, eax
0x43c284:	je	0x40ab9c
0x43c28a:	call	0x43d180
0x43c28f:	mov	rdx, qword ptr [rip + 0xa7032]
0x43c296:	test	rdx, rdx
0x43c299:	je	0x40aba4
0x43c29f:	cmp	dword ptr [rdx + 4], 0
0x43c2a3:	je	0x40aba4
0x43c2a9:	pop	rbx
0x43c2aa:	pop	rbp
0x43c2ab:	pop	r12
0x43c2ad:	jmp	0x43d590
0x43c2b2:	nop	word ptr cs:[rax + rax]
0x43c2bd:	nop	dword ptr [rax]
0x43c2c0:	endbr64	
0x43c2c4:	push	rbp
0x43c2c5:	mov	rbp, qword ptr [rdi]
0x43c2c8:	test	rbp, rbp
0x43c2cb:	jne	0x40abfc
0x43c2d1:	pop	rbp
0x43c2d2:	ret	
0x43c2d3:	nop	
0x43c2d4:	nop	word ptr cs:[rax + rax]
0x43c2df:	nop	
0x43c2e0:	endbr64	
0x43c2e4:	push	r12
0x43c2e6:	push	rbp
0x43c2e7:	push	rbx
0x43c2e8:	mov	rbx, rdi
0x43c2eb:	sub	rsp, 0x10
0x43c2ef:	mov	rax, qword ptr [rdi + 0x28]
0x43c2f3:	mov	rdi, rsp
0x43c2f6:	mov	rcx, qword ptr [rax + 8]
0x43c2fa:	mov	rdx, qword ptr [rax]
0x43c2fd:	shl	rcx, 4
0x43c301:	movq	xmm0, rdx
0x43c306:	add	rcx, rdx
0x43c309:	movq	xmm1, rcx
0x43c30e:	punpcklqdq	xmm0, xmm1
0x43c312:	movaps	xmmword ptr [rsp], xmm0
0x43c316:	call	0x43c840
0x43c31b:	mov	r12, qword ptr [rsp]
0x43c31f:	mov	rbp, qword ptr [rbx + 0x28]
0x43c323:	test	r12, r12
0x43c326:	jne	0x40ac3e
0x43c32c:	cmp	qword ptr [rsp + 8], 0
0x43c332:	jne	0x40ac3e
0x43c338:	test	rbp, rbp
0x43c33b:	je	0x43c353
0x43c33d:	mov	rdi, qword ptr [rbp]
0x43c341:	call	0x403830
0x43c346:	mov	esi, 0x30
0x43c34b:	mov	rdi, rbp
0x43c34e:	call	0x440230
0x43c353:	mov	rbp, qword ptr [rbx + 0x30]
0x43c357:	test	rbp, rbp
0x43c35a:	je	0x43c372
0x43c35c:	mov	rdi, qword ptr [rbp]
0x43c360:	call	0x403830
0x43c365:	mov	esi, 0x30
0x43c36a:	mov	rdi, rbp
0x43c36d:	call	0x440230
0x43c372:	mov	rbx, qword ptr [rbx]
0x43c375:	test	rbx, rbx
0x43c378:	je	0x40ac7a
0x43c37e:	mov	rdi, qword ptr [rbx]
0x43c381:	call	0x403830
0x43c386:	add	rsp, 0x10
0x43c38a:	mov	rdi, rbx
0x43c38d:	mov	esi, 0x30
0x43c392:	pop	rbx
0x43c393:	pop	rbp
0x43c394:	pop	r12
0x43c396:	jmp	0x440230
0x43c39b:	nop	dword ptr [rax + rax]
0x43c3a0:	movsxd	rdi, edi
0x43c3a3:	push	r13
0x43c3a5:	push	r12
0x43c3a7:	push	rbp
0x43c3a8:	push	rbx
0x43c3a9:	imul	rbx, rdi, 0x18
0x43c3ad:	push	rdx
0x43c3ae:	mov	rdx, qword ptr [rip + 0xa8673]
0x43c3b5:	test	byte ptr [rdx + rbx + 0x10], 4
0x43c3ba:	jne	0x43c40e
0x43c3bc:	test	esi, esi
0x43c3be:	jne	0x43c3ea
0x43c3c0:	xor	edx, edx
0x43c3c2:	mov	edi, 0x4cd89a
0x43c3c7:	call	0x43a4f0
0x43c3cc:	mov	rax, qword ptr [rip + 0xa8655]
0x43c3d3:	xor	edx, edx
0x43c3d5:	mov	esi, 1
0x43c3da:	mov	rdi, qword ptr [rax + rbx]
0x43c3de:	call	0x43a4f0
0x43c3e3:	mov	rdx, qword ptr [rip + 0xa863e]
0x43c3ea:	mov	rbp, qword ptr [rdx + rbx + 8]
0x43c3ef:	test	rbp, rbp
0x43c3f2:	jne	0x43c441
0x43c3f4:	xor	edx, edx
0x43c3f6:	xor	esi, esi
0x43c3f8:	mov	edi, 0x4c6c55
0x43c3fd:	call	0x43a4f0
0x43c402:	mov	rcx, qword ptr [rip + 0xa861f]
0x43c409:	mov	byte ptr [rcx + rbx + 0x15], 1
0x43c40e:	pop	rax
0x43c40f:	pop	rbx
0x43c410:	pop	rbp
0x43c411:	pop	r12
0x43c413:	pop	r13
0x43c415:	ret	
0x43c416:	xor	edx, edx
0x43c418:	xor	esi, esi
0x43c41a:	mov	edi, 0x4c6c55
0x43c41f:	call	0x43a4f0
0x43c424:	cmp	qword ptr [rip + 0xa9ecc], 0
0x43c42c:	jne	0x43c44c
0x43c42e:	xor	edx, edx
0x43c430:	mov	esi, 1
0x43c435:	mov	rdi, r12
0x43c438:	call	0x43a4f0
0x43c43d:	add	rbp, 8
0x43c441:	mov	r12, qword ptr [rbp]
0x43c445:	test	r12, r12
0x43c448:	jne	0x43c416
0x43c44a:	jmp	0x43c3f4
0x43c44c:	mov	rdi, r12
0x43c44f:	call	0x4039e0
0x43c454:	sub	eax, 1
0x43c457:	cmp	eax, -1
0x43c45a:	je	0x40ac91
0x43c460:	mov	r13d, eax
0x43c463:	add	r13, r12
0x43c466:	movzx	esi, byte ptr [r13]
0x43c46b:	cmp	sil, 0x2f
0x43c46f:	je	0x40ac91
0x43c475:	sub	eax, 1
0x43c478:	cmp	sil, 0x2e
0x43c47c:	jne	0x43c457
0x43c47e:	mov	byte ptr [r13], 0
0x43c483:	xor	edx, edx
0x43c485:	mov	esi, 1
0x43c48a:	mov	rdi, r12
0x43c48d:	call	0x43a4f0
0x43c492:	mov	byte ptr [r13], 0x2e
0x43c497:	mov	rdi, qword ptr [rip + 0xa9e5a]
0x43c49e:	xor	edx, edx
0x43c4a0:	mov	esi, 1
0x43c4a5:	call	0x43a4f0
0x43c4aa:	jmp	0x43c43d
0x43c4ac:	nop	dword ptr [rax]
0x43c4b0:	endbr64	
0x43c4b4:	push	r12
0x43c4b6:	mov	edx, 0x45b470
0x43c4bb:	mov	esi, 0x4be5ea
0x43c4c0:	xor	eax, eax
0x43c4c2:	push	rbp
0x43c4c3:	mov	rbp, rdi
0x43c4c6:	push	rbx
0x43c4c7:	call	0x43a390
0x43c4cc:	mov	edx, 0x4c3640
0x43c4d1:	mov	rdi, rbp
0x43c4d4:	xor	eax, eax
0x43c4d6:	mov	esi, 0x4be5f6
0x43c4db:	call	0x43a390
0x43c4e0:	mov	edx, 0x4c3638
0x43c4e5:	mov	rdi, rbp
0x43c4e8:	xor	eax, eax
0x43c4ea:	mov	esi, 0x4be60b
0x43c4ef:	call	0x43a390
0x43c4f4:	mov	esi, 0x4bf7b8
0x43c4f9:	mov	rdi, rbp
0x43c4fc:	xor	eax, eax
0x43c4fe:	call	0x43a390
0x43c503:	mov	esi, 0x4be61d
0x43c508:	mov	rdi, rbp
0x43c50b:	xor	eax, eax
0x43c50d:	call	0x43a390
0x43c512:	xor	eax, eax
0x43c514:	mov	esi, 0x45b64d
0x43c519:	mov	rdi, rbp
0x43c51c:	call	0x43a390
0x43c521:	xor	eax, eax
0x43c523:	movzx	edx, byte ptr [rax + 0x4be0c8]
0x43c52a:	mov	ecx, eax
0x43c52c:	add	rax, 1
0x43c530:	and	dl, 0xdf
0x43c533:	jne	0x43c523
0x43c535:	movsxd	rbx, ecx
0x43c538:	mov	edx, 7
0x43c53d:	mov	edi, 0x4be0c8
0x43c542:	mov	r12, qword ptr [rip + 0xa6d27]
0x43c549:	cmp	rbx, rdx
0x43c54c:	cmovbe	rdx, rbx
0x43c550:	mov	rsi, r12
0x43c553:	call	0x4038d0
0x43c558:	test	eax, eax
0x43c55a:	jne	0x40aca5
0x43c560:	cmp	byte ptr [r12 + rbx], 0
0x43c565:	jne	0x40aca5
0x43c56b:	pop	rbx
0x43c56c:	mov	rdi, rbp
0x43c56f:	mov	ecx, 0x4be0e0
0x43c574:	pop	rbp
0x43c575:	mov	edx, 0x4be0c8
0x43c57a:	mov	esi, 0x4be623
0x43c57f:	pop	r12
0x43c581:	jmp	0x43a390
0x43c586:	nop	word ptr cs:[rax + rax]
0x43c590:	endbr64	
0x43c594:	push	r13
0x43c596:	pxor	xmm0, xmm0
0x43c59a:	push	r12
0x43c59c:	push	rbp
0x43c59d:	push	rbx
0x43c59e:	sub	rsp, 0x28
0x43c5a2:	mov	r8, qword ptr [rip + 0xa6cb7]
0x43c5a9:	mov	rbp, qword ptr [rip + 0xa6ca8]
0x43c5b0:	mov	qword ptr [rsp + 0x10], 0
0x43c5b9:	movaps	xmmword ptr [rsp], xmm0
0x43c5bd:	test	r8, r8
0x43c5c0:	jne	0x43c7b0
0x43c5c6:	cmp	edi, 1
0x43c5c9:	je	0x40acc5
0x43c5cf:	mov	rax, qword ptr [rip + 0xa6c92]
0x43c5d6:	test	edi, edi
0x43c5d8:	jne	0x40ace5
0x43c5de:	mov	rdi, rax
0x43c5e1:	xor	r12d, r12d
0x43c5e4:	test	rax, rax
0x43c5e7:	jne	0x43c74d
0x43c5ed:	test	rbp, rbp
0x43c5f0:	jne	0x43c600
0x43c5f2:	movsxd	rbp, dword ptr [rip + 0xa9cf7]
0x43c5f9:	add	rbp, qword ptr [rip + 0xa9ce8]
0x43c600:	test	r8, r8
0x43c603:	jne	0x43c78c
0x43c609:	mov	rsi, qword ptr [rip + 0xa6c30]
0x43c610:	test	rsi, rsi
0x43c613:	je	0x43c708
0x43c619:	mov	rdi, qword ptr [rip + 0xa6c28]
0x43c620:	call	0x439da0
0x43c625:	mov	esi, 0x4be4d4
0x43c62a:	mov	edx, 0x4c4893
0x43c62f:	cmp	dword ptr [rip + 0xa9a0a], 0
0x43c636:	cmovns	rsi, rdx
0x43c63a:	mov	r13, rax
0x43c63d:	mov	rdi, r13
0x43c640:	xor	ecx, ecx
0x43c642:	mov	rdx, rbp
0x43c645:	xor	eax, eax
0x43c647:	call	0x42d870
0x43c64c:	mov	rdi, r13
0x43c64f:	mov	rbx, rax
0x43c652:	call	0x403830
0x43c657:	mov	r13, rbx
0x43c65a:	mov	rdi, r13
0x43c65d:	lea	ebx, [r12 + 1]
0x43c662:	call	0x43c910
0x43c667:	xor	edx, edx
0x43c669:	mov	edi, 0x4be641
0x43c66e:	mov	rsi, rax
0x43c671:	mov	r13, rax
0x43c674:	xor	eax, eax
0x43c676:	call	0x42d870
0x43c67b:	movsxd	rsi, r12d
0x43c67e:	mov	rdi, r13
0x43c681:	mov	qword ptr [rsp + rsi*8], rax
0x43c685:	call	0x403830
0x43c68a:	cmp	byte ptr [rbp], 0
0x43c68e:	je	0x43c6ca
0x43c690:	mov	rdi, rbp
0x43c693:	add	r12d, 2
0x43c697:	call	0x42db40
0x43c69c:	mov	rdi, rax
0x43c69f:	call	0x43c910
0x43c6a4:	xor	edx, edx
0x43c6a6:	mov	edi, 0x4be64d
0x43c6ab:	mov	rsi, rax
0x43c6ae:	mov	rbp, rax
0x43c6b1:	xor	eax, eax
0x43c6b3:	call	0x42d870
0x43c6b8:	movsxd	rdi, ebx
0x43c6bb:	mov	ebx, r12d
0x43c6be:	mov	qword ptr [rsp + rdi*8], rax
0x43c6c2:	mov	rdi, rbp
0x43c6c5:	call	0x403830
0x43c6ca:	mov	rdx, qword ptr [rsp + 0x10]
0x43c6cf:	mov	rsi, qword ptr [rsp + 8]
0x43c6d4:	xor	ecx, ecx
0x43c6d6:	xor	eax, eax
0x43c6d8:	mov	rdi, qword ptr [rsp]
0x43c6dc:	movsxd	r13, ebx
0x43c6df:	call	0x42d870
0x43c6e4:	mov	r12, rax
0x43c6e7:	mov	rdi, qword ptr [rsp + r13*8 - 8]
0x43c6ec:	sub	r13, 1
0x43c6f0:	call	0x403830
0x43c6f5:	test	r13d, r13d
0x43c6f8:	jne	0x43c6e7
0x43c6fa:	add	rsp, 0x28
0x43c6fe:	mov	rax, r12
0x43c701:	pop	rbx
0x43c702:	pop	rbp
0x43c703:	pop	r12
0x43c705:	pop	r13
0x43c707:	ret	
0x43c708:	movsxd	rsi, dword ptr [rip + 0xa9be5]
0x43c70f:	mov	rdi, qword ptr [rip + 0xa9bd2]
0x43c716:	call	0x439da0
0x43c71b:	movsxd	rbx, dword ptr [rip + 0xa9bce]
0x43c722:	mov	r13, rax
0x43c725:	add	rbx, rax
0x43c728:	cmp	dword ptr [rip + 0xa9911], 0
0x43c72f:	js	0x43c7d2
0x43c735:	mov	rsi, rbp
0x43c738:	mov	rdi, rbx
0x43c73b:	call	0x403be0
0x43c740:	test	eax, eax
0x43c742:	je	0x43c65a
0x43c748:	jmp	0x40ad18
0x43c74d:	call	0x42db40
0x43c752:	mov	r12d, 1
0x43c758:	mov	rdi, rax
0x43c75b:	call	0x43c910
0x43c760:	xor	edx, edx
0x43c762:	mov	edi, 0x4be636
0x43c767:	mov	rsi, rax
0x43c76a:	mov	rbx, rax
0x43c76d:	xor	eax, eax
0x43c76f:	call	0x42d870
0x43c774:	mov	rdi, rbx
0x43c777:	mov	qword ptr [rsp], rax
0x43c77b:	call	0x403830
0x43c780:	mov	r8, qword ptr [rip + 0xa6ad9]
0x43c787:	jmp	0x43c5ed
0x43c78c:	cmp	byte ptr [r8], 0
0x43c790:	je	0x43c609
0x43c796:	mov	rdi, r8
0x43c799:	call	0x42db40
0x43c79e:	mov	rbx, qword ptr [rip + 0xa6a9b]
0x43c7a5:	mov	r13, rax
0x43c7a8:	add	rbx, rax
0x43c7ab:	jmp	0x43c728
0x43c7b0:	cmp	byte ptr [r8], 0
0x43c7b4:	je	0x43c5c6
0x43c7ba:	test	rbp, rbp
0x43c7bd:	jne	0x43c7c4
0x43c7bf:	mov	ebp, 0x4c4893
0x43c7c4:	cmp	edi, 1
0x43c7c7:	jne	0x43c5cf
0x43c7cd:	jmp	0x40ad00
0x43c7d2:	jmp	0x40acf3
0x43c7d7:	nop	word ptr [rax + rax]
0x43c7e0:	endbr64	
0x43c7e4:	push	rbx
0x43c7e5:	sub	rsp, 0x10
0x43c7e9:	sub	edi, 1
0x43c7ec:	jne	0x40ad2d
0x43c7f2:	mov	rbx, rsi
0x43c7f5:	mov	edx, 0xa
0x43c7fa:	lea	rsi, [rsp + 8]
0x43c7ff:	mov	rdi, qword ptr [rbx]
0x43c802:	call	0x403c50
0x43c807:	mov	rcx, qword ptr [rsp + 8]
0x43c80c:	cmp	qword ptr [rbx], rcx
0x43c80f:	je	0x40ad3b
0x43c815:	movsxd	rdx, dword ptr [rip + 0xa82a4]
0x43c81c:	mov	esi, 0
0x43c821:	cmp	rdx, rax
0x43c824:	mov	eax, 0x4c4893
0x43c829:	cmovle	rax, rsi
0x43c82d:	add	rsp, 0x10
0x43c831:	pop	rbx
0x43c832:	ret	
0x43c833:	nop	
0x43c834:	nop	word ptr cs:[rax + rax]
0x43c83f:	nop	
0x43c840:	mov	rdx, qword ptr [rdi + 8]
0x43c844:	jmp	0x43c853
0x43c846:	cmp	qword ptr [rax], 1
0x43c84a:	ja	0x43c862
0x43c84c:	add	rax, 0x10
0x43c850:	mov	qword ptr [rdi], rax
0x43c853:	mov	rax, qword ptr [rdi]
0x43c856:	cmp	rax, rdx
0x43c859:	jb	0x43c846
0x43c85b:	pxor	xmm0, xmm0
0x43c85f:	movups	xmmword ptr [rdi], xmm0
0x43c862:	ret	
0x43c863:	nop	word ptr cs:[rax + rax]
0x43c86e:	nop	
0x43c870:	endbr64	
0x43c874:	push	rbx
0x43c875:	sub	rsp, 0x10
0x43c879:	mov	qword ptr [rsp], 0
0x43c881:	cmp	edi, 0x6e3
0x43c887:	je	0x43c89b
0x43c889:	cmp	edi, 0x784
0x43c88f:	je	0x43c8da
0x43c891:	mov	rax, qword ptr [rsp]
0x43c895:	add	rsp, 0x10
0x43c899:	pop	rbx
0x43c89a:	ret	
0x43c89b:	mov	ebx, 0x4c2620
0x43c8a0:	mov	rax, qword ptr [rbx]
0x43c8a3:	lea	rsi, [rsp + 8]
0x43c8a8:	mov	rdi, rsp
0x43c8ab:	add	rbx, 0x28
0x43c8af:	mov	qword ptr [rsp + 8], rax
0x43c8b4:	call	0x43b210
0x43c8b9:	cmp	rbx, 0x4c3520
0x43c8c0:	jne	0x43c8a0
0x43c8c2:	lea	rsi, [rsp + 8]
0x43c8c7:	mov	rdi, rsp
0x43c8ca:	mov	qword ptr [rsp + 8], 0x45b7ba
0x43c8d3:	call	0x43b210
0x43c8d8:	jmp	0x43c891
0x43c8da:	xor	ebx, ebx
0x43c8dc:	mov	rdx, qword ptr [rbx*8 + 0x4c24a0]
0x43c8e4:	lea	rsi, [rsp + 8]
0x43c8e9:	mov	rdi, rsp
0x43c8ec:	add	rbx, 1
0x43c8f0:	mov	qword ptr [rsp + 8], rdx
0x43c8f5:	call	0x43b210
0x43c8fa:	cmp	rbx, 0x2d
0x43c8fe:	jne	0x43c8dc
0x43c900:	jmp	0x43c891
0x43c902:	nop	word ptr cs:[rax + rax]
0x43c90d:	nop	dword ptr [rax]
0x43c910:	cmp	byte ptr [rdi], 0
0x43c913:	je	0x40ad4f
0x43c919:	mov	esi, 0x4303e0
0x43c91e:	jmp	0x43bbb0
0x43c923:	nop	word ptr cs:[rax + rax]
0x43c92e:	nop	
0x43c930:	push	rbp
0x43c931:	xor	ebp, ebp
0x43c933:	push	rbx
0x43c934:	mov	rbx, rdi
0x43c937:	push	rdx
0x43c938:	test	rbx, rbx
0x43c93b:	jne	0x40ad60
0x43c941:	pop	rax
0x43c942:	pop	rbx
0x43c943:	pop	rbp
0x43c944:	ret	
0x43c945:	nop	word ptr cs:[rax + rax]
0x43c950:	endbr64	
0x43c954:	push	r15
0x43c956:	push	r14
0x43c958:	push	r13
0x43c95a:	push	r12
0x43c95c:	push	rbp
0x43c95d:	push	rbx
0x43c95e:	sub	rsp, 0x38
0x43c962:	mov	qword ptr [rsp + 0x10], rdi
0x43c967:	test	rdi, rdi
0x43c96a:	je	0x40adbe
0x43c970:	mov	r12, rsi
0x43c973:	test	rsi, rsi
0x43c976:	je	0x40adaa
0x43c97c:	mov	rdi, qword ptr [rsp + 0x10]
0x43c981:	or	ebx, 0xffffffff
0x43c984:	xor	r15d, r15d
0x43c987:	call	0x440210
0x43c98c:	mov	qword ptr [rsp + 0x20], 0
0x43c995:	mov	dword ptr [rsp + 0x1c], eax
0x43c999:	mov	rbp, rax
0x43c99c:	jmp	0x43c9a2
0x43c99e:	add	r15d, 1
0x43c9a2:	mov	rax, qword ptr [r12]
0x43c9a6:	test	rax, rax
0x43c9a9:	je	0x43ca23
0x43c9ab:	cmp	dword ptr [rax + 4], r15d
0x43c9af:	jbe	0x43ca23
0x43c9b1:	mov	edx, r15d
0x43c9b4:	mov	r14, qword ptr [rax + rdx*8 + 8]
0x43c9b9:	test	r14, r14
0x43c9bc:	je	0x43ca5d
0x43c9c2:	mov	rdi, r14
0x43c9c5:	call	0x440210
0x43c9ca:	mov	rcx, rax
0x43c9cd:	mov	r13, rax
0x43c9d0:	sub	rcx, rbp
0x43c9d3:	mov	rsi, rcx
0x43c9d6:	neg	rsi
0x43c9d9:	cmovs	rsi, rcx
0x43c9dd:	cmp	esi, ebx
0x43c9df:	jae	0x43c99e
0x43c9e1:	mov	qword ptr [rsp + 8], rsi
0x43c9e6:	mov	rdi, rbp
0x43c9e9:	mov	rsi, rax
0x43c9ec:	call	0x43d530
0x43c9f1:	mov	rdi, qword ptr [rsp + 8]
0x43c9f6:	cmp	eax, edi
0x43c9f8:	jb	0x43c99e
0x43c9fa:	mov	esi, dword ptr [rsp + 0x1c]
0x43c9fe:	mov	rdi, qword ptr [rsp + 0x10]
0x43ca03:	mov	ecx, r13d
0x43ca06:	mov	rdx, r14
0x43ca09:	call	0x43d860
0x43ca0e:	cmp	eax, ebx
0x43ca10:	jae	0x43c99e
0x43ca12:	mov	qword ptr [rsp + 0x28], r13
0x43ca17:	mov	ebx, eax
0x43ca19:	mov	qword ptr [rsp + 0x20], r14
0x43ca1e:	jmp	0x43c99e
0x43ca23:	cmp	qword ptr [rsp + 0x20], 0
0x43ca29:	je	0x43ca51
0x43ca2b:	mov	rsi, qword ptr [rsp + 0x28]
0x43ca30:	mov	rdi, rbp
0x43ca33:	call	0x43d530
0x43ca38:	mov	r8d, eax
0x43ca3b:	xor	eax, eax
0x43ca3d:	cmp	r8d, ebx
0x43ca40:	jae	0x43ca51
0x43ca42:	add	rsp, 0x38
0x43ca46:	pop	rbx
0x43ca47:	pop	rbp
0x43ca48:	pop	r12
0x43ca4a:	pop	r13
0x43ca4c:	pop	r14
0x43ca4e:	pop	r15
0x43ca50:	ret	
0x43ca51:	xor	eax, eax
0x43ca53:	test	ebx, ebx
0x43ca55:	cmovne	rax, qword ptr [rsp + 0x20]
0x43ca5b:	jmp	0x43ca42
0x43ca5d:	jmp	0x40add2
0x43ca62:	nop	word ptr cs:[rax + rax]
0x43ca6d:	nop	dword ptr [rax]
0x43ca70:	endbr64	
0x43ca74:	push	r15
0x43ca76:	xor	r9d, r9d
0x43ca79:	push	r14
0x43ca7b:	push	r13
0x43ca7d:	push	r12
0x43ca7f:	mov	r12, rsi
0x43ca82:	push	rbp
0x43ca83:	mov	rbp, rdi
0x43ca86:	push	rbx
0x43ca87:	xor	ebx, ebx
0x43ca89:	sub	rsp, 0x158
0x43ca90:	mov	r10d, dword ptr [rip + 0xa7f81]
0x43ca97:	mov	r11, qword ptr [rip + 0xa95c2]
0x43ca9e:	jmp	0x43cab6
0x43caa0:	mov	r14, qword ptr [rbp]
0x43caa4:	cmp	byte ptr [r14 + r9], 0
0x43caa9:	je	0x40afac
0x43caaf:	add	ebx, 1
0x43cab2:	add	r9, 1
0x43cab6:	cmp	r10d, r9d
0x43cab9:	jg	0x43caa0
0x43cabb:	mov	rdi, qword ptr [rip + 0xa6786]
0x43cac2:	test	rdi, rdi
0x43cac5:	jne	0x43cf25
0x43cacb:	cmp	byte ptr [rip + 0xa677e], 0
0x43cad2:	je	0x43cb2a
0x43cad4:	mov	rax, qword ptr [rip + 0xa675d]
0x43cadb:	mov	rdx, qword ptr [rip + 0xa6786]
0x43cae2:	lea	rcx, [rdx + rax - 1]
0x43cae7:	cmp	byte ptr [rcx], 0x2d
0x43caea:	jne	0x40ade6
0x43caf0:	mov	byte ptr [rcx], 0x2e
0x43caf3:	cmp	byte ptr [rip + 0xa6756], 0
0x43cafa:	je	0x43cb2a
0x43cafc:	mov	r8, qword ptr [rip + 0xa6735]
0x43cb03:	test	r8, r8
0x43cb06:	je	0x40afbc
0x43cb0c:	mov	r10, qword ptr [rip + 0xa6755]
0x43cb13:	lea	r9, [r8 - 1]
0x43cb17:	cmp	byte ptr [r10 + r8 - 1], 0x2e
0x43cb1d:	jne	0x40af42
0x43cb23:	mov	qword ptr [rip + 0xa670e], r9
0x43cb2a:	mov	rdi, qword ptr [rip + 0xa6717]
0x43cb31:	call	0x403830
0x43cb36:	mov	qword ptr [rip + 0xa6707], 0
0x43cb41:	mov	qword ptr [rip + 0xa979c], 0
0x43cb4c:	mov	dword ptr [rip + 0xa979a], 0
0x43cb56:	mov	dword ptr [rip + 0xa9794], 0
0x43cb60:	mov	qword ptr [rip + 0xa66d5], 0
0x43cb6b:	test	ebx, ebx
0x43cb6d:	je	0x40aea4
0x43cb73:	cmp	qword ptr [rip + 0xa655d], 0
0x43cb7b:	jne	0x40af1a
0x43cb81:	cmp	dword ptr [rip + 0xa66a0], 1
0x43cb88:	jg	0x40aeae
0x43cb8e:	mov	esi, 0x4c4893
0x43cb93:	lea	rdi, [rsp + 0xe0]
0x43cb9b:	mov	ebx, dword ptr [rip + 0xa966f]
0x43cba1:	call	0x438420
0x43cba6:	mov	esi, 0x4c4893
0x43cbab:	lea	rdi, [rsp + 0x100]
0x43cbb3:	call	0x438420
0x43cbb8:	mov	r11, qword ptr [rip + 0x87681]
0x43cbbf:	mov	esi, 0x4c4893
0x43cbc4:	lea	rdi, [rsp + 0x128]
0x43cbcc:	mov	qword ptr [rsp + 0x120], r11
0x43cbd4:	call	0x438420
0x43cbd9:	mov	esi, 0x4be6a0
0x43cbde:	mov	rdi, rsp
0x43cbe1:	mov	byte ptr [rsp + 0x148], 0
0x43cbe9:	call	0x438420
0x43cbee:	mov	esi, 0x4be6b2
0x43cbf3:	lea	rdi, [rsp + 0x20]
0x43cbf8:	call	0x438420
0x43cbfd:	mov	edi, 0x4be6b8
0x43cc02:	call	0x403800
0x43cc07:	mov	rsi, rax
0x43cc0a:	test	rax, rax
0x43cc0d:	je	0x40ae7d
0x43cc13:	lea	rdi, [rsp + 0x40]
0x43cc18:	call	0x438420
0x43cc1d:	mov	rcx, qword ptr [rsp + 8]
0x43cc22:	mov	rsi, qword ptr [rsp]
0x43cc26:	or	rdx, 0xffffffffffffffff
0x43cc2a:	lea	rdi, [rsp + 0x40]
0x43cc2f:	call	0x443010
0x43cc34:	mov	r14, rax
0x43cc37:	cmp	rax, -1
0x43cc3b:	je	0x43d043
0x43cc41:	mov	rdx, qword ptr [rsp + 8]
0x43cc46:	or	rcx, 0xffffffffffffffff
0x43cc4a:	lea	rsi, [rsp + 0x40]
0x43cc4f:	lea	rdi, [rsp + 0x60]
0x43cc54:	add	rdx, rax
0x43cc57:	call	0x443d30
0x43cc5c:	mov	rcx, qword ptr [rsp + 0x28]
0x43cc61:	mov	rsi, qword ptr [rsp + 0x20]
0x43cc66:	xor	edx, edx
0x43cc68:	lea	rdi, [rsp + 0x60]
0x43cc6d:	call	0x442ea0
0x43cc72:	test	rax, rax
0x43cc75:	je	0x40adfa
0x43cc7b:	mov	rdi, qword ptr [rsp + 8]
0x43cc80:	xor	eax, eax
0x43cc82:	lea	rcx, [rsp + 0x124]
0x43cc8a:	lea	rdx, [rsp + 0x120]
0x43cc92:	mov	esi, 0x4be6c2
0x43cc97:	add	rdi, r14
0x43cc9a:	add	rdi, qword ptr [rsp + 0x40]
0x43cc9f:	call	0x403ce0
0x43cca4:	cmp	eax, 2
0x43cca7:	jne	0x43cf7e
0x43ccad:	mov	edi, dword ptr [rsp + 0x120]
0x43ccb4:	test	edi, edi
0x43ccb6:	jle	0x43cf7e
0x43ccbc:	cmp	dword ptr [rsp + 0x124], 0
0x43ccc4:	jle	0x43cf7e
0x43ccca:	xor	eax, eax
0x43cccc:	mov	esi, 1
0x43ccd1:	call	0x403960
0x43ccd6:	test	eax, eax
0x43ccd8:	js	0x43cf7e
0x43ccde:	mov	edi, dword ptr [rsp + 0x124]
0x43cce5:	xor	eax, eax
0x43cce7:	mov	esi, 1
0x43ccec:	call	0x403960
0x43ccf1:	test	eax, eax
0x43ccf3:	js	0x43cf7e
0x43ccf9:	mov	byte ptr [rsp + 0x148], 1
0x43cd01:	lea	r13, [rsp + 0xc0]
0x43cd09:	lea	r15, [rsp + 0xa0]
0x43cd11:	lea	rdi, [rsp + 0x60]
0x43cd16:	call	0x440d50
0x43cd1b:	mov	rdx, rsp
0x43cd1e:	mov	esi, 0x4be6e1
0x43cd23:	mov	rdi, r15
0x43cd26:	call	0x406a34
0x43cd2b:	mov	edx, 0x4bf898
0x43cd30:	mov	rsi, r15
0x43cd33:	mov	rdi, r13
0x43cd36:	call	0x4385e0
0x43cd3b:	mov	rsi, r13
0x43cd3e:	lea	rdi, [rsp + 0xe0]
0x43cd46:	call	0x406b62
0x43cd4b:	mov	rdi, r13
0x43cd4e:	call	0x440d50
0x43cd53:	mov	rdi, r15
0x43cd56:	call	0x440d50
0x43cd5b:	lea	rdi, [rsp + 0x40]
0x43cd60:	call	0x440d50
0x43cd65:	cmp	qword ptr [rsp + 0xe8], 0
0x43cd6e:	je	0x43cdac
0x43cd70:	lea	rdx, [rsp + 0xe0]
0x43cd78:	mov	esi, 0x4be6f8
0x43cd7d:	lea	rdi, [rsp + 0xc0]
0x43cd85:	call	0x406a34
0x43cd8a:	lea	rdi, [rsp + 0xe0]
0x43cd92:	lea	rsi, [rsp + 0xc0]
0x43cd9a:	call	0x406b62
0x43cd9f:	lea	rdi, [rsp + 0xc0]
0x43cda7:	call	0x440d50
0x43cdac:	lea	rdi, [rsp + 0x20]
0x43cdb1:	call	0x440d50
0x43cdb6:	mov	rdi, rsp
0x43cdb9:	call	0x440d50
0x43cdbe:	cmp	byte ptr [rsp + 0x148], 0
0x43cdc6:	je	0x43cefc
0x43cdcc:	lea	rdi, [rsp + 0x128]
0x43cdd4:	call	0x440d50
0x43cdd9:	lea	rdi, [rsp + 0x100]
0x43cde1:	call	0x440d50
0x43cde6:	lea	rdi, [rsp + 0xe0]
0x43cdee:	call	0x440d50
0x43cdf3:	cmp	dword ptr [rip + 0xa7c16], 0
0x43cdfa:	jne	0x43ce8b
0x43ce00:	mov	rdi, qword ptr [rip + 0xa5799]
0x43ce07:	mov	esi, 0x4be715
0x43ce0c:	call	0x403be0
0x43ce11:	test	eax, eax
0x43ce13:	jne	0x43ce34
0x43ce15:	xor	ecx, ecx
0x43ce17:	mov	edx, 1
0x43ce1c:	mov	esi, 0x4be715
0x43ce21:	mov	edi, 0x4e24d0
0x43ce26:	call	0x439620
0x43ce2b:	test	rax, rax
0x43ce2e:	je	0x40af2c
0x43ce34:	xor	edx, edx
0x43ce36:	mov	esi, 0x4be733
0x43ce3b:	mov	edi, 0x4be71e
0x43ce40:	call	0x42f980
0x43ce45:	test	al, al
0x43ce47:	jne	0x43ce7c
0x43ce49:	mov	edi, 0x4e24d0
0x43ce4e:	xor	ecx, ecx
0x43ce50:	mov	edx, 4
0x43ce55:	mov	esi, 0x4be734
0x43ce5a:	call	0x439620
0x43ce5f:	mov	rdi, rax
0x43ce62:	test	rax, rax
0x43ce65:	je	0x40af99
0x43ce6b:	mov	esi, 0x42ff50
0x43ce70:	call	0x43bbb0
0x43ce75:	mov	qword ptr [rip + 0xa571c], rax
0x43ce7c:	xor	edx, edx
0x43ce7e:	mov	rsi, r12
0x43ce81:	mov	edi, 0x4e2590
0x43ce86:	call	0x43bc00
0x43ce8b:	xor	ecx, ecx
0x43ce8d:	mov	edx, 1
0x43ce92:	mov	esi, 0x45b4fd
0x43ce97:	mov	edi, 0x4e24d0
0x43ce9c:	call	0x43bdb0
0x43cea1:	mov	rdi, rax
0x43cea4:	call	0x4384e0
0x43cea9:	mov	ecx, 1
0x43ceae:	mov	edx, 1
0x43ceb3:	mov	esi, 0x45b50b
0x43ceb8:	mov	edi, 0x4e24b0
0x43cebd:	call	0x43bdb0
0x43cec2:	mov	rdi, rax
0x43cec5:	call	0x4384e0
0x43ceca:	cmp	dword ptr [rip + 0xa6357], 1
0x43ced1:	je	0x40af56
0x43ced7:	mov	rdi, qword ptr [rip + 0xa555a]
0x43cede:	call	0x43c240
0x43cee3:	test	eax, eax
0x43cee5:	js	0x43d0bb
0x43ceeb:	cmp	dword ptr [rip + 0xa931f], ebx
0x43cef1:	je	0x40aea4
0x43cef7:	jmp	0x40af1a
0x43cefc:	cmp	qword ptr [rsp + 0x108], 0
0x43cf05:	je	0x43cdcc
0x43cf0b:	mov	rdi, qword ptr [rsp + 0x100]
0x43cf13:	call	0x42db40
0x43cf18:	mov	rdi, rax
0x43cf1b:	call	0x4384e0
0x43cf20:	jmp	0x43cdcc
0x43cf25:	cmp	byte ptr [rdi], 0
0x43cf28:	je	0x43cacb
0x43cf2e:	mov	r13, qword ptr [rip + 0xa6333]
0x43cf35:	test	r13, r13
0x43cf38:	jne	0x43d058
0x43cf3e:	xor	edx, edx
0x43cf40:	mov	esi, 0x4cd754
0x43cf45:	xor	eax, eax
0x43cf47:	call	0x42d870
0x43cf4c:	mov	qword ptr [rip + 0xa6315], rax
0x43cf53:	mov	rdi, qword ptr [rip + 0xa62ee]
0x43cf5a:	call	0x4039e0
0x43cf5f:	mov	rsi, qword ptr [rip + 0xa62d2]
0x43cf66:	mov	byte ptr [rip + 0xa62e3], 1
0x43cf6d:	lea	rdi, [rsi + rax + 1]
0x43cf72:	mov	qword ptr [rip + 0xa62bf], rdi
0x43cf79:	jmp	0x43cafc
0x43cf7e:	mov	rcx, r14
0x43cf81:	xor	edx, edx
0x43cf83:	lea	rsi, [rsp + 0x40]
0x43cf88:	lea	rdi, [rsp + 0x80]
0x43cf90:	lea	r13, [rsp + 0xc0]
0x43cf98:	call	0x443d30
0x43cf9d:	mov	rdx, r14
0x43cfa0:	mov	esi, 0x20
0x43cfa5:	lea	rdi, [rsp + 0x40]
0x43cfaa:	call	0x442fc0
0x43cfaf:	mov	rdx, rax
0x43cfb2:	cmp	rax, -1
0x43cfb6:	jne	0x43d080
0x43cfbc:	lea	rdx, [rsp + 0x80]
0x43cfc4:	mov	rdi, r13
0x43cfc7:	mov	esi, 0x4be6c8
0x43cfcc:	call	0x406a34
0x43cfd1:	mov	rsi, r13
0x43cfd4:	lea	rdi, [rsp + 0x100]
0x43cfdc:	lea	r15, [rsp + 0xa0]
0x43cfe4:	call	0x406b62
0x43cfe9:	mov	rdi, r13
0x43cfec:	call	0x440d50
0x43cff1:	mov	rdx, rsp
0x43cff4:	mov	rdi, r15
0x43cff7:	mov	esi, 0x4be6d3
0x43cffc:	call	0x406a34
0x43d001:	mov	edx, 0x4be6e4
0x43d006:	mov	rsi, r15
0x43d009:	mov	rdi, r13
0x43d00c:	call	0x4385e0
0x43d011:	mov	rsi, r13
0x43d014:	lea	rdi, [rsp + 0xe0]
0x43d01c:	call	0x406b62
0x43d021:	mov	rdi, r13
0x43d024:	call	0x440d50
0x43d029:	mov	rdi, r15
0x43d02c:	call	0x440d50
0x43d031:	lea	rdi, [rsp + 0x80]
0x43d039:	call	0x440d50
0x43d03e:	jmp	0x43cd11
0x43d043:	lea	r13, [rsp + 0xc0]
0x43d04b:	lea	r15, [rsp + 0xa0]
0x43d053:	jmp	0x43cd1b
0x43d058:	mov	rsi, rdi
0x43d05b:	xor	ecx, ecx
0x43d05d:	mov	rdi, r13
0x43d060:	mov	edx, 0x4cd754
0x43d065:	xor	eax, eax
0x43d067:	call	0x42d870
0x43d06c:	mov	rdi, r13
0x43d06f:	mov	qword ptr [rip + 0xa61f2], rax
0x43d076:	call	0x403830
0x43d07b:	jmp	0x43cf53
0x43d080:	or	rcx, 0xffffffffffffffff
0x43d084:	lea	rsi, [rsp + 0x40]
0x43d089:	mov	rdi, r13
0x43d08c:	call	0x443d30
0x43d091:	mov	rdx, qword ptr [rsp + 0xc8]
0x43d099:	mov	rsi, qword ptr [rsp + 0xc0]
0x43d0a1:	lea	rdi, [rsp + 0x80]
0x43d0a9:	call	0x442aa0
0x43d0ae:	mov	rdi, r13
0x43d0b1:	call	0x440d50
0x43d0b6:	jmp	0x43cfbc
0x43d0bb:	mov	dword ptr [rip + 0xa6013], 1
0x43d0c5:	jmp	0x43ceeb
0x43d0ca:	nop	word ptr [rax + rax]
0x43d0d0:	endbr64	
0x43d0d4:	push	r12
0x43d0d6:	mov	r12d, esi
0x43d0d9:	push	rbp
0x43d0da:	mov	ebp, edx
0x43d0dc:	push	rbx
0x43d0dd:	sub	rsp, 0x10
0x43d0e1:	call	0x42db40
0x43d0e6:	mov	rbx, rax
0x43d0e9:	test	r12d, r12d
0x43d0ec:	je	0x43d129
0x43d0ee:	mov	r12, qword ptr [rip + 0xa9123]
0x43d0f5:	movq	xmm0, rax
0x43d0fa:	movq	xmm1, r12
0x43d0ff:	punpcklqdq	xmm0, xmm1
0x43d103:	movaps	xmmword ptr [rsp], xmm0
0x43d107:	test	r12, r12
0x43d10a:	jne	0x40b005
0x43d110:	mov	edi, 0x10
0x43d115:	call	0x42db10
0x43d11a:	movdqa	xmm2, xmmword ptr [rsp]
0x43d11f:	mov	qword ptr [rip + 0xa90f2], rax
0x43d126:	movups	xmmword ptr [rax], xmm2
0x43d129:	test	ebp, ebp
0x43d12b:	jne	0x43d136
0x43d12d:	add	rsp, 0x10
0x43d131:	pop	rbx
0x43d132:	pop	rbp
0x43d133:	pop	r12
0x43d135:	ret	
0x43d136:	mov	rbp, qword ptr [rip + 0xa78e3]
0x43d13d:	movq	xmm3, rbx
0x43d142:	movq	xmm4, rbp
0x43d147:	punpcklqdq	xmm3, xmm4
0x43d14b:	movaps	xmmword ptr [rsp], xmm3
0x43d14f:	test	rbp, rbp
0x43d152:	jne	0x40afec
0x43d158:	mov	edi, 0x10
0x43d15d:	call	0x42db10
0x43d162:	movdqa	xmm5, xmmword ptr [rsp]
0x43d167:	mov	qword ptr [rip + 0xa78b2], rax
0x43d16e:	movups	xmmword ptr [rax], xmm5
0x43d171:	jmp	0x43d12d
0x43d173:	nop	word ptr cs:[rax + rax]
0x43d17e:	nop	
0x43d180:	push	r15
0x43d182:	push	r14
0x43d184:	push	r13
0x43d186:	push	r12
0x43d188:	push	rbp
0x43d189:	push	rbx
0x43d18a:	push	rdx
0x43d18b:	mov	rax, qword ptr [rip + 0xa77ee]
0x43d192:	sub	rax, qword ptr [rip + 0xa77df]
0x43d199:	cmp	rax, 0x13
0x43d19d:	jbe	0x40b296
0x43d1a3:	mov	rdx, qword ptr [rip + 0xa77ce]
0x43d1aa:	movdqa	xmm0, xmmword ptr [rip + 0x8706e]
0x43d1b2:	xor	ebp, ebp
0x43d1b4:	mov	esi, 1
0x43d1b9:	mov	dword ptr [rdx + 0x10], 0x3d534e4f
0x43d1c0:	movups	xmmword ptr [rdx], xmm0
0x43d1c3:	mov	rbx, qword ptr [rip + 0xa77ae]
0x43d1ca:	mov	r8, qword ptr [rip + 0xa77af]
0x43d1d1:	add	rbx, 0x14
0x43d1d5:	mov	qword ptr [rip + 0xa779c], rbx
0x43d1dc:	cmp	dword ptr [rip + 0xa784e], ebp
0x43d1e2:	jle	0x43d3bb
0x43d1e8:	test	esi, esi
0x43d1ea:	jne	0x43d211
0x43d1ec:	cmp	r8, rbx
0x43d1ef:	je	0x40b27b
0x43d1f5:	mov	byte ptr [rbx], 0x20
0x43d1f8:	mov	rbx, qword ptr [rip + 0xa7779]
0x43d1ff:	mov	r8, qword ptr [rip + 0xa777a]
0x43d206:	add	rbx, 1
0x43d20a:	mov	qword ptr [rip + 0xa7767], rbx
0x43d211:	imul	r12, rbp, 0x18
0x43d215:	mov	rsi, qword ptr [rip + 0xa780c]
0x43d21c:	mov	r14d, dword ptr [rsi + r12 + 0x10]
0x43d221:	and	r14d, 0x14
0x43d225:	cmp	r14d, 4
0x43d229:	je	0x43d3b0
0x43d22f:	sub	r8, rbx
0x43d232:	cmp	r8, 1
0x43d236:	jbe	0x40b240
0x43d23c:	mov	word ptr [rbx], 0x2d27
0x43d241:	mov	r13, qword ptr [rip + 0xa77e0]
0x43d248:	add	qword ptr [rip + 0xa7728], 2
0x43d250:	mov	r13, qword ptr [r13 + r12]
0x43d255:	mov	esi, 0x27
0x43d25a:	mov	rdi, r13
0x43d25d:	call	0x403a40
0x43d262:	mov	r14, qword ptr [rip + 0xa7717]
0x43d269:	sub	r14, qword ptr [rip + 0xa7708]
0x43d270:	mov	rbx, rax
0x43d273:	test	rax, rax
0x43d276:	jne	0x40b1e7
0x43d27c:	mov	rdi, r13
0x43d27f:	call	0x4039e0
0x43d284:	mov	r15, rax
0x43d287:	cmp	rax, r14
0x43d28a:	ja	0x40b1d5
0x43d290:	mov	rdi, qword ptr [rip + 0xa76e1]
0x43d297:	mov	rdx, r15
0x43d29a:	mov	rsi, r13
0x43d29d:	call	0x403c60
0x43d2a2:	add	r15, qword ptr [rip + 0xa76cf]
0x43d2a9:	cmp	r15, qword ptr [rip + 0xa76d0]
0x43d2b0:	mov	qword ptr [rip + 0xa76c1], r15
0x43d2b7:	je	0x40b1c1
0x43d2bd:	mov	rdi, qword ptr [rip + 0xa76b4]
0x43d2c4:	mov	byte ptr [rdi], 0x27
0x43d2c7:	mov	r8, qword ptr [rip + 0xa775a]
0x43d2ce:	add	qword ptr [rip + 0xa76a2], 1
0x43d2d6:	mov	rbx, qword ptr [r8 + r12 + 8]
0x43d2db:	test	rbx, rbx
0x43d2de:	je	0x43d3a2
0x43d2e4:	cmp	qword ptr [rbx], 0
0x43d2e8:	je	0x43d3a2
0x43d2ee:	mov	r12, qword ptr [rip + 0xa768b]
0x43d2f5:	sub	r12, qword ptr [rip + 0xa767c]
0x43d2fc:	cmp	r12, 1
0x43d300:	jbe	0x40b18d
0x43d306:	mov	r9, qword ptr [rip + 0xa766b]
0x43d30d:	mov	word ptr [r9], 0x2720
0x43d313:	add	qword ptr [rip + 0xa765d], 2
0x43d31b:	mov	r13, qword ptr [rbx]
0x43d31e:	mov	esi, 0x27
0x43d323:	mov	rdi, r13
0x43d326:	call	0x403a40
0x43d32b:	mov	r14, qword ptr [rip + 0xa764e]
0x43d332:	sub	r14, qword ptr [rip + 0xa763f]
0x43d339:	mov	r12, rax
0x43d33c:	test	rax, rax
0x43d33f:	jne	0x40b133
0x43d345:	mov	rdi, r13
0x43d348:	call	0x4039e0
0x43d34d:	mov	r15, rax
0x43d350:	cmp	rax, r14
0x43d353:	ja	0x40b121
0x43d359:	mov	rdi, qword ptr [rip + 0xa7618]
0x43d360:	mov	rdx, r15
0x43d363:	mov	rsi, r13
0x43d366:	call	0x403c60
0x43d36b:	add	r15, qword ptr [rip + 0xa7606]
0x43d372:	cmp	r15, qword ptr [rip + 0xa7607]
0x43d379:	mov	qword ptr [rip + 0xa75f8], r15
0x43d380:	je	0x40b10d
0x43d386:	mov	r10, qword ptr [rip + 0xa75eb]
0x43d38d:	add	rbx, 8
0x43d391:	mov	byte ptr [r10], 0x27
0x43d395:	add	qword ptr [rip + 0xa75db], 1
0x43d39d:	jmp	0x43d2db
0x43d3a2:	mov	r8, qword ptr [rip + 0xa75d7]
0x43d3a9:	mov	rbx, qword ptr [rip + 0xa75c8]
0x43d3b0:	add	rbp, 1
0x43d3b4:	xor	esi, esi
0x43d3b6:	jmp	0x43d1dc
0x43d3bb:	cmp	qword ptr [rip + 0xa5ea5], 0
0x43d3c3:	jne	0x43d44e
0x43d3c9:	cmp	r8, qword ptr [rip + 0xa75a8]
0x43d3d0:	je	0x40b2b6
0x43d3d6:	mov	rbp, qword ptr [rip + 0xa759b]
0x43d3dd:	mov	byte ptr [rbp], 0
0x43d3e1:	mov	r9, qword ptr [rip + 0xa7590]
0x43d3e8:	mov	rdi, qword ptr [rip + 0xa7581]
0x43d3ef:	add	r9, 1
0x43d3f3:	cmp	r9, rdi
0x43d3f6:	je	0x40b2aa
0x43d3fc:	mov	r10, qword ptr [rip + 0xa758d]
0x43d403:	mov	r11, qword ptr [rip + 0xa7576]
0x43d40a:	add	r9, r10
0x43d40d:	not	r10
0x43d410:	mov	rax, r11
0x43d413:	sub	rax, qword ptr [rip + 0xa754e]
0x43d41a:	and	r9, r10
0x43d41d:	mov	r15, r9
0x43d420:	sub	r15, qword ptr [rip + 0xa7541]
0x43d427:	cmp	r15, rax
0x43d42a:	cmova	r9, r11
0x43d42e:	movq	xmm1, r9
0x43d433:	punpcklqdq	xmm1, xmm1
0x43d437:	movaps	xmmword ptr [rip + 0xa7532], xmm1
0x43d43e:	pop	rax
0x43d43f:	pop	rbx
0x43d440:	pop	rbp
0x43d441:	pop	r12
0x43d443:	pop	r13
0x43d445:	pop	r14
0x43d447:	pop	r15
0x43d449:	jmp	0x4384e0
0x43d44e:	test	esi, esi
0x43d450:	jne	0x43d46d
0x43d452:	cmp	r8, rbx
0x43d455:	je	0x40b03c
0x43d45b:	mov	byte ptr [rbx], 0x20
0x43d45e:	mov	r8, qword ptr [rip + 0xa751b]
0x43d465:	add	qword ptr [rip + 0xa750b], 1
0x43d46d:	sub	r8, qword ptr [rip + 0xa7504]
0x43d474:	cmp	r8, 0xb
0x43d478:	jbe	0x40b057
0x43d47e:	mov	rcx, qword ptr [rip + 0xa74f3]
0x43d485:	movabs	rsi, 0x6964706d75642d27
0x43d48f:	mov	qword ptr [rcx], rsi
0x43d492:	mov	rbp, qword ptr [rip + 0xa5dcf]
0x43d499:	mov	dword ptr [rcx + 8], 0x27202772
0x43d4a0:	add	qword ptr [rip + 0xa74d0], 0xc
0x43d4a8:	mov	esi, 0x27
0x43d4ad:	mov	rdi, rbp
0x43d4b0:	call	0x403a40
0x43d4b5:	mov	r12, qword ptr [rip + 0xa74c4]
0x43d4bc:	sub	r12, qword ptr [rip + 0xa74b5]
0x43d4c3:	mov	r14, rax
0x43d4c6:	test	rax, rax
0x43d4c9:	jne	0x40b06b
0x43d4cf:	mov	rdi, rbp
0x43d4d2:	call	0x4039e0
0x43d4d7:	mov	r13, rax
0x43d4da:	cmp	rax, r12
0x43d4dd:	ja	0x40b0c4
0x43d4e3:	mov	rdi, qword ptr [rip + 0xa748e]
0x43d4ea:	mov	rdx, r13
0x43d4ed:	mov	rsi, rbp
0x43d4f0:	call	0x403c60
0x43d4f5:	add	r13, qword ptr [rip + 0xa747c]
0x43d4fc:	cmp	r13, qword ptr [rip + 0xa747d]
0x43d503:	mov	qword ptr [rip + 0xa746e], r13
0x43d50a:	je	0x40b0d6
0x43d510:	mov	rdi, qword ptr [rip + 0xa7461]
0x43d517:	mov	byte ptr [rdi], 0x27
0x43d51a:	mov	r8, qword ptr [rip + 0xa745f]
0x43d521:	add	qword ptr [rip + 0xa744f], 1
0x43d529:	jmp	0x43d3c9
0x43d52e:	nop	
0x43d530:	endbr64	
0x43d534:	cmp	rdi, rsi
0x43d537:	mov	rax, rsi
0x43d53a:	cmovae	rax, rdi
0x43d53e:	cmova	rdi, rsi
0x43d542:	cmp	rax, rdi
0x43d545:	jb	0x40b2ca
0x43d54b:	cmp	rax, 1
0x43d54f:	jbe	0x43d588
0x43d551:	mov	rdx, rax
0x43d554:	sub	rdx, rdi
0x43d557:	cmp	rdx, 1
0x43d55b:	ja	0x43d570
0x43d55d:	cmp	rax, 5
0x43d561:	jbe	0x43d582
0x43d563:	mov	esi, 3
0x43d568:	xor	edx, edx
0x43d56a:	div	rsi
0x43d56d:	add	eax, eax
0x43d56f:	ret	
0x43d570:	add	rax, 2
0x43d574:	mov	ecx, 3
0x43d579:	xor	edx, edx
0x43d57b:	add	rax, rax
0x43d57e:	div	rcx
0x43d581:	ret	
0x43d582:	mov	eax, 2
0x43d587:	ret	
0x43d588:	xor	eax, eax
0x43d58a:	ret	
0x43d58b:	nop	dword ptr [rax + rax]
0x43d590:	push	rbp
0x43d591:	mov	rbp, rsp
0x43d594:	push	r15
0x43d596:	push	r14
0x43d598:	push	r13
0x43d59a:	push	r12
0x43d59c:	push	rbx
0x43d59d:	sub	rsp, 0x58
0x43d5a1:	mov	eax, dword ptr [rip + 0xa8c81]
0x43d5a7:	mov	dword ptr [rbp - 0x54], eax
0x43d5aa:	test	eax, eax
0x43d5ac:	jne	0x40b4c5
0x43d5b2:	cmp	qword ptr [rip + 0xa8a36], 0
0x43d5ba:	mov	r12, qword ptr [rip + 0xa5d07]
0x43d5c1:	jne	0x40b4d9
0x43d5c7:	xor	ebx, ebx
0x43d5c9:	mov	r15d, 1
0x43d5cf:	jmp	0x43d5eb
0x43d5d1:	mov	rdi, qword ptr [r12 + rbx*8 + 8]
0x43d5d6:	mov	esi, 0x4be7ac
0x43d5db:	call	0x403be0
0x43d5e0:	cmp	eax, 1
0x43d5e3:	adc	r15d, 0
0x43d5e7:	add	rbx, 1
0x43d5eb:	test	r12, r12
0x43d5ee:	je	0x43d5f7
0x43d5f0:	cmp	dword ptr [r12 + 4], ebx
0x43d5f5:	ja	0x43d5d1
0x43d5f7:	movsxd	r8, r15d
0x43d5fa:	mov	r11, rsp
0x43d5fd:	shl	r8, 4
0x43d601:	lea	r9, [r8 + 0x10]
0x43d605:	mov	r10, r9
0x43d608:	and	r10, 0xfffffffffffff000
0x43d60f:	sub	r11, r10
0x43d612:	cmp	rsp, r11
0x43d615:	je	0x43d629
0x43d617:	sub	rsp, 0x1000
0x43d61e:	or	qword ptr [rsp + 0xff8], 0
0x43d627:	jmp	0x43d612
0x43d629:	and	r9d, 0xfff
0x43d630:	sub	rsp, r9
0x43d633:	test	r9, r9
0x43d636:	jne	0x43d794
0x43d63c:	lea	rsi, [rbp - 0x38]
0x43d640:	mov	edi, 0x4e32c8
0x43d645:	lea	rbx, [rsp + 0xf]
0x43d64a:	mov	qword ptr [rbp - 0x38], 0
0x43d652:	call	0x43b210
0x43d657:	mov	r14, qword ptr [rip + 0xa5c6a]
0x43d65e:	and	rbx, 0xfffffffffffffff0
0x43d662:	cmp	qword ptr [rip + 0xa8986], 0
0x43d66a:	mov	rsi, qword ptr [r14 + 8]
0x43d66e:	lea	r12, [r14 + 8]
0x43d672:	movq	xmm4, r12
0x43d677:	movq	xmm0, rsi
0x43d67c:	punpcklqdq	xmm0, xmm4
0x43d680:	movaps	xmmword ptr [rbx], xmm0
0x43d683:	jne	0x43d6aa
0x43d685:	xor	ecx, ecx
0x43d687:	mov	edx, 1
0x43d68c:	mov	edi, 0x4e24d0
0x43d691:	call	0x439620
0x43d696:	test	rax, rax
0x43d699:	je	0x40b452
0x43d69f:	mov	qword ptr [r14 + 8], rax
0x43d6a3:	mov	r14, qword ptr [rip + 0xa5c1e]
0x43d6aa:	mov	dword ptr [rbp - 0x48], 1
0x43d6b1:	xor	r15d, r15d
0x43d6b4:	jmp	0x43d6dd
0x43d6b6:	mov	r13d, r15d
0x43d6b9:	mov	rdi, qword ptr [r14 + r13*8 + 8]
0x43d6be:	test	rdi, rdi
0x43d6c1:	je	0x43d78b
0x43d6c7:	mov	esi, 0x4be7ac
0x43d6cc:	add	r15, 1
0x43d6d0:	call	0x403be0
0x43d6d5:	test	eax, eax
0x43d6d7:	je	0x40b45e
0x43d6dd:	mov	r12d, r15d
0x43d6e0:	test	r14, r14
0x43d6e3:	je	0x43d6eb
0x43d6e5:	cmp	dword ptr [r14 + 4], r15d
0x43d6e9:	ja	0x43d6b6
0x43d6eb:	cmp	dword ptr [rip + 0xa88ee], 0
0x43d6f2:	jne	0x43d79f
0x43d6f8:	cmp	dword ptr [rip + 0xa88d1], 0
0x43d6ff:	mov	rdx, qword ptr [rip + 0xa8bd2]
0x43d706:	mov	rsi, qword ptr [rip + 0xa72bb]
0x43d70d:	jne	0x40b4bb
0x43d713:	cmp	qword ptr [rip + 0xa5afd], 1
0x43d71b:	sbb	edi, edi
0x43d71d:	add	edi, 3
0x43d720:	call	0x4353a0
0x43d725:	mov	qword ptr [rbp - 0x50], rbx
0x43d729:	mov	r15, rbx
0x43d72c:	xor	r13d, r13d
0x43d72f:	mov	qword ptr [rbp - 0x60], rbx
0x43d733:	mov	r12, rax
0x43d736:	mov	rcx, qword ptr [r15 + 8]
0x43d73a:	mov	r14, qword ptr [r15]
0x43d73d:	add	r13d, 1
0x43d741:	xor	esi, esi
0x43d743:	lea	rdi, [rbp - 0x38]
0x43d747:	mov	rbx, qword ptr [rcx]
0x43d74a:	push	rax
0x43d74b:	push	rdi
0x43d74c:	mov	rdi, r12
0x43d74f:	cmp	r14, rbx
0x43d752:	sete	sil
0x43d756:	xor	edx, edx
0x43d758:	add	esi, esi
0x43d75a:	cmp	r13d, dword ptr [rbp - 0x48]
0x43d75e:	sete	dl
0x43d761:	xor	r9d, r9d
0x43d764:	xor	r8d, r8d
0x43d767:	or	esi, edx
0x43d769:	mov	rdx, rbx
0x43d76c:	call	0x435470
0x43d771:	pop	rdx
0x43d772:	pop	rcx
0x43d773:	test	rax, rax
0x43d776:	jne	0x43d831
0x43d77c:	cmp	r13d, 1
0x43d780:	je	0x40b54b
0x43d786:	jmp	0x40b53e
0x43d78b:	add	r15, 1
0x43d78f:	jmp	0x43d6dd
0x43d794:	or	qword ptr [rsp + r9 - 8], 0
0x43d79a:	jmp	0x43d63c
0x43d79f:	cmp	dword ptr [rip + 0xa88ce], 0
0x43d7a6:	jne	0x40b2df
0x43d7ac:	lea	r15, [rbx + 8]
0x43d7b0:	xor	r13d, r13d
0x43d7b3:	cmp	dword ptr [rip + 0xa5a5a], 0
0x43d7ba:	mov	r12, qword ptr [r15]
0x43d7bd:	je	0x43d7e2
0x43d7bf:	jmp	0x43d827
0x43d7c1:	cmp	byte ptr [rcx], 0
0x43d7c4:	je	0x40b370
0x43d7ca:	mov	rdi, rax
0x43d7cd:	mov	edx, 0x4c6bef
0x43d7d2:	mov	esi, 1
0x43d7d7:	xor	eax, eax
0x43d7d9:	call	0x403e90
0x43d7de:	add	r12, 8
0x43d7e2:	mov	rcx, qword ptr [r12]
0x43d7e6:	mov	rax, qword ptr [rip + 0xa58b3]
0x43d7ed:	test	rcx, rcx
0x43d7f0:	jne	0x43d7c1
0x43d7f2:	add	r13d, 1
0x43d7f6:	cmp	r13d, dword ptr [rbp - 0x48]
0x43d7fa:	jne	0x43d82c
0x43d7fc:	mov	rsi, rax
0x43d7ff:	mov	edi, 0xa
0x43d804:	call	0x403b30
0x43d809:	mov	rdi, qword ptr [rip + 0xa5890]
0x43d810:	call	0x403cb0
0x43d815:	cmp	dword ptr [rip + 0xa59f8], 0
0x43d81c:	je	0x43d6f8
0x43d822:	jmp	0x40b38c
0x43d827:	jmp	0x40b32a
0x43d82c:	jmp	0x40b33f
0x43d831:	mov	qword ptr [rbp - 0x48], rax
0x43d835:	call	0x403890
0x43d83a:	mov	edi, dword ptr [rbp - 0x38]
0x43d83d:	mov	esi, 0x4be75e
0x43d842:	mov	rdx, rbx
0x43d845:	mov	r11d, 0x4be779
0x43d84b:	mov	rcx, qword ptr [rbp - 0x48]
0x43d84f:	test	edi, edi
0x43d851:	mov	dword ptr [rax], edi
0x43d853:	cmove	rsi, r11
0x43d857:	xor	edi, edi
0x43d859:	xor	eax, eax
0x43d85b:	call	0x43f5d0
0x43d860:	endbr64	
0x43d864:	push	r15
0x43d866:	push	r14
0x43d868:	push	r13
0x43d86a:	push	r12
0x43d86c:	push	rbp
0x43d86d:	push	rbx
0x43d86e:	sub	rsp, 0x38
0x43d872:	mov	dword ptr [rsp + 0x14], ecx
0x43d876:	test	esi, esi
0x43d878:	je	0x40bd24
0x43d87e:	cmp	dword ptr [rsp + 0x14], 0
0x43d883:	mov	r14d, esi
0x43d886:	je	0x40bd3a
0x43d88c:	lea	r12d, [rsi + 1]
0x43d890:	mov	r15, rdi
0x43d893:	mov	r13, rdx
0x43d896:	movabs	rax, 0x1ffffffffffffffe
0x43d8a0:	movsxd	rbx, r12d
0x43d8a3:	cmp	rbx, rax
0x43d8a6:	ja	0x40bd31
0x43d8ac:	shl	rbx, 2
0x43d8b0:	mov	rdi, rbx
0x43d8b3:	call	0x440460
0x43d8b8:	mov	rdi, rbx
0x43d8bb:	mov	qword ptr [rsp + 0x18], rax
0x43d8c0:	call	0x440460
0x43d8c5:	mov	rdi, rbx
0x43d8c8:	mov	rbp, rax
0x43d8cb:	call	0x440460
0x43d8d0:	xor	ecx, ecx
0x43d8d2:	mov	r12, rax
0x43d8d5:	jmp	0x43d8e2
0x43d8d7:	lea	edx, [rcx + rcx]
0x43d8da:	mov	dword ptr [rbp + rcx*4], edx
0x43d8de:	add	rcx, 1
0x43d8e2:	cmp	r14d, ecx
0x43d8e5:	jge	0x43d8d7
0x43d8e7:	xor	eax, eax
0x43d8e9:	test	r14d, r14d
0x43d8ec:	lea	edx, [r14 - 1]
0x43d8f0:	cmovns	eax, r14d
0x43d8f4:	mov	dword ptr [rsp + 0x28], edx
0x43d8f8:	xor	ebx, ebx
0x43d8fa:	add	eax, 1
0x43d8fd:	cdqe	
0x43d8ff:	shl	rax, 2
0x43d903:	mov	qword ptr [rsp + 8], rax
0x43d908:	mov	ecx, ebx
0x43d90a:	cmp	dword ptr [rsp + 0x14], ebx
0x43d90e:	jle	0x43dc8e
0x43d914:	lea	eax, [rbx + rbx + 2]
0x43d918:	mov	dword ptr [r12], eax
0x43d91c:	test	r14d, r14d
0x43d91f:	jle	0x43dc2d
0x43d925:	movzx	edi, byte ptr [r13 + rbx]
0x43d92b:	mov	dword ptr [rsp + 0x20], edi
0x43d92f:	mov	edx, edi
0x43d931:	cmp	r14d, 2
0x43d935:	jle	0x43dcc1
0x43d93b:	movsxd	r9, edi
0x43d93e:	mov	dword ptr [rsp + 0x24], r14d
0x43d943:	mov	r8d, dword ptr [rbp]
0x43d947:	xor	esi, esi
0x43d949:	mov	qword ptr [rsp], r9
0x43d94d:	movzx	r10d, byte ptr [r15 + rsi]
0x43d952:	cmp	r10b, dl
0x43d955:	je	0x43dcd0
0x43d95b:	mov	r14, qword ptr [rsp]
0x43d95f:	movzx	r11d, r10b
0x43d963:	xor	r9d, r9d
0x43d966:	movzx	edi, byte ptr [r14 + 0x48b760]
0x43d96e:	cmp	byte ptr [r11 + 0x48b760], dil
0x43d975:	setne	r9b
0x43d979:	add	r9d, 1
0x43d97d:	mov	edi, dword ptr [rbp + rsi*4 + 4]
0x43d981:	add	eax, 2
0x43d984:	lea	r11d, [rdi + 2]
0x43d988:	cmp	eax, r11d
0x43d98b:	cmova	eax, r11d
0x43d98f:	add	r9d, r8d
0x43d992:	cmp	eax, r9d
0x43d995:	cmova	eax, r9d
0x43d999:	test	ecx, ecx
0x43d99b:	jle	0x43d9ac
0x43d99d:	test	esi, esi
0x43d99f:	jle	0x43d9ac
0x43d9a1:	cmp	r10b, byte ptr [r13 + rbx - 1]
0x43d9a6:	je	0x43dcd8
0x43d9ac:	movzx	r11d, byte ptr [r15 + rsi + 1]
0x43d9b2:	mov	dword ptr [r12 + rsi*4 + 4], eax
0x43d9b7:	cmp	dl, r11b
0x43d9ba:	je	0x43dcc8
0x43d9c0:	mov	r14, qword ptr [rsp]
0x43d9c4:	movzx	r8d, r11b
0x43d9c8:	xor	r9d, r9d
0x43d9cb:	movzx	r14d, byte ptr [r14 + 0x48b760]
0x43d9d3:	cmp	byte ptr [r8 + 0x48b760], r14b
0x43d9da:	setne	r9b
0x43d9de:	add	r9d, 1
0x43d9e2:	mov	r8d, dword ptr [rbp + rsi*4 + 8]
0x43d9e7:	add	eax, 2
0x43d9ea:	lea	r14d, [r8 + 2]
0x43d9ee:	cmp	eax, r14d
0x43d9f1:	cmova	eax, r14d
0x43d9f5:	add	edi, r9d
0x43d9f8:	cmp	eax, edi
0x43d9fa:	cmova	eax, edi
0x43d9fd:	mov	edi, esi
0x43d9ff:	test	ecx, ecx
0x43da01:	jle	0x43da0e
0x43da03:	cmp	r11b, byte ptr [r13 + rbx - 1]
0x43da08:	je	0x43dd02
0x43da0e:	mov	dword ptr [r12 + rsi*4 + 8], eax
0x43da13:	add	rsi, 2
0x43da17:	add	edi, 2
0x43da1a:	lea	r14d, [rsi + 1]
0x43da1e:	cmp	dword ptr [rsp + 0x28], r14d
0x43da23:	jg	0x43d94d
0x43da29:	mov	r14d, dword ptr [rsp + 0x24]
0x43da2e:	movsxd	rdi, edi
0x43da31:	movsxd	rax, dword ptr [rsp + 0x20]
0x43da36:	mov	r11, rdi
0x43da39:	movzx	r10d, byte ptr [r15 + rdi]
0x43da3e:	not	r11
0x43da41:	add	r11d, r14d
0x43da44:	and	r11d, 1
0x43da48:	cmp	dl, r10b
0x43da4b:	je	0x43dd29
0x43da51:	movzx	esi, r10b
0x43da55:	movzx	r8d, byte ptr [rsi + 0x48b760]
0x43da5d:	cmp	byte ptr [rax + 0x48b760], r8b
0x43da64:	setne	r9b
0x43da68:	movzx	esi, r9b
0x43da6c:	add	esi, 1
0x43da6f:	mov	r9d, dword ptr [r12 + rdi*4]
0x43da73:	mov	r8d, dword ptr [rbp + rdi*4 + 4]
0x43da78:	add	r9d, 2
0x43da7c:	add	r8d, 2
0x43da80:	cmp	r9d, r8d
0x43da83:	cmovbe	r8d, r9d
0x43da87:	add	esi, dword ptr [rbp + rdi*4]
0x43da8b:	cmp	r8d, esi
0x43da8e:	cmovbe	esi, r8d
0x43da92:	test	edi, edi
0x43da94:	jle	0x43daa5
0x43da96:	test	ecx, ecx
0x43da98:	jle	0x43daa5
0x43da9a:	cmp	r10b, byte ptr [r13 + rbx - 1]
0x43da9f:	je	0x43dd30
0x43daa5:	mov	dword ptr [r12 + rdi*4 + 4], esi
0x43daaa:	lea	rsi, [rdi + 1]
0x43daae:	cmp	r14d, esi
0x43dab1:	jle	0x43dc0b
0x43dab7:	test	r11d, r11d
0x43daba:	je	0x43db2f
0x43dabc:	movzx	r10d, byte ptr [r15 + rdi + 1]
0x43dac2:	xor	edi, edi
0x43dac4:	cmp	dl, r10b
0x43dac7:	je	0x43dae7
0x43dac9:	movzx	edi, r10b
0x43dacd:	movzx	r11d, byte ptr [rdi + 0x48b760]
0x43dad5:	cmp	byte ptr [rax + 0x48b760], r11b
0x43dadc:	setne	r9b
0x43dae0:	movzx	edi, r9b
0x43dae4:	add	edi, 1
0x43dae7:	mov	r8d, dword ptr [r12 + rsi*4]
0x43daeb:	mov	r11d, dword ptr [rbp + rsi*4 + 4]
0x43daf0:	lea	r9d, [r8 + 2]
0x43daf4:	lea	r8d, [r11 + 2]
0x43daf8:	cmp	r9d, r8d
0x43dafb:	cmovbe	r8d, r9d
0x43daff:	add	edi, dword ptr [rbp + rsi*4]
0x43db03:	cmp	r8d, edi
0x43db06:	cmovbe	edi, r8d
0x43db0a:	test	esi, esi
0x43db0c:	jle	0x43db1d
0x43db0e:	test	ecx, ecx
0x43db10:	jle	0x43db1d
0x43db12:	cmp	r10b, byte ptr [r13 + rbx - 1]
0x43db17:	je	0x43dd59
0x43db1d:	mov	dword ptr [r12 + rsi*4 + 4], edi
0x43db22:	add	rsi, 1
0x43db26:	cmp	r14d, esi
0x43db29:	jle	0x43dc0b
0x43db2f:	movzx	r9d, byte ptr [r15 + rsi]
0x43db34:	cmp	dl, r9b
0x43db37:	je	0x43dc3b
0x43db3d:	movzx	edi, r9b
0x43db41:	xor	r8d, r8d
0x43db44:	movzx	r10d, byte ptr [rdi + 0x48b760]
0x43db4c:	cmp	byte ptr [rax + 0x48b760], r10b
0x43db53:	setne	r8b
0x43db57:	add	r8d, 1
0x43db5b:	mov	edi, dword ptr [r12 + rsi*4]
0x43db5f:	mov	r11d, dword ptr [rbp + rsi*4 + 4]
0x43db64:	add	edi, 2
0x43db67:	lea	r10d, [r11 + 2]
0x43db6b:	cmp	edi, r10d
0x43db6e:	cmova	edi, r10d
0x43db72:	add	r8d, dword ptr [rbp + rsi*4]
0x43db77:	cmp	edi, r8d
0x43db7a:	cmova	edi, r8d
0x43db7e:	test	esi, esi
0x43db80:	jle	0x43db91
0x43db82:	test	ecx, ecx
0x43db84:	jle	0x43db91
0x43db86:	cmp	r9b, byte ptr [r13 + rbx - 1]
0x43db8b:	je	0x43dc65
0x43db91:	movzx	r9d, byte ptr [r15 + rsi + 1]
0x43db97:	mov	dword ptr [r12 + rsi*4 + 4], edi
0x43db9c:	lea	rdi, [rsi + 1]
0x43dba0:	cmp	dl, r9b
0x43dba3:	je	0x43dc36
0x43dba9:	movzx	esi, r9b
0x43dbad:	xor	r8d, r8d
0x43dbb0:	movzx	r10d, byte ptr [rsi + 0x48b760]
0x43dbb8:	cmp	byte ptr [rax + 0x48b760], r10b
0x43dbbf:	setne	r8b
0x43dbc3:	add	r8d, 1
0x43dbc7:	mov	esi, dword ptr [r12 + rdi*4]
0x43dbcb:	mov	r11d, dword ptr [rbp + rdi*4 + 4]
0x43dbd0:	add	esi, 2
0x43dbd3:	lea	r10d, [r11 + 2]
0x43dbd7:	cmp	esi, r10d
0x43dbda:	cmova	esi, r10d
0x43dbde:	add	r8d, dword ptr [rbp + rdi*4]
0x43dbe3:	cmp	esi, r8d
0x43dbe6:	cmova	esi, r8d
0x43dbea:	test	edi, edi
0x43dbec:	jle	0x43dbf9
0x43dbee:	test	ecx, ecx
0x43dbf0:	jle	0x43dbf9
0x43dbf2:	cmp	r9b, byte ptr [r13 + rbx - 1]
0x43dbf7:	je	0x43dc43
0x43dbf9:	mov	dword ptr [r12 + rdi*4 + 4], esi
0x43dbfe:	lea	rsi, [rdi + 1]
0x43dc02:	cmp	r14d, esi
0x43dc05:	jg	0x43db2f
0x43dc0b:	mov	rdx, qword ptr [rsp + 8]
0x43dc10:	mov	rdi, qword ptr [rsp + 0x18]
0x43dc15:	mov	rsi, rbp
0x43dc18:	call	0x403c60
0x43dc1d:	mov	rdx, qword ptr [rsp + 8]
0x43dc22:	mov	rsi, r12
0x43dc25:	mov	rdi, rbp
0x43dc28:	call	0x403c60
0x43dc2d:	add	rbx, 1
0x43dc31:	jmp	0x43d908
0x43dc36:	xor	r8d, r8d
0x43dc39:	jmp	0x43dbc7
0x43dc3b:	xor	r8d, r8d
0x43dc3e:	jmp	0x43db5b
0x43dc43:	cmp	dl, byte ptr [r15 + rdi - 1]
0x43dc48:	jne	0x43dbf9
0x43dc4a:	mov	r9, qword ptr [rsp + 0x18]
0x43dc4f:	mov	r8d, dword ptr [r9 + rdi*4 - 4]
0x43dc54:	lea	r11d, [r8 + 2]
0x43dc58:	mov	dword ptr [rsp], r8d
0x43dc5c:	cmp	esi, r11d
0x43dc5f:	cmova	esi, r11d
0x43dc63:	jmp	0x43dbf9
0x43dc65:	cmp	dl, byte ptr [r15 + rsi - 1]
0x43dc6a:	jne	0x43db91
0x43dc70:	mov	r9, qword ptr [rsp + 0x18]
0x43dc75:	mov	r8d, dword ptr [r9 + rsi*4 - 4]
0x43dc7a:	lea	r11d, [r8 + 2]
0x43dc7e:	mov	dword ptr [rsp], r8d
0x43dc82:	cmp	edi, r11d
0x43dc85:	cmova	edi, r11d
0x43dc89:	jmp	0x43db91
0x43dc8e:	mov	rdi, qword ptr [rsp + 0x18]
0x43dc93:	movsxd	rsi, r14d
0x43dc96:	mov	r13d, dword ptr [r12 + rsi*4]
0x43dc9a:	call	0x440240
0x43dc9f:	mov	rdi, rbp
0x43dca2:	call	0x440240
0x43dca7:	mov	rdi, r12
0x43dcaa:	call	0x440240
0x43dcaf:	add	rsp, 0x38
0x43dcb3:	mov	eax, r13d
0x43dcb6:	pop	rbx
0x43dcb7:	pop	rbp
0x43dcb8:	pop	r12
0x43dcba:	pop	r13
0x43dcbc:	pop	r14
0x43dcbe:	pop	r15
0x43dcc0:	ret	
0x43dcc1:	xor	edi, edi
0x43dcc3:	jmp	0x43da2e
0x43dcc8:	xor	r9d, r9d
0x43dccb:	jmp	0x43d9e2
0x43dcd0:	xor	r9d, r9d
0x43dcd3:	jmp	0x43d97d
0x43dcd8:	cmp	dl, byte ptr [r15 + rsi - 1]
0x43dcdd:	jne	0x43d9ac
0x43dce3:	mov	r8, qword ptr [rsp + 0x18]
0x43dce8:	mov	r14d, dword ptr [r8 + rsi*4 - 4]
0x43dced:	lea	r9d, [r14 + 2]
0x43dcf1:	mov	dword ptr [rsp + 0x2c], r14d
0x43dcf6:	cmp	eax, r9d
0x43dcf9:	cmova	eax, r9d
0x43dcfd:	jmp	0x43d9ac
0x43dd02:	cmp	r10b, dl
0x43dd05:	jne	0x43da0e
0x43dd0b:	mov	r10, qword ptr [rsp + 0x18]
0x43dd10:	mov	r11d, dword ptr [r10 + rsi*4]
0x43dd14:	lea	r9d, [r11 + 2]
0x43dd18:	mov	dword ptr [rsp + 0x2c], r11d
0x43dd1d:	cmp	eax, r9d
0x43dd20:	cmova	eax, r9d
0x43dd24:	jmp	0x43da0e
0x43dd29:	xor	esi, esi
0x43dd2b:	jmp	0x43da6f
0x43dd30:	cmp	dl, byte ptr [r15 + rdi - 1]
0x43dd35:	jne	0x43daa5
0x43dd3b:	mov	r10, qword ptr [rsp + 0x18]
0x43dd40:	mov	r9d, dword ptr [r10 + rdi*4 - 4]
0x43dd45:	lea	r8d, [r9 + 2]
0x43dd49:	mov	dword ptr [rsp], r9d
0x43dd4d:	cmp	esi, r8d
0x43dd50:	cmova	esi, r8d
0x43dd54:	jmp	0x43daa5
0x43dd59:	cmp	dl, byte ptr [r15 + rsi - 1]
0x43dd5e:	jne	0x43db1d
0x43dd64:	mov	r10, qword ptr [rsp + 0x18]
0x43dd69:	mov	r9d, dword ptr [r10 + rsi*4 - 4]
0x43dd6e:	lea	r11d, [r9 + 2]
0x43dd72:	mov	dword ptr [rsp], r9d
0x43dd76:	cmp	edi, r11d
0x43dd79:	cmova	edi, r11d
0x43dd7d:	jmp	0x43db1d
0x43dd82:	nop	word ptr cs:[rax + rax]
0x43dd8c:	nop	dword ptr [rax]
0x43dd90:	endbr64	
0x43dd94:	push	r12
0x43dd96:	mov	r12, rdi
0x43dd99:	sub	rsp, 0x180
0x43dda0:	mov	qword ptr [rsp + 0xd8], rsi
0x43dda8:	mov	qword ptr [rsp + 0xe0], rdx
0x43ddb0:	mov	qword ptr [rsp + 0xe8], rcx
0x43ddb8:	mov	qword ptr [rsp + 0xf0], r8
0x43ddc0:	mov	qword ptr [rsp + 0xf8], r9
0x43ddc8:	test	al, al
0x43ddca:	je	0x43de0c
0x43ddcc:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x43ddd4:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x43dddc:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x43dde4:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x43ddec:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x43ddf4:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x43ddfc:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x43de04:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x43de0c:	lea	rdx, [rsp + 0xd0]
0x43de14:	lea	rdi, [rsp + 0x20]
0x43de19:	xor	esi, esi
0x43de1b:	mov	dword ptr [rsp], 8
0x43de22:	lea	rax, [rsp + 0x190]
0x43de2a:	mov	qword ptr [rsp + 0x10], rdx
0x43de2f:	xor	edx, edx
0x43de31:	mov	qword ptr [rsp + 8], rax
0x43de36:	mov	dword ptr [rsp + 4], 0x30
0x43de3e:	add	dword ptr [rip + 0xa53ab], 1
0x43de45:	call	0x43de80
0x43de4a:	mov	r8, rsp
0x43de4d:	mov	rcx, r12
0x43de50:	or	edx, 0xffffffff
0x43de53:	mov	r9d, 4
0x43de59:	xor	esi, esi
0x43de5b:	lea	rdi, [rsp + 0x20]
0x43de60:	call	0x43def0
0x43de65:	lea	rdi, [rsp + 0x20]
0x43de6a:	call	0x430ad0
0x43de6f:	call	0x43f590
0x43de74:	add	rsp, 0x180
0x43de7b:	pop	r12
0x43de7d:	ret	
0x43de7e:	nop	
0x43de80:	endbr64	
0x43de84:	mov	qword ptr [rdi], rsi
0x43de87:	mov	dword ptr [rdi + 0x40], 0
0x43de8e:	mov	qword ptr [rdi + 0x48], 0
0x43de96:	mov	dword ptr [rdi + 0x50], 0
0x43de9d:	mov	byte ptr [rdi + 0x54], 0
0x43dea1:	mov	dword ptr [rdi + 0x78], 0
0x43dea8:	mov	dword ptr [rdi + 0x90], 0
0x43deb2:	mov	qword ptr [rdi + 0x98], 0
0x43debd:	mov	word ptr [rdi + 0xa0], 0
0x43dec6:	mov	qword ptr [rdi + 0xa8], 0
0x43ded1:	mov	dword ptr [rdi + 8], 1
0x43ded8:	mov	dword ptr [rdi + 0x10], edx
0x43dedb:	mov	dword ptr [rdi + 0x14], 0
0x43dee2:	mov	qword ptr [rdi + 0x18], 0
0x43deea:	ret	
0x43deeb:	nop	dword ptr [rax + rax]
0x43def0:	endbr64	
0x43def4:	push	r15
0x43def6:	mov	r10, rdi
0x43def9:	mov	rsi, rcx
0x43defc:	push	r14
0x43defe:	push	r13
0x43df00:	push	r12
0x43df02:	push	rbp
0x43df03:	push	rbx
0x43df04:	mov	ebx, edx
0x43df06:	mov	rdx, r8
0x43df09:	sub	rsp, 0xe8
0x43df10:	cmp	r9d, 0xc
0x43df14:	je	0x43e30e
0x43df1a:	lea	rbp, [rsp + 0x90]
0x43df22:	mov	rcx, rdi
0x43df25:	mov	r12d, r9d
0x43df28:	mov	r8d, r9d
0x43df2b:	mov	rdi, rbp
0x43df2e:	call	0x430410
0x43df33:	mov	eax, 0x840
0x43df38:	mov	ecx, r12d
0x43df3b:	shr	rax, cl
0x43df3e:	test	al, 1
0x43df40:	je	0x43df49
0x43df42:	mov	dword ptr [rsp + 0xd4], ebx
0x43df49:	mov	rsi, qword ptr [rsp + 0xb0]
0x43df51:	mov	r12d, dword ptr [rsp + 0xd0]
0x43df59:	mov	qword ptr [rsp + 0xc0], 0
0x43df65:	mov	r13d, dword ptr [rsi + 0x10]
0x43df69:	cmp	r12d, 6
0x43df6d:	je	0x43df75
0x43df6f:	cmp	r12d, 0xb
0x43df73:	jne	0x43dfc4
0x43df75:	cmp	byte ptr [rip + 0xa51d5], 0
0x43df7c:	jne	0x43e01d
0x43df82:	test	r13d, r13d
0x43df85:	js	0x43e065
0x43df8b:	cmp	r13d, 1
0x43df8f:	jbe	0x43dfba
0x43df91:	xor	edi, edi
0x43df93:	mov	esi, r13d
0x43df96:	call	0x430cf0
0x43df9b:	test	rax, rax
0x43df9e:	je	0x43dfba
0x43dfa0:	mov	r8d, dword ptr [rax]
0x43dfa3:	cmp	r8d, 0x6fffffff
0x43dfaa:	ja	0x43e031
0x43dfb0:	cmp	byte ptr [rax + 5], 0
0x43dfb4:	jne	0x43e057
0x43dfba:	cmp	r12d, 0xb
0x43dfbe:	je	0x43e343
0x43dfc4:	cmp	r12d, 8
0x43dfc8:	je	0x43e372
0x43dfce:	mov	r15d, dword ptr [rip + 0xa51eb]
0x43dfd5:	test	r15d, r15d
0x43dfd8:	jg	0x40bd56
0x43dfde:	cmp	byte ptr [rip + 0xa511f], 0
0x43dfe5:	mov	edi, dword ptr [rsp + 0xd4]
0x43dfec:	jne	0x40bd82
0x43dff2:	test	edi, edi
0x43dff4:	je	0x43e0e2
0x43dffa:	cmp	dword ptr [rip + 0xa514c], edi
0x43e000:	je	0x43e0e2
0x43e006:	mov	rdx, qword ptr [rip + 0xa5173]
0x43e00d:	mov	esi, dword ptr [rip + 0xa51b1]
0x43e013:	call	qword ptr [rip + 0xa515f]
0x43e019:	test	eax, eax
0x43e01b:	jne	0x43e06f
0x43e01d:	xor	eax, eax
0x43e01f:	add	rsp, 0xe8
0x43e026:	pop	rbx
0x43e027:	pop	rbp
0x43e028:	pop	r12
0x43e02a:	pop	r13
0x43e02c:	pop	r14
0x43e02e:	pop	r15
0x43e030:	ret	
0x43e031:	test	r13d, r13d
0x43e034:	js	0x43e065
0x43e036:	mov	r9, qword ptr [rax + 0x10]
0x43e03a:	sub	r13d, r8d
0x43e03d:	add	r13d, r13d
0x43e040:	mov	r13d, dword ptr [r9 + r13*4]
0x43e044:	cmp	r13d, 1
0x43e048:	ja	0x43df91
0x43e04e:	mov	r13d, dword ptr [rax + 0x18]
0x43e052:	jmp	0x43df91
0x43e057:	cmp	byte ptr [rip + 0xa50f4], 0
0x43e05e:	je	0x43e01d
0x43e060:	jmp	0x43dfba
0x43e065:	mov	rax, qword ptr [0x68]
0x43e06d:	ud2	
0x43e06f:	mov	eax, dword ptr [rip + 0xa50ab]
0x43e075:	movsxd	rbx, dword ptr [rsp + 0xd4]
0x43e07d:	test	eax, eax
0x43e07f:	jle	0x43e0bc
0x43e081:	mov	rcx, qword ptr [rsp + 0xb0]
0x43e089:	mov	r8, qword ptr [rip + 0xa5088]
0x43e090:	sub	eax, 1
0x43e093:	mov	edi, dword ptr [rcx + 0x10]
0x43e096:	movsxd	rdx, eax
0x43e099:	imul	r9, rdx, 0xc
0x43e09d:	add	r9, r8
0x43e0a0:	mov	esi, dword ptr [r9]
0x43e0a3:	test	esi, esi
0x43e0a5:	js	0x43e065
0x43e0a7:	test	edi, edi
0x43e0a9:	js	0x43e065
0x43e0ab:	cmp	esi, edi
0x43e0ad:	je	0x40c167
0x43e0b3:	mov	eax, dword ptr [0x24]
0x43e0ba:	ud2	
0x43e0bc:	mov	r14, qword ptr [rip + 0xa504d]
0x43e0c3:	mov	r15d, dword ptr [r14 + rbx*4]
0x43e0c7:	test	r15d, r15d
0x43e0ca:	je	0x43e0d4
0x43e0cc:	mov	dword ptr [rsp + 0xd0], r15d
0x43e0d4:	cmp	dword ptr [rsp + 0xd0], 1
0x43e0dc:	je	0x43e01d
0x43e0e2:	mov	r10d, dword ptr [rsp + 0xd0]
0x43e0ea:	cmp	r10d, 8
0x43e0ee:	je	0x43e2fc
0x43e0f4:	cmp	r10d, 3
0x43e0f8:	je	0x40bec0
0x43e0fe:	mov	edx, dword ptr [rip + 0xa5050]
0x43e104:	test	edx, edx
0x43e106:	jne	0x40be0b
0x43e10c:	add	dword ptr [rip + 0xa50ad], 1
0x43e113:	cmp	r10d, 0xe
0x43e117:	je	0x43e39c
0x43e11d:	movsxd	r10, dword ptr [rsp + 0xd0]
0x43e125:	cmp	r12d, 6
0x43e129:	jne	0x43e135
0x43e12b:	cmp	r10d, 4
0x43e12f:	je	0x40bd44
0x43e135:	add	dword ptr [r10*4 + 0x4e30c8], 1
0x43e13e:	cmp	dword ptr [rip + 0xa50af], 0
0x43e145:	jne	0x43e157
0x43e147:	mov	r8, qword ptr [rip + 0xa50aa]
0x43e14e:	test	r8, r8
0x43e151:	jne	0x40c0a7
0x43e157:	lea	rdi, [rsp + 0xc8]
0x43e15f:	mov	rsi, rbp
0x43e162:	add	dword ptr [rip + 0xa508b], 1
0x43e169:	mov	qword ptr [rsp + 0xa8], rdi
0x43e171:	mov	rdi, qword ptr [rip + 0xa4f48]
0x43e178:	mov	qword ptr [rsp + 0xc8], 0
0x43e184:	call	0x43e5d0
0x43e189:	mov	rsi, rbp
0x43e18c:	mov	edi, 0x4e30c0
0x43e191:	call	qword ptr [rip + 0xa4fc1]
0x43e197:	mov	rdi, qword ptr [rip + 0xa4f22]
0x43e19e:	call	0x43f3a0
0x43e1a3:	cmp	byte ptr [rip + 0xa4f95], 0
0x43e1aa:	je	0x43e1bd
0x43e1ac:	mov	rdx, qword ptr [rsp + 0xc0]
0x43e1b4:	test	rdx, rdx
0x43e1b7:	jne	0x40c0b4
0x43e1bd:	cmp	byte ptr [rip + 0xa4f81], 0
0x43e1c4:	je	0x43e27d
0x43e1ca:	mov	ecx, dword ptr [rsp + 0xd0]
0x43e1d1:	mov	esi, dword ptr [rsp + 0xd4]
0x43e1d8:	mov	edx, r12d
0x43e1db:	mov	edi, 0x4e30c0
0x43e1e0:	call	qword ptr [rip + 0xa4fa2]
0x43e1e6:	mov	rbx, rax
0x43e1e9:	test	rax, rax
0x43e1ec:	je	0x43e27d
0x43e1f2:	mov	rax, qword ptr [rip + 0xa4f97]
0x43e1f9:	mov	r13, qword ptr [rip + 0xa4ec0]
0x43e200:	test	rax, rax
0x43e203:	je	0x43e210
0x43e205:	cmp	dword ptr [r13 + 0x44], 0
0x43e20a:	jne	0x40be42
0x43e210:	mov	esi, 0x4c425f
0x43e215:	mov	rdi, r13
0x43e218:	call	0x430480
0x43e21d:	movsxd	rsi, dword ptr [rsp + 0xd0]
0x43e225:	movzx	edi, byte ptr [r13 + 0x43]
0x43e22a:	mov	rsi, qword ptr [rsi*8 + 0x4c6ae0]
0x43e232:	call	0x43f100
0x43e237:	mov	rdi, r13
0x43e23a:	mov	rsi, rax
0x43e23d:	call	0x430480
0x43e242:	mov	rsi, rbx
0x43e245:	mov	rdi, r13
0x43e248:	call	0x430480
0x43e24d:	cmp	byte ptr [r13 + 0x43], 0
0x43e252:	mov	ecx, 0x4c4893
0x43e257:	mov	esi, 0x4c4258
0x43e25c:	mov	rdi, r13
0x43e25f:	cmove	rsi, rcx
0x43e263:	call	0x430480
0x43e268:	mov	rdi, r13
0x43e26b:	mov	esi, 0x5d
0x43e270:	call	0x431ef0
0x43e275:	mov	rdi, rbx
0x43e278:	call	0x403830
0x43e27d:	mov	rsi, rbp
0x43e280:	mov	edx, r12d
0x43e283:	mov	edi, 0x4e30c0
0x43e288:	call	qword ptr [rip + 0xa4eda]
0x43e28e:	mov	ebp, dword ptr [rip + 0xa4f40]
0x43e294:	cmp	ebp, 1
0x43e297:	je	0x40c041
0x43e29d:	cmp	ebp, 2
0x43e2a0:	je	0x43e3a1
0x43e2a6:	mov	esi, dword ptr [rsp + 0xd0]
0x43e2ad:	mov	edi, 0x4e30c0
0x43e2b2:	call	0x43f520
0x43e2b7:	mov	r14, qword ptr [rip + 0xa4f2a]
0x43e2be:	mov	qword ptr [rsp + 0xc8], 0
0x43e2ca:	test	r14, r14
0x43e2cd:	jne	0x40bf6e
0x43e2d3:	mov	r14, qword ptr [rsp + 0xb8]
0x43e2db:	sub	dword ptr [rip + 0xa4ede], 1
0x43e2e2:	mov	eax, 1
0x43e2e7:	mov	rsi, qword ptr [r14 + 0xa8]
0x43e2ee:	test	rsi, rsi
0x43e2f1:	je	0x43e01f
0x43e2f7:	jmp	0x40bf4b
0x43e2fc:	add	dword ptr [rip + 0xa4ebd], 1
0x43e303:	mov	r10d, 8
0x43e309:	jmp	0x43e135
0x43e30e:	cmp	byte ptr [rip + 0xa4e34], 1
0x43e315:	lea	rbp, [rsp + 0x90]
0x43e31d:	mov	rcx, r10
0x43e320:	sbb	edi, edi
0x43e322:	and	edi, 0xfffffffe
0x43e325:	lea	r8d, [rdi + 6]
0x43e329:	mov	rdi, rbp
0x43e32c:	call	0x430410
0x43e331:	mov	edx, dword ptr [rip + 0xa4e15]
0x43e337:	mov	dword ptr [rsp + 0xd4], edx
0x43e33e:	jmp	0x43df49
0x43e343:	cmp	byte ptr [rip + 0xa4dfe], 1
0x43e34a:	mov	r15d, dword ptr [rip + 0xa4e6f]
0x43e351:	sbb	r12d, r12d
0x43e354:	and	r12d, 2
0x43e358:	add	r12d, 4
0x43e35c:	mov	dword ptr [rsp + 0xd0], r12d
0x43e364:	test	r15d, r15d
0x43e367:	jle	0x43dfde
0x43e36d:	jmp	0x40bdb6
0x43e372:	cmp	byte ptr [rip + 0xa4e4f], 0
0x43e379:	jne	0x43e01d
0x43e37f:	mov	r15d, dword ptr [rip + 0xa4e3a]
0x43e386:	test	r15d, r15d
0x43e389:	jg	0x43e397
0x43e38b:	mov	edi, dword ptr [rsp + 0xd4]
0x43e392:	jmp	0x43dff2
0x43e397:	jmp	0x40bdb6
0x43e39c:	jmp	0x40bec7
0x43e3a1:	jmp	0x40c071
0x43e3a6:	nop	word ptr cs:[rax + rax]
0x43e3b0:	endbr64	
0x43e3b4:	cmp	byte ptr [rip + 0xa7e49], 0
0x43e3bb:	jne	0x40c91f
0x43e3c1:	mov	byte ptr [rip + 0xa7e3c], 1
0x43e3c8:	ret	
0x43e3c9:	nop	dword ptr [rax]
0x43e3d0:	endbr64	
0x43e3d4:	push	rbp
0x43e3d5:	mov	rbp, rsp
0x43e3d8:	push	r15
0x43e3da:	push	r14
0x43e3dc:	push	r13
0x43e3de:	push	r12
0x43e3e0:	push	rbx
0x43e3e1:	sub	rsp, 0x48
0x43e3e5:	cmp	byte ptr [rip + 0xa7e18], 0
0x43e3ec:	je	0x40c92e
0x43e3f2:	mov	rax, qword ptr [rip + 0xa4ec7]
0x43e3f9:	mov	byte ptr [rip + 0xa7e04], 0
0x43e400:	test	rax, rax
0x43e403:	je	0x43e47c
0x43e405:	mov	ebx, dword ptr [rax + 4]
0x43e408:	test	ebx, ebx
0x43e40a:	je	0x43e47c
0x43e40c:	lea	edx, [rbx + 1]
0x43e40f:	mov	rdi, rsp
0x43e412:	lea	rsi, [rdx*8 + 0x17]
0x43e41a:	shr	rsi, 4
0x43e41e:	shl	rsi, 4
0x43e422:	mov	rcx, rsi
0x43e425:	and	rcx, 0xfffffffffffff000
0x43e42c:	sub	rdi, rcx
0x43e42f:	cmp	rsp, rdi
0x43e432:	je	0x43e48b
0x43e434:	sub	rsp, 0x1000
0x43e43b:	or	qword ptr [rsp + 0xff8], 0
0x43e444:	jmp	0x43e42f
0x43e446:	mov	rdi, r15
0x43e449:	call	0x4039c0
0x43e44e:	add	eax, 1
0x43e451:	je	0x43e5c1
0x43e457:	mov	rdi, qword ptr [rbp - 0x60]
0x43e45b:	xor	edx, edx
0x43e45d:	xor	esi, esi
0x43e45f:	call	0x43b180
0x43e464:	xor	esi, esi
0x43e466:	cmp	dword ptr [rip + 0xa4e2f], 0
0x43e46d:	mov	rdi, qword ptr [rbp - 0x58]
0x43e471:	sete	sil
0x43e475:	mov	edx, esi
0x43e477:	call	0x43d0d0
0x43e47c:	lea	rsp, [rbp - 0x28]
0x43e480:	pop	rbx
0x43e481:	pop	r12
0x43e483:	pop	r13
0x43e485:	pop	r14
0x43e487:	pop	r15
0x43e489:	pop	rbp
0x43e48a:	ret	
0x43e48b:	and	esi, 0xfff
0x43e491:	sub	rsp, rsi
0x43e494:	test	rsi, rsi
0x43e497:	jne	0x43e5b1
0x43e49d:	lea	r12, [rsp + 0xf]
0x43e4a2:	and	r12, 0xfffffffffffffff0
0x43e4a6:	cmp	dword ptr [rip + 0xa4def], 0
0x43e4ad:	mov	r13, r12
0x43e4b0:	jne	0x40c93c
0x43e4b6:	mov	edi, 0x4c4893
0x43e4bb:	call	0x436980
0x43e4c0:	mov	qword ptr [rbp - 0x58], rax
0x43e4c4:	mov	r15, qword ptr [rbp - 0x58]
0x43e4c8:	xor	edx, edx
0x43e4ca:	mov	edi, 0x45b5e2
0x43e4cf:	xor	eax, eax
0x43e4d1:	mov	rsi, r15
0x43e4d4:	call	0x42d870
0x43e4d9:	mov	rdi, r15
0x43e4dc:	mov	esi, 0x4639e2
0x43e4e1:	mov	qword ptr [rbp - 0x60], rax
0x43e4e5:	call	0x403dd0
0x43e4ea:	mov	r8, qword ptr [rip + 0xa4dcf]
0x43e4f1:	lea	rdx, [rbx*8]
0x43e4f9:	mov	rdi, r12
0x43e4fc:	mov	r15, rax
0x43e4ff:	lea	rsi, [r8 + 8]
0x43e503:	mov	qword ptr [rbp - 0x68], r8
0x43e507:	call	0x403c60
0x43e50c:	mov	r10, qword ptr [rbp - 0x68]
0x43e510:	mov	qword ptr [r12 + rbx*8], 0
0x43e518:	movabs	rbx, 0x400000000000021
0x43e522:	mov	dword ptr [r10 + 4], 0
0x43e52a:	test	r15, r15
0x43e52d:	je	0x40c9b4
0x43e533:	mov	r12, qword ptr [r13]
0x43e537:	test	r12, r12
0x43e53a:	je	0x43e446
0x43e540:	mov	r14, r12
0x43e543:	jmp	0x43e588
0x43e545:	movzx	r11d, cl
0x43e549:	movsx	edx, cl
0x43e54c:	test	byte ptr [r11 + r11 + 0x4bc840], 0x40
0x43e555:	jne	0x40c9c6
0x43e55b:	sub	ecx, 0x22
0x43e55e:	cmp	cl, 0x3a
0x43e561:	ja	0x43e571
0x43e563:	mov	rax, rbx
0x43e566:	shr	rax, cl
0x43e569:	test	al, 1
0x43e56b:	jne	0x40c9c6
0x43e571:	mov	rsi, r15
0x43e574:	mov	edi, edx
0x43e576:	call	0x403b30
0x43e57b:	add	eax, 1
0x43e57e:	je	0x40c9e2
0x43e584:	add	r14, 1
0x43e588:	movzx	ecx, byte ptr [r14]
0x43e58c:	test	cl, cl
0x43e58e:	jne	0x43e545
0x43e590:	cmp	r14, r12
0x43e593:	je	0x40ca03
0x43e599:	mov	rsi, r15
0x43e59c:	mov	edi, 0xa
0x43e5a1:	call	0x403b30
0x43e5a6:	add	eax, 1
0x43e5a9:	je	0x43e5bc
0x43e5ab:	add	r13, 8
0x43e5af:	jmp	0x43e533
0x43e5b1:	or	qword ptr [rsp + rsi - 8], 0
0x43e5b7:	jmp	0x43e49d
0x43e5bc:	jmp	0x40c9e2
0x43e5c1:	jmp	0x40ca1b
0x43e5c6:	nop	word ptr cs:[rax + rax]
0x43e5d0:	push	r15
0x43e5d2:	push	r14
0x43e5d4:	mov	r14, rdi
0x43e5d7:	push	r13
0x43e5d9:	push	r12
0x43e5db:	push	rbp
0x43e5dc:	push	rbx
0x43e5dd:	sub	rsp, 0x148
0x43e5e4:	mov	rbx, qword ptr [rdi + 8]
0x43e5e8:	mov	qword ptr [rsp + 8], rsi
0x43e5ed:	mov	rdx, qword ptr [rbx + 0x78]
0x43e5f1:	lea	rax, [rbx + 0x58]
0x43e5f5:	mov	qword ptr [rsp + 0x18], rax
0x43e5fa:	mov	rcx, rdx
0x43e5fd:	sub	rcx, qword ptr [rbx + 0x70]
0x43e601:	cmp	rcx, 0x1e7
0x43e608:	jbe	0x40cd73
0x43e60e:	mov	rdi, qword ptr [rbx + 0x70]
0x43e612:	mov	r8, qword ptr [rbx + 0x68]
0x43e616:	add	rdi, 0x1e8
0x43e61d:	cmp	rdi, r8
0x43e620:	je	0x40cd67
0x43e626:	mov	rsi, qword ptr [rbx + 0x88]
0x43e62d:	mov	r9, rdx
0x43e630:	sub	r9, qword ptr [rbx + 0x60]
0x43e634:	mov	ecx, 0x3c
0x43e639:	mov	r10, qword ptr [rbx + 0xb8]
0x43e640:	mov	r11, qword ptr [rsp + 8]
0x43e645:	mov	byte ptr [rsp + 0x20], 0
0x43e64a:	add	rdi, rsi
0x43e64d:	not	rsi
0x43e650:	mov	byte ptr [rsp + 0x38], 0
0x43e655:	and	rdi, rsi
0x43e658:	mov	dword ptr [rsp], 0
0x43e65f:	mov	rbp, rdi
0x43e662:	sub	rbp, qword ptr [rbx + 0x60]
0x43e666:	mov	qword ptr [rsp + 0x28], r14
0x43e66b:	cmp	rbp, r9
0x43e66e:	lea	rbp, [r8 + 8]
0x43e672:	cmova	rdi, rdx
0x43e676:	xor	eax, eax
0x43e678:	xor	r13d, r13d
0x43e67b:	movq	xmm0, rdi
0x43e680:	lea	rdi, [rsp + 0x50]
0x43e685:	rep stosd	dword ptr [rdi], eax
0x43e687:	punpcklqdq	xmm0, xmm0
0x43e68b:	movups	xmmword ptr [rbx + 0x68], xmm0
0x43e68f:	mov	r15, qword ptr [r11]
0x43e692:	mov	qword ptr [r8], r10
0x43e695:	mov	qword ptr [rbx + 0xb8], r8
0x43e69c:	mov	r12, r15
0x43e69f:	movzx	r14d, byte ptr [r12]
0x43e6a4:	test	r14b, r14b
0x43e6a7:	je	0x43e6df
0x43e6a9:	cmp	r14b, 0x25
0x43e6ad:	je	0x43e6ed
0x43e6af:	mov	r9, qword ptr [rbx + 0x70]
0x43e6b3:	cmp	qword ptr [rbx + 0x78], r9
0x43e6b7:	je	0x40ceaf
0x43e6bd:	mov	r10, qword ptr [rbx + 0x70]
0x43e6c1:	movzx	r14d, byte ptr [r12]
0x43e6c6:	add	r12, 1
0x43e6ca:	lea	rcx, [r10 + 1]
0x43e6ce:	mov	qword ptr [rbx + 0x70], rcx
0x43e6d2:	mov	byte ptr [r10], r14b
0x43e6d5:	movzx	r14d, byte ptr [r12]
0x43e6da:	test	r14b, r14b
0x43e6dd:	jne	0x43e6a9
0x43e6df:	mov	r14, qword ptr [rsp + 0x28]
0x43e6e4:	mov	r9, qword ptr [rbx + 0x78]
0x43e6e8:	jmp	0x43e874
0x43e6ed:	movzx	edx, byte ptr [r12 + 1]
0x43e6f3:	lea	r15, [r12 + 1]
0x43e6f8:	cmp	dl, 0x3e
0x43e6fb:	je	0x43ee7f
0x43e701:	jg	0x43e970
0x43e707:	cmp	dl, 0x3c
0x43e70a:	je	0x43eee8
0x43e710:	cmp	dl, 0x3d
0x43e713:	je	0x43e731
0x43e715:	cmp	dl, 0x27
0x43e718:	je	0x43eea8
0x43e71e:	jg	0x43e731
0x43e720:	test	dl, dl
0x43e722:	je	0x40d10a
0x43e728:	cmp	dl, 0x25
0x43e72b:	je	0x43f0ed
0x43e731:	mov	r10, qword ptr [rbx + 0x70]
0x43e735:	cmp	qword ptr [rbx + 0x78], r10
0x43e739:	je	0x40d0f6
0x43e73f:	mov	rdi, qword ptr [rbx + 0x70]
0x43e743:	lea	rsi, [rdi + 1]
0x43e747:	mov	qword ptr [rbx + 0x70], rsi
0x43e74b:	mov	byte ptr [rdi], 0
0x43e74e:	cmp	r13d, 0x3b
0x43e752:	ja	0x40d0e2
0x43e758:	mov	r14, qword ptr [rbx + 0x68]
0x43e75c:	mov	rcx, qword ptr [rbx + 0x70]
0x43e760:	cmp	rcx, r14
0x43e763:	je	0x40cd1f
0x43e769:	mov	rax, qword ptr [rbx + 0x88]
0x43e770:	mov	r11, qword ptr [rbx + 0x78]
0x43e774:	mov	r10d, r13d
0x43e777:	lea	r9d, [r13 + 1]
0x43e77b:	mov	dword ptr [rsp + 0x10], r9d
0x43e780:	add	rcx, rax
0x43e783:	not	rax
0x43e786:	mov	r8, r11
0x43e789:	sub	r8, qword ptr [rbx + 0x60]
0x43e78d:	and	rcx, rax
0x43e790:	mov	rdx, rcx
0x43e793:	sub	rdx, qword ptr [rbx + 0x60]
0x43e797:	cmp	rdx, r8
0x43e79a:	cmova	rcx, r11
0x43e79e:	movq	xmm1, rcx
0x43e7a3:	punpcklqdq	xmm1, xmm1
0x43e7a7:	movups	xmmword ptr [rbx + 0x68], xmm1
0x43e7ab:	mov	qword ptr [rbp + r10*8], r14
0x43e7b0:	movzx	r12d, byte ptr [r12 + 1]
0x43e7b6:	test	byte ptr [r12 + r12 + 0x4bc840], 4
0x43e7bf:	jne	0x40cce0
0x43e7c5:	mov	edi, dword ptr [rsp]
0x43e7c8:	add	edi, 1
0x43e7cb:	cmp	byte ptr [rsp + 0x20], 0
0x43e7d0:	mov	dword ptr [rsp + 0x3c], edi
0x43e7d4:	jne	0x40cccc
0x43e7da:	mov	byte ptr [rsp + 0x38], 1
0x43e7df:	cmp	dword ptr [rsp], 0x1d
0x43e7e3:	ja	0x40ccb8
0x43e7e9:	mov	r14d, dword ptr [rsp]
0x43e7ed:	cmp	qword ptr [rsp + r14*8 + 0x50], 0
0x43e7f3:	jne	0x40cc51
0x43e7f9:	mov	ecx, dword ptr [rsp + 0x10]
0x43e7fd:	lea	rax, [rbp + rcx*8]
0x43e802:	mov	qword ptr [rsp + 0x30], rax
0x43e807:	mov	qword ptr [rsp + r14*8 + 0x50], rax
0x43e80c:	mov	r11, qword ptr [rbx + 0x70]
0x43e810:	cmp	qword ptr [rbx + 0x78], r11
0x43e814:	je	0x40cc3d
0x43e81a:	mov	r8, qword ptr [rbx + 0x70]
0x43e81e:	movzx	edx, byte ptr [r15]
0x43e822:	lea	r12, [r15 + 1]
0x43e826:	mov	edi, 0x4c42e8
0x43e82b:	lea	r9, [r8 + 1]
0x43e82f:	mov	qword ptr [rbx + 0x70], r9
0x43e833:	mov	byte ptr [r8], dl
0x43e836:	movsx	esi, byte ptr [r12 - 1]
0x43e83c:	mov	r14d, esi
0x43e83f:	call	0x403a40
0x43e844:	test	rax, rax
0x43e847:	jne	0x43eb68
0x43e84d:	cmp	r14b, 0x2e
0x43e851:	je	0x43efc3
0x43e857:	cmp	byte ptr [r12], 0
0x43e85c:	mov	r9, qword ptr [rbx + 0x78]
0x43e860:	mov	r14, qword ptr [rbx + 0x70]
0x43e864:	jne	0x43ec2e
0x43e86a:	mov	r14, qword ptr [rsp + 0x28]
0x43e86f:	mov	r13d, dword ptr [rsp + 0x10]
0x43e874:	cmp	r9, qword ptr [rbx + 0x70]
0x43e878:	je	0x40d289
0x43e87e:	mov	r12, qword ptr [rbx + 0x70]
0x43e882:	lea	r11, [r12 + 1]
0x43e887:	mov	qword ptr [rbx + 0x70], r11
0x43e88b:	mov	byte ptr [r12], 0
0x43e890:	cmp	r13d, 0x3b
0x43e894:	ja	0x40d275
0x43e89a:	mov	r8, qword ptr [rbx + 0x68]
0x43e89e:	mov	rax, qword ptr [rbx + 0x70]
0x43e8a2:	cmp	rax, r8
0x43e8a5:	je	0x40cb40
0x43e8ab:	mov	rdi, qword ptr [rbx + 0x88]
0x43e8b2:	mov	rdx, qword ptr [rbx + 0x78]
0x43e8b6:	mov	r9d, r13d
0x43e8b9:	lea	r13d, [r13 + 1]
0x43e8bd:	add	rax, rdi
0x43e8c0:	not	rdi
0x43e8c3:	mov	rsi, rdx
0x43e8c6:	sub	rsi, qword ptr [rbx + 0x60]
0x43e8ca:	and	rax, rdi
0x43e8cd:	mov	r15, rax
0x43e8d0:	sub	r15, qword ptr [rbx + 0x60]
0x43e8d4:	cmp	r15, rsi
0x43e8d7:	mov	r15d, dword ptr [rbx + 0xc8]
0x43e8de:	cmova	rax, rdx
0x43e8e2:	movq	xmm3, rax
0x43e8e7:	punpcklqdq	xmm3, xmm3
0x43e8eb:	movups	xmmword ptr [rbx + 0x68], xmm3
0x43e8ef:	mov	qword ptr [rbp + r9*8], r8
0x43e8f4:	mov	qword ptr [rbp + r13*8], 0
0x43e8fd:	mov	rbp, qword ptr [rsp + 0x18]
0x43e902:	mov	qword ptr [rbx + 0xb0], rbp
0x43e909:	mov	r10, qword ptr [r14 + 0x24]
0x43e90d:	xor	ebp, ebp
0x43e90f:	mov	qword ptr [r14 + 0x24], 1
0x43e917:	xchg	r14, rbx
0x43e91a:	mov	qword ptr [rsp], r10
0x43e91e:	mov	r12d, ebp
0x43e921:	mov	r13, qword ptr [rsp + r12*8 + 0x50]
0x43e926:	test	r13, r13
0x43e929:	jne	0x43e999
0x43e92b:	xchg	rbx, r14
0x43e92e:	mov	rdi, qword ptr [r14 + 0x38]
0x43e932:	test	rdi, rdi
0x43e935:	jne	0x43ec20
0x43e93b:	mov	qword ptr [rbx + 0xb0], rbx
0x43e942:	mov	dword ptr [rbx + 0xc8], r15d
0x43e949:	mov	rbx, qword ptr [rsp]
0x43e94d:	mov	byte ptr [r14 + 0x40], 0
0x43e952:	mov	qword ptr [r14 + 0x24], rbx
0x43e956:	mov	dword ptr [r14 + 0x20], 0
0x43e95e:	add	rsp, 0x148
0x43e965:	pop	rbx
0x43e966:	pop	rbp
0x43e967:	pop	r12
0x43e969:	pop	r13
0x43e96b:	pop	r14
0x43e96d:	pop	r15
0x43e96f:	ret	
0x43e970:	cmp	dl, 0x52
0x43e973:	je	0x43ef91
0x43e979:	cmp	dl, 0x51
0x43e97c:	jle	0x43e731
0x43e982:	cmp	dl, 0x6d
0x43e985:	je	0x40ce48
0x43e98b:	cmp	dl, 0x7d
0x43e98e:	jne	0x43e731
0x43e994:	jmp	0x40cc65
0x43e999:	mov	byte ptr [rsp + 0x47], 0
0x43e99e:	mov	rdx, qword ptr [r13]
0x43e9a2:	xor	r9d, r9d
0x43e9a5:	xor	r8d, r8d
0x43e9a8:	mov	byte ptr [rsp + 0x10], 0
0x43e9ad:	xor	ecx, ecx
0x43e9af:	movzx	r11d, byte ptr [rdx]
0x43e9b3:	cmp	r11b, 0x71
0x43e9b7:	jne	0x43e9cf
0x43e9b9:	cmp	byte ptr [rsp + 0x47], 0
0x43e9be:	jne	0x40cc29
0x43e9c4:	mov	byte ptr [rsp + 0x47], 1
0x43e9c9:	add	rdx, 1
0x43e9cd:	jmp	0x43e9af
0x43e9cf:	jg	0x43eb59
0x43e9d5:	cmp	r11b, 0x2b
0x43e9d9:	je	0x43ef7d
0x43e9df:	cmp	r11b, 0x6c
0x43e9e3:	je	0x40cec3
0x43e9e9:	cmp	r11b, 0x23
0x43e9ed:	je	0x43f069
0x43e9f3:	test	ecx, ecx
0x43e9f5:	je	0x43ea00
0x43e9f7:	test	r8b, r8b
0x43e9fa:	jne	0x40ce8c
0x43ea00:	cmp	byte ptr [rsp + 0x47], 0
0x43ea05:	je	0x43ea61
0x43ea07:	mov	byte ptr [rsp + 0x30], r8b
0x43ea0c:	mov	rsi, qword ptr [rip + 0xa3a75]
0x43ea13:	mov	rdi, rbx
0x43ea16:	movzx	r8d, byte ptr [rbx + 0x43]
0x43ea1b:	mov	byte ptr [rsp + 0x3c], r9b
0x43ea20:	mov	dword ptr [rsp + 0x28], ecx
0x43ea24:	mov	qword ptr [rsp + 0x20], rdx
0x43ea29:	mov	dword ptr [rsp + 0x38], r8d
0x43ea2e:	call	0x430480
0x43ea33:	mov	edi, dword ptr [rsp + 0x38]
0x43ea37:	mov	esi, 0x46276b
0x43ea3c:	call	0x43f100
0x43ea41:	mov	rdi, rbx
0x43ea44:	mov	rsi, rax
0x43ea47:	call	0x430480
0x43ea4c:	movzx	r9d, byte ptr [rsp + 0x3c]
0x43ea52:	movzx	r8d, byte ptr [rsp + 0x30]
0x43ea58:	mov	ecx, dword ptr [rsp + 0x28]
0x43ea5c:	mov	rdx, qword ptr [rsp + 0x20]
0x43ea61:	movzx	eax, byte ptr [rdx]
0x43ea64:	sub	eax, 0x2e
0x43ea67:	cmp	al, 0x4d
0x43ea69:	ja	0x43ea76
0x43ea6b:	movzx	edi, al
0x43ea6e:	notrack jmp	qword ptr ds:[rdi*8 + 0x4c4e80]
0x43ea76:	mov	rax, qword ptr [rbx + 0x30]
0x43ea7a:	test	rax, rax
0x43ea7d:	je	0x40cdb3
0x43ea83:	push	rsi
0x43ea84:	and	r9d, 1
0x43ea88:	and	r8d, 1
0x43ea8c:	mov	rdi, rbx
0x43ea8f:	push	r13
0x43ea91:	lea	r10, [rsp + 0x57]
0x43ea96:	push	r10
0x43ea98:	movzx	r11d, byte ptr [rsp + 0x28]
0x43ea9e:	push	r11
0x43eaa0:	mov	rsi, qword ptr [rsp + 0x28]
0x43eaa5:	call	rax
0x43eaa7:	add	rsp, 0x20
0x43eaab:	test	al, al
0x43eaad:	je	0x40cd9f
0x43eab3:	cmp	byte ptr [rsp + 0x47], 0
0x43eab8:	je	0x43eae3
0x43eaba:	cmp	byte ptr [rbx + 0x43], 0
0x43eabe:	mov	ecx, 0x4c4893
0x43eac3:	mov	esi, 0x4c4258
0x43eac8:	mov	rdi, rbx
0x43eacb:	cmove	rsi, rcx
0x43eacf:	call	0x430480
0x43ead4:	mov	rsi, qword ptr [rip + 0xa39a5]
0x43eadb:	mov	rdi, rbx
0x43eade:	call	0x430480
0x43eae3:	mov	r8, qword ptr [r14 + 0x70]
0x43eae7:	cmp	qword ptr [r14 + 0x78], r8
0x43eaeb:	je	0x40cd8b
0x43eaf1:	mov	rdi, qword ptr [r14 + 0x70]
0x43eaf5:	mov	r12, qword ptr [rsp + r12*8 + 0x50]
0x43eafa:	lea	rsi, [rdi + 1]
0x43eafe:	mov	qword ptr [r14 + 0x70], rsi
0x43eb02:	mov	byte ptr [rdi], 0
0x43eb05:	mov	r9, qword ptr [r14 + 0x68]
0x43eb09:	mov	r13, qword ptr [r14 + 0x70]
0x43eb0d:	cmp	r13, r9
0x43eb10:	je	0x40cdf5
0x43eb16:	mov	rdx, qword ptr [r14 + 0x88]
0x43eb1d:	mov	rax, qword ptr [r14 + 0x78]
0x43eb21:	add	r13, rdx
0x43eb24:	not	rdx
0x43eb27:	mov	r11, rax
0x43eb2a:	sub	r11, qword ptr [r14 + 0x60]
0x43eb2e:	and	r13, rdx
0x43eb31:	mov	r10, r13
0x43eb34:	sub	r10, qword ptr [r14 + 0x60]
0x43eb38:	cmp	r10, r11
0x43eb3b:	cmova	r13, rax
0x43eb3f:	add	ebp, 1
0x43eb42:	movq	xmm4, r13
0x43eb47:	punpcklqdq	xmm4, xmm4
0x43eb4b:	movups	xmmword ptr [r14 + 0x68], xmm4
0x43eb50:	mov	qword ptr [r12], r9
0x43eb54:	jmp	0x43e91e
0x43eb59:	cmp	r11b, 0x77
0x43eb5d:	jne	0x43e9f3
0x43eb63:	jmp	0x40ce02
0x43eb68:	mov	r15, r12
0x43eb6b:	jmp	0x43e80c
0x43eb70:	test	r8b, r8b
0x43eb73:	jne	0x40ca2d
0x43eb79:	test	ecx, ecx
0x43eb7b:	jne	0x43eca4
0x43eb81:	mov	rdx, qword ptr [rsp + 8]
0x43eb86:	mov	rsi, qword ptr [rdx + 8]
0x43eb8a:	mov	eax, dword ptr [rsi]
0x43eb8c:	cmp	eax, 0x2f
0x43eb8f:	ja	0x43ecbb
0x43eb95:	mov	r9d, eax
0x43eb98:	add	eax, 8
0x43eb9b:	add	r9, qword ptr [rsi + 0x10]
0x43eb9f:	mov	dword ptr [rsi], eax
0x43eba1:	mov	r13, qword ptr [rbx + 8]
0x43eba5:	mov	r8d, dword ptr [r9]
0x43eba8:	mov	ecx, 0x4c90c1
0x43ebad:	lea	rdi, [r13 + 0xcc]
0x43ebb4:	mov	edx, 0x80
0x43ebb9:	mov	esi, 1
0x43ebbe:	xor	eax, eax
0x43ebc0:	call	0x403f60
0x43ebc5:	mov	r11, qword ptr [rbx + 8]
0x43ebc9:	mov	rdi, rbx
0x43ebcc:	lea	rsi, [r11 + 0xcc]
0x43ebd3:	call	0x430480
0x43ebd8:	jmp	0x43eab3
0x43ebdd:	mov	rdx, qword ptr [rsp + 8]
0x43ebe2:	cmp	byte ptr [rsp + 0x47], 0
0x43ebe7:	mov	rsi, qword ptr [rdx + 8]
0x43ebeb:	mov	r9d, dword ptr [rsi]
0x43ebee:	je	0x43eccc
0x43ebf4:	cmp	r9d, 0x2f
0x43ebf8:	ja	0x43ee5d
0x43ebfe:	mov	ecx, r9d
0x43ec01:	add	r9d, 8
0x43ec05:	add	rcx, qword ptr [rsi + 0x10]
0x43ec09:	mov	dword ptr [rsi], r9d
0x43ec0c:	mov	rsi, qword ptr [rcx]
0x43ec0f:	or	rdx, 0xffffffffffffffff
0x43ec13:	mov	rdi, rbx
0x43ec16:	call	0x43fb40
0x43ec1b:	jmp	0x43eab3
0x43ec20:	mov	rcx, qword ptr [rdi]
0x43ec23:	mov	rsi, r14
0x43ec26:	call	qword ptr [rcx + 0x18]
0x43ec29:	jmp	0x43e93b
0x43ec2e:	cmp	r9, r14
0x43ec31:	je	0x40cb99
0x43ec37:	lea	r10, [r14 + 1]
0x43ec3b:	mov	qword ptr [rbx + 0x70], r10
0x43ec3f:	mov	byte ptr [r14], 0
0x43ec43:	mov	rcx, qword ptr [rbx + 0x68]
0x43ec47:	mov	r11, qword ptr [rbx + 0x70]
0x43ec4b:	cmp	r11, rcx
0x43ec4e:	je	0x40cb4c
0x43ec54:	mov	rdi, qword ptr [rbx + 0x88]
0x43ec5b:	mov	rax, qword ptr [rbx + 0x78]
0x43ec5f:	mov	r8, qword ptr [rsp + 0x30]
0x43ec64:	mov	r15d, dword ptr [rsp + 0x3c]
0x43ec69:	add	r11, rdi
0x43ec6c:	not	rdi
0x43ec6f:	mov	rsi, rax
0x43ec72:	sub	rsi, qword ptr [rbx + 0x60]
0x43ec76:	and	r11, rdi
0x43ec79:	mov	dword ptr [rsp], r15d
0x43ec7d:	mov	rdx, r11
0x43ec80:	sub	rdx, qword ptr [rbx + 0x60]
0x43ec84:	cmp	rdx, rsi
0x43ec87:	cmova	r11, rax
0x43ec8b:	add	r13d, 2
0x43ec8f:	movq	xmm2, r11
0x43ec94:	punpcklqdq	xmm2, xmm2
0x43ec98:	movups	xmmword ptr [rbx + 0x68], xmm2
0x43ec9c:	mov	qword ptr [r8], rcx
0x43ec9f:	jmp	0x43e69f
0x43eca4:	cmp	ecx, 1
0x43eca7:	je	0x40ca2d
0x43ecad:	cmp	ecx, 2
0x43ecb0:	jne	0x43eab3
0x43ecb6:	jmp	0x40cb58
0x43ecbb:	mov	r9, qword ptr [rsi + 8]
0x43ecbf:	lea	r10, [r9 + 8]
0x43ecc3:	mov	qword ptr [rsi + 8], r10
0x43ecc7:	jmp	0x43eba1
0x43eccc:	cmp	r9d, 0x2f
0x43ecd0:	ja	0x43ee6e
0x43ecd6:	mov	r10d, r9d
0x43ecd9:	add	r9d, 8
0x43ecdd:	add	r10, qword ptr [rsi + 0x10]
0x43ece1:	mov	dword ptr [rsi], r9d
0x43ece4:	mov	rsi, qword ptr [r10]
0x43ece7:	mov	rdi, rbx
0x43ecea:	call	0x430480
0x43ecef:	jmp	0x43eab3
0x43ecf4:	mov	r8, qword ptr [rsp + 8]
0x43ecf9:	mov	rdi, qword ptr [r8 + 8]
0x43ecfd:	mov	edx, dword ptr [rdi]
0x43ecff:	cmp	edx, 0x2f
0x43ed02:	ja	0x43f07e
0x43ed08:	mov	eax, edx
0x43ed0a:	add	edx, 8
0x43ed0d:	add	rax, qword ptr [rdi + 0x10]
0x43ed11:	mov	dword ptr [rdi], edx
0x43ed13:	movzx	edi, byte ptr [rbx + 0x43]
0x43ed17:	mov	rsi, qword ptr [rax]
0x43ed1a:	call	0x43f100
0x43ed1f:	mov	rdi, rbx
0x43ed22:	mov	rsi, rax
0x43ed25:	call	0x430480
0x43ed2a:	jmp	0x43eab3
0x43ed2f:	movzx	edi, byte ptr [rdx + 1]
0x43ed33:	test	byte ptr [rdi + rdi + 0x4bc840], 4
0x43ed3b:	jne	0x40d634
0x43ed41:	cmp	dil, 0x2a
0x43ed45:	jne	0x40d620
0x43ed4b:	cmp	byte ptr [rdx + 2], 0x73
0x43ed4f:	jne	0x40d4c0
0x43ed55:	mov	r12, qword ptr [rsp + 8]
0x43ed5a:	mov	rax, qword ptr [r12 + 8]
0x43ed5f:	lea	r12d, [rbp + 1]
0x43ed63:	mov	r9, qword ptr [rsp + r12*8 + 0x50]
0x43ed68:	mov	rbp, r12
0x43ed6b:	mov	edx, dword ptr [rax]
0x43ed6d:	cmp	edx, 0x2f
0x43ed70:	ja	0x43f08f
0x43ed76:	mov	ecx, edx
0x43ed78:	add	edx, 8
0x43ed7b:	add	rcx, qword ptr [rax + 0x10]
0x43ed7f:	mov	dword ptr [rax], edx
0x43ed81:	mov	r10d, dword ptr [rcx]
0x43ed84:	cmp	r13, r9
0x43ed87:	jne	0x40d697
0x43ed8d:	mov	esi, dword ptr [rax]
0x43ed8f:	cmp	esi, 0x2f
0x43ed92:	ja	0x43f0a3
0x43ed98:	mov	edx, esi
0x43ed9a:	add	esi, 8
0x43ed9d:	add	rdx, qword ptr [rax + 0x10]
0x43eda1:	mov	dword ptr [rax], esi
0x43eda3:	mov	r13, qword ptr [rdx]
0x43eda6:	test	r10d, r10d
0x43eda9:	js	0x40d5ff
0x43edaf:	movsxd	rsi, r10d
0x43edb2:	mov	rdi, r13
0x43edb5:	call	0x403ae0
0x43edba:	lea	rdx, [r13 + rax]
0x43edbf:	mov	rsi, r13
0x43edc2:	mov	rdi, rbx
0x43edc5:	call	0x4304c0
0x43edca:	jmp	0x43eab3
0x43edcf:	test	r8b, r8b
0x43edd2:	jne	0x40cace
0x43edd8:	test	ecx, ecx
0x43edda:	jne	0x43f0b4
0x43ede0:	mov	rcx, qword ptr [rsp + 8]
0x43ede5:	mov	r11, qword ptr [rcx + 8]
0x43ede9:	mov	r8d, dword ptr [r11]
0x43edec:	cmp	r8d, 0x2f
0x43edf0:	ja	0x43f0cb
0x43edf6:	mov	eax, r8d
0x43edf9:	add	r8d, 8
0x43edfd:	add	rax, qword ptr [r11 + 0x10]
0x43ee01:	mov	dword ptr [r11], r8d
0x43ee04:	mov	rdi, qword ptr [rbx + 8]
0x43ee08:	mov	r8d, dword ptr [rax]
0x43ee0b:	mov	ecx, 0x4c4307
0x43ee10:	add	rdi, 0xcc
0x43ee17:	jmp	0x43ebb4
0x43ee1c:	mov	rdi, qword ptr [rsp + 8]
0x43ee21:	mov	rdx, qword ptr [rdi + 8]
0x43ee25:	mov	ecx, dword ptr [rdx]
0x43ee27:	cmp	ecx, 0x2f
0x43ee2a:	ja	0x43f0dc
0x43ee30:	mov	esi, ecx
0x43ee32:	add	ecx, 8
0x43ee35:	add	rsi, qword ptr [rdx + 0x10]
0x43ee39:	mov	dword ptr [rdx], ecx
0x43ee3b:	mov	esi, dword ptr [rsi]
0x43ee3d:	movzx	r9d, sil
0x43ee41:	test	byte ptr [r9 + r9 + 0x4bc840], 0x10
0x43ee4a:	je	0x40cb04
0x43ee50:	mov	rdi, rbx
0x43ee53:	call	0x431ef0
0x43ee58:	jmp	0x43eab3
0x43ee5d:	mov	rcx, qword ptr [rsi + 8]
0x43ee61:	lea	r11, [rcx + 8]
0x43ee65:	mov	qword ptr [rsi + 8], r11
0x43ee69:	jmp	0x43ec0c
0x43ee6e:	mov	r10, qword ptr [rsi + 8]
0x43ee72:	lea	r13, [r10 + 8]
0x43ee76:	mov	qword ptr [rsi + 8], r13
0x43ee7a:	jmp	0x43ece4
0x43ee7f:	mov	r8, qword ptr [rsp + 0x28]
0x43ee84:	xor	r14d, r14d
0x43ee87:	mov	r15d, 0x4c4893
0x43ee8d:	cmp	byte ptr [r8 + 0x43], 0
0x43ee92:	jne	0x40d48e
0x43ee98:	mov	rdi, qword ptr [rbx + 0x70]
0x43ee9c:	mov	rsi, r15
0x43ee9f:	mov	rcx, r14
0x43eea2:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x43eea4:	add	qword ptr [rbx + 0x70], r14
0x43eea8:	mov	rdi, qword ptr [rip + 0xa35d1]
0x43eeaf:	call	0x4039e0
0x43eeb4:	mov	r11, qword ptr [rbx + 0x78]
0x43eeb8:	sub	r11, qword ptr [rbx + 0x70]
0x43eebc:	mov	r15, rax
0x43eebf:	cmp	rax, r11
0x43eec2:	ja	0x40ca88
0x43eec8:	mov	rdi, qword ptr [rbx + 0x70]
0x43eecc:	mov	rsi, qword ptr [rip + 0xa35ad]
0x43eed3:	mov	rdx, r15
0x43eed6:	add	r12, 2
0x43eeda:	call	0x403c60
0x43eedf:	add	qword ptr [rbx + 0x70], r15
0x43eee3:	jmp	0x43e69f
0x43eee8:	mov	rdi, qword ptr [rip + 0xa3599]
0x43eeef:	call	0x4039e0
0x43eef4:	mov	r10, qword ptr [rbx + 0x78]
0x43eef8:	sub	r10, qword ptr [rbx + 0x70]
0x43eefc:	mov	r15, rax
0x43eeff:	cmp	rax, r10
0x43ef02:	ja	0x40cabc
0x43ef08:	mov	rdi, qword ptr [rbx + 0x70]
0x43ef0c:	mov	rsi, qword ptr [rip + 0xa3575]
0x43ef13:	mov	rdx, r15
0x43ef16:	call	0x403c60
0x43ef1b:	mov	rdi, qword ptr [rbx + 0x70]
0x43ef1f:	mov	rsi, qword ptr [rsp + 0x28]
0x43ef24:	add	rdi, r15
0x43ef27:	mov	qword ptr [rbx + 0x70], rdi
0x43ef2b:	mov	qword ptr [rsp + 0x10], rdi
0x43ef30:	movzx	edi, byte ptr [rsi + 0x43]
0x43ef34:	mov	esi, 0x46276b
0x43ef39:	call	0x43f100
0x43ef3e:	mov	rdi, rax
0x43ef41:	mov	r15, rax
0x43ef44:	call	0x4039e0
0x43ef49:	mov	rcx, qword ptr [rbx + 0x78]
0x43ef4d:	mov	r14, rax
0x43ef50:	mov	rax, qword ptr [rsp + 0x10]
0x43ef55:	sub	rcx, rax
0x43ef58:	cmp	r14, rcx
0x43ef5b:	ja	0x40caaa
0x43ef61:	mov	rdi, qword ptr [rbx + 0x70]
0x43ef65:	mov	rdx, r14
0x43ef68:	mov	rsi, r15
0x43ef6b:	add	r12, 2
0x43ef6f:	call	0x403c60
0x43ef74:	add	qword ptr [rbx + 0x70], r14
0x43ef78:	jmp	0x43e69f
0x43ef7d:	test	r9b, r9b
0x43ef80:	jne	0x40d0ce
0x43ef86:	mov	r9d, 1
0x43ef8c:	jmp	0x43e9c9
0x43ef91:	mov	r9, qword ptr [rsp + 0x28]
0x43ef96:	xor	r14d, r14d
0x43ef99:	mov	r15d, 0x4c4893
0x43ef9f:	cmp	byte ptr [r9 + 0x43], 0
0x43efa4:	jne	0x40cbb1
0x43efaa:	mov	rdi, qword ptr [rbx + 0x70]
0x43efae:	mov	rsi, r15
0x43efb1:	mov	rcx, r14
0x43efb4:	add	r12, 2
0x43efb8:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x43efba:	add	qword ptr [rbx + 0x70], r14
0x43efbe:	jmp	0x43e69f
0x43efc3:	movzx	r10d, byte ptr [r12]
0x43efc8:	test	byte ptr [r10 + r10 + 0x4bc840], 4
0x43efd1:	jne	0x43f0f2
0x43efd7:	cmp	r10b, 0x2a
0x43efdb:	jne	0x40d567
0x43efe1:	mov	rsi, qword ptr [rbx + 0x70]
0x43efe5:	cmp	qword ptr [rbx + 0x78], rsi
0x43efe9:	je	0x40d517
0x43efef:	mov	rcx, qword ptr [rbx + 0x70]
0x43eff3:	add	r15, 2
0x43eff7:	lea	rax, [rcx + 1]
0x43effb:	mov	qword ptr [rbx + 0x70], rax
0x43efff:	mov	byte ptr [rcx], 0x2a
0x43f002:	movzx	r12d, byte ptr [r12 + 1]
0x43f008:	test	byte ptr [r12 + r12 + 0x4bc840], 4
0x43f011:	jne	0x40d4d4
0x43f017:	cmp	byte ptr [rsp + 0x20], 0
0x43f01c:	jne	0x40d5a3
0x43f022:	mov	r11d, dword ptr [rsp]
0x43f026:	mov	rdx, qword ptr [rsp + 0x30]
0x43f02b:	add	dword ptr [rsp + 0x3c], 1
0x43f030:	add	r11d, 1
0x43f034:	mov	qword ptr [rsp + r11*8 + 0x50], rdx
0x43f039:	cmp	byte ptr [r15], 0x73
0x43f03d:	jne	0x40d57b
0x43f043:	mov	r10, qword ptr [rbx + 0x70]
0x43f047:	cmp	qword ptr [rbx + 0x78], r10
0x43f04b:	je	0x40d58f
0x43f051:	mov	rdi, qword ptr [rbx + 0x70]
0x43f055:	lea	r12, [r15 + 1]
0x43f059:	lea	rsi, [rdi + 1]
0x43f05d:	mov	qword ptr [rbx + 0x70], rsi
0x43f061:	mov	byte ptr [rdi], 0x73
0x43f064:	jmp	0x43e857
0x43f069:	cmp	byte ptr [rsp + 0x10], 0
0x43f06e:	jne	0x40d60c
0x43f074:	mov	byte ptr [rsp + 0x10], 1
0x43f079:	jmp	0x43e9c9
0x43f07e:	mov	rax, qword ptr [rdi + 8]
0x43f082:	lea	rsi, [rax + 8]
0x43f086:	mov	qword ptr [rdi + 8], rsi
0x43f08a:	jmp	0x43ed13
0x43f08f:	mov	r11, qword ptr [rax + 8]
0x43f093:	lea	r8, [r11 + 8]
0x43f097:	mov	qword ptr [rax + 8], r8
0x43f09b:	mov	r10d, dword ptr [r11]
0x43f09e:	cmp	r13, r9
0x43f0a1:	jne	0x43f0f7
0x43f0a3:	mov	rdx, qword ptr [rax + 8]
0x43f0a7:	lea	r9, [rdx + 8]
0x43f0ab:	mov	qword ptr [rax + 8], r9
0x43f0af:	jmp	0x43eda3
0x43f0b4:	cmp	ecx, 1
0x43f0b7:	je	0x40cace
0x43f0bd:	cmp	ecx, 2
0x43f0c0:	jne	0x43eab3
0x43f0c6:	jmp	0x40cbe3
0x43f0cb:	mov	rax, qword ptr [r11 + 8]
0x43f0cf:	lea	rdi, [rax + 8]
0x43f0d3:	mov	qword ptr [r11 + 8], rdi
0x43f0d7:	jmp	0x43ee04
0x43f0dc:	mov	rsi, qword ptr [rdx + 8]
0x43f0e0:	lea	rax, [rsi + 8]
0x43f0e4:	mov	qword ptr [rdx + 8], rax
0x43f0e8:	jmp	0x43ee3b
0x43f0ed:	jmp	0x40d11e
0x43f0f2:	jmp	0x40d5f3
0x43f0f7:	jmp	0x40d697
0x43f0fc:	nop	dword ptr [rax]
0x43f100:	test	dil, dil
0x43f103:	jne	0x40d6c9
0x43f109:	mov	eax, 0x4c4893
0x43f10e:	ret	
0x43f10f:	nop	
0x43f110:	cmp	dword ptr [rdi + 0x28], 0
0x43f114:	jg	0x40d737
0x43f11a:	jmp	0x4304c0
0x43f11f:	nop	
0x43f120:	push	r14
0x43f122:	movsxd	r14, edx
0x43f125:	push	r13
0x43f127:	push	r12
0x43f129:	mov	r12, rsi
0x43f12c:	push	rbp
0x43f12d:	mov	rbp, r14
0x43f130:	push	rbx
0x43f131:	mov	r13, qword ptr [rdi + 0xb0]
0x43f138:	mov	rbx, rdi
0x43f13b:	mov	rax, qword ptr [r13 + 0x20]
0x43f13f:	sub	rax, qword ptr [r13 + 0x18]
0x43f143:	cmp	r14, rax
0x43f146:	ja	0x40d80d
0x43f14c:	mov	rdi, qword ptr [r13 + 0x18]
0x43f150:	mov	rsi, r12
0x43f153:	mov	rdx, r14
0x43f156:	call	0x403c60
0x43f15b:	add	qword ptr [r13 + 0x18], r14
0x43f15f:	xor	esi, esi
0x43f161:	jmp	0x43f17d
0x43f163:	cmp	byte ptr [r12 + rsi], 0xa
0x43f168:	je	0x43f18a
0x43f16a:	mov	ecx, dword ptr [rbx + 0xc8]
0x43f170:	lea	edx, [rcx + 1]
0x43f173:	mov	dword ptr [rbx + 0xc8], edx
0x43f179:	add	rsi, 1
0x43f17d:	cmp	ebp, esi
0x43f17f:	jg	0x43f163
0x43f181:	pop	rbx
0x43f182:	pop	rbp
0x43f183:	pop	r12
0x43f185:	pop	r13
0x43f187:	pop	r14
0x43f189:	ret	
0x43f18a:	xor	edx, edx
0x43f18c:	jmp	0x43f173
0x43f18e:	nop	
0x43f190:	endbr64	
0x43f194:	push	r15
0x43f196:	push	r14
0x43f198:	mov	r14, rsi
0x43f19b:	push	r13
0x43f19d:	mov	r13d, edi
0x43f1a0:	mov	edi, 0x4c6c55
0x43f1a5:	push	r12
0x43f1a7:	push	rbp
0x43f1a8:	xor	ebp, ebp
0x43f1aa:	push	rbx
0x43f1ab:	push	rcx
0x43f1ac:	call	0x42db40
0x43f1b1:	mov	r15, rax
0x43f1b4:	jmp	0x43f212
0x43f1b6:	movsxd	rax, ebp
0x43f1b9:	mov	r12, qword ptr [r14 + rax*8]
0x43f1bd:	lea	rcx, [rax*8]
0x43f1c5:	cmp	byte ptr [r12], 0x2d
0x43f1ca:	jne	0x43f226
0x43f1cc:	cmp	byte ptr [r12 + 1], 0x6c
0x43f1d2:	jne	0x43f226
0x43f1d4:	cmp	byte ptr [r12 + 2], 0
0x43f1da:	lea	rdx, [r12 + 2]
0x43f1df:	je	0x40d83f
0x43f1e5:	xor	r8d, r8d
0x43f1e8:	mov	ecx, 0x4c6c55
0x43f1ed:	mov	esi, 0x4c4328
0x43f1f2:	mov	rdi, r15
0x43f1f5:	xor	eax, eax
0x43f1f7:	call	0x42d870
0x43f1fc:	mov	rbx, rax
0x43f1ff:	cmp	rbx, r15
0x43f202:	je	0x43f20c
0x43f204:	mov	rdi, r15
0x43f207:	call	0x403830
0x43f20c:	add	ebp, 1
0x43f20f:	mov	r15, rbx
0x43f212:	cmp	ebp, r13d
0x43f215:	jl	0x43f1b6
0x43f217:	pop	rdx
0x43f218:	mov	rax, r15
0x43f21b:	pop	rbx
0x43f21c:	pop	rbp
0x43f21d:	pop	r12
0x43f21f:	pop	r13
0x43f221:	pop	r14
0x43f223:	pop	r15
0x43f225:	ret	
0x43f226:	mov	rdi, r12
0x43f229:	mov	rbx, r15
0x43f22c:	call	0x4039e0
0x43f231:	mov	edi, 0x45b67b
0x43f236:	lea	rsi, [r12 + rax - 2]
0x43f23b:	call	0x403be0
0x43f240:	test	eax, eax
0x43f242:	je	0x40d81d
0x43f248:	jmp	0x43f20c
0x43f24a:	nop	word ptr [rax + rax]
0x43f250:	endbr64	
0x43f254:	push	rbx
0x43f255:	mov	rsi, rdi
0x43f258:	mov	rbx, rdi
0x43f25b:	mov	ecx, 1
0x43f260:	mov	edx, 4
0x43f265:	mov	edi, 0x4e24b0
0x43f26a:	call	0x439620
0x43f26f:	test	rax, rax
0x43f272:	cmove	rax, rbx
0x43f276:	pop	rbx
0x43f277:	ret	
0x43f278:	nop	dword ptr [rax + rax]
0x43f280:	endbr64	
0x43f284:	sub	edi, 1
0x43f287:	push	rbp
0x43f288:	jne	0x40dc2f
0x43f28e:	mov	rbp, qword ptr [rsi]
0x43f291:	mov	esi, 0x45d7da
0x43f296:	mov	rdi, rbp
0x43f299:	call	0x403be0
0x43f29e:	test	eax, eax
0x43f2a0:	je	0x43f367
0x43f2a6:	mov	esi, 0x4beb86
0x43f2ab:	mov	rdi, rbp
0x43f2ae:	call	0x403be0
0x43f2b3:	test	eax, eax
0x43f2b5:	je	0x43f34f
0x43f2bb:	mov	esi, 0x4beb70
0x43f2c0:	mov	rdi, rbp
0x43f2c3:	call	0x403be0
0x43f2c8:	test	eax, eax
0x43f2ca:	je	0x40dc50
0x43f2d0:	mov	esi, 0x4beb7f
0x43f2d5:	mov	rdi, rbp
0x43f2d8:	call	0x403be0
0x43f2dd:	test	eax, eax
0x43f2df:	je	0x40dc36
0x43f2e5:	mov	esi, 0x460c7a
0x43f2ea:	mov	rdi, rbp
0x43f2ed:	call	0x403be0
0x43f2f2:	test	eax, eax
0x43f2f4:	je	0x43f338
0x43f2f6:	mov	esi, 0x4bebd8
0x43f2fb:	mov	rdi, rbp
0x43f2fe:	call	0x403be0
0x43f303:	test	eax, eax
0x43f305:	je	0x43f37f
0x43f307:	mov	esi, 0x45d022
0x43f30c:	mov	rdi, rbp
0x43f30f:	call	0x403be0
0x43f314:	test	eax, eax
0x43f316:	jne	0x40dc2f
0x43f31c:	mov	eax, dword ptr [rip + 0xa580e]
0x43f322:	mov	edx, 0
0x43f327:	and	eax, 0x19
0x43f32a:	cmp	eax, 0x10
0x43f32d:	mov	eax, 0x4c4893
0x43f332:	cmovne	rax, rdx
0x43f336:	pop	rbp
0x43f337:	ret	
0x43f338:	test	byte ptr [rip + 0xa57f1], 8
0x43f33f:	mov	eax, 0x4c4893
0x43f344:	mov	esi, 0
0x43f349:	pop	rbp
0x43f34a:	cmove	rax, rsi
0x43f34e:	ret	
0x43f34f:	test	byte ptr [rip + 0xa57dd], 0x20
0x43f356:	mov	eax, 0x4c4893
0x43f35b:	mov	r9d, 0
0x43f361:	pop	rbp
0x43f362:	cmove	rax, r9
0x43f366:	ret	
0x43f367:	test	byte ptr [rip + 0xa57c2], 2
0x43f36e:	mov	eax, 0x4c4893
0x43f373:	mov	r10d, 0
0x43f379:	pop	rbp
0x43f37a:	cmove	rax, r10
0x43f37e:	ret	
0x43f37f:	xor	eax, eax
0x43f381:	test	dword ptr [rip + 0xa57a5], 0x3ffffe0
0x43f38b:	jne	0x40dc1a
0x43f391:	pop	rbp
0x43f392:	ret	
0x43f393:	nop	word ptr cs:[rax + rax]
0x43f39e:	nop	
0x43f3a0:	push	r14
0x43f3a2:	push	r13
0x43f3a4:	push	r12
0x43f3a6:	push	rbp
0x43f3a7:	push	rbx
0x43f3a8:	sub	rsp, 0x10
0x43f3ac:	mov	r12, qword ptr [rdi + 8]
0x43f3b0:	movdqu	xmm0, xmmword ptr [r12 + 0xb0]
0x43f3ba:	movdqa	xmm1, xmm0
0x43f3be:	movhlps	xmm2, xmm0
0x43f3c1:	punpckhqdq	xmm1, xmm0
0x43f3c5:	movaps	xmmword ptr [rsp], xmm1
0x43f3c9:	cmp	qword ptr [r12 + 0xb0], r12
0x43f3d1:	jne	0x40dd4e
0x43f3d7:	movq	rbp, xmm2
0x43f3dc:	mov	r14, rdi
0x43f3df:	xor	ebx, ebx
0x43f3e1:	lea	r13, [rbp + 8]
0x43f3e5:	mov	eax, ebx
0x43f3e7:	mov	rsi, qword ptr [r13 + rax*8]
0x43f3ec:	test	rsi, rsi
0x43f3ef:	je	0x43f3fe
0x43f3f1:	mov	rdi, r14
0x43f3f4:	add	ebx, 1
0x43f3f7:	call	0x430480
0x43f3fc:	jmp	0x43f3e5
0x43f3fe:	mov	rdx, qword ptr [rbp]
0x43f402:	mov	qword ptr [r12 + 0xb8], rdx
0x43f40a:	cmp	qword ptr [r12 + 0x60], rbp
0x43f40f:	jae	0x40dd62
0x43f415:	cmp	qword ptr [r12 + 0x78], rbp
0x43f41a:	jbe	0x40dd62
0x43f420:	movdqa	xmm3, xmmword ptr [rsp]
0x43f425:	movups	xmmword ptr [r12 + 0x68], xmm3
0x43f42b:	add	rsp, 0x10
0x43f42f:	pop	rbx
0x43f430:	pop	rbp
0x43f431:	pop	r12
0x43f433:	pop	r13
0x43f435:	pop	r14
0x43f437:	ret	
0x43f438:	nop	dword ptr [rax + rax]
0x43f440:	endbr64	
0x43f444:	push	rbp
0x43f445:	push	rbx
0x43f446:	mov	rbx, rdi
0x43f449:	push	rdx
0x43f44a:	mov	rax, qword ptr [rdi + 8]
0x43f44e:	mov	rbp, qword ptr [rax + 0xb0]
0x43f455:	mov	rdx, qword ptr [rbp + 0x18]
0x43f459:	cmp	qword ptr [rbp + 0x20], rdx
0x43f45d:	je	0x40fe28
0x43f463:	mov	rcx, qword ptr [rbp + 0x18]
0x43f467:	lea	rsi, [rcx + 1]
0x43f46b:	mov	qword ptr [rbp + 0x18], rsi
0x43f46f:	mov	byte ptr [rcx], 0xa
0x43f472:	mov	rdi, qword ptr [rbx + 8]
0x43f476:	mov	byte ptr [rbx + 0x41], 0
0x43f47a:	mov	dword ptr [rdi + 0xc8], 0
0x43f484:	pop	rax
0x43f485:	pop	rbx
0x43f486:	pop	rbp
0x43f487:	ret	
0x43f488:	nop	dword ptr [rax + rax]
0x43f490:	endbr64	
0x43f494:	push	r12
0x43f496:	push	rbp
0x43f497:	push	rbx
0x43f498:	mov	r12, qword ptr [rdi + 8]
0x43f49c:	mov	byte ptr [rdi + 0x40], 0
0x43f4a0:	cmp	byte ptr [r12 + 0x14c], 0
0x43f4a9:	mov	dword ptr [rdi + 0x20], 0
0x43f4b0:	je	0x40fe3a
0x43f4b6:	mov	rbp, qword ptr [r12 + 0xb0]
0x43f4be:	mov	rbx, rdi
0x43f4c1:	mov	rax, qword ptr [rbp + 0x18]
0x43f4c5:	cmp	qword ptr [rbp + 0x20], rax
0x43f4c9:	je	0x40fe3f
0x43f4cf:	mov	rcx, qword ptr [rbp + 0x18]
0x43f4d3:	lea	rdx, [rcx + 1]
0x43f4d7:	mov	qword ptr [rbp + 0x18], rdx
0x43f4db:	mov	byte ptr [rcx], 0
0x43f4de:	mov	rsi, qword ptr [rbx + 8]
0x43f4e2:	mov	rdi, qword ptr [r12 + 0xb0]
0x43f4ea:	mov	rsi, qword ptr [rsi + 0xc0]
0x43f4f1:	mov	rdi, qword ptr [rdi + 0x10]
0x43f4f5:	call	0x403aa0
0x43f4fa:	mov	rdi, rbx
0x43f4fd:	call	0x430a90
0x43f502:	mov	r8, qword ptr [rbx + 8]
0x43f506:	pop	rbx
0x43f507:	pop	rbp
0x43f508:	pop	r12
0x43f50a:	mov	rdi, qword ptr [r8 + 0xc0]
0x43f511:	jmp	0x403cb0
0x43f516:	nop	word ptr cs:[rax + rax]
0x43f520:	push	rbp
0x43f521:	lea	eax, [rsi - 2]
0x43f524:	sub	rsp, 0x10
0x43f528:	cmp	eax, 0xc
0x43f52b:	ja	0x40fe9b
0x43f531:	mov	rbp, rdi
0x43f534:	notrack jmp	qword ptr ds:[rax*8 + 0x4c50f0]
0x43f53c:	cmp	byte ptr [rdi + 0x86], 0
0x43f543:	jne	0x40fe96
0x43f549:	cmp	byte ptr [rdi + 0x90], 0
0x43f550:	jne	0x40feaf
0x43f556:	add	rsp, 0x10
0x43f55a:	pop	rbp
0x43f55b:	ret	
0x43f55c:	cmp	byte ptr [rdi + 0x86], 0
0x43f563:	jne	0x40fe96
0x43f569:	call	0x43f6b0
0x43f56e:	mov	rdi, qword ptr [rip + 0xa3b2b]
0x43f575:	mov	esi, 0x4c45a3
0x43f57a:	xor	eax, eax
0x43f57c:	call	0x43a390
0x43f581:	mov	edi, 1
0x43f586:	call	0x403e70
0x43f58b:	nop	
0x43f58c:	nop	dword ptr [rax]
0x43f590:	endbr64	
0x43f594:	sub	dword ptr [rip + 0xa3c55], 1
0x43f59b:	jne	0x43f5b1
0x43f59d:	cmp	dword ptr [rip + 0xa3c50], 0
0x43f5a4:	jg	0x43f5b2
0x43f5a6:	mov	dword ptr [rip + 0xa3c44], 0
0x43f5b0:	ret	
0x43f5b1:	ret	
0x43f5b2:	mov	rax, qword ptr [rip + 0xa3c47]
0x43f5b9:	test	rax, rax
0x43f5bc:	jne	0x40ff40
0x43f5c2:	jmp	0x43f5a6
0x43f5c4:	nop	word ptr cs:[rax + rax]
0x43f5cf:	nop	
0x43f5d0:	endbr64	
0x43f5d4:	push	rax
0x43f5d5:	pop	rax
0x43f5d6:	sub	rsp, 0x188
0x43f5dd:	mov	r11d, edi
0x43f5e0:	mov	r10, rsi
0x43f5e3:	mov	qword ptr [rsp + 0xe0], rdx
0x43f5eb:	mov	qword ptr [rsp + 0xe8], rcx
0x43f5f3:	mov	qword ptr [rsp + 0xf0], r8
0x43f5fb:	mov	qword ptr [rsp + 0xf8], r9
0x43f603:	test	al, al
0x43f605:	je	0x43f647
0x43f607:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x43f60f:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x43f617:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x43f61f:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x43f627:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x43f62f:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x43f637:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x43f63f:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x43f647:	lea	rdx, [rsp + 0x190]
0x43f64f:	xor	esi, esi
0x43f651:	lea	rdi, [rsp + 0x20]
0x43f656:	add	dword ptr [rip + 0xa3b93], 1
0x43f65d:	mov	qword ptr [rsp + 8], rdx
0x43f662:	mov	edx, r11d
0x43f665:	mov	r8, rsp
0x43f668:	lea	rcx, [rsp + 0xd0]
0x43f670:	mov	qword ptr [rsp + 0x10], rcx
0x43f675:	mov	r9d, 2
0x43f67b:	mov	rcx, r10
0x43f67e:	mov	dword ptr [rsp], 0x10
0x43f685:	mov	dword ptr [rsp + 4], 0x30
0x43f68d:	call	0x43de80
0x43f692:	or	edx, 0xffffffff
0x43f695:	call	0x43def0
0x43f69a:	mov	edx, 0x4c45bc
0x43f69f:	mov	esi, 0x702
0x43f6a4:	mov	edi, 0x4c438f
0x43f6a9:	call	0x415bba
0x43f6ae:	nop	
0x43f6b0:	push	r15
0x43f6b2:	push	r14
0x43f6b4:	push	r13
0x43f6b6:	push	r12
0x43f6b8:	push	rbp
0x43f6b9:	mov	rbp, rdi
0x43f6bc:	push	rbx
0x43f6bd:	push	rdx
0x43f6be:	mov	rax, qword ptr [rdi + 0x148]
0x43f6c5:	test	rax, rax
0x43f6c8:	je	0x43f6cc
0x43f6ca:	call	rax
0x43f6cc:	mov	rbx, qword ptr [rip + 0xa6c9d]
0x43f6d3:	test	rbx, rbx
0x43f6d6:	jne	0x43f71f
0x43f6d8:	mov	rdi, qword ptr [rbp + 0x50]
0x43f6dc:	call	0x403830
0x43f6e1:	mov	rdi, qword ptr [rbp]
0x43f6e5:	mov	qword ptr [rbp + 0x50], 0
0x43f6ed:	mov	rcx, qword ptr [rdi]
0x43f6f0:	call	qword ptr [rcx]
0x43f6f2:	mov	rdi, qword ptr [rbp]
0x43f6f6:	call	0x403830
0x43f6fb:	mov	r15, qword ptr [rbp + 0x128]
0x43f702:	mov	qword ptr [rbp], 0
0x43f70a:	test	r15, r15
0x43f70d:	jne	0x40ff60
0x43f713:	pop	rax
0x43f714:	pop	rbx
0x43f715:	pop	rbp
0x43f716:	pop	r12
0x43f718:	pop	r13
0x43f71a:	pop	r14
0x43f71c:	pop	r15
0x43f71e:	ret	
0x43f71f:	imul	rdx, qword ptr [rbx - 8], 0x58
0x43f724:	add	rbx, rdx
0x43f727:	cmp	qword ptr [rip + 0xa6c42], rbx
0x43f72e:	je	0x43f77a
0x43f730:	mov	rdi, qword ptr [rbx - 0x48]
0x43f734:	sub	rbx, 0x58
0x43f738:	test	rdi, rdi
0x43f73b:	je	0x43f74a
0x43f73d:	call	0x4039c0
0x43f742:	mov	qword ptr [rbx + 0x10], 0
0x43f74a:	mov	rdi, qword ptr [rbx + 0x18]
0x43f74e:	test	rdi, rdi
0x43f751:	je	0x43f760
0x43f753:	call	0x403830
0x43f758:	mov	qword ptr [rbx + 0x18], 0
0x43f760:	mov	rdi, qword ptr [rbx + 0x50]
0x43f764:	test	rdi, rdi
0x43f767:	je	0x43f727
0x43f769:	cmp	byte ptr [rdi + 3], 0
0x43f76d:	js	0x40ff54
0x43f773:	call	0x403830
0x43f778:	jmp	0x43f727
0x43f77a:	imul	rsi, qword ptr [rbx - 8], 0x58
0x43f77f:	lea	rdi, [rbx - 8]
0x43f783:	add	rsi, 8
0x43f787:	call	0x440250
0x43f78c:	mov	qword ptr [rip + 0xa6bd9], 0
0x43f797:	jmp	0x43f6d8
0x43f79c:	nop	dword ptr [rax]
0x43f7a0:	endbr64	
0x43f7a4:	cmp	dword ptr [rdi + 0x3c], 0
0x43f7a8:	jne	0x41004d
0x43f7ae:	ret	
0x43f7af:	nop	
0x43f7b0:	endbr64	
0x43f7b4:	push	r13
0x43f7b6:	mov	r13, rsi
0x43f7b9:	mov	rsi, rcx
0x43f7bc:	mov	ecx, r9d
0x43f7bf:	push	r12
0x43f7c1:	mov	r12d, r9d
0x43f7c4:	push	rbp
0x43f7c5:	mov	rbp, rdi
0x43f7c8:	mov	rdi, rdx
0x43f7cb:	mov	rdx, r8
0x43f7ce:	push	rbx
0x43f7cf:	sub	rsp, 0x68
0x43f7d3:	mov	ebx, dword ptr [rsp + 0xa8]
0x43f7da:	mov	r8, rsp
0x43f7dd:	call	0x438550
0x43f7e2:	mov	ecx, r12d
0x43f7e5:	mov	rsi, r13
0x43f7e8:	mov	rdi, rbp
0x43f7eb:	push	rax
0x43f7ec:	movzx	eax, bl
0x43f7ef:	push	qword ptr [rsp + 0xb8]
0x43f7f6:	push	rax
0x43f7f7:	push	qword ptr [rsp + 0xb8]
0x43f7fe:	mov	r9d, dword ptr [rsp + 0xb8]
0x43f806:	mov	r8d, dword ptr [rsp + 0xb0]
0x43f80e:	lea	rdx, [rsp + 0x20]
0x43f813:	call	0x438a10
0x43f818:	add	rsp, 0x88
0x43f81f:	pop	rbx
0x43f820:	pop	rbp
0x43f821:	pop	r12
0x43f823:	pop	r13
0x43f825:	ret	
0x43f826:	nop	word ptr cs:[rax + rax]
0x43f830:	endbr64	
0x43f834:	cmp	byte ptr [rdi + 0x15e9], 0
0x43f83b:	jne	0x43f84a
0x43f83d:	xor	eax, eax
0x43f83f:	test	esi, esi
0x43f841:	sete	al
0x43f844:	mov	dword ptr [rdi + 0x12c0], eax
0x43f84a:	cmp	byte ptr [rdi + 0x15e8], 0
0x43f851:	jne	0x43f860
0x43f853:	xor	edx, edx
0x43f855:	test	esi, esi
0x43f857:	sete	dl
0x43f85a:	mov	dword ptr [rdi + 0x1220], edx
0x43f860:	cmp	byte ptr [rdi + 0x15e0], 0
0x43f867:	jne	0x43f86f
0x43f869:	mov	dword ptr [rdi + 0xbb0], esi
0x43f86f:	cmp	byte ptr [rdi + 0x15e5], 0
0x43f876:	jne	0x43f87e
0x43f878:	mov	dword ptr [rdi + 0x1134], esi
0x43f87e:	ret	
0x43f87f:	nop	
0x43f880:	endbr64	
0x43f884:	mov	dword ptr [rdi], esi
0x43f886:	ret	
0x43f887:	nop	word ptr [rax + rax]
0x43f890:	endbr64	
0x43f894:	mov	dword ptr [rdi], esi
0x43f896:	ret	
0x43f897:	nop	word ptr [rax + rax]
0x43f8a0:	endbr64	
0x43f8a4:	push	rcx
0x43f8a5:	cmp	qword ptr [rsp + 0x18], 0x4e30c0
0x43f8ae:	jne	0x41008c
0x43f8b4:	test	r8d, r8d
0x43f8b7:	jne	0x4100a0
0x43f8bd:	mov	ecx, r9d
0x43f8c0:	pop	rax
0x43f8c1:	jmp	0x43f8d0
0x43f8c3:	nop	word ptr cs:[rax + rax]
0x43f8ce:	nop	
0x43f8d0:	endbr64	
0x43f8d4:	push	r13
0x43f8d6:	push	r12
0x43f8d8:	push	rbp
0x43f8d9:	push	rbx
0x43f8da:	push	rsi
0x43f8db:	mov	rax, qword ptr [rdx]
0x43f8de:	mov	rbx, qword ptr [rdx + 0x48]
0x43f8e2:	sub	rax, 0x6cd
0x43f8e8:	cmp	rax, 0xc7
0x43f8ee:	ja	0x43f925
0x43f8f0:	mov	rbp, rdi
0x43f8f3:	mov	r13d, ecx
0x43f8f6:	notrack jmp	qword ptr ds:[rax*8 + 0x4c5158]
0x43f8fe:	mov	rdx, qword ptr [rdi + 0x30]
0x43f902:	mov	rsi, qword ptr [rdi + 0x48]
0x43f906:	test	ebx, ebx
0x43f908:	je	0x4100dd
0x43f90e:	mov	ebx, 0x2f001
0x43f913:	shl	rbx, 0x26
0x43f917:	or	rdx, rbx
0x43f91a:	or	rsi, rbx
0x43f91d:	mov	qword ptr [rdi + 0x30], rdx
0x43f921:	mov	qword ptr [rdi + 0x48], rsi
0x43f925:	pop	rdx
0x43f926:	mov	eax, 1
0x43f92b:	pop	rbx
0x43f92c:	pop	rbp
0x43f92d:	pop	r12
0x43f92f:	pop	r13
0x43f931:	ret	
0x43f932:	nop	word ptr cs:[rax + rax]
0x43f93d:	nop	dword ptr [rax]
0x43f940:	endbr64	
0x43f944:	push	r15
0x43f946:	push	r14
0x43f948:	push	r13
0x43f94a:	mov	r13d, esi
0x43f94d:	mov	esi, edi
0x43f94f:	push	r12
0x43f951:	mov	r12, rdx
0x43f954:	push	rbp
0x43f955:	mov	ebp, r8d
0x43f958:	imul	r8, rsi, 0x60
0x43f95c:	push	rbx
0x43f95d:	mov	ebx, ecx
0x43f95f:	sub	rsp, 0x58
0x43f963:	mov	dword ptr [rsp + 4], r9d
0x43f968:	lea	r9, [r8 + 0x48baa0]
0x43f96f:	mov	rax, qword ptr [rsp + 0x90]
0x43f977:	mov	rdx, qword ptr [rsp + 0x98]
0x43f97f:	mov	rcx, qword ptr [rsp + 0xa0]
0x43f987:	movzx	r10d, word ptr [r9 + 0x30]
0x43f98c:	mov	qword ptr [rsp + 8], rax
0x43f991:	mov	qword ptr [rsp + 0x10], rdx
0x43f996:	mov	r14, qword ptr [rsp + 0xa8]
0x43f99e:	mov	qword ptr [rsp + 0x18], rcx
0x43f9a3:	cmp	r10w, 0x823
0x43f9a9:	jne	0x411ad7
0x43f9af:	mov	r15d, edi
0x43f9b2:	lea	r11d, [r15 - 0x825]
0x43f9b9:	cmp	r11d, 1
0x43f9bd:	jbe	0x43f9d8
0x43f9bf:	test	r14, r14
0x43f9c2:	je	0x43f9d4
0x43f9c4:	mov	ecx, ebp
0x43f9c6:	mov	edx, r13d
0x43f9c9:	mov	esi, r15d
0x43f9cc:	mov	rdi, r14
0x43f9cf:	call	0x43fa60
0x43f9d4:	test	bl, bl
0x43f9d6:	jne	0x43f9e7
0x43f9d8:	add	rsp, 0x58
0x43f9dc:	pop	rbx
0x43f9dd:	pop	rbp
0x43f9de:	pop	r12
0x43f9e0:	pop	r13
0x43f9e2:	pop	r14
0x43f9e4:	pop	r15
0x43f9e6:	ret	
0x43f9e7:	mov	r10d, r15d
0x43f9ea:	imul	rbx, r10, 0x60
0x43f9ee:	lea	rsi, [rbx + 0x48baa0]
0x43f9f5:	mov	ecx, dword ptr [rsi + 0x48]
0x43f9f8:	test	ecx, 0xfffffffb
0x43f9fe:	je	0x43fa05
0x43fa00:	cmp	ecx, 6
0x43fa03:	jne	0x43f9d8
0x43fa05:	test	r12, r12
0x43fa08:	jne	0x411b2c
0x43fa0e:	imul	rdx, r10, 0x60
0x43fa12:	test	byte ptr [rdx + 0x48bade], 0x40
0x43fa19:	jne	0x411b03
0x43fa1f:	mov	r8d, 1
0x43fa25:	xor	r12d, r12d
0x43fa28:	push	rax
0x43fa29:	mov	rcx, r12
0x43fa2c:	mov	rdx, r10
0x43fa2f:	push	r14
0x43fa31:	push	0
0x43fa33:	push	qword ptr [rsp + 0x20]
0x43fa37:	push	rbp
0x43fa38:	push	r13
0x43fa3a:	mov	r9d, dword ptr [rsp + 0x34]
0x43fa3f:	mov	rsi, qword ptr [rsp + 0x48]
0x43fa44:	mov	rdi, qword ptr [rsp + 0x40]
0x43fa49:	call	0x43f7b0
0x43fa4e:	add	rsp, 0x30
0x43fa52:	jmp	0x43f9d8
0x43fa54:	nop	word ptr cs:[rax + rax]
0x43fa5f:	nop	
0x43fa60:	endbr64	
0x43fa64:	test	esi, esi
0x43fa66:	js	0x43fb1a
0x43fa6c:	push	r14
0x43fa6e:	push	r13
0x43fa70:	push	r12
0x43fa72:	push	rbp
0x43fa73:	mov	ebp, esi
0x43fa75:	push	rbx
0x43fa76:	mov	rbx, rdi
0x43fa79:	cmp	esi, dword ptr [rdi + 0x48]
0x43fa7c:	jge	0x43fb05
0x43fa82:	mov	r12d, edx
0x43fa85:	cmp	edx, 0xe
0x43fa88:	jg	0x43fb05
0x43fa8a:	mov	rax, qword ptr [rdi + 0x50]
0x43fa8e:	movsxd	r14, esi
0x43fa91:	mov	r13d, ecx
0x43fa94:	lea	rcx, [rax + r14*4]
0x43fa98:	mov	edx, dword ptr [rcx]
0x43fa9a:	test	r13d, r13d
0x43fa9d:	je	0x43fb0e
0x43fa9f:	test	edx, edx
0x43faa1:	jne	0x43fad0
0x43faa3:	mov	rdx, qword ptr [rdi + 0xc0]
0x43faaa:	mov	esi, dword ptr [rdi + 0x104]
0x43fab0:	mov	edi, ebp
0x43fab2:	call	qword ptr [rbx + 0xb8]
0x43fab8:	test	eax, eax
0x43faba:	je	0x43fb13
0x43fabc:	cmp	byte ptr [rbx + 0x44], 1
0x43fac0:	sbb	esi, esi
0x43fac2:	and	esi, 2
0x43fac5:	add	esi, 4
0x43fac8:	mov	rdi, qword ptr [rbx + 0x50]
0x43facc:	mov	dword ptr [rdi + r14*4], esi
0x43fad0:	movsxd	r14, dword ptr [rbx + 0x60]
0x43fad4:	mov	rdi, qword ptr [rbx + 0x58]
0x43fad8:	lea	r8d, [r14 - 1]
0x43fadc:	movsxd	r9, r8d
0x43fadf:	imul	rsi, r9, 0xc
0x43fae3:	add	rsi, 0x18
0x43fae7:	call	0x42db80
0x43faec:	imul	r10, r14, 0xc
0x43faf0:	mov	qword ptr [rbx + 0x58], rax
0x43faf4:	add	rax, r10
0x43faf7:	mov	dword ptr [rax], r13d
0x43fafa:	mov	dword ptr [rax + 4], ebp
0x43fafd:	mov	dword ptr [rax + 8], r12d
0x43fb01:	add	dword ptr [rbx + 0x60], 1
0x43fb05:	pop	rbx
0x43fb06:	pop	rbp
0x43fb07:	pop	r12
0x43fb09:	pop	r13
0x43fb0b:	pop	r14
0x43fb0d:	ret	
0x43fb0e:	mov	dword ptr [rcx], r12d
0x43fb11:	jmp	0x43fb05
0x43fb13:	mov	esi, 1
0x43fb18:	jmp	0x43fac8
0x43fb1a:	ret	
0x43fb1b:	nop	dword ptr [rax + rax]
0x43fb20:	endbr64	
0x43fb24:	mov	dword ptr [rdi], esi
0x43fb26:	ret	
0x43fb27:	nop	word ptr [rax + rax]
0x43fb30:	endbr64	
0x43fb34:	mov	dword ptr [rdi], esi
0x43fb36:	ret	
0x43fb37:	nop	word ptr [rax + rax]
0x43fb40:	push	r12
0x43fb42:	mov	r12, rsi
0x43fb45:	push	rbp
0x43fb46:	mov	rbp, rdi
0x43fb49:	push	rbx
0x43fb4a:	sub	rsp, 0x10
0x43fb4e:	cmp	rdx, -1
0x43fb52:	jne	0x43fba5
0x43fb54:	mov	rdi, rsi
0x43fb57:	call	0x4039e0
0x43fb5c:	mov	rbx, rax
0x43fb5f:	mov	r8, r12
0x43fb62:	jmp	0x43fb8a
0x43fb64:	movzx	r10d, byte ptr [r12]
0x43fb69:	lea	rdx, [r12 + 1]
0x43fb6e:	movzx	ecx, r10b
0x43fb72:	mov	eax, r10d
0x43fb75:	test	byte ptr [rcx + rcx + 0x4bc840], 0x10
0x43fb7d:	je	0x411ddb
0x43fb83:	mov	r12, rdx
0x43fb86:	sub	rbx, 1
0x43fb8a:	test	rbx, rbx
0x43fb8d:	jne	0x43fb64
0x43fb8f:	add	rsp, 0x10
0x43fb93:	mov	rdx, r12
0x43fb96:	mov	rdi, rbp
0x43fb99:	mov	rsi, r8
0x43fb9c:	pop	rbx
0x43fb9d:	pop	rbp
0x43fb9e:	pop	r12
0x43fba0:	jmp	0x43f110
0x43fba5:	mov	rbx, rdx
0x43fba8:	jmp	0x43fb5f
0x43fbaa:	nop	word ptr [rax + rax]
0x43fbb0:	endbr64	
0x43fbb4:	push	rbx
0x43fbb5:	mov	ebx, edi
0x43fbb7:	call	0x403ec0
0x43fbbc:	test	rax, rax
0x43fbbf:	je	0x43fbc3
0x43fbc1:	pop	rbx
0x43fbc2:	ret	
0x43fbc3:	mov	r8d, ebx
0x43fbc6:	mov	ecx, 0x4c4622
0x43fbcb:	mov	edx, 0x2b
0x43fbd0:	mov	esi, 1
0x43fbd5:	mov	edi, 0x4e6340
0x43fbda:	call	0x403f60
0x43fbdf:	mov	eax, 0x4e6340
0x43fbe4:	pop	rbx
0x43fbe5:	ret	
0x43fbe6:	nop	word ptr cs:[rax + rax]
0x43fbf0:	push	rdx
0x43fbf1:	mov	edi, 0x588
0x43fbf6:	call	0x440460
0x43fbfb:	pxor	xmm0, xmm0
0x43fbff:	lea	rcx, [rax + 8]
0x43fc03:	mov	qword ptr [rax], 0x10
0x43fc0a:	add	rax, 0x588
0x43fc10:	mov	rdx, rcx
0x43fc13:	mov	dword ptr [rdx], 0
0x43fc19:	add	rdx, 0x58
0x43fc1d:	movups	xmmword ptr [rdx - 0x50], xmm0
0x43fc21:	mov	qword ptr [rdx - 0x40], 0
0x43fc29:	movups	xmmword ptr [rdx - 0x38], xmm0
0x43fc2d:	movups	xmmword ptr [rdx - 0x28], xmm0
0x43fc31:	mov	qword ptr [rdx - 0x18], 0
0x43fc39:	mov	byte ptr [rdx - 0x10], 1
0x43fc3d:	mov	qword ptr [rdx - 8], 0
0x43fc45:	cmp	rdx, rax
0x43fc48:	jne	0x43fc13
0x43fc4a:	mov	qword ptr [rip + 0xa671f], rcx
0x43fc51:	pop	rax
0x43fc52:	ret	
0x43fc53:	nop	word ptr cs:[rax + rax]
0x43fc5e:	nop	
0x43fc60:	push	rbp
0x43fc61:	push	rbx
0x43fc62:	mov	rbx, rdi
0x43fc65:	push	rcx
0x43fc66:	mov	rdi, qword ptr [rdi + 0x10]
0x43fc6a:	call	0x403c30
0x43fc6f:	test	eax, eax
0x43fc71:	jne	0x412303
0x43fc77:	mov	rdi, qword ptr [rbx + 0x10]
0x43fc7b:	call	0x403920
0x43fc80:	test	eax, eax
0x43fc82:	jne	0x412303
0x43fc88:	mov	rdx, qword ptr [rbx + 0x20]
0x43fc8c:	cmp	qword ptr [rbx + 0x28], rdx
0x43fc90:	jne	0x43fcb9
0x43fc92:	lea	rax, [rdx + rdx]
0x43fc96:	test	rdx, rdx
0x43fc99:	mov	ebp, 0x1000
0x43fc9e:	mov	rdi, qword ptr [rbx + 0x18]
0x43fca2:	cmovne	rbp, rax
0x43fca6:	mov	rsi, rbp
0x43fca9:	call	0x42db80
0x43fcae:	mov	qword ptr [rbx + 0x20], rbp
0x43fcb2:	mov	rdx, rbp
0x43fcb5:	mov	qword ptr [rbx + 0x18], rax
0x43fcb9:	mov	rdi, qword ptr [rbx + 0x28]
0x43fcbd:	mov	rcx, qword ptr [rbx + 0x10]
0x43fcc1:	mov	esi, 1
0x43fcc6:	sub	rdx, rdi
0x43fcc9:	add	rdi, qword ptr [rbx + 0x18]
0x43fccd:	call	0x403940
0x43fcd2:	mov	rdi, qword ptr [rbx + 0x10]
0x43fcd6:	mov	rbp, rax
0x43fcd9:	call	0x403920
0x43fcde:	test	eax, eax
0x43fce0:	jne	0x412303
0x43fce6:	add	qword ptr [rbx + 0x28], rbp
0x43fcea:	test	rbp, rbp
0x43fced:	setne	al
0x43fcf0:	pop	rdx
0x43fcf1:	pop	rbx
0x43fcf2:	pop	rbp
0x43fcf3:	ret	
0x43fcf4:	nop	word ptr cs:[rax + rax]
0x43fcff:	nop	
0x43fd00:	endbr64	
0x43fd04:	mov	eax, dword ptr [rdi]
0x43fd06:	mov	edx, dword ptr [rsi]
0x43fd08:	sub	rax, rdx
0x43fd0b:	test	rax, rax
0x43fd0e:	jne	0x43fd1f
0x43fd10:	mov	eax, dword ptr [rdi + 4]
0x43fd13:	mov	ecx, dword ptr [rsi + 4]
0x43fd16:	sub	rax, rcx
0x43fd19:	test	rax, rax
0x43fd1c:	jne	0x43fd1f
0x43fd1e:	ret	
0x43fd1f:	setg	sil
0x43fd23:	movzx	edi, sil
0x43fd27:	lea	eax, [rdi + rdi - 1]
0x43fd2b:	ret	
0x43fd2c:	nop	dword ptr [rax]
0x43fd30:	endbr64	
0x43fd34:	push	rbp
0x43fd35:	mov	rbp, rdi
0x43fd38:	push	rbx
0x43fd39:	mov	rbx, rsi
0x43fd3c:	sub	rsp, 0x108
0x43fd43:	mov	qword ptr [rsp + 0x60], rdx
0x43fd48:	mov	qword ptr [rsp + 0x68], rcx
0x43fd4d:	mov	qword ptr [rsp + 0x70], r8
0x43fd52:	mov	qword ptr [rsp + 0x78], r9
0x43fd57:	test	al, al
0x43fd59:	je	0x43fd9b
0x43fd5b:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x43fd63:	movaps	xmmword ptr [rsp + 0x90], xmm1
0x43fd6b:	movaps	xmmword ptr [rsp + 0xa0], xmm2
0x43fd73:	movaps	xmmword ptr [rsp + 0xb0], xmm3
0x43fd7b:	movaps	xmmword ptr [rsp + 0xc0], xmm4
0x43fd83:	movaps	xmmword ptr [rsp + 0xd0], xmm5
0x43fd8b:	movaps	xmmword ptr [rsp + 0xe0], xmm6
0x43fd93:	movaps	xmmword ptr [rsp + 0xf0], xmm7
0x43fd9b:	lea	rdx, [rsp + 0x50]
0x43fda0:	lea	rax, [rsp + 0x120]
0x43fda8:	mov	dword ptr [rsp], 0x10
0x43fdaf:	mov	qword ptr [rsp + 0x10], rdx
0x43fdb4:	mov	dword ptr [rsp + 4], 0x30
0x43fdbc:	mov	qword ptr [rsp + 8], rax
0x43fdc1:	call	0x403890
0x43fdc6:	lea	rsi, [rsp + 0x20]
0x43fdcb:	mov	rdi, rbp
0x43fdce:	mov	qword ptr [rsp + 0x20], rbx
0x43fdd3:	mov	ecx, dword ptr [rax]
0x43fdd5:	mov	qword ptr [rsp + 0x28], rsp
0x43fdda:	mov	dword ptr [rsp + 0x30], ecx
0x43fdde:	call	0x43e5d0
0x43fde3:	mov	rdi, rbp
0x43fde6:	call	0x43f3a0
0x43fdeb:	add	rsp, 0x108
0x43fdf2:	pop	rbx
0x43fdf3:	pop	rbp
0x43fdf4:	ret	
0x43fdf5:	nop	word ptr cs:[rax + rax]
0x43fe00:	push	rbx
0x43fe01:	mov	rbx, rdi
0x43fe04:	call	0x43f440
0x43fe09:	mov	rdi, rbx
0x43fe0c:	call	0x43f490
0x43fe11:	mov	byte ptr [rbx + 0x41], 0
0x43fe15:	pop	rbx
0x43fe16:	ret	
0x43fe17:	nop	word ptr [rax + rax]
0x43fe20:	endbr64	
0x43fe24:	sub	rsp, 0x188
0x43fe2b:	mov	r11d, edi
0x43fe2e:	mov	r10, rsi
0x43fe31:	mov	qword ptr [rsp + 0xe0], rdx
0x43fe39:	mov	qword ptr [rsp + 0xe8], rcx
0x43fe41:	mov	qword ptr [rsp + 0xf0], r8
0x43fe49:	mov	qword ptr [rsp + 0xf8], r9
0x43fe51:	test	al, al
0x43fe53:	je	0x43fe95
0x43fe55:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x43fe5d:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x43fe65:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x43fe6d:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x43fe75:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x43fe7d:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x43fe85:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x43fe8d:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x43fe95:	lea	rdx, [rsp + 0xd0]
0x43fe9d:	xor	esi, esi
0x43fe9f:	mov	r8, rsp
0x43fea2:	mov	rcx, r10
0x43fea5:	lea	rdi, [rsp + 0x20]
0x43feaa:	mov	qword ptr [rsp + 0x10], rdx
0x43feaf:	mov	edx, r11d
0x43feb2:	lea	rax, [rsp + 0x190]
0x43feba:	mov	qword ptr [rsp + 8], rax
0x43febf:	mov	r9d, 4
0x43fec5:	mov	dword ptr [rsp], 0x10
0x43fecc:	mov	dword ptr [rsp + 4], 0x30
0x43fed4:	add	dword ptr [rip + 0xa3315], 1
0x43fedb:	call	0x43de80
0x43fee0:	or	edx, 0xffffffff
0x43fee3:	call	0x43def0
0x43fee8:	lea	rdi, [rsp + 0x20]
0x43feed:	call	0x430ad0
0x43fef2:	call	0x43f590
0x43fef7:	add	rsp, 0x188
0x43fefe:	ret	
0x43feff:	nop	
0x43ff00:	endbr64	
0x43ff04:	sub	rsp, 0x188
0x43ff0b:	mov	r11d, edi
0x43ff0e:	mov	r10, rsi
0x43ff11:	mov	qword ptr [rsp + 0xe0], rdx
0x43ff19:	mov	qword ptr [rsp + 0xe8], rcx
0x43ff21:	mov	qword ptr [rsp + 0xf0], r8
0x43ff29:	mov	qword ptr [rsp + 0xf8], r9
0x43ff31:	test	al, al
0x43ff33:	je	0x43ff75
0x43ff35:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x43ff3d:	movaps	xmmword ptr [rsp + 0x110], xmm1
0x43ff45:	movaps	xmmword ptr [rsp + 0x120], xmm2
0x43ff4d:	movaps	xmmword ptr [rsp + 0x130], xmm3
0x43ff55:	movaps	xmmword ptr [rsp + 0x140], xmm4
0x43ff5d:	movaps	xmmword ptr [rsp + 0x150], xmm5
0x43ff65:	movaps	xmmword ptr [rsp + 0x160], xmm6
0x43ff6d:	movaps	xmmword ptr [rsp + 0x170], xmm7
0x43ff75:	lea	rdx, [rsp + 0xd0]
0x43ff7d:	xor	esi, esi
0x43ff7f:	mov	r8, rsp
0x43ff82:	mov	rcx, r10
0x43ff85:	lea	rdi, [rsp + 0x20]
0x43ff8a:	mov	qword ptr [rsp + 0x10], rdx
0x43ff8f:	mov	edx, r11d
0x43ff92:	lea	rax, [rsp + 0x190]
0x43ff9a:	mov	qword ptr [rsp + 8], rax
0x43ff9f:	mov	r9d, 8
0x43ffa5:	mov	dword ptr [rsp], 0x10
0x43ffac:	mov	dword ptr [rsp + 4], 0x30
0x43ffb4:	add	dword ptr [rip + 0xa3235], 1
0x43ffbb:	call	0x43de80
0x43ffc0:	or	edx, 0xffffffff
0x43ffc3:	call	0x43def0
0x43ffc8:	lea	rdi, [rsp + 0x20]
0x43ffcd:	call	0x430ad0
0x43ffd2:	call	0x43f590
0x43ffd7:	add	rsp, 0x188
0x43ffde:	ret	
0x43ffdf:	nop	
0x43ffe0:	endbr64	
0x43ffe4:	mov	dword ptr [rdi], esi
0x43ffe6:	ret	
0x43ffe7:	nop	word ptr [rax + rax]
0x43fff0:	endbr64	
0x43fff4:	mov	dword ptr [rdi], esi
0x43fff6:	ret	
0x43fff7:	nop	word ptr [rax + rax]
0x440000:	endbr64	
0x440004:	mov	dword ptr [rdi], esi
0x440006:	ret	
0x440007:	nop	word ptr [rax + rax]
0x440010:	endbr64	
0x440014:	mov	dword ptr [rdi], esi
0x440016:	ret	
0x440017:	nop	word ptr [rax + rax]
0x440020:	endbr64	
0x440024:	mov	dword ptr [rdi], esi
0x440026:	ret	
0x440027:	nop	word ptr [rax + rax]
0x440030:	endbr64	
0x440034:	mov	dword ptr [rdi], esi
0x440036:	ret	
0x440037:	nop	word ptr [rax + rax]
0x440040:	endbr64	
0x440044:	mov	dword ptr [rdi], esi
0x440046:	ret	
0x440047:	nop	word ptr [rax + rax]
0x440050:	endbr64	
0x440054:	mov	dword ptr [rdi], esi
0x440056:	ret	
0x440057:	nop	word ptr [rax + rax]
0x440060:	endbr64	
0x440064:	mov	dword ptr [rdi], esi
0x440066:	ret	
0x440067:	nop	word ptr [rax + rax]
0x440070:	endbr64	
0x440074:	mov	dword ptr [rdi], esi
0x440076:	ret	
0x440077:	nop	word ptr [rax + rax]
0x440080:	endbr64	
0x440084:	mov	dword ptr [rdi], esi
0x440086:	ret	
0x440087:	nop	word ptr [rax + rax]
0x440090:	endbr64	
0x440094:	mov	dword ptr [rdi], esi
0x440096:	ret	
0x440097:	nop	word ptr [rax + rax]
0x4400a0:	endbr64	
0x4400a4:	mov	dword ptr [rdi], esi
0x4400a6:	ret	
0x4400a7:	nop	word ptr [rax + rax]
0x4400b0:	endbr64	
0x4400b4:	mov	dword ptr [rdi], esi
0x4400b6:	ret	
0x4400b7:	nop	word ptr [rax + rax]
0x4400c0:	endbr64	
0x4400c4:	mov	dword ptr [rdi], esi
0x4400c6:	ret	
0x4400c7:	nop	word ptr [rax + rax]
0x4400d0:	endbr64	
0x4400d4:	mov	dword ptr [rdi], esi
0x4400d6:	ret	
0x4400d7:	nop	word ptr [rax + rax]
0x4400e0:	endbr64	
0x4400e4:	mov	dword ptr [rdi], esi
0x4400e6:	ret	
0x4400e7:	nop	word ptr [rax + rax]
0x4400f0:	endbr64	
0x4400f4:	mov	dword ptr [rdi], esi
0x4400f6:	ret	
0x4400f7:	nop	word ptr [rax + rax]
0x440100:	endbr64	
0x440104:	mov	dword ptr [rdi], esi
0x440106:	ret	
0x440107:	nop	word ptr [rax + rax]
0x440110:	endbr64	
0x440114:	mov	dword ptr [rdi], esi
0x440116:	ret	
0x440117:	nop	word ptr [rax + rax]
0x440120:	endbr64	
0x440124:	mov	dword ptr [rdi], esi
0x440126:	ret	
0x440127:	nop	word ptr [rax + rax]
0x440130:	endbr64	
0x440134:	mov	dword ptr [rdi], esi
0x440136:	ret	
0x440137:	nop	word ptr [rax + rax]
0x440140:	endbr64	
0x440144:	mov	dword ptr [rdi], esi
0x440146:	ret	
0x440147:	nop	word ptr [rax + rax]
0x440150:	endbr64	
0x440154:	mov	dword ptr [rdi], esi
0x440156:	ret	
0x440157:	nop	word ptr [rax + rax]
0x440160:	endbr64	
0x440164:	mov	dword ptr [rdi], esi
0x440166:	ret	
0x440167:	nop	word ptr [rax + rax]
0x440170:	endbr64	
0x440174:	mov	dword ptr [rdi], esi
0x440176:	ret	
0x440177:	nop	word ptr [rax + rax]
0x440180:	endbr64	
0x440184:	mov	dword ptr [rdi], esi
0x440186:	ret	
0x440187:	nop	word ptr [rax + rax]
0x440190:	endbr64	
0x440194:	mov	dword ptr [rdi], esi
0x440196:	ret	
0x440197:	nop	word ptr [rax + rax]
0x4401a0:	endbr64	
0x4401a4:	mov	dword ptr [rdi], esi
0x4401a6:	ret	
0x4401a7:	nop	word ptr [rax + rax]
0x4401b0:	endbr64	
0x4401b4:	mov	dword ptr [rdi], esi
0x4401b6:	ret	
0x4401b7:	nop	word ptr [rax + rax]
0x4401c0:	endbr64	
0x4401c4:	mov	dword ptr [rdi], esi
0x4401c6:	ret	
0x4401c7:	nop	word ptr [rax + rax]
0x4401d0:	endbr64	
0x4401d4:	mov	dword ptr [rdi], esi
0x4401d6:	ret	
0x4401d7:	nop	word ptr [rax + rax]
0x4401e0:	endbr64	
0x4401e4:	mov	dword ptr [rdi], esi
0x4401e6:	ret	
0x4401e7:	nop	word ptr [rax + rax]
0x4401f0:	endbr64	
0x4401f4:	mov	dword ptr [rdi], esi
0x4401f6:	ret	
0x4401f7:	nop	word ptr [rax + rax]
0x440200:	endbr64	
0x440204:	mov	dword ptr [rdi], esi
0x440206:	ret	
0x440207:	nop	word ptr [rax + rax]
0x440210:	endbr64	
0x440214:	test	rdi, rdi
0x440217:	je	0x41a525
0x44021d:	jmp	0x4039e0
0x440222:	nop	word ptr cs:[rax + rax]
0x44022c:	nop	dword ptr [rax]
0x440230:	endbr64	
0x440234:	jmp	0x444170
0x440239:	nop	dword ptr [rax]
0x440240:	endbr64	
0x440244:	jmp	0x444170
0x440249:	nop	dword ptr [rax]
0x440250:	endbr64	
0x440254:	jmp	0x440240
0x440259:	nop	dword ptr [rax]
0x440260:	endbr64	
0x440264:	movzx	eax, byte ptr [rdi]
0x440267:	test	al, al
0x440269:	jne	0x4402b8
0x44026b:	push	rbp
0x44026c:	push	rbx
0x44026d:	mov	rbx, rdi
0x440270:	sub	rsp, 8
0x440274:	mov	rax, qword ptr [rip + 0xa1d6d]
0x44027b:	cmp	byte ptr [rax], 0
0x44027e:	jne	0x4402a0
0x440280:	xor	eax, eax
0x440282:	mov	edx, 0x100
0x440287:	lock cmpxchg	dword ptr [rdi], edx
0x44028b:	jne	0x4402bb
0x44028d:	add	rsp, 8
0x440291:	mov	eax, 1
0x440296:	pop	rbx
0x440297:	pop	rbp
0x440298:	ret	
0x440299:	nop	dword ptr [rax]
0x4402a0:	mov	eax, dword ptr [rdi]
0x4402a2:	test	eax, eax
0x4402a4:	jne	0x42c789
0x4402aa:	mov	dword ptr [rdi], 0x100
0x4402b0:	jmp	0x44028d
0x4402b2:	nop	word ptr [rax + rax]
0x4402b8:	xor	eax, eax
0x4402ba:	ret	
0x4402bb:	mov	ecx, eax
0x4402bd:	mov	ebp, 0x10100
0x4402c2:	cmp	ecx, 1
0x4402c5:	je	0x440300
0x4402c7:	cmp	ecx, 0x100
0x4402cd:	jne	0x4402da
0x4402cf:	lock cmpxchg	dword ptr [rbx], ebp
0x4402d3:	mov	ecx, 0x10100
0x4402d8:	jne	0x440309
0x4402da:	xor	r8d, r8d
0x4402dd:	xor	edx, edx
0x4402df:	mov	rsi, rbx
0x4402e2:	mov	edi, 0xca
0x4402e7:	xor	eax, eax
0x4402e9:	call	0x403c10
0x4402ee:	xor	eax, eax
0x4402f0:	mov	edx, 0x100
0x4402f5:	lock cmpxchg	dword ptr [rbx], edx
0x4402f9:	mov	ecx, eax
0x4402fb:	je	0x44028d
0x4402fd:	jmp	0x4402c2
0x4402ff:	nop	
0x440300:	add	rsp, 8
0x440304:	xor	eax, eax
0x440306:	pop	rbx
0x440307:	pop	rbp
0x440308:	ret	
0x440309:	cmp	eax, 1
0x44030c:	je	0x440300
0x44030e:	test	eax, eax
0x440310:	jne	0x4402da
0x440312:	jmp	0x4402ee
0x440314:	nop	word ptr cs:[rax + rax]
0x44031e:	nop	
0x440320:	endbr64	
0x440324:	mov	rax, qword ptr [rip + 0xa1cbd]
0x44032b:	cmp	byte ptr [rax], 0
0x44032e:	je	0x440340
0x440330:	mov	dword ptr [rdi], 0
0x440336:	ret	
0x440337:	nop	word ptr [rax + rax]
0x440340:	xor	eax, eax
0x440342:	xchg	dword ptr [rdi], eax
0x440344:	test	eax, 0x10000
0x440349:	jne	0x440350
0x44034b:	ret	
0x44034c:	nop	dword ptr [rax]
0x440350:	mov	rsi, rdi
0x440353:	mov	ecx, 0x7fffffff
0x440358:	mov	edx, 1
0x44035d:	xor	eax, eax
0x44035f:	mov	edi, 0xca
0x440364:	jmp	0x403c10
0x440369:	nop	dword ptr [rax]
0x440370:	endbr64	
0x440374:	mov	rax, qword ptr [rip + 0xa1c6d]
0x44037b:	cmp	byte ptr [rax], 0
0x44037e:	je	0x440390
0x440380:	mov	dword ptr [rdi], 1
0x440386:	ret	
0x440387:	nop	word ptr [rax + rax]
0x440390:	mov	eax, 1
0x440395:	xchg	dword ptr [rdi], eax
0x440397:	test	eax, 0x10000
0x44039c:	jne	0x4403a0
0x44039e:	ret	
0x44039f:	nop	
0x4403a0:	mov	rsi, rdi
0x4403a3:	mov	ecx, 0x7fffffff
0x4403a8:	mov	edx, 1
0x4403ad:	xor	eax, eax
0x4403af:	mov	edi, 0xca
0x4403b4:	jmp	0x403c10
0x4403b9:	nop	dword ptr [rax]
0x4403c0:	endbr64	
0x4403c4:	mov	rax, 0x4e17f8
0x4403cb:	add	rax, 0x10
0x4403cf:	mov	qword ptr [rdi], rax
0x4403d2:	jmp	0x444700
0x4403d7:	nop	word ptr [rax + rax]
0x4403e0:	endbr64	
0x4403e4:	push	rbp
0x4403e5:	mov	rbp, rdi
0x4403e8:	call	0x4403c0
0x4403ed:	mov	rdi, rbp
0x4403f0:	mov	esi, 8
0x4403f5:	pop	rbp
0x4403f6:	jmp	0x440230
0x4403fb:	nop	dword ptr [rax + rax]
0x440400:	endbr64	
0x440404:	mov	rax, 0x4e17f8
0x44040b:	add	rax, 0x10
0x44040f:	mov	qword ptr [rdi], rax
0x440412:	ret	
0x440413:	nop	word ptr cs:[rax + rax]
0x44041d:	nop	dword ptr [rax]
0x440420:	endbr64	
0x440424:	test	rdi, rdi
0x440427:	mov	eax, 1
0x44042c:	push	rbx
0x44042d:	cmovne	rax, rdi
0x440431:	mov	rbx, rax
0x440434:	mov	rdi, rbx
0x440437:	call	0x403ca0
0x44043c:	test	rax, rax
0x44043f:	je	0x440443
0x440441:	pop	rbx
0x440442:	ret	
0x440443:	call	0x445570
0x440448:	test	rax, rax
0x44044b:	je	0x42c7b4
0x440451:	call	rax
0x440453:	jmp	0x440434
0x440455:	nop	word ptr cs:[rax + rax]
0x44045f:	nop	
0x440460:	endbr64	
0x440464:	jmp	0x440420
0x440469:	nop	dword ptr [rax]
0x440470:	endbr64	
0x440474:	mov	rax, 0x4e1838
0x44047b:	add	rax, 0x10
0x44047f:	mov	qword ptr [rdi], rax
0x440482:	jmp	0x443fa0
0x440487:	nop	word ptr [rax + rax]
0x440490:	endbr64	
0x440494:	push	rbp
0x440495:	mov	rbp, rdi
0x440498:	call	0x440470
0x44049d:	mov	rdi, rbp
0x4404a0:	mov	esi, 0x18
0x4404a5:	pop	rbp
0x4404a6:	jmp	0x440230
0x4404ab:	nop	dword ptr [rax + rax]
0x4404b0:	endbr64	
0x4404b4:	push	r15
0x4404b6:	push	r14
0x4404b8:	mov	r14d, edx
0x4404bb:	push	r13
0x4404bd:	mov	r13, rsi
0x4404c0:	push	r12
0x4404c2:	mov	r12, rcx
0x4404c5:	push	rbp
0x4404c6:	push	rbx
0x4404c7:	mov	rbx, r8
0x4404ca:	sub	rsp, 0x28
0x4404ce:	mov	r15, qword ptr [rdi + 8]
0x4404d2:	mov	rsi, qword ptr [r12 + 8]
0x4404d7:	mov	rcx, qword ptr [rsp + 0x60]
0x4404dc:	mov	rdx, qword ptr [rsp + 0x68]
0x4404e1:	cmp	r15, rsi
0x4404e4:	je	0x440526
0x4404e6:	movzx	r8d, byte ptr [r15]
0x4404ea:	mov	rbp, rdi
0x4404ed:	cmp	r8b, 0x2a
0x4404f1:	je	0x440560
0x4404f3:	mov	rdi, r15
0x4404f6:	mov	qword ptr [rsp + 0x18], rdx
0x4404fb:	mov	qword ptr [rsp + 0x10], rcx
0x440500:	mov	qword ptr [rsp + 8], r9
0x440505:	mov	byte ptr [rsp], r8b
0x440509:	call	0x403be0
0x44050e:	movzx	r8d, byte ptr [rsp]
0x440513:	mov	r9, qword ptr [rsp + 8]
0x440518:	test	eax, eax
0x44051a:	mov	rcx, qword ptr [rsp + 0x10]
0x44051f:	mov	rdx, qword ptr [rsp + 0x18]
0x440524:	jne	0x440560
0x440526:	mov	qword ptr [rdx], rbx
0x440529:	mov	dword ptr [rdx + 8], r14d
0x44052d:	test	r13, r13
0x440530:	js	0x4405e0
0x440536:	add	rbx, r13
0x440539:	xor	eax, eax
0x44053b:	cmp	rcx, rbx
0x44053e:	sete	al
0x440541:	lea	eax, [rax + rax*4 + 1]
0x440545:	mov	dword ptr [rdx + 0x10], eax
0x440548:	add	rsp, 0x28
0x44054c:	xor	eax, eax
0x44054e:	pop	rbx
0x44054f:	pop	rbp
0x440550:	pop	r12
0x440552:	pop	r13
0x440554:	pop	r14
0x440556:	pop	r15
0x440558:	ret	
0x440559:	nop	dword ptr [rax]
0x440560:	cmp	rbx, rcx
0x440563:	je	0x4405a0
0x440565:	mov	rdi, qword ptr [rbp + 0x10]
0x440569:	mov	r8, rbx
0x44056c:	mov	rsi, r13
0x44056f:	mov	rax, qword ptr [rdi]
0x440572:	mov	qword ptr [rsp + 0x68], rdx
0x440577:	mov	edx, r14d
0x44057a:	mov	qword ptr [rsp + 0x60], rcx
0x44057f:	mov	rcx, r12
0x440582:	mov	rax, qword ptr [rax + 0x38]
0x440586:	add	rsp, 0x28
0x44058a:	pop	rbx
0x44058b:	pop	rbp
0x44058c:	pop	r12
0x44058e:	pop	r13
0x440590:	pop	r14
0x440592:	pop	r15
0x440594:	jmp	rax
0x440596:	nop	word ptr cs:[rax + rax]
0x4405a0:	mov	rsi, qword ptr [r9 + 8]
0x4405a4:	cmp	r15, rsi
0x4405a7:	je	0x4405d7
0x4405a9:	cmp	r8b, 0x2a
0x4405ad:	je	0x440565
0x4405af:	mov	rdi, r15
0x4405b2:	mov	qword ptr [rsp + 0x10], rdx
0x4405b7:	mov	qword ptr [rsp + 8], rcx
0x4405bc:	mov	qword ptr [rsp], r9
0x4405c0:	call	0x403be0
0x4405c5:	mov	r9, qword ptr [rsp]
0x4405c9:	mov	rcx, qword ptr [rsp + 8]
0x4405ce:	test	eax, eax
0x4405d0:	mov	rdx, qword ptr [rsp + 0x10]
0x4405d5:	jne	0x440565
0x4405d7:	mov	dword ptr [rdx + 0xc], r14d
0x4405db:	jmp	0x440548
0x4405e0:	cmp	r13, -2
0x4405e4:	jne	0x440548
0x4405ea:	mov	dword ptr [rdx + 0x10], 1
0x4405f1:	jmp	0x440548
0x4405f6:	nop	word ptr cs:[rax + rax]
0x440600:	endbr64	
0x440604:	push	rbp
0x440605:	mov	rbp, rsi
0x440608:	push	rbx
0x440609:	mov	rbx, rdi
0x44060c:	sub	rsp, 0x28
0x440610:	cmp	r8, rdx
0x440613:	je	0x440630
0x440615:	mov	rdi, qword ptr [rbx + 0x10]
0x440619:	mov	rsi, rbp
0x44061c:	mov	rax, qword ptr [rdi]
0x44061f:	mov	rax, qword ptr [rax + 0x40]
0x440623:	add	rsp, 0x28
0x440627:	pop	rbx
0x440628:	pop	rbp
0x440629:	jmp	rax
0x44062b:	nop	dword ptr [rax + rax]
0x440630:	mov	rdi, qword ptr [rdi + 8]
0x440634:	mov	rsi, qword ptr [rcx + 8]
0x440638:	cmp	rdi, rsi
0x44063b:	je	0x440669
0x44063d:	cmp	byte ptr [rdi], 0x2a
0x440640:	je	0x440615
0x440642:	mov	qword ptr [rsp + 0x18], r8
0x440647:	mov	qword ptr [rsp + 0x10], rcx
0x44064c:	mov	qword ptr [rsp + 8], rdx
0x440651:	call	0x403be0
0x440656:	mov	rdx, qword ptr [rsp + 8]
0x44065b:	mov	rcx, qword ptr [rsp + 0x10]
0x440660:	test	eax, eax
0x440662:	mov	r8, qword ptr [rsp + 0x18]
0x440667:	jne	0x440615
0x440669:	add	rsp, 0x28
0x44066d:	mov	eax, 6
0x440672:	pop	rbx
0x440673:	pop	rbp
0x440674:	ret	
0x440675:	nop	word ptr cs:[rax + rax]
0x44067f:	nop	
0x440680:	endbr64	
0x440684:	push	r13
0x440686:	mov	r13, rcx
0x440689:	push	r12
0x44068b:	mov	r12, rdx
0x44068e:	push	rbp
0x44068f:	mov	rbp, rsi
0x440692:	push	rbx
0x440693:	mov	rbx, rdi
0x440696:	sub	rsp, 8
0x44069a:	call	0x443fe0
0x44069f:	test	al, al
0x4406a1:	jne	0x4406c8
0x4406a3:	mov	rdi, qword ptr [rbx + 0x10]
0x4406a7:	mov	rcx, r13
0x4406aa:	mov	rdx, r12
0x4406ad:	mov	rsi, rbp
0x4406b0:	mov	rax, qword ptr [rdi]
0x4406b3:	mov	rax, qword ptr [rax + 0x30]
0x4406b7:	add	rsp, 8
0x4406bb:	pop	rbx
0x4406bc:	pop	rbp
0x4406bd:	pop	r12
0x4406bf:	pop	r13
0x4406c1:	jmp	rax
0x4406c3:	nop	dword ptr [rax + rax]
0x4406c8:	add	rsp, 8
0x4406cc:	pop	rbx
0x4406cd:	pop	rbp
0x4406ce:	pop	r12
0x4406d0:	pop	r13
0x4406d2:	ret	
0x4406d3:	nop	word ptr cs:[rax + rax]
0x4406dd:	nop	dword ptr [rax]
0x4406e0:	endbr64	
0x4406e4:	ret	
0x4406e5:	nop	word ptr cs:[rax + rax]
0x4406ef:	nop	
0x4406f0:	endbr64	
0x4406f4:	xor	eax, eax
0x4406f6:	ret	
0x4406f7:	nop	word ptr [rax + rax]
0x440700:	endbr64	
0x440704:	xor	eax, eax
0x440706:	ret	
0x440707:	nop	word ptr [rax + rax]
0x440710:	endbr64	
0x440714:	push	rbp
0x440715:	mov	rbp, rdi
0x440718:	call	0x4406e0
0x44071d:	mov	rdi, rbp
0x440720:	mov	esi, 0x10
0x440725:	pop	rbp
0x440726:	jmp	0x440230
0x44072b:	nop	dword ptr [rax + rax]
0x440730:	endbr64	
0x440734:	mov	rdi, qword ptr [rdi + 8]
0x440738:	mov	rsi, qword ptr [rsi + 8]
0x44073c:	mov	eax, 1
0x440741:	cmp	rdi, rsi
0x440744:	je	0x440760
0x440746:	xor	eax, eax
0x440748:	cmp	byte ptr [rdi], 0x2a
0x44074b:	je	0x440760
0x44074d:	sub	rsp, 8
0x440751:	call	0x403be0
0x440756:	test	eax, eax
0x440758:	sete	al
0x44075b:	add	rsp, 8
0x44075f:	ret	
0x440760:	ret	
0x440761:	nop	word ptr cs:[rax + rax]
0x44076b:	nop	dword ptr [rax + rax]
0x440770:	endbr64	
0x440774:	push	rbp
0x440775:	mov	rbp, rsp
0x440778:	push	r13
0x44077a:	push	r12
0x44077c:	mov	r12, rdi
0x44077f:	sub	rsp, 0xd0
0x440786:	mov	qword ptr [rbp - 0xb8], rsi
0x44078d:	mov	qword ptr [rbp - 0xb0], rdx
0x440794:	mov	qword ptr [rbp - 0xa8], rcx
0x44079b:	mov	qword ptr [rbp - 0xa0], r8
0x4407a2:	mov	qword ptr [rbp - 0x98], r9
0x4407a9:	test	al, al
0x4407ab:	je	0x4407d0
0x4407ad:	movaps	xmmword ptr [rbp - 0x90], xmm0
0x4407b4:	movaps	xmmword ptr [rbp - 0x80], xmm1
0x4407b8:	movaps	xmmword ptr [rbp - 0x70], xmm2
0x4407bc:	movaps	xmmword ptr [rbp - 0x60], xmm3
0x4407c0:	movaps	xmmword ptr [rbp - 0x50], xmm4
0x4407c4:	movaps	xmmword ptr [rbp - 0x40], xmm5
0x4407c8:	movaps	xmmword ptr [rbp - 0x30], xmm6
0x4407cc:	movaps	xmmword ptr [rbp - 0x20], xmm7
0x4407d0:	mov	rax, qword ptr fs:[0x28]
0x4407d9:	mov	qword ptr [rbp - 0xc8], rax
0x4407e0:	xor	eax, eax
0x4407e2:	mov	rdi, r12
0x4407e5:	call	0x4039e0
0x4407ea:	mov	rcx, rsp
0x4407ed:	lea	rsi, [rax + 0x200]
0x4407f4:	add	rax, 0x217
0x4407fa:	mov	rdx, rax
0x4407fd:	and	rax, 0xfffffffffffff000
0x440803:	sub	rcx, rax
0x440806:	and	rdx, 0xfffffffffffffff0
0x44080a:	cmp	rsp, rcx
0x44080d:	je	0x440824
0x44080f:	sub	rsp, 0x1000
0x440816:	or	qword ptr [rsp + 0xff8], 0
0x44081f:	cmp	rsp, rcx
0x440822:	jne	0x44080f
0x440824:	and	edx, 0xfff
0x44082a:	sub	rsp, rdx
0x44082d:	test	rdx, rdx
0x440830:	jne	0x44089f
0x440832:	lea	r13, [rsp + 0xf]
0x440837:	lea	rax, [rbp + 0x10]
0x44083b:	mov	rdx, r12
0x44083e:	mov	dword ptr [rbp - 0xe0], 8
0x440848:	and	r13, 0xfffffffffffffff0
0x44084c:	lea	rcx, [rbp - 0xe0]
0x440853:	mov	qword ptr [rbp - 0xd8], rax
0x44085a:	lea	rax, [rbp - 0xc0]
0x440861:	mov	rdi, r13
0x440864:	mov	qword ptr [rbp - 0xd0], rax
0x44086b:	mov	dword ptr [rbp - 0xdc], 0x30
0x440875:	call	0x440b00
0x44087a:	mov	edi, 0x10
0x44087f:	call	0x444450
0x440884:	mov	rdi, r13
0x440887:	mov	r12, rax
0x44088a:	call	0x403a20
0x44088f:	mov	rdi, r12
0x440892:	mov	rsi, rax
0x440895:	call	0x446040
0x44089a:	jmp	0x42caa3
0x44089f:	or	qword ptr [rsp + rdx - 8], 0
0x4408a5:	jmp	0x440832
0x4408a7:	endbr64	
0x4408ab:	mov	r13, rax
0x4408ae:	jmp	0x42cab9
0x4408b3:	nop	word ptr cs:[rax + rax]
0x4408bd:	nop	dword ptr [rax]
0x4408c0:	endbr64	
0x4408c4:	push	rbp
0x4408c5:	mov	r8, rdi
0x4408c8:	mov	rbp, rsp
0x4408cb:	push	r12
0x4408cd:	push	rbx
0x4408ce:	mov	rbx, rsi
0x4408d1:	sub	rbx, rdi
0x4408d4:	add	rsp, -0x80
0x4408d8:	movdqa	xmm0, xmmword ptr [rip + 0x8bc60]
0x4408e0:	mov	rax, qword ptr fs:[0x28]
0x4408e9:	mov	qword ptr [rbp - 0x18], rax
0x4408ed:	xor	eax, eax
0x4408ef:	mov	rcx, rsp
0x4408f2:	mov	byte ptr [rbp - 0x28], 0
0x4408f6:	movabs	rax, 0x202020200a3a292f
0x440900:	movaps	xmmword ptr [rbp - 0x90], xmm0
0x440907:	movdqa	xmm0, xmmword ptr [rip + 0x8bc41]
0x44090f:	mov	qword ptr [rbp - 0x30], rax
0x440913:	lea	rax, [rbx + 0x80]
0x44091a:	movaps	xmmword ptr [rbp - 0x80], xmm0
0x44091e:	movdqa	xmm0, xmmword ptr [rip + 0x8bc3a]
0x440926:	mov	rdx, rax
0x440929:	and	rax, 0xfffffffffffff000
0x44092f:	sub	rcx, rax
0x440932:	and	rdx, 0xfffffffffffffff0
0x440936:	movaps	xmmword ptr [rbp - 0x70], xmm0
0x44093a:	movdqa	xmm0, xmmword ptr [rip + 0x8bc2e]
0x440942:	movaps	xmmword ptr [rbp - 0x60], xmm0
0x440946:	movdqa	xmm0, xmmword ptr [rip + 0x8bc32]
0x44094e:	movaps	xmmword ptr [rbp - 0x50], xmm0
0x440952:	movdqa	xmm0, xmmword ptr [rip + 0x8bc36]
0x44095a:	movaps	xmmword ptr [rbp - 0x40], xmm0
0x44095e:	cmp	rsp, rcx
0x440961:	je	0x440978
0x440963:	sub	rsp, 0x1000
0x44096a:	or	qword ptr [rsp + 0xff8], 0
0x440973:	cmp	rsp, rcx
0x440976:	jne	0x440963
0x440978:	and	edx, 0xfff
0x44097e:	sub	rsp, rdx
0x440981:	test	rdx, rdx
0x440984:	jne	0x4409fa
0x440986:	mov	rax, qword ptr [rbp - 0x30]
0x44098a:	movdqa	xmm2, xmmword ptr [rbp - 0x80]
0x44098f:	mov	rdx, rbx
0x440992:	mov	rsi, r8
0x440995:	lea	r12, [rsp + 0xf]
0x44099a:	movdqa	xmm3, xmmword ptr [rbp - 0x70]
0x44099f:	movdqa	xmm4, xmmword ptr [rbp - 0x60]
0x4409a4:	and	r12, 0xfffffffffffffff0
0x4409a8:	movdqa	xmm5, xmmword ptr [rbp - 0x50]
0x4409ad:	movdqa	xmm6, xmmword ptr [rbp - 0x40]
0x4409b2:	movdqa	xmm1, xmmword ptr [rbp - 0x90]
0x4409ba:	mov	qword ptr [r12 + 0x60], rax
0x4409bf:	lea	rdi, [r12 + 0x68]
0x4409c4:	movaps	xmmword ptr [r12 + 0x10], xmm2
0x4409ca:	movaps	xmmword ptr [r12], xmm1
0x4409cf:	movaps	xmmword ptr [r12 + 0x20], xmm3
0x4409d5:	movaps	xmmword ptr [r12 + 0x30], xmm4
0x4409db:	movaps	xmmword ptr [r12 + 0x40], xmm5
0x4409e1:	movaps	xmmword ptr [r12 + 0x50], xmm6
0x4409e7:	call	0x403c60
0x4409ec:	mov	byte ptr [r12 + rbx + 0x68], 0
0x4409f2:	mov	rdi, r12
0x4409f5:	call	0x42c8eb
0x4409fa:	or	qword ptr [rsp + rdx - 8], 0
0x440a00:	jmp	0x440986
0x440a02:	nop	word ptr cs:[rax + rax]
0x440a0c:	nop	dword ptr [rax]
0x440a10:	endbr64	
0x440a14:	push	rbp
0x440a15:	mov	rcx, rdx
0x440a18:	mov	rbp, rsp
0x440a1b:	push	r13
0x440a1d:	push	r12
0x440a1f:	mov	r12, rdi
0x440a22:	push	rbx
0x440a23:	mov	rbx, rsi
0x440a26:	sub	rsp, 0x18
0x440a2a:	mov	rax, qword ptr fs:[0x28]
0x440a33:	mov	qword ptr [rbp - 0x28], rax
0x440a37:	mov	rax, rsp
0x440a3a:	cmp	rsp, rax
0x440a3d:	je	0x440a54
0x440a3f:	sub	rsp, 0x1000
0x440a46:	or	qword ptr [rsp + 0xff8], 0
0x440a4f:	cmp	rsp, rax
0x440a52:	jne	0x440a3f
0x440a54:	sub	rsp, 0x20
0x440a58:	or	qword ptr [rsp + 0x18], 0
0x440a5e:	lea	r9, [rip + 0x8bad0]
0x440a65:	movabs	r8, 0xcccccccccccccccd
0x440a6f:	lea	r11, [rsp + 0xf]
0x440a74:	and	r11, 0xfffffffffffffff0
0x440a78:	lea	r10, [r11 + 0x18]
0x440a7c:	mov	rdi, r10
0x440a7f:	nop	
0x440a80:	mov	rax, rcx
0x440a83:	sub	rdi, 1
0x440a87:	mul	r8
0x440a8a:	mov	rax, rcx
0x440a8d:	shr	rdx, 3
0x440a91:	lea	rsi, [rdx + rdx*4]
0x440a95:	add	rsi, rsi
0x440a98:	sub	rax, rsi
0x440a9b:	movzx	eax, byte ptr [r9 + rax]
0x440aa0:	mov	byte ptr [rdi], al
0x440aa2:	mov	rax, rcx
0x440aa5:	mov	rcx, rdx
0x440aa8:	cmp	rax, 9
0x440aac:	ja	0x440a80
0x440aae:	sub	r10, rdi
0x440ab1:	mov	r13, r10
0x440ab4:	cmp	r10, rbx
0x440ab7:	ja	0x440ae8
0x440ab9:	sub	r11, r10
0x440abc:	mov	rdx, r10
0x440abf:	mov	rdi, r12
0x440ac2:	lea	rsi, [r11 + 0x18]
0x440ac6:	call	0x403c60
0x440acb:	mov	eax, r13d
0x440ace:	mov	rdx, qword ptr [rbp - 0x28]
0x440ad2:	sub	rdx, qword ptr fs:[0x28]
0x440adb:	jne	0x440aef
0x440add:	lea	rsp, [rbp - 0x18]
0x440ae1:	pop	rbx
0x440ae2:	pop	r12
0x440ae4:	pop	r13
0x440ae6:	pop	rbp
0x440ae7:	ret	
0x440ae8:	mov	eax, 0xffffffff
0x440aed:	jmp	0x440ace
0x440aef:	call	0x4039f0
0x440af4:	nop	word ptr cs:[rax + rax]
0x440afe:	nop	
0x440b00:	endbr64	
0x440b04:	push	r14
0x440b06:	mov	r14, rdi
0x440b09:	push	r13
0x440b0b:	push	r12
0x440b0d:	lea	r12, [rdi + rsi - 1]
0x440b12:	push	rbp
0x440b13:	push	rbx
0x440b14:	movzx	eax, byte ptr [rdx]
0x440b17:	test	al, al
0x440b19:	je	0x440c60
0x440b1f:	cmp	rdi, r12
0x440b22:	jae	0x440c50
0x440b28:	mov	rbx, rdx
0x440b2b:	mov	r13, rcx
0x440b2e:	mov	rbp, rdi
0x440b31:	jmp	0x440b56
0x440b33:	nop	dword ptr [rax + rax]
0x440b38:	movzx	eax, byte ptr [rbx]
0x440b3b:	mov	byte ptr [rbp], al
0x440b3e:	add	rbx, 1
0x440b42:	add	rbp, 1
0x440b46:	movzx	eax, byte ptr [rbx]
0x440b49:	test	al, al
0x440b4b:	je	0x440bc0
0x440b4d:	cmp	rbp, r12
0x440b50:	jae	0x440c53
0x440b56:	cmp	al, 0x25
0x440b58:	jne	0x440b38
0x440b5a:	movzx	eax, byte ptr [rbx + 1]
0x440b5e:	cmp	al, 0x73
0x440b60:	je	0x440bd8
0x440b62:	cmp	al, 0x7a
0x440b64:	je	0x440b70
0x440b66:	cmp	al, 0x25
0x440b68:	jne	0x440b38
0x440b6a:	add	rbx, 1
0x440b6e:	jmp	0x440b3b
0x440b70:	cmp	byte ptr [rbx + 2], 0x75
0x440b74:	jne	0x440b38
0x440b76:	mov	eax, dword ptr [r13]
0x440b7a:	cmp	eax, 0x2f
0x440b7d:	ja	0x440c2e
0x440b83:	mov	edx, eax
0x440b85:	add	eax, 8
0x440b88:	add	rdx, qword ptr [r13 + 0x10]
0x440b8c:	mov	dword ptr [r13], eax
0x440b90:	mov	rsi, r12
0x440b93:	mov	rdx, qword ptr [rdx]
0x440b96:	mov	rdi, rbp
0x440b99:	sub	rsi, rbp
0x440b9c:	call	0x440a10
0x440ba1:	test	eax, eax
0x440ba3:	jle	0x440c53
0x440ba9:	cdqe	
0x440bab:	add	rbx, 3
0x440baf:	add	rbp, rax
0x440bb2:	movzx	eax, byte ptr [rbx]
0x440bb5:	test	al, al
0x440bb7:	jne	0x440b4d
0x440bb9:	nop	dword ptr [rax]
0x440bc0:	mov	eax, ebp
0x440bc2:	sub	eax, r14d
0x440bc5:	mov	byte ptr [rbp], 0
0x440bc9:	pop	rbx
0x440bca:	pop	rbp
0x440bcb:	pop	r12
0x440bcd:	pop	r13
0x440bcf:	pop	r14
0x440bd1:	ret	
0x440bd2:	nop	word ptr [rax + rax]
0x440bd8:	mov	eax, dword ptr [r13]
0x440bdc:	cmp	eax, 0x2f
0x440bdf:	ja	0x440c20
0x440be1:	mov	edx, eax
0x440be3:	add	eax, 8
0x440be6:	add	rdx, qword ptr [r13 + 0x10]
0x440bea:	mov	dword ptr [r13], eax
0x440bee:	mov	rdx, qword ptr [rdx]
0x440bf1:	movzx	eax, byte ptr [rdx]
0x440bf4:	test	al, al
0x440bf6:	je	0x440c17
0x440bf8:	cmp	r12, rbp
0x440bfb:	ja	0x440c05
0x440bfd:	jmp	0x440c3f
0x440bff:	nop	
0x440c00:	cmp	r12, rbp
0x440c03:	je	0x440c42
0x440c05:	add	rdx, 1
0x440c09:	mov	byte ptr [rbp], al
0x440c0c:	add	rbp, 1
0x440c10:	movzx	eax, byte ptr [rdx]
0x440c13:	test	al, al
0x440c15:	jne	0x440c00
0x440c17:	add	rbx, 2
0x440c1b:	jmp	0x440b46
0x440c20:	mov	rdx, qword ptr [r13 + 8]
0x440c24:	lea	rax, [rdx + 8]
0x440c28:	mov	qword ptr [r13 + 8], rax
0x440c2c:	jmp	0x440bee
0x440c2e:	mov	rdx, qword ptr [r13 + 8]
0x440c32:	lea	rax, [rdx + 8]
0x440c36:	mov	qword ptr [r13 + 8], rax
0x440c3a:	jmp	0x440b90
0x440c3f:	mov	r12, rbp
0x440c42:	mov	rsi, r12
0x440c45:	mov	rdi, r14
0x440c48:	call	0x4408c0
0x440c4d:	nop	dword ptr [rax]
0x440c50:	mov	rbp, rdi
0x440c53:	mov	rsi, rbp
0x440c56:	mov	rdi, r14
0x440c59:	call	0x4408c0
0x440c5e:	nop	
0x440c60:	mov	rbp, rdi
0x440c63:	xor	eax, eax
0x440c65:	jmp	0x440bc5
0x440c6a:	nop	word ptr [rax + rax]
0x440c70:	endbr64	
0x440c74:	mov	qword ptr [rdi], rsi
0x440c77:	ret	
0x440c78:	nop	dword ptr [rax + rax]
0x440c80:	endbr64	
0x440c84:	mov	qword ptr [rdi + 8], rsi
0x440c88:	ret	
0x440c89:	nop	dword ptr [rax]
0x440c90:	endbr64	
0x440c94:	mov	rax, qword ptr [rdi]
0x440c97:	ret	
0x440c98:	nop	dword ptr [rax + rax]
0x440ca0:	endbr64	
0x440ca4:	lea	rax, [rdi + 0x10]
0x440ca8:	ret	
0x440ca9:	nop	dword ptr [rax]
0x440cb0:	endbr64	
0x440cb4:	lea	rax, [rdi + 0x10]
0x440cb8:	ret	
0x440cb9:	nop	dword ptr [rax]
0x440cc0:	endbr64	
0x440cc4:	mov	qword ptr [rdi + 0x10], rsi
0x440cc8:	ret	
0x440cc9:	nop	dword ptr [rax]
0x440cd0:	endbr64	
0x440cd4:	mov	rax, qword ptr [rdi]
0x440cd7:	mov	qword ptr [rdi + 8], rsi
0x440cdb:	mov	byte ptr [rax + rsi], 0
0x440cdf:	ret	
0x440ce0:	endbr64	
0x440ce4:	lea	rax, [rdi + 0x10]
0x440ce8:	cmp	rax, qword ptr [rdi]
0x440ceb:	sete	al
0x440cee:	ret	
0x440cef:	nop	
0x440cf0:	endbr64	
0x440cf4:	movabs	rax, 0x3fffffffffffffff
0x440cfe:	mov	rdi, qword ptr [rsi]
0x440d01:	cmp	rdi, rax
0x440d04:	ja	0x440d3f
0x440d06:	cmp	rdi, rdx
0x440d09:	jbe	0x440d36
0x440d0b:	add	rdx, rdx
0x440d0e:	cmp	rdi, rdx
0x440d11:	jae	0x440d36
0x440d13:	cmp	rdx, rax
0x440d16:	jbe	0x440d30
0x440d18:	movabs	rdi, 0x4000000000000000
0x440d22:	mov	qword ptr [rsi], rax
0x440d25:	jmp	0x440420
0x440d2a:	nop	word ptr [rax + rax]
0x440d30:	mov	qword ptr [rsi], rdx
0x440d33:	mov	rdi, rdx
0x440d36:	add	rdi, 1
0x440d3a:	jmp	0x440420
0x440d3f:	push	rax
0x440d40:	lea	rdi, [rip + 0x8b859]
0x440d47:	call	0x42c9f3
0x440d4c:	nop	dword ptr [rax]
0x440d50:	endbr64	
0x440d54:	mov	r8, qword ptr [rdi]
0x440d57:	add	rdi, 0x10
0x440d5b:	cmp	r8, rdi
0x440d5e:	je	0x440d70
0x440d60:	mov	rdi, r8
0x440d63:	jmp	0x444170
0x440d68:	nop	dword ptr [rax + rax]
0x440d70:	ret	
0x440d71:	nop	word ptr cs:[rax + rax]
0x440d7b:	nop	dword ptr [rax + rax]
0x440d80:	endbr64	
0x440d84:	mov	rdi, qword ptr [rdi]
0x440d87:	jmp	0x444170
0x440d8c:	nop	dword ptr [rax]
0x440d90:	endbr64	
0x440d94:	push	rbp
0x440d95:	mov	ebp, edx
0x440d97:	push	rbx
0x440d98:	mov	rbx, rdi
0x440d9b:	sub	rsp, 0x18
0x440d9f:	mov	qword ptr [rsp + 8], rsi
0x440da4:	cmp	rsi, 0xf
0x440da8:	ja	0x440de0
0x440daa:	mov	rdi, qword ptr [rdi]
0x440dad:	mov	rax, rsi
0x440db0:	test	rax, rax
0x440db3:	je	0x440dcf
0x440db5:	cmp	rax, 1
0x440db9:	je	0x440e00
0x440dbb:	movsx	esi, bpl
0x440dbf:	mov	rdx, rax
0x440dc2:	call	0x403ac0
0x440dc7:	mov	rax, qword ptr [rsp + 8]
0x440dcc:	mov	rdi, qword ptr [rbx]
0x440dcf:	mov	qword ptr [rbx + 8], rax
0x440dd3:	mov	byte ptr [rdi + rax], 0
0x440dd7:	add	rsp, 0x18
0x440ddb:	pop	rbx
0x440ddc:	pop	rbp
0x440ddd:	ret	
0x440dde:	nop	
0x440de0:	lea	rsi, [rsp + 8]
0x440de5:	xor	edx, edx
0x440de7:	call	0x440cf0
0x440dec:	mov	qword ptr [rbx], rax
0x440def:	mov	rdi, rax
0x440df2:	mov	rax, qword ptr [rsp + 8]
0x440df7:	mov	qword ptr [rbx + 0x10], rax
0x440dfb:	jmp	0x440db0
0x440dfd:	nop	dword ptr [rax]
0x440e00:	mov	byte ptr [rdi], bpl
0x440e03:	mov	rax, qword ptr [rsp + 8]
0x440e08:	mov	rdi, qword ptr [rbx]
0x440e0b:	mov	qword ptr [rbx + 8], rax
0x440e0f:	mov	byte ptr [rdi + rax], 0
0x440e13:	add	rsp, 0x18
0x440e17:	pop	rbx
0x440e18:	pop	rbp
0x440e19:	ret	
0x440e1a:	nop	word ptr [rax + rax]
0x440e20:	endbr64	
0x440e24:	movsx	edx, dl
0x440e27:	jmp	0x440d90
0x440e2c:	nop	dword ptr [rax]
0x440e30:	endbr64	
0x440e34:	mov	rax, rdi
0x440e37:	ret	
0x440e38:	nop	dword ptr [rax + rax]
0x440e40:	endbr64	
0x440e44:	mov	rax, rdi
0x440e47:	ret	
0x440e48:	nop	dword ptr [rax + rax]
0x440e50:	endbr64	
0x440e54:	mov	rcx, qword ptr [rdi + 8]
0x440e58:	mov	rax, rsi
0x440e5b:	cmp	rsi, rcx
0x440e5e:	ja	0x440e61
0x440e60:	ret	
0x440e61:	push	rsi
0x440e62:	lea	rdi, [rip + 0x8b74f]
0x440e69:	mov	rsi, rdx
0x440e6c:	mov	rdx, rax
0x440e6f:	xor	eax, eax
0x440e71:	call	0x440770
0x440e76:	nop	word ptr cs:[rax + rax]
0x440e80:	endbr64	
0x440e84:	movabs	rax, 0x3fffffffffffffff
0x440e8e:	add	rsi, rax
0x440e91:	sub	rsi, qword ptr [rdi + 8]
0x440e95:	cmp	rsi, rdx
0x440e98:	jb	0x440e9b
0x440e9a:	ret	
0x440e9b:	push	rax
0x440e9c:	mov	rdi, rcx
0x440e9f:	call	0x42c9f3
0x440ea4:	nop	word ptr cs:[rax + rax]
0x440eae:	nop	
0x440eb0:	endbr64	
0x440eb4:	mov	rax, qword ptr [rdi + 8]
0x440eb8:	sub	rax, rsi
0x440ebb:	cmp	rax, rdx
0x440ebe:	cmova	rax, rdx
0x440ec2:	ret	
0x440ec3:	nop	word ptr cs:[rax + rax]
0x440ecd:	nop	dword ptr [rax]
0x440ed0:	endbr64	
0x440ed4:	mov	rax, qword ptr [rdi]
0x440ed7:	mov	r8d, 1
0x440edd:	cmp	rax, rsi
0x440ee0:	ja	0x440eed
0x440ee2:	add	rax, qword ptr [rdi + 8]
0x440ee6:	cmp	rax, rsi
0x440ee9:	setb	r8b
0x440eed:	mov	eax, r8d
0x440ef0:	ret	
0x440ef1:	nop	word ptr cs:[rax + rax]
0x440efb:	nop	dword ptr [rax + rax]
0x440f00:	endbr64	
0x440f04:	cmp	rdx, 1
0x440f08:	je	0x440f18
0x440f0a:	test	rdx, rdx
0x440f0d:	jne	0x440f10
0x440f0f:	ret	
0x440f10:	jmp	0x403c60
0x440f15:	nop	dword ptr [rax]
0x440f18:	movzx	eax, byte ptr [rsi]
0x440f1b:	mov	byte ptr [rdi], al
0x440f1d:	ret	
0x440f1e:	nop	
0x440f20:	endbr64	
0x440f24:	cmp	rdx, 1
0x440f28:	je	0x440f38
0x440f2a:	test	rdx, rdx
0x440f2d:	jne	0x440f30
0x440f2f:	ret	
0x440f30:	jmp	0x403d90
0x440f35:	nop	dword ptr [rax]
0x440f38:	movzx	eax, byte ptr [rsi]
0x440f3b:	mov	byte ptr [rdi], al
0x440f3d:	ret	
0x440f3e:	nop	
0x440f40:	endbr64	
0x440f44:	mov	r8, rsi
0x440f47:	cmp	rsi, 1
0x440f4b:	je	0x440f68
0x440f4d:	test	rsi, rsi
0x440f50:	jne	0x440f58
0x440f52:	ret	
0x440f53:	nop	dword ptr [rax + rax]
0x440f58:	movsx	esi, dl
0x440f5b:	mov	rdx, r8
0x440f5e:	jmp	0x403ac0
0x440f63:	nop	dword ptr [rax + rax]
0x440f68:	mov	byte ptr [rdi], dl
0x440f6a:	ret	
0x440f6b:	nop	dword ptr [rax + rax]
0x440f70:	endbr64	
0x440f74:	sub	rdx, rsi
0x440f77:	cmp	rdx, 1
0x440f7b:	je	0x440f90
0x440f7d:	test	rdx, rdx
0x440f80:	jne	0x440f88
0x440f82:	ret	
0x440f83:	nop	dword ptr [rax + rax]
0x440f88:	jmp	0x403c60
0x440f8d:	nop	dword ptr [rax]
0x440f90:	movzx	eax, byte ptr [rsi]
0x440f93:	mov	byte ptr [rdi], al
0x440f95:	ret	
0x440f96:	nop	word ptr cs:[rax + rax]
0x440fa0:	endbr64	
0x440fa4:	sub	rdx, rsi
0x440fa7:	cmp	rdx, 1
0x440fab:	je	0x440fc0
0x440fad:	test	rdx, rdx
0x440fb0:	jne	0x440fb8
0x440fb2:	ret	
0x440fb3:	nop	dword ptr [rax + rax]
0x440fb8:	jmp	0x403c60
0x440fbd:	nop	dword ptr [rax]
0x440fc0:	movzx	eax, byte ptr [rsi]
0x440fc3:	mov	byte ptr [rdi], al
0x440fc5:	ret	
0x440fc6:	nop	word ptr cs:[rax + rax]
0x440fd0:	endbr64	
0x440fd4:	sub	rdx, rsi
0x440fd7:	cmp	rdx, 1
0x440fdb:	je	0x440ff0
0x440fdd:	test	rdx, rdx
0x440fe0:	jne	0x440fe8
0x440fe2:	ret	
0x440fe3:	nop	dword ptr [rax + rax]
0x440fe8:	jmp	0x403c60
0x440fed:	nop	dword ptr [rax]
0x440ff0:	movzx	eax, byte ptr [rsi]
0x440ff3:	mov	byte ptr [rdi], al
0x440ff5:	ret	
0x440ff6:	nop	word ptr cs:[rax + rax]
0x441000:	endbr64	
0x441004:	sub	rdx, rsi
0x441007:	cmp	rdx, 1
0x44100b:	je	0x441020
0x44100d:	test	rdx, rdx
0x441010:	jne	0x441018
0x441012:	ret	
0x441013:	nop	dword ptr [rax + rax]
0x441018:	jmp	0x403c60
0x44101d:	nop	dword ptr [rax]
0x441020:	movzx	eax, byte ptr [rsi]
0x441023:	mov	byte ptr [rdi], al
0x441025:	ret	
0x441026:	nop	word ptr cs:[rax + rax]
0x441030:	endbr64	
0x441034:	sub	rdi, rsi
0x441037:	mov	eax, 0x7fffffff
0x44103c:	cmp	rdi, 0x7fffffff
0x441043:	jg	0x441054
0x441045:	cmp	rdi, -0x80000000
0x44104c:	mov	eax, 0x80000000
0x441051:	cmovge	eax, edi
0x441054:	ret	
0x441055:	nop	word ptr cs:[rax + rax]
0x44105f:	nop	
0x441060:	endbr64	
0x441064:	push	r14
0x441066:	push	r13
0x441068:	push	r12
0x44106a:	push	rbp
0x44106b:	push	rbx
0x44106c:	sub	rsp, 0x10
0x441070:	mov	rax, qword ptr fs:[0x28]
0x441079:	mov	qword ptr [rsp + 8], rax
0x44107e:	xor	eax, eax
0x441080:	cmp	rdi, rsi
0x441083:	je	0x4410b7
0x441085:	mov	r13, qword ptr [rdi]
0x441088:	lea	r14, [rdi + 0x10]
0x44108c:	mov	r12, qword ptr [rsi + 8]
0x441090:	mov	rbx, rdi
0x441093:	mov	rbp, rsi
0x441096:	cmp	r14, r13
0x441099:	je	0x441138
0x44109f:	mov	rdx, qword ptr [rdi + 0x10]
0x4410a3:	cmp	rdx, r12
0x4410a6:	jb	0x441100
0x4410a8:	test	r12, r12
0x4410ab:	jne	0x4410e0
0x4410ad:	mov	qword ptr [rbx + 8], r12
0x4410b1:	mov	byte ptr [r13 + r12], 0
0x4410b7:	mov	rax, qword ptr [rsp + 8]
0x4410bc:	sub	rax, qword ptr fs:[0x28]
0x4410c5:	jne	0x441157
0x4410cb:	add	rsp, 0x10
0x4410cf:	pop	rbx
0x4410d0:	pop	rbp
0x4410d1:	pop	r12
0x4410d3:	pop	r13
0x4410d5:	pop	r14
0x4410d7:	ret	
0x4410d8:	nop	dword ptr [rax + rax]
0x4410e0:	mov	rsi, qword ptr [rbp]
0x4410e4:	cmp	r12, 1
0x4410e8:	je	0x441148
0x4410ea:	mov	rdi, r13
0x4410ed:	mov	rdx, r12
0x4410f0:	call	0x403c60
0x4410f5:	mov	r13, qword ptr [rbx]
0x4410f8:	jmp	0x4410ad
0x4410fa:	nop	word ptr [rax + rax]
0x441100:	mov	rdi, rbx
0x441103:	mov	rsi, rsp
0x441106:	mov	qword ptr [rsp], r12
0x44110a:	call	0x440cf0
0x44110f:	mov	rdi, qword ptr [rbx]
0x441112:	mov	r13, rax
0x441115:	cmp	r14, rdi
0x441118:	je	0x44111f
0x44111a:	call	0x444170
0x44111f:	mov	rax, qword ptr [rsp]
0x441123:	mov	qword ptr [rbx], r13
0x441126:	mov	qword ptr [rbx + 0x10], rax
0x44112a:	test	r12, r12
0x44112d:	je	0x4410ad
0x441133:	jmp	0x4410e0
0x441135:	nop	dword ptr [rax]
0x441138:	mov	edx, 0xf
0x44113d:	jmp	0x4410a3
0x441142:	nop	word ptr [rax + rax]
0x441148:	movzx	eax, byte ptr [rsi]
0x44114b:	mov	byte ptr [r13], al
0x44114f:	mov	r13, qword ptr [rbx]
0x441152:	jmp	0x4410ad
0x441157:	call	0x4039f0
0x44115c:	nop	dword ptr [rax]
0x441160:	endbr64	
0x441164:	push	r15
0x441166:	push	r14
0x441168:	mov	r14, r8
0x44116b:	push	r13
0x44116d:	push	r12
0x44116f:	lea	r12, [rdi + 0x10]
0x441173:	push	rbp
0x441174:	mov	rbp, rsi
0x441177:	push	rbx
0x441178:	mov	rbx, rdi
0x44117b:	sub	rsp, 0x28
0x44117f:	mov	qword ptr [rsp], rcx
0x441183:	mov	rcx, qword ptr [rdi + 8]
0x441187:	mov	r13, rcx
0x44118a:	mov	rax, qword ptr fs:[0x28]
0x441193:	mov	qword ptr [rsp + 0x18], rax
0x441198:	xor	eax, eax
0x44119a:	lea	rax, [rsi + rdx]
0x44119e:	mov	qword ptr [rsp + 8], rax
0x4411a3:	sub	r13, rax
0x4411a6:	mov	rax, r8
0x4411a9:	sub	rax, rdx
0x4411ac:	add	rax, rcx
0x4411af:	mov	qword ptr [rsp + 0x10], rax
0x4411b4:	cmp	r12, qword ptr [rdi]
0x4411b7:	je	0x4412a0
0x4411bd:	mov	rdx, qword ptr [rdi + 0x10]
0x4411c1:	lea	rsi, [rsp + 0x10]
0x4411c6:	mov	rdi, rbx
0x4411c9:	call	0x440cf0
0x4411ce:	mov	r15, rax
0x4411d1:	test	rbp, rbp
0x4411d4:	je	0x4411ee
0x4411d6:	mov	rsi, qword ptr [rbx]
0x4411d9:	cmp	rbp, 1
0x4411dd:	je	0x441278
0x4411e3:	mov	rdx, rbp
0x4411e6:	mov	rdi, rax
0x4411e9:	call	0x403c60
0x4411ee:	cmp	qword ptr [rsp], 0
0x4411f3:	je	0x441218
0x4411f5:	test	r14, r14
0x4411f8:	je	0x441218
0x4411fa:	lea	rdi, [r15 + rbp]
0x4411fe:	cmp	r14, 1
0x441202:	je	0x441290
0x441208:	mov	rsi, qword ptr [rsp]
0x44120c:	mov	rdx, r14
0x44120f:	call	0x403c60
0x441214:	nop	dword ptr [rax]
0x441218:	test	r13, r13
0x44121b:	je	0x44123b
0x44121d:	lea	rdi, [rbp + r14]
0x441222:	mov	rsi, qword ptr [rsp + 8]
0x441227:	add	rsi, qword ptr [rbx]
0x44122a:	add	rdi, r15
0x44122d:	cmp	r13, 1
0x441231:	je	0x441288
0x441233:	mov	rdx, r13
0x441236:	call	0x403c60
0x44123b:	mov	rdi, qword ptr [rbx]
0x44123e:	cmp	r12, rdi
0x441241:	je	0x441248
0x441243:	call	0x444170
0x441248:	mov	rax, qword ptr [rsp + 0x10]
0x44124d:	mov	qword ptr [rbx], r15
0x441250:	mov	qword ptr [rbx + 0x10], rax
0x441254:	mov	rax, qword ptr [rsp + 0x18]
0x441259:	sub	rax, qword ptr fs:[0x28]
0x441262:	jne	0x4412aa
0x441264:	add	rsp, 0x28
0x441268:	pop	rbx
0x441269:	pop	rbp
0x44126a:	pop	r12
0x44126c:	pop	r13
0x44126e:	pop	r14
0x441270:	pop	r15
0x441272:	ret	
0x441273:	nop	dword ptr [rax + rax]
0x441278:	movzx	eax, byte ptr [rsi]
0x44127b:	mov	byte ptr [r15], al
0x44127e:	jmp	0x4411ee
0x441283:	nop	dword ptr [rax + rax]
0x441288:	movzx	eax, byte ptr [rsi]
0x44128b:	mov	byte ptr [rdi], al
0x44128d:	jmp	0x44123b
0x44128f:	nop	
0x441290:	mov	rax, qword ptr [rsp]
0x441294:	movzx	eax, byte ptr [rax]
0x441297:	mov	byte ptr [rdi], al
0x441299:	jmp	0x441218
0x44129e:	nop	
0x4412a0:	mov	edx, 0xf
0x4412a5:	jmp	0x4411c1
0x4412aa:	call	0x4039f0
0x4412af:	nop	
0x4412b0:	endbr64	
0x4412b4:	push	rbp
0x4412b5:	mov	rbp, rdx
0x4412b8:	add	rdx, rsi
0x4412bb:	push	rbx
0x4412bc:	mov	rbx, rdi
0x4412bf:	sub	rsp, 8
0x4412c3:	mov	rax, qword ptr [rdi + 8]
0x4412c7:	mov	r9, rax
0x4412ca:	sub	r9, rdx
0x4412cd:	je	0x4412f5
0x4412cf:	test	rbp, rbp
0x4412d2:	je	0x4412f5
0x4412d4:	add	rdx, qword ptr [rdi]
0x4412d7:	mov	rdi, qword ptr [rdi]
0x4412da:	mov	r8, rdx
0x4412dd:	add	rdi, rsi
0x4412e0:	cmp	r9, 1
0x4412e4:	je	0x441310
0x4412e6:	mov	rdx, r9
0x4412e9:	mov	rsi, r8
0x4412ec:	call	0x403d90
0x4412f1:	mov	rax, qword ptr [rbx + 8]
0x4412f5:	mov	rdx, qword ptr [rbx]
0x4412f8:	sub	rax, rbp
0x4412fb:	mov	qword ptr [rbx + 8], rax
0x4412ff:	mov	byte ptr [rdx + rax], 0
0x441303:	add	rsp, 8
0x441307:	pop	rbx
0x441308:	pop	rbp
0x441309:	ret	
0x44130a:	nop	word ptr [rax + rax]
0x441310:	movzx	eax, byte ptr [rdx]
0x441313:	mov	byte ptr [rdi], al
0x441315:	mov	rax, qword ptr [rbx + 8]
0x441319:	jmp	0x4412f5
0x44131b:	nop	dword ptr [rax + rax]
0x441320:	endbr64	
0x441324:	lea	rax, [rdi + 0x10]
0x441328:	mov	qword ptr [rdi + 8], 0
0x441330:	mov	qword ptr [rdi], rax
0x441333:	mov	byte ptr [rdi + 0x10], 0
0x441337:	ret	
0x441338:	nop	dword ptr [rax + rax]
0x441340:	endbr64	
0x441344:	lea	rax, [rdi + 0x10]
0x441348:	mov	qword ptr [rdi + 8], 0
0x441350:	mov	qword ptr [rdi], rax
0x441353:	mov	byte ptr [rdi + 0x10], 0
0x441357:	ret	
0x441358:	nop	dword ptr [rax + rax]
0x441360:	endbr64	
0x441364:	lea	rax, [rdi + 0x10]
0x441368:	movsx	edx, dl
0x44136b:	mov	qword ptr [rdi], rax
0x44136e:	jmp	0x440d90
0x441373:	nop	word ptr cs:[rax + rax]
0x44137d:	nop	dword ptr [rax]
0x441380:	endbr64	
0x441384:	lea	rax, [rdi + 0x10]
0x441388:	mov	qword ptr [rdi], rax
0x44138b:	mov	rdx, qword ptr [rsi]
0x44138e:	lea	rax, [rsi + 0x10]
0x441392:	cmp	rax, rdx
0x441395:	je	0x4413c0
0x441397:	mov	qword ptr [rdi], rdx
0x44139a:	mov	rdx, qword ptr [rsi + 0x10]
0x44139e:	mov	qword ptr [rdi + 0x10], rdx
0x4413a2:	mov	rdx, qword ptr [rsi + 8]
0x4413a6:	mov	qword ptr [rsi], rax
0x4413a9:	mov	qword ptr [rsi + 8], 0
0x4413b1:	mov	qword ptr [rdi + 8], rdx
0x4413b5:	mov	byte ptr [rsi + 0x10], 0
0x4413b9:	ret	
0x4413ba:	nop	word ptr [rax + rax]
0x4413c0:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x4413c5:	movups	xmmword ptr [rdi + 0x10], xmm0
0x4413c9:	jmp	0x4413a2
0x4413cb:	nop	dword ptr [rax + rax]
0x4413d0:	endbr64	
0x4413d4:	lea	rax, [rdi + 0x10]
0x4413d8:	mov	rcx, qword ptr [rsi + 8]
0x4413dc:	mov	qword ptr [rdi], rax
0x4413df:	mov	rdx, qword ptr [rsi]
0x4413e2:	lea	rax, [rsi + 0x10]
0x4413e6:	cmp	rax, rdx
0x4413e9:	je	0x441410
0x4413eb:	mov	qword ptr [rdi], rdx
0x4413ee:	mov	rdx, qword ptr [rsi + 0x10]
0x4413f2:	mov	qword ptr [rdi + 8], rcx
0x4413f6:	mov	qword ptr [rdi + 0x10], rdx
0x4413fa:	mov	qword ptr [rsi], rax
0x4413fd:	mov	qword ptr [rsi + 8], 0
0x441405:	mov	byte ptr [rsi + 0x10], 0
0x441409:	ret	
0x44140a:	nop	word ptr [rax + rax]
0x441410:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x441415:	mov	qword ptr [rdi + 8], rcx
0x441419:	mov	qword ptr [rsi + 8], 0
0x441421:	movups	xmmword ptr [rdi + 0x10], xmm0
0x441425:	mov	byte ptr [rsi + 0x10], 0
0x441429:	ret	
0x44142a:	nop	word ptr [rax + rax]
0x441430:	endbr64	
0x441434:	mov	r8, qword ptr [rdi]
0x441437:	add	rdi, 0x10
0x44143b:	cmp	r8, rdi
0x44143e:	je	0x441450
0x441440:	mov	rdi, r8
0x441443:	jmp	0x444170
0x441448:	nop	dword ptr [rax + rax]
0x441450:	ret	
0x441451:	nop	word ptr cs:[rax + rax]
0x44145b:	nop	dword ptr [rax + rax]
0x441460:	endbr64	
0x441464:	push	r12
0x441466:	mov	r12, rdi
0x441469:	call	0x441060
0x44146e:	mov	rax, r12
0x441471:	pop	r12
0x441473:	ret	
0x441474:	nop	word ptr cs:[rax + rax]
0x44147e:	nop	
0x441480:	endbr64	
0x441484:	push	r12
0x441486:	mov	r12, rdi
0x441489:	push	rbx
0x44148a:	mov	rbx, rsi
0x44148d:	add	rsi, 0x10
0x441491:	sub	rsp, 8
0x441495:	mov	rax, qword ptr [rsi - 0x10]
0x441499:	mov	rdi, qword ptr [rdi]
0x44149c:	cmp	rsi, rax
0x44149f:	je	0x441510
0x4414a1:	lea	rcx, [r12 + 0x10]
0x4414a6:	mov	rdx, qword ptr [rbx + 8]
0x4414aa:	cmp	rdi, rcx
0x4414ad:	je	0x4414f0
0x4414af:	mov	qword ptr [r12], rax
0x4414b3:	mov	rcx, qword ptr [r12 + 0x10]
0x4414b8:	mov	qword ptr [r12 + 8], rdx
0x4414bd:	mov	rax, qword ptr [rbx + 0x10]
0x4414c1:	mov	qword ptr [r12 + 0x10], rax
0x4414c6:	test	rdi, rdi
0x4414c9:	je	0x441502
0x4414cb:	mov	qword ptr [rbx], rdi
0x4414ce:	mov	qword ptr [rbx + 0x10], rcx
0x4414d2:	mov	qword ptr [rbx + 8], 0
0x4414da:	mov	rax, r12
0x4414dd:	mov	byte ptr [rdi], 0
0x4414e0:	add	rsp, 8
0x4414e4:	pop	rbx
0x4414e5:	pop	r12
0x4414e7:	ret	
0x4414e8:	nop	dword ptr [rax + rax]
0x4414f0:	mov	qword ptr [r12], rax
0x4414f4:	mov	qword ptr [r12 + 8], rdx
0x4414f9:	mov	rax, qword ptr [rbx + 0x10]
0x4414fd:	mov	qword ptr [r12 + 0x10], rax
0x441502:	mov	qword ptr [rbx], rsi
0x441505:	mov	rdi, rsi
0x441508:	jmp	0x4414d2
0x44150a:	nop	word ptr [rax + rax]
0x441510:	cmp	r12, rbx
0x441513:	je	0x441550
0x441515:	mov	rdx, qword ptr [rbx + 8]
0x441519:	test	rdx, rdx
0x44151c:	je	0x441531
0x44151e:	cmp	rdx, 1
0x441522:	je	0x441540
0x441524:	call	0x403c60
0x441529:	mov	rdi, qword ptr [r12]
0x44152d:	mov	rdx, qword ptr [rbx + 8]
0x441531:	mov	qword ptr [r12 + 8], rdx
0x441536:	mov	byte ptr [rdi + rdx], 0
0x44153a:	mov	rdi, qword ptr [rbx]
0x44153d:	jmp	0x4414d2
0x44153f:	nop	
0x441540:	movzx	eax, byte ptr [rbx + 0x10]
0x441544:	mov	byte ptr [rdi], al
0x441546:	mov	rdi, qword ptr [r12]
0x44154a:	mov	rdx, qword ptr [rbx + 8]
0x44154e:	jmp	0x441531
0x441550:	mov	rdi, rsi
0x441553:	jmp	0x4414d2
0x441558:	nop	dword ptr [rax + rax]
0x441560:	endbr64	
0x441564:	mov	rax, qword ptr [rdi]
0x441567:	ret	
0x441568:	nop	dword ptr [rax + rax]
0x441570:	endbr64	
0x441574:	mov	rax, qword ptr [rdi]
0x441577:	ret	
0x441578:	nop	dword ptr [rax + rax]
0x441580:	endbr64	
0x441584:	mov	rax, qword ptr [rdi]
0x441587:	add	rax, qword ptr [rdi + 8]
0x44158b:	ret	
0x44158c:	nop	dword ptr [rax]
0x441590:	endbr64	
0x441594:	mov	rax, qword ptr [rdi]
0x441597:	add	rax, qword ptr [rdi + 8]
0x44159b:	ret	
0x44159c:	nop	dword ptr [rax]
0x4415a0:	endbr64	
0x4415a4:	mov	rdx, qword ptr [rsi]
0x4415a7:	add	rdx, qword ptr [rsi + 8]
0x4415ab:	mov	rax, rdi
0x4415ae:	mov	qword ptr [rdi], rdx
0x4415b1:	ret	
0x4415b2:	nop	word ptr cs:[rax + rax]
0x4415bc:	nop	dword ptr [rax]
0x4415c0:	endbr64	
0x4415c4:	mov	rdx, qword ptr [rsi]
0x4415c7:	add	rdx, qword ptr [rsi + 8]
0x4415cb:	mov	rax, rdi
0x4415ce:	mov	qword ptr [rdi], rdx
0x4415d1:	ret	
0x4415d2:	nop	word ptr cs:[rax + rax]
0x4415dc:	nop	dword ptr [rax]
0x4415e0:	endbr64	
0x4415e4:	mov	rdx, qword ptr [rsi]
0x4415e7:	mov	rax, rdi
0x4415ea:	mov	qword ptr [rdi], rdx
0x4415ed:	ret	
0x4415ee:	nop	
0x4415f0:	endbr64	
0x4415f4:	mov	rdx, qword ptr [rsi]
0x4415f7:	mov	rax, rdi
0x4415fa:	mov	qword ptr [rdi], rdx
0x4415fd:	ret	
0x4415fe:	nop	
0x441600:	endbr64	
0x441604:	mov	rax, qword ptr [rdi]
0x441607:	ret	
0x441608:	nop	dword ptr [rax + rax]
0x441610:	endbr64	
0x441614:	mov	rax, qword ptr [rdi]
0x441617:	add	rax, qword ptr [rdi + 8]
0x44161b:	ret	
0x44161c:	nop	dword ptr [rax]
0x441620:	endbr64	
0x441624:	mov	rdx, qword ptr [rsi]
0x441627:	add	rdx, qword ptr [rsi + 8]
0x44162b:	mov	rax, rdi
0x44162e:	mov	qword ptr [rdi], rdx
0x441631:	ret	
0x441632:	nop	word ptr cs:[rax + rax]
0x44163c:	nop	dword ptr [rax]
0x441640:	endbr64	
0x441644:	mov	rdx, qword ptr [rsi]
0x441647:	mov	rax, rdi
0x44164a:	mov	qword ptr [rdi], rdx
0x44164d:	ret	
0x44164e:	nop	
0x441650:	endbr64	
0x441654:	mov	rax, qword ptr [rdi + 8]
0x441658:	ret	
0x441659:	nop	dword ptr [rax]
0x441660:	endbr64	
0x441664:	mov	rax, qword ptr [rdi + 8]
0x441668:	ret	
0x441669:	nop	dword ptr [rax]
0x441670:	endbr64	
0x441674:	movabs	rax, 0x3fffffffffffffff
0x44167e:	ret	
0x44167f:	nop	
0x441680:	endbr64	
0x441684:	lea	rax, [rdi + 0x10]
0x441688:	cmp	qword ptr [rdi], rax
0x44168b:	je	0x441698
0x44168d:	mov	rax, qword ptr [rdi + 0x10]
0x441691:	ret	
0x441692:	nop	word ptr [rax + rax]
0x441698:	mov	eax, 0xf
0x44169d:	ret	
0x44169e:	nop	
0x4416a0:	endbr64	
0x4416a4:	push	r12
0x4416a6:	push	rbp
0x4416a7:	lea	rbp, [rdi + 0x10]
0x4416ab:	push	rbx
0x4416ac:	mov	rbx, rdi
0x4416af:	sub	rsp, 0x10
0x4416b3:	mov	qword ptr [rsp + 8], rsi
0x4416b8:	cmp	rbp, qword ptr [rdi]
0x4416bb:	je	0x441730
0x4416bd:	mov	rdx, qword ptr [rdi + 0x10]
0x4416c1:	cmp	qword ptr [rsp + 8], rdx
0x4416c6:	ja	0x4416d8
0x4416c8:	add	rsp, 0x10
0x4416cc:	pop	rbx
0x4416cd:	pop	rbp
0x4416ce:	pop	r12
0x4416d0:	ret	
0x4416d1:	nop	dword ptr [rax]
0x4416d8:	mov	rdi, rbx
0x4416db:	lea	rsi, [rsp + 8]
0x4416e0:	call	0x440cf0
0x4416e5:	mov	rdi, qword ptr [rbx]
0x4416e8:	mov	r12, rax
0x4416eb:	mov	rax, qword ptr [rbx + 8]
0x4416ef:	lea	rdx, [rax + 1]
0x4416f3:	test	rax, rax
0x4416f6:	je	0x441740
0x4416f8:	test	rdx, rdx
0x4416fb:	jne	0x441720
0x4416fd:	cmp	rbp, rdi
0x441700:	je	0x441707
0x441702:	call	0x444170
0x441707:	mov	rax, qword ptr [rsp + 8]
0x44170c:	mov	qword ptr [rbx], r12
0x44170f:	mov	qword ptr [rbx + 0x10], rax
0x441713:	add	rsp, 0x10
0x441717:	pop	rbx
0x441718:	pop	rbp
0x441719:	pop	r12
0x44171b:	ret	
0x44171c:	nop	dword ptr [rax]
0x441720:	mov	rsi, rdi
0x441723:	mov	rdi, r12
0x441726:	call	0x403c60
0x44172b:	mov	rdi, qword ptr [rbx]
0x44172e:	jmp	0x4416fd
0x441730:	mov	edx, 0xf
0x441735:	jmp	0x4416c1
0x441737:	nop	word ptr [rax + rax]
0x441740:	movzx	eax, byte ptr [rdi]
0x441743:	mov	byte ptr [r12], al
0x441747:	mov	rdi, qword ptr [rbx]
0x44174a:	jmp	0x4416fd
0x44174c:	nop	dword ptr [rax]
0x441750:	endbr64	
0x441754:	push	r15
0x441756:	push	r14
0x441758:	push	r13
0x44175a:	push	r12
0x44175c:	push	rbp
0x44175d:	push	rbx
0x44175e:	mov	rbx, rdi
0x441761:	lea	r12, [rbx + 0x10]
0x441765:	sub	rsp, 8
0x441769:	mov	rdi, qword ptr [rdi]
0x44176c:	cmp	r12, rdi
0x44176f:	je	0x4417b8
0x441771:	mov	rbp, qword ptr [rbx + 8]
0x441775:	mov	rax, qword ptr [rbx + 0x10]
0x441779:	cmp	rbp, 0xf
0x44177d:	ja	0x4417d0
0x44177f:	lea	rax, [rbp + 1]
0x441783:	test	rbp, rbp
0x441786:	je	0x441880
0x44178c:	cmp	eax, 8
0x44178f:	jae	0x441830
0x441795:	test	al, 4
0x441797:	jne	0x441898
0x44179d:	test	eax, eax
0x44179f:	je	0x4417b0
0x4417a1:	movzx	edx, byte ptr [rdi]
0x4417a4:	mov	byte ptr [rbx + 0x10], dl
0x4417a7:	test	al, 2
0x4417a9:	jne	0x4418ad
0x4417af:	nop	
0x4417b0:	call	0x444170
0x4417b5:	mov	qword ptr [rbx], r12
0x4417b8:	add	rsp, 8
0x4417bc:	pop	rbx
0x4417bd:	pop	rbp
0x4417be:	pop	r12
0x4417c0:	pop	r13
0x4417c2:	pop	r14
0x4417c4:	pop	r15
0x4417c6:	ret	
0x4417c7:	nop	word ptr [rax + rax]
0x4417d0:	cmp	rax, rbp
0x4417d3:	jbe	0x4417b8
0x4417d5:	mov	r14, rbp
0x4417d8:	add	r14, 1
0x4417dc:	js	0x441890
0x4417e2:	mov	rdi, r14
0x4417e5:	call	0x440420
0x4417ea:	mov	r15, qword ptr [rbx]
0x4417ed:	mov	r13, rax
0x4417f0:	test	r14, r14
0x4417f3:	je	0x441803
0x4417f5:	mov	rdx, r14
0x4417f8:	mov	rsi, r15
0x4417fb:	mov	rdi, rax
0x4417fe:	call	0x403c60
0x441803:	cmp	r12, r15
0x441806:	je	0x441810
0x441808:	mov	rdi, r15
0x44180b:	call	0x444170
0x441810:	mov	qword ptr [rbx], r13
0x441813:	mov	qword ptr [rbx + 0x10], rbp
0x441817:	add	rsp, 8
0x44181b:	pop	rbx
0x44181c:	pop	rbp
0x44181d:	pop	r12
0x44181f:	pop	r13
0x441821:	pop	r14
0x441823:	pop	r15
0x441825:	ret	
0x441826:	nop	word ptr cs:[rax + rax]
0x441830:	mov	rdx, qword ptr [rdi]
0x441833:	lea	rsi, [rbx + 0x18]
0x441837:	mov	r9, rdi
0x44183a:	and	rsi, 0xfffffffffffffff8
0x44183e:	mov	qword ptr [rbx + 0x10], rdx
0x441842:	mov	edx, eax
0x441844:	mov	rcx, qword ptr [rdi + rdx - 8]
0x441849:	mov	qword ptr [r12 + rdx - 8], rcx
0x44184e:	mov	rdx, r12
0x441851:	sub	rdx, rsi
0x441854:	add	eax, edx
0x441856:	sub	r9, rdx
0x441859:	and	eax, 0xfffffff8
0x44185c:	cmp	eax, 8
0x44185f:	jb	0x4417b0
0x441865:	and	eax, 0xfffffff8
0x441868:	xor	edx, edx
0x44186a:	mov	ecx, edx
0x44186c:	add	edx, 8
0x44186f:	mov	r8, qword ptr [r9 + rcx]
0x441873:	mov	qword ptr [rsi + rcx], r8
0x441877:	cmp	edx, eax
0x441879:	jb	0x44186a
0x44187b:	jmp	0x4417b0
0x441880:	movzx	eax, byte ptr [rdi]
0x441883:	mov	byte ptr [rbx + 0x10], al
0x441886:	jmp	0x4417b0
0x44188b:	nop	dword ptr [rax + rax]
0x441890:	call	0x42c817
0x441895:	nop	dword ptr [rax]
0x441898:	mov	edx, dword ptr [rdi]
0x44189a:	mov	eax, eax
0x44189c:	mov	dword ptr [rbx + 0x10], edx
0x44189f:	mov	edx, dword ptr [rdi + rax - 4]
0x4418a3:	mov	dword ptr [r12 + rax - 4], edx
0x4418a8:	jmp	0x4417b0
0x4418ad:	mov	eax, eax
0x4418af:	movzx	edx, word ptr [rdi + rax - 2]
0x4418b4:	mov	word ptr [r12 + rax - 2], dx
0x4418ba:	jmp	0x4417b0
0x4418bf:	endbr64	
0x4418c3:	mov	rdi, rax
0x4418c6:	mov	rax, rdx
0x4418c9:	sub	rax, 1
0x4418cd:	jne	0x4418d9
0x4418cf:	call	0x4445b0
0x4418d4:	call	0x4454f0
0x4418d9:	call	0x4445b0
0x4418de:	pop	rax
0x4418df:	pop	rbx
0x4418e0:	pop	rbp
0x4418e1:	pop	r12
0x4418e3:	pop	r13
0x4418e5:	pop	r14
0x4418e7:	pop	r15
0x4418e9:	jmp	0x444620
0x4418ee:	endbr64	
0x4418f2:	mov	rbp, rax
0x4418f5:	call	0x444620
0x4418fa:	mov	rdi, rbp
0x4418fd:	call	0x457dd0
0x441902:	nop	word ptr cs:[rax + rax]
0x44190c:	nop	dword ptr [rax]
0x441910:	endbr64	
0x441914:	sub	rsp, 8
0x441918:	call	0x441750
0x44191d:	add	rsp, 8
0x441921:	ret	
0x441922:	nop	word ptr cs:[rax + rax]
0x44192c:	nop	dword ptr [rax]
0x441930:	endbr64	
0x441934:	mov	rax, qword ptr [rdi]
0x441937:	mov	qword ptr [rdi + 8], 0
0x44193f:	mov	byte ptr [rax], 0
0x441942:	ret	
0x441943:	nop	word ptr cs:[rax + rax]
0x44194d:	nop	dword ptr [rax]
0x441950:	endbr64	
0x441954:	cmp	qword ptr [rdi + 8], 0
0x441959:	sete	al
0x44195c:	ret	
0x44195d:	nop	dword ptr [rax]
0x441960:	endbr64	
0x441964:	mov	rax, qword ptr [rdi]
0x441967:	add	rax, rsi
0x44196a:	ret	
0x44196b:	nop	dword ptr [rax + rax]
0x441970:	endbr64	
0x441974:	mov	rax, qword ptr [rdi]
0x441977:	add	rax, rsi
0x44197a:	ret	
0x44197b:	nop	dword ptr [rax + rax]
0x441980:	endbr64	
0x441984:	mov	rdx, qword ptr [rdi + 8]
0x441988:	cmp	rsi, rdx
0x44198b:	jae	0x441994
0x44198d:	mov	rax, qword ptr [rdi]
0x441990:	add	rax, rsi
0x441993:	ret	
0x441994:	push	rax
0x441995:	lea	rdi, [rip + 0x8ac54]
0x44199c:	xor	eax, eax
0x44199e:	call	0x440770
0x4419a3:	nop	word ptr cs:[rax + rax]
0x4419ad:	nop	dword ptr [rax]
0x4419b0:	endbr64	
0x4419b4:	mov	rdx, qword ptr [rdi + 8]
0x4419b8:	cmp	rsi, rdx
0x4419bb:	jae	0x4419c4
0x4419bd:	mov	rax, qword ptr [rdi]
0x4419c0:	add	rax, rsi
0x4419c3:	ret	
0x4419c4:	push	rax
0x4419c5:	lea	rdi, [rip + 0x8ac24]
0x4419cc:	xor	eax, eax
0x4419ce:	call	0x440770
0x4419d3:	nop	word ptr cs:[rax + rax]
0x4419dd:	nop	dword ptr [rax]
0x4419e0:	endbr64	
0x4419e4:	mov	rax, qword ptr [rdi]
0x4419e7:	ret	
0x4419e8:	nop	dword ptr [rax + rax]
0x4419f0:	endbr64	
0x4419f4:	mov	rax, qword ptr [rdi]
0x4419f7:	ret	
0x4419f8:	nop	dword ptr [rax + rax]
0x441a00:	endbr64	
0x441a04:	mov	rax, qword ptr [rdi + 8]
0x441a08:	mov	rdx, qword ptr [rdi]
0x441a0b:	lea	rax, [rdx + rax - 1]
0x441a10:	ret	
0x441a11:	nop	word ptr cs:[rax + rax]
0x441a1b:	nop	dword ptr [rax + rax]
0x441a20:	endbr64	
0x441a24:	mov	rax, qword ptr [rdi + 8]
0x441a28:	mov	rdx, qword ptr [rdi]
0x441a2b:	lea	rax, [rdx + rax - 1]
0x441a30:	ret	
0x441a31:	nop	word ptr cs:[rax + rax]
0x441a3b:	nop	dword ptr [rax + rax]
0x441a40:	endbr64	
0x441a44:	push	r13
0x441a46:	lea	rdx, [rdi + 0x10]
0x441a4a:	push	r12
0x441a4c:	mov	r12, rdi
0x441a4f:	push	rbp
0x441a50:	mov	ebp, esi
0x441a52:	push	rbx
0x441a53:	sub	rsp, 8
0x441a57:	mov	rbx, qword ptr [rdi + 8]
0x441a5b:	mov	rax, qword ptr [rdi]
0x441a5e:	lea	r13, [rbx + 1]
0x441a62:	cmp	rax, rdx
0x441a65:	je	0x441ab0
0x441a67:	mov	rdx, qword ptr [rdi + 0x10]
0x441a6b:	cmp	r13, rdx
0x441a6e:	ja	0x441a90
0x441a70:	mov	byte ptr [rax + rbx], bpl
0x441a74:	mov	rax, qword ptr [r12]
0x441a78:	mov	qword ptr [r12 + 8], r13
0x441a7d:	mov	byte ptr [rax + rbx + 1], 0
0x441a82:	add	rsp, 8
0x441a86:	mov	rax, r12
0x441a89:	pop	rbx
0x441a8a:	pop	rbp
0x441a8b:	pop	r12
0x441a8d:	pop	r13
0x441a8f:	ret	
0x441a90:	mov	r8d, 1
0x441a96:	xor	ecx, ecx
0x441a98:	xor	edx, edx
0x441a9a:	mov	rsi, rbx
0x441a9d:	mov	rdi, r12
0x441aa0:	call	0x441160
0x441aa5:	mov	rax, qword ptr [r12]
0x441aa9:	jmp	0x441a70
0x441aab:	nop	dword ptr [rax + rax]
0x441ab0:	mov	edx, 0xf
0x441ab5:	jmp	0x441a6b
0x441ab7:	nop	word ptr [rax + rax]
0x441ac0:	endbr64	
0x441ac4:	push	r13
0x441ac6:	lea	rdx, [rdi + 0x10]
0x441aca:	push	r12
0x441acc:	mov	r12d, esi
0x441acf:	push	rbp
0x441ad0:	push	rbx
0x441ad1:	mov	rbx, rdi
0x441ad4:	sub	rsp, 8
0x441ad8:	mov	rbp, qword ptr [rdi + 8]
0x441adc:	mov	rax, qword ptr [rdi]
0x441adf:	lea	r13, [rbp + 1]
0x441ae3:	cmp	rax, rdx
0x441ae6:	je	0x441b30
0x441ae8:	mov	rdx, qword ptr [rdi + 0x10]
0x441aec:	cmp	r13, rdx
0x441aef:	ja	0x441b10
0x441af1:	mov	byte ptr [rax + rbp], r12b
0x441af5:	mov	rax, qword ptr [rbx]
0x441af8:	mov	qword ptr [rbx + 8], r13
0x441afc:	mov	byte ptr [rax + rbp + 1], 0
0x441b01:	add	rsp, 8
0x441b05:	pop	rbx
0x441b06:	pop	rbp
0x441b07:	pop	r12
0x441b09:	pop	r13
0x441b0b:	ret	
0x441b0c:	nop	dword ptr [rax]
0x441b10:	mov	r8d, 1
0x441b16:	xor	ecx, ecx
0x441b18:	xor	edx, edx
0x441b1a:	mov	rsi, rbp
0x441b1d:	mov	rdi, rbx
0x441b20:	call	0x441160
0x441b25:	mov	rax, qword ptr [rbx]
0x441b28:	jmp	0x441af1
0x441b2a:	nop	word ptr [rax + rax]
0x441b30:	mov	edx, 0xf
0x441b35:	jmp	0x441aec
0x441b37:	nop	word ptr [rax + rax]
0x441b40:	endbr64	
0x441b44:	push	r12
0x441b46:	mov	r12, rdi
0x441b49:	call	0x441060
0x441b4e:	mov	rax, r12
0x441b51:	pop	r12
0x441b53:	ret	
0x441b54:	nop	word ptr cs:[rax + rax]
0x441b5e:	nop	
0x441b60:	endbr64	
0x441b64:	push	r12
0x441b66:	mov	r12, rdi
0x441b69:	push	rbx
0x441b6a:	mov	rbx, rsi
0x441b6d:	lea	rax, [rbx + 0x10]
0x441b71:	sub	rsp, 8
0x441b75:	mov	rsi, qword ptr [rsi]
0x441b78:	mov	rdi, qword ptr [rdi]
0x441b7b:	cmp	rsi, rax
0x441b7e:	je	0x441bf0
0x441b80:	lea	rcx, [r12 + 0x10]
0x441b85:	mov	rdx, qword ptr [rbx + 8]
0x441b89:	cmp	rdi, rcx
0x441b8c:	je	0x441bd0
0x441b8e:	mov	qword ptr [r12], rsi
0x441b92:	mov	rcx, qword ptr [r12 + 0x10]
0x441b97:	mov	qword ptr [r12 + 8], rdx
0x441b9c:	mov	rdx, qword ptr [rbx + 0x10]
0x441ba0:	mov	qword ptr [r12 + 0x10], rdx
0x441ba5:	test	rdi, rdi
0x441ba8:	je	0x441be2
0x441baa:	mov	qword ptr [rbx], rdi
0x441bad:	mov	qword ptr [rbx + 0x10], rcx
0x441bb1:	mov	qword ptr [rbx + 8], 0
0x441bb9:	mov	rax, r12
0x441bbc:	mov	byte ptr [rdi], 0
0x441bbf:	add	rsp, 8
0x441bc3:	pop	rbx
0x441bc4:	pop	r12
0x441bc6:	ret	
0x441bc7:	nop	word ptr [rax + rax]
0x441bd0:	mov	qword ptr [r12], rsi
0x441bd4:	mov	qword ptr [r12 + 8], rdx
0x441bd9:	mov	rdx, qword ptr [rbx + 0x10]
0x441bdd:	mov	qword ptr [r12 + 0x10], rdx
0x441be2:	mov	qword ptr [rbx], rax
0x441be5:	mov	rdi, rax
0x441be8:	jmp	0x441bb1
0x441bea:	nop	word ptr [rax + rax]
0x441bf0:	cmp	rbx, r12
0x441bf3:	je	0x441c30
0x441bf5:	mov	rdx, qword ptr [rbx + 8]
0x441bf9:	test	rdx, rdx
0x441bfc:	je	0x441c11
0x441bfe:	cmp	rdx, 1
0x441c02:	je	0x441c20
0x441c04:	call	0x403c60
0x441c09:	mov	rdx, qword ptr [rbx + 8]
0x441c0d:	mov	rdi, qword ptr [r12]
0x441c11:	mov	qword ptr [r12 + 8], rdx
0x441c16:	mov	byte ptr [rdi + rdx], 0
0x441c1a:	mov	rdi, qword ptr [rbx]
0x441c1d:	jmp	0x441bb1
0x441c1f:	nop	
0x441c20:	movzx	eax, byte ptr [rbx + 0x10]
0x441c24:	mov	byte ptr [rdi], al
0x441c26:	mov	rdx, qword ptr [rbx + 8]
0x441c2a:	mov	rdi, qword ptr [r12]
0x441c2e:	jmp	0x441c11
0x441c30:	mov	rdi, rsi
0x441c33:	jmp	0x441bb1
0x441c38:	nop	dword ptr [rax + rax]
0x441c40:	endbr64	
0x441c44:	sub	rsp, 0x18
0x441c48:	mov	rcx, qword ptr [rdi + 8]
0x441c4c:	cmp	rsi, rcx
0x441c4f:	ja	0x441ca0
0x441c51:	mov	rax, rdi
0x441c54:	cmp	rdx, -1
0x441c58:	je	0x441c90
0x441c5a:	test	rdx, rdx
0x441c5d:	jne	0x441c68
0x441c5f:	add	rsp, 0x18
0x441c63:	ret	
0x441c64:	nop	dword ptr [rax]
0x441c68:	sub	rcx, rsi
0x441c6b:	mov	qword ptr [rsp + 8], rdi
0x441c70:	cmp	rcx, rdx
0x441c73:	cmovbe	rdx, rcx
0x441c77:	call	0x4412b0
0x441c7c:	mov	rax, qword ptr [rsp + 8]
0x441c81:	add	rsp, 0x18
0x441c85:	ret	
0x441c86:	nop	word ptr cs:[rax + rax]
0x441c90:	mov	rdx, qword ptr [rdi]
0x441c93:	mov	qword ptr [rdi + 8], rsi
0x441c97:	mov	byte ptr [rdx + rsi], 0
0x441c9b:	add	rsp, 0x18
0x441c9f:	ret	
0x441ca0:	mov	rdx, rsi
0x441ca3:	lea	rdi, [rip + 0x8a90e]
0x441caa:	xor	eax, eax
0x441cac:	lea	rsi, [rip + 0x8a981]
0x441cb3:	call	0x440770
0x441cb8:	nop	dword ptr [rax + rax]
0x441cc0:	endbr64	
0x441cc4:	push	rbp
0x441cc5:	mov	edx, 1
0x441cca:	mov	rbp, rdi
0x441ccd:	push	rbx
0x441cce:	mov	rbx, rsi
0x441cd1:	sub	rsp, 8
0x441cd5:	sub	rbx, qword ptr [rdi]
0x441cd8:	mov	rsi, rbx
0x441cdb:	call	0x4412b0
0x441ce0:	mov	rax, qword ptr [rbp]
0x441ce4:	add	rsp, 8
0x441ce8:	add	rax, rbx
0x441ceb:	pop	rbx
0x441cec:	pop	rbp
0x441ced:	ret	
0x441cee:	nop	
0x441cf0:	endbr64	
0x441cf4:	push	rbp
0x441cf5:	mov	rbp, rsi
0x441cf8:	push	rbx
0x441cf9:	mov	rbx, rdi
0x441cfc:	sub	rsp, 8
0x441d00:	mov	rcx, qword ptr [rdi]
0x441d03:	sub	rbp, rcx
0x441d06:	add	rcx, qword ptr [rdi + 8]
0x441d0a:	cmp	rdx, rcx
0x441d0d:	je	0x441d30
0x441d0f:	sub	rdx, rsi
0x441d12:	mov	rsi, rbp
0x441d15:	call	0x4412b0
0x441d1a:	mov	rax, qword ptr [rbx]
0x441d1d:	add	rsp, 8
0x441d21:	pop	rbx
0x441d22:	add	rax, rbp
0x441d25:	pop	rbp
0x441d26:	ret	
0x441d27:	nop	word ptr [rax + rax]
0x441d30:	mov	qword ptr [rdi + 8], rbp
0x441d34:	mov	byte ptr [rsi], 0
0x441d37:	mov	rax, qword ptr [rbx]
0x441d3a:	add	rsp, 8
0x441d3e:	pop	rbx
0x441d3f:	add	rax, rbp
0x441d42:	pop	rbp
0x441d43:	ret	
0x441d44:	nop	word ptr cs:[rax + rax]
0x441d4e:	nop	
0x441d50:	endbr64	
0x441d54:	sub	rsp, 8
0x441d58:	mov	rax, qword ptr [rdi + 8]
0x441d5c:	mov	edx, 1
0x441d61:	lea	rsi, [rax - 1]
0x441d65:	call	0x4412b0
0x441d6a:	add	rsp, 8
0x441d6e:	ret	
0x441d6f:	nop	
0x441d70:	endbr64	
0x441d74:	movabs	rax, 0x3fffffffffffffff
0x441d7e:	push	r14
0x441d80:	push	r13
0x441d82:	mov	r13, rcx
0x441d85:	add	rax, rdx
0x441d88:	push	r12
0x441d8a:	push	rbp
0x441d8b:	push	rbx
0x441d8c:	mov	rcx, qword ptr [rdi + 8]
0x441d90:	sub	rax, rcx
0x441d93:	cmp	r13, rax
0x441d96:	ja	0x441e83
0x441d9c:	mov	r12, rdi
0x441d9f:	mov	rbx, r13
0x441da2:	mov	rdi, qword ptr [rdi]
0x441da5:	mov	r14, rsi
0x441da8:	sub	rbx, rdx
0x441dab:	lea	rax, [r12 + 0x10]
0x441db0:	mov	ebp, r8d
0x441db3:	add	rbx, rcx
0x441db6:	cmp	rdi, rax
0x441db9:	je	0x441e50
0x441dbf:	mov	rax, qword ptr [r12 + 0x10]
0x441dc4:	cmp	rax, rbx
0x441dc7:	jb	0x441e30
0x441dc9:	lea	rax, [rdx + r14]
0x441dcd:	sub	rcx, rax
0x441dd0:	je	0x441df7
0x441dd2:	cmp	rdx, r13
0x441dd5:	je	0x441df7
0x441dd7:	add	rdi, r14
0x441dda:	lea	rsi, [rdi + rdx]
0x441dde:	add	rdi, r13
0x441de1:	cmp	rcx, 1
0x441de5:	je	0x441e70
0x441deb:	mov	rdx, rcx
0x441dee:	call	0x403d90
0x441df3:	mov	rdi, qword ptr [r12]
0x441df7:	test	r13, r13
0x441dfa:	je	0x441e15
0x441dfc:	add	rdi, r14
0x441dff:	cmp	r13, 1
0x441e03:	je	0x441e60
0x441e05:	movsx	esi, bpl
0x441e09:	mov	rdx, r13
0x441e0c:	call	0x403ac0
0x441e11:	mov	rdi, qword ptr [r12]
0x441e15:	mov	qword ptr [r12 + 8], rbx
0x441e1a:	mov	rax, r12
0x441e1d:	mov	byte ptr [rdi + rbx], 0
0x441e21:	pop	rbx
0x441e22:	pop	rbp
0x441e23:	pop	r12
0x441e25:	pop	r13
0x441e27:	pop	r14
0x441e29:	ret	
0x441e2a:	nop	word ptr [rax + rax]
0x441e30:	mov	rdi, r12
0x441e33:	mov	r8, r13
0x441e36:	xor	ecx, ecx
0x441e38:	mov	rsi, r14
0x441e3b:	call	0x441160
0x441e40:	mov	rdi, qword ptr [r12]
0x441e44:	test	r13, r13
0x441e47:	je	0x441e15
0x441e49:	jmp	0x441dfc
0x441e4b:	nop	dword ptr [rax + rax]
0x441e50:	mov	eax, 0xf
0x441e55:	jmp	0x441dc4
0x441e5a:	nop	word ptr [rax + rax]
0x441e60:	mov	byte ptr [rdi], bpl
0x441e63:	mov	rdi, qword ptr [r12]
0x441e67:	jmp	0x441e15
0x441e69:	nop	dword ptr [rax]
0x441e70:	movzx	eax, byte ptr [rsi]
0x441e73:	mov	byte ptr [rdi], al
0x441e75:	mov	rdi, qword ptr [r12]
0x441e79:	test	r13, r13
0x441e7c:	je	0x441e15
0x441e7e:	jmp	0x441dfc
0x441e83:	lea	rdi, [rip + 0x8a7be]
0x441e8a:	call	0x42c9f3
0x441e8f:	nop	
0x441e90:	endbr64	
0x441e94:	mov	rcx, rsi
0x441e97:	mov	rsi, qword ptr [rdi + 8]
0x441e9b:	movsx	r8d, dl
0x441e9f:	xor	edx, edx
0x441ea1:	jmp	0x441d70
0x441ea6:	nop	word ptr cs:[rax + rax]
0x441eb0:	endbr64	
0x441eb4:	mov	r8d, edx
0x441eb7:	mov	rdx, qword ptr [rdi + 8]
0x441ebb:	mov	rcx, rsi
0x441ebe:	xor	esi, esi
0x441ec0:	movsx	r8d, r8b
0x441ec4:	jmp	0x441d70
0x441ec9:	nop	dword ptr [rax]
0x441ed0:	endbr64	
0x441ed4:	movsx	r8d, cl
0x441ed8:	mov	rcx, qword ptr [rdi + 8]
0x441edc:	cmp	rsi, rcx
0x441edf:	ja	0x441eeb
0x441ee1:	mov	rcx, rdx
0x441ee4:	xor	edx, edx
0x441ee6:	jmp	0x441d70
0x441eeb:	push	rax
0x441eec:	mov	rdx, rsi
0x441eef:	lea	rdi, [rip + 0x8a6c2]
0x441ef6:	xor	eax, eax
0x441ef8:	lea	rsi, [rip + 0x8a766]
0x441eff:	call	0x440770
0x441f04:	nop	word ptr cs:[rax + rax]
0x441f0e:	nop	
0x441f10:	endbr64	
0x441f14:	push	rbp
0x441f15:	movsx	r8d, dl
0x441f19:	mov	rbp, rdi
0x441f1c:	mov	ecx, 1
0x441f21:	push	rbx
0x441f22:	mov	rbx, rsi
0x441f25:	xor	edx, edx
0x441f27:	sub	rsp, 8
0x441f2b:	sub	rbx, qword ptr [rdi]
0x441f2e:	mov	rsi, rbx
0x441f31:	call	0x441d70
0x441f36:	mov	rax, qword ptr [rbp]
0x441f3a:	add	rsp, 8
0x441f3e:	add	rax, rbx
0x441f41:	pop	rbx
0x441f42:	pop	rbp
0x441f43:	ret	
0x441f44:	nop	word ptr cs:[rax + rax]
0x441f4e:	nop	
0x441f50:	endbr64	
0x441f54:	mov	r9, qword ptr [rdi + 8]
0x441f58:	mov	r10, rdx
0x441f5b:	mov	rdx, r9
0x441f5e:	sub	rdx, rsi
0x441f61:	cmp	rdx, r10
0x441f64:	cmova	rdx, r10
0x441f68:	cmp	rsi, r9
0x441f6b:	ja	0x441f76
0x441f6d:	movsx	r8d, r8b
0x441f71:	jmp	0x441d70
0x441f76:	push	rax
0x441f77:	mov	rdx, rsi
0x441f7a:	mov	rcx, r9
0x441f7d:	lea	rsi, [rip + 0x8a6f6]
0x441f84:	lea	rdi, [rip + 0x8a62d]
0x441f8b:	xor	eax, eax
0x441f8d:	call	0x440770
0x441f92:	nop	word ptr cs:[rax + rax]
0x441f9c:	nop	dword ptr [rax]
0x441fa0:	endbr64	
0x441fa4:	sub	rdx, rsi
0x441fa7:	movsx	r8d, r8b
0x441fab:	sub	rsi, qword ptr [rdi]
0x441fae:	jmp	0x441d70
0x441fb3:	nop	word ptr cs:[rax + rax]
0x441fbd:	nop	dword ptr [rax]
0x441fc0:	endbr64	
0x441fc4:	push	r12
0x441fc6:	mov	rdx, qword ptr [rdi + 8]
0x441fca:	mov	r12, rdi
0x441fcd:	movsx	r8d, sil
0x441fd1:	mov	ecx, 1
0x441fd6:	xor	esi, esi
0x441fd8:	call	0x441d70
0x441fdd:	mov	rax, r12
0x441fe0:	pop	r12
0x441fe2:	ret	
0x441fe3:	nop	word ptr cs:[rax + rax]
0x441fed:	nop	dword ptr [rax]
0x441ff0:	endbr64	
0x441ff4:	push	rbp
0x441ff5:	movsx	r8d, cl
0x441ff9:	mov	rbp, rdi
0x441ffc:	mov	rcx, rdx
0x441fff:	push	rbx
0x442000:	mov	rbx, rsi
0x442003:	xor	edx, edx
0x442005:	sub	rsp, 8
0x442009:	sub	rbx, qword ptr [rdi]
0x44200c:	mov	rsi, rbx
0x44200f:	call	0x441d70
0x442014:	mov	rax, qword ptr [rbp]
0x442018:	add	rsp, 8
0x44201c:	add	rax, rbx
0x44201f:	pop	rbx
0x442020:	pop	rbp
0x442021:	ret	
0x442022:	nop	word ptr cs:[rax + rax]
0x44202c:	nop	dword ptr [rax]
0x442030:	endbr64	
0x442034:	mov	r9, qword ptr [rdi + 8]
0x442038:	cmp	r9, rsi
0x44203b:	jb	0x442050
0x44203d:	jbe	0x44204a
0x44203f:	mov	rax, qword ptr [rdi]
0x442042:	mov	qword ptr [rdi + 8], rsi
0x442046:	mov	byte ptr [rax + rsi], 0
0x44204a:	ret	
0x44204b:	nop	dword ptr [rax + rax]
0x442050:	mov	rcx, rsi
0x442053:	movsx	r8d, dl
0x442057:	mov	rsi, r9
0x44205a:	xor	edx, edx
0x44205c:	sub	rcx, r9
0x44205f:	jmp	0x441d70
0x442064:	nop	word ptr cs:[rax + rax]
0x44206e:	nop	
0x442070:	endbr64	
0x442074:	xor	edx, edx
0x442076:	jmp	0x442030
0x44207b:	nop	dword ptr [rax + rax]
0x442080:	endbr64	
0x442084:	movabs	rax, 0x3fffffffffffffff
0x44208e:	push	r15
0x442090:	push	r14
0x442092:	push	r13
0x442094:	mov	r13, rdx
0x442097:	push	r12
0x442099:	add	rax, r13
0x44209c:	push	rbp
0x44209d:	push	rbx
0x44209e:	sub	rsp, 0x18
0x4420a2:	mov	rdx, qword ptr [rdi + 8]
0x4420a6:	sub	rax, rdx
0x4420a9:	cmp	r8, rax
0x4420ac:	ja	0x44233f
0x4420b2:	mov	r15, r8
0x4420b5:	mov	rax, qword ptr [rdi]
0x4420b8:	mov	r14, rcx
0x4420bb:	lea	rcx, [rdi + 0x10]
0x4420bf:	sub	r15, r13
0x4420c2:	mov	r12, rdi
0x4420c5:	lea	rbx, [rdx + r15]
0x4420c9:	cmp	rax, rcx
0x4420cc:	je	0x4421d0
0x4420d2:	mov	rcx, qword ptr [rdi + 0x10]
0x4420d6:	cmp	rcx, rbx
0x4420d9:	jb	0x4421a0
0x4420df:	lea	r9, [rax + rsi]
0x4420e3:	mov	r10, rdx
0x4420e6:	add	rsi, r13
0x4420e9:	cmp	r13, r8
0x4420ec:	setne	bpl
0x4420f0:	sub	r10, rsi
0x4420f3:	setne	cl
0x4420f6:	and	ebp, ecx
0x4420f8:	cmp	rax, r14
0x4420fb:	jbe	0x442158
0x4420fd:	test	bpl, bpl
0x442100:	je	0x442130
0x442102:	lea	rsi, [r9 + r13]
0x442106:	lea	rdi, [r9 + r8]
0x44210a:	cmp	r10, 1
0x44210e:	je	0x4421c0
0x442114:	mov	rdx, r10
0x442117:	mov	qword ptr [rsp + 8], r8
0x44211c:	mov	qword ptr [rsp], r9
0x442120:	call	0x403d90
0x442125:	mov	r8, qword ptr [rsp + 8]
0x44212a:	mov	r9, qword ptr [rsp]
0x44212e:	nop	
0x442130:	test	r8, r8
0x442133:	jne	0x442180
0x442135:	mov	rax, qword ptr [r12]
0x442139:	mov	qword ptr [r12 + 8], rbx
0x44213e:	mov	byte ptr [rax + rbx], 0
0x442142:	add	rsp, 0x18
0x442146:	mov	rax, r12
0x442149:	pop	rbx
0x44214a:	pop	rbp
0x44214b:	pop	r12
0x44214d:	pop	r13
0x44214f:	pop	r14
0x442151:	pop	r15
0x442153:	ret	
0x442154:	nop	dword ptr [rax]
0x442158:	add	rdx, rax
0x44215b:	cmp	r14, rdx
0x44215e:	ja	0x4420fd
0x442160:	lea	rdx, [r8 - 1]
0x442164:	cmp	r13, rdx
0x442167:	jbe	0x4421e7
0x442169:	cmp	r8, 1
0x44216d:	je	0x4421e0
0x44216f:	test	r8, r8
0x442172:	jne	0x442298
0x442178:	test	bpl, bpl
0x44217b:	jne	0x4421ec
0x44217d:	jmp	0x442139
0x44217f:	nop	
0x442180:	cmp	r8, 1
0x442184:	je	0x4421b0
0x442186:	mov	rdx, r8
0x442189:	mov	rsi, r14
0x44218c:	mov	rdi, r9
0x44218f:	call	0x403c60
0x442194:	jmp	0x442135
0x442196:	nop	word ptr cs:[rax + rax]
0x4421a0:	mov	rcx, r14
0x4421a3:	mov	rdx, r13
0x4421a6:	mov	rdi, r12
0x4421a9:	call	0x441160
0x4421ae:	jmp	0x442135
0x4421b0:	movzx	eax, byte ptr [r14]
0x4421b4:	mov	byte ptr [r9], al
0x4421b7:	mov	rax, qword ptr [r12]
0x4421bb:	jmp	0x442139
0x4421c0:	movzx	eax, byte ptr [rsi]
0x4421c3:	mov	byte ptr [rdi], al
0x4421c5:	jmp	0x442130
0x4421ca:	nop	word ptr [rax + rax]
0x4421d0:	mov	ecx, 0xf
0x4421d5:	jmp	0x4420d6
0x4421da:	nop	word ptr [rax + rax]
0x4421e0:	movzx	eax, byte ptr [r14]
0x4421e4:	mov	byte ptr [r9], al
0x4421e7:	test	bpl, bpl
0x4421ea:	je	0x442218
0x4421ec:	lea	rsi, [r9 + r13]
0x4421f0:	lea	rdi, [r9 + r8]
0x4421f4:	cmp	r10, 1
0x4421f8:	je	0x4422c0
0x4421fe:	mov	rdx, r10
0x442201:	mov	qword ptr [rsp + 8], r8
0x442206:	mov	qword ptr [rsp], r9
0x44220a:	call	0x403d90
0x44220f:	mov	r8, qword ptr [rsp + 8]
0x442214:	mov	r9, qword ptr [rsp]
0x442218:	cmp	r13, r8
0x44221b:	jae	0x442135
0x442221:	add	r13, r9
0x442224:	lea	rax, [r14 + r8]
0x442228:	cmp	r13, rax
0x44222b:	jae	0x442268
0x44222d:	cmp	r13, r14
0x442230:	ja	0x4422d0
0x442236:	lea	rsi, [r14 + r15]
0x44223a:	cmp	r8, 1
0x44223e:	je	0x442330
0x442244:	test	r8, r8
0x442247:	je	0x442135
0x44224d:	mov	rdx, r8
0x442250:	mov	rdi, r9
0x442253:	call	0x403c60
0x442258:	mov	rax, qword ptr [r12]
0x44225c:	jmp	0x442139
0x442261:	nop	dword ptr [rax]
0x442268:	cmp	r8, 1
0x44226c:	je	0x4421b0
0x442272:	test	r8, r8
0x442275:	je	0x442135
0x44227b:	mov	rdx, r8
0x44227e:	mov	rsi, r14
0x442281:	mov	rdi, r9
0x442284:	call	0x403d90
0x442289:	mov	rax, qword ptr [r12]
0x44228d:	jmp	0x442139
0x442292:	nop	word ptr [rax + rax]
0x442298:	mov	rdx, r8
0x44229b:	mov	rdi, r9
0x44229e:	mov	rsi, r14
0x4422a1:	mov	qword ptr [rsp + 8], r10
0x4422a6:	mov	qword ptr [rsp], r8
0x4422aa:	call	0x403d90
0x4422af:	mov	r10, qword ptr [rsp + 8]
0x4422b4:	mov	r8, qword ptr [rsp]
0x4422b8:	mov	r9, rax
0x4422bb:	jmp	0x4421e7
0x4422c0:	movzx	eax, byte ptr [rsi]
0x4422c3:	mov	byte ptr [rdi], al
0x4422c5:	jmp	0x442218
0x4422ca:	nop	word ptr [rax + rax]
0x4422d0:	sub	r13, r14
0x4422d3:	cmp	r13, 1
0x4422d7:	je	0x442319
0x4422d9:	test	r13, r13
0x4422dc:	je	0x4422f7
0x4422de:	mov	rdi, r9
0x4422e1:	mov	rdx, r13
0x4422e4:	mov	rsi, r14
0x4422e7:	mov	qword ptr [rsp], r8
0x4422eb:	call	0x403d90
0x4422f0:	mov	r8, qword ptr [rsp]
0x4422f4:	mov	r9, rax
0x4422f7:	mov	rdx, r8
0x4422fa:	lea	rsi, [r9 + r8]
0x4422fe:	lea	rdi, [r9 + r13]
0x442302:	sub	rdx, r13
0x442305:	cmp	rdx, 1
0x442309:	je	0x442322
0x44230b:	test	rdx, rdx
0x44230e:	je	0x442135
0x442314:	jmp	0x44218f
0x442319:	movzx	eax, byte ptr [r14]
0x44231d:	mov	byte ptr [r9], al
0x442320:	jmp	0x4422f7
0x442322:	movzx	eax, byte ptr [rsi]
0x442325:	mov	byte ptr [rdi], al
0x442327:	mov	rax, qword ptr [r12]
0x44232b:	jmp	0x442139
0x442330:	movzx	eax, byte ptr [rsi]
0x442333:	mov	byte ptr [r9], al
0x442336:	mov	rax, qword ptr [r12]
0x44233a:	jmp	0x442139
0x44233f:	lea	rdi, [rip + 0x8a34a]
0x442346:	call	0x42c9f3
0x44234b:	nop	dword ptr [rax + rax]
0x442350:	endbr64	
0x442354:	mov	r9, qword ptr [rsi + 8]
0x442358:	mov	r8, r9
0x44235b:	sub	r8, rdx
0x44235e:	cmp	r8, rcx
0x442361:	cmova	r8, rcx
0x442365:	mov	rcx, qword ptr [rsi]
0x442368:	cmp	rdx, r9
0x44236b:	ja	0x44237b
0x44236d:	add	rcx, rdx
0x442370:	mov	rdx, qword ptr [rdi + 8]
0x442374:	xor	esi, esi
0x442376:	jmp	0x442080
0x44237b:	push	rax
0x44237c:	mov	rcx, r9
0x44237f:	lea	rsi, [rip + 0x8a323]
0x442386:	xor	eax, eax
0x442388:	lea	rdi, [rip + 0x8a229]
0x44238f:	call	0x440770
0x442394:	nop	word ptr cs:[rax + rax]
0x44239e:	nop	
0x4423a0:	endbr64	
0x4423a4:	mov	r8, rdx
0x4423a7:	mov	rdx, qword ptr [rdi + 8]
0x4423ab:	mov	rcx, rsi
0x4423ae:	xor	esi, esi
0x4423b0:	jmp	0x442080
0x4423b5:	nop	word ptr cs:[rax + rax]
0x4423bf:	nop	
0x4423c0:	endbr64	
0x4423c4:	mov	r8, rdx
0x4423c7:	mov	rdx, qword ptr [rdi + 8]
0x4423cb:	mov	rcx, rsi
0x4423ce:	xor	esi, esi
0x4423d0:	jmp	0x442080
0x4423d5:	nop	word ptr cs:[rax + rax]
0x4423df:	nop	
0x4423e0:	endbr64	
0x4423e4:	push	r12
0x4423e6:	mov	r12, rsi
0x4423e9:	push	rbp
0x4423ea:	mov	rbp, rdi
0x4423ed:	mov	rdi, rsi
0x4423f0:	sub	rsp, 8
0x4423f4:	call	0x4039e0
0x4423f9:	mov	rdx, qword ptr [rbp + 8]
0x4423fd:	add	rsp, 8
0x442401:	mov	rcx, r12
0x442404:	mov	rdi, rbp
0x442407:	mov	r8, rax
0x44240a:	pop	rbp
0x44240b:	xor	esi, esi
0x44240d:	pop	r12
0x44240f:	jmp	0x442080
0x442414:	nop	word ptr cs:[rax + rax]
0x44241e:	nop	
0x442420:	endbr64	
0x442424:	mov	r9, qword ptr [rdi + 8]
0x442428:	mov	r10, rdx
0x44242b:	mov	rdx, r9
0x44242e:	sub	rdx, rsi
0x442431:	cmp	rdx, r10
0x442434:	cmova	rdx, r10
0x442438:	cmp	rsi, r9
0x44243b:	ja	0x442442
0x44243d:	jmp	0x442080
0x442442:	push	rax
0x442443:	mov	rdx, rsi
0x442446:	mov	rcx, r9
0x442449:	lea	rsi, [rip + 0x8a22a]
0x442450:	lea	rdi, [rip + 0x8a161]
0x442457:	xor	eax, eax
0x442459:	call	0x440770
0x44245e:	nop	
0x442460:	endbr64	
0x442464:	push	r12
0x442466:	mov	r8, rdx
0x442469:	mov	rdx, qword ptr [rdi + 8]
0x44246d:	mov	r12, rdi
0x442470:	mov	rcx, rsi
0x442473:	xor	esi, esi
0x442475:	call	0x442080
0x44247a:	mov	rax, r12
0x44247d:	pop	r12
0x44247f:	ret	
0x442480:	endbr64	
0x442484:	push	r12
0x442486:	mov	r12, rsi
0x442489:	push	rbp
0x44248a:	mov	rbp, rdi
0x44248d:	mov	rdi, rsi
0x442490:	sub	rsp, 8
0x442494:	call	0x4039e0
0x442499:	mov	rdx, qword ptr [rbp + 8]
0x44249d:	add	rsp, 8
0x4424a1:	mov	rcx, r12
0x4424a4:	mov	rdi, rbp
0x4424a7:	mov	r8, rax
0x4424aa:	pop	rbp
0x4424ab:	xor	esi, esi
0x4424ad:	pop	r12
0x4424af:	jmp	0x442080
0x4424b4:	nop	word ptr cs:[rax + rax]
0x4424be:	nop	
0x4424c0:	endbr64	
0x4424c4:	mov	r8, rcx
0x4424c7:	mov	rcx, qword ptr [rdi + 8]
0x4424cb:	cmp	rsi, rcx
0x4424ce:	ja	0x4424da
0x4424d0:	mov	rcx, rdx
0x4424d3:	xor	edx, edx
0x4424d5:	jmp	0x442080
0x4424da:	push	rax
0x4424db:	mov	rdx, rsi
0x4424de:	lea	rdi, [rip + 0x8a0d3]
0x4424e5:	xor	eax, eax
0x4424e7:	lea	rsi, [rip + 0x8a18c]
0x4424ee:	call	0x440770
0x4424f3:	nop	word ptr cs:[rax + rax]
0x4424fd:	nop	dword ptr [rax]
0x442500:	endbr64	
0x442504:	mov	rcx, qword ptr [rdi + 8]
0x442508:	mov	r8, qword ptr [rdx + 8]
0x44250c:	mov	r9, qword ptr [rdx]
0x44250f:	cmp	rsi, rcx
0x442512:	ja	0x44251e
0x442514:	mov	rcx, r9
0x442517:	xor	edx, edx
0x442519:	jmp	0x442080
0x44251e:	push	rax
0x44251f:	mov	rdx, rsi
0x442522:	lea	rdi, [rip + 0x8a08f]
0x442529:	xor	eax, eax
0x44252b:	lea	rsi, [rip + 0x8a148]
0x442532:	call	0x440770
0x442537:	nop	word ptr [rax + rax]
0x442540:	endbr64	
0x442544:	mov	r8, qword ptr [rcx + 8]
0x442548:	mov	r10, qword ptr [rcx]
0x44254b:	mov	r9, rdx
0x44254e:	mov	rcx, qword ptr [rdi + 8]
0x442552:	mov	rdx, rcx
0x442555:	sub	rdx, rsi
0x442558:	cmp	rdx, r9
0x44255b:	cmova	rdx, r9
0x44255f:	cmp	rsi, rcx
0x442562:	ja	0x44256c
0x442564:	mov	rcx, r10
0x442567:	jmp	0x442080
0x44256c:	push	rax
0x44256d:	mov	rdx, rsi
0x442570:	lea	rdi, [rip + 0x8a041]
0x442577:	xor	eax, eax
0x442579:	lea	rsi, [rip + 0x8a0fa]
0x442580:	call	0x440770
0x442585:	nop	word ptr cs:[rax + rax]
0x44258f:	nop	
0x442590:	endbr64	
0x442594:	push	r13
0x442596:	mov	r13, rdx
0x442599:	push	r12
0x44259b:	mov	r12, rdi
0x44259e:	mov	rdi, rdx
0x4425a1:	push	rbp
0x4425a2:	mov	rbp, rsi
0x4425a5:	call	0x4039e0
0x4425aa:	mov	rcx, qword ptr [r12 + 8]
0x4425af:	cmp	rbp, rcx
0x4425b2:	ja	0x4425cc
0x4425b4:	mov	rcx, r13
0x4425b7:	mov	rsi, rbp
0x4425ba:	mov	rdi, r12
0x4425bd:	pop	rbp
0x4425be:	mov	r8, rax
0x4425c1:	pop	r12
0x4425c3:	xor	edx, edx
0x4425c5:	pop	r13
0x4425c7:	jmp	0x442080
0x4425cc:	mov	rdx, rbp
0x4425cf:	lea	rsi, [rip + 0x8a0a4]
0x4425d6:	lea	rdi, [rip + 0x89fdb]
0x4425dd:	xor	eax, eax
0x4425df:	call	0x440770
0x4425e4:	nop	word ptr cs:[rax + rax]
0x4425ee:	nop	
0x4425f0:	endbr64	
0x4425f4:	push	r13
0x4425f6:	mov	r13, rcx
0x4425f9:	push	r12
0x4425fb:	mov	r12, rdi
0x4425fe:	mov	rdi, rcx
0x442601:	push	rbp
0x442602:	mov	rbp, rsi
0x442605:	push	rbx
0x442606:	mov	rbx, rdx
0x442609:	sub	rsp, 8
0x44260d:	call	0x4039e0
0x442612:	mov	rcx, qword ptr [r12 + 8]
0x442617:	mov	rdx, rcx
0x44261a:	sub	rdx, rbp
0x44261d:	cmp	rdx, rbx
0x442620:	cmova	rdx, rbx
0x442624:	cmp	rbp, rcx
0x442627:	ja	0x442644
0x442629:	add	rsp, 8
0x44262d:	mov	rcx, r13
0x442630:	mov	rsi, rbp
0x442633:	pop	rbx
0x442634:	mov	rdi, r12
0x442637:	pop	rbp
0x442638:	mov	r8, rax
0x44263b:	pop	r12
0x44263d:	pop	r13
0x44263f:	jmp	0x442080
0x442644:	mov	rdx, rbp
0x442647:	lea	rsi, [rip + 0x8a02c]
0x44264e:	lea	rdi, [rip + 0x89f63]
0x442655:	xor	eax, eax
0x442657:	call	0x440770
0x44265c:	nop	dword ptr [rax]
0x442660:	endbr64	
0x442664:	mov	r10, qword ptr [rdi + 8]
0x442668:	mov	r9, rsi
0x44266b:	sub	r9, qword ptr [rdi]
0x44266e:	sub	rdx, rsi
0x442671:	mov	rax, r10
0x442674:	sub	rax, r9
0x442677:	cmp	rdx, rax
0x44267a:	cmova	rdx, rax
0x44267e:	cmp	r9, r10
0x442681:	ja	0x44268b
0x442683:	mov	rsi, r9
0x442686:	jmp	0x442080
0x44268b:	push	rax
0x44268c:	mov	rcx, r10
0x44268f:	mov	rdx, r9
0x442692:	lea	rsi, [rip + 0x89fe1]
0x442699:	lea	rdi, [rip + 0x89f18]
0x4426a0:	xor	eax, eax
0x4426a2:	call	0x440770
0x4426a7:	nop	word ptr [rax + rax]
0x4426b0:	endbr64	
0x4426b4:	mov	r10, qword ptr [rdi + 8]
0x4426b8:	mov	r9, rsi
0x4426bb:	sub	r9, qword ptr [rdi]
0x4426be:	sub	rdx, rsi
0x4426c1:	sub	r8, rcx
0x4426c4:	mov	rax, r10
0x4426c7:	sub	rax, r9
0x4426ca:	cmp	rdx, rax
0x4426cd:	cmova	rdx, rax
0x4426d1:	cmp	r9, r10
0x4426d4:	ja	0x4426de
0x4426d6:	mov	rsi, r9
0x4426d9:	jmp	0x442080
0x4426de:	push	rax
0x4426df:	mov	rcx, r10
0x4426e2:	mov	rdx, r9
0x4426e5:	lea	rsi, [rip + 0x89f8e]
0x4426ec:	lea	rdi, [rip + 0x89ec5]
0x4426f3:	xor	eax, eax
0x4426f5:	call	0x440770
0x4426fa:	nop	word ptr [rax + rax]
0x442700:	endbr64	
0x442704:	mov	r10, qword ptr [rdi + 8]
0x442708:	mov	r9, rsi
0x44270b:	sub	r9, qword ptr [rdi]
0x44270e:	sub	rdx, rsi
0x442711:	sub	r8, rcx
0x442714:	mov	rax, r10
0x442717:	sub	rax, r9
0x44271a:	cmp	rdx, rax
0x44271d:	cmova	rdx, rax
0x442721:	cmp	r9, r10
0x442724:	ja	0x44272e
0x442726:	mov	rsi, r9
0x442729:	jmp	0x442080
0x44272e:	push	rax
0x44272f:	mov	rcx, r10
0x442732:	mov	rdx, r9
0x442735:	lea	rsi, [rip + 0x89f3e]
0x44273c:	lea	rdi, [rip + 0x89e75]
0x442743:	xor	eax, eax
0x442745:	call	0x440770
0x44274a:	nop	word ptr [rax + rax]
0x442750:	endbr64	
0x442754:	mov	r10, qword ptr [rdi + 8]
0x442758:	mov	r9, rsi
0x44275b:	sub	r9, qword ptr [rdi]
0x44275e:	sub	rdx, rsi
0x442761:	mov	rax, r10
0x442764:	sub	rax, r9
0x442767:	cmp	rdx, rax
0x44276a:	cmova	rdx, rax
0x44276e:	cmp	r9, r10
0x442771:	ja	0x44277b
0x442773:	mov	rsi, r9
0x442776:	jmp	0x442080
0x44277b:	push	rax
0x44277c:	mov	rcx, r10
0x44277f:	mov	rdx, r9
0x442782:	lea	rsi, [rip + 0x89ef1]
0x442789:	lea	rdi, [rip + 0x89e28]
0x442790:	xor	eax, eax
0x442792:	call	0x440770
0x442797:	nop	word ptr [rax + rax]
0x4427a0:	endbr64	
0x4427a4:	mov	r8, qword ptr [rcx + 8]
0x4427a8:	mov	r10, qword ptr [rcx]
0x4427ab:	mov	r9, rsi
0x4427ae:	sub	rdx, rsi
0x4427b1:	mov	rcx, qword ptr [rdi + 8]
0x4427b5:	sub	r9, qword ptr [rdi]
0x4427b8:	mov	rax, rcx
0x4427bb:	sub	rax, r9
0x4427be:	cmp	rdx, rax
0x4427c1:	cmova	rdx, rax
0x4427c5:	cmp	r9, rcx
0x4427c8:	ja	0x4427d5
0x4427ca:	mov	rcx, r10
0x4427cd:	mov	rsi, r9
0x4427d0:	jmp	0x442080
0x4427d5:	push	rax
0x4427d6:	mov	rdx, r9
0x4427d9:	lea	rsi, [rip + 0x89e9a]
0x4427e0:	xor	eax, eax
0x4427e2:	lea	rdi, [rip + 0x89dcf]
0x4427e9:	call	0x440770
0x4427ee:	nop	
0x4427f0:	endbr64	
0x4427f4:	push	r13
0x4427f6:	mov	r13, rcx
0x4427f9:	push	r12
0x4427fb:	mov	r12, rsi
0x4427fe:	push	rbp
0x4427ff:	mov	rbp, rdi
0x442802:	mov	rdi, rcx
0x442805:	push	rbx
0x442806:	mov	rbx, rdx
0x442809:	sub	rbx, r12
0x44280c:	sub	rsp, 8
0x442810:	call	0x4039e0
0x442815:	mov	rcx, qword ptr [rbp + 8]
0x442819:	mov	rsi, r12
0x44281c:	sub	rsi, qword ptr [rbp]
0x442820:	mov	r8, rax
0x442823:	mov	rdx, rbx
0x442826:	mov	rax, rcx
0x442829:	sub	rax, rsi
0x44282c:	cmp	rbx, rax
0x44282f:	cmova	rdx, rax
0x442833:	cmp	rsi, rcx
0x442836:	ja	0x44284d
0x442838:	add	rsp, 8
0x44283c:	mov	rcx, r13
0x44283f:	mov	rdi, rbp
0x442842:	pop	rbx
0x442843:	pop	rbp
0x442844:	pop	r12
0x442846:	pop	r13
0x442848:	jmp	0x442080
0x44284d:	mov	rdx, rsi
0x442850:	lea	rdi, [rip + 0x89d61]
0x442857:	xor	eax, eax
0x442859:	lea	rsi, [rip + 0x89e1a]
0x442860:	call	0x440770
0x442865:	nop	word ptr cs:[rax + rax]
0x44286f:	nop	
0x442870:	endbr64	
0x442874:	mov	r10, qword ptr [rdi + 8]
0x442878:	mov	r9, rsi
0x44287b:	sub	r9, qword ptr [rdi]
0x44287e:	sub	rdx, rsi
0x442881:	sub	r8, rcx
0x442884:	mov	rax, r10
0x442887:	sub	rax, r9
0x44288a:	cmp	rdx, rax
0x44288d:	cmova	rdx, rax
0x442891:	cmp	r9, r10
0x442894:	ja	0x44289e
0x442896:	mov	rsi, r9
0x442899:	jmp	0x442080
0x44289e:	push	rax
0x44289f:	mov	rcx, r10
0x4428a2:	mov	rdx, r9
0x4428a5:	lea	rsi, [rip + 0x89dce]
0x4428ac:	lea	rdi, [rip + 0x89d05]
0x4428b3:	xor	eax, eax
0x4428b5:	call	0x440770
0x4428ba:	nop	word ptr [rax + rax]
0x4428c0:	endbr64	
0x4428c4:	mov	r10, qword ptr [rdi + 8]
0x4428c8:	mov	r9, rsi
0x4428cb:	sub	r9, qword ptr [rdi]
0x4428ce:	sub	rdx, rsi
0x4428d1:	sub	r8, rcx
0x4428d4:	mov	rax, r10
0x4428d7:	sub	rax, r9
0x4428da:	cmp	rdx, rax
0x4428dd:	cmova	rdx, rax
0x4428e1:	cmp	r9, r10
0x4428e4:	ja	0x4428ee
0x4428e6:	mov	rsi, r9
0x4428e9:	jmp	0x442080
0x4428ee:	push	rax
0x4428ef:	mov	rcx, r10
0x4428f2:	mov	rdx, r9
0x4428f5:	lea	rsi, [rip + 0x89d7e]
0x4428fc:	lea	rdi, [rip + 0x89cb5]
0x442903:	xor	eax, eax
0x442905:	call	0x440770
0x44290a:	nop	word ptr [rax + rax]
0x442910:	endbr64	
0x442914:	mov	r8, rcx
0x442917:	mov	rcx, qword ptr [rdi + 8]
0x44291b:	sub	rsi, qword ptr [rdi]
0x44291e:	cmp	rsi, rcx
0x442921:	ja	0x44292d
0x442923:	mov	rcx, rdx
0x442926:	xor	edx, edx
0x442928:	jmp	0x442080
0x44292d:	push	rax
0x44292e:	mov	rdx, rsi
0x442931:	lea	rdi, [rip + 0x89c80]
0x442938:	xor	eax, eax
0x44293a:	lea	rsi, [rip + 0x89d39]
0x442941:	call	0x440770
0x442946:	nop	word ptr cs:[rax + rax]
0x442950:	endbr64	
0x442954:	push	r12
0x442956:	mov	r8, rcx
0x442959:	push	rbx
0x44295a:	sub	rsp, 8
0x44295e:	mov	rcx, qword ptr [rdi + 8]
0x442962:	sub	rsi, qword ptr [rdi]
0x442965:	mov	r12, rsi
0x442968:	cmp	rsi, rcx
0x44296b:	ja	0x442988
0x44296d:	mov	rbx, rdi
0x442970:	mov	rcx, rdx
0x442973:	xor	edx, edx
0x442975:	call	0x442080
0x44297a:	mov	rax, qword ptr [rbx]
0x44297d:	add	rsp, 8
0x442981:	pop	rbx
0x442982:	add	rax, r12
0x442985:	pop	r12
0x442987:	ret	
0x442988:	mov	rdx, rsi
0x44298b:	lea	rdi, [rip + 0x89c26]
0x442992:	xor	eax, eax
0x442994:	lea	rsi, [rip + 0x89cdf]
0x44299b:	call	0x440770
0x4429a0:	endbr64	
0x4429a4:	sub	rsp, 8
0x4429a8:	mov	r10, qword ptr [rcx + 8]
0x4429ac:	mov	rax, rdx
0x4429af:	mov	rdx, r8
0x4429b2:	mov	rcx, qword ptr [rcx]
0x4429b5:	mov	r8, r10
0x4429b8:	sub	r8, rdx
0x4429bb:	cmp	r8, r9
0x4429be:	cmova	r8, r9
0x4429c2:	cmp	rdx, r10
0x4429c5:	ja	0x4429e9
0x4429c7:	mov	r9, qword ptr [rdi + 8]
0x4429cb:	add	rcx, rdx
0x4429ce:	mov	rdx, r9
0x4429d1:	sub	rdx, rsi
0x4429d4:	cmp	rdx, rax
0x4429d7:	cmova	rdx, rax
0x4429db:	cmp	rsi, r9
0x4429de:	ja	0x442a01
0x4429e0:	add	rsp, 8
0x4429e4:	jmp	0x442080
0x4429e9:	mov	rcx, r10
0x4429ec:	lea	rsi, [rip + 0x89c87]
0x4429f3:	lea	rdi, [rip + 0x89bbe]
0x4429fa:	xor	eax, eax
0x4429fc:	call	0x440770
0x442a01:	mov	rdx, rsi
0x442a04:	mov	rcx, r9
0x442a07:	lea	rsi, [rip + 0x89c6c]
0x442a0e:	xor	eax, eax
0x442a10:	lea	rdi, [rip + 0x89ba1]
0x442a17:	call	0x440770
0x442a1c:	nop	dword ptr [rax]
0x442a20:	endbr64	
0x442a24:	sub	rsp, 8
0x442a28:	mov	r10, qword ptr [rdx + 8]
0x442a2c:	mov	r9, rcx
0x442a2f:	mov	rax, r10
0x442a32:	sub	rax, rcx
0x442a35:	mov	rcx, qword ptr [rdx]
0x442a38:	cmp	rax, r8
0x442a3b:	cmovbe	r8, rax
0x442a3f:	cmp	r9, r10
0x442a42:	ja	0x442a5b
0x442a44:	add	rcx, r9
0x442a47:	mov	r9, qword ptr [rdi + 8]
0x442a4b:	cmp	rsi, r9
0x442a4e:	ja	0x442a76
0x442a50:	xor	edx, edx
0x442a52:	add	rsp, 8
0x442a56:	jmp	0x442080
0x442a5b:	mov	rcx, r10
0x442a5e:	mov	rdx, r9
0x442a61:	lea	rsi, [rip + 0x89bfd]
0x442a68:	xor	eax, eax
0x442a6a:	lea	rdi, [rip + 0x89b47]
0x442a71:	call	0x440770
0x442a76:	mov	rdx, rsi
0x442a79:	mov	rcx, r9
0x442a7c:	lea	rsi, [rip + 0x89bf7]
0x442a83:	xor	eax, eax
0x442a85:	lea	rdi, [rip + 0x89b2c]
0x442a8c:	call	0x440770
0x442a91:	nop	word ptr cs:[rax + rax]
0x442a9b:	nop	dword ptr [rax + rax]
0x442aa0:	endbr64	
0x442aa4:	push	r12
0x442aa6:	mov	r12, rdi
0x442aa9:	push	rbx
0x442aaa:	lea	rax, [r12 + 0x10]
0x442aaf:	sub	rsp, 8
0x442ab3:	mov	r9, qword ptr [rdi + 8]
0x442ab7:	mov	rdi, qword ptr [rdi]
0x442aba:	lea	rbx, [r9 + rdx]
0x442abe:	cmp	rdi, rax
0x442ac1:	je	0x442b20
0x442ac3:	mov	rax, qword ptr [r12 + 0x10]
0x442ac8:	cmp	rbx, rax
0x442acb:	ja	0x442b00
0x442acd:	test	rdx, rdx
0x442ad0:	je	0x442ae4
0x442ad2:	add	rdi, r9
0x442ad5:	cmp	rdx, 1
0x442ad9:	je	0x442b30
0x442adb:	call	0x403c60
0x442ae0:	mov	rdi, qword ptr [r12]
0x442ae4:	mov	qword ptr [r12 + 8], rbx
0x442ae9:	mov	rax, r12
0x442aec:	mov	byte ptr [rdi + rbx], 0
0x442af0:	add	rsp, 8
0x442af4:	pop	rbx
0x442af5:	pop	r12
0x442af7:	ret	
0x442af8:	nop	dword ptr [rax + rax]
0x442b00:	mov	r8, rdx
0x442b03:	mov	rcx, rsi
0x442b06:	mov	rdi, r12
0x442b09:	xor	edx, edx
0x442b0b:	mov	rsi, r9
0x442b0e:	call	0x441160
0x442b13:	mov	rdi, qword ptr [r12]
0x442b17:	jmp	0x442ae4
0x442b19:	nop	dword ptr [rax]
0x442b20:	mov	eax, 0xf
0x442b25:	jmp	0x442ac8
0x442b27:	nop	word ptr [rax + rax]
0x442b30:	movzx	eax, byte ptr [rsi]
0x442b33:	mov	byte ptr [rdi], al
0x442b35:	mov	rdi, qword ptr [r12]
0x442b39:	jmp	0x442ae4
0x442b3b:	nop	dword ptr [rax + rax]
0x442b40:	endbr64	
0x442b44:	mov	rdx, qword ptr [rsi + 8]
0x442b48:	mov	rsi, qword ptr [rsi]
0x442b4b:	jmp	0x442aa0
0x442b50:	endbr64	
0x442b54:	mov	rdx, qword ptr [rsi + 8]
0x442b58:	mov	rsi, qword ptr [rsi]
0x442b5b:	jmp	0x442aa0
0x442b60:	endbr64	
0x442b64:	mov	r8, rcx
0x442b67:	mov	rcx, qword ptr [rsi + 8]
0x442b6b:	mov	rsi, qword ptr [rsi]
0x442b6e:	mov	rax, rcx
0x442b71:	sub	rax, rdx
0x442b74:	cmp	rax, r8
0x442b77:	cmovbe	r8, rax
0x442b7b:	cmp	rdx, rcx
0x442b7e:	ja	0x442b8b
0x442b80:	add	rsi, rdx
0x442b83:	mov	rdx, r8
0x442b86:	jmp	0x442aa0
0x442b8b:	push	rax
0x442b8c:	lea	rsi, [rip + 0x89b2b]
0x442b93:	lea	rdi, [rip + 0x89a1e]
0x442b9a:	xor	eax, eax
0x442b9c:	call	0x440770
0x442ba1:	nop	word ptr cs:[rax + rax]
0x442bab:	nop	dword ptr [rax + rax]
0x442bb0:	endbr64	
0x442bb4:	movabs	rax, 0x3fffffffffffffff
0x442bbe:	sub	rax, qword ptr [rdi + 8]
0x442bc2:	cmp	rdx, rax
0x442bc5:	ja	0x442bcc
0x442bc7:	jmp	0x442aa0
0x442bcc:	push	rax
0x442bcd:	lea	rdi, [rip + 0x89aea]
0x442bd4:	call	0x42c9f3
0x442bd9:	nop	dword ptr [rax]
0x442be0:	endbr64	
0x442be4:	push	r12
0x442be6:	mov	r12, rsi
0x442be9:	push	rbp
0x442bea:	mov	rbp, rdi
0x442bed:	mov	rdi, rsi
0x442bf0:	sub	rsp, 8
0x442bf4:	call	0x4039e0
0x442bf9:	mov	rdx, rax
0x442bfc:	movabs	rax, 0x3fffffffffffffff
0x442c06:	sub	rax, qword ptr [rbp + 8]
0x442c0a:	cmp	rax, rdx
0x442c0d:	jb	0x442c21
0x442c0f:	add	rsp, 8
0x442c13:	mov	rsi, r12
0x442c16:	mov	rdi, rbp
0x442c19:	pop	rbp
0x442c1a:	pop	r12
0x442c1c:	jmp	0x442aa0
0x442c21:	lea	rdi, [rip + 0x89a96]
0x442c28:	call	0x42c9f3
0x442c2d:	nop	dword ptr [rax]
0x442c30:	endbr64	
0x442c34:	push	r12
0x442c36:	mov	r12, rsi
0x442c39:	push	rbp
0x442c3a:	mov	rbp, rdi
0x442c3d:	mov	rdi, rsi
0x442c40:	sub	rsp, 8
0x442c44:	call	0x4039e0
0x442c49:	mov	rdx, rax
0x442c4c:	movabs	rax, 0x3fffffffffffffff
0x442c56:	sub	rax, qword ptr [rbp + 8]
0x442c5a:	cmp	rdx, rax
0x442c5d:	ja	0x442c71
0x442c5f:	add	rsp, 8
0x442c63:	mov	rsi, r12
0x442c66:	mov	rdi, rbp
0x442c69:	pop	rbp
0x442c6a:	pop	r12
0x442c6c:	jmp	0x442aa0
0x442c71:	lea	rdi, [rip + 0x89a46]
0x442c78:	call	0x42c9f3
0x442c7d:	nop	dword ptr [rax]
0x442c80:	endbr64	
0x442c84:	movabs	rax, 0x3fffffffffffffff
0x442c8e:	sub	rax, qword ptr [rdi + 8]
0x442c92:	cmp	rdx, rax
0x442c95:	ja	0x442c9c
0x442c97:	jmp	0x442aa0
0x442c9c:	push	rax
0x442c9d:	lea	rdi, [rip + 0x89a1a]
0x442ca4:	call	0x42c9f3
0x442ca9:	nop	dword ptr [rax]
0x442cb0:	endbr64	
0x442cb4:	movabs	rax, 0x3fffffffffffffff
0x442cbe:	sub	rax, qword ptr [rdi + 8]
0x442cc2:	cmp	rdx, rax
0x442cc5:	ja	0x442ccc
0x442cc7:	jmp	0x442aa0
0x442ccc:	push	rax
0x442ccd:	lea	rdi, [rip + 0x899ea]
0x442cd4:	call	0x42c9f3
0x442cd9:	nop	dword ptr [rax]
0x442ce0:	endbr64	
0x442ce4:	mov	rax, rdi
0x442ce7:	push	r12
0x442ce9:	mov	rdi, rsi
0x442cec:	mov	rsi, rcx
0x442cef:	mov	r12, qword ptr [rax + 8]
0x442cf3:	cmp	rcx, r12
0x442cf6:	ja	0x442d2b
0x442cf8:	sub	r12, rcx
0x442cfb:	cmp	r12, rdx
0x442cfe:	cmova	r12, rdx
0x442d02:	test	r12, r12
0x442d05:	je	0x442d18
0x442d07:	add	rsi, qword ptr [rax]
0x442d0a:	cmp	r12, 1
0x442d0e:	je	0x442d20
0x442d10:	mov	rdx, r12
0x442d13:	call	0x403c60
0x442d18:	mov	rax, r12
0x442d1b:	pop	r12
0x442d1d:	ret	
0x442d1e:	nop	
0x442d20:	movzx	eax, byte ptr [rsi]
0x442d23:	mov	byte ptr [rdi], al
0x442d25:	mov	rax, r12
0x442d28:	pop	r12
0x442d2a:	ret	
0x442d2b:	mov	rdx, rsi
0x442d2e:	mov	rcx, r12
0x442d31:	lea	rsi, [rip + 0x8999b]
0x442d38:	xor	eax, eax
0x442d3a:	lea	rdi, [rip + 0x89877]
0x442d41:	call	0x440770
0x442d46:	nop	word ptr cs:[rax + rax]
0x442d50:	endbr64	
0x442d54:	cmp	rdi, rsi
0x442d57:	je	0x442dba
0x442d59:	mov	rax, qword ptr [rdi]
0x442d5c:	lea	rcx, [rdi + 0x10]
0x442d60:	mov	rdx, qword ptr [rsi]
0x442d63:	lea	r8, [rsi + 0x10]
0x442d67:	cmp	rcx, rax
0x442d6a:	je	0x442dc0
0x442d6c:	mov	r9, qword ptr [rdi + 0x10]
0x442d70:	cmp	r8, rdx
0x442d73:	je	0x442df0
0x442d75:	mov	qword ptr [rdi], rdx
0x442d78:	mov	qword ptr [rsi], rax
0x442d7b:	mov	rax, qword ptr [rsi + 0x10]
0x442d7f:	mov	qword ptr [rdi + 0x10], rax
0x442d83:	mov	qword ptr [rsi + 0x10], r9
0x442d87:	mov	rax, qword ptr [rsi + 8]
0x442d8b:	mov	rdx, qword ptr [rdi + 8]
0x442d8f:	mov	qword ptr [rdi + 8], rax
0x442d93:	mov	qword ptr [rsi + 8], rdx
0x442d97:	ret	
0x442d98:	nop	dword ptr [rax + rax]
0x442da0:	movups	xmmword ptr [rsi + 0x10], xmm0
0x442da4:	mov	rax, qword ptr [rdi + 8]
0x442da8:	mov	qword ptr [rsi + 8], rax
0x442dac:	mov	rax, qword ptr [rdi]
0x442daf:	mov	qword ptr [rdi + 8], 0
0x442db7:	mov	byte ptr [rax], 0
0x442dba:	ret	
0x442dbb:	nop	dword ptr [rax + rax]
0x442dc0:	cmp	r8, rdx
0x442dc3:	je	0x442e08
0x442dc5:	mov	rax, qword ptr [rsi + 0x10]
0x442dc9:	movdqu	xmm2, xmmword ptr [rdi + 0x10]
0x442dce:	movups	xmmword ptr [rsi + 0x10], xmm2
0x442dd2:	mov	qword ptr [rdi], rdx
0x442dd5:	mov	rdx, qword ptr [rdi + 8]
0x442dd9:	mov	qword ptr [rsi], r8
0x442ddc:	mov	qword ptr [rdi + 0x10], rax
0x442de0:	mov	rax, qword ptr [rsi + 8]
0x442de4:	mov	qword ptr [rdi + 8], rax
0x442de8:	mov	qword ptr [rsi + 8], rdx
0x442dec:	ret	
0x442ded:	nop	dword ptr [rax]
0x442df0:	movdqu	xmm3, xmmword ptr [rsi + 0x10]
0x442df5:	movups	xmmword ptr [rdi + 0x10], xmm3
0x442df9:	mov	qword ptr [rsi], rax
0x442dfc:	mov	qword ptr [rdi], rcx
0x442dff:	jmp	0x442d83
0x442e01:	nop	dword ptr [rax]
0x442e08:	cmp	qword ptr [rdi + 8], 0
0x442e0d:	mov	rax, qword ptr [rsi + 8]
0x442e11:	je	0x442e40
0x442e13:	movdqu	xmm0, xmmword ptr [rdi + 0x10]
0x442e18:	test	rax, rax
0x442e1b:	je	0x442da0
0x442e1d:	movdqu	xmm1, xmmword ptr [rsi + 0x10]
0x442e22:	movups	xmmword ptr [rsi + 0x10], xmm0
0x442e26:	mov	rdx, qword ptr [rdi + 8]
0x442e2a:	movups	xmmword ptr [rdi + 0x10], xmm1
0x442e2e:	mov	rax, qword ptr [rsi + 8]
0x442e32:	jmp	0x442d8f
0x442e37:	nop	word ptr [rax + rax]
0x442e40:	xor	edx, edx
0x442e42:	test	rax, rax
0x442e45:	je	0x442d8f
0x442e4b:	movdqu	xmm4, xmmword ptr [rsi + 0x10]
0x442e50:	movups	xmmword ptr [rdi + 0x10], xmm4
0x442e54:	mov	rax, qword ptr [rsi + 8]
0x442e58:	mov	qword ptr [rdi + 8], rax
0x442e5c:	mov	rax, qword ptr [rsi]
0x442e5f:	mov	qword ptr [rsi + 8], 0
0x442e67:	mov	byte ptr [rax], 0
0x442e6a:	ret	
0x442e6b:	nop	dword ptr [rax + rax]
0x442e70:	endbr64	
0x442e74:	mov	rax, qword ptr [rdi]
0x442e77:	ret	
0x442e78:	nop	dword ptr [rax + rax]
0x442e80:	endbr64	
0x442e84:	mov	rax, qword ptr [rdi]
0x442e87:	ret	
0x442e88:	nop	dword ptr [rax + rax]
0x442e90:	endbr64	
0x442e94:	mov	rax, rdi
0x442e97:	ret	
0x442e98:	nop	dword ptr [rax + rax]
0x442ea0:	endbr64	
0x442ea4:	mov	rax, qword ptr [rdi + 8]
0x442ea8:	test	rcx, rcx
0x442eab:	je	0x442f58
0x442eb1:	mov	r8, 0xffffffffffffffff
0x442eb8:	cmp	rax, rdx
0x442ebb:	jbe	0x442f66
0x442ec1:	push	r15
0x442ec3:	mov	r15, rcx
0x442ec6:	push	r14
0x442ec8:	push	r13
0x442eca:	push	r12
0x442ecc:	push	rbp
0x442ecd:	push	rbx
0x442ece:	sub	rsp, 0x18
0x442ed2:	mov	rcx, qword ptr [rdi]
0x442ed5:	lea	r13, [rcx + rax]
0x442ed9:	sub	rax, rdx
0x442edc:	mov	qword ptr [rsp + 8], rcx
0x442ee1:	lea	rdi, [rcx + rdx]
0x442ee5:	cmp	r15, rax
0x442ee8:	ja	0x442f41
0x442eea:	mov	ebp, 1
0x442eef:	sub	rbp, r15
0x442ef2:	add	rax, rbp
0x442ef5:	mov	rdx, rax
0x442ef8:	je	0x442f41
0x442efa:	movsx	r14d, byte ptr [rsi]
0x442efe:	mov	r12, rsi
0x442f01:	mov	esi, r14d
0x442f04:	call	0x403b40
0x442f09:	mov	rbx, rax
0x442f0c:	test	rax, rax
0x442f0f:	je	0x442f3a
0x442f11:	mov	rdx, r15
0x442f14:	mov	rsi, r12
0x442f17:	mov	rdi, rax
0x442f1a:	call	0x403b70
0x442f1f:	test	eax, eax
0x442f21:	je	0x442f70
0x442f23:	lea	rdi, [rbx + 1]
0x442f27:	mov	rax, r13
0x442f2a:	sub	rax, rdi
0x442f2d:	cmp	r15, rax
0x442f30:	ja	0x442f3a
0x442f32:	add	rax, rbp
0x442f35:	mov	rdx, rax
0x442f38:	jne	0x442f01
0x442f3a:	mov	r8, 0xffffffffffffffff
0x442f41:	add	rsp, 0x18
0x442f45:	mov	rax, r8
0x442f48:	pop	rbx
0x442f49:	pop	rbp
0x442f4a:	pop	r12
0x442f4c:	pop	r13
0x442f4e:	pop	r14
0x442f50:	pop	r15
0x442f52:	ret	
0x442f53:	nop	dword ptr [rax + rax]
0x442f58:	cmp	rax, rdx
0x442f5b:	mov	r8, 0xffffffffffffffff
0x442f62:	cmovae	r8, rdx
0x442f66:	mov	rax, r8
0x442f69:	ret	
0x442f6a:	nop	word ptr [rax + rax]
0x442f70:	sub	rbx, qword ptr [rsp + 8]
0x442f75:	mov	r8, rbx
0x442f78:	jmp	0x442f41
0x442f7a:	nop	word ptr [rax + rax]
0x442f80:	endbr64	
0x442f84:	mov	rcx, qword ptr [rsi + 8]
0x442f88:	mov	rsi, qword ptr [rsi]
0x442f8b:	jmp	0x442ea0
0x442f90:	endbr64	
0x442f94:	push	r13
0x442f96:	mov	r13, rdx
0x442f99:	push	r12
0x442f9b:	mov	r12, rdi
0x442f9e:	mov	rdi, rsi
0x442fa1:	push	rbp
0x442fa2:	mov	rbp, rsi
0x442fa5:	call	0x4039e0
0x442faa:	mov	rdx, r13
0x442fad:	mov	rsi, rbp
0x442fb0:	mov	rdi, r12
0x442fb3:	pop	rbp
0x442fb4:	mov	rcx, rax
0x442fb7:	pop	r12
0x442fb9:	pop	r13
0x442fbb:	jmp	0x442ea0
0x442fc0:	endbr64	
0x442fc4:	push	r12
0x442fc6:	mov	r12, 0xffffffffffffffff
0x442fcd:	push	rbx
0x442fce:	sub	rsp, 8
0x442fd2:	mov	rax, qword ptr [rdi + 8]
0x442fd6:	cmp	rdx, rax
0x442fd9:	jae	0x442ffe
0x442fdb:	mov	rbx, qword ptr [rdi]
0x442fde:	sub	rax, rdx
0x442fe1:	movsx	esi, sil
0x442fe5:	lea	rdi, [rbx + rdx]
0x442fe9:	mov	rdx, rax
0x442fec:	call	0x403b40
0x442ff1:	mov	rdx, rax
0x442ff4:	sub	rdx, rbx
0x442ff7:	test	rax, rax
0x442ffa:	cmovne	r12, rdx
0x442ffe:	add	rsp, 8
0x443002:	mov	rax, r12
0x443005:	pop	rbx
0x443006:	pop	r12
0x443008:	ret	
0x443009:	nop	dword ptr [rax]
0x443010:	endbr64	
0x443014:	push	r13
0x443016:	push	r12
0x443018:	mov	r12, 0xffffffffffffffff
0x44301f:	push	rbp
0x443020:	push	rbx
0x443021:	sub	rsp, 8
0x443025:	mov	rax, qword ptr [rdi + 8]
0x443029:	cmp	rcx, rax
0x44302c:	ja	0x44306f
0x44302e:	sub	rax, rcx
0x443031:	mov	rbx, rcx
0x443034:	mov	r13, qword ptr [rdi]
0x443037:	mov	rbp, rsi
0x44303a:	cmp	rax, rdx
0x44303d:	cmovbe	rdx, rax
0x443041:	mov	r12, rdx
0x443044:	test	rbx, rbx
0x443047:	je	0x44306f
0x443049:	lea	rdi, [r13 + r12]
0x44304e:	mov	rdx, rbx
0x443051:	mov	rsi, rbp
0x443054:	call	0x403b70
0x443059:	test	eax, eax
0x44305b:	je	0x44306f
0x44305d:	lea	rax, [r12 - 1]
0x443062:	test	r12, r12
0x443065:	je	0x443080
0x443067:	mov	r12, rax
0x44306a:	test	rbx, rbx
0x44306d:	jne	0x443049
0x44306f:	add	rsp, 8
0x443073:	mov	rax, r12
0x443076:	pop	rbx
0x443077:	pop	rbp
0x443078:	pop	r12
0x44307a:	pop	r13
0x44307c:	ret	
0x44307d:	nop	dword ptr [rax]
0x443080:	mov	r12, 0xffffffffffffffff
0x443087:	jmp	0x44306f
0x443089:	nop	dword ptr [rax]
0x443090:	endbr64	
0x443094:	mov	rcx, qword ptr [rsi + 8]
0x443098:	mov	rsi, qword ptr [rsi]
0x44309b:	jmp	0x443010
0x4430a0:	endbr64	
0x4430a4:	push	r13
0x4430a6:	mov	r13, rdx
0x4430a9:	push	r12
0x4430ab:	mov	r12, rdi
0x4430ae:	mov	rdi, rsi
0x4430b1:	push	rbp
0x4430b2:	mov	rbp, rsi
0x4430b5:	call	0x4039e0
0x4430ba:	mov	rdx, r13
0x4430bd:	mov	rsi, rbp
0x4430c0:	mov	rdi, r12
0x4430c3:	pop	rbp
0x4430c4:	mov	rcx, rax
0x4430c7:	pop	r12
0x4430c9:	pop	r13
0x4430cb:	jmp	0x443010
0x4430d0:	endbr64	
0x4430d4:	mov	rcx, qword ptr [rdi + 8]
0x4430d8:	mov	rax, 0xffffffffffffffff
0x4430df:	test	rcx, rcx
0x4430e2:	je	0x443104
0x4430e4:	sub	rcx, 1
0x4430e8:	mov	rax, rdx
0x4430eb:	cmp	rcx, rdx
0x4430ee:	mov	rdx, qword ptr [rdi]
0x4430f1:	cmovbe	rax, rcx
0x4430f5:	nop	dword ptr [rax]
0x4430f8:	cmp	byte ptr [rdx + rax], sil
0x4430fc:	je	0x443104
0x4430fe:	sub	rax, 1
0x443102:	jae	0x4430f8
0x443104:	ret	
0x443105:	nop	word ptr cs:[rax + rax]
0x44310f:	nop	
0x443110:	endbr64	
0x443114:	test	rcx, rcx
0x443117:	je	0x44317c
0x443119:	push	r14
0x44311b:	mov	r14, rdi
0x44311e:	push	r13
0x443120:	push	r12
0x443122:	mov	r12, rsi
0x443125:	push	rbp
0x443126:	mov	rbp, rcx
0x443129:	push	rbx
0x44312a:	mov	rbx, rdx
0x44312d:	mov	r13, qword ptr [rdi + 8]
0x443131:	jmp	0x443153
0x443133:	nop	dword ptr [rax + rax]
0x443138:	mov	rax, qword ptr [r14]
0x44313b:	mov	rdx, rbp
0x44313e:	mov	rdi, r12
0x443141:	movsx	esi, byte ptr [rax + rbx]
0x443145:	call	0x403b40
0x44314a:	test	rax, rax
0x44314d:	jne	0x443170
0x44314f:	add	rbx, 1
0x443153:	cmp	r13, rbx
0x443156:	ja	0x443138
0x443158:	pop	rbx
0x443159:	mov	rax, 0xffffffffffffffff
0x443160:	pop	rbp
0x443161:	pop	r12
0x443163:	pop	r13
0x443165:	pop	r14
0x443167:	ret	
0x443168:	nop	dword ptr [rax + rax]
0x443170:	mov	rax, rbx
0x443173:	pop	rbx
0x443174:	pop	rbp
0x443175:	pop	r12
0x443177:	pop	r13
0x443179:	pop	r14
0x44317b:	ret	
0x44317c:	mov	rax, 0xffffffffffffffff
0x443183:	ret	
0x443184:	nop	word ptr cs:[rax + rax]
0x44318e:	nop	
0x443190:	endbr64	
0x443194:	mov	rcx, qword ptr [rsi + 8]
0x443198:	mov	rsi, qword ptr [rsi]
0x44319b:	jmp	0x443110
0x4431a0:	endbr64	
0x4431a4:	push	r13
0x4431a6:	mov	r13, rdx
0x4431a9:	push	r12
0x4431ab:	mov	r12, rdi
0x4431ae:	mov	rdi, rsi
0x4431b1:	push	rbp
0x4431b2:	mov	rbp, rsi
0x4431b5:	call	0x4039e0
0x4431ba:	mov	rdx, r13
0x4431bd:	mov	rsi, rbp
0x4431c0:	mov	rdi, r12
0x4431c3:	pop	rbp
0x4431c4:	mov	rcx, rax
0x4431c7:	pop	r12
0x4431c9:	pop	r13
0x4431cb:	jmp	0x443110
0x4431d0:	endbr64	
0x4431d4:	movsx	esi, sil
0x4431d8:	jmp	0x442fc0
0x4431dd:	nop	dword ptr [rax]
0x4431e0:	endbr64	
0x4431e4:	push	r13
0x4431e6:	push	r12
0x4431e8:	push	rbp
0x4431e9:	push	rbx
0x4431ea:	sub	rsp, 8
0x4431ee:	mov	r12, qword ptr [rdi + 8]
0x4431f2:	test	r12, r12
0x4431f5:	je	0x443248
0x4431f7:	mov	rbx, rcx
0x4431fa:	test	rcx, rcx
0x4431fd:	je	0x443248
0x4431ff:	sub	r12, 1
0x443203:	mov	r13, qword ptr [rdi]
0x443206:	mov	rbp, rsi
0x443209:	cmp	r12, rdx
0x44320c:	cmova	r12, rdx
0x443210:	jmp	0x44321e
0x443212:	nop	word ptr [rax + rax]
0x443218:	sub	r12, 1
0x44321c:	jb	0x443234
0x44321e:	movsx	esi, byte ptr [r13 + r12]
0x443224:	mov	rdx, rbx
0x443227:	mov	rdi, rbp
0x44322a:	call	0x403b40
0x44322f:	test	rax, rax
0x443232:	je	0x443218
0x443234:	add	rsp, 8
0x443238:	mov	rax, r12
0x44323b:	pop	rbx
0x44323c:	pop	rbp
0x44323d:	pop	r12
0x44323f:	pop	r13
0x443241:	ret	
0x443242:	nop	word ptr [rax + rax]
0x443248:	add	rsp, 8
0x44324c:	mov	r12, 0xffffffffffffffff
0x443253:	pop	rbx
0x443254:	mov	rax, r12
0x443257:	pop	rbp
0x443258:	pop	r12
0x44325a:	pop	r13
0x44325c:	ret	
0x44325d:	nop	dword ptr [rax]
0x443260:	endbr64	
0x443264:	mov	rcx, qword ptr [rsi + 8]
0x443268:	mov	rsi, qword ptr [rsi]
0x44326b:	jmp	0x4431e0
0x443270:	endbr64	
0x443274:	push	r13
0x443276:	mov	r13, rdx
0x443279:	push	r12
0x44327b:	mov	r12, rdi
0x44327e:	mov	rdi, rsi
0x443281:	push	rbp
0x443282:	mov	rbp, rsi
0x443285:	call	0x4039e0
0x44328a:	mov	rdx, r13
0x44328d:	mov	rsi, rbp
0x443290:	mov	rdi, r12
0x443293:	pop	rbp
0x443294:	mov	rcx, rax
0x443297:	pop	r12
0x443299:	pop	r13
0x44329b:	jmp	0x4431e0
0x4432a0:	endbr64	
0x4432a4:	movsx	esi, sil
0x4432a8:	jmp	0x4430d0
0x4432ad:	nop	dword ptr [rax]
0x4432b0:	endbr64	
0x4432b4:	push	r14
0x4432b6:	push	r13
0x4432b8:	push	r12
0x4432ba:	push	rbp
0x4432bb:	push	rbx
0x4432bc:	mov	r13, qword ptr [rdi + 8]
0x4432c0:	cmp	rdx, r13
0x4432c3:	jae	0x443310
0x4432c5:	mov	r14, qword ptr [rdi]
0x4432c8:	mov	r12, rsi
0x4432cb:	mov	rbx, rdx
0x4432ce:	mov	rbp, rcx
0x4432d1:	test	rcx, rcx
0x4432d4:	jne	0x4432e9
0x4432d6:	jmp	0x4432fe
0x4432d8:	nop	dword ptr [rax + rax]
0x4432e0:	add	rbx, 1
0x4432e4:	cmp	rbx, r13
0x4432e7:	je	0x443310
0x4432e9:	movsx	esi, byte ptr [r14 + rbx]
0x4432ee:	mov	rdx, rbp
0x4432f1:	mov	rdi, r12
0x4432f4:	call	0x403b40
0x4432f9:	test	rax, rax
0x4432fc:	jne	0x4432e0
0x4432fe:	mov	rax, rbx
0x443301:	pop	rbx
0x443302:	pop	rbp
0x443303:	pop	r12
0x443305:	pop	r13
0x443307:	pop	r14
0x443309:	ret	
0x44330a:	nop	word ptr [rax + rax]
0x443310:	pop	rbx
0x443311:	mov	rax, 0xffffffffffffffff
0x443318:	pop	rbp
0x443319:	pop	r12
0x44331b:	pop	r13
0x44331d:	pop	r14
0x44331f:	ret	
0x443320:	endbr64	
0x443324:	mov	rcx, qword ptr [rsi + 8]
0x443328:	mov	rsi, qword ptr [rsi]
0x44332b:	jmp	0x4432b0
0x443330:	endbr64	
0x443334:	push	r13
0x443336:	mov	r13, rdx
0x443339:	push	r12
0x44333b:	mov	r12, rdi
0x44333e:	mov	rdi, rsi
0x443341:	push	rbp
0x443342:	mov	rbp, rsi
0x443345:	call	0x4039e0
0x44334a:	mov	rdx, r13
0x44334d:	mov	rsi, rbp
0x443350:	mov	rdi, r12
0x443353:	pop	rbp
0x443354:	mov	rcx, rax
0x443357:	pop	r12
0x443359:	pop	r13
0x44335b:	jmp	0x4432b0
0x443360:	endbr64	
0x443364:	mov	rax, rdx
0x443367:	mov	rdx, qword ptr [rdi + 8]
0x44336b:	cmp	rax, rdx
0x44336e:	jae	0x443390
0x443370:	mov	rcx, qword ptr [rdi]
0x443373:	jmp	0x443381
0x443375:	nop	dword ptr [rax]
0x443378:	add	rax, 1
0x44337c:	cmp	rax, rdx
0x44337f:	je	0x443390
0x443381:	cmp	byte ptr [rcx + rax], sil
0x443385:	je	0x443378
0x443387:	ret	
0x443388:	nop	dword ptr [rax + rax]
0x443390:	mov	rax, 0xffffffffffffffff
0x443397:	ret	
0x443398:	nop	dword ptr [rax + rax]
0x4433a0:	endbr64	
0x4433a4:	push	r13
0x4433a6:	push	r12
0x4433a8:	mov	r12, 0xffffffffffffffff
0x4433af:	push	rbp
0x4433b0:	push	rbx
0x4433b1:	sub	rsp, 8
0x4433b5:	mov	rax, qword ptr [rdi + 8]
0x4433b9:	test	rax, rax
0x4433bc:	je	0x4433f6
0x4433be:	sub	rax, 1
0x4433c2:	mov	r13, qword ptr [rdi]
0x4433c5:	mov	rbp, rsi
0x4433c8:	mov	rbx, rcx
0x4433cb:	cmp	rax, rdx
0x4433ce:	cmovbe	rdx, rax
0x4433d2:	mov	r12, rdx
0x4433d5:	test	rbx, rbx
0x4433d8:	je	0x4433f6
0x4433da:	movsx	esi, byte ptr [r13 + r12]
0x4433e0:	mov	rdx, rbx
0x4433e3:	mov	rdi, rbp
0x4433e6:	call	0x403b40
0x4433eb:	test	rax, rax
0x4433ee:	je	0x4433f6
0x4433f0:	sub	r12, 1
0x4433f4:	jae	0x4433d5
0x4433f6:	add	rsp, 8
0x4433fa:	mov	rax, r12
0x4433fd:	pop	rbx
0x4433fe:	pop	rbp
0x4433ff:	pop	r12
0x443401:	pop	r13
0x443403:	ret	
0x443404:	nop	word ptr cs:[rax + rax]
0x44340e:	nop	
0x443410:	endbr64	
0x443414:	mov	rcx, qword ptr [rsi + 8]
0x443418:	mov	rsi, qword ptr [rsi]
0x44341b:	jmp	0x4433a0
0x443420:	endbr64	
0x443424:	push	r13
0x443426:	mov	r13, rdx
0x443429:	push	r12
0x44342b:	mov	r12, rdi
0x44342e:	mov	rdi, rsi
0x443431:	push	rbp
0x443432:	mov	rbp, rsi
0x443435:	call	0x4039e0
0x44343a:	mov	rdx, r13
0x44343d:	mov	rsi, rbp
0x443440:	mov	rdi, r12
0x443443:	pop	rbp
0x443444:	mov	rcx, rax
0x443447:	pop	r12
0x443449:	pop	r13
0x44344b:	jmp	0x4433a0
0x443450:	endbr64	
0x443454:	mov	rcx, qword ptr [rdi + 8]
0x443458:	mov	rax, 0xffffffffffffffff
0x44345f:	test	rcx, rcx
0x443462:	je	0x44348c
0x443464:	sub	rcx, 1
0x443468:	mov	rax, rdx
0x44346b:	cmp	rcx, rdx
0x44346e:	mov	rdx, qword ptr [rdi]
0x443471:	cmovbe	rax, rcx
0x443475:	jmp	0x443486
0x443477:	nop	word ptr [rax + rax]
0x443480:	sub	rax, 1
0x443484:	jb	0x44348c
0x443486:	cmp	byte ptr [rdx + rax], sil
0x44348a:	je	0x443480
0x44348c:	ret	
0x44348d:	nop	dword ptr [rax]
0x443490:	endbr64	
0x443494:	push	rbp
0x443495:	push	rbx
0x443496:	sub	rsp, 8
0x44349a:	mov	rbx, qword ptr [rdi + 8]
0x44349e:	mov	rbp, qword ptr [rsi + 8]
0x4434a2:	mov	rdx, rbx
0x4434a5:	cmp	rbp, rbx
0x4434a8:	cmovbe	rdx, rbp
0x4434ac:	test	rdx, rdx
0x4434af:	je	0x4434c0
0x4434b1:	mov	rsi, qword ptr [rsi]
0x4434b4:	mov	rdi, qword ptr [rdi]
0x4434b7:	call	0x403b70
0x4434bc:	test	eax, eax
0x4434be:	jne	0x4434e0
0x4434c0:	sub	rbx, rbp
0x4434c3:	mov	eax, 0x7fffffff
0x4434c8:	cmp	rbx, 0x7fffffff
0x4434cf:	jg	0x4434e0
0x4434d1:	cmp	rbx, -0x80000000
0x4434d8:	mov	eax, 0x80000000
0x4434dd:	cmovge	eax, ebx
0x4434e0:	add	rsp, 8
0x4434e4:	pop	rbx
0x4434e5:	pop	rbp
0x4434e6:	ret	
0x4434e7:	nop	word ptr [rax + rax]
0x4434f0:	endbr64	
0x4434f4:	push	rbp
0x4434f5:	push	rbx
0x4434f6:	sub	rsp, 8
0x4434fa:	mov	rbx, qword ptr [rdi + 8]
0x4434fe:	cmp	rsi, rbx
0x443501:	ja	0x443559
0x443503:	sub	rbx, rsi
0x443506:	mov	rbp, qword ptr [rcx + 8]
0x44350a:	cmp	rbx, rdx
0x44350d:	cmova	rbx, rdx
0x443511:	cmp	rbp, rbx
0x443514:	mov	rdx, rbx
0x443517:	cmovbe	rdx, rbp
0x44351b:	test	rdx, rdx
0x44351e:	je	0x443532
0x443520:	add	rsi, qword ptr [rdi]
0x443523:	mov	rdi, rsi
0x443526:	mov	rsi, qword ptr [rcx]
0x443529:	call	0x403b70
0x44352e:	test	eax, eax
0x443530:	jne	0x443552
0x443532:	sub	rbx, rbp
0x443535:	mov	eax, 0x7fffffff
0x44353a:	cmp	rbx, 0x7fffffff
0x443541:	jg	0x443552
0x443543:	cmp	rbx, -0x80000000
0x44354a:	mov	eax, 0x80000000
0x44354f:	cmovge	eax, ebx
0x443552:	add	rsp, 8
0x443556:	pop	rbx
0x443557:	pop	rbp
0x443558:	ret	
0x443559:	mov	rdx, rsi
0x44355c:	mov	rcx, rbx
0x44355f:	lea	rsi, [rip + 0x89180]
0x443566:	xor	eax, eax
0x443568:	lea	rdi, [rip + 0x89049]
0x44356f:	call	0x440770
0x443574:	nop	word ptr cs:[rax + rax]
0x44357e:	nop	
0x443580:	endbr64	
0x443584:	push	rbp
0x443585:	mov	rax, rdi
0x443588:	mov	rdi, rsi
0x44358b:	push	rbx
0x44358c:	sub	rsp, 8
0x443590:	mov	rbx, qword ptr [rax + 8]
0x443594:	cmp	rsi, rbx
0x443597:	ja	0x4435fe
0x443599:	mov	rbp, qword ptr [rcx + 8]
0x44359d:	cmp	r8, rbp
0x4435a0:	ja	0x443619
0x4435a2:	sub	rbx, rsi
0x4435a5:	cmp	rbx, rdx
0x4435a8:	cmova	rbx, rdx
0x4435ac:	sub	rbp, r8
0x4435af:	cmp	rbp, r9
0x4435b2:	cmova	rbp, r9
0x4435b6:	mov	rdx, rbx
0x4435b9:	cmp	rbp, rbx
0x4435bc:	cmovbe	rdx, rbp
0x4435c0:	test	rdx, rdx
0x4435c3:	je	0x4435d7
0x4435c5:	mov	rsi, qword ptr [rcx]
0x4435c8:	add	rdi, qword ptr [rax]
0x4435cb:	add	rsi, r8
0x4435ce:	call	0x403b70
0x4435d3:	test	eax, eax
0x4435d5:	jne	0x4435f7
0x4435d7:	sub	rbx, rbp
0x4435da:	mov	eax, 0x7fffffff
0x4435df:	cmp	rbx, 0x7fffffff
0x4435e6:	jg	0x4435f7
0x4435e8:	cmp	rbx, -0x80000000
0x4435ef:	mov	eax, 0x80000000
0x4435f4:	cmovge	eax, ebx
0x4435f7:	add	rsp, 8
0x4435fb:	pop	rbx
0x4435fc:	pop	rbp
0x4435fd:	ret	
0x4435fe:	mov	rdx, rsi
0x443601:	mov	rcx, rbx
0x443604:	lea	rsi, [rip + 0x890db]
0x44360b:	xor	eax, eax
0x44360d:	lea	rdi, [rip + 0x88fa4]
0x443614:	call	0x440770
0x443619:	mov	rcx, rbp
0x44361c:	mov	rdx, r8
0x44361f:	lea	rsi, [rip + 0x890c0]
0x443626:	xor	eax, eax
0x443628:	lea	rdi, [rip + 0x88f89]
0x44362f:	call	0x440770
0x443634:	nop	word ptr cs:[rax + rax]
0x44363e:	nop	
0x443640:	endbr64	
0x443644:	push	r13
0x443646:	mov	r13, rsi
0x443649:	push	r12
0x44364b:	mov	r12, rdi
0x44364e:	push	rbp
0x44364f:	push	rbx
0x443650:	sub	rsp, 8
0x443654:	mov	rbx, qword ptr [rdi + 8]
0x443658:	mov	rdi, rsi
0x44365b:	call	0x4039e0
0x443660:	cmp	rax, rbx
0x443663:	mov	rdx, rbx
0x443666:	mov	rbp, rax
0x443669:	cmovbe	rdx, rax
0x44366d:	test	rdx, rdx
0x443670:	je	0x443682
0x443672:	mov	rdi, qword ptr [r12]
0x443676:	mov	rsi, r13
0x443679:	call	0x403b70
0x44367e:	test	eax, eax
0x443680:	jne	0x4436a2
0x443682:	sub	rbx, rbp
0x443685:	mov	eax, 0x7fffffff
0x44368a:	cmp	rbx, 0x7fffffff
0x443691:	jg	0x4436a2
0x443693:	cmp	rbx, -0x80000000
0x44369a:	mov	eax, 0x80000000
0x44369f:	cmovge	eax, ebx
0x4436a2:	add	rsp, 8
0x4436a6:	pop	rbx
0x4436a7:	pop	rbp
0x4436a8:	pop	r12
0x4436aa:	pop	r13
0x4436ac:	ret	
0x4436ad:	nop	dword ptr [rax]
0x4436b0:	endbr64	
0x4436b4:	push	r14
0x4436b6:	push	r13
0x4436b8:	push	r12
0x4436ba:	mov	r12, rsi
0x4436bd:	push	rbp
0x4436be:	push	rbx
0x4436bf:	mov	rbx, qword ptr [rdi + 8]
0x4436c3:	cmp	rsi, rbx
0x4436c6:	ja	0x44372e
0x4436c8:	sub	rbx, rsi
0x4436cb:	mov	r13, rdi
0x4436ce:	mov	rdi, rcx
0x4436d1:	mov	r14, rcx
0x4436d4:	cmp	rbx, rdx
0x4436d7:	cmova	rbx, rdx
0x4436db:	call	0x4039e0
0x4436e0:	cmp	rax, rbx
0x4436e3:	mov	rdx, rbx
0x4436e6:	mov	rbp, rax
0x4436e9:	cmovbe	rdx, rax
0x4436ed:	test	rdx, rdx
0x4436f0:	je	0x443705
0x4436f2:	mov	rdi, qword ptr [r13]
0x4436f6:	mov	rsi, r14
0x4436f9:	add	rdi, r12
0x4436fc:	call	0x403b70
0x443701:	test	eax, eax
0x443703:	jne	0x443725
0x443705:	sub	rbx, rbp
0x443708:	mov	eax, 0x7fffffff
0x44370d:	cmp	rbx, 0x7fffffff
0x443714:	jg	0x443725
0x443716:	cmp	rbx, -0x80000000
0x44371d:	mov	eax, 0x80000000
0x443722:	cmovge	eax, ebx
0x443725:	pop	rbx
0x443726:	pop	rbp
0x443727:	pop	r12
0x443729:	pop	r13
0x44372b:	pop	r14
0x44372d:	ret	
0x44372e:	mov	rdx, rsi
0x443731:	mov	rcx, rbx
0x443734:	lea	rsi, [rip + 0x88fab]
0x44373b:	xor	eax, eax
0x44373d:	lea	rdi, [rip + 0x88e74]
0x443744:	call	0x440770
0x443749:	nop	dword ptr [rax]
0x443750:	endbr64	
0x443754:	push	rbp
0x443755:	mov	rax, rdi
0x443758:	mov	rdi, rsi
0x44375b:	push	rbx
0x44375c:	sub	rsp, 8
0x443760:	mov	rbx, qword ptr [rax + 8]
0x443764:	cmp	rsi, rbx
0x443767:	ja	0x4437bb
0x443769:	sub	rbx, rsi
0x44376c:	mov	rbp, r8
0x44376f:	cmp	rbx, rdx
0x443772:	cmova	rbx, rdx
0x443776:	mov	rdx, r8
0x443779:	cmp	rbx, r8
0x44377c:	cmovbe	rdx, rbx
0x443780:	test	rdx, rdx
0x443783:	je	0x443794
0x443785:	add	rdi, qword ptr [rax]
0x443788:	mov	rsi, rcx
0x44378b:	call	0x403b70
0x443790:	test	eax, eax
0x443792:	jne	0x4437b4
0x443794:	sub	rbx, rbp
0x443797:	mov	eax, 0x7fffffff
0x44379c:	cmp	rbx, 0x7fffffff
0x4437a3:	jg	0x4437b4
0x4437a5:	cmp	rbx, -0x80000000
0x4437ac:	mov	eax, 0x80000000
0x4437b1:	cmovge	eax, ebx
0x4437b4:	add	rsp, 8
0x4437b8:	pop	rbx
0x4437b9:	pop	rbp
0x4437ba:	ret	
0x4437bb:	mov	rdx, rsi
0x4437be:	mov	rcx, rbx
0x4437c1:	lea	rsi, [rip + 0x88f1e]
0x4437c8:	xor	eax, eax
0x4437ca:	lea	rdi, [rip + 0x88de7]
0x4437d1:	call	0x440770
0x4437d6:	nop	word ptr cs:[rax + rax]
0x4437e0:	endbr64	
0x4437e4:	mov	qword ptr [rdi], rsi
0x4437e7:	ret	
0x4437e8:	nop	dword ptr [rax + rax]
0x4437f0:	endbr64	
0x4437f4:	mov	qword ptr [rdi], rsi
0x4437f7:	ret	
0x4437f8:	nop	dword ptr [rax + rax]
0x443800:	endbr64	
0x443804:	push	r13
0x443806:	lea	r13, [rdi + 0x10]
0x44380a:	push	r12
0x44380c:	mov	r12, rdi
0x44380f:	push	rbp
0x443810:	mov	ebp, esi
0x443812:	push	rbx
0x443813:	mov	rbx, rdx
0x443816:	sub	rsp, 8
0x44381a:	mov	qword ptr [rdi + 8], 0
0x443822:	mov	byte ptr [rdi + 0x10], 0
0x443826:	mov	rax, qword ptr [rdx + 8]
0x44382a:	mov	qword ptr [rdi], r13
0x44382d:	lea	rsi, [rax + 1]
0x443831:	call	0x4416a0
0x443836:	mov	rsi, qword ptr [r12 + 8]
0x44383b:	movsx	r8d, bpl
0x44383f:	mov	ecx, 1
0x443844:	xor	edx, edx
0x443846:	mov	rdi, r12
0x443849:	call	0x441d70
0x44384e:	mov	rdx, qword ptr [rbx + 8]
0x443852:	mov	rsi, qword ptr [rbx]
0x443855:	mov	rdi, r12
0x443858:	call	0x442aa0
0x44385d:	add	rsp, 8
0x443861:	mov	rax, r12
0x443864:	pop	rbx
0x443865:	pop	rbp
0x443866:	pop	r12
0x443868:	pop	r13
0x44386a:	ret	
0x44386b:	endbr64	
0x44386f:	mov	rbp, rax
0x443872:	mov	rdi, qword ptr [r12]
0x443876:	cmp	r13, rdi
0x443879:	je	0x443880
0x44387b:	call	0x444170
0x443880:	mov	rdi, rbp
0x443883:	call	0x457dd0
0x443888:	nop	dword ptr [rax + rax]
0x443890:	endbr64	
0x443894:	push	r12
0x443896:	sub	rdx, rsi
0x443899:	push	rbp
0x44389a:	mov	r12, rdx
0x44389d:	mov	rbp, rsi
0x4438a0:	push	rbx
0x4438a1:	mov	rbx, rdi
0x4438a4:	sub	rsp, 0x10
0x4438a8:	mov	rax, qword ptr fs:[0x28]
0x4438b1:	mov	qword ptr [rsp + 8], rax
0x4438b6:	xor	eax, eax
0x4438b8:	mov	qword ptr [rsp], rdx
0x4438bc:	cmp	rdx, 0xf
0x4438c0:	ja	0x443910
0x4438c2:	mov	rdi, qword ptr [rdi]
0x4438c5:	cmp	rdx, 1
0x4438c9:	jne	0x443900
0x4438cb:	movzx	eax, byte ptr [rsi]
0x4438ce:	mov	byte ptr [rdi], al
0x4438d0:	mov	r12, qword ptr [rsp]
0x4438d4:	mov	rdi, qword ptr [rbx]
0x4438d7:	mov	qword ptr [rbx + 8], r12
0x4438db:	mov	byte ptr [rdi + r12], 0
0x4438e0:	mov	rax, qword ptr [rsp + 8]
0x4438e5:	sub	rax, qword ptr fs:[0x28]
0x4438ee:	jne	0x44393c
0x4438f0:	add	rsp, 0x10
0x4438f4:	pop	rbx
0x4438f5:	pop	rbp
0x4438f6:	pop	r12
0x4438f8:	ret	
0x4438f9:	nop	dword ptr [rax]
0x443900:	test	rdx, rdx
0x443903:	je	0x4438d7
0x443905:	jmp	0x443928
0x443907:	nop	word ptr [rax + rax]
0x443910:	mov	rsi, rsp
0x443913:	xor	edx, edx
0x443915:	call	0x440cf0
0x44391a:	mov	qword ptr [rbx], rax
0x44391d:	mov	rdi, rax
0x443920:	mov	rax, qword ptr [rsp]
0x443924:	mov	qword ptr [rbx + 0x10], rax
0x443928:	mov	rdx, r12
0x44392b:	mov	rsi, rbp
0x44392e:	call	0x403c60
0x443933:	mov	r12, qword ptr [rsp]
0x443937:	mov	rdi, qword ptr [rbx]
0x44393a:	jmp	0x4438d7
0x44393c:	call	0x4039f0
0x443941:	nop	word ptr cs:[rax + rax]
0x44394b:	nop	dword ptr [rax + rax]
0x443950:	endbr64	
0x443954:	lea	rax, [rdi + 0x10]
0x443958:	mov	qword ptr [rdi], rax
0x44395b:	jmp	0x443890
0x443960:	endbr64	
0x443964:	push	r12
0x443966:	sub	rdx, rsi
0x443969:	push	rbp
0x44396a:	mov	r12, rdx
0x44396d:	mov	rbp, rsi
0x443970:	push	rbx
0x443971:	mov	rbx, rdi
0x443974:	sub	rsp, 0x10
0x443978:	mov	rax, qword ptr fs:[0x28]
0x443981:	mov	qword ptr [rsp + 8], rax
0x443986:	xor	eax, eax
0x443988:	mov	qword ptr [rsp], rdx
0x44398c:	cmp	rdx, 0xf
0x443990:	ja	0x4439e0
0x443992:	mov	rdi, qword ptr [rdi]
0x443995:	cmp	rdx, 1
0x443999:	jne	0x4439d0
0x44399b:	movzx	eax, byte ptr [rsi]
0x44399e:	mov	byte ptr [rdi], al
0x4439a0:	mov	r12, qword ptr [rsp]
0x4439a4:	mov	rdi, qword ptr [rbx]
0x4439a7:	mov	qword ptr [rbx + 8], r12
0x4439ab:	mov	byte ptr [rdi + r12], 0
0x4439b0:	mov	rax, qword ptr [rsp + 8]
0x4439b5:	sub	rax, qword ptr fs:[0x28]
0x4439be:	jne	0x443a0c
0x4439c0:	add	rsp, 0x10
0x4439c4:	pop	rbx
0x4439c5:	pop	rbp
0x4439c6:	pop	r12
0x4439c8:	ret	
0x4439c9:	nop	dword ptr [rax]
0x4439d0:	test	rdx, rdx
0x4439d3:	je	0x4439a7
0x4439d5:	jmp	0x4439f8
0x4439d7:	nop	word ptr [rax + rax]
0x4439e0:	mov	rsi, rsp
0x4439e3:	xor	edx, edx
0x4439e5:	call	0x440cf0
0x4439ea:	mov	qword ptr [rbx], rax
0x4439ed:	mov	rdi, rax
0x4439f0:	mov	rax, qword ptr [rsp]
0x4439f4:	mov	qword ptr [rbx + 0x10], rax
0x4439f8:	mov	rdx, r12
0x4439fb:	mov	rsi, rbp
0x4439fe:	call	0x403c60
0x443a03:	mov	r12, qword ptr [rsp]
0x443a07:	mov	rdi, qword ptr [rbx]
0x443a0a:	jmp	0x4439a7
0x443a0c:	call	0x4039f0
0x443a11:	nop	word ptr cs:[rax + rax]
0x443a1b:	nop	dword ptr [rax + rax]
0x443a20:	endbr64	
0x443a24:	lea	rax, [rdi + 0x10]
0x443a28:	mov	rdx, qword ptr [rsi + 8]
0x443a2c:	mov	qword ptr [rdi], rax
0x443a2f:	mov	r8, qword ptr [rsi]
0x443a32:	add	rdx, r8
0x443a35:	mov	rsi, r8
0x443a38:	jmp	0x443960
0x443a3d:	nop	dword ptr [rax]
0x443a40:	endbr64	
0x443a44:	push	r12
0x443a46:	mov	r12, rdx
0x443a49:	push	rbp
0x443a4a:	mov	rbp, rsi
0x443a4d:	push	rbx
0x443a4e:	mov	rbx, rdi
0x443a51:	sub	rsp, 0x10
0x443a55:	mov	rax, qword ptr fs:[0x28]
0x443a5e:	mov	qword ptr [rsp + 8], rax
0x443a63:	xor	eax, eax
0x443a65:	test	rdx, rdx
0x443a68:	je	0x443a73
0x443a6a:	test	rsi, rsi
0x443a6d:	je	0x443aff
0x443a73:	sub	r12, rbp
0x443a76:	mov	qword ptr [rsp], r12
0x443a7a:	cmp	r12, 0xf
0x443a7e:	ja	0x443ad0
0x443a80:	mov	rdi, qword ptr [rbx]
0x443a83:	cmp	r12, 1
0x443a87:	jne	0x443ac0
0x443a89:	movzx	eax, byte ptr [rbp]
0x443a8d:	mov	byte ptr [rdi], al
0x443a8f:	mov	r12, qword ptr [rsp]
0x443a93:	mov	rdi, qword ptr [rbx]
0x443a96:	mov	qword ptr [rbx + 8], r12
0x443a9a:	mov	byte ptr [rdi + r12], 0
0x443a9f:	mov	rax, qword ptr [rsp + 8]
0x443aa4:	sub	rax, qword ptr fs:[0x28]
0x443aad:	jne	0x443b0b
0x443aaf:	add	rsp, 0x10
0x443ab3:	pop	rbx
0x443ab4:	pop	rbp
0x443ab5:	pop	r12
0x443ab7:	ret	
0x443ab8:	nop	dword ptr [rax + rax]
0x443ac0:	test	r12, r12
0x443ac3:	je	0x443a96
0x443ac5:	jmp	0x443aeb
0x443ac7:	nop	word ptr [rax + rax]
0x443ad0:	mov	rdi, rbx
0x443ad3:	mov	rsi, rsp
0x443ad6:	xor	edx, edx
0x443ad8:	call	0x440cf0
0x443add:	mov	qword ptr [rbx], rax
0x443ae0:	mov	rdi, rax
0x443ae3:	mov	rax, qword ptr [rsp]
0x443ae7:	mov	qword ptr [rbx + 0x10], rax
0x443aeb:	mov	rdx, r12
0x443aee:	mov	rsi, rbp
0x443af1:	call	0x403c60
0x443af6:	mov	r12, qword ptr [rsp]
0x443afa:	mov	rdi, qword ptr [rbx]
0x443afd:	jmp	0x443a96
0x443aff:	lea	rdi, [rip + 0x88bfa]
0x443b06:	call	0x42c8eb
0x443b0b:	call	0x4039f0
0x443b10:	endbr64	
0x443b14:	lea	rax, [rdi + 0x10]
0x443b18:	mov	rdx, qword ptr [rsi + 8]
0x443b1c:	mov	qword ptr [rdi], rax
0x443b1f:	mov	r8, qword ptr [rsi]
0x443b22:	add	rdx, r8
0x443b25:	mov	rsi, r8
0x443b28:	jmp	0x443a40
0x443b2d:	nop	dword ptr [rax]
0x443b30:	endbr64	
0x443b34:	lea	rax, [rdi + 0x10]
0x443b38:	mov	qword ptr [rdi], rax
0x443b3b:	jmp	0x443a40
0x443b40:	endbr64	
0x443b44:	push	r13
0x443b46:	push	r12
0x443b48:	mov	r12, rdi
0x443b4b:	push	rbp
0x443b4c:	lea	rbp, [rdi + 0x10]
0x443b50:	push	rbx
0x443b51:	mov	rbx, rdx
0x443b54:	sub	rsp, 8
0x443b58:	mov	qword ptr [rdi], rbp
0x443b5b:	mov	rdx, qword ptr [rsi + 8]
0x443b5f:	mov	r8, qword ptr [rsi]
0x443b62:	add	rdx, r8
0x443b65:	mov	rsi, r8
0x443b68:	call	0x443a40
0x443b6d:	mov	rdx, qword ptr [rbx + 8]
0x443b71:	mov	rsi, qword ptr [rbx]
0x443b74:	mov	rdi, r12
0x443b77:	call	0x442aa0
0x443b7c:	add	rsp, 8
0x443b80:	mov	rax, r12
0x443b83:	pop	rbx
0x443b84:	pop	rbp
0x443b85:	pop	r12
0x443b87:	pop	r13
0x443b89:	ret	
0x443b8a:	endbr64	
0x443b8e:	mov	r13, rax
0x443b91:	mov	rdi, qword ptr [r12]
0x443b95:	cmp	rdi, rbp
0x443b98:	je	0x443b9f
0x443b9a:	call	0x444170
0x443b9f:	mov	rdi, r13
0x443ba2:	call	0x457dd0
0x443ba7:	nop	word ptr [rax + rax]
0x443bb0:	endbr64	
0x443bb4:	mov	r8, qword ptr [rsi + 8]
0x443bb8:	lea	rax, [rdi + 0x10]
0x443bbc:	mov	qword ptr [rdi], rax
0x443bbf:	mov	rax, qword ptr [rsi]
0x443bc2:	cmp	rdx, r8
0x443bc5:	ja	0x443bd6
0x443bc7:	add	r8, rax
0x443bca:	lea	rsi, [rax + rdx]
0x443bce:	mov	rdx, r8
0x443bd1:	jmp	0x438460
0x443bd6:	push	rax
0x443bd7:	mov	rcx, r8
0x443bda:	lea	rsi, [rip + 0x88b49]
0x443be1:	xor	eax, eax
0x443be3:	lea	rdi, [rip + 0x889ce]
0x443bea:	call	0x440770
0x443bef:	nop	
0x443bf0:	endbr64	
0x443bf4:	mov	r8, qword ptr [rsi + 8]
0x443bf8:	lea	rax, [rdi + 0x10]
0x443bfc:	mov	qword ptr [rdi], rax
0x443bff:	mov	rax, qword ptr [rsi]
0x443c02:	cmp	rdx, r8
0x443c05:	ja	0x443c1e
0x443c07:	sub	r8, rdx
0x443c0a:	lea	rsi, [rax + rdx]
0x443c0e:	cmp	r8, rcx
0x443c11:	cmova	r8, rcx
0x443c15:	lea	rdx, [rsi + r8]
0x443c19:	jmp	0x438460
0x443c1e:	push	rax
0x443c1f:	mov	rcx, r8
0x443c22:	lea	rsi, [rip + 0x88b01]
0x443c29:	xor	eax, eax
0x443c2b:	lea	rdi, [rip + 0x88986]
0x443c32:	call	0x440770
0x443c37:	nop	word ptr [rax + rax]
0x443c40:	endbr64	
0x443c44:	mov	r8, qword ptr [rsi + 8]
0x443c48:	lea	rax, [rdi + 0x10]
0x443c4c:	mov	qword ptr [rdi], rax
0x443c4f:	mov	rax, qword ptr [rsi]
0x443c52:	cmp	rdx, r8
0x443c55:	ja	0x443c6e
0x443c57:	sub	r8, rdx
0x443c5a:	lea	rsi, [rax + rdx]
0x443c5e:	cmp	r8, rcx
0x443c61:	cmova	r8, rcx
0x443c65:	lea	rdx, [rsi + r8]
0x443c69:	jmp	0x438460
0x443c6e:	push	rax
0x443c6f:	mov	rcx, r8
0x443c72:	lea	rsi, [rip + 0x88acc]
0x443c79:	xor	eax, eax
0x443c7b:	lea	rdi, [rip + 0x88936]
0x443c82:	call	0x440770
0x443c87:	nop	word ptr [rax + rax]
0x443c90:	endbr64	
0x443c94:	lea	rax, [rdi + 0x10]
0x443c98:	add	rdx, rsi
0x443c9b:	mov	qword ptr [rdi], rax
0x443c9e:	jmp	0x438460
0x443ca3:	nop	word ptr cs:[rax + rax]
0x443cad:	nop	dword ptr [rax]
0x443cb0:	endbr64	
0x443cb4:	lea	rax, [rdi + 0x10]
0x443cb8:	add	rdx, rsi
0x443cbb:	mov	qword ptr [rdi], rax
0x443cbe:	jmp	0x438460
0x443cc3:	nop	word ptr cs:[rax + rax]
0x443ccd:	nop	dword ptr [rax]
0x443cd0:	endbr64	
0x443cd4:	lea	rax, [rdi + 0x10]
0x443cd8:	mov	qword ptr [rdi], rax
0x443cdb:	jmp	0x438460
0x443ce0:	endbr64	
0x443ce4:	push	r12
0x443ce6:	lea	rax, [rdi + 0x10]
0x443cea:	mov	r12, rdi
0x443ced:	mov	edx, 1
0x443cf2:	push	rbp
0x443cf3:	mov	rbp, rsi
0x443cf6:	sub	rsp, 8
0x443cfa:	mov	qword ptr [rdi], rax
0x443cfd:	test	rsi, rsi
0x443d00:	je	0x443d0f
0x443d02:	mov	rdi, rsi
0x443d05:	call	0x4039e0
0x443d0a:	lea	rdx, [rbp + rax]
0x443d0f:	add	rsp, 8
0x443d13:	mov	rsi, rbp
0x443d16:	mov	rdi, r12
0x443d19:	pop	rbp
0x443d1a:	pop	r12
0x443d1c:	jmp	0x438460
0x443d21:	nop	word ptr cs:[rax + rax]
0x443d2b:	nop	dword ptr [rax + rax]
0x443d30:	endbr64	
0x443d34:	push	r12
0x443d36:	mov	r8, qword ptr [rsi + 8]
0x443d3a:	cmp	rdx, r8
0x443d3d:	ja	0x443d6b
0x443d3f:	lea	rax, [rdi + 0x10]
0x443d43:	sub	r8, rdx
0x443d46:	mov	r12, rdi
0x443d49:	mov	qword ptr [rdi], rax
0x443d4c:	mov	rax, qword ptr [rsi]
0x443d4f:	add	rax, rdx
0x443d52:	cmp	r8, rcx
0x443d55:	cmova	r8, rcx
0x443d59:	mov	rsi, rax
0x443d5c:	lea	rdx, [rax + r8]
0x443d60:	call	0x438460
0x443d65:	mov	rax, r12
0x443d68:	pop	r12
0x443d6a:	ret	
0x443d6b:	mov	rcx, r8
0x443d6e:	lea	rsi, [rip + 0x889df]
0x443d75:	lea	rdi, [rip + 0x8883c]
0x443d7c:	xor	eax, eax
0x443d7e:	call	0x440770
0x443d83:	nop	word ptr cs:[rax + rax]
0x443d8d:	nop	dword ptr [rax]
0x443d90:	endbr64	
0x443d94:	mov	rax, qword ptr [rsi]
0x443d97:	cmp	qword ptr [rdi], rax
0x443d9a:	sete	al
0x443d9d:	ret	
0x443d9e:	nop	
0x443da0:	endbr64	
0x443da4:	mov	rax, qword ptr [rsi]
0x443da7:	cmp	qword ptr [rdi], rax
0x443daa:	sete	al
0x443dad:	ret	
0x443dae:	nop	
0x443db0:	endbr64	
0x443db4:	lea	rax, [rip + 0x889bd]
0x443dbb:	ret	
0x443dbc:	nop	dword ptr [rax]
0x443dc0:	endbr64	
0x443dc4:	mov	rax, 0x4e18f8
0x443dcb:	add	rax, 0x10
0x443dcf:	mov	qword ptr [rdi], rax
0x443dd2:	jmp	0x444700
0x443dd7:	nop	word ptr [rax + rax]
0x443de0:	endbr64	
0x443de4:	push	rbp
0x443de5:	mov	rbp, rdi
0x443de8:	call	0x443dc0
0x443ded:	mov	rdi, rbp
0x443df0:	mov	esi, 8
0x443df5:	pop	rbp
0x443df6:	jmp	0x440230
0x443dfb:	nop	dword ptr [rax + rax]
0x443e00:	endbr64	
0x443e04:	lea	rax, [rip + 0x8898a]
0x443e0b:	ret	
0x443e0c:	nop	dword ptr [rax]
0x443e10:	endbr64	
0x443e14:	mov	rax, 0x4e1938
0x443e1b:	add	rax, 0x10
0x443e1f:	mov	qword ptr [rdi], rax
0x443e22:	jmp	0x443dc0
0x443e27:	nop	word ptr [rax + rax]
0x443e30:	endbr64	
0x443e34:	push	rbp
0x443e35:	mov	rbp, rdi
0x443e38:	call	0x443e10
0x443e3d:	mov	rdi, rbp
0x443e40:	mov	esi, 8
0x443e45:	pop	rbp
0x443e46:	jmp	0x440230
0x443e4b:	nop	dword ptr [rax + rax]
0x443e50:	endbr64	
0x443e54:	lea	rax, [rip + 0x8896e]
0x443e5b:	ret	
0x443e5c:	nop	dword ptr [rax]
0x443e60:	endbr64	
0x443e64:	mov	rax, 0x4e1978
0x443e6b:	add	rax, 0x10
0x443e6f:	mov	qword ptr [rdi], rax
0x443e72:	jmp	0x444700
0x443e77:	nop	word ptr [rax + rax]
0x443e80:	endbr64	
0x443e84:	push	rbp
0x443e85:	mov	rbp, rdi
0x443e88:	call	0x443e60
0x443e8d:	mov	rdi, rbp
0x443e90:	mov	esi, 8
0x443e95:	pop	rbp
0x443e96:	jmp	0x440230
0x443e9b:	nop	dword ptr [rax + rax]
0x443ea0:	endbr64	
0x443ea4:	lea	rax, [rip + 0x88939]
0x443eab:	ret	
0x443eac:	nop	dword ptr [rax]
0x443eb0:	endbr64	
0x443eb4:	mov	rax, 0x4e19b8
0x443ebb:	add	rax, 0x10
0x443ebf:	mov	qword ptr [rdi], rax
0x443ec2:	jmp	0x444700
0x443ec7:	nop	word ptr [rax + rax]
0x443ed0:	endbr64	
0x443ed4:	push	rbp
0x443ed5:	mov	rbp, rdi
0x443ed8:	call	0x443eb0
0x443edd:	mov	rdi, rbp
0x443ee0:	mov	esi, 8
0x443ee5:	pop	rbp
0x443ee6:	jmp	0x440230
0x443eeb:	nop	dword ptr [rax + rax]
0x443ef0:	endbr64	
0x443ef4:	push	rbx
0x443ef5:	mov	rbx, rdx
0x443ef8:	sub	rsp, 0x20
0x443efc:	mov	rdx, qword ptr [rdx]
0x443eff:	mov	rax, qword ptr fs:[0x28]
0x443f08:	mov	qword ptr [rsp + 0x18], rax
0x443f0d:	xor	eax, eax
0x443f0f:	mov	rcx, rsp
0x443f12:	mov	qword ptr [rsp], 0
0x443f1a:	movabs	rax, 0x1000000000
0x443f24:	mov	qword ptr [rsp + 8], rax
0x443f29:	mov	rax, qword ptr [rdi]
0x443f2c:	mov	qword ptr [rsp + 0x10], 0
0x443f35:	call	qword ptr [rax + 0x30]
0x443f38:	mov	eax, dword ptr [rsp + 8]
0x443f3c:	xor	r8d, r8d
0x443f3f:	and	eax, 6
0x443f42:	cmp	eax, 6
0x443f45:	jne	0x443f54
0x443f47:	mov	rax, qword ptr [rsp]
0x443f4b:	mov	r8d, 1
0x443f51:	mov	qword ptr [rbx], rax
0x443f54:	mov	rax, qword ptr [rsp + 0x18]
0x443f59:	sub	rax, qword ptr fs:[0x28]
0x443f62:	jne	0x443f6d
0x443f64:	add	rsp, 0x20
0x443f68:	mov	eax, r8d
0x443f6b:	pop	rbx
0x443f6c:	ret	
0x443f6d:	call	0x4039f0
0x443f72:	nop	word ptr cs:[rax + rax]
0x443f7c:	nop	dword ptr [rax]
0x443f80:	endbr64	
0x443f84:	xor	eax, eax
0x443f86:	cmp	r8, rdx
0x443f89:	sete	al
0x443f8c:	lea	eax, [rax + rax*4 + 1]
0x443f90:	ret	
0x443f91:	nop	word ptr cs:[rax + rax]
0x443f9b:	nop	dword ptr [rax + rax]
0x443fa0:	endbr64	
0x443fa4:	mov	rax, 0x4e19f8
0x443fab:	add	rax, 0x10
0x443faf:	mov	qword ptr [rdi], rax
0x443fb2:	jmp	0x4406e0
0x443fb7:	nop	word ptr [rax + rax]
0x443fc0:	endbr64	
0x443fc4:	push	rbp
0x443fc5:	mov	rbp, rdi
0x443fc8:	call	0x443fa0
0x443fcd:	mov	rdi, rbp
0x443fd0:	mov	esi, 0x10
0x443fd5:	pop	rbp
0x443fd6:	jmp	0x440230
0x443fdb:	nop	dword ptr [rax + rax]
0x443fe0:	endbr64	
0x443fe4:	push	r12
0x443fe6:	push	rbp
0x443fe7:	mov	rbp, rdx
0x443fea:	push	rbx
0x443feb:	mov	rdi, qword ptr [rdi + 8]
0x443fef:	mov	rbx, rcx
0x443ff2:	mov	rsi, qword ptr [rsi + 8]
0x443ff6:	cmp	rdi, rsi
0x443ff9:	je	0x44400c
0x443ffb:	xor	r12d, r12d
0x443ffe:	cmp	byte ptr [rdi], 0x2a
0x444001:	je	0x444024
0x444003:	call	0x403be0
0x444008:	test	eax, eax
0x44400a:	jne	0x444024
0x44400c:	mov	qword ptr [rbx], rbp
0x44400f:	mov	r12d, 1
0x444015:	mov	qword ptr [rbx + 0x10], 0x10
0x44401d:	mov	dword ptr [rbx + 8], 6
0x444024:	mov	eax, r12d
0x444027:	pop	rbx
0x444028:	pop	rbp
0x444029:	pop	r12
0x44402b:	ret	
0x44402c:	nop	dword ptr [rax]
0x444030:	endbr64	
0x444034:	push	r13
0x444036:	mov	r13, rdi
0x444039:	push	r12
0x44403b:	push	rbp
0x44403c:	mov	rbp, rsi
0x44403f:	push	rbx
0x444040:	sub	rsp, 8
0x444044:	mov	rdi, qword ptr [rdi + 8]
0x444048:	mov	rsi, qword ptr [rsi + 8]
0x44404c:	cmp	rdi, rsi
0x44404f:	je	0x444064
0x444051:	cmp	byte ptr [rdi], 0x2a
0x444054:	mov	r12, rdx
0x444057:	mov	ebx, ecx
0x444059:	je	0x444078
0x44405b:	call	0x403be0
0x444060:	test	eax, eax
0x444062:	jne	0x444078
0x444064:	add	rsp, 8
0x444068:	mov	eax, 1
0x44406d:	pop	rbx
0x44406e:	pop	rbp
0x44406f:	pop	r12
0x444071:	pop	r13
0x444073:	ret	
0x444074:	nop	dword ptr [rax]
0x444078:	cmp	ebx, 3
0x44407b:	ja	0x4440a0
0x44407d:	mov	rax, qword ptr [rbp]
0x444081:	mov	rdx, r12
0x444084:	mov	rsi, r13
0x444087:	mov	rdi, rbp
0x44408a:	mov	rax, qword ptr [rax + 0x28]
0x44408e:	add	rsp, 8
0x444092:	pop	rbx
0x444093:	pop	rbp
0x444094:	pop	r12
0x444096:	pop	r13
0x444098:	jmp	rax
0x44409a:	nop	word ptr [rax + rax]
0x4440a0:	add	rsp, 8
0x4440a4:	xor	eax, eax
0x4440a6:	pop	rbx
0x4440a7:	pop	rbp
0x4440a8:	pop	r12
0x4440aa:	pop	r13
0x4440ac:	ret	
0x4440ad:	nop	dword ptr [rax]
0x4440b0:	endbr64	
0x4440b4:	push	r13
0x4440b6:	mov	r13d, edx
0x4440b9:	push	r12
0x4440bb:	push	rbp
0x4440bc:	push	rbx
0x4440bd:	mov	rbx, r8
0x4440c0:	sub	rsp, 0x18
0x4440c4:	mov	rbp, qword ptr [rdi + 8]
0x4440c8:	mov	r12, qword ptr [rsp + 0x48]
0x4440cd:	cmp	r8, qword ptr [rsp + 0x40]
0x4440d2:	je	0x444110
0x4440d4:	mov	rsi, qword ptr [rcx + 8]
0x4440d8:	cmp	rsi, rbp
0x4440db:	je	0x4440ef
0x4440dd:	cmp	byte ptr [rbp], 0x2a
0x4440e1:	je	0x444101
0x4440e3:	mov	rdi, rbp
0x4440e6:	call	0x403be0
0x4440eb:	test	eax, eax
0x4440ed:	jne	0x444101
0x4440ef:	mov	qword ptr [r12], rbx
0x4440f3:	mov	dword ptr [r12 + 8], r13d
0x4440f8:	mov	dword ptr [r12 + 0x10], 1
0x444101:	add	rsp, 0x18
0x444105:	xor	eax, eax
0x444107:	pop	rbx
0x444108:	pop	rbp
0x444109:	pop	r12
0x44410b:	pop	r13
0x44410d:	ret	
0x44410e:	nop	
0x444110:	mov	rsi, qword ptr [r9 + 8]
0x444114:	cmp	rsi, rbp
0x444117:	je	0x444150
0x444119:	cmp	byte ptr [rbp], 0x2a
0x44411d:	je	0x444140
0x44411f:	mov	rdi, rbp
0x444122:	mov	qword ptr [rsp + 8], rcx
0x444127:	call	0x403be0
0x44412c:	mov	rcx, qword ptr [rsp + 8]
0x444131:	test	eax, eax
0x444133:	je	0x444150
0x444135:	mov	rsi, qword ptr [rcx + 8]
0x444139:	cmp	rbp, rsi
0x44413c:	jne	0x4440e3
0x44413e:	jmp	0x4440ef
0x444140:	cmp	qword ptr [rcx + 8], rbp
0x444144:	jne	0x444101
0x444146:	jmp	0x4440ef
0x444148:	nop	dword ptr [rax + rax]
0x444150:	mov	dword ptr [r12 + 0xc], r13d
0x444155:	add	rsp, 0x18
0x444159:	xor	eax, eax
0x44415b:	pop	rbx
0x44415c:	pop	rbp
0x44415d:	pop	r12
0x44415f:	pop	r13
0x444161:	ret	
0x444162:	nop	word ptr cs:[rax + rax]
0x44416c:	nop	dword ptr [rax]
0x444170:	endbr64	
0x444174:	jmp	0x403830
0x444179:	nop	dword ptr [rax]
0x444180:	endbr64	
0x444184:	lea	rax, [rip + 0x886bd]
0x44418b:	ret	
0x44418c:	nop	dword ptr [rax]
0x444190:	endbr64	
0x444194:	lea	rax, [rip + 0x886d5]
0x44419b:	ret	
0x44419c:	nop	dword ptr [rax]
0x4441a0:	endbr64	
0x4441a4:	mov	rax, 0x4e1a80
0x4441ab:	add	rax, 0x10
0x4441af:	mov	qword ptr [rdi], rax
0x4441b2:	jmp	0x444700
0x4441b7:	nop	word ptr [rax + rax]
0x4441c0:	endbr64	
0x4441c4:	mov	rax, 0x4e1aa8
0x4441cb:	add	rax, 0x10
0x4441cf:	mov	qword ptr [rdi], rax
0x4441d2:	jmp	0x444700
0x4441d7:	nop	word ptr [rax + rax]
0x4441e0:	endbr64	
0x4441e4:	mov	rax, 0x4e1a80
0x4441eb:	push	rbp
0x4441ec:	mov	rbp, rdi
0x4441ef:	add	rax, 0x10
0x4441f3:	mov	qword ptr [rdi], rax
0x4441f6:	call	0x444700
0x4441fb:	mov	rdi, rbp
0x4441fe:	mov	esi, 8
0x444203:	pop	rbp
0x444204:	jmp	0x440230
0x444209:	nop	dword ptr [rax]
0x444210:	endbr64	
0x444214:	mov	rax, 0x4e1aa8
0x44421b:	push	rbp
0x44421c:	mov	rbp, rdi
0x44421f:	add	rax, 0x10
0x444223:	mov	qword ptr [rdi], rax
0x444226:	call	0x444700
0x44422b:	mov	rdi, rbp
0x44422e:	mov	esi, 8
0x444233:	pop	rbp
0x444234:	jmp	0x440230
0x444239:	nop	dword ptr [rax]
0x444240:	push	rbp
0x444241:	lea	rbp, [rip + 0xa22f8]
0x444248:	push	rbx
0x444249:	mov	rbx, rdi
0x44424c:	mov	rdi, rbp
0x44424f:	sub	rsp, 8
0x444253:	call	0x403f40
0x444258:	test	eax, eax
0x44425a:	jne	0x42cc99
0x444260:	mov	rax, qword ptr [rip + 0xa2301]
0x444267:	mov	r9, qword ptr [rbx - 0x10]
0x44426b:	lea	rdi, [rbx - 0x10]
0x44426f:	test	rax, rax
0x444272:	je	0x4442e8
0x444274:	lea	rsi, [rdi + r9]
0x444278:	cmp	rax, rsi
0x44427b:	ja	0x4442e8
0x44427d:	mov	rdx, qword ptr [rax + 8]
0x444281:	je	0x444338
0x444287:	lea	r8, [rip + 0xa22da]
0x44428e:	test	rdx, rdx
0x444291:	jne	0x4442ab
0x444293:	jmp	0x4442c0
0x444295:	nop	dword ptr [rax]
0x444298:	mov	rcx, qword ptr [rdx + 8]
0x44429c:	lea	r8, [rax + 8]
0x4442a0:	test	rcx, rcx
0x4442a3:	je	0x444320
0x4442a5:	mov	rax, rdx
0x4442a8:	mov	rdx, rcx
0x4442ab:	cmp	rsi, rdx
0x4442ae:	jb	0x444298
0x4442b0:	jne	0x4442bd
0x4442b2:	mov	rdx, qword ptr [rsi + 8]
0x4442b6:	add	r9, qword ptr [rsi]
0x4442b9:	mov	qword ptr [rax + 8], rdx
0x4442bd:	mov	rax, qword ptr [r8]
0x4442c0:	mov	rdx, qword ptr [rax]
0x4442c3:	lea	rcx, [rax + rdx]
0x4442c7:	cmp	rdi, rcx
0x4442ca:	je	0x444310
0x4442cc:	mov	rax, qword ptr [rax + 8]
0x4442d0:	mov	qword ptr [rbx - 0x10], r9
0x4442d4:	mov	qword ptr [rbx - 8], rax
0x4442d8:	mov	rax, qword ptr [r8]
0x4442db:	mov	qword ptr [rax + 8], rdi
0x4442df:	jmp	0x4442f3
0x4442e1:	nop	dword ptr [rax]
0x4442e8:	mov	qword ptr [rbx - 8], rax
0x4442ec:	mov	qword ptr [rip + 0xa2275], rdi
0x4442f3:	mov	rdi, rbp
0x4442f6:	call	0x403c90
0x4442fb:	test	eax, eax
0x4442fd:	jne	0x42cc94
0x444303:	add	rsp, 8
0x444307:	pop	rbx
0x444308:	pop	rbp
0x444309:	ret	
0x44430a:	nop	word ptr [rax + rax]
0x444310:	add	rdx, r9
0x444313:	mov	qword ptr [rax], rdx
0x444316:	jmp	0x4442f3
0x444318:	nop	dword ptr [rax + rax]
0x444320:	mov	rax, qword ptr [rax + 8]
0x444324:	mov	rdx, qword ptr [rax]
0x444327:	lea	rcx, [rax + rdx]
0x44432b:	cmp	rdi, rcx
0x44432e:	jne	0x4442cc
0x444330:	jmp	0x444310
0x444332:	nop	word ptr [rax + rax]
0x444338:	add	r9, qword ptr [rax]
0x44433b:	mov	qword ptr [rbx - 8], rdx
0x44433f:	mov	qword ptr [rbx - 0x10], r9
0x444343:	mov	qword ptr [rip + 0xa221e], rdi
0x44434a:	jmp	0x4442f3
0x44434c:	nop	dword ptr [rax]
0x444350:	push	r12
0x444352:	mov	r12, rdi
0x444355:	push	rbp
0x444356:	lea	rbp, [rip + 0xa21e3]
0x44435d:	mov	rdi, rbp
0x444360:	sub	rsp, 8
0x444364:	call	0x403f40
0x444369:	test	eax, eax
0x44436b:	jne	0x42cc9e
0x444371:	lea	rax, [r12 + 0x10]
0x444376:	mov	edx, 0x10
0x44437b:	mov	r12, qword ptr [rip + 0xa21e6]
0x444382:	lea	rsi, [rip + 0xa21df]
0x444389:	cmp	rax, rdx
0x44438c:	cmovb	rax, rdx
0x444390:	add	rax, 0xf
0x444394:	and	rax, 0xfffffffffffffff0
0x444398:	test	r12, r12
0x44439b:	jne	0x4443a9
0x44439d:	jmp	0x4443d3
0x44439f:	nop	
0x4443a0:	lea	rsi, [rdx + 8]
0x4443a4:	test	r12, r12
0x4443a7:	je	0x4443d3
0x4443a9:	mov	rcx, qword ptr [r12]
0x4443ad:	mov	rdx, r12
0x4443b0:	mov	r12, qword ptr [r12 + 8]
0x4443b5:	cmp	rax, rcx
0x4443b8:	ja	0x4443a0
0x4443ba:	mov	rdi, rcx
0x4443bd:	sub	rdi, rax
0x4443c0:	cmp	rdi, 0xf
0x4443c4:	ja	0x4443f0
0x4443c6:	mov	qword ptr [rdx], rcx
0x4443c9:	mov	rcx, r12
0x4443cc:	mov	qword ptr [rsi], rcx
0x4443cf:	lea	r12, [rdx + 0x10]
0x4443d3:	mov	rdi, rbp
0x4443d6:	call	0x403c90
0x4443db:	test	eax, eax
0x4443dd:	jne	0x42cca3
0x4443e3:	add	rsp, 8
0x4443e7:	mov	rax, r12
0x4443ea:	pop	rbp
0x4443eb:	pop	r12
0x4443ed:	ret	
0x4443ee:	nop	
0x4443f0:	lea	rcx, [rdx + rax]
0x4443f4:	mov	qword ptr [rcx + 8], r12
0x4443f8:	mov	rdx, qword ptr [rsi]
0x4443fb:	mov	qword ptr [rcx], rdi
0x4443fe:	mov	qword ptr [rdx], rax
0x444401:	jmp	0x4443cc
0x444403:	nop	word ptr cs:[rax + rax]
0x44440d:	nop	dword ptr [rax]
0x444410:	endbr64	
0x444414:	mov	rdi, qword ptr [rip + 0xa2155]
0x44441b:	test	rdi, rdi
0x44441e:	je	0x444440
0x444420:	sub	rsp, 8
0x444424:	call	0x403830
0x444429:	mov	qword ptr [rip + 0xa213c], 0
0x444434:	add	rsp, 8
0x444438:	ret	
0x444439:	nop	dword ptr [rax]
0x444440:	ret	
0x444441:	nop	word ptr cs:[rax + rax]
0x44444b:	nop	dword ptr [rax + rax]
0x444450:	endbr64	
0x444454:	push	rbp
0x444455:	lea	rbp, [rdi + 0x80]
0x44445c:	mov	rdi, rbp
0x44445f:	call	0x403ca0
0x444464:	test	rax, rax
0x444467:	je	0x44449d
0x444469:	lea	rdi, [rax + 8]
0x44446d:	mov	qword ptr [rax], 0
0x444474:	lea	r8, [rax + 0x80]
0x44447b:	and	rdi, 0xfffffffffffffff8
0x44447f:	mov	qword ptr [rax + 0x78], 0
0x444487:	sub	rax, rdi
0x44448a:	lea	ecx, [rax + 0x80]
0x444490:	xor	eax, eax
0x444492:	shr	ecx, 3
0x444495:	rep stosq	qword ptr [rdi], rax
0x444498:	mov	rax, r8
0x44449b:	pop	rbp
0x44449c:	ret	
0x44449d:	mov	rdi, rbp
0x4444a0:	call	0x444350
0x4444a5:	test	rax, rax
0x4444a8:	jne	0x444469
0x4444aa:	call	0x445370
0x4444af:	nop	
0x4444b0:	endbr64	
0x4444b4:	mov	rax, qword ptr [rip + 0xa20b5]
0x4444bb:	add	rdi, -0x80
0x4444bf:	cmp	rdi, rax
0x4444c2:	jbe	0x4444e0
0x4444c4:	add	rax, qword ptr [rip + 0xa20ad]
0x4444cb:	cmp	rdi, rax
0x4444ce:	jae	0x4444e0
0x4444d0:	sub	rsp, 8
0x4444d4:	call	0x444240
0x4444d9:	add	rsp, 8
0x4444dd:	ret	
0x4444de:	nop	
0x4444e0:	jmp	0x403830
0x4444e5:	nop	word ptr cs:[rax + rax]
0x4444ef:	nop	
0x4444f0:	endbr64	
0x4444f4:	sub	rsp, 8
0x4444f8:	mov	edi, 0x70
0x4444fd:	call	0x403ca0
0x444502:	test	rax, rax
0x444505:	je	0x44453a
0x444507:	mov	r8, rax
0x44450a:	lea	rdi, [r8 + 8]
0x44450e:	mov	rcx, r8
0x444511:	xor	eax, eax
0x444513:	mov	qword ptr [r8], 0
0x44451a:	and	rdi, 0xfffffffffffffff8
0x44451e:	mov	qword ptr [r8 + 0x68], 0
0x444526:	sub	rcx, rdi
0x444529:	add	ecx, 0x70
0x44452c:	shr	ecx, 3
0x44452f:	rep stosq	qword ptr [rdi], rax
0x444532:	mov	rax, r8
0x444535:	add	rsp, 8
0x444539:	ret	
0x44453a:	mov	edi, 0x70
0x44453f:	call	0x444350
0x444544:	mov	r8, rax
0x444547:	test	rax, rax
0x44454a:	jne	0x44450a
0x44454c:	call	0x445370
0x444551:	nop	word ptr cs:[rax + rax]
0x44455b:	nop	dword ptr [rax + rax]
0x444560:	endbr64	
0x444564:	mov	rax, qword ptr [rip + 0xa2005]
0x44456b:	cmp	rdi, rax
0x44456e:	jbe	0x444590
0x444570:	add	rax, qword ptr [rip + 0xa2001]
0x444577:	cmp	rdi, rax
0x44457a:	jae	0x444590
0x44457c:	sub	rsp, 8
0x444580:	call	0x444240
0x444585:	add	rsp, 8
0x444589:	ret	
0x44458a:	nop	word ptr [rax + rax]
0x444590:	jmp	0x403830
0x444595:	nop	word ptr cs:[rax + rax]
0x44459f:	nop	
0x4445a0:	endbr64	
0x4445a4:	mov	rax, qword ptr [rdi - 8]
0x4445a8:	ret	
0x4445a9:	nop	dword ptr [rax]
0x4445b0:	endbr64	
0x4445b4:	push	rbx
0x4445b5:	mov	rbx, rdi
0x4445b8:	call	0x444850
0x4445bd:	lea	rcx, [rbx - 0x50]
0x4445c1:	movabs	rdx, 0xb8b1aabcbcd4d500
0x4445cb:	add	rdx, qword ptr [rbx]
0x4445ce:	mov	r8, qword ptr [rax]
0x4445d1:	cmp	rdx, 1
0x4445d5:	jbe	0x4445e8
0x4445d7:	test	r8, r8
0x4445da:	jne	0x444617
0x4445dc:	mov	qword ptr [rax], rcx
0x4445df:	mov	rax, r8
0x4445e2:	pop	rbx
0x4445e3:	ret	
0x4445e4:	nop	dword ptr [rax]
0x4445e8:	mov	edi, dword ptr [rbx - 0x28]
0x4445eb:	mov	esi, 1
0x4445f0:	sub	esi, edi
0x4445f2:	lea	edx, [rdi + 1]
0x4445f5:	test	edi, edi
0x4445f7:	cmovs	edx, esi
0x4445fa:	mov	dword ptr [rbx - 0x28], edx
0x4445fd:	sub	dword ptr [rax + 8], 1
0x444601:	cmp	r8, rcx
0x444604:	je	0x44460d
0x444606:	mov	qword ptr [rbx - 0x30], r8
0x44460a:	mov	qword ptr [rax], rcx
0x44460d:	mov	r8, qword ptr [rbx - 8]
0x444611:	nop	
0x444612:	mov	rax, r8
0x444615:	pop	rbx
0x444616:	ret	
0x444617:	call	0x445370
0x44461c:	nop	dword ptr [rax]
0x444620:	endbr64	
0x444624:	sub	rsp, 8
0x444628:	call	0x444830
0x44462d:	mov	rdi, qword ptr [rax]
0x444630:	test	rdi, rdi
0x444633:	je	0x44465d
0x444635:	movabs	rdx, 0xb8b1aabcbcd4d500
0x44463f:	add	rdx, qword ptr [rdi + 0x50]
0x444643:	cmp	rdx, 1
0x444647:	ja	0x444680
0x444649:	mov	edx, dword ptr [rdi + 0x28]
0x44464c:	test	edx, edx
0x44464e:	js	0x444668
0x444650:	sub	edx, 1
0x444653:	je	0x444698
0x444655:	cmp	edx, -1
0x444658:	je	0x4446ac
0x44465a:	mov	dword ptr [rdi + 0x28], edx
0x44465d:	add	rsp, 8
0x444661:	ret	
0x444662:	nop	word ptr [rax + rax]
0x444668:	add	edx, 1
0x44466b:	jne	0x44465a
0x44466d:	mov	rcx, qword ptr [rdi + 0x20]
0x444671:	mov	qword ptr [rax], rcx
0x444674:	jmp	0x44465a
0x444676:	nop	word ptr cs:[rax + rax]
0x444680:	mov	qword ptr [rax], 0
0x444687:	add	rdi, 0x50
0x44468b:	add	rsp, 8
0x44468f:	jmp	0x4580d0
0x444694:	nop	dword ptr [rax]
0x444698:	mov	rdx, qword ptr [rdi + 0x20]
0x44469c:	add	rdi, 0x50
0x4446a0:	mov	qword ptr [rax], rdx
0x4446a3:	add	rsp, 8
0x4446a7:	jmp	0x4580d0
0x4446ac:	call	0x445370
0x4446b1:	nop	word ptr cs:[rax + rax]
0x4446bb:	nop	dword ptr [rax + rax]
0x4446c0:	endbr64	
0x4446c4:	sub	rsp, 8
0x4446c8:	call	0x444850
0x4446cd:	mov	eax, dword ptr [rax + 8]
0x4446d0:	test	eax, eax
0x4446d2:	setne	al
0x4446d5:	add	rsp, 8
0x4446d9:	ret	
0x4446da:	nop	word ptr [rax + rax]
0x4446e0:	endbr64	
0x4446e4:	sub	rsp, 8
0x4446e8:	call	0x444850
0x4446ed:	mov	eax, dword ptr [rax + 8]
0x4446f0:	add	rsp, 8
0x4446f4:	ret	
0x4446f5:	nop	word ptr cs:[rax + rax]
0x4446ff:	nop	
0x444700:	endbr64	
0x444704:	ret	
0x444705:	nop	word ptr cs:[rax + rax]
0x44470f:	nop	
0x444710:	endbr64	
0x444714:	mov	rax, 0x4e1b40
0x44471b:	add	rax, 0x10
0x44471f:	mov	qword ptr [rdi], rax
0x444722:	jmp	0x444700
0x444727:	nop	word ptr [rax + rax]
0x444730:	endbr64	
0x444734:	lea	rax, [rip + 0x881ce]
0x44473b:	ret	
0x44473c:	nop	dword ptr [rax]
0x444740:	endbr64	
0x444744:	lea	rax, [rip + 0x881cd]
0x44474b:	ret	
0x44474c:	nop	dword ptr [rax]
0x444750:	endbr64	
0x444754:	push	rbp
0x444755:	mov	rbp, rdi
0x444758:	call	0x444700
0x44475d:	mov	rdi, rbp
0x444760:	mov	esi, 8
0x444765:	pop	rbp
0x444766:	jmp	0x440230
0x44476b:	nop	dword ptr [rax + rax]
0x444770:	endbr64	
0x444774:	push	rbp
0x444775:	mov	rbp, rdi
0x444778:	call	0x444710
0x44477d:	mov	rdi, rbp
0x444780:	mov	esi, 8
0x444785:	pop	rbp
0x444786:	jmp	0x440230
0x44478b:	nop	dword ptr [rax + rax]
0x444790:	endbr64	
0x444794:	ret	
0x444795:	nop	word ptr cs:[rax + rax]
0x44479f:	nop	
0x4447a0:	endbr64	
0x4447a4:	push	rbp
0x4447a5:	mov	rbp, rdi
0x4447a8:	call	0x444790
0x4447ad:	mov	rdi, rbp
0x4447b0:	mov	esi, 8
0x4447b5:	pop	rbp
0x4447b6:	jmp	0x440230
0x4447bb:	nop	dword ptr [rax + rax]
0x4447c0:	endbr64	
0x4447c4:	ret	
0x4447c5:	nop	word ptr cs:[rax + rax]
0x4447cf:	nop	
0x4447d0:	endbr64	
0x4447d4:	push	rbp
0x4447d5:	mov	rbp, rdi
0x4447d8:	call	0x4447c0
0x4447dd:	mov	rdi, rbp
0x4447e0:	mov	esi, 8
0x4447e5:	pop	rbp
0x4447e6:	jmp	0x440230
0x4447eb:	nop	dword ptr [rax + rax]
0x4447f0:	endbr64	
0x4447f4:	ret	
0x4447f5:	nop	word ptr cs:[rax + rax]
0x4447ff:	nop	
0x444800:	endbr64	
0x444804:	jmp	0x444730
0x444809:	nop	dword ptr [rax]
0x444810:	endbr64	
0x444814:	ret	
0x444815:	nop	word ptr cs:[rax + rax]
0x44481f:	nop	
0x444820:	endbr64	
0x444824:	jmp	0x444740
0x444829:	nop	dword ptr [rax]
0x444830:	endbr64	
0x444834:	sub	rsp, 8
0x444838:	mov	rax, qword ptr fs:[0]
0x444844:	add	rsp, 8
0x444848:	add	rax, -0x10
0x44484e:	ret	
0x44484f:	nop	
0x444850:	endbr64	
0x444854:	sub	rsp, 8
0x444858:	mov	rax, qword ptr fs:[0]
0x444864:	add	rsp, 8
0x444868:	add	rax, -0x10
0x44486e:	ret	
0x44486f:	nop	
0x444870:	push	r12
0x444872:	mov	r12, rdi
0x444875:	mov	rdi, rsi
0x444878:	push	rbp
0x444879:	mov	rbp, rsi
0x44487c:	push	rbx
0x44487d:	mov	rbx, rdx
0x444880:	sub	rsp, 0x10
0x444884:	mov	rax, qword ptr fs:[0x28]
0x44488d:	mov	qword ptr [rsp + 8], rax
0x444892:	mov	rax, qword ptr [rdx]
0x444895:	mov	qword ptr [rsp], rax
0x444899:	mov	rax, qword ptr [rsi]
0x44489c:	call	qword ptr [rax + 0x10]
0x44489f:	test	al, al
0x4448a1:	je	0x4448ae
0x4448a3:	mov	rax, qword ptr [rsp]
0x4448a7:	mov	rax, qword ptr [rax]
0x4448aa:	mov	qword ptr [rsp], rax
0x4448ae:	mov	rax, qword ptr [r12]
0x4448b2:	mov	rdx, rsp
0x4448b5:	mov	ecx, 1
0x4448ba:	mov	rsi, rbp
0x4448bd:	mov	rdi, r12
0x4448c0:	call	qword ptr [rax + 0x20]
0x4448c3:	test	al, al
0x4448c5:	je	0x4448ce
0x4448c7:	mov	rdx, qword ptr [rsp]
0x4448cb:	mov	qword ptr [rbx], rdx
0x4448ce:	mov	rdx, qword ptr [rsp + 8]
0x4448d3:	sub	rdx, qword ptr fs:[0x28]
0x4448dc:	jne	0x4448e7
0x4448de:	add	rsp, 0x10
0x4448e2:	pop	rbx
0x4448e3:	pop	rbp
0x4448e4:	pop	r12
0x4448e6:	ret	
0x4448e7:	call	0x4039f0
0x4448ec:	nop	dword ptr [rax]
0x4448f0:	mov	r9, rsi
0x4448f3:	mov	r8, rcx
0x4448f6:	mov	rsi, rdx
0x4448f9:	cmp	dil, 0x50
0x4448fd:	je	0x444948
0x4448ff:	mov	eax, edi
0x444901:	and	eax, 0xf
0x444904:	cmp	al, 0xc
0x444906:	ja	0x42cca8
0x44490c:	lea	rdx, [rip + 0x88091]
0x444913:	movzx	eax, al
0x444916:	movsxd	rax, dword ptr [rdx + rax*4]
0x44491a:	add	rax, rdx
0x44491d:	notrack jmp	rax
0x444920:	mov	rdx, qword ptr [rsi]
0x444923:	lea	rax, [rsi + 8]
0x444927:	test	rdx, rdx
0x44492a:	je	0x444940
0x44492c:	mov	ecx, edi
0x44492e:	and	ecx, 0x70
0x444931:	cmp	cl, 0x10
0x444934:	cmove	r9, rsi
0x444938:	add	rdx, r9
0x44493b:	test	dil, dil
0x44493e:	js	0x444960
0x444940:	mov	qword ptr [r8], rdx
0x444943:	ret	
0x444944:	nop	dword ptr [rax]
0x444948:	lea	rax, [rdx + 7]
0x44494c:	and	rax, 0xfffffffffffffff8
0x444950:	mov	rdx, qword ptr [rax]
0x444953:	add	rax, 8
0x444957:	mov	qword ptr [r8], rdx
0x44495a:	ret	
0x44495b:	nop	dword ptr [rax + rax]
0x444960:	mov	rdx, qword ptr [rdx]
0x444963:	mov	qword ptr [r8], rdx
0x444966:	ret	
0x444967:	nop	word ptr [rax + rax]
0x444970:	movzx	edx, word ptr [rsi]
0x444973:	lea	rax, [rsi + 2]
0x444977:	jmp	0x444927
0x444979:	nop	dword ptr [rax]
0x444980:	mov	edx, dword ptr [rsi]
0x444982:	lea	rax, [rsi + 4]
0x444986:	jmp	0x444927
0x444988:	nop	dword ptr [rax + rax]
0x444990:	movsxd	rdx, dword ptr [rsi]
0x444993:	lea	rax, [rsi + 4]
0x444997:	jmp	0x444927
0x444999:	nop	dword ptr [rax]
0x4449a0:	movsx	rdx, word ptr [rsi]
0x4449a4:	lea	rax, [rsi + 2]
0x4449a8:	jmp	0x444927
0x4449ad:	nop	dword ptr [rax]
0x4449b0:	mov	rax, rsi
0x4449b3:	xor	edx, edx
0x4449b5:	xor	ecx, ecx
0x4449b7:	nop	word ptr [rax + rax]
0x4449c0:	movzx	r11d, byte ptr [rax]
0x4449c4:	add	rax, 1
0x4449c8:	mov	r10, r11
0x4449cb:	and	r10d, 0x7f
0x4449cf:	shl	r10, cl
0x4449d2:	add	ecx, 7
0x4449d5:	or	rdx, r10
0x4449d8:	test	r11b, r11b
0x4449db:	js	0x4449c0
0x4449dd:	jmp	0x444927
0x4449e2:	nop	word ptr [rax + rax]
0x4449e8:	mov	rax, rsi
0x4449eb:	xor	edx, edx
0x4449ed:	xor	ecx, ecx
0x4449ef:	nop	
0x4449f0:	movzx	r11d, byte ptr [rax]
0x4449f4:	add	rax, 1
0x4449f8:	mov	r10, r11
0x4449fb:	and	r10d, 0x7f
0x4449ff:	shl	r10, cl
0x444a02:	add	ecx, 7
0x444a05:	or	rdx, r10
0x444a08:	test	r11b, r11b
0x444a0b:	js	0x4449f0
0x444a0d:	cmp	ecx, 0x3f
0x444a10:	ja	0x444927
0x444a16:	and	r11d, 0x40
0x444a1a:	je	0x444927
0x444a20:	mov	r10, 0xffffffffffffffff
0x444a27:	shl	r10, cl
0x444a2a:	or	rdx, r10
0x444a2d:	jmp	0x44492c
0x444a32:	nop	word ptr cs:[rax + rax]
0x444a3c:	nop	dword ptr [rax]
0x444a40:	sub	rsp, 0x18
0x444a44:	movzx	r8d, byte ptr [rdi + 0x28]
0x444a49:	mov	rax, qword ptr fs:[0x28]
0x444a52:	mov	qword ptr [rsp + 8], rax
0x444a57:	xor	eax, eax
0x444a59:	cmp	r8b, 0xff
0x444a5d:	je	0x444ae8
0x444a63:	mov	eax, r8d
0x444a66:	and	eax, 7
0x444a69:	cmp	al, 2
0x444a6b:	je	0x444ad8
0x444a6d:	jbe	0x444ab0
0x444a6f:	lea	rdx, [rsi*4]
0x444a77:	neg	rdx
0x444a7a:	cmp	al, 3
0x444a7c:	jne	0x444ac8
0x444a7e:	mov	rsi, qword ptr [rdi + 0x10]
0x444a82:	add	rdx, qword ptr [rdi + 0x18]
0x444a86:	mov	rcx, rsp
0x444a89:	mov	edi, r8d
0x444a8c:	call	0x4448f0
0x444a91:	mov	rax, qword ptr [rsp]
0x444a95:	mov	rdx, qword ptr [rsp + 8]
0x444a9a:	sub	rdx, qword ptr fs:[0x28]
0x444aa3:	jne	0x444aec
0x444aa5:	add	rsp, 0x18
0x444aa9:	ret	
0x444aaa:	nop	word ptr [rax + rax]
0x444ab0:	test	al, al
0x444ab2:	jne	0x444af1
0x444ab4:	lea	rdx, [rsi*8]
0x444abc:	neg	rdx
0x444abf:	jmp	0x444a7e
0x444ac1:	nop	dword ptr [rax]
0x444ac8:	cmp	al, 4
0x444aca:	je	0x444ab4
0x444acc:	jmp	0x42ccae
0x444ad1:	nop	dword ptr [rax]
0x444ad8:	lea	rdx, [rsi + rsi]
0x444adc:	neg	rdx
0x444adf:	jmp	0x444a7e
0x444ae1:	nop	dword ptr [rax]
0x444ae8:	xor	edx, edx
0x444aea:	jmp	0x444a7e
0x444aec:	call	0x4039f0
0x444af1:	jmp	0x42ccae
0x444af6:	nop	word ptr cs:[rax + rax]
0x444b00:	push	r13
0x444b02:	not	rcx
0x444b05:	push	r12
0x444b07:	push	rbp
0x444b08:	mov	rbp, rsi
0x444b0b:	push	rbx
0x444b0c:	mov	rbx, rdi
0x444b0f:	sub	rsp, 0x18
0x444b13:	mov	r13, qword ptr [rdi + 0x18]
0x444b17:	mov	qword ptr [rsp + 8], rdx
0x444b1c:	lea	r12, [rsp + 8]
0x444b21:	add	r13, rcx
0x444b24:	nop	dword ptr [rax]
0x444b28:	xor	esi, esi
0x444b2a:	xor	ecx, ecx
0x444b2c:	nop	dword ptr [rax]
0x444b30:	movzx	edx, byte ptr [r13]
0x444b35:	add	r13, 1
0x444b39:	mov	rax, rdx
0x444b3c:	and	eax, 0x7f
0x444b3f:	shl	rax, cl
0x444b42:	add	ecx, 7
0x444b45:	or	rsi, rax
0x444b48:	test	dl, dl
0x444b4a:	js	0x444b30
0x444b4c:	test	rsi, rsi
0x444b4f:	je	0x444b76
0x444b51:	mov	rdi, rbx
0x444b54:	call	0x444a40
0x444b59:	mov	rdx, r12
0x444b5c:	mov	rsi, rbp
0x444b5f:	mov	rdi, rax
0x444b62:	call	0x444870
0x444b67:	test	al, al
0x444b69:	je	0x444b28
0x444b6b:	add	rsp, 0x18
0x444b6f:	pop	rbx
0x444b70:	pop	rbp
0x444b71:	pop	r12
0x444b73:	pop	r13
0x444b75:	ret	
0x444b76:	add	rsp, 0x18
0x444b7a:	xor	eax, eax
0x444b7c:	pop	rbx
0x444b7d:	pop	rbp
0x444b7e:	pop	r12
0x444b80:	pop	r13
0x444b82:	ret	
0x444b83:	nop	word ptr cs:[rax + rax]
0x444b8d:	nop	dword ptr [rax]
0x444b90:	mov	eax, edi
0x444b92:	cmp	dil, 0xff
0x444b96:	je	0x444be5
0x444b98:	mov	edx, eax
0x444b9a:	mov	rdi, rsi
0x444b9d:	and	edx, 0x70
0x444ba0:	cmp	dl, 0x30
0x444ba3:	je	0x444bf0
0x444ba5:	ja	0x444bb8
0x444ba7:	cmp	dl, 0x20
0x444baa:	jne	0x444bc8
0x444bac:	jmp	0x457710
0x444bb1:	nop	dword ptr [rax]
0x444bb8:	cmp	dl, 0x40
0x444bbb:	jne	0x444be0
0x444bbd:	jmp	0x4576c0
0x444bc2:	nop	word ptr [rax + rax]
0x444bc8:	ja	0x42ccb3
0x444bce:	test	al, 0x60
0x444bd0:	jne	0x42ccb3
0x444bd6:	jmp	0x444be5
0x444bd8:	nop	dword ptr [rax + rax]
0x444be0:	cmp	dl, 0x50
0x444be3:	jne	0x444bf5
0x444be5:	xor	eax, eax
0x444be7:	ret	
0x444be8:	nop	dword ptr [rax + rax]
0x444bf0:	jmp	0x457700
0x444bf5:	jmp	0x42ccb3
0x444bfa:	nop	word ptr [rax + rax]
0x444c00:	push	r13
0x444c02:	xor	eax, eax
0x444c04:	push	r12
0x444c06:	mov	r12, rsi
0x444c09:	push	rbp
0x444c0a:	mov	rbp, rdi
0x444c0d:	push	rbx
0x444c0e:	mov	rbx, rdx
0x444c11:	sub	rsp, 8
0x444c15:	test	rdi, rdi
0x444c18:	je	0x444c1f
0x444c1a:	call	0x4576c0
0x444c1f:	mov	qword ptr [rbx], rax
0x444c22:	movzx	edi, byte ptr [r12]
0x444c27:	lea	r13, [r12 + 1]
0x444c2c:	cmp	dil, 0xff
0x444c30:	jne	0x444cb0
0x444c32:	mov	qword ptr [rbx + 8], rax
0x444c36:	movzx	eax, byte ptr [r13]
0x444c3b:	lea	rsi, [r13 + 1]
0x444c3f:	xor	edi, edi
0x444c41:	mov	byte ptr [rbx + 0x28], al
0x444c44:	cmp	al, 0xff
0x444c46:	je	0x444c6d
0x444c48:	xor	ecx, ecx
0x444c4a:	nop	word ptr [rax + rax]
0x444c50:	movzx	edx, byte ptr [rsi]
0x444c53:	add	rsi, 1
0x444c57:	mov	rax, rdx
0x444c5a:	and	eax, 0x7f
0x444c5d:	shl	rax, cl
0x444c60:	add	ecx, 7
0x444c63:	or	rdi, rax
0x444c66:	test	dl, dl
0x444c68:	js	0x444c50
0x444c6a:	add	rdi, rsi
0x444c6d:	mov	qword ptr [rbx + 0x18], rdi
0x444c71:	movzx	eax, byte ptr [rsi]
0x444c74:	lea	r8, [rsi + 1]
0x444c78:	xor	ecx, ecx
0x444c7a:	xor	esi, esi
0x444c7c:	mov	byte ptr [rbx + 0x29], al
0x444c7f:	nop	
0x444c80:	movzx	edx, byte ptr [r8]
0x444c84:	add	r8, 1
0x444c88:	mov	rax, rdx
0x444c8b:	and	eax, 0x7f
0x444c8e:	shl	rax, cl
0x444c91:	add	ecx, 7
0x444c94:	or	rsi, rax
0x444c97:	test	dl, dl
0x444c99:	js	0x444c80
0x444c9b:	add	rsi, r8
0x444c9e:	mov	rax, r8
0x444ca1:	mov	qword ptr [rbx + 0x20], rsi
0x444ca5:	add	rsp, 8
0x444ca9:	pop	rbx
0x444caa:	pop	rbp
0x444cab:	pop	r12
0x444cad:	pop	r13
0x444caf:	ret	
0x444cb0:	movzx	r12d, dil
0x444cb4:	mov	rsi, rbp
0x444cb7:	mov	edi, r12d
0x444cba:	call	0x444b90
0x444cbf:	mov	rdx, r13
0x444cc2:	lea	rcx, [rbx + 8]
0x444cc6:	mov	edi, r12d
0x444cc9:	mov	rsi, rax
0x444ccc:	call	0x4448f0
0x444cd1:	mov	r13, rax
0x444cd4:	jmp	0x444c36
0x444cd9:	nop	dword ptr [rax]
0x444ce0:	endbr64	
0x444ce4:	push	r15
0x444ce6:	push	r14
0x444ce8:	push	r13
0x444cea:	push	r12
0x444cec:	push	rbp
0x444ced:	push	rbx
0x444cee:	sub	rsp, 0xb8
0x444cf5:	mov	dword ptr [rsp + 0xc], esi
0x444cf9:	mov	qword ptr [rsp], rcx
0x444cfd:	mov	rax, qword ptr fs:[0x28]
0x444d06:	mov	qword ptr [rsp + 0xa8], rax
0x444d0e:	xor	eax, eax
0x444d10:	mov	dword ptr [rsp + 0x4c], 0
0x444d18:	mov	qword ptr [rsp + 0x50], 0
0x444d21:	cmp	edi, 1
0x444d24:	jne	0x444d80
0x444d26:	movabs	rax, 0xb8b1aabcbcd4d500
0x444d30:	mov	rbp, r8
0x444d33:	add	rax, rdx
0x444d36:	cmp	rax, 1
0x444d3a:	mov	qword ptr [rsp + 0x18], rax
0x444d3f:	setbe	byte ptr [rsp + 0xb]
0x444d44:	cmp	esi, 6
0x444d47:	movzx	ebx, byte ptr [rsp + 0xb]
0x444d4c:	sete	al
0x444d4f:	and	al, bl
0x444d51:	mov	byte ptr [rsp + 0x20], al
0x444d55:	je	0x444db0
0x444d57:	mov	rax, qword ptr [rcx - 0x18]
0x444d5b:	mov	r15, qword ptr [rcx - 0x10]
0x444d5f:	mov	r13d, dword ptr [rcx - 0x24]
0x444d63:	mov	qword ptr [rsp + 0x10], rax
0x444d68:	test	r15, r15
0x444d6b:	jne	0x444f30
0x444d71:	mov	rdi, qword ptr [rsp]
0x444d75:	call	0x455210
0x444d7a:	nop	word ptr [rax + rax]
0x444d80:	mov	eax, 3
0x444d85:	mov	rdx, qword ptr [rsp + 0xa8]
0x444d8d:	sub	rdx, qword ptr fs:[0x28]
0x444d96:	jne	0x44529f
0x444d9c:	add	rsp, 0xb8
0x444da3:	pop	rbx
0x444da4:	pop	rbp
0x444da5:	pop	r12
0x444da7:	pop	r13
0x444da9:	pop	r14
0x444dab:	pop	r15
0x444dad:	ret	
0x444dae:	nop	
0x444db0:	mov	rdi, r8
0x444db3:	call	0x4576b0
0x444db8:	mov	qword ptr [rsp + 0x10], rax
0x444dbd:	test	rax, rax
0x444dc0:	je	0x444f82
0x444dc6:	lea	rax, [rsp + 0x70]
0x444dcb:	mov	rsi, qword ptr [rsp + 0x10]
0x444dd0:	mov	rdi, rbp
0x444dd3:	mov	rdx, rax
0x444dd6:	mov	qword ptr [rsp + 0x28], rax
0x444ddb:	call	0x444c00
0x444de0:	movzx	edi, byte ptr [rsp + 0x98]
0x444de8:	mov	rsi, rbp
0x444deb:	mov	r12, rax
0x444dee:	call	0x444b90
0x444df3:	lea	rsi, [rsp + 0x4c]
0x444df8:	mov	rdi, rbp
0x444dfb:	mov	qword ptr [rsp + 0x80], rax
0x444e03:	call	0x457680
0x444e08:	cmp	dword ptr [rsp + 0x4c], 1
0x444e0d:	sbb	rax, 0
0x444e11:	mov	rbx, rax
0x444e14:	cmp	qword ptr [rsp + 0x90], r12
0x444e1c:	jbe	0x445253
0x444e22:	mov	qword ptr [rsp + 0x30], rbp
0x444e27:	lea	r15, [rsp + 0x58]
0x444e2c:	lea	r14, [rsp + 0x60]
0x444e31:	lea	r13, [rsp + 0x68]
0x444e36:	nop	word ptr cs:[rax + rax]
0x444e40:	movzx	ebp, byte ptr [rsp + 0x99]
0x444e48:	xor	esi, esi
0x444e4a:	mov	edi, ebp
0x444e4c:	call	0x444b90
0x444e51:	mov	rdx, r12
0x444e54:	mov	rcx, r15
0x444e57:	mov	edi, ebp
0x444e59:	mov	rsi, rax
0x444e5c:	call	0x4448f0
0x444e61:	movzx	ebp, byte ptr [rsp + 0x99]
0x444e69:	xor	esi, esi
0x444e6b:	mov	r12, rax
0x444e6e:	mov	edi, ebp
0x444e70:	call	0x444b90
0x444e75:	mov	rdx, r12
0x444e78:	mov	rcx, r14
0x444e7b:	mov	edi, ebp
0x444e7d:	mov	rsi, rax
0x444e80:	call	0x4448f0
0x444e85:	movzx	ebp, byte ptr [rsp + 0x99]
0x444e8d:	xor	esi, esi
0x444e8f:	mov	r12, rax
0x444e92:	mov	edi, ebp
0x444e94:	call	0x444b90
0x444e99:	mov	rcx, r13
0x444e9c:	mov	rdx, r12
0x444e9f:	mov	edi, ebp
0x444ea1:	mov	rsi, rax
0x444ea4:	call	0x4448f0
0x444ea9:	xor	edi, edi
0x444eab:	xor	ecx, ecx
0x444ead:	mov	r12, rax
0x444eb0:	movzx	edx, byte ptr [r12]
0x444eb5:	add	r12, 1
0x444eb9:	mov	rax, rdx
0x444ebc:	and	eax, 0x7f
0x444ebf:	shl	rax, cl
0x444ec2:	add	ecx, 7
0x444ec5:	or	rdi, rax
0x444ec8:	test	dl, dl
0x444eca:	js	0x444eb0
0x444ecc:	mov	rax, qword ptr [rsp + 0x58]
0x444ed1:	add	rax, qword ptr [rsp + 0x70]
0x444ed6:	cmp	rax, rbx
0x444ed9:	jbe	0x444f90
0x444edf:	test	byte ptr [rsp + 0xc], 1
0x444ee4:	je	0x444fb0
0x444eea:	xor	r15d, r15d
0x444eed:	xor	r8d, r8d
0x444ef0:	xor	r13d, r13d
0x444ef3:	cmp	qword ptr [rsp + 0x18], 1
0x444ef9:	mov	eax, 6
0x444efe:	ja	0x444d85
0x444f04:	mov	rbx, qword ptr [rsp]
0x444f08:	mov	rax, qword ptr [rsp + 0x10]
0x444f0d:	mov	qword ptr [rbx - 0x18], rax
0x444f11:	mov	rax, qword ptr [rsp + 0x50]
0x444f16:	mov	dword ptr [rbx - 0x24], r13d
0x444f1a:	mov	qword ptr [rbx - 8], rax
0x444f1e:	mov	eax, 6
0x444f23:	mov	qword ptr [rbx - 0x20], r8
0x444f27:	mov	qword ptr [rbx - 0x10], r15
0x444f2b:	jmp	0x444d85
0x444f30:	test	r13d, r13d
0x444f33:	js	0x444fdf
0x444f39:	nop	dword ptr [rax]
0x444f40:	mov	rdx, qword ptr [rsp]
0x444f44:	xor	esi, esi
0x444f46:	mov	rdi, rbp
0x444f49:	call	0x457620
0x444f4e:	movsxd	rdx, r13d
0x444f51:	mov	esi, 1
0x444f56:	mov	rdi, rbp
0x444f59:	call	0x457620
0x444f5e:	mov	rsi, r15
0x444f61:	mov	rdi, rbp
0x444f64:	call	0x4576a0
0x444f69:	mov	eax, 7
0x444f6e:	jmp	0x444d85
0x444f73:	mov	r15, qword ptr [rsp + 0x68]
0x444f78:	mov	rbp, qword ptr [rsp + 0x30]
0x444f7d:	test	r15, r15
0x444f80:	jne	0x444fc0
0x444f82:	mov	eax, 8
0x444f87:	jmp	0x444d85
0x444f8c:	nop	dword ptr [rax]
0x444f90:	add	rax, qword ptr [rsp + 0x60]
0x444f95:	cmp	rax, rbx
0x444f98:	ja	0x444f73
0x444f9a:	cmp	qword ptr [rsp + 0x90], r12
0x444fa2:	ja	0x444e40
0x444fa8:	jmp	0x444edf
0x444fad:	nop	dword ptr [rax]
0x444fb0:	test	byte ptr [rsp + 0xc], 8
0x444fb5:	je	0x445026
0x444fb7:	call	0x445370
0x444fbc:	nop	dword ptr [rax]
0x444fc0:	add	r15, qword ptr [rsp + 0x78]
0x444fc5:	test	rdi, rdi
0x444fc8:	jne	0x445038
0x444fca:	test	r15, r15
0x444fcd:	je	0x444f82
0x444fcf:	mov	r13d, dword ptr [rsp + 0xc]
0x444fd4:	and	r13d, 1
0x444fd8:	jne	0x444f82
0x444fda:	jmp	0x444f40
0x444fdf:	mov	rsi, qword ptr [rsp + 0x10]
0x444fe4:	lea	rdx, [rsp + 0x70]
0x444fe9:	mov	rdi, rbp
0x444fec:	call	0x444c00
0x444ff1:	movzx	edi, byte ptr [rsp + 0x98]
0x444ff9:	mov	rsi, rbp
0x444ffc:	call	0x444b90
0x445001:	movzx	edi, byte ptr [rsp + 0x98]
0x445009:	mov	rsi, rbp
0x44500c:	mov	qword ptr [rsp + 0x80], rax
0x445014:	call	0x444b90
0x445019:	mov	rbx, qword ptr [rsp]
0x44501d:	mov	qword ptr [rbx - 0x10], rax
0x445021:	jmp	0x444f40
0x445026:	cmp	qword ptr [rsp + 0x18], 1
0x44502c:	ja	0x444fb7
0x44502e:	jmp	0x444d71
0x445033:	nop	dword ptr [rax + rax]
0x445038:	mov	rax, qword ptr [rsp + 0x90]
0x445040:	lea	r8, [rax + rdi - 1]
0x445045:	test	r15, r15
0x445048:	je	0x444f82
0x44504e:	test	r8, r8
0x445051:	je	0x444fcf
0x445057:	mov	eax, dword ptr [rsp + 0xc]
0x44505b:	and	eax, 8
0x44505e:	mov	dword ptr [rsp + 0x30], eax
0x445062:	jne	0x445247
0x445068:	cmp	qword ptr [rsp + 0x18], 1
0x44506e:	jbe	0x445280
0x445074:	mov	rax, 0x4e1b08
0x44507b:	movzx	ebx, byte ptr [rsp + 0x20]
0x445080:	mov	qword ptr [rsp + 0x38], rbp
0x445085:	mov	r13, r8
0x445088:	mov	r12, rax
0x44508b:	mov	qword ptr [rsp + 0x20], r15
0x445090:	mov	rbp, r13
0x445093:	xor	r15d, r15d
0x445096:	xor	ecx, ecx
0x445098:	nop	dword ptr [rax + rax]
0x4450a0:	movzx	edx, byte ptr [rbp]
0x4450a4:	add	rbp, 1
0x4450a8:	mov	rax, rdx
0x4450ab:	and	eax, 0x7f
0x4450ae:	shl	rax, cl
0x4450b1:	add	ecx, 7
0x4450b4:	or	r15, rax
0x4450b7:	test	dl, dl
0x4450b9:	js	0x4450a0
0x4450bb:	cmp	ecx, 0x3f
0x4450be:	ja	0x4450d3
0x4450c0:	and	edx, 0x40
0x4450c3:	je	0x4450d3
0x4450c5:	mov	eax, 1
0x4450ca:	shl	rax, cl
0x4450cd:	neg	rax
0x4450d0:	or	r15, rax
0x4450d3:	mov	rdx, rbp
0x4450d6:	xor	r14d, r14d
0x4450d9:	xor	ecx, ecx
0x4450db:	nop	dword ptr [rax + rax]
0x4450e0:	movzx	esi, byte ptr [rdx]
0x4450e3:	add	rdx, 1
0x4450e7:	mov	rax, rsi
0x4450ea:	and	eax, 0x7f
0x4450ed:	shl	rax, cl
0x4450f0:	add	ecx, 7
0x4450f3:	or	r14, rax
0x4450f6:	test	sil, sil
0x4450f9:	js	0x4450e0
0x4450fb:	cmp	ecx, 0x3f
0x4450fe:	ja	0x445113
0x445100:	and	esi, 0x40
0x445103:	je	0x445113
0x445105:	mov	eax, 1
0x44510a:	shl	rax, cl
0x44510d:	neg	rax
0x445110:	or	r14, rax
0x445113:	test	r15, r15
0x445116:	je	0x445180
0x445118:	jg	0x445187
0x44511a:	mov	edx, dword ptr [rsp + 0x30]
0x44511e:	test	edx, edx
0x445120:	sete	al
0x445123:	test	byte ptr [rsp + 0xb], al
0x445127:	je	0x445132
0x445129:	test	r12, r12
0x44512c:	jne	0x4451f0
0x445132:	mov	rdx, r15
0x445135:	xor	edi, edi
0x445137:	xor	ecx, ecx
0x445139:	not	rdx
0x44513c:	add	rdx, qword ptr [rsp + 0x88]
0x445144:	nop	dword ptr [rax]
0x445148:	movzx	esi, byte ptr [rdx]
0x44514b:	add	rdx, 1
0x44514f:	mov	rax, rsi
0x445152:	and	eax, 0x7f
0x445155:	shl	rax, cl
0x445158:	add	ecx, 7
0x44515b:	or	rdi, rax
0x44515e:	test	sil, sil
0x445161:	js	0x445148
0x445163:	test	rdi, rdi
0x445166:	je	0x4451b2
0x445168:	test	r14, r14
0x44516b:	je	0x445230
0x445171:	lea	r13, [rbp + r14]
0x445176:	jmp	0x445090
0x44517b:	nop	dword ptr [rax + rax]
0x445180:	mov	ebx, 1
0x445185:	jmp	0x445168
0x445187:	mov	rdi, qword ptr [rsp + 0x28]
0x44518c:	mov	rsi, r15
0x44518f:	call	0x444a40
0x445194:	mov	rdi, rax
0x445197:	test	rax, rax
0x44519a:	je	0x4451b2
0x44519c:	test	r12, r12
0x44519f:	je	0x445168
0x4451a1:	lea	rdx, [rsp + 0x50]
0x4451a6:	mov	rsi, r12
0x4451a9:	call	0x444870
0x4451ae:	test	al, al
0x4451b0:	je	0x445168
0x4451b2:	mov	r8, r13
0x4451b5:	mov	rbp, qword ptr [rsp + 0x38]
0x4451ba:	mov	r13, r15
0x4451bd:	mov	r15, qword ptr [rsp + 0x20]
0x4451c2:	test	byte ptr [rsp + 0xc], 1
0x4451c7:	jne	0x444ef3
0x4451cd:	mov	eax, dword ptr [rsp + 0x30]
0x4451d1:	test	eax, eax
0x4451d3:	jne	0x4451e1
0x4451d5:	cmp	qword ptr [rsp + 0x18], 1
0x4451db:	jbe	0x444f30
0x4451e1:	test	r13d, r13d
0x4451e4:	jns	0x444f40
0x4451ea:	call	0x4453f0
0x4451ef:	nop	
0x4451f0:	mov	rdx, qword ptr [rsp + 0x50]
0x4451f5:	mov	rdi, qword ptr [rsp + 0x28]
0x4451fa:	mov	rcx, r15
0x4451fd:	mov	rsi, r12
0x445200:	call	0x444b00
0x445205:	test	al, al
0x445207:	jne	0x445168
0x44520d:	mov	eax, dword ptr [rsp + 0xc]
0x445211:	mov	r8, r13
0x445214:	mov	rbp, qword ptr [rsp + 0x38]
0x445219:	mov	r13, r15
0x44521c:	mov	r15, qword ptr [rsp + 0x20]
0x445221:	and	eax, 1
0x445224:	jne	0x444f04
0x44522a:	jmp	0x4451d5
0x44522c:	nop	dword ptr [rax]
0x445230:	mov	r15, qword ptr [rsp + 0x20]
0x445235:	mov	rbp, qword ptr [rsp + 0x38]
0x44523a:	test	bl, bl
0x44523c:	jne	0x444fcf
0x445242:	jmp	0x444f82
0x445247:	mov	rax, 0x4e1af8
0x44524e:	jmp	0x44507b
0x445253:	test	byte ptr [rsp + 0xc], 1
0x445258:	jne	0x444eea
0x44525e:	test	byte ptr [rsp + 0xc], 8
0x445263:	jne	0x444fb7
0x445269:	cmp	qword ptr [rsp + 0x18], 1
0x44526f:	jbe	0x444d71
0x445275:	jmp	0x444fb7
0x44527a:	nop	word ptr [rax + rax]
0x445280:	mov	rbx, qword ptr [rsp]
0x445284:	lea	rax, [rbx + 0x20]
0x445288:	test	byte ptr [rbx], 1
0x44528b:	je	0x445291
0x44528d:	mov	rax, qword ptr [rbx - 0x50]
0x445291:	mov	qword ptr [rsp + 0x50], rax
0x445296:	mov	rax, qword ptr [rax - 0x70]
0x44529a:	jmp	0x44507b
0x44529f:	call	0x4039f0
0x4452a4:	endbr64	
0x4452a8:	mov	rdi, rax
0x4452ab:	jmp	0x42ccb9
0x4452b0:	endbr64	
0x4452b4:	push	r14
0x4452b6:	push	r13
0x4452b8:	push	r12
0x4452ba:	push	rbp
0x4452bb:	push	rbx
0x4452bc:	mov	rbx, rdi
0x4452bf:	sub	rsp, 0x40
0x4452c3:	mov	rax, qword ptr fs:[0x28]
0x4452cc:	mov	qword ptr [rsp + 0x38], rax
0x4452d1:	xor	eax, eax
0x4452d3:	call	0x4445b0
0x4452d8:	mov	rax, qword ptr [rbx - 0x10]
0x4452dc:	mov	rdi, qword ptr [rbx - 0x40]
0x4452e0:	mov	r13, qword ptr [rbx - 0x18]
0x4452e4:	mov	ebp, dword ptr [rbx - 0x24]
0x4452e7:	mov	qword ptr [rsp + 0x10], rax
0x4452ec:	mov	r12, qword ptr [rbx - 0x38]
0x4452f0:	call	0x445390
0x4452f5:	endbr64	
0x4452f9:	mov	rdi, rax
0x4452fc:	jmp	0x42ccc3
0x445301:	nop	word ptr cs:[rax + rax]
0x44530b:	nop	dword ptr [rax + rax]
0x445310:	endbr64	
0x445314:	push	rax
0x445315:	pop	rax
0x445316:	sub	rsp, 8
0x44531a:	call	rdi
0x44531c:	jmp	0x42cd78
0x445321:	endbr64	
0x445325:	mov	rdi, rax
0x445328:	jmp	0x42cd73
0x44532d:	nop	dword ptr [rax]
0x445330:	endbr64	
0x445334:	mov	rax, rdi
0x445337:	test	rdi, rdi
0x44533a:	je	0x445350
0x44533c:	mov	rdx, 0x4e3040
0x445343:	xchg	qword ptr [rdx], rax
0x445346:	ret	
0x445347:	nop	word ptr [rax + rax]
0x445350:	mov	rax, 0x445580
0x445357:	jmp	0x44533c
0x445359:	nop	dword ptr [rax]
0x445360:	endbr64	
0x445364:	mov	rax, 0x4e3040
0x44536b:	mov	rax, qword ptr [rax]
0x44536e:	ret	
0x44536f:	nop	
0x445370:	endbr64	
0x445374:	push	rax
0x445375:	pop	rax
0x445376:	sub	rsp, 8
0x44537a:	call	0x445360
0x44537f:	mov	rdi, rax
0x445382:	call	0x445310
0x445387:	nop	word ptr [rax + rax]
0x445390:	endbr64	
0x445394:	push	rax
0x445395:	pop	rax
0x445396:	sub	rsp, 8
0x44539a:	call	rdi
0x44539c:	call	0x445370
0x4453a1:	nop	word ptr cs:[rax + rax]
0x4453ab:	nop	dword ptr [rax + rax]
0x4453b0:	endbr64	
0x4453b4:	mov	rax, rdi
0x4453b7:	test	rdi, rdi
0x4453ba:	je	0x4453d0
0x4453bc:	mov	rdx, 0x4e3030
0x4453c3:	xchg	qword ptr [rdx], rax
0x4453c6:	ret	
0x4453c7:	nop	word ptr [rax + rax]
0x4453d0:	mov	rax, 0x445370
0x4453d7:	jmp	0x4453bc
0x4453d9:	nop	dword ptr [rax]
0x4453e0:	endbr64	
0x4453e4:	mov	rax, 0x4e3030
0x4453eb:	mov	rax, qword ptr [rax]
0x4453ee:	ret	
0x4453ef:	nop	
0x4453f0:	endbr64	
0x4453f4:	push	rax
0x4453f5:	pop	rax
0x4453f6:	sub	rsp, 8
0x4453fa:	call	0x4453e0
0x4453ff:	mov	rdi, rax
0x445402:	call	0x445390
0x445407:	nop	word ptr [rax + rax]
0x445410:	endbr64	
0x445414:	push	rbp
0x445415:	cmp	edi, 1
0x445418:	ja	0x445442
0x44541a:	lock sub	dword ptr [rsi - 0x60], 1
0x44541f:	jne	0x445440
0x445421:	mov	rax, qword ptr [rsi - 0x48]
0x445425:	lea	rbp, [rsi + 0x20]
0x445429:	test	rax, rax
0x44542c:	je	0x445433
0x44542e:	mov	rdi, rbp
0x445431:	call	rax
0x445433:	mov	rdi, rbp
0x445436:	pop	rbp
0x445437:	jmp	0x4444b0
0x44543c:	nop	dword ptr [rax]
0x445440:	pop	rbp
0x445441:	ret	
0x445442:	mov	rdi, qword ptr [rsi - 0x38]
0x445446:	call	0x445310
0x44544b:	nop	dword ptr [rax + rax]
0x445450:	endbr64	
0x445454:	push	rbx
0x445455:	mov	rbx, rdi
0x445458:	mov	dword ptr [rdi - 0x80], 0
0x44545f:	mov	qword ptr [rdi - 0x70], rsi
0x445463:	mov	qword ptr [rdi - 0x68], rdx
0x445467:	call	0x4453e0
0x44546c:	mov	qword ptr [rbx - 0x60], rax
0x445470:	call	0x445360
0x445475:	mov	qword ptr [rbx - 0x58], rax
0x445479:	movabs	rax, 0x474e5543432b2b00
0x445483:	mov	qword ptr [rbx - 0x20], rax
0x445487:	lea	rax, [rip - 0x7e]
0x44548e:	mov	qword ptr [rbx - 0x18], rax
0x445492:	lea	rax, [rbx - 0x80]
0x445496:	pop	rbx
0x445497:	ret	
0x445498:	nop	dword ptr [rax + rax]
0x4454a0:	endbr64	
0x4454a4:	push	r13
0x4454a6:	mov	r13, rdx
0x4454a9:	push	r12
0x4454ab:	mov	r12, rsi
0x4454ae:	push	rbp
0x4454af:	mov	rbp, rdi
0x4454b2:	nop	
0x4454b3:	call	0x444850
0x4454b8:	mov	rdx, r13
0x4454bb:	mov	rsi, r12
0x4454be:	mov	rdi, rbp
0x4454c1:	add	dword ptr [rax + 8], 1
0x4454c5:	call	0x445450
0x4454ca:	mov	dword ptr [rax], 1
0x4454d0:	lea	rbp, [rax + 0x60]
0x4454d4:	mov	rdi, rbp
0x4454d7:	call	0x457850
0x4454dc:	mov	rdi, rbp
0x4454df:	call	0x4445b0
0x4454e4:	call	0x445370
0x4454e9:	nop	dword ptr [rax]
0x4454f0:	endbr64	
0x4454f4:	push	rbp
0x4454f5:	call	0x444850
0x4454fa:	mov	rdi, qword ptr [rax]
0x4454fd:	add	dword ptr [rax + 8], 1
0x445501:	test	rdi, rdi
0x445504:	je	0x445538
0x445506:	movabs	rdx, 0xb8b1aabcbcd4d500
0x445510:	mov	rcx, qword ptr [rdi + 0x50]
0x445514:	add	rdx, rcx
0x445517:	cmp	rdx, 1
0x44551b:	jbe	0x44553d
0x44551d:	mov	qword ptr [rax], 0
0x445524:	lea	rbp, [rdi + 0x50]
0x445528:	mov	rdi, rbp
0x44552b:	call	0x457fb0
0x445530:	mov	rdi, rbp
0x445533:	call	0x4445b0
0x445538:	call	0x445370
0x44553d:	mov	rax, qword ptr [rdi]
0x445540:	neg	dword ptr [rdi + 0x28]
0x445543:	and	cl, 1
0x445546:	mov	rdx, rax
0x445549:	je	0x44554e
0x44554b:	nop	
0x44554c:	jmp	0x445524
0x44554e:	lea	rdx, [rdi + 0x70]
0x445552:	jmp	0x44554b
0x445554:	nop	word ptr cs:[rax + rax]
0x44555e:	nop	
0x445560:	endbr64	
0x445564:	mov	rax, rdi
0x445567:	xchg	qword ptr [rip + 0xa1012], rax
0x44556e:	ret	
0x44556f:	nop	
0x445570:	endbr64	
0x445574:	mov	rax, qword ptr [rip + 0xa1005]
0x44557b:	ret	
0x44557c:	nop	dword ptr [rax]
0x445580:	endbr64	
0x445584:	push	r12
0x445586:	push	rbp
0x445587:	push	rbx
0x445588:	sub	rsp, 0x10
0x44558c:	mov	rax, qword ptr fs:[0x28]
0x445595:	mov	qword ptr [rsp + 8], rax
0x44559a:	xor	eax, eax
0x44559c:	cmp	byte ptr [rip + 0xa0fe5], 0
0x4455a3:	jne	0x445685
0x4455a9:	mov	byte ptr [rip + 0xa0fd8], 1
0x4455b0:	call	0x455250
0x4455b5:	test	rax, rax
0x4455b8:	je	0x445660
0x4455be:	mov	rbp, qword ptr [rax + 8]
0x4455c2:	xor	eax, eax
0x4455c4:	lea	rcx, [rsp + 4]
0x4455c9:	cmp	byte ptr [rbp], 0x2a
0x4455cd:	mov	dword ptr [rsp + 4], 0xffffffff
0x4455d5:	sete	al
0x4455d8:	xor	edx, edx
0x4455da:	xor	esi, esi
0x4455dc:	add	rbp, rax
0x4455df:	mov	rdi, rbp
0x4455e2:	call	0x455060
0x4455e7:	mov	edx, 0x30
0x4455ec:	mov	rbx, qword ptr [rip + 0x9ca05]
0x4455f3:	mov	esi, 1
0x4455f8:	lea	rdi, [rip + 0x87409]
0x4455ff:	mov	r12, rax
0x445602:	mov	rcx, qword ptr [rbx]
0x445605:	call	0x403e80
0x44560a:	mov	edx, dword ptr [rsp + 4]
0x44560e:	mov	rsi, qword ptr [rbx]
0x445611:	test	edx, edx
0x445613:	je	0x445650
0x445615:	mov	rdi, rbp
0x445618:	call	0x403aa0
0x44561d:	mov	rcx, qword ptr [rbx]
0x445620:	mov	edx, 2
0x445625:	mov	esi, 1
0x44562a:	lea	rdi, [rip + 0x873c6]
0x445631:	call	0x403e80
0x445636:	mov	eax, dword ptr [rsp + 4]
0x44563a:	test	eax, eax
0x44563c:	jne	0x42cde2
0x445642:	jmp	0x42cdda
0x445647:	nop	word ptr [rax + rax]
0x445650:	mov	rdi, r12
0x445653:	call	0x403aa0
0x445658:	jmp	0x44561d
0x44565a:	nop	word ptr [rax + rax]
0x445660:	mov	rax, qword ptr [rip + 0x9c991]
0x445667:	mov	edx, 0x2d
0x44566c:	mov	esi, 1
0x445671:	lea	rdi, [rip + 0x873c8]
0x445678:	mov	rcx, qword ptr [rax]
0x44567b:	call	0x403e80
0x445680:	jmp	0x42cdd5
0x445685:	mov	rax, qword ptr [rip + 0x9c96c]
0x44568c:	mov	edx, 0x1d
0x445691:	mov	esi, 1
0x445696:	lea	rdi, [rip + 0x8733c]
0x44569d:	mov	rcx, qword ptr [rax]
0x4456a0:	call	0x403e80
0x4456a5:	call	0x403880
0x4456aa:	nop	word ptr [rax + rax]
0x4456b0:	endbr64	
0x4456b4:	mov	rax, qword ptr [rdi + 8]
0x4456b8:	ret	
0x4456b9:	nop	dword ptr [rax]
0x4456c0:	endbr64	
0x4456c4:	push	rbp
0x4456c5:	mov	rbp, rdi
0x4456c8:	sub	rsp, 0x10
0x4456cc:	mov	rax, qword ptr fs:[0x28]
0x4456d5:	mov	qword ptr [rsp + 8], rax
0x4456da:	mov	rax, 0x4e1c90
0x4456e1:	add	rax, 0x10
0x4456e5:	mov	qword ptr [rdi], rax
0x4456e8:	mov	rax, qword ptr [rdi + 8]
0x4456ec:	lea	rdi, [rax - 0x18]
0x4456f0:	cmp	rdi, 0x4e65a0
0x4456f7:	jne	0x445720
0x4456f9:	mov	rax, qword ptr [rsp + 8]
0x4456fe:	sub	rax, qword ptr fs:[0x28]
0x445707:	jne	0x445754
0x445709:	add	rsp, 0x10
0x44570d:	mov	rdi, rbp
0x445710:	pop	rbp
0x445711:	jmp	0x444700
0x445716:	nop	word ptr cs:[rax + rax]
0x445720:	mov	rdx, qword ptr [rip + 0x9c8c1]
0x445727:	cmp	byte ptr [rdx], 0
0x44572a:	je	0x445748
0x44572c:	mov	edx, dword ptr [rax - 8]
0x44572f:	lea	ecx, [rdx - 1]
0x445732:	mov	dword ptr [rax - 8], ecx
0x445735:	test	edx, edx
0x445737:	jg	0x4456f9
0x445739:	lea	rsi, [rsp + 7]
0x44573e:	call	0x448430
0x445743:	jmp	0x4456f9
0x445745:	nop	dword ptr [rax]
0x445748:	mov	edx, 0xffffffff
0x44574d:	lock xadd	dword ptr [rax - 8], edx
0x445752:	jmp	0x445735
0x445754:	call	0x4039f0
0x445759:	nop	dword ptr [rax]
0x445760:	endbr64	
0x445764:	push	rbp
0x445765:	mov	rbp, rdi
0x445768:	call	0x4456c0
0x44576d:	mov	rdi, rbp
0x445770:	pop	rbp
0x445771:	jmp	0x444170
0x445776:	nop	word ptr cs:[rax + rax]
0x445780:	endbr64	
0x445784:	mov	rax, 0x4e1cb8
0x44578b:	add	rax, 0x10
0x44578f:	mov	qword ptr [rdi], rax
0x445792:	jmp	0x4456c0
0x445797:	nop	word ptr [rax + rax]
0x4457a0:	endbr64	
0x4457a4:	push	rbp
0x4457a5:	mov	rbp, rdi
0x4457a8:	call	0x445780
0x4457ad:	mov	rdi, rbp
0x4457b0:	pop	rbp
0x4457b1:	jmp	0x444170
0x4457b6:	nop	word ptr cs:[rax + rax]
0x4457c0:	endbr64	
0x4457c4:	mov	rax, 0x4e1ce0
0x4457cb:	add	rax, 0x10
0x4457cf:	mov	qword ptr [rdi], rax
0x4457d2:	jmp	0x4456c0
0x4457d7:	nop	word ptr [rax + rax]
0x4457e0:	endbr64	
0x4457e4:	push	rbp
0x4457e5:	mov	rbp, rdi
0x4457e8:	call	0x4457c0
0x4457ed:	mov	rdi, rbp
0x4457f0:	pop	rbp
0x4457f1:	jmp	0x444170
0x4457f6:	nop	word ptr cs:[rax + rax]
0x445800:	endbr64	
0x445804:	mov	rax, 0x4e1d08
0x44580b:	add	rax, 0x10
0x44580f:	mov	qword ptr [rdi], rax
0x445812:	jmp	0x4456c0
0x445817:	nop	word ptr [rax + rax]
0x445820:	endbr64	
0x445824:	push	rbp
0x445825:	mov	rbp, rdi
0x445828:	call	0x445800
0x44582d:	mov	rdi, rbp
0x445830:	pop	rbp
0x445831:	jmp	0x444170
0x445836:	nop	word ptr cs:[rax + rax]
0x445840:	endbr64	
0x445844:	mov	rax, 0x4e1d30
0x44584b:	add	rax, 0x10
0x44584f:	mov	qword ptr [rdi], rax
0x445852:	jmp	0x4456c0
0x445857:	nop	word ptr [rax + rax]
0x445860:	endbr64	
0x445864:	push	rbp
0x445865:	mov	rbp, rdi
0x445868:	call	0x445840
0x44586d:	mov	rdi, rbp
0x445870:	pop	rbp
0x445871:	jmp	0x444170
0x445876:	nop	word ptr cs:[rax + rax]
0x445880:	endbr64	
0x445884:	push	rbp
0x445885:	mov	rbp, rdi
0x445888:	sub	rsp, 0x10
0x44588c:	mov	rax, qword ptr fs:[0x28]
0x445895:	mov	qword ptr [rsp + 8], rax
0x44589a:	mov	rax, 0x4e1d58
0x4458a1:	add	rax, 0x10
0x4458a5:	mov	qword ptr [rdi], rax
0x4458a8:	mov	rax, qword ptr [rdi + 8]
0x4458ac:	lea	rdi, [rax - 0x18]
0x4458b0:	cmp	rdi, 0x4e65a0
0x4458b7:	jne	0x4458e0
0x4458b9:	mov	rax, qword ptr [rsp + 8]
0x4458be:	sub	rax, qword ptr fs:[0x28]
0x4458c7:	jne	0x445914
0x4458c9:	add	rsp, 0x10
0x4458cd:	mov	rdi, rbp
0x4458d0:	pop	rbp
0x4458d1:	jmp	0x444700
0x4458d6:	nop	word ptr cs:[rax + rax]
0x4458e0:	mov	rdx, qword ptr [rip + 0x9c701]
0x4458e7:	cmp	byte ptr [rdx], 0
0x4458ea:	je	0x445908
0x4458ec:	mov	edx, dword ptr [rax - 8]
0x4458ef:	lea	ecx, [rdx - 1]
0x4458f2:	mov	dword ptr [rax - 8], ecx
0x4458f5:	test	edx, edx
0x4458f7:	jg	0x4458b9
0x4458f9:	lea	rsi, [rsp + 7]
0x4458fe:	call	0x448430
0x445903:	jmp	0x4458b9
0x445905:	nop	dword ptr [rax]
0x445908:	mov	edx, 0xffffffff
0x44590d:	lock xadd	dword ptr [rax - 8], edx
0x445912:	jmp	0x4458f5
0x445914:	call	0x4039f0
0x445919:	nop	dword ptr [rax]
0x445920:	endbr64	
0x445924:	push	rbp
0x445925:	mov	rbp, rdi
0x445928:	call	0x445880
0x44592d:	mov	rdi, rbp
0x445930:	pop	rbp
0x445931:	jmp	0x444170
0x445936:	nop	word ptr cs:[rax + rax]
0x445940:	endbr64	
0x445944:	mov	rax, 0x4e1d80
0x44594b:	add	rax, 0x10
0x44594f:	mov	qword ptr [rdi], rax
0x445952:	jmp	0x445880
0x445957:	nop	word ptr [rax + rax]
0x445960:	endbr64	
0x445964:	push	rbp
0x445965:	mov	rbp, rdi
0x445968:	call	0x445940
0x44596d:	mov	rdi, rbp
0x445970:	pop	rbp
0x445971:	jmp	0x444170
0x445976:	nop	word ptr cs:[rax + rax]
0x445980:	endbr64	
0x445984:	mov	rax, 0x4e1da8
0x44598b:	add	rax, 0x10
0x44598f:	mov	qword ptr [rdi], rax
0x445992:	jmp	0x445880
0x445997:	nop	word ptr [rax + rax]
0x4459a0:	endbr64	
0x4459a4:	push	rbp
0x4459a5:	mov	rbp, rdi
0x4459a8:	call	0x445980
0x4459ad:	mov	rdi, rbp
0x4459b0:	pop	rbp
0x4459b1:	jmp	0x444170
0x4459b6:	nop	word ptr cs:[rax + rax]
0x4459c0:	endbr64	
0x4459c4:	mov	rax, 0x4e1dd0
0x4459cb:	add	rax, 0x10
0x4459cf:	mov	qword ptr [rdi], rax
0x4459d2:	jmp	0x445880
0x4459d7:	nop	word ptr [rax + rax]
0x4459e0:	endbr64	
0x4459e4:	push	rbp
0x4459e5:	mov	rbp, rdi
0x4459e8:	call	0x4459c0
0x4459ed:	mov	rdi, rbp
0x4459f0:	pop	rbp
0x4459f1:	jmp	0x444170
0x4459f6:	nop	word ptr cs:[rax + rax]
0x445a00:	endbr64	
0x445a04:	push	r12
0x445a06:	push	rbp
0x445a07:	mov	rbp, rdi
0x445a0a:	sub	rsp, 0x18
0x445a0e:	mov	rax, qword ptr fs:[0x28]
0x445a17:	mov	qword ptr [rsp + 8], rax
0x445a1c:	mov	rax, 0x4e1c90
0x445a23:	add	rax, 0x10
0x445a27:	mov	qword ptr [rdi], rax
0x445a2a:	mov	rax, qword ptr [rsi]
0x445a2d:	mov	edx, dword ptr [rax - 8]
0x445a30:	lea	rdi, [rax - 0x18]
0x445a34:	test	edx, edx
0x445a36:	js	0x445a60
0x445a38:	cmp	rdi, 0x4e65a0
0x445a3f:	jne	0x445a70
0x445a41:	mov	qword ptr [rbp + 8], rax
0x445a45:	mov	rax, qword ptr [rsp + 8]
0x445a4a:	sub	rax, qword ptr fs:[0x28]
0x445a53:	jne	0x445a92
0x445a55:	add	rsp, 0x18
0x445a59:	pop	rbp
0x445a5a:	pop	r12
0x445a5c:	ret	
0x445a5d:	nop	dword ptr [rax]
0x445a60:	lea	rsi, [rsp + 7]
0x445a65:	xor	edx, edx
0x445a67:	call	0x449200
0x445a6c:	jmp	0x445a41
0x445a6e:	nop	
0x445a70:	mov	rdx, qword ptr [rip + 0x9c571]
0x445a77:	cmp	byte ptr [rdx], 0
0x445a7a:	je	0x445a88
0x445a7c:	add	dword ptr [rax - 8], 1
0x445a80:	jmp	0x445a41
0x445a82:	nop	word ptr [rax + rax]
0x445a88:	lea	rcx, [rax - 8]
0x445a8c:	lock add	dword ptr [rcx], 1
0x445a90:	jmp	0x445a41
0x445a92:	call	0x4039f0
0x445a97:	endbr64	
0x445a9b:	mov	r12, rax
0x445a9e:	jmp	0x42ce08
0x445aa3:	nop	word ptr cs:[rax + rax]
0x445aad:	nop	dword ptr [rax]
0x445ab0:	endbr64	
0x445ab4:	push	rbx
0x445ab5:	mov	rbx, rdi
0x445ab8:	call	0x445a00
0x445abd:	mov	rax, 0x4e1cb8
0x445ac4:	add	rax, 0x10
0x445ac8:	mov	qword ptr [rbx], rax
0x445acb:	pop	rbx
0x445acc:	ret	
0x445acd:	nop	dword ptr [rax]
0x445ad0:	endbr64	
0x445ad4:	push	rbx
0x445ad5:	mov	rbx, rdi
0x445ad8:	call	0x445a00
0x445add:	mov	rax, 0x4e1ce0
0x445ae4:	add	rax, 0x10
0x445ae8:	mov	qword ptr [rbx], rax
0x445aeb:	pop	rbx
0x445aec:	ret	
0x445aed:	nop	dword ptr [rax]
0x445af0:	endbr64	
0x445af4:	push	rbx
0x445af5:	mov	rbx, rdi
0x445af8:	call	0x445a00
0x445afd:	mov	rax, 0x4e1d08
0x445b04:	add	rax, 0x10
0x445b08:	mov	qword ptr [rbx], rax
0x445b0b:	pop	rbx
0x445b0c:	ret	
0x445b0d:	nop	dword ptr [rax]
0x445b10:	endbr64	
0x445b14:	push	rbx
0x445b15:	mov	rbx, rdi
0x445b18:	call	0x445a00
0x445b1d:	mov	rax, 0x4e1d30
0x445b24:	add	rax, 0x10
0x445b28:	mov	qword ptr [rbx], rax
0x445b2b:	pop	rbx
0x445b2c:	ret	
0x445b2d:	nop	dword ptr [rax]
0x445b30:	endbr64	
0x445b34:	push	r12
0x445b36:	push	rbp
0x445b37:	mov	rbp, rdi
0x445b3a:	sub	rsp, 0x18
0x445b3e:	mov	rax, qword ptr fs:[0x28]
0x445b47:	mov	qword ptr [rsp + 8], rax
0x445b4c:	mov	rax, 0x4e1d58
0x445b53:	add	rax, 0x10
0x445b57:	mov	qword ptr [rdi], rax
0x445b5a:	mov	rax, qword ptr [rsi]
0x445b5d:	mov	edx, dword ptr [rax - 8]
0x445b60:	lea	rdi, [rax - 0x18]
0x445b64:	test	edx, edx
0x445b66:	js	0x445b90
0x445b68:	cmp	rdi, 0x4e65a0
0x445b6f:	jne	0x445ba0
0x445b71:	mov	qword ptr [rbp + 8], rax
0x445b75:	mov	rax, qword ptr [rsp + 8]
0x445b7a:	sub	rax, qword ptr fs:[0x28]
0x445b83:	jne	0x445bc2
0x445b85:	add	rsp, 0x18
0x445b89:	pop	rbp
0x445b8a:	pop	r12
0x445b8c:	ret	
0x445b8d:	nop	dword ptr [rax]
0x445b90:	lea	rsi, [rsp + 7]
0x445b95:	xor	edx, edx
0x445b97:	call	0x449200
0x445b9c:	jmp	0x445b71
0x445b9e:	nop	
0x445ba0:	mov	rdx, qword ptr [rip + 0x9c441]
0x445ba7:	cmp	byte ptr [rdx], 0
0x445baa:	je	0x445bb8
0x445bac:	add	dword ptr [rax - 8], 1
0x445bb0:	jmp	0x445b71
0x445bb2:	nop	word ptr [rax + rax]
0x445bb8:	lea	rcx, [rax - 8]
0x445bbc:	lock add	dword ptr [rcx], 1
0x445bc0:	jmp	0x445b71
0x445bc2:	call	0x4039f0
0x445bc7:	endbr64	
0x445bcb:	mov	r12, rax
0x445bce:	jmp	0x42ce18
0x445bd3:	nop	word ptr cs:[rax + rax]
0x445bdd:	nop	dword ptr [rax]
0x445be0:	endbr64	
0x445be4:	push	rbx
0x445be5:	mov	rbx, rdi
0x445be8:	call	0x445b30
0x445bed:	mov	rax, 0x4e1d80
0x445bf4:	add	rax, 0x10
0x445bf8:	mov	qword ptr [rbx], rax
0x445bfb:	pop	rbx
0x445bfc:	ret	
0x445bfd:	nop	dword ptr [rax]
0x445c00:	endbr64	
0x445c04:	push	rbx
0x445c05:	mov	rbx, rdi
0x445c08:	call	0x445b30
0x445c0d:	mov	rax, 0x4e1da8
0x445c14:	add	rax, 0x10
0x445c18:	mov	qword ptr [rbx], rax
0x445c1b:	pop	rbx
0x445c1c:	ret	
0x445c1d:	nop	dword ptr [rax]
0x445c20:	endbr64	
0x445c24:	push	rbx
0x445c25:	mov	rbx, rdi
0x445c28:	call	0x445b30
0x445c2d:	mov	rax, 0x4e1dd0
0x445c34:	add	rax, 0x10
0x445c38:	mov	qword ptr [rbx], rax
0x445c3b:	pop	rbx
0x445c3c:	ret	
0x445c3d:	nop	dword ptr [rax]
0x445c40:	endbr64	
0x445c44:	sub	rsp, 0x18
0x445c48:	mov	rax, qword ptr fs:[0x28]
0x445c51:	mov	qword ptr [rsp + 8], rax
0x445c56:	xor	eax, eax
0x445c58:	cmp	rdi, 0x4e65a0
0x445c5f:	jne	0x445c80
0x445c61:	mov	rax, qword ptr [rsp + 8]
0x445c66:	sub	rax, qword ptr fs:[0x28]
0x445c6f:	jne	0x445cb4
0x445c71:	add	rsp, 0x18
0x445c75:	ret	
0x445c76:	nop	word ptr cs:[rax + rax]
0x445c80:	mov	rax, qword ptr [rip + 0x9c361]
0x445c87:	cmp	byte ptr [rax], 0
0x445c8a:	je	0x445ca8
0x445c8c:	mov	eax, dword ptr [rdi + 0x10]
0x445c8f:	lea	edx, [rax - 1]
0x445c92:	mov	dword ptr [rdi + 0x10], edx
0x445c95:	test	eax, eax
0x445c97:	jg	0x445c61
0x445c99:	lea	rsi, [rsp + 7]
0x445c9e:	call	0x448430
0x445ca3:	jmp	0x445c61
0x445ca5:	nop	dword ptr [rax]
0x445ca8:	mov	eax, 0xffffffff
0x445cad:	lock xadd	dword ptr [rdi + 0x10], eax
0x445cb2:	jmp	0x445c95
0x445cb4:	call	0x4039f0
0x445cb9:	nop	dword ptr [rax]
0x445cc0:	endbr64	
0x445cc4:	push	rbx
0x445cc5:	mov	rbx, rdi
0x445cc8:	sub	rsp, 0x10
0x445ccc:	mov	rax, qword ptr fs:[0x28]
0x445cd5:	mov	qword ptr [rsp + 8], rax
0x445cda:	mov	rax, 0x4e1c90
0x445ce1:	add	rax, 0x10
0x445ce5:	mov	qword ptr [rdi], rax
0x445ce8:	mov	rax, qword ptr [rsi + 8]
0x445cec:	mov	edx, dword ptr [rax - 8]
0x445cef:	lea	rdi, [rax - 0x18]
0x445cf3:	test	edx, edx
0x445cf5:	js	0x445d20
0x445cf7:	cmp	rdi, 0x4e65a0
0x445cfe:	jne	0x445d30
0x445d00:	mov	qword ptr [rbx + 8], rax
0x445d04:	mov	rax, qword ptr [rsp + 8]
0x445d09:	sub	rax, qword ptr fs:[0x28]
0x445d12:	jne	0x445d52
0x445d14:	add	rsp, 0x10
0x445d18:	pop	rbx
0x445d19:	ret	
0x445d1a:	nop	word ptr [rax + rax]
0x445d20:	lea	rsi, [rsp + 7]
0x445d25:	xor	edx, edx
0x445d27:	call	0x449200
0x445d2c:	jmp	0x445d00
0x445d2e:	nop	
0x445d30:	mov	rdx, qword ptr [rip + 0x9c2b1]
0x445d37:	cmp	byte ptr [rdx], 0
0x445d3a:	je	0x445d48
0x445d3c:	add	dword ptr [rax - 8], 1
0x445d40:	jmp	0x445d00
0x445d42:	nop	word ptr [rax + rax]
0x445d48:	lea	rcx, [rax - 8]
0x445d4c:	lock add	dword ptr [rcx], 1
0x445d50:	jmp	0x445d00
0x445d52:	call	0x4039f0
0x445d57:	nop	word ptr [rax + rax]
0x445d60:	endbr64	
0x445d64:	push	r12
0x445d66:	add	rsi, 8
0x445d6a:	mov	r12, rdi
0x445d6d:	lea	rdi, [rdi + 8]
0x445d71:	call	0x449b10
0x445d76:	mov	rax, r12
0x445d79:	pop	r12
0x445d7b:	ret	
0x445d7c:	nop	dword ptr [rax]
0x445d80:	endbr64	
0x445d84:	mov	rax, 0x4e1c90
0x445d8b:	add	rax, 0x10
0x445d8f:	mov	qword ptr [rdi], rax
0x445d92:	mov	rax, qword ptr [rsi + 8]
0x445d96:	mov	qword ptr [rdi + 8], rax
0x445d9a:	mov	rax, 0x4e65a0
0x445da1:	add	rax, 0x18
0x445da5:	mov	qword ptr [rsi + 8], rax
0x445da9:	ret	
0x445daa:	nop	word ptr [rax + rax]
0x445db0:	endbr64	
0x445db4:	push	r12
0x445db6:	add	rsi, 8
0x445dba:	mov	r12, rdi
0x445dbd:	lea	rdi, [rdi + 8]
0x445dc1:	call	0x447850
0x445dc6:	mov	rax, r12
0x445dc9:	pop	r12
0x445dcb:	ret	
0x445dcc:	nop	dword ptr [rax]
0x445dd0:	endbr64	
0x445dd4:	push	rbx
0x445dd5:	mov	rbx, rdi
0x445dd8:	sub	rsp, 0x10
0x445ddc:	mov	rax, qword ptr fs:[0x28]
0x445de5:	mov	qword ptr [rsp + 8], rax
0x445dea:	mov	rax, 0x4e1d58
0x445df1:	add	rax, 0x10
0x445df5:	mov	qword ptr [rdi], rax
0x445df8:	mov	rax, qword ptr [rsi + 8]
0x445dfc:	mov	edx, dword ptr [rax - 8]
0x445dff:	lea	rdi, [rax - 0x18]
0x445e03:	test	edx, edx
0x445e05:	js	0x445e30
0x445e07:	cmp	rdi, 0x4e65a0
0x445e0e:	jne	0x445e40
0x445e10:	mov	qword ptr [rbx + 8], rax
0x445e14:	mov	rax, qword ptr [rsp + 8]
0x445e19:	sub	rax, qword ptr fs:[0x28]
0x445e22:	jne	0x445e62
0x445e24:	add	rsp, 0x10
0x445e28:	pop	rbx
0x445e29:	ret	
0x445e2a:	nop	word ptr [rax + rax]
0x445e30:	lea	rsi, [rsp + 7]
0x445e35:	xor	edx, edx
0x445e37:	call	0x449200
0x445e3c:	jmp	0x445e10
0x445e3e:	nop	
0x445e40:	mov	rdx, qword ptr [rip + 0x9c1a1]
0x445e47:	cmp	byte ptr [rdx], 0
0x445e4a:	je	0x445e58
0x445e4c:	add	dword ptr [rax - 8], 1
0x445e50:	jmp	0x445e10
0x445e52:	nop	word ptr [rax + rax]
0x445e58:	lea	rcx, [rax - 8]
0x445e5c:	lock add	dword ptr [rcx], 1
0x445e60:	jmp	0x445e10
0x445e62:	call	0x4039f0
0x445e67:	nop	word ptr [rax + rax]
0x445e70:	endbr64	
0x445e74:	push	r12
0x445e76:	add	rsi, 8
0x445e7a:	mov	r12, rdi
0x445e7d:	lea	rdi, [rdi + 8]
0x445e81:	call	0x449b10
0x445e86:	mov	rax, r12
0x445e89:	pop	r12
0x445e8b:	ret	
0x445e8c:	nop	dword ptr [rax]
0x445e90:	endbr64	
0x445e94:	mov	rax, 0x4e1d58
0x445e9b:	add	rax, 0x10
0x445e9f:	mov	qword ptr [rdi], rax
0x445ea2:	mov	rax, qword ptr [rsi + 8]
0x445ea6:	mov	qword ptr [rdi + 8], rax
0x445eaa:	mov	rax, 0x4e65a0
0x445eb1:	add	rax, 0x18
0x445eb5:	mov	qword ptr [rsi + 8], rax
0x445eb9:	ret	
0x445eba:	nop	word ptr [rax + rax]
0x445ec0:	endbr64	
0x445ec4:	push	r12
0x445ec6:	add	rsi, 8
0x445eca:	mov	r12, rdi
0x445ecd:	lea	rdi, [rdi + 8]
0x445ed1:	call	0x447850
0x445ed6:	mov	rax, r12
0x445ed9:	pop	r12
0x445edb:	ret	
0x445edc:	nop	dword ptr [rax]
0x445ee0:	endbr64	
0x445ee4:	push	r13
0x445ee6:	push	r12
0x445ee8:	mov	r12, rdi
0x445eeb:	push	rbp
0x445eec:	push	rbx
0x445eed:	sub	rsp, 0x18
0x445ef1:	mov	rax, qword ptr fs:[0x28]
0x445efa:	mov	qword ptr [rsp + 8], rax
0x445eff:	mov	rax, 0x4e1c90
0x445f06:	add	rax, 0x10
0x445f0a:	mov	qword ptr [rdi], rax
0x445f0d:	test	rsi, rsi
0x445f10:	je	0x445fb9
0x445f16:	mov	rdi, rsi
0x445f19:	mov	rbp, rsi
0x445f1c:	call	0x4039e0
0x445f21:	mov	rbx, rax
0x445f24:	test	rax, rax
0x445f27:	je	0x445f80
0x445f29:	lea	rdx, [rsp + 7]
0x445f2e:	xor	esi, esi
0x445f30:	mov	rdi, rax
0x445f33:	call	0x4482b0
0x445f38:	mov	r13, rax
0x445f3b:	lea	rcx, [rax + 0x18]
0x445f3f:	cmp	rbx, 1
0x445f43:	je	0x445f90
0x445f45:	mov	rdi, rcx
0x445f48:	mov	rdx, rbx
0x445f4b:	mov	rsi, rbp
0x445f4e:	call	0x403c60
0x445f53:	mov	rcx, rax
0x445f56:	cmp	r13, 0x4e65a0
0x445f5d:	jne	0x445fa0
0x445f5f:	mov	qword ptr [r12 + 8], rcx
0x445f64:	mov	rax, qword ptr [rsp + 8]
0x445f69:	sub	rax, qword ptr fs:[0x28]
0x445f72:	jne	0x445fb4
0x445f74:	add	rsp, 0x18
0x445f78:	pop	rbx
0x445f79:	pop	rbp
0x445f7a:	pop	r12
0x445f7c:	pop	r13
0x445f7e:	ret	
0x445f7f:	nop	
0x445f80:	mov	rax, 0x4e65a0
0x445f87:	lea	rcx, [rax + 0x18]
0x445f8b:	jmp	0x445f5f
0x445f8d:	nop	dword ptr [rax]
0x445f90:	movzx	eax, byte ptr [rbp]
0x445f94:	mov	byte ptr [r13 + 0x18], al
0x445f98:	jmp	0x445f56
0x445f9a:	nop	word ptr [rax + rax]
0x445fa0:	mov	dword ptr [r13 + 0x10], 0
0x445fa8:	mov	qword ptr [r13], rbx
0x445fac:	mov	byte ptr [r13 + rbx + 0x18], 0
0x445fb2:	jmp	0x445f5f
0x445fb4:	call	0x4039f0
0x445fb9:	lea	rdi, [rip + 0x86ba8]
0x445fc0:	call	0x42c8eb
0x445fc5:	endbr64	
0x445fc9:	mov	rbp, rax
0x445fcc:	jmp	0x42ce28
0x445fd1:	nop	word ptr cs:[rax + rax]
0x445fdb:	nop	dword ptr [rax + rax]
0x445fe0:	endbr64	
0x445fe4:	push	rbx
0x445fe5:	mov	rbx, rdi
0x445fe8:	call	0x445ee0
0x445fed:	mov	rax, 0x4e1cb8
0x445ff4:	add	rax, 0x10
0x445ff8:	mov	qword ptr [rbx], rax
0x445ffb:	pop	rbx
0x445ffc:	ret	
0x445ffd:	nop	dword ptr [rax]
0x446000:	endbr64	
0x446004:	push	rbx
0x446005:	mov	rbx, rdi
0x446008:	call	0x445ee0
0x44600d:	mov	rax, 0x4e1ce0
0x446014:	add	rax, 0x10
0x446018:	mov	qword ptr [rbx], rax
0x44601b:	pop	rbx
0x44601c:	ret	
0x44601d:	nop	dword ptr [rax]
0x446020:	endbr64	
0x446024:	push	rbx
0x446025:	mov	rbx, rdi
0x446028:	call	0x445ee0
0x44602d:	mov	rax, 0x4e1d08
0x446034:	add	rax, 0x10
0x446038:	mov	qword ptr [rbx], rax
0x44603b:	pop	rbx
0x44603c:	ret	
0x44603d:	nop	dword ptr [rax]
0x446040:	endbr64	
0x446044:	push	rbx
0x446045:	mov	rbx, rdi
0x446048:	call	0x445ee0
0x44604d:	mov	rax, 0x4e1d30
0x446054:	add	rax, 0x10
0x446058:	mov	qword ptr [rbx], rax
0x44605b:	pop	rbx
0x44605c:	ret	
0x44605d:	nop	dword ptr [rax]
0x446060:	endbr64	
0x446064:	push	r13
0x446066:	push	r12
0x446068:	mov	r12, rdi
0x44606b:	push	rbp
0x44606c:	push	rbx
0x44606d:	sub	rsp, 0x18
0x446071:	mov	rax, qword ptr fs:[0x28]
0x44607a:	mov	qword ptr [rsp + 8], rax
0x44607f:	mov	rax, 0x4e1d58
0x446086:	add	rax, 0x10
0x44608a:	mov	qword ptr [rdi], rax
0x44608d:	test	rsi, rsi
0x446090:	je	0x446139
0x446096:	mov	rdi, rsi
0x446099:	mov	rbp, rsi
0x44609c:	call	0x4039e0
0x4460a1:	mov	rbx, rax
0x4460a4:	test	rax, rax
0x4460a7:	je	0x446100
0x4460a9:	lea	rdx, [rsp + 7]
0x4460ae:	xor	esi, esi
0x4460b0:	mov	rdi, rax
0x4460b3:	call	0x4482b0
0x4460b8:	mov	r13, rax
0x4460bb:	lea	rcx, [rax + 0x18]
0x4460bf:	cmp	rbx, 1
0x4460c3:	je	0x446110
0x4460c5:	mov	rdi, rcx
0x4460c8:	mov	rdx, rbx
0x4460cb:	mov	rsi, rbp
0x4460ce:	call	0x403c60
0x4460d3:	mov	rcx, rax
0x4460d6:	cmp	r13, 0x4e65a0
0x4460dd:	jne	0x446120
0x4460df:	mov	qword ptr [r12 + 8], rcx
0x4460e4:	mov	rax, qword ptr [rsp + 8]
0x4460e9:	sub	rax, qword ptr fs:[0x28]
0x4460f2:	jne	0x446134
0x4460f4:	add	rsp, 0x18
0x4460f8:	pop	rbx
0x4460f9:	pop	rbp
0x4460fa:	pop	r12
0x4460fc:	pop	r13
0x4460fe:	ret	
0x4460ff:	nop	
0x446100:	mov	rax, 0x4e65a0
0x446107:	lea	rcx, [rax + 0x18]
0x44610b:	jmp	0x4460df
0x44610d:	nop	dword ptr [rax]
0x446110:	movzx	eax, byte ptr [rbp]
0x446114:	mov	byte ptr [r13 + 0x18], al
0x446118:	jmp	0x4460d6
0x44611a:	nop	word ptr [rax + rax]
0x446120:	mov	dword ptr [r13 + 0x10], 0
0x446128:	mov	qword ptr [r13], rbx
0x44612c:	mov	byte ptr [r13 + rbx + 0x18], 0
0x446132:	jmp	0x4460df
0x446134:	call	0x4039f0
0x446139:	lea	rdi, [rip + 0x86a28]
0x446140:	call	0x42c8eb
0x446145:	endbr64	
0x446149:	mov	rbp, rax
0x44614c:	jmp	0x42ce38
0x446151:	nop	word ptr cs:[rax + rax]
0x44615b:	nop	dword ptr [rax + rax]
0x446160:	endbr64	
0x446164:	push	rbx
0x446165:	mov	rbx, rdi
0x446168:	call	0x446060
0x44616d:	mov	rax, 0x4e1d80
0x446174:	add	rax, 0x10
0x446178:	mov	qword ptr [rbx], rax
0x44617b:	pop	rbx
0x44617c:	ret	
0x44617d:	nop	dword ptr [rax]
0x446180:	endbr64	
0x446184:	push	rbx
0x446185:	mov	rbx, rdi
0x446188:	call	0x446060
0x44618d:	mov	rax, 0x4e1da8
0x446194:	add	rax, 0x10
0x446198:	mov	qword ptr [rbx], rax
0x44619b:	pop	rbx
0x44619c:	ret	
0x44619d:	nop	dword ptr [rax]
0x4461a0:	endbr64	
0x4461a4:	push	rbx
0x4461a5:	mov	rbx, rdi
0x4461a8:	call	0x446060
0x4461ad:	mov	rax, 0x4e1dd0
0x4461b4:	add	rax, 0x10
0x4461b8:	mov	qword ptr [rbx], rax
0x4461bb:	pop	rbx
0x4461bc:	ret	
0x4461bd:	nop	dword ptr [rax]
0x4461c0:	endbr64	
0x4461c4:	mov	rsi, qword ptr [rsi]
0x4461c7:	mov	rdx, qword ptr [rsi - 0x18]
0x4461cb:	jmp	0x44ae00
0x4461d0:	endbr64	
0x4461d4:	mov	rax, 0x4e65a0
0x4461db:	add	rax, 0x18
0x4461df:	mov	qword ptr [rdi], rax
0x4461e2:	ret	
0x4461e3:	nop	word ptr cs:[rax + rax]
0x4461ed:	nop	dword ptr [rax]
0x4461f0:	endbr64	
0x4461f4:	push	rbx
0x4461f5:	mov	rbx, rdi
0x4461f8:	sub	rsp, 0x10
0x4461fc:	mov	rax, qword ptr fs:[0x28]
0x446205:	mov	qword ptr [rsp + 8], rax
0x44620a:	mov	rax, qword ptr [rsi]
0x44620d:	mov	edx, dword ptr [rax - 8]
0x446210:	lea	rdi, [rax - 0x18]
0x446214:	test	edx, edx
0x446216:	js	0x446240
0x446218:	cmp	rdi, 0x4e65a0
0x44621f:	jne	0x446250
0x446221:	mov	qword ptr [rbx], rax
0x446224:	mov	rax, qword ptr [rsp + 8]
0x446229:	sub	rax, qword ptr fs:[0x28]
0x446232:	jne	0x446272
0x446234:	add	rsp, 0x10
0x446238:	pop	rbx
0x446239:	ret	
0x44623a:	nop	word ptr [rax + rax]
0x446240:	lea	rsi, [rsp + 7]
0x446245:	xor	edx, edx
0x446247:	call	0x449200
0x44624c:	jmp	0x446221
0x44624e:	nop	
0x446250:	mov	rdx, qword ptr [rip + 0x9bd91]
0x446257:	cmp	byte ptr [rdx], 0
0x44625a:	je	0x446268
0x44625c:	add	dword ptr [rax - 8], 1
0x446260:	jmp	0x446221
0x446262:	nop	word ptr [rax + rax]
0x446268:	lea	rcx, [rax - 8]
0x44626c:	lock add	dword ptr [rcx], 1
0x446270:	jmp	0x446221
0x446272:	call	0x4039f0
0x446277:	nop	word ptr [rax + rax]
0x446280:	endbr64	
0x446284:	push	r13
0x446286:	mov	r13, rdi
0x446289:	push	r12
0x44628b:	push	rbp
0x44628c:	push	rbx
0x44628d:	sub	rsp, 0x18
0x446291:	mov	rax, qword ptr fs:[0x28]
0x44629a:	mov	qword ptr [rsp + 8], rax
0x44629f:	xor	eax, eax
0x4462a1:	test	rdx, rdx
0x4462a4:	je	0x446320
0x4462a6:	mov	rbp, rsi
0x4462a9:	test	rsi, rsi
0x4462ac:	je	0x44634a
0x4462b2:	mov	rbx, rdx
0x4462b5:	xor	esi, esi
0x4462b7:	lea	rdx, [rsp + 7]
0x4462bc:	mov	rdi, rbx
0x4462bf:	call	0x4482b0
0x4462c4:	mov	r12, rax
0x4462c7:	lea	rcx, [rax + 0x18]
0x4462cb:	cmp	rbx, 1
0x4462cf:	je	0x446310
0x4462d1:	mov	rdi, rcx
0x4462d4:	mov	rdx, rbx
0x4462d7:	mov	rsi, rbp
0x4462da:	call	0x403c60
0x4462df:	mov	rcx, rax
0x4462e2:	cmp	r12, 0x4e65a0
0x4462e9:	jne	0x446330
0x4462eb:	mov	qword ptr [r13], rcx
0x4462ef:	mov	rax, qword ptr [rsp + 8]
0x4462f4:	sub	rax, qword ptr fs:[0x28]
0x4462fd:	jne	0x446345
0x4462ff:	add	rsp, 0x18
0x446303:	pop	rbx
0x446304:	pop	rbp
0x446305:	pop	r12
0x446307:	pop	r13
0x446309:	ret	
0x44630a:	nop	word ptr [rax + rax]
0x446310:	movzx	eax, byte ptr [rbp]
0x446314:	mov	byte ptr [r12 + 0x18], al
0x446319:	jmp	0x4462e2
0x44631b:	nop	dword ptr [rax + rax]
0x446320:	mov	rax, 0x4e65a0
0x446327:	lea	rcx, [rax + 0x18]
0x44632b:	jmp	0x4462eb
0x44632d:	nop	dword ptr [rax]
0x446330:	mov	dword ptr [r12 + 0x10], 0
0x446339:	mov	qword ptr [r12], rbx
0x44633d:	mov	byte ptr [r12 + rbx + 0x18], 0
0x446343:	jmp	0x4462eb
0x446345:	call	0x4039f0
0x44634a:	lea	rdi, [rip + 0x86817]
0x446351:	call	0x42c8eb
0x446356:	nop	word ptr cs:[rax + rax]
0x446360:	endbr64	
0x446364:	push	rbx
0x446365:	mov	rbx, rdi
0x446368:	sub	rsp, 0x10
0x44636c:	mov	rax, qword ptr fs:[0x28]
0x446375:	mov	qword ptr [rsp + 8], rax
0x44637a:	mov	rax, qword ptr [rsi]
0x44637d:	mov	edx, dword ptr [rax - 8]
0x446380:	lea	rdi, [rax - 0x18]
0x446384:	test	edx, edx
0x446386:	js	0x4463b0
0x446388:	cmp	rdi, 0x4e65a0
0x44638f:	jne	0x4463c0
0x446391:	mov	qword ptr [rbx], rax
0x446394:	mov	rax, qword ptr [rsp + 8]
0x446399:	sub	rax, qword ptr fs:[0x28]
0x4463a2:	jne	0x4463e2
0x4463a4:	add	rsp, 0x10
0x4463a8:	pop	rbx
0x4463a9:	ret	
0x4463aa:	nop	word ptr [rax + rax]
0x4463b0:	lea	rsi, [rsp + 7]
0x4463b5:	xor	edx, edx
0x4463b7:	call	0x449200
0x4463bc:	jmp	0x446391
0x4463be:	nop	
0x4463c0:	mov	rdx, qword ptr [rip + 0x9bc21]
0x4463c7:	cmp	byte ptr [rdx], 0
0x4463ca:	je	0x4463d8
0x4463cc:	add	dword ptr [rax - 8], 1
0x4463d0:	jmp	0x446391
0x4463d2:	nop	word ptr [rax + rax]
0x4463d8:	lea	rcx, [rax - 8]
0x4463dc:	lock add	dword ptr [rcx], 1
0x4463e0:	jmp	0x446391
0x4463e2:	call	0x4039f0
0x4463e7:	nop	word ptr [rax + rax]
0x4463f0:	endbr64	
0x4463f4:	push	r12
0x4463f6:	mov	r12, rdi
0x4463f9:	call	0x449b10
0x4463fe:	mov	rax, r12
0x446401:	pop	r12
0x446403:	ret	
0x446404:	nop	word ptr cs:[rax + rax]
0x44640e:	nop	
0x446410:	endbr64	
0x446414:	sub	rsp, 0x18
0x446418:	mov	rax, qword ptr fs:[0x28]
0x446421:	mov	qword ptr [rsp + 8], rax
0x446426:	mov	rax, qword ptr [rdi]
0x446429:	lea	rdi, [rax - 0x18]
0x44642d:	cmp	rdi, 0x4e65a0
0x446434:	jne	0x446450
0x446436:	mov	rax, qword ptr [rsp + 8]
0x44643b:	sub	rax, qword ptr fs:[0x28]
0x446444:	jne	0x446484
0x446446:	add	rsp, 0x18
0x44644a:	ret	
0x44644b:	nop	dword ptr [rax + rax]
0x446450:	mov	rdx, qword ptr [rip + 0x9bb91]
0x446457:	cmp	byte ptr [rdx], 0
0x44645a:	je	0x446478
0x44645c:	mov	edx, dword ptr [rax - 8]
0x44645f:	lea	ecx, [rdx - 1]
0x446462:	mov	dword ptr [rax - 8], ecx
0x446465:	test	edx, edx
0x446467:	jg	0x446436
0x446469:	lea	rsi, [rsp + 7]
0x44646e:	call	0x448430
0x446473:	jmp	0x446436
0x446475:	nop	dword ptr [rax]
0x446478:	mov	edx, 0xffffffff
0x44647d:	lock xadd	dword ptr [rax - 8], edx
0x446482:	jmp	0x446465
0x446484:	call	0x4039f0
0x446489:	nop	dword ptr [rax]
0x446490:	endbr64	
0x446494:	mov	rax, qword ptr [rsi]
0x446497:	mov	qword ptr [rdi], rax
0x44649a:	mov	rax, 0x4e65a0
0x4464a1:	add	rax, 0x18
0x4464a5:	mov	qword ptr [rsi], rax
0x4464a8:	ret	
0x4464a9:	nop	dword ptr [rax]
0x4464b0:	endbr64	
0x4464b4:	push	r12
0x4464b6:	mov	r12, rdi
0x4464b9:	call	0x447850
0x4464be:	mov	rax, r12
0x4464c1:	pop	r12
0x4464c3:	ret	
0x4464c4:	nop	word ptr cs:[rax + rax]
0x4464ce:	nop	
0x4464d0:	endbr64	
0x4464d4:	push	r12
0x4464d6:	mov	r12, rdi
0x4464d9:	push	rbp
0x4464da:	sub	rsp, 0x28
0x4464de:	mov	rax, qword ptr fs:[0x28]
0x4464e7:	mov	qword ptr [rsp + 0x18], rax
0x4464ec:	xor	eax, eax
0x4464ee:	mov	rax, qword ptr [rsi]
0x4464f1:	lea	rbp, [rsp + 0x10]
0x4464f6:	mov	rdi, rbp
0x4464f9:	call	qword ptr [rax + 0x18]
0x4464fc:	mov	rsi, qword ptr [rsp + 0x10]
0x446501:	mov	rdi, r12
0x446504:	mov	rdx, qword ptr [rsi - 0x18]
0x446508:	call	0x44ae00
0x44650d:	mov	rax, qword ptr [rsp + 0x10]
0x446512:	lea	rdi, [rax - 0x18]
0x446516:	cmp	rdi, 0x4e65a0
0x44651d:	jne	0x446540
0x44651f:	mov	rax, qword ptr [rsp + 0x18]
0x446524:	sub	rax, qword ptr fs:[0x28]
0x44652d:	jne	0x446574
0x44652f:	add	rsp, 0x28
0x446533:	mov	rax, r12
0x446536:	pop	rbp
0x446537:	pop	r12
0x446539:	ret	
0x44653a:	nop	word ptr [rax + rax]
0x446540:	mov	rdx, qword ptr [rip + 0x9baa1]
0x446547:	cmp	byte ptr [rdx], 0
0x44654a:	je	0x446568
0x44654c:	mov	edx, dword ptr [rax - 8]
0x44654f:	lea	ecx, [rdx - 1]
0x446552:	mov	dword ptr [rax - 8], ecx
0x446555:	test	edx, edx
0x446557:	jg	0x44651f
0x446559:	lea	rsi, [rsp + 0xf]
0x44655e:	call	0x448430
0x446563:	jmp	0x44651f
0x446565:	nop	dword ptr [rax]
0x446568:	mov	edx, 0xffffffff
0x44656d:	lock xadd	dword ptr [rax - 8], edx
0x446572:	jmp	0x446555
0x446574:	call	0x4039f0
0x446579:	endbr64	
0x44657d:	mov	r12, rax
0x446580:	jmp	0x42ce48
0x446585:	nop	word ptr cs:[rax + rax]
0x44658f:	nop	
0x446590:	endbr64	
0x446594:	push	r13
0x446596:	mov	r13, rdi
0x446599:	push	r12
0x44659b:	mov	r12d, 1
0x4465a1:	push	rbp
0x4465a2:	mov	rbp, rsi
0x4465a5:	push	rbx
0x4465a6:	lea	rbx, [rsi - 1]
0x4465aa:	sub	rsp, 8
0x4465ae:	jmp	0x4465b4
0x4465b0:	add	r12, 1
0x4465b4:	lea	rdi, [rbx + r12]
0x4465b8:	call	0x4039b0
0x4465bd:	test	al, al
0x4465bf:	jne	0x4465b0
0x4465c1:	lea	rdi, [r12 + 0x18]
0x4465c6:	call	0x4037d0
0x4465cb:	lea	rdx, [r12 - 1]
0x4465d0:	mov	dword ptr [rax + 0x10], 0
0x4465d7:	lea	rbx, [rax + 0x18]
0x4465db:	mov	rsi, rbp
0x4465de:	mov	qword ptr [rax + 8], rdx
0x4465e2:	mov	rdi, rbx
0x4465e5:	mov	qword ptr [rax], rdx
0x4465e8:	mov	rdx, r12
0x4465eb:	call	0x403ab0
0x4465f0:	mov	qword ptr [r13], rbx
0x4465f4:	add	rsp, 8
0x4465f8:	pop	rbx
0x4465f9:	pop	rbp
0x4465fa:	pop	r12
0x4465fc:	pop	r13
0x4465fe:	ret	
0x4465ff:	endbr64	
0x446603:	mov	rdi, rax
0x446606:	jmp	0x42ce58
0x44660b:	nop	dword ptr [rax + rax]
0x446610:	endbr64	
0x446614:	jmp	0x403d60
0x446619:	nop	dword ptr [rax]
0x446620:	endbr64	
0x446624:	jmp	0x403d60
0x446629:	nop	dword ptr [rax]
0x446630:	endbr64	
0x446634:	sub	rsp, 8
0x446638:	call	0x446610
0x44663d:	mov	rdi, 0x445c40
0x446644:	mov	esi, 1
0x446649:	add	rsp, 8
0x44664d:	lea	rdx, [rax - 0x18]
0x446651:	jmp	0x403a80
0x446656:	nop	word ptr cs:[rax + rax]
0x446660:	endbr64	
0x446664:	lea	rax, [rdi + 8]
0x446668:	ret	
0x446669:	nop	dword ptr [rax]
0x446670:	endbr64	
0x446674:	lea	rax, [rdi + 8]
0x446678:	ret	
0x446679:	nop	dword ptr [rax]
0x446680:	endbr64	
0x446684:	push	r13
0x446686:	mov	r13, rsi
0x446689:	lea	rsi, [rip + 0x7e203]
0x446690:	push	r12
0x446692:	mov	r12, rdi
0x446695:	push	rbp
0x446696:	sub	rsp, 0x20
0x44669a:	mov	rax, qword ptr fs:[0x28]
0x4466a3:	mov	qword ptr [rsp + 0x18], rax
0x4466a8:	xor	eax, eax
0x4466aa:	mov	rbp, rsp
0x4466ad:	mov	rdi, rbp
0x4466b0:	call	0x445ee0
0x4466b5:	mov	edx, 0x10
0x4466ba:	mov	rsi, rbp
0x4466bd:	mov	rdi, r12
0x4466c0:	call	0x403de0
0x4466c5:	mov	rdi, r12
0x4466c8:	call	0x446660
0x4466cd:	mov	rdi, rax
0x4466d0:	mov	rdx, r12
0x4466d3:	mov	rsi, r13
0x4466d6:	call	0x446590
0x4466db:	mov	rdi, rbp
0x4466de:	call	0x4456c0
0x4466e3:	mov	rax, qword ptr [rsp + 0x18]
0x4466e8:	sub	rax, qword ptr fs:[0x28]
0x4466f1:	jne	0x4466fd
0x4466f3:	add	rsp, 0x20
0x4466f7:	pop	rbp
0x4466f8:	pop	r12
0x4466fa:	pop	r13
0x4466fc:	ret	
0x4466fd:	call	0x4039f0
0x446702:	endbr64	
0x446706:	mov	r12, rax
0x446709:	jmp	0x42ce76
0x44670e:	nop	
0x446710:	endbr64	
0x446714:	push	r13
0x446716:	mov	r13, rsi
0x446719:	lea	rsi, [rip + 0x7e173]
0x446720:	push	r12
0x446722:	mov	r12, rdi
0x446725:	push	rbp
0x446726:	sub	rsp, 0x20
0x44672a:	mov	rax, qword ptr fs:[0x28]
0x446733:	mov	qword ptr [rsp + 0x18], rax
0x446738:	xor	eax, eax
0x44673a:	mov	rbp, rsp
0x44673d:	mov	rdi, rbp
0x446740:	call	0x445ee0
0x446745:	mov	edx, 0x10
0x44674a:	mov	rsi, rbp
0x44674d:	mov	rdi, r12
0x446750:	call	0x403de0
0x446755:	mov	rdi, r13
0x446758:	call	0x446620
0x44675d:	mov	rdi, r12
0x446760:	mov	r13, rax
0x446763:	call	0x446660
0x446768:	mov	rdi, rax
0x44676b:	mov	rdx, r12
0x44676e:	mov	rsi, r13
0x446771:	call	0x446590
0x446776:	mov	rdi, rbp
0x446779:	call	0x4456c0
0x44677e:	mov	rax, qword ptr [rsp + 0x18]
0x446783:	sub	rax, qword ptr fs:[0x28]
0x44678c:	jne	0x446798
0x44678e:	add	rsp, 0x20
0x446792:	pop	rbp
0x446793:	pop	r12
0x446795:	pop	r13
0x446797:	ret	
0x446798:	call	0x4039f0
0x44679d:	endbr64	
0x4467a1:	mov	r12, rax
0x4467a4:	jmp	0x42ce86
0x4467a9:	nop	dword ptr [rax]
0x4467b0:	endbr64	
0x4467b4:	sub	rsp, 8
0x4467b8:	call	0x446660
0x4467bd:	add	rsp, 8
0x4467c1:	mov	rdi, rax
0x4467c4:	jmp	0x446630
0x4467c9:	nop	dword ptr [rax]
0x4467d0:	endbr64	
0x4467d4:	push	rbp
0x4467d5:	mov	rbp, rdi
0x4467d8:	call	0x4467b0
0x4467dd:	mov	rdi, rbp
0x4467e0:	pop	rbp
0x4467e1:	jmp	0x403ed0
0x4467e6:	nop	word ptr cs:[rax + rax]
0x4467f0:	endbr64	
0x4467f4:	sub	rsp, 8
0x4467f8:	call	0x446660
0x4467fd:	add	rsp, 8
0x446801:	mov	rdi, rax
0x446804:	jmp	0x446610
0x446809:	nop	dword ptr [rax]
0x446810:	endbr64	
0x446814:	push	r13
0x446816:	mov	r13, rsi
0x446819:	lea	rsi, [rip + 0x7e073]
0x446820:	push	r12
0x446822:	mov	r12, rdi
0x446825:	push	rbp
0x446826:	sub	rsp, 0x20
0x44682a:	mov	rax, qword ptr fs:[0x28]
0x446833:	mov	qword ptr [rsp + 0x18], rax
0x446838:	xor	eax, eax
0x44683a:	mov	rbp, rsp
0x44683d:	mov	rdi, rbp
0x446840:	call	0x445fe0
0x446845:	mov	edx, 0x10
0x44684a:	mov	rsi, rbp
0x44684d:	mov	rdi, r12
0x446850:	call	0x403de0
0x446855:	mov	rdi, r12
0x446858:	call	0x446660
0x44685d:	mov	rdi, rax
0x446860:	mov	rdx, r12
0x446863:	mov	rsi, r13
0x446866:	call	0x446590
0x44686b:	mov	rdi, rbp
0x44686e:	call	0x445780
0x446873:	mov	rax, qword ptr [rsp + 0x18]
0x446878:	sub	rax, qword ptr fs:[0x28]
0x446881:	jne	0x44688d
0x446883:	add	rsp, 0x20
0x446887:	pop	rbp
0x446888:	pop	r12
0x44688a:	pop	r13
0x44688c:	ret	
0x44688d:	call	0x4039f0
0x446892:	endbr64	
0x446896:	mov	r12, rax
0x446899:	jmp	0x42ce96
0x44689e:	nop	
0x4468a0:	endbr64	
0x4468a4:	push	r13
0x4468a6:	mov	r13, rsi
0x4468a9:	lea	rsi, [rip + 0x7dfe3]
0x4468b0:	push	r12
0x4468b2:	mov	r12, rdi
0x4468b5:	push	rbp
0x4468b6:	sub	rsp, 0x20
0x4468ba:	mov	rax, qword ptr fs:[0x28]
0x4468c3:	mov	qword ptr [rsp + 0x18], rax
0x4468c8:	xor	eax, eax
0x4468ca:	mov	rbp, rsp
0x4468cd:	mov	rdi, rbp
0x4468d0:	call	0x445fe0
0x4468d5:	mov	edx, 0x10
0x4468da:	mov	rsi, rbp
0x4468dd:	mov	rdi, r12
0x4468e0:	call	0x403de0
0x4468e5:	mov	rdi, r13
0x4468e8:	call	0x446620
0x4468ed:	mov	rdi, r12
0x4468f0:	mov	r13, rax
0x4468f3:	call	0x446660
0x4468f8:	mov	rdi, rax
0x4468fb:	mov	rdx, r12
0x4468fe:	mov	rsi, r13
0x446901:	call	0x446590
0x446906:	mov	rdi, rbp
0x446909:	call	0x445780
0x44690e:	mov	rax, qword ptr [rsp + 0x18]
0x446913:	sub	rax, qword ptr fs:[0x28]
0x44691c:	jne	0x446928
0x44691e:	add	rsp, 0x20
0x446922:	pop	rbp
0x446923:	pop	r12
0x446925:	pop	r13
0x446927:	ret	
0x446928:	call	0x4039f0
0x44692d:	endbr64	
0x446931:	mov	r12, rax
0x446934:	jmp	0x42cea6
0x446939:	nop	dword ptr [rax]
0x446940:	endbr64	
0x446944:	sub	rsp, 8
0x446948:	call	0x446660
0x44694d:	add	rsp, 8
0x446951:	mov	rdi, rax
0x446954:	jmp	0x446630
0x446959:	nop	dword ptr [rax]
0x446960:	endbr64	
0x446964:	push	rbp
0x446965:	mov	rbp, rdi
0x446968:	call	0x446940
0x44696d:	mov	rdi, rbp
0x446970:	pop	rbp
0x446971:	jmp	0x403ed0
0x446976:	nop	word ptr cs:[rax + rax]
0x446980:	endbr64	
0x446984:	push	r13
0x446986:	mov	r13, rsi
0x446989:	lea	rsi, [rip + 0x7df03]
0x446990:	push	r12
0x446992:	mov	r12, rdi
0x446995:	push	rbp
0x446996:	sub	rsp, 0x20
0x44699a:	mov	rax, qword ptr fs:[0x28]
0x4469a3:	mov	qword ptr [rsp + 0x18], rax
0x4469a8:	xor	eax, eax
0x4469aa:	mov	rbp, rsp
0x4469ad:	mov	rdi, rbp
0x4469b0:	call	0x446000
0x4469b5:	mov	edx, 0x10
0x4469ba:	mov	rsi, rbp
0x4469bd:	mov	rdi, r12
0x4469c0:	call	0x403de0
0x4469c5:	mov	rdi, r12
0x4469c8:	call	0x446660
0x4469cd:	mov	rdi, rax
0x4469d0:	mov	rdx, r12
0x4469d3:	mov	rsi, r13
0x4469d6:	call	0x446590
0x4469db:	mov	rdi, rbp
0x4469de:	call	0x4457c0
0x4469e3:	mov	rax, qword ptr [rsp + 0x18]
0x4469e8:	sub	rax, qword ptr fs:[0x28]
0x4469f1:	jne	0x4469fd
0x4469f3:	add	rsp, 0x20
0x4469f7:	pop	rbp
0x4469f8:	pop	r12
0x4469fa:	pop	r13
0x4469fc:	ret	
0x4469fd:	call	0x4039f0
0x446a02:	endbr64	
0x446a06:	mov	r12, rax
0x446a09:	jmp	0x42ceb6
0x446a0e:	nop	
0x446a10:	endbr64	
0x446a14:	push	r13
0x446a16:	mov	r13, rsi
0x446a19:	lea	rsi, [rip + 0x7de73]
0x446a20:	push	r12
0x446a22:	mov	r12, rdi
0x446a25:	push	rbp
0x446a26:	sub	rsp, 0x20
0x446a2a:	mov	rax, qword ptr fs:[0x28]
0x446a33:	mov	qword ptr [rsp + 0x18], rax
0x446a38:	xor	eax, eax
0x446a3a:	mov	rbp, rsp
0x446a3d:	mov	rdi, rbp
0x446a40:	call	0x446000
0x446a45:	mov	edx, 0x10
0x446a4a:	mov	rsi, rbp
0x446a4d:	mov	rdi, r12
0x446a50:	call	0x403de0
0x446a55:	mov	rdi, r13
0x446a58:	call	0x446620
0x446a5d:	mov	rdi, r12
0x446a60:	mov	r13, rax
0x446a63:	call	0x446660
0x446a68:	mov	rdi, rax
0x446a6b:	mov	rdx, r12
0x446a6e:	mov	rsi, r13
0x446a71:	call	0x446590
0x446a76:	mov	rdi, rbp
0x446a79:	call	0x4457c0
0x446a7e:	mov	rax, qword ptr [rsp + 0x18]
0x446a83:	sub	rax, qword ptr fs:[0x28]
0x446a8c:	jne	0x446a98
0x446a8e:	add	rsp, 0x20
0x446a92:	pop	rbp
0x446a93:	pop	r12
0x446a95:	pop	r13
0x446a97:	ret	
0x446a98:	call	0x4039f0
0x446a9d:	endbr64	
0x446aa1:	mov	r12, rax
0x446aa4:	jmp	0x42cec6
0x446aa9:	nop	dword ptr [rax]
0x446ab0:	endbr64	
0x446ab4:	sub	rsp, 8
0x446ab8:	call	0x446660
0x446abd:	add	rsp, 8
0x446ac1:	mov	rdi, rax
0x446ac4:	jmp	0x446630
0x446ac9:	nop	dword ptr [rax]
0x446ad0:	endbr64	
0x446ad4:	push	rbp
0x446ad5:	mov	rbp, rdi
0x446ad8:	call	0x446ab0
0x446add:	mov	rdi, rbp
0x446ae0:	pop	rbp
0x446ae1:	jmp	0x403ed0
0x446ae6:	nop	word ptr cs:[rax + rax]
0x446af0:	endbr64	
0x446af4:	push	r13
0x446af6:	mov	r13, rsi
0x446af9:	lea	rsi, [rip + 0x7dd93]
0x446b00:	push	r12
0x446b02:	mov	r12, rdi
0x446b05:	push	rbp
0x446b06:	sub	rsp, 0x20
0x446b0a:	mov	rax, qword ptr fs:[0x28]
0x446b13:	mov	qword ptr [rsp + 0x18], rax
0x446b18:	xor	eax, eax
0x446b1a:	mov	rbp, rsp
0x446b1d:	mov	rdi, rbp
0x446b20:	call	0x446020
0x446b25:	mov	edx, 0x10
0x446b2a:	mov	rsi, rbp
0x446b2d:	mov	rdi, r12
0x446b30:	call	0x403de0
0x446b35:	mov	rdi, r12
0x446b38:	call	0x446660
0x446b3d:	mov	rdi, rax
0x446b40:	mov	rdx, r12
0x446b43:	mov	rsi, r13
0x446b46:	call	0x446590
0x446b4b:	mov	rdi, rbp
0x446b4e:	call	0x445800
0x446b53:	mov	rax, qword ptr [rsp + 0x18]
0x446b58:	sub	rax, qword ptr fs:[0x28]
0x446b61:	jne	0x446b6d
0x446b63:	add	rsp, 0x20
0x446b67:	pop	rbp
0x446b68:	pop	r12
0x446b6a:	pop	r13
0x446b6c:	ret	
0x446b6d:	call	0x4039f0
0x446b72:	endbr64	
0x446b76:	mov	r12, rax
0x446b79:	jmp	0x42ced6
0x446b7e:	nop	
0x446b80:	endbr64	
0x446b84:	push	r13
0x446b86:	mov	r13, rsi
0x446b89:	lea	rsi, [rip + 0x7dd03]
0x446b90:	push	r12
0x446b92:	mov	r12, rdi
0x446b95:	push	rbp
0x446b96:	sub	rsp, 0x20
0x446b9a:	mov	rax, qword ptr fs:[0x28]
0x446ba3:	mov	qword ptr [rsp + 0x18], rax
0x446ba8:	xor	eax, eax
0x446baa:	mov	rbp, rsp
0x446bad:	mov	rdi, rbp
0x446bb0:	call	0x446020
0x446bb5:	mov	edx, 0x10
0x446bba:	mov	rsi, rbp
0x446bbd:	mov	rdi, r12
0x446bc0:	call	0x403de0
0x446bc5:	mov	rdi, r13
0x446bc8:	call	0x446620
0x446bcd:	mov	rdi, r12
0x446bd0:	mov	r13, rax
0x446bd3:	call	0x446660
0x446bd8:	mov	rdi, rax
0x446bdb:	mov	rdx, r12
0x446bde:	mov	rsi, r13
0x446be1:	call	0x446590
0x446be6:	mov	rdi, rbp
0x446be9:	call	0x445800
0x446bee:	mov	rax, qword ptr [rsp + 0x18]
0x446bf3:	sub	rax, qword ptr fs:[0x28]
0x446bfc:	jne	0x446c08
0x446bfe:	add	rsp, 0x20
0x446c02:	pop	rbp
0x446c03:	pop	r12
0x446c05:	pop	r13
0x446c07:	ret	
0x446c08:	call	0x4039f0
0x446c0d:	endbr64	
0x446c11:	mov	r12, rax
0x446c14:	jmp	0x42cee6
0x446c19:	nop	dword ptr [rax]
0x446c20:	endbr64	
0x446c24:	sub	rsp, 8
0x446c28:	call	0x446660
0x446c2d:	add	rsp, 8
0x446c31:	mov	rdi, rax
0x446c34:	jmp	0x446630
0x446c39:	nop	dword ptr [rax]
0x446c40:	endbr64	
0x446c44:	push	rbp
0x446c45:	mov	rbp, rdi
0x446c48:	call	0x446c20
0x446c4d:	mov	rdi, rbp
0x446c50:	pop	rbp
0x446c51:	jmp	0x403ed0
0x446c56:	nop	word ptr cs:[rax + rax]
0x446c60:	endbr64	
0x446c64:	push	r13
0x446c66:	mov	r13, rsi
0x446c69:	lea	rsi, [rip + 0x7dc23]
0x446c70:	push	r12
0x446c72:	mov	r12, rdi
0x446c75:	push	rbp
0x446c76:	sub	rsp, 0x20
0x446c7a:	mov	rax, qword ptr fs:[0x28]
0x446c83:	mov	qword ptr [rsp + 0x18], rax
0x446c88:	xor	eax, eax
0x446c8a:	mov	rbp, rsp
0x446c8d:	mov	rdi, rbp
0x446c90:	call	0x446040
0x446c95:	mov	edx, 0x10
0x446c9a:	mov	rsi, rbp
0x446c9d:	mov	rdi, r12
0x446ca0:	call	0x403de0
0x446ca5:	mov	rdi, r12
0x446ca8:	call	0x446660
0x446cad:	mov	rdi, rax
0x446cb0:	mov	rdx, r12
0x446cb3:	mov	rsi, r13
0x446cb6:	call	0x446590
0x446cbb:	mov	rdi, rbp
0x446cbe:	call	0x445840
0x446cc3:	mov	rax, qword ptr [rsp + 0x18]
0x446cc8:	sub	rax, qword ptr fs:[0x28]
0x446cd1:	jne	0x446cdd
0x446cd3:	add	rsp, 0x20
0x446cd7:	pop	rbp
0x446cd8:	pop	r12
0x446cda:	pop	r13
0x446cdc:	ret	
0x446cdd:	call	0x4039f0
0x446ce2:	endbr64	
0x446ce6:	mov	r12, rax
0x446ce9:	jmp	0x42cef6
0x446cee:	nop	
0x446cf0:	endbr64	
0x446cf4:	push	r13
0x446cf6:	mov	r13, rsi
0x446cf9:	lea	rsi, [rip + 0x7db93]
0x446d00:	push	r12
0x446d02:	mov	r12, rdi
0x446d05:	push	rbp
0x446d06:	sub	rsp, 0x20
0x446d0a:	mov	rax, qword ptr fs:[0x28]
0x446d13:	mov	qword ptr [rsp + 0x18], rax
0x446d18:	xor	eax, eax
0x446d1a:	mov	rbp, rsp
0x446d1d:	mov	rdi, rbp
0x446d20:	call	0x446040
0x446d25:	mov	edx, 0x10
0x446d2a:	mov	rsi, rbp
0x446d2d:	mov	rdi, r12
0x446d30:	call	0x403de0
0x446d35:	mov	rdi, r13
0x446d38:	call	0x446620
0x446d3d:	mov	rdi, r12
0x446d40:	mov	r13, rax
0x446d43:	call	0x446660
0x446d48:	mov	rdi, rax
0x446d4b:	mov	rdx, r12
0x446d4e:	mov	rsi, r13
0x446d51:	call	0x446590
0x446d56:	mov	rdi, rbp
0x446d59:	call	0x445840
0x446d5e:	mov	rax, qword ptr [rsp + 0x18]
0x446d63:	sub	rax, qword ptr fs:[0x28]
0x446d6c:	jne	0x446d78
0x446d6e:	add	rsp, 0x20
0x446d72:	pop	rbp
0x446d73:	pop	r12
0x446d75:	pop	r13
0x446d77:	ret	
0x446d78:	call	0x4039f0
0x446d7d:	endbr64	
0x446d81:	mov	r12, rax
0x446d84:	jmp	0x42cf06
0x446d89:	nop	dword ptr [rax]
0x446d90:	endbr64	
0x446d94:	sub	rsp, 8
0x446d98:	call	0x446660
0x446d9d:	add	rsp, 8
0x446da1:	mov	rdi, rax
0x446da4:	jmp	0x446630
0x446da9:	nop	dword ptr [rax]
0x446db0:	endbr64	
0x446db4:	push	rbp
0x446db5:	mov	rbp, rdi
0x446db8:	call	0x446d90
0x446dbd:	mov	rdi, rbp
0x446dc0:	pop	rbp
0x446dc1:	jmp	0x403ed0
0x446dc6:	nop	word ptr cs:[rax + rax]
0x446dd0:	endbr64	
0x446dd4:	push	r13
0x446dd6:	mov	r13, rsi
0x446dd9:	lea	rsi, [rip + 0x7dab3]
0x446de0:	push	r12
0x446de2:	mov	r12, rdi
0x446de5:	push	rbp
0x446de6:	sub	rsp, 0x20
0x446dea:	mov	rax, qword ptr fs:[0x28]
0x446df3:	mov	qword ptr [rsp + 0x18], rax
0x446df8:	xor	eax, eax
0x446dfa:	mov	rbp, rsp
0x446dfd:	mov	rdi, rbp
0x446e00:	call	0x446060
0x446e05:	mov	edx, 0x10
0x446e0a:	mov	rsi, rbp
0x446e0d:	mov	rdi, r12
0x446e10:	call	0x403de0
0x446e15:	mov	rdi, r12
0x446e18:	call	0x446670
0x446e1d:	mov	rdi, rax
0x446e20:	mov	rdx, r12
0x446e23:	mov	rsi, r13
0x446e26:	call	0x446590
0x446e2b:	mov	rdi, rbp
0x446e2e:	call	0x445880
0x446e33:	mov	rax, qword ptr [rsp + 0x18]
0x446e38:	sub	rax, qword ptr fs:[0x28]
0x446e41:	jne	0x446e4d
0x446e43:	add	rsp, 0x20
0x446e47:	pop	rbp
0x446e48:	pop	r12
0x446e4a:	pop	r13
0x446e4c:	ret	
0x446e4d:	call	0x4039f0
0x446e52:	endbr64	
0x446e56:	mov	r12, rax
0x446e59:	jmp	0x42cf16
0x446e5e:	nop	
0x446e60:	endbr64	
0x446e64:	push	r13
0x446e66:	mov	r13, rsi
0x446e69:	lea	rsi, [rip + 0x7da23]
0x446e70:	push	r12
0x446e72:	mov	r12, rdi
0x446e75:	push	rbp
0x446e76:	sub	rsp, 0x20
0x446e7a:	mov	rax, qword ptr fs:[0x28]
0x446e83:	mov	qword ptr [rsp + 0x18], rax
0x446e88:	xor	eax, eax
0x446e8a:	mov	rbp, rsp
0x446e8d:	mov	rdi, rbp
0x446e90:	call	0x446060
0x446e95:	mov	edx, 0x10
0x446e9a:	mov	rsi, rbp
0x446e9d:	mov	rdi, r12
0x446ea0:	call	0x403de0
0x446ea5:	mov	rdi, r13
0x446ea8:	call	0x446620
0x446ead:	mov	rdi, r12
0x446eb0:	mov	r13, rax
0x446eb3:	call	0x446670
0x446eb8:	mov	rdi, rax
0x446ebb:	mov	rdx, r12
0x446ebe:	mov	rsi, r13
0x446ec1:	call	0x446590
0x446ec6:	mov	rdi, rbp
0x446ec9:	call	0x445880
0x446ece:	mov	rax, qword ptr [rsp + 0x18]
0x446ed3:	sub	rax, qword ptr fs:[0x28]
0x446edc:	jne	0x446ee8
0x446ede:	add	rsp, 0x20
0x446ee2:	pop	rbp
0x446ee3:	pop	r12
0x446ee5:	pop	r13
0x446ee7:	ret	
0x446ee8:	call	0x4039f0
0x446eed:	endbr64	
0x446ef1:	mov	r12, rax
0x446ef4:	jmp	0x42cf26
0x446ef9:	nop	dword ptr [rax]
0x446f00:	endbr64	
0x446f04:	sub	rsp, 8
0x446f08:	call	0x446670
0x446f0d:	add	rsp, 8
0x446f11:	mov	rdi, rax
0x446f14:	jmp	0x446630
0x446f19:	nop	dword ptr [rax]
0x446f20:	endbr64	
0x446f24:	push	rbp
0x446f25:	mov	rbp, rdi
0x446f28:	call	0x446f00
0x446f2d:	mov	rdi, rbp
0x446f30:	pop	rbp
0x446f31:	jmp	0x403ed0
0x446f36:	nop	word ptr cs:[rax + rax]
0x446f40:	endbr64	
0x446f44:	sub	rsp, 8
0x446f48:	call	0x446670
0x446f4d:	add	rsp, 8
0x446f51:	mov	rdi, rax
0x446f54:	jmp	0x446610
0x446f59:	nop	dword ptr [rax]
0x446f60:	endbr64	
0x446f64:	push	r13
0x446f66:	mov	r13, rsi
0x446f69:	lea	rsi, [rip + 0x7d923]
0x446f70:	push	r12
0x446f72:	mov	r12, rdi
0x446f75:	push	rbp
0x446f76:	sub	rsp, 0x20
0x446f7a:	mov	rax, qword ptr fs:[0x28]
0x446f83:	mov	qword ptr [rsp + 0x18], rax
0x446f88:	xor	eax, eax
0x446f8a:	mov	rbp, rsp
0x446f8d:	mov	rdi, rbp
0x446f90:	call	0x446160
0x446f95:	mov	edx, 0x10
0x446f9a:	mov	rsi, rbp
0x446f9d:	mov	rdi, r12
0x446fa0:	call	0x403de0
0x446fa5:	mov	rdi, r12
0x446fa8:	call	0x446670
0x446fad:	mov	rdi, rax
0x446fb0:	mov	rdx, r12
0x446fb3:	mov	rsi, r13
0x446fb6:	call	0x446590
0x446fbb:	mov	rdi, rbp
0x446fbe:	call	0x445940
0x446fc3:	mov	rax, qword ptr [rsp + 0x18]
0x446fc8:	sub	rax, qword ptr fs:[0x28]
0x446fd1:	jne	0x446fdd
0x446fd3:	add	rsp, 0x20
0x446fd7:	pop	rbp
0x446fd8:	pop	r12
0x446fda:	pop	r13
0x446fdc:	ret	
0x446fdd:	call	0x4039f0
0x446fe2:	endbr64	
0x446fe6:	mov	r12, rax
0x446fe9:	jmp	0x42cf36
0x446fee:	nop	
0x446ff0:	endbr64	
0x446ff4:	push	r13
0x446ff6:	mov	r13, rsi
0x446ff9:	lea	rsi, [rip + 0x7d893]
0x447000:	push	r12
0x447002:	mov	r12, rdi
0x447005:	push	rbp
0x447006:	sub	rsp, 0x20
0x44700a:	mov	rax, qword ptr fs:[0x28]
0x447013:	mov	qword ptr [rsp + 0x18], rax
0x447018:	xor	eax, eax
0x44701a:	mov	rbp, rsp
0x44701d:	mov	rdi, rbp
0x447020:	call	0x446160
0x447025:	mov	edx, 0x10
0x44702a:	mov	rsi, rbp
0x44702d:	mov	rdi, r12
0x447030:	call	0x403de0
0x447035:	mov	rdi, r13
0x447038:	call	0x446620
0x44703d:	mov	rdi, r12
0x447040:	mov	r13, rax
0x447043:	call	0x446670
0x447048:	mov	rdi, rax
0x44704b:	mov	rdx, r12
0x44704e:	mov	rsi, r13
0x447051:	call	0x446590
0x447056:	mov	rdi, rbp
0x447059:	call	0x445940
0x44705e:	mov	rax, qword ptr [rsp + 0x18]
0x447063:	sub	rax, qword ptr fs:[0x28]
0x44706c:	jne	0x447078
0x44706e:	add	rsp, 0x20
0x447072:	pop	rbp
0x447073:	pop	r12
0x447075:	pop	r13
0x447077:	ret	
0x447078:	call	0x4039f0
0x44707d:	endbr64	
0x447081:	mov	r12, rax
0x447084:	jmp	0x42cf46
0x447089:	nop	dword ptr [rax]
0x447090:	endbr64	
0x447094:	sub	rsp, 8
0x447098:	call	0x446670
0x44709d:	add	rsp, 8
0x4470a1:	mov	rdi, rax
0x4470a4:	jmp	0x446630
0x4470a9:	nop	dword ptr [rax]
0x4470b0:	endbr64	
0x4470b4:	push	rbp
0x4470b5:	mov	rbp, rdi
0x4470b8:	call	0x447090
0x4470bd:	mov	rdi, rbp
0x4470c0:	pop	rbp
0x4470c1:	jmp	0x403ed0
0x4470c6:	nop	word ptr cs:[rax + rax]
0x4470d0:	endbr64	
0x4470d4:	push	r13
0x4470d6:	mov	r13, rsi
0x4470d9:	lea	rsi, [rip + 0x7d7b3]
0x4470e0:	push	r12
0x4470e2:	mov	r12, rdi
0x4470e5:	push	rbp
0x4470e6:	sub	rsp, 0x20
0x4470ea:	mov	rax, qword ptr fs:[0x28]
0x4470f3:	mov	qword ptr [rsp + 0x18], rax
0x4470f8:	xor	eax, eax
0x4470fa:	mov	rbp, rsp
0x4470fd:	mov	rdi, rbp
0x447100:	call	0x446180
0x447105:	mov	edx, 0x10
0x44710a:	mov	rsi, rbp
0x44710d:	mov	rdi, r12
0x447110:	call	0x403de0
0x447115:	mov	rdi, r12
0x447118:	call	0x446670
0x44711d:	mov	rdi, rax
0x447120:	mov	rdx, r12
0x447123:	mov	rsi, r13
0x447126:	call	0x446590
0x44712b:	mov	rdi, rbp
0x44712e:	call	0x445980
0x447133:	mov	rax, qword ptr [rsp + 0x18]
0x447138:	sub	rax, qword ptr fs:[0x28]
0x447141:	jne	0x44714d
0x447143:	add	rsp, 0x20
0x447147:	pop	rbp
0x447148:	pop	r12
0x44714a:	pop	r13
0x44714c:	ret	
0x44714d:	call	0x4039f0
0x447152:	endbr64	
0x447156:	mov	r12, rax
0x447159:	jmp	0x42cf56
0x44715e:	nop	
0x447160:	endbr64	
0x447164:	push	r13
0x447166:	mov	r13, rsi
0x447169:	lea	rsi, [rip + 0x7d723]
0x447170:	push	r12
0x447172:	mov	r12, rdi
0x447175:	push	rbp
0x447176:	sub	rsp, 0x20
0x44717a:	mov	rax, qword ptr fs:[0x28]
0x447183:	mov	qword ptr [rsp + 0x18], rax
0x447188:	xor	eax, eax
0x44718a:	mov	rbp, rsp
0x44718d:	mov	rdi, rbp
0x447190:	call	0x446180
0x447195:	mov	edx, 0x10
0x44719a:	mov	rsi, rbp
0x44719d:	mov	rdi, r12
0x4471a0:	call	0x403de0
0x4471a5:	mov	rdi, r13
0x4471a8:	call	0x446620
0x4471ad:	mov	rdi, r12
0x4471b0:	mov	r13, rax
0x4471b3:	call	0x446670
0x4471b8:	mov	rdi, rax
0x4471bb:	mov	rdx, r12
0x4471be:	mov	rsi, r13
0x4471c1:	call	0x446590
0x4471c6:	mov	rdi, rbp
0x4471c9:	call	0x445980
0x4471ce:	mov	rax, qword ptr [rsp + 0x18]
0x4471d3:	sub	rax, qword ptr fs:[0x28]
0x4471dc:	jne	0x4471e8
0x4471de:	add	rsp, 0x20
0x4471e2:	pop	rbp
0x4471e3:	pop	r12
0x4471e5:	pop	r13
0x4471e7:	ret	
0x4471e8:	call	0x4039f0
0x4471ed:	endbr64	
0x4471f1:	mov	r12, rax
0x4471f4:	jmp	0x42cf66
0x4471f9:	nop	dword ptr [rax]
0x447200:	endbr64	
0x447204:	sub	rsp, 8
0x447208:	call	0x446670
0x44720d:	add	rsp, 8
0x447211:	mov	rdi, rax
0x447214:	jmp	0x446630
0x447219:	nop	dword ptr [rax]
0x447220:	endbr64	
0x447224:	push	rbp
0x447225:	mov	rbp, rdi
0x447228:	call	0x447200
0x44722d:	mov	rdi, rbp
0x447230:	pop	rbp
0x447231:	jmp	0x403ed0
0x447236:	nop	word ptr cs:[rax + rax]
0x447240:	endbr64	
0x447244:	push	r13
0x447246:	mov	r13, rsi
0x447249:	lea	rsi, [rip + 0x7d643]
0x447250:	push	r12
0x447252:	mov	r12, rdi
0x447255:	push	rbp
0x447256:	sub	rsp, 0x20
0x44725a:	mov	rax, qword ptr fs:[0x28]
0x447263:	mov	qword ptr [rsp + 0x18], rax
0x447268:	xor	eax, eax
0x44726a:	mov	rbp, rsp
0x44726d:	mov	rdi, rbp
0x447270:	call	0x4461a0
0x447275:	mov	edx, 0x10
0x44727a:	mov	rsi, rbp
0x44727d:	mov	rdi, r12
0x447280:	call	0x403de0
0x447285:	mov	rdi, r12
0x447288:	call	0x446670
0x44728d:	mov	rdi, rax
0x447290:	mov	rdx, r12
0x447293:	mov	rsi, r13
0x447296:	call	0x446590
0x44729b:	mov	rdi, rbp
0x44729e:	call	0x4459c0
0x4472a3:	mov	rax, qword ptr [rsp + 0x18]
0x4472a8:	sub	rax, qword ptr fs:[0x28]
0x4472b1:	jne	0x4472bd
0x4472b3:	add	rsp, 0x20
0x4472b7:	pop	rbp
0x4472b8:	pop	r12
0x4472ba:	pop	r13
0x4472bc:	ret	
0x4472bd:	call	0x4039f0
0x4472c2:	endbr64	
0x4472c6:	mov	r12, rax
0x4472c9:	jmp	0x42cf76
0x4472ce:	nop	
0x4472d0:	endbr64	
0x4472d4:	push	r13
0x4472d6:	mov	r13, rsi
0x4472d9:	lea	rsi, [rip + 0x7d5b3]
0x4472e0:	push	r12
0x4472e2:	mov	r12, rdi
0x4472e5:	push	rbp
0x4472e6:	sub	rsp, 0x20
0x4472ea:	mov	rax, qword ptr fs:[0x28]
0x4472f3:	mov	qword ptr [rsp + 0x18], rax
0x4472f8:	xor	eax, eax
0x4472fa:	mov	rbp, rsp
0x4472fd:	mov	rdi, rbp
0x447300:	call	0x4461a0
0x447305:	mov	edx, 0x10
0x44730a:	mov	rsi, rbp
0x44730d:	mov	rdi, r12
0x447310:	call	0x403de0
0x447315:	mov	rdi, r13
0x447318:	call	0x446620
0x44731d:	mov	rdi, r12
0x447320:	mov	r13, rax
0x447323:	call	0x446670
0x447328:	mov	rdi, rax
0x44732b:	mov	rdx, r12
0x44732e:	mov	rsi, r13
0x447331:	call	0x446590
0x447336:	mov	rdi, rbp
0x447339:	call	0x4459c0
0x44733e:	mov	rax, qword ptr [rsp + 0x18]
0x447343:	sub	rax, qword ptr fs:[0x28]
0x44734c:	jne	0x447358
0x44734e:	add	rsp, 0x20
0x447352:	pop	rbp
0x447353:	pop	r12
0x447355:	pop	r13
0x447357:	ret	
0x447358:	call	0x4039f0
0x44735d:	endbr64	
0x447361:	mov	r12, rax
0x447364:	jmp	0x42cf86
0x447369:	nop	dword ptr [rax]
0x447370:	endbr64	
0x447374:	sub	rsp, 8
0x447378:	call	0x446670
0x44737d:	add	rsp, 8
0x447381:	mov	rdi, rax
0x447384:	jmp	0x446630
0x447389:	nop	dword ptr [rax]
0x447390:	endbr64	
0x447394:	push	rbp
0x447395:	mov	rbp, rdi
0x447398:	call	0x447370
0x44739d:	mov	rdi, rbp
0x4473a0:	pop	rbp
0x4473a1:	jmp	0x403ed0
0x4473a6:	nop	word ptr cs:[rax + rax]
0x4473b0:	endbr64	
0x4473b4:	mov	rax, qword ptr [rdi]
0x4473b7:	ret	
0x4473b8:	nop	dword ptr [rax + rax]
0x4473c0:	endbr64	
0x4473c4:	mov	qword ptr [rdi], rsi
0x4473c7:	mov	rax, rsi
0x4473ca:	ret	
0x4473cb:	nop	dword ptr [rax + rax]
0x4473d0:	endbr64	
0x4473d4:	mov	rax, qword ptr [rdi]
0x4473d7:	sub	rax, 0x18
0x4473db:	ret	
0x4473dc:	nop	dword ptr [rax]
0x4473e0:	endbr64	
0x4473e4:	mov	rax, qword ptr [rdi]
0x4473e7:	ret	
0x4473e8:	nop	dword ptr [rax + rax]
0x4473f0:	endbr64	
0x4473f4:	mov	rax, qword ptr [rdi]
0x4473f7:	add	rax, qword ptr [rax - 0x18]
0x4473fb:	ret	
0x4473fc:	nop	dword ptr [rax]
0x447400:	endbr64	
0x447404:	mov	rax, rsi
0x447407:	mov	rsi, rdx
0x44740a:	mov	rdx, qword ptr [rdi]
0x44740d:	mov	rcx, qword ptr [rdx - 0x18]
0x447411:	cmp	rcx, rax
0x447414:	jb	0x447417
0x447416:	ret	
0x447417:	push	rdx
0x447418:	lea	rdi, [rip + 0x85199]
0x44741f:	mov	rdx, rax
0x447422:	xor	eax, eax
0x447424:	call	0x440770
0x447429:	nop	dword ptr [rax]
0x447430:	endbr64	
0x447434:	movabs	rax, 0x3ffffffffffffff9
0x44743e:	add	rsi, rax
0x447441:	mov	rax, qword ptr [rdi]
0x447444:	sub	rsi, qword ptr [rax - 0x18]
0x447448:	cmp	rsi, rdx
0x44744b:	jb	0x44744e
0x44744d:	ret	
0x44744e:	push	rax
0x44744f:	mov	rdi, rcx
0x447452:	call	0x42c9f3
0x447457:	nop	word ptr [rax + rax]
0x447460:	endbr64	
0x447464:	mov	rax, qword ptr [rdi]
0x447467:	mov	rax, qword ptr [rax - 0x18]
0x44746b:	sub	rax, rsi
0x44746e:	cmp	rax, rdx
0x447471:	cmova	rax, rdx
0x447475:	ret	
0x447476:	nop	word ptr cs:[rax + rax]
0x447480:	endbr64	
0x447484:	mov	rax, qword ptr [rdi]
0x447487:	mov	r8d, 1
0x44748d:	cmp	rax, rsi
0x447490:	ja	0x44749d
0x447492:	add	rax, qword ptr [rax - 0x18]
0x447496:	cmp	rax, rsi
0x447499:	setb	r8b
0x44749d:	mov	eax, r8d
0x4474a0:	ret	
0x4474a1:	nop	word ptr cs:[rax + rax]
0x4474ab:	nop	dword ptr [rax + rax]
0x4474b0:	endbr64	
0x4474b4:	cmp	rdx, 1
0x4474b8:	je	0x4474c8
0x4474ba:	test	rdx, rdx
0x4474bd:	jne	0x4474c0
0x4474bf:	ret	
0x4474c0:	jmp	0x403c60
0x4474c5:	nop	dword ptr [rax]
0x4474c8:	movzx	eax, byte ptr [rsi]
0x4474cb:	mov	byte ptr [rdi], al
0x4474cd:	ret	
0x4474ce:	nop	
0x4474d0:	endbr64	
0x4474d4:	cmp	rdx, 1
0x4474d8:	je	0x4474e8
0x4474da:	test	rdx, rdx
0x4474dd:	jne	0x4474e0
0x4474df:	ret	
0x4474e0:	jmp	0x403d90
0x4474e5:	nop	dword ptr [rax]
0x4474e8:	movzx	eax, byte ptr [rsi]
0x4474eb:	mov	byte ptr [rdi], al
0x4474ed:	ret	
0x4474ee:	nop	
0x4474f0:	endbr64	
0x4474f4:	mov	r8, rsi
0x4474f7:	cmp	rsi, 1
0x4474fb:	je	0x447518
0x4474fd:	test	rsi, rsi
0x447500:	jne	0x447508
0x447502:	ret	
0x447503:	nop	dword ptr [rax + rax]
0x447508:	movsx	esi, dl
0x44750b:	mov	rdx, r8
0x44750e:	jmp	0x403ac0
0x447513:	nop	dword ptr [rax + rax]
0x447518:	mov	byte ptr [rdi], dl
0x44751a:	ret	
0x44751b:	nop	dword ptr [rax + rax]
0x447520:	endbr64	
0x447524:	sub	rdx, rsi
0x447527:	cmp	rdx, 1
0x44752b:	je	0x447540
0x44752d:	test	rdx, rdx
0x447530:	jne	0x447538
0x447532:	ret	
0x447533:	nop	dword ptr [rax + rax]
0x447538:	jmp	0x403c60
0x44753d:	nop	dword ptr [rax]
0x447540:	movzx	eax, byte ptr [rsi]
0x447543:	mov	byte ptr [rdi], al
0x447545:	ret	
0x447546:	nop	word ptr cs:[rax + rax]
0x447550:	endbr64	
0x447554:	sub	rdx, rsi
0x447557:	cmp	rdx, 1
0x44755b:	je	0x447570
0x44755d:	test	rdx, rdx
0x447560:	jne	0x447568
0x447562:	ret	
0x447563:	nop	dword ptr [rax + rax]
0x447568:	jmp	0x403c60
0x44756d:	nop	dword ptr [rax]
0x447570:	movzx	eax, byte ptr [rsi]
0x447573:	mov	byte ptr [rdi], al
0x447575:	ret	
0x447576:	nop	word ptr cs:[rax + rax]
0x447580:	endbr64	
0x447584:	sub	rdx, rsi
0x447587:	cmp	rdx, 1
0x44758b:	je	0x4475a0
0x44758d:	test	rdx, rdx
0x447590:	jne	0x447598
0x447592:	ret	
0x447593:	nop	dword ptr [rax + rax]
0x447598:	jmp	0x403c60
0x44759d:	nop	dword ptr [rax]
0x4475a0:	movzx	eax, byte ptr [rsi]
0x4475a3:	mov	byte ptr [rdi], al
0x4475a5:	ret	
0x4475a6:	nop	word ptr cs:[rax + rax]
0x4475b0:	endbr64	
0x4475b4:	sub	rdx, rsi
0x4475b7:	cmp	rdx, 1
0x4475bb:	je	0x4475d0
0x4475bd:	test	rdx, rdx
0x4475c0:	jne	0x4475c8
0x4475c2:	ret	
0x4475c3:	nop	dword ptr [rax + rax]
0x4475c8:	jmp	0x403c60
0x4475cd:	nop	dword ptr [rax]
0x4475d0:	movzx	eax, byte ptr [rsi]
0x4475d3:	mov	byte ptr [rdi], al
0x4475d5:	ret	
0x4475d6:	nop	word ptr cs:[rax + rax]
0x4475e0:	endbr64	
0x4475e4:	sub	rdi, rsi
0x4475e7:	mov	eax, 0x7fffffff
0x4475ec:	cmp	rdi, 0x7fffffff
0x4475f3:	jg	0x447604
0x4475f5:	cmp	rdi, -0x80000000
0x4475fc:	mov	eax, 0x80000000
0x447601:	cmovge	eax, edi
0x447604:	ret	
0x447605:	nop	word ptr cs:[rax + rax]
0x44760f:	nop	
0x447610:	endbr64	
0x447614:	mov	rax, 0x4e65a0
0x44761b:	ret	
0x44761c:	nop	dword ptr [rax]
0x447620:	endbr64	
0x447624:	mov	rax, 0x4e65a0
0x44762b:	add	rax, 0x18
0x44762f:	mov	qword ptr [rdi], rax
0x447632:	ret	
0x447633:	nop	word ptr cs:[rax + rax]
0x44763d:	nop	dword ptr [rax]
0x447640:	endbr64	
0x447644:	mov	rax, qword ptr [rsi]
0x447647:	mov	qword ptr [rdi], rax
0x44764a:	mov	rax, 0x4e65a0
0x447651:	add	rax, 0x18
0x447655:	mov	qword ptr [rsi], rax
0x447658:	ret	
0x447659:	nop	dword ptr [rax]
0x447660:	endbr64	
0x447664:	mov	rax, qword ptr [rsi]
0x447667:	mov	qword ptr [rdi], rax
0x44766a:	mov	rax, 0x4e65a0
0x447671:	add	rax, 0x18
0x447675:	mov	qword ptr [rsi], rax
0x447678:	ret	
0x447679:	nop	dword ptr [rax]
0x447680:	endbr64	
0x447684:	mov	rax, qword ptr [rdi]
0x447687:	ret	
0x447688:	nop	dword ptr [rax + rax]
0x447690:	endbr64	
0x447694:	mov	rax, qword ptr [rdi]
0x447697:	add	rax, qword ptr [rax - 0x18]
0x44769b:	ret	
0x44769c:	nop	dword ptr [rax]
0x4476a0:	endbr64	
0x4476a4:	mov	rdx, qword ptr [rsi]
0x4476a7:	mov	rax, rdi
0x4476aa:	add	rdx, qword ptr [rdx - 0x18]
0x4476ae:	mov	qword ptr [rdi], rdx
0x4476b1:	ret	
0x4476b2:	nop	word ptr cs:[rax + rax]
0x4476bc:	nop	dword ptr [rax]
0x4476c0:	endbr64	
0x4476c4:	mov	rdx, qword ptr [rsi]
0x4476c7:	mov	rax, rdi
0x4476ca:	mov	qword ptr [rdi], rdx
0x4476cd:	ret	
0x4476ce:	nop	
0x4476d0:	endbr64	
0x4476d4:	mov	rax, qword ptr [rdi]
0x4476d7:	ret	
0x4476d8:	nop	dword ptr [rax + rax]
0x4476e0:	endbr64	
0x4476e4:	mov	rax, qword ptr [rdi]
0x4476e7:	add	rax, qword ptr [rax - 0x18]
0x4476eb:	ret	
0x4476ec:	nop	dword ptr [rax]
0x4476f0:	endbr64	
0x4476f4:	mov	rdx, qword ptr [rsi]
0x4476f7:	mov	rax, rdi
0x4476fa:	add	rdx, qword ptr [rdx - 0x18]
0x4476fe:	mov	qword ptr [rdi], rdx
0x447701:	ret	
0x447702:	nop	word ptr cs:[rax + rax]
0x44770c:	nop	dword ptr [rax]
0x447710:	endbr64	
0x447714:	mov	rdx, qword ptr [rsi]
0x447717:	mov	rax, rdi
0x44771a:	mov	qword ptr [rdi], rdx
0x44771d:	ret	
0x44771e:	nop	
0x447720:	endbr64	
0x447724:	mov	rax, qword ptr [rdi]
0x447727:	mov	rax, qword ptr [rax - 0x18]
0x44772b:	ret	
0x44772c:	nop	dword ptr [rax]
0x447730:	endbr64	
0x447734:	mov	rax, qword ptr [rdi]
0x447737:	mov	rax, qword ptr [rax - 0x18]
0x44773b:	ret	
0x44773c:	nop	dword ptr [rax]
0x447740:	endbr64	
0x447744:	movabs	rax, 0x3ffffffffffffff9
0x44774e:	ret	
0x44774f:	nop	
0x447750:	endbr64	
0x447754:	mov	rax, qword ptr [rdi]
0x447757:	mov	rax, qword ptr [rax - 0x10]
0x44775b:	ret	
0x44775c:	nop	dword ptr [rax]
0x447760:	endbr64	
0x447764:	mov	rax, qword ptr [rdi]
0x447767:	cmp	qword ptr [rax - 0x18], 0
0x44776c:	sete	al
0x44776f:	ret	
0x447770:	endbr64	
0x447774:	mov	rax, qword ptr [rdi]
0x447777:	add	rax, rsi
0x44777a:	ret	
0x44777b:	nop	dword ptr [rax + rax]
0x447780:	endbr64	
0x447784:	mov	rax, qword ptr [rdi]
0x447787:	mov	rdx, qword ptr [rax - 0x18]
0x44778b:	cmp	rsi, rdx
0x44778e:	jae	0x447794
0x447790:	add	rax, rsi
0x447793:	ret	
0x447794:	push	rax
0x447795:	lea	rdi, [rip + 0x84e54]
0x44779c:	xor	eax, eax
0x44779e:	call	0x440770
0x4477a3:	nop	word ptr cs:[rax + rax]
0x4477ad:	nop	dword ptr [rax]
0x4477b0:	endbr64	
0x4477b4:	mov	rax, qword ptr [rdi]
0x4477b7:	ret	
0x4477b8:	nop	dword ptr [rax + rax]
0x4477c0:	endbr64	
0x4477c4:	mov	rax, qword ptr [rdi]
0x4477c7:	mov	rdx, qword ptr [rax - 0x18]
0x4477cb:	lea	rax, [rax + rdx - 1]
0x4477d0:	ret	
0x4477d1:	nop	word ptr cs:[rax + rax]
0x4477db:	nop	dword ptr [rax + rax]
0x4477e0:	endbr64	
0x4477e4:	mov	r9, rdi
0x4477e7:	mov	rdi, rsi
0x4477ea:	push	r12
0x4477ec:	mov	r8, rcx
0x4477ef:	mov	rsi, qword ptr [r9]
0x4477f2:	mov	r12, qword ptr [rsi - 0x18]
0x4477f6:	cmp	rcx, r12
0x4477f9:	ja	0x447833
0x4477fb:	sub	r12, rcx
0x4477fe:	cmp	r12, rdx
0x447801:	cmova	r12, rdx
0x447805:	test	r12, r12
0x447808:	je	0x44781b
0x44780a:	add	rsi, rcx
0x44780d:	cmp	r12, 1
0x447811:	je	0x447828
0x447813:	mov	rdx, r12
0x447816:	call	0x403c60
0x44781b:	mov	rax, r12
0x44781e:	pop	r12
0x447820:	ret	
0x447821:	nop	dword ptr [rax]
0x447828:	movzx	eax, byte ptr [rsi]
0x44782b:	mov	byte ptr [rdi], al
0x44782d:	mov	rax, r12
0x447830:	pop	r12
0x447832:	ret	
0x447833:	mov	rcx, r12
0x447836:	mov	rdx, r8
0x447839:	lea	rsi, [rip + 0x84e93]
0x447840:	xor	eax, eax
0x447842:	lea	rdi, [rip + 0x84d6f]
0x447849:	call	0x440770
0x44784e:	nop	
0x447850:	endbr64	
0x447854:	mov	rax, qword ptr [rdi]
0x447857:	mov	edx, dword ptr [rax - 8]
0x44785a:	test	edx, edx
0x44785c:	jns	0x447865
0x44785e:	mov	dword ptr [rax - 8], 0
0x447865:	mov	rdx, qword ptr [rsi]
0x447868:	mov	ecx, dword ptr [rdx - 8]
0x44786b:	test	ecx, ecx
0x44786d:	jns	0x447876
0x44786f:	mov	dword ptr [rdx - 8], 0
0x447876:	mov	qword ptr [rdi], rdx
0x447879:	mov	qword ptr [rsi], rax
0x44787c:	ret	
0x44787d:	nop	dword ptr [rax]
0x447880:	endbr64	
0x447884:	push	r12
0x447886:	mov	r12, rdi
0x447889:	call	0x447850
0x44788e:	mov	rax, r12
0x447891:	pop	r12
0x447893:	ret	
0x447894:	nop	word ptr cs:[rax + rax]
0x44789e:	nop	
0x4478a0:	endbr64	
0x4478a4:	push	r12
0x4478a6:	mov	r12, rdi
0x4478a9:	call	0x447850
0x4478ae:	mov	rax, r12
0x4478b1:	pop	r12
0x4478b3:	ret	
0x4478b4:	nop	word ptr cs:[rax + rax]
0x4478be:	nop	
0x4478c0:	endbr64	
0x4478c4:	mov	rax, qword ptr [rdi]
0x4478c7:	ret	
0x4478c8:	nop	dword ptr [rax + rax]
0x4478d0:	endbr64	
0x4478d4:	mov	rax, qword ptr [rdi]
0x4478d7:	ret	
0x4478d8:	nop	dword ptr [rax + rax]
0x4478e0:	endbr64	
0x4478e4:	mov	rax, rdi
0x4478e7:	ret	
0x4478e8:	nop	dword ptr [rax + rax]
0x4478f0:	endbr64	
0x4478f4:	push	r15
0x4478f6:	push	r14
0x4478f8:	push	r13
0x4478fa:	push	r12
0x4478fc:	push	rbp
0x4478fd:	push	rbx
0x4478fe:	sub	rsp, 0x18
0x447902:	mov	r13, qword ptr [rdi]
0x447905:	mov	rax, qword ptr [r13 - 0x18]
0x447909:	test	rcx, rcx
0x44790c:	je	0x4479a8
0x447912:	mov	r8, 0xffffffffffffffff
0x447919:	cmp	rax, rdx
0x44791c:	jbe	0x447991
0x44791e:	mov	r14, rcx
0x447921:	lea	rcx, [r13 + rax]
0x447926:	lea	rdi, [r13 + rdx]
0x44792b:	sub	rax, rdx
0x44792e:	mov	qword ptr [rsp + 8], rcx
0x447933:	cmp	r14, rax
0x447936:	ja	0x447991
0x447938:	mov	ebp, 1
0x44793d:	sub	rbp, r14
0x447940:	add	rax, rbp
0x447943:	mov	rdx, rax
0x447946:	je	0x447991
0x447948:	movsx	r15d, byte ptr [rsi]
0x44794c:	mov	r12, rsi
0x44794f:	mov	esi, r15d
0x447952:	call	0x403b40
0x447957:	mov	rbx, rax
0x44795a:	test	rax, rax
0x44795d:	je	0x44798a
0x44795f:	mov	rdx, r14
0x447962:	mov	rsi, r12
0x447965:	mov	rdi, rax
0x447968:	call	0x403b70
0x44796d:	test	eax, eax
0x44796f:	je	0x4479c0
0x447971:	mov	rax, qword ptr [rsp + 8]
0x447976:	lea	rdi, [rbx + 1]
0x44797a:	sub	rax, rdi
0x44797d:	cmp	r14, rax
0x447980:	ja	0x44798a
0x447982:	add	rax, rbp
0x447985:	mov	rdx, rax
0x447988:	jne	0x44794f
0x44798a:	mov	r8, 0xffffffffffffffff
0x447991:	add	rsp, 0x18
0x447995:	mov	rax, r8
0x447998:	pop	rbx
0x447999:	pop	rbp
0x44799a:	pop	r12
0x44799c:	pop	r13
0x44799e:	pop	r14
0x4479a0:	pop	r15
0x4479a2:	ret	
0x4479a3:	nop	dword ptr [rax + rax]
0x4479a8:	cmp	rax, rdx
0x4479ab:	mov	r8, 0xffffffffffffffff
0x4479b2:	cmovae	r8, rdx
0x4479b6:	jmp	0x447991
0x4479b8:	nop	dword ptr [rax + rax]
0x4479c0:	sub	rbx, r13
0x4479c3:	mov	r8, rbx
0x4479c6:	jmp	0x447991
0x4479c8:	nop	dword ptr [rax + rax]
0x4479d0:	endbr64	
0x4479d4:	mov	rsi, qword ptr [rsi]
0x4479d7:	mov	rcx, qword ptr [rsi - 0x18]
0x4479db:	jmp	0x4478f0
0x4479e0:	endbr64	
0x4479e4:	push	r13
0x4479e6:	mov	r13, rdx
0x4479e9:	push	r12
0x4479eb:	mov	r12, rdi
0x4479ee:	mov	rdi, rsi
0x4479f1:	push	rbp
0x4479f2:	mov	rbp, rsi
0x4479f5:	call	0x4039e0
0x4479fa:	mov	rdx, r13
0x4479fd:	mov	rsi, rbp
0x447a00:	mov	rdi, r12
0x447a03:	pop	rbp
0x447a04:	mov	rcx, rax
0x447a07:	pop	r12
0x447a09:	pop	r13
0x447a0b:	jmp	0x4478f0
0x447a10:	endbr64	
0x447a14:	push	r12
0x447a16:	mov	r12, 0xffffffffffffffff
0x447a1d:	push	rbx
0x447a1e:	sub	rsp, 8
0x447a22:	mov	rbx, qword ptr [rdi]
0x447a25:	mov	rax, qword ptr [rbx - 0x18]
0x447a29:	cmp	rdx, rax
0x447a2c:	jae	0x447a4e
0x447a2e:	sub	rax, rdx
0x447a31:	lea	rdi, [rbx + rdx]
0x447a35:	movsx	esi, sil
0x447a39:	mov	rdx, rax
0x447a3c:	call	0x403b40
0x447a41:	mov	rdx, rax
0x447a44:	sub	rdx, rbx
0x447a47:	test	rax, rax
0x447a4a:	cmovne	r12, rdx
0x447a4e:	add	rsp, 8
0x447a52:	mov	rax, r12
0x447a55:	pop	rbx
0x447a56:	pop	r12
0x447a58:	ret	
0x447a59:	nop	dword ptr [rax]
0x447a60:	endbr64	
0x447a64:	push	r13
0x447a66:	push	r12
0x447a68:	mov	r12, 0xffffffffffffffff
0x447a6f:	push	rbp
0x447a70:	push	rbx
0x447a71:	sub	rsp, 8
0x447a75:	mov	r13, qword ptr [rdi]
0x447a78:	mov	rax, qword ptr [r13 - 0x18]
0x447a7c:	cmp	rcx, rax
0x447a7f:	ja	0x447abf
0x447a81:	sub	rax, rcx
0x447a84:	mov	rbx, rcx
0x447a87:	mov	rbp, rsi
0x447a8a:	cmp	rax, rdx
0x447a8d:	cmovbe	rdx, rax
0x447a91:	mov	r12, rdx
0x447a94:	test	rbx, rbx
0x447a97:	je	0x447abf
0x447a99:	lea	rdi, [r13 + r12]
0x447a9e:	mov	rdx, rbx
0x447aa1:	mov	rsi, rbp
0x447aa4:	call	0x403b70
0x447aa9:	test	eax, eax
0x447aab:	je	0x447abf
0x447aad:	lea	rax, [r12 - 1]
0x447ab2:	test	r12, r12
0x447ab5:	je	0x447ad0
0x447ab7:	mov	r12, rax
0x447aba:	test	rbx, rbx
0x447abd:	jne	0x447a99
0x447abf:	add	rsp, 8
0x447ac3:	mov	rax, r12
0x447ac6:	pop	rbx
0x447ac7:	pop	rbp
0x447ac8:	pop	r12
0x447aca:	pop	r13
0x447acc:	ret	
0x447acd:	nop	dword ptr [rax]
0x447ad0:	mov	r12, 0xffffffffffffffff
0x447ad7:	jmp	0x447abf
0x447ad9:	nop	dword ptr [rax]
0x447ae0:	endbr64	
0x447ae4:	mov	rsi, qword ptr [rsi]
0x447ae7:	mov	rcx, qword ptr [rsi - 0x18]
0x447aeb:	jmp	0x447a60
0x447af0:	endbr64	
0x447af4:	push	r13
0x447af6:	mov	r13, rdx
0x447af9:	push	r12
0x447afb:	mov	r12, rdi
0x447afe:	mov	rdi, rsi
0x447b01:	push	rbp
0x447b02:	mov	rbp, rsi
0x447b05:	call	0x4039e0
0x447b0a:	mov	rdx, r13
0x447b0d:	mov	rsi, rbp
0x447b10:	mov	rdi, r12
0x447b13:	pop	rbp
0x447b14:	mov	rcx, rax
0x447b17:	pop	r12
0x447b19:	pop	r13
0x447b1b:	jmp	0x447a60
0x447b20:	endbr64	
0x447b24:	mov	rcx, qword ptr [rdi]
0x447b27:	mov	rax, 0xffffffffffffffff
0x447b2e:	mov	rdi, qword ptr [rcx - 0x18]
0x447b32:	test	rdi, rdi
0x447b35:	je	0x447b54
0x447b37:	sub	rdi, 1
0x447b3b:	mov	rax, rdx
0x447b3e:	cmp	rdi, rdx
0x447b41:	cmovbe	rax, rdi
0x447b45:	nop	dword ptr [rax]
0x447b48:	cmp	byte ptr [rcx + rax], sil
0x447b4c:	je	0x447b54
0x447b4e:	sub	rax, 1
0x447b52:	jae	0x447b48
0x447b54:	ret	
0x447b55:	nop	word ptr cs:[rax + rax]
0x447b5f:	nop	
0x447b60:	endbr64	
0x447b64:	test	rcx, rcx
0x447b67:	je	0x447bcc
0x447b69:	push	r14
0x447b6b:	push	r13
0x447b6d:	push	r12
0x447b6f:	mov	r12, rsi
0x447b72:	push	rbp
0x447b73:	mov	rbp, rcx
0x447b76:	push	rbx
0x447b77:	mov	r13, qword ptr [rdi]
0x447b7a:	mov	rbx, rdx
0x447b7d:	mov	r14, qword ptr [r13 - 0x18]
0x447b81:	jmp	0x447ba2
0x447b83:	nop	dword ptr [rax + rax]
0x447b88:	movsx	esi, byte ptr [r13 + rbx]
0x447b8e:	mov	rdx, rbp
0x447b91:	mov	rdi, r12
0x447b94:	call	0x403b40
0x447b99:	test	rax, rax
0x447b9c:	jne	0x447bc0
0x447b9e:	add	rbx, 1
0x447ba2:	cmp	r14, rbx
0x447ba5:	ja	0x447b88
0x447ba7:	pop	rbx
0x447ba8:	mov	rax, 0xffffffffffffffff
0x447baf:	pop	rbp
0x447bb0:	pop	r12
0x447bb2:	pop	r13
0x447bb4:	pop	r14
0x447bb6:	ret	
0x447bb7:	nop	word ptr [rax + rax]
0x447bc0:	mov	rax, rbx
0x447bc3:	pop	rbx
0x447bc4:	pop	rbp
0x447bc5:	pop	r12
0x447bc7:	pop	r13
0x447bc9:	pop	r14
0x447bcb:	ret	
0x447bcc:	mov	rax, 0xffffffffffffffff
0x447bd3:	ret	
0x447bd4:	nop	word ptr cs:[rax + rax]
0x447bde:	nop	
0x447be0:	endbr64	
0x447be4:	mov	rsi, qword ptr [rsi]
0x447be7:	mov	rcx, qword ptr [rsi - 0x18]
0x447beb:	jmp	0x447b60
0x447bf0:	endbr64	
0x447bf4:	push	r13
0x447bf6:	mov	r13, rdx
0x447bf9:	push	r12
0x447bfb:	mov	r12, rdi
0x447bfe:	mov	rdi, rsi
0x447c01:	push	rbp
0x447c02:	mov	rbp, rsi
0x447c05:	call	0x4039e0
0x447c0a:	mov	rdx, r13
0x447c0d:	mov	rsi, rbp
0x447c10:	mov	rdi, r12
0x447c13:	pop	rbp
0x447c14:	mov	rcx, rax
0x447c17:	pop	r12
0x447c19:	pop	r13
0x447c1b:	jmp	0x447b60
0x447c20:	endbr64	
0x447c24:	movsx	esi, sil
0x447c28:	jmp	0x447a10
0x447c2d:	nop	dword ptr [rax]
0x447c30:	endbr64	
0x447c34:	push	r13
0x447c36:	push	r12
0x447c38:	push	rbp
0x447c39:	push	rbx
0x447c3a:	sub	rsp, 8
0x447c3e:	mov	r13, qword ptr [rdi]
0x447c41:	mov	r12, qword ptr [r13 - 0x18]
0x447c45:	test	r12, r12
0x447c48:	je	0x447c98
0x447c4a:	mov	rbx, rcx
0x447c4d:	test	rcx, rcx
0x447c50:	je	0x447c98
0x447c52:	sub	r12, 1
0x447c56:	mov	rbp, rsi
0x447c59:	cmp	r12, rdx
0x447c5c:	cmova	r12, rdx
0x447c60:	jmp	0x447c6e
0x447c62:	nop	word ptr [rax + rax]
0x447c68:	sub	r12, 1
0x447c6c:	jb	0x447c84
0x447c6e:	movsx	esi, byte ptr [r13 + r12]
0x447c74:	mov	rdx, rbx
0x447c77:	mov	rdi, rbp
0x447c7a:	call	0x403b40
0x447c7f:	test	rax, rax
0x447c82:	je	0x447c68
0x447c84:	add	rsp, 8
0x447c88:	mov	rax, r12
0x447c8b:	pop	rbx
0x447c8c:	pop	rbp
0x447c8d:	pop	r12
0x447c8f:	pop	r13
0x447c91:	ret	
0x447c92:	nop	word ptr [rax + rax]
0x447c98:	add	rsp, 8
0x447c9c:	mov	r12, 0xffffffffffffffff
0x447ca3:	pop	rbx
0x447ca4:	mov	rax, r12
0x447ca7:	pop	rbp
0x447ca8:	pop	r12
0x447caa:	pop	r13
0x447cac:	ret	
0x447cad:	nop	dword ptr [rax]
0x447cb0:	endbr64	
0x447cb4:	mov	rsi, qword ptr [rsi]
0x447cb7:	mov	rcx, qword ptr [rsi - 0x18]
0x447cbb:	jmp	0x447c30
0x447cc0:	endbr64	
0x447cc4:	push	r13
0x447cc6:	mov	r13, rdx
0x447cc9:	push	r12
0x447ccb:	mov	r12, rdi
0x447cce:	mov	rdi, rsi
0x447cd1:	push	rbp
0x447cd2:	mov	rbp, rsi
0x447cd5:	call	0x4039e0
0x447cda:	mov	rdx, r13
0x447cdd:	mov	rsi, rbp
0x447ce0:	mov	rdi, r12
0x447ce3:	pop	rbp
0x447ce4:	mov	rcx, rax
0x447ce7:	pop	r12
0x447ce9:	pop	r13
0x447ceb:	jmp	0x447c30
0x447cf0:	endbr64	
0x447cf4:	movsx	esi, sil
0x447cf8:	jmp	0x447b20
0x447cfd:	nop	dword ptr [rax]
0x447d00:	endbr64	
0x447d04:	push	r14
0x447d06:	push	r13
0x447d08:	push	r12
0x447d0a:	push	rbp
0x447d0b:	push	rbx
0x447d0c:	mov	r13, qword ptr [rdi]
0x447d0f:	mov	r14, qword ptr [r13 - 0x18]
0x447d13:	cmp	rdx, r14
0x447d16:	jae	0x447d60
0x447d18:	mov	r12, rsi
0x447d1b:	mov	rbx, rdx
0x447d1e:	mov	rbp, rcx
0x447d21:	test	rcx, rcx
0x447d24:	jne	0x447d39
0x447d26:	jmp	0x447d4f
0x447d28:	nop	dword ptr [rax + rax]
0x447d30:	add	rbx, 1
0x447d34:	cmp	rbx, r14
0x447d37:	je	0x447d60
0x447d39:	movsx	esi, byte ptr [r13 + rbx]
0x447d3f:	mov	rdx, rbp
0x447d42:	mov	rdi, r12
0x447d45:	call	0x403b40
0x447d4a:	test	rax, rax
0x447d4d:	jne	0x447d30
0x447d4f:	mov	rax, rbx
0x447d52:	pop	rbx
0x447d53:	pop	rbp
0x447d54:	pop	r12
0x447d56:	pop	r13
0x447d58:	pop	r14
0x447d5a:	ret	
0x447d5b:	nop	dword ptr [rax + rax]
0x447d60:	pop	rbx
0x447d61:	mov	rax, 0xffffffffffffffff
0x447d68:	pop	rbp
0x447d69:	pop	r12
0x447d6b:	pop	r13
0x447d6d:	pop	r14
0x447d6f:	ret	
0x447d70:	endbr64	
0x447d74:	mov	rsi, qword ptr [rsi]
0x447d77:	mov	rcx, qword ptr [rsi - 0x18]
0x447d7b:	jmp	0x447d00
0x447d80:	endbr64	
0x447d84:	push	r13
0x447d86:	mov	r13, rdx
0x447d89:	push	r12
0x447d8b:	mov	r12, rdi
0x447d8e:	mov	rdi, rsi
0x447d91:	push	rbp
0x447d92:	mov	rbp, rsi
0x447d95:	call	0x4039e0
0x447d9a:	mov	rdx, r13
0x447d9d:	mov	rsi, rbp
0x447da0:	mov	rdi, r12
0x447da3:	pop	rbp
0x447da4:	mov	rcx, rax
0x447da7:	pop	r12
0x447da9:	pop	r13
0x447dab:	jmp	0x447d00
0x447db0:	endbr64	
0x447db4:	mov	rax, qword ptr [rdi]
0x447db7:	mov	rcx, qword ptr [rax - 0x18]
0x447dbb:	cmp	rdx, rcx
0x447dbe:	jb	0x447dd1
0x447dc0:	jmp	0x447de0
0x447dc2:	nop	word ptr [rax + rax]
0x447dc8:	add	rdx, 1
0x447dcc:	cmp	rdx, rcx
0x447dcf:	je	0x447de0
0x447dd1:	cmp	byte ptr [rax + rdx], sil
0x447dd5:	je	0x447dc8
0x447dd7:	mov	rax, rdx
0x447dda:	ret	
0x447ddb:	nop	dword ptr [rax + rax]
0x447de0:	mov	rax, 0xffffffffffffffff
0x447de7:	ret	
0x447de8:	nop	dword ptr [rax + rax]
0x447df0:	endbr64	
0x447df4:	push	r13
0x447df6:	push	r12
0x447df8:	mov	r12, 0xffffffffffffffff
0x447dff:	push	rbp
0x447e00:	push	rbx
0x447e01:	sub	rsp, 8
0x447e05:	mov	r13, qword ptr [rdi]
0x447e08:	mov	rax, qword ptr [r13 - 0x18]
0x447e0c:	test	rax, rax
0x447e0f:	je	0x447e46
0x447e11:	sub	rax, 1
0x447e15:	mov	rbp, rsi
0x447e18:	mov	rbx, rcx
0x447e1b:	cmp	rax, rdx
0x447e1e:	cmovbe	rdx, rax
0x447e22:	mov	r12, rdx
0x447e25:	test	rbx, rbx
0x447e28:	je	0x447e46
0x447e2a:	movsx	esi, byte ptr [r13 + r12]
0x447e30:	mov	rdx, rbx
0x447e33:	mov	rdi, rbp
0x447e36:	call	0x403b40
0x447e3b:	test	rax, rax
0x447e3e:	je	0x447e46
0x447e40:	sub	r12, 1
0x447e44:	jae	0x447e25
0x447e46:	add	rsp, 8
0x447e4a:	mov	rax, r12
0x447e4d:	pop	rbx
0x447e4e:	pop	rbp
0x447e4f:	pop	r12
0x447e51:	pop	r13
0x447e53:	ret	
0x447e54:	nop	word ptr cs:[rax + rax]
0x447e5e:	nop	
0x447e60:	endbr64	
0x447e64:	mov	rsi, qword ptr [rsi]
0x447e67:	mov	rcx, qword ptr [rsi - 0x18]
0x447e6b:	jmp	0x447df0
0x447e70:	endbr64	
0x447e74:	push	r13
0x447e76:	mov	r13, rdx
0x447e79:	push	r12
0x447e7b:	mov	r12, rdi
0x447e7e:	mov	rdi, rsi
0x447e81:	push	rbp
0x447e82:	mov	rbp, rsi
0x447e85:	call	0x4039e0
0x447e8a:	mov	rdx, r13
0x447e8d:	mov	rsi, rbp
0x447e90:	mov	rdi, r12
0x447e93:	pop	rbp
0x447e94:	mov	rcx, rax
0x447e97:	pop	r12
0x447e99:	pop	r13
0x447e9b:	jmp	0x447df0
0x447ea0:	endbr64	
0x447ea4:	mov	rcx, qword ptr [rdi]
0x447ea7:	mov	rax, 0xffffffffffffffff
0x447eae:	mov	rdi, qword ptr [rcx - 0x18]
0x447eb2:	test	rdi, rdi
0x447eb5:	je	0x447edc
0x447eb7:	sub	rdi, 1
0x447ebb:	mov	rax, rdx
0x447ebe:	cmp	rdi, rdx
0x447ec1:	cmovbe	rax, rdi
0x447ec5:	jmp	0x447ed6
0x447ec7:	nop	word ptr [rax + rax]
0x447ed0:	sub	rax, 1
0x447ed4:	jb	0x447edc
0x447ed6:	cmp	byte ptr [rcx + rax], sil
0x447eda:	je	0x447ed0
0x447edc:	ret	
0x447edd:	nop	dword ptr [rax]
0x447ee0:	endbr64	
0x447ee4:	push	rbp
0x447ee5:	push	rbx
0x447ee6:	sub	rsp, 8
0x447eea:	mov	rdi, qword ptr [rdi]
0x447eed:	mov	rsi, qword ptr [rsi]
0x447ef0:	mov	rbx, qword ptr [rdi - 0x18]
0x447ef4:	mov	rbp, qword ptr [rsi - 0x18]
0x447ef8:	mov	rdx, rbx
0x447efb:	cmp	rbp, rbx
0x447efe:	cmovbe	rdx, rbp
0x447f02:	test	rdx, rdx
0x447f05:	je	0x447f10
0x447f07:	call	0x403b70
0x447f0c:	test	eax, eax
0x447f0e:	jne	0x447f30
0x447f10:	sub	rbx, rbp
0x447f13:	mov	eax, 0x7fffffff
0x447f18:	cmp	rbx, 0x7fffffff
0x447f1f:	jg	0x447f30
0x447f21:	cmp	rbx, -0x80000000
0x447f28:	mov	eax, 0x80000000
0x447f2d:	cmovge	eax, ebx
0x447f30:	add	rsp, 8
0x447f34:	pop	rbx
0x447f35:	pop	rbp
0x447f36:	ret	
0x447f37:	nop	word ptr [rax + rax]
0x447f40:	endbr64	
0x447f44:	push	rbp
0x447f45:	push	rbx
0x447f46:	sub	rsp, 8
0x447f4a:	mov	rdi, qword ptr [rdi]
0x447f4d:	mov	rbx, qword ptr [rdi - 0x18]
0x447f51:	cmp	rsi, rbx
0x447f54:	ja	0x447fac
0x447f56:	sub	rbx, rsi
0x447f59:	mov	r8, qword ptr [rcx]
0x447f5c:	cmp	rbx, rdx
0x447f5f:	cmova	rbx, rdx
0x447f63:	mov	rbp, qword ptr [r8 - 0x18]
0x447f67:	mov	rdx, rbx
0x447f6a:	cmp	rbp, rbx
0x447f6d:	cmovbe	rdx, rbp
0x447f71:	test	rdx, rdx
0x447f74:	je	0x447f85
0x447f76:	add	rdi, rsi
0x447f79:	mov	rsi, r8
0x447f7c:	call	0x403b70
0x447f81:	test	eax, eax
0x447f83:	jne	0x447fa5
0x447f85:	sub	rbx, rbp
0x447f88:	mov	eax, 0x7fffffff
0x447f8d:	cmp	rbx, 0x7fffffff
0x447f94:	jg	0x447fa5
0x447f96:	cmp	rbx, -0x80000000
0x447f9d:	mov	eax, 0x80000000
0x447fa2:	cmovge	eax, ebx
0x447fa5:	add	rsp, 8
0x447fa9:	pop	rbx
0x447faa:	pop	rbp
0x447fab:	ret	
0x447fac:	mov	rdx, rsi
0x447faf:	mov	rcx, rbx
0x447fb2:	lea	rsi, [rip + 0x8472d]
0x447fb9:	xor	eax, eax
0x447fbb:	lea	rdi, [rip + 0x845f6]
0x447fc2:	call	0x440770
0x447fc7:	nop	word ptr [rax + rax]
0x447fd0:	endbr64	
0x447fd4:	push	rbp
0x447fd5:	mov	r10, rsi
0x447fd8:	push	rbx
0x447fd9:	sub	rsp, 8
0x447fdd:	mov	rdi, qword ptr [rdi]
0x447fe0:	mov	rbx, qword ptr [rdi - 0x18]
0x447fe4:	cmp	rsi, rbx
0x447fe7:	ja	0x44804e
0x447fe9:	mov	rsi, qword ptr [rcx]
0x447fec:	mov	rbp, qword ptr [rsi - 0x18]
0x447ff0:	cmp	r8, rbp
0x447ff3:	ja	0x448069
0x447ff5:	sub	rbx, r10
0x447ff8:	cmp	rbx, rdx
0x447ffb:	cmova	rbx, rdx
0x447fff:	sub	rbp, r8
0x448002:	cmp	rbp, r9
0x448005:	cmova	rbp, r9
0x448009:	mov	rdx, rbx
0x44800c:	cmp	rbp, rbx
0x44800f:	cmovbe	rdx, rbp
0x448013:	test	rdx, rdx
0x448016:	je	0x448027
0x448018:	add	rsi, r8
0x44801b:	add	rdi, r10
0x44801e:	call	0x403b70
0x448023:	test	eax, eax
0x448025:	jne	0x448047
0x448027:	sub	rbx, rbp
0x44802a:	mov	eax, 0x7fffffff
0x44802f:	cmp	rbx, 0x7fffffff
0x448036:	jg	0x448047
0x448038:	cmp	rbx, -0x80000000
0x44803f:	mov	eax, 0x80000000
0x448044:	cmovge	eax, ebx
0x448047:	add	rsp, 8
0x44804b:	pop	rbx
0x44804c:	pop	rbp
0x44804d:	ret	
0x44804e:	mov	rdx, rsi
0x448051:	mov	rcx, rbx
0x448054:	lea	rsi, [rip + 0x8468b]
0x44805b:	xor	eax, eax
0x44805d:	lea	rdi, [rip + 0x84554]
0x448064:	call	0x440770
0x448069:	mov	rcx, rbp
0x44806c:	mov	rdx, r8
0x44806f:	lea	rsi, [rip + 0x84670]
0x448076:	xor	eax, eax
0x448078:	lea	rdi, [rip + 0x84539]
0x44807f:	call	0x440770
0x448084:	nop	word ptr cs:[rax + rax]
0x44808e:	nop	
0x448090:	endbr64	
0x448094:	push	r13
0x448096:	push	r12
0x448098:	mov	r12, rsi
0x44809b:	push	rbp
0x44809c:	push	rbx
0x44809d:	sub	rsp, 8
0x4480a1:	mov	r13, qword ptr [rdi]
0x4480a4:	mov	rdi, rsi
0x4480a7:	call	0x4039e0
0x4480ac:	mov	rbx, qword ptr [r13 - 0x18]
0x4480b0:	mov	rbp, rax
0x4480b3:	cmp	rax, rbx
0x4480b6:	mov	rdx, rbx
0x4480b9:	cmovbe	rdx, rax
0x4480bd:	test	rdx, rdx
0x4480c0:	je	0x4480d1
0x4480c2:	mov	rsi, r12
0x4480c5:	mov	rdi, r13
0x4480c8:	call	0x403b70
0x4480cd:	test	eax, eax
0x4480cf:	jne	0x4480f1
0x4480d1:	sub	rbx, rbp
0x4480d4:	mov	eax, 0x7fffffff
0x4480d9:	cmp	rbx, 0x7fffffff
0x4480e0:	jg	0x4480f1
0x4480e2:	cmp	rbx, -0x80000000
0x4480e9:	mov	eax, 0x80000000
0x4480ee:	cmovge	eax, ebx
0x4480f1:	add	rsp, 8
0x4480f5:	pop	rbx
0x4480f6:	pop	rbp
0x4480f7:	pop	r12
0x4480f9:	pop	r13
0x4480fb:	ret	
0x4480fc:	nop	dword ptr [rax]
0x448100:	endbr64	
0x448104:	push	r14
0x448106:	push	r13
0x448108:	push	r12
0x44810a:	mov	r12, rsi
0x44810d:	push	rbp
0x44810e:	push	rbx
0x44810f:	mov	r14, qword ptr [rdi]
0x448112:	mov	rbx, qword ptr [r14 - 0x18]
0x448116:	cmp	rsi, rbx
0x448119:	ja	0x44817b
0x44811b:	sub	rbx, rsi
0x44811e:	mov	rdi, rcx
0x448121:	mov	r13, rcx
0x448124:	cmp	rbx, rdx
0x448127:	cmova	rbx, rdx
0x44812b:	call	0x4039e0
0x448130:	cmp	rax, rbx
0x448133:	mov	rdx, rbx
0x448136:	mov	rbp, rax
0x448139:	cmovbe	rdx, rax
0x44813d:	test	rdx, rdx
0x448140:	je	0x448152
0x448142:	lea	rdi, [r14 + r12]
0x448146:	mov	rsi, r13
0x448149:	call	0x403b70
0x44814e:	test	eax, eax
0x448150:	jne	0x448172
0x448152:	sub	rbx, rbp
0x448155:	mov	eax, 0x7fffffff
0x44815a:	cmp	rbx, 0x7fffffff
0x448161:	jg	0x448172
0x448163:	cmp	rbx, -0x80000000
0x44816a:	mov	eax, 0x80000000
0x44816f:	cmovge	eax, ebx
0x448172:	pop	rbx
0x448173:	pop	rbp
0x448174:	pop	r12
0x448176:	pop	r13
0x448178:	pop	r14
0x44817a:	ret	
0x44817b:	mov	rdx, rsi
0x44817e:	mov	rcx, rbx
0x448181:	lea	rsi, [rip + 0x8455e]
0x448188:	xor	eax, eax
0x44818a:	lea	rdi, [rip + 0x84427]
0x448191:	call	0x440770
0x448196:	nop	word ptr cs:[rax + rax]
0x4481a0:	endbr64	
0x4481a4:	push	rbp
0x4481a5:	mov	r9, rsi
0x4481a8:	push	rbx
0x4481a9:	sub	rsp, 8
0x4481ad:	mov	rdi, qword ptr [rdi]
0x4481b0:	mov	rbx, qword ptr [rdi - 0x18]
0x4481b4:	cmp	rsi, rbx
0x4481b7:	ja	0x44820b
0x4481b9:	sub	rbx, rsi
0x4481bc:	mov	rbp, r8
0x4481bf:	cmp	rbx, rdx
0x4481c2:	cmova	rbx, rdx
0x4481c6:	mov	rdx, r8
0x4481c9:	cmp	rbx, r8
0x4481cc:	cmovbe	rdx, rbx
0x4481d0:	test	rdx, rdx
0x4481d3:	je	0x4481e4
0x4481d5:	add	rdi, r9
0x4481d8:	mov	rsi, rcx
0x4481db:	call	0x403b70
0x4481e0:	test	eax, eax
0x4481e2:	jne	0x448204
0x4481e4:	sub	rbx, rbp
0x4481e7:	mov	eax, 0x7fffffff
0x4481ec:	cmp	rbx, 0x7fffffff
0x4481f3:	jg	0x448204
0x4481f5:	cmp	rbx, -0x80000000
0x4481fc:	mov	eax, 0x80000000
0x448201:	cmovge	eax, ebx
0x448204:	add	rsp, 8
0x448208:	pop	rbx
0x448209:	pop	rbp
0x44820a:	ret	
0x44820b:	mov	rdx, rsi
0x44820e:	mov	rcx, rbx
0x448211:	lea	rsi, [rip + 0x844ce]
0x448218:	xor	eax, eax
0x44821a:	lea	rdi, [rip + 0x84397]
0x448221:	call	0x440770
0x448226:	nop	word ptr cs:[rax + rax]
0x448230:	endbr64	
0x448234:	mov	rax, 0x4e65a0
0x44823b:	ret	
0x44823c:	nop	dword ptr [rax]
0x448240:	endbr64	
0x448244:	mov	eax, dword ptr [rdi + 0x10]
0x448247:	shr	eax, 0x1f
0x44824a:	ret	
0x44824b:	nop	dword ptr [rax + rax]
0x448250:	endbr64	
0x448254:	mov	eax, dword ptr [rdi + 0x10]
0x448257:	test	eax, eax
0x448259:	setg	al
0x44825c:	ret	
0x44825d:	nop	dword ptr [rax]
0x448260:	endbr64	
0x448264:	mov	dword ptr [rdi + 0x10], 0xffffffff
0x44826b:	ret	
0x44826c:	nop	dword ptr [rax]
0x448270:	endbr64	
0x448274:	mov	dword ptr [rdi + 0x10], 0
0x44827b:	ret	
0x44827c:	nop	dword ptr [rax]
0x448280:	endbr64	
0x448284:	cmp	rdi, 0x4e65a0
0x44828b:	jne	0x448290
0x44828d:	ret	
0x44828e:	nop	
0x448290:	mov	dword ptr [rdi + 0x10], 0
0x448297:	mov	qword ptr [rdi], rsi
0x44829a:	mov	byte ptr [rdi + rsi + 0x18], 0
0x44829f:	ret	
0x4482a0:	endbr64	
0x4482a4:	lea	rax, [rdi + 0x18]
0x4482a8:	ret	
0x4482a9:	nop	dword ptr [rax]
0x4482b0:	endbr64	
0x4482b4:	movabs	rax, 0x3ffffffffffffff9
0x4482be:	push	rbx
0x4482bf:	cmp	rdi, rax
0x4482c2:	ja	0x44833e
0x4482c4:	mov	rbx, rdi
0x4482c7:	cmp	rdi, rsi
0x4482ca:	jbe	0x448310
0x4482cc:	lea	rax, [rsi + rsi]
0x4482d0:	cmp	rdi, rax
0x4482d3:	cmovb	rbx, rax
0x4482d7:	lea	rax, [rbx + 0x39]
0x4482db:	cmp	rax, 0x1000
0x4482e1:	jbe	0x448330
0x4482e3:	cmp	rbx, rsi
0x4482e6:	jbe	0x448330
0x4482e8:	and	eax, 0xfff
0x4482ed:	add	rbx, 0x1000
0x4482f4:	sub	rbx, rax
0x4482f7:	movabs	rax, 0x3ffffffffffffff9
0x448301:	cmp	rbx, rax
0x448304:	cmova	rbx, rax
0x448308:	lea	rdi, [rbx + 0x19]
0x44830c:	jmp	0x448314
0x44830e:	nop	
0x448310:	lea	rdi, [rdi + 0x19]
0x448314:	call	0x440420
0x448319:	mov	qword ptr [rax + 8], rbx
0x44831d:	mov	dword ptr [rax + 0x10], 0
0x448324:	pop	rbx
0x448325:	ret	
0x448326:	nop	word ptr cs:[rax + rax]
0x448330:	mov	rdi, rbx
0x448333:	add	rdi, 0x19
0x448337:	jns	0x448314
0x448339:	call	0x42c817
0x44833e:	lea	rdi, [rip + 0x8484d]
0x448345:	call	0x42c9f3
0x44834a:	nop	word ptr [rax + rax]
0x448350:	endbr64	
0x448354:	test	rdi, rdi
0x448357:	jne	0x448370
0x448359:	mov	rax, 0x4e65a0
0x448360:	lea	r8, [rax + 0x18]
0x448364:	mov	rax, r8
0x448367:	ret	
0x448368:	nop	dword ptr [rax + rax]
0x448370:	push	r12
0x448372:	push	rbp
0x448373:	mov	ebp, esi
0x448375:	xor	esi, esi
0x448377:	push	rbx
0x448378:	mov	rbx, rdi
0x44837b:	call	0x4482b0
0x448380:	mov	r12, rax
0x448383:	lea	r8, [rax + 0x18]
0x448387:	cmp	rbx, 1
0x44838b:	je	0x4483b0
0x44838d:	mov	rdi, r8
0x448390:	movsx	esi, bpl
0x448394:	mov	rdx, rbx
0x448397:	call	0x403ac0
0x44839c:	mov	r8, rax
0x44839f:	cmp	r12, 0x4e65a0
0x4483a6:	jne	0x4483c0
0x4483a8:	pop	rbx
0x4483a9:	mov	rax, r8
0x4483ac:	pop	rbp
0x4483ad:	pop	r12
0x4483af:	ret	
0x4483b0:	mov	byte ptr [rax + 0x18], bpl
0x4483b4:	jmp	0x44839f
0x4483b6:	nop	word ptr cs:[rax + rax]
0x4483c0:	mov	dword ptr [r12 + 0x10], 0
0x4483c9:	mov	qword ptr [r12], rbx
0x4483cd:	mov	byte ptr [r12 + rbx + 0x18], 0
0x4483d3:	jmp	0x4483a8
0x4483d5:	nop	word ptr cs:[rax + rax]
0x4483df:	nop	
0x4483e0:	endbr64	
0x4483e4:	push	rbx
0x4483e5:	mov	rdx, rsi
0x4483e8:	mov	rbx, rdi
0x4483eb:	xor	esi, esi
0x4483ed:	xor	edi, edi
0x4483ef:	call	0x448350
0x4483f4:	mov	qword ptr [rbx], rax
0x4483f7:	pop	rbx
0x4483f8:	ret	
0x4483f9:	nop	dword ptr [rax]
0x448400:	endbr64	
0x448404:	push	rbx
0x448405:	mov	rbx, rdi
0x448408:	mov	rdi, rsi
0x44840b:	movsx	esi, dl
0x44840e:	mov	rdx, rcx
0x448411:	call	0x448350
0x448416:	mov	qword ptr [rbx], rax
0x448419:	pop	rbx
0x44841a:	ret	
0x44841b:	nop	dword ptr [rax + rax]
0x448420:	endbr64	
0x448424:	movsx	esi, sil
0x448428:	jmp	0x448350
0x44842d:	nop	dword ptr [rax]
0x448430:	endbr64	
0x448434:	jmp	0x444170
0x448439:	nop	dword ptr [rax]
0x448440:	endbr64	
0x448444:	cmp	rdi, 0x4e65a0
0x44844b:	jne	0x448450
0x44844d:	ret	
0x44844e:	nop	
0x448450:	mov	rax, qword ptr [rip + 0x99b91]
0x448457:	cmp	byte ptr [rax], 0
0x44845a:	je	0x448470
0x44845c:	mov	eax, dword ptr [rdi + 0x10]
0x44845f:	lea	edx, [rax - 1]
0x448462:	mov	dword ptr [rdi + 0x10], edx
0x448465:	test	eax, eax
0x448467:	jg	0x44844d
0x448469:	jmp	0x448430
0x44846e:	nop	
0x448470:	mov	eax, 0xffffffff
0x448475:	lock xadd	dword ptr [rdi + 0x10], eax
0x44847a:	jmp	0x448465
0x44847c:	nop	dword ptr [rax]
0x448480:	endbr64	
0x448484:	sub	rsp, 0x18
0x448488:	mov	rax, qword ptr fs:[0x28]
0x448491:	mov	qword ptr [rsp + 8], rax
0x448496:	mov	rax, qword ptr [rdi]
0x448499:	lea	rdi, [rax - 0x18]
0x44849d:	cmp	rdi, 0x4e65a0
0x4484a4:	jne	0x4484c0
0x4484a6:	mov	rax, qword ptr [rsp + 8]
0x4484ab:	sub	rax, qword ptr fs:[0x28]
0x4484b4:	jne	0x4484f4
0x4484b6:	add	rsp, 0x18
0x4484ba:	ret	
0x4484bb:	nop	dword ptr [rax + rax]
0x4484c0:	mov	rdx, qword ptr [rip + 0x99b21]
0x4484c7:	cmp	byte ptr [rdx], 0
0x4484ca:	je	0x4484e8
0x4484cc:	mov	edx, dword ptr [rax - 8]
0x4484cf:	lea	ecx, [rdx - 1]
0x4484d2:	mov	dword ptr [rax - 8], ecx
0x4484d5:	test	edx, edx
0x4484d7:	jg	0x4484a6
0x4484d9:	lea	rsi, [rsp + 7]
0x4484de:	call	0x448430
0x4484e3:	jmp	0x4484a6
0x4484e5:	nop	dword ptr [rax]
0x4484e8:	mov	edx, 0xffffffff
0x4484ed:	lock xadd	dword ptr [rax - 8], edx
0x4484f2:	jmp	0x4484d5
0x4484f4:	call	0x4039f0
0x4484f9:	nop	dword ptr [rax]
0x448500:	endbr64	
0x448504:	push	rbp
0x448505:	push	rbx
0x448506:	mov	rbx, rdi
0x448509:	sub	rsp, 0x18
0x44850d:	mov	rax, qword ptr fs:[0x28]
0x448516:	mov	qword ptr [rsp + 8], rax
0x44851b:	mov	rax, qword ptr [rdi]
0x44851e:	mov	eax, dword ptr [rax - 8]
0x448521:	test	eax, eax
0x448523:	mov	rax, qword ptr [rdi]
0x448526:	jle	0x448560
0x448528:	mov	rbp, 0x4e65a0
0x44852f:	lea	rdi, [rax - 0x18]
0x448533:	cmp	rdi, rbp
0x448536:	jne	0x448588
0x448538:	lea	rax, [rbp + 0x18]
0x44853c:	mov	qword ptr [rbx], rax
0x44853f:	mov	rax, qword ptr [rsp + 8]
0x448544:	sub	rax, qword ptr fs:[0x28]
0x44854d:	jne	0x4485bc
0x44854f:	add	rsp, 0x18
0x448553:	pop	rbx
0x448554:	pop	rbp
0x448555:	ret	
0x448556:	nop	word ptr cs:[rax + rax]
0x448560:	lea	rdx, [rax - 0x18]
0x448564:	cmp	rdx, 0x4e65a0
0x44856b:	je	0x44853f
0x44856d:	mov	dword ptr [rax - 8], 0
0x448574:	mov	qword ptr [rax - 0x18], 0
0x44857c:	mov	byte ptr [rax], 0
0x44857f:	jmp	0x44853f
0x448581:	nop	dword ptr [rax]
0x448588:	mov	rdx, qword ptr [rip + 0x99a59]
0x44858f:	cmp	byte ptr [rdx], 0
0x448592:	je	0x4485b0
0x448594:	mov	edx, dword ptr [rax - 8]
0x448597:	lea	ecx, [rdx - 1]
0x44859a:	mov	dword ptr [rax - 8], ecx
0x44859d:	test	edx, edx
0x44859f:	jg	0x448538
0x4485a1:	lea	rsi, [rsp + 7]
0x4485a6:	call	0x448430
0x4485ab:	jmp	0x448538
0x4485ad:	nop	dword ptr [rax]
0x4485b0:	mov	edx, 0xffffffff
0x4485b5:	lock xadd	dword ptr [rax - 8], edx
0x4485ba:	jmp	0x44859d
0x4485bc:	call	0x4039f0
0x4485c1:	nop	word ptr cs:[rax + rax]
0x4485cb:	nop	dword ptr [rax + rax]
0x4485d0:	endbr64	
0x4485d4:	push	r15
0x4485d6:	mov	rax, rdx
0x4485d9:	mov	r15, rcx
0x4485dc:	push	r14
0x4485de:	sub	r15, rax
0x4485e1:	push	r13
0x4485e3:	mov	r13, rcx
0x4485e6:	lea	rcx, [rax + rsi]
0x4485ea:	push	r12
0x4485ec:	push	rbp
0x4485ed:	mov	rbp, rsi
0x4485f0:	push	rbx
0x4485f1:	mov	rbx, rdi
0x4485f4:	sub	rsp, 0x28
0x4485f8:	mov	rdx, qword ptr fs:[0x28]
0x448601:	mov	qword ptr [rsp + 0x18], rdx
0x448606:	mov	rdx, qword ptr [rdi]
0x448609:	mov	r12, qword ptr [rdx - 0x18]
0x44860d:	mov	rsi, qword ptr [rdx - 0x10]
0x448611:	add	r15, r12
0x448614:	sub	r12, rcx
0x448617:	cmp	r15, rsi
0x44861a:	ja	0x44862e
0x44861c:	mov	edx, dword ptr [rdx - 8]
0x44861f:	test	edx, edx
0x448621:	jle	0x448708
0x448627:	mov	rax, qword ptr [rdi]
0x44862a:	mov	rsi, qword ptr [rax - 0x10]
0x44862e:	lea	r14, [rsp + 0x17]
0x448633:	mov	rdi, r15
0x448636:	mov	qword ptr [rsp], rcx
0x44863a:	mov	rdx, r14
0x44863d:	call	0x4482b0
0x448642:	test	rbp, rbp
0x448645:	mov	rcx, qword ptr [rsp]
0x448649:	mov	r9, rax
0x44864c:	lea	r8, [rax + 0x18]
0x448650:	je	0x448683
0x448652:	mov	rsi, qword ptr [rbx]
0x448655:	lea	r8, [rax + 0x18]
0x448659:	cmp	rbp, 1
0x44865d:	je	0x448770
0x448663:	mov	rdi, r8
0x448666:	mov	rdx, rbp
0x448669:	mov	qword ptr [rsp + 8], rcx
0x44866e:	mov	qword ptr [rsp], rax
0x448672:	call	0x403c60
0x448677:	mov	rcx, qword ptr [rsp + 8]
0x44867c:	mov	r9, qword ptr [rsp]
0x448680:	mov	r8, rax
0x448683:	test	r12, r12
0x448686:	jne	0x4486d0
0x448688:	mov	rax, qword ptr [rbx]
0x44868b:	mov	rbp, 0x4e65a0
0x448692:	lea	rdi, [rax - 0x18]
0x448696:	cmp	rdi, rbp
0x448699:	jne	0x448798
0x44869f:	mov	qword ptr [rbx], r8
0x4486a2:	cmp	r9, rbp
0x4486a5:	jne	0x448750
0x4486ab:	mov	rax, qword ptr [rsp + 0x18]
0x4486b0:	sub	rax, qword ptr fs:[0x28]
0x4486b9:	jne	0x4487fc
0x4486bf:	add	rsp, 0x28
0x4486c3:	pop	rbx
0x4486c4:	pop	rbp
0x4486c5:	pop	r12
0x4486c7:	pop	r13
0x4486c9:	pop	r14
0x4486cb:	pop	r15
0x4486cd:	ret	
0x4486ce:	nop	
0x4486d0:	add	rcx, qword ptr [rbx]
0x4486d3:	lea	rdi, [rbp + r13 + 0x18]
0x4486d8:	mov	rsi, rcx
0x4486db:	add	rdi, r9
0x4486de:	cmp	r12, 1
0x4486e2:	je	0x448788
0x4486e8:	mov	rdx, r12
0x4486eb:	mov	qword ptr [rsp + 8], r8
0x4486f0:	mov	qword ptr [rsp], r9
0x4486f4:	call	0x403c60
0x4486f9:	mov	r8, qword ptr [rsp + 8]
0x4486fe:	mov	r9, qword ptr [rsp]
0x448702:	jmp	0x448688
0x448704:	nop	dword ptr [rax]
0x448708:	mov	r8, qword ptr [rdi]
0x44870b:	test	r12, r12
0x44870e:	je	0x448735
0x448710:	cmp	r13, rax
0x448713:	je	0x448735
0x448715:	add	r13, rbp
0x448718:	lea	rsi, [r8 + rcx]
0x44871c:	lea	rdi, [r8 + r13]
0x448720:	cmp	r12, 1
0x448724:	je	0x4487d8
0x44872a:	mov	rdx, r12
0x44872d:	call	0x403d90
0x448732:	mov	r8, qword ptr [rbx]
0x448735:	mov	rbp, 0x4e65a0
0x44873c:	lea	r9, [r8 - 0x18]
0x448740:	cmp	r9, rbp
0x448743:	je	0x4486ab
0x448749:	nop	dword ptr [rax]
0x448750:	mov	dword ptr [r8 - 8], 0
0x448758:	mov	qword ptr [r8 - 0x18], r15
0x44875c:	mov	byte ptr [r8 + r15], 0
0x448761:	jmp	0x4486ab
0x448766:	nop	word ptr cs:[rax + rax]
0x448770:	movzx	eax, byte ptr [rsi]
0x448773:	mov	byte ptr [r9 + 0x18], al
0x448777:	test	r12, r12
0x44877a:	je	0x448688
0x448780:	jmp	0x4486d0
0x448785:	nop	dword ptr [rax]
0x448788:	movzx	eax, byte ptr [rcx]
0x44878b:	mov	byte ptr [rdi], al
0x44878d:	jmp	0x448688
0x448792:	nop	word ptr [rax + rax]
0x448798:	mov	rdx, qword ptr [rip + 0x99849]
0x44879f:	cmp	byte ptr [rdx], 0
0x4487a2:	je	0x4487f0
0x4487a4:	mov	edx, dword ptr [rax - 8]
0x4487a7:	lea	ecx, [rdx - 1]
0x4487aa:	mov	dword ptr [rax - 8], ecx
0x4487ad:	test	edx, edx
0x4487af:	jg	0x44869f
0x4487b5:	mov	rsi, r14
0x4487b8:	mov	qword ptr [rsp + 8], r8
0x4487bd:	mov	qword ptr [rsp], r9
0x4487c1:	call	0x448430
0x4487c6:	mov	r8, qword ptr [rsp + 8]
0x4487cb:	mov	r9, qword ptr [rsp]
0x4487cf:	jmp	0x44869f
0x4487d4:	nop	dword ptr [rax]
0x4487d8:	movzx	eax, byte ptr [rsi]
0x4487db:	mov	rbp, 0x4e65a0
0x4487e2:	mov	byte ptr [rdi], al
0x4487e4:	mov	r8, qword ptr [rbx]
0x4487e7:	lea	r9, [r8 - 0x18]
0x4487eb:	jmp	0x4486a2
0x4487f0:	mov	edx, 0xffffffff
0x4487f5:	lock xadd	dword ptr [rax - 8], edx
0x4487fa:	jmp	0x4487ad
0x4487fc:	call	0x4039f0
0x448801:	nop	word ptr cs:[rax + rax]
0x44880b:	nop	dword ptr [rax + rax]
0x448810:	endbr64	
0x448814:	mov	rax, qword ptr [rdi]
0x448817:	lea	rdx, [rax - 0x18]
0x44881b:	cmp	rdx, 0x4e65a0
0x448822:	je	0x448860
0x448824:	push	rbx
0x448825:	mov	eax, dword ptr [rax - 8]
0x448828:	mov	rbx, rdi
0x44882b:	test	eax, eax
0x44882d:	jg	0x448840
0x44882f:	mov	rax, qword ptr [rbx]
0x448832:	mov	dword ptr [rax - 8], 0xffffffff
0x448839:	pop	rbx
0x44883a:	ret	
0x44883b:	nop	dword ptr [rax + rax]
0x448840:	xor	ecx, ecx
0x448842:	xor	edx, edx
0x448844:	xor	esi, esi
0x448846:	call	0x4485d0
0x44884b:	mov	rax, qword ptr [rbx]
0x44884e:	mov	dword ptr [rax - 8], 0xffffffff
0x448855:	pop	rbx
0x448856:	ret	
0x448857:	nop	word ptr [rax + rax]
0x448860:	ret	
0x448861:	nop	word ptr cs:[rax + rax]
0x44886b:	nop	dword ptr [rax + rax]
0x448870:	endbr64	
0x448874:	mov	rax, qword ptr [rdi]
0x448877:	mov	eax, dword ptr [rax - 8]
0x44887a:	test	eax, eax
0x44887c:	jns	0x448880
0x44887e:	ret	
0x44887f:	nop	
0x448880:	jmp	0x448810
0x448885:	nop	word ptr cs:[rax + rax]
0x44888f:	nop	
0x448890:	endbr64	
0x448894:	mov	rax, qword ptr [rdi]
0x448897:	mov	edx, dword ptr [rax - 8]
0x44889a:	test	edx, edx
0x44889c:	jns	0x4488a0
0x44889e:	ret	
0x44889f:	nop	
0x4488a0:	push	rbx
0x4488a1:	mov	rbx, rdi
0x4488a4:	call	0x448810
0x4488a9:	mov	rax, qword ptr [rbx]
0x4488ac:	pop	rbx
0x4488ad:	ret	
0x4488ae:	nop	
0x4488b0:	endbr64	
0x4488b4:	push	rbp
0x4488b5:	mov	rbp, rsi
0x4488b8:	push	rbx
0x4488b9:	sub	rsp, 8
0x4488bd:	mov	rax, qword ptr [rdi]
0x4488c0:	mov	edx, dword ptr [rax - 8]
0x4488c3:	test	edx, edx
0x4488c5:	js	0x4488d2
0x4488c7:	mov	rbx, rdi
0x4488ca:	call	0x448810
0x4488cf:	mov	rax, qword ptr [rbx]
0x4488d2:	add	rsp, 8
0x4488d6:	add	rax, rbp
0x4488d9:	pop	rbx
0x4488da:	pop	rbp
0x4488db:	ret	
0x4488dc:	nop	dword ptr [rax]
0x4488e0:	endbr64	
0x4488e4:	mov	rax, qword ptr [rdi]
0x4488e7:	mov	edx, dword ptr [rax - 8]
0x4488ea:	test	edx, edx
0x4488ec:	jns	0x4488f0
0x4488ee:	ret	
0x4488ef:	nop	
0x4488f0:	push	rbx
0x4488f1:	mov	rbx, rdi
0x4488f4:	call	0x448810
0x4488f9:	mov	rax, qword ptr [rbx]
0x4488fc:	pop	rbx
0x4488fd:	ret	
0x4488fe:	nop	
0x448900:	endbr64	
0x448904:	push	r12
0x448906:	mov	r12, rdi
0x448909:	push	rbx
0x44890a:	sub	rsp, 8
0x44890e:	mov	rax, qword ptr [rsi]
0x448911:	mov	edx, dword ptr [rax - 8]
0x448914:	test	edx, edx
0x448916:	js	0x448926
0x448918:	mov	rbx, rsi
0x44891b:	mov	rdi, rsi
0x44891e:	call	0x448810
0x448923:	mov	rax, qword ptr [rbx]
0x448926:	mov	qword ptr [r12], rax
0x44892a:	add	rsp, 8
0x44892e:	mov	rax, r12
0x448931:	pop	rbx
0x448932:	pop	r12
0x448934:	ret	
0x448935:	nop	word ptr cs:[rax + rax]
0x44893f:	nop	
0x448940:	endbr64	
0x448944:	push	r12
0x448946:	mov	r12, rdi
0x448949:	push	rbx
0x44894a:	sub	rsp, 8
0x44894e:	mov	rdx, qword ptr [rsi]
0x448951:	mov	eax, dword ptr [rdx - 8]
0x448954:	test	eax, eax
0x448956:	js	0x448966
0x448958:	mov	rbx, rsi
0x44895b:	mov	rdi, rsi
0x44895e:	call	0x448810
0x448963:	mov	rdx, qword ptr [rbx]
0x448966:	add	rdx, qword ptr [rdx - 0x18]
0x44896a:	mov	rax, r12
0x44896d:	mov	qword ptr [r12], rdx
0x448971:	add	rsp, 8
0x448975:	pop	rbx
0x448976:	pop	r12
0x448978:	ret	
0x448979:	nop	dword ptr [rax]
0x448980:	endbr64	
0x448984:	mov	rax, qword ptr [rdi]
0x448987:	mov	edx, dword ptr [rax - 8]
0x44898a:	test	edx, edx
0x44898c:	jns	0x448998
0x44898e:	add	rax, qword ptr [rax - 0x18]
0x448992:	ret	
0x448993:	nop	dword ptr [rax + rax]
0x448998:	push	rbx
0x448999:	mov	rbx, rdi
0x44899c:	call	0x448810
0x4489a1:	mov	rax, qword ptr [rbx]
0x4489a4:	pop	rbx
0x4489a5:	add	rax, qword ptr [rax - 0x18]
0x4489a9:	ret	
0x4489aa:	nop	word ptr [rax + rax]
0x4489b0:	endbr64	
0x4489b4:	push	rbp
0x4489b5:	push	rbx
0x4489b6:	sub	rsp, 8
0x4489ba:	mov	rax, qword ptr [rdi]
0x4489bd:	mov	rcx, qword ptr [rax - 0x18]
0x4489c1:	mov	edx, dword ptr [rax - 8]
0x4489c4:	lea	rbp, [rcx - 1]
0x4489c8:	test	edx, edx
0x4489ca:	js	0x4489d7
0x4489cc:	mov	rbx, rdi
0x4489cf:	call	0x448810
0x4489d4:	mov	rax, qword ptr [rbx]
0x4489d7:	add	rsp, 8
0x4489db:	add	rax, rbp
0x4489de:	pop	rbx
0x4489df:	pop	rbp
0x4489e0:	ret	
0x4489e1:	nop	word ptr cs:[rax + rax]
0x4489eb:	nop	dword ptr [rax + rax]
0x4489f0:	endbr64	
0x4489f4:	push	rbp
0x4489f5:	mov	rbp, rsi
0x4489f8:	push	rbx
0x4489f9:	sub	rsp, 8
0x4489fd:	mov	rax, qword ptr [rdi]
0x448a00:	mov	rdx, qword ptr [rax - 0x18]
0x448a04:	cmp	rsi, rdx
0x448a07:	jae	0x448a25
0x448a09:	mov	edx, dword ptr [rax - 8]
0x448a0c:	test	edx, edx
0x448a0e:	js	0x448a1b
0x448a10:	mov	rbx, rdi
0x448a13:	call	0x448810
0x448a18:	mov	rax, qword ptr [rbx]
0x448a1b:	add	rsp, 8
0x448a1f:	add	rax, rbp
0x448a22:	pop	rbx
0x448a23:	pop	rbp
0x448a24:	ret	
0x448a25:	lea	rdi, [rip + 0x83bc4]
0x448a2c:	xor	eax, eax
0x448a2e:	call	0x440770
0x448a33:	nop	word ptr cs:[rax + rax]
0x448a3d:	nop	dword ptr [rax]
0x448a40:	endbr64	
0x448a44:	push	r12
0x448a46:	mov	rax, qword ptr [rdi]
0x448a49:	mov	r8, rdx
0x448a4c:	mov	rcx, qword ptr [rax - 0x18]
0x448a50:	mov	rdx, rcx
0x448a53:	sub	rdx, rsi
0x448a56:	cmp	rdx, r8
0x448a59:	cmova	rdx, r8
0x448a5d:	cmp	rsi, rcx
0x448a60:	ja	0x448a72
0x448a62:	mov	r12, rdi
0x448a65:	xor	ecx, ecx
0x448a67:	call	0x4485d0
0x448a6c:	mov	rax, r12
0x448a6f:	pop	r12
0x448a71:	ret	
0x448a72:	mov	rdx, rsi
0x448a75:	lea	rdi, [rip + 0x83b3c]
0x448a7c:	xor	eax, eax
0x448a7e:	lea	rsi, [rip + 0x83baf]
0x448a85:	call	0x440770
0x448a8a:	nop	word ptr [rax + rax]
0x448a90:	endbr64	
0x448a94:	push	rbp
0x448a95:	xor	ecx, ecx
0x448a97:	mov	edx, 1
0x448a9c:	push	rbx
0x448a9d:	mov	rbx, rdi
0x448aa0:	sub	rsp, 8
0x448aa4:	sub	rsi, qword ptr [rdi]
0x448aa7:	mov	rbp, rsi
0x448aaa:	call	0x4485d0
0x448aaf:	mov	rax, qword ptr [rbx]
0x448ab2:	mov	dword ptr [rax - 8], 0xffffffff
0x448ab9:	add	rsp, 8
0x448abd:	add	rax, rbp
0x448ac0:	pop	rbx
0x448ac1:	pop	rbp
0x448ac2:	ret	
0x448ac3:	nop	word ptr cs:[rax + rax]
0x448acd:	nop	dword ptr [rax]
0x448ad0:	endbr64	
0x448ad4:	mov	rax, rsi
0x448ad7:	sub	rdx, rsi
0x448ada:	jne	0x448ae0
0x448adc:	ret	
0x448add:	nop	dword ptr [rax]
0x448ae0:	push	rbp
0x448ae1:	xor	ecx, ecx
0x448ae3:	mov	rbp, rdi
0x448ae6:	push	rbx
0x448ae7:	sub	rsp, 8
0x448aeb:	sub	rax, qword ptr [rdi]
0x448aee:	mov	rsi, rax
0x448af1:	mov	rbx, rax
0x448af4:	call	0x4485d0
0x448af9:	mov	rax, qword ptr [rbp]
0x448afd:	mov	dword ptr [rax - 8], 0xffffffff
0x448b04:	add	rsp, 8
0x448b08:	add	rax, rbx
0x448b0b:	pop	rbx
0x448b0c:	pop	rbp
0x448b0d:	ret	
0x448b0e:	nop	
0x448b10:	endbr64	
0x448b14:	movabs	rax, 0x3ffffffffffffff9
0x448b1e:	push	r13
0x448b20:	push	r12
0x448b22:	mov	r12, rcx
0x448b25:	add	rax, rdx
0x448b28:	push	rbp
0x448b29:	push	rbx
0x448b2a:	sub	rsp, 8
0x448b2e:	mov	rcx, qword ptr [rdi]
0x448b31:	sub	rax, qword ptr [rcx - 0x18]
0x448b35:	cmp	r12, rax
0x448b38:	ja	0x448b91
0x448b3a:	mov	rcx, r12
0x448b3d:	mov	r13, rdi
0x448b40:	mov	rbp, rsi
0x448b43:	mov	ebx, r8d
0x448b46:	call	0x4485d0
0x448b4b:	test	r12, r12
0x448b4e:	je	0x448b68
0x448b50:	add	rbp, qword ptr [r13]
0x448b54:	cmp	r12, 1
0x448b58:	je	0x448b80
0x448b5a:	movsx	esi, bl
0x448b5d:	mov	rdx, r12
0x448b60:	mov	rdi, rbp
0x448b63:	call	0x403ac0
0x448b68:	add	rsp, 8
0x448b6c:	mov	rax, r13
0x448b6f:	pop	rbx
0x448b70:	pop	rbp
0x448b71:	pop	r12
0x448b73:	pop	r13
0x448b75:	ret	
0x448b76:	nop	word ptr cs:[rax + rax]
0x448b80:	mov	byte ptr [rbp], bl
0x448b83:	add	rsp, 8
0x448b87:	mov	rax, r13
0x448b8a:	pop	rbx
0x448b8b:	pop	rbp
0x448b8c:	pop	r12
0x448b8e:	pop	r13
0x448b90:	ret	
0x448b91:	lea	rdi, [rip + 0x83ab0]
0x448b98:	call	0x42c9f3
0x448b9d:	nop	dword ptr [rax]
0x448ba0:	endbr64	
0x448ba4:	mov	rax, qword ptr [rdi]
0x448ba7:	mov	r8d, edx
0x448baa:	mov	rcx, rsi
0x448bad:	xor	esi, esi
0x448baf:	movsx	r8d, r8b
0x448bb3:	mov	rdx, qword ptr [rax - 0x18]
0x448bb7:	jmp	0x448b10
0x448bbc:	nop	dword ptr [rax]
0x448bc0:	endbr64	
0x448bc4:	mov	rax, qword ptr [rdi]
0x448bc7:	movsx	r8d, cl
0x448bcb:	mov	rcx, qword ptr [rax - 0x18]
0x448bcf:	cmp	rsi, rcx
0x448bd2:	ja	0x448bde
0x448bd4:	mov	rcx, rdx
0x448bd7:	xor	edx, edx
0x448bd9:	jmp	0x448b10
0x448bde:	push	rax
0x448bdf:	mov	rdx, rsi
0x448be2:	lea	rdi, [rip + 0x839cf]
0x448be9:	xor	eax, eax
0x448beb:	lea	rsi, [rip + 0x83a73]
0x448bf2:	call	0x440770
0x448bf7:	nop	word ptr [rax + rax]
0x448c00:	endbr64	
0x448c04:	push	rbp
0x448c05:	movsx	r8d, dl
0x448c09:	mov	ecx, 1
0x448c0e:	xor	edx, edx
0x448c10:	push	rbx
0x448c11:	mov	rbx, rdi
0x448c14:	sub	rsp, 8
0x448c18:	sub	rsi, qword ptr [rdi]
0x448c1b:	mov	rbp, rsi
0x448c1e:	call	0x448b10
0x448c23:	mov	rax, qword ptr [rbx]
0x448c26:	mov	dword ptr [rax - 8], 0xffffffff
0x448c2d:	add	rsp, 8
0x448c31:	add	rax, rbp
0x448c34:	pop	rbx
0x448c35:	pop	rbp
0x448c36:	ret	
0x448c37:	nop	word ptr [rax + rax]
0x448c40:	endbr64	
0x448c44:	mov	rax, qword ptr [rdi]
0x448c47:	mov	r10, rdx
0x448c4a:	mov	r9, qword ptr [rax - 0x18]
0x448c4e:	mov	rdx, r9
0x448c51:	sub	rdx, rsi
0x448c54:	cmp	rdx, r10
0x448c57:	cmova	rdx, r10
0x448c5b:	cmp	rsi, r9
0x448c5e:	ja	0x448c69
0x448c60:	movsx	r8d, r8b
0x448c64:	jmp	0x448b10
0x448c69:	push	rax
0x448c6a:	mov	rdx, rsi
0x448c6d:	mov	rcx, r9
0x448c70:	lea	rsi, [rip + 0x83a03]
0x448c77:	lea	rdi, [rip + 0x8393a]
0x448c7e:	xor	eax, eax
0x448c80:	call	0x440770
0x448c85:	nop	word ptr cs:[rax + rax]
0x448c8f:	nop	
0x448c90:	endbr64	
0x448c94:	sub	rdx, rsi
0x448c97:	movsx	r8d, r8b
0x448c9b:	sub	rsi, qword ptr [rdi]
0x448c9e:	jmp	0x448b10
0x448ca3:	nop	word ptr cs:[rax + rax]
0x448cad:	nop	dword ptr [rax]
0x448cb0:	endbr64	
0x448cb4:	movsx	r8d, cl
0x448cb8:	sub	rsi, qword ptr [rdi]
0x448cbb:	mov	rcx, rdx
0x448cbe:	xor	edx, edx
0x448cc0:	jmp	0x448b10
0x448cc5:	nop	word ptr cs:[rax + rax]
0x448ccf:	nop	
0x448cd0:	endbr64	
0x448cd4:	mov	rax, qword ptr [rdi]
0x448cd7:	push	r12
0x448cd9:	movsx	r8d, sil
0x448cdd:	mov	r12, rdi
0x448ce0:	mov	ecx, 1
0x448ce5:	xor	esi, esi
0x448ce7:	mov	rdx, qword ptr [rax - 0x18]
0x448ceb:	call	0x448b10
0x448cf0:	mov	rax, r12
0x448cf3:	pop	r12
0x448cf5:	ret	
0x448cf6:	nop	word ptr cs:[rax + rax]
0x448d00:	endbr64	
0x448d04:	push	r13
0x448d06:	mov	r13, rdi
0x448d09:	push	r12
0x448d0b:	mov	r12, r8
0x448d0e:	push	rbp
0x448d0f:	mov	rbp, rcx
0x448d12:	mov	rcx, r8
0x448d15:	push	rbx
0x448d16:	mov	rbx, rsi
0x448d19:	sub	rsp, 8
0x448d1d:	call	0x4485d0
0x448d22:	test	r12, r12
0x448d25:	je	0x448d3f
0x448d27:	add	rbx, qword ptr [r13]
0x448d2b:	mov	rdi, rbx
0x448d2e:	cmp	r12, 1
0x448d32:	je	0x448d50
0x448d34:	mov	rdx, r12
0x448d37:	mov	rsi, rbp
0x448d3a:	call	0x403c60
0x448d3f:	add	rsp, 8
0x448d43:	mov	rax, r13
0x448d46:	pop	rbx
0x448d47:	pop	rbp
0x448d48:	pop	r12
0x448d4a:	pop	r13
0x448d4c:	ret	
0x448d4d:	nop	dword ptr [rax]
0x448d50:	movzx	eax, byte ptr [rbp]
0x448d54:	mov	byte ptr [rbx], al
0x448d56:	add	rsp, 8
0x448d5a:	mov	rax, r13
0x448d5d:	pop	rbx
0x448d5e:	pop	rbp
0x448d5f:	pop	r12
0x448d61:	pop	r13
0x448d63:	ret	
0x448d64:	nop	word ptr cs:[rax + rax]
0x448d6e:	nop	
0x448d70:	endbr64	
0x448d74:	push	rbp
0x448d75:	mov	rcx, rsi
0x448d78:	mov	r8, rdx
0x448d7b:	movabs	rsi, 0x3ffffffffffffff9
0x448d85:	sub	rsp, 0x10
0x448d89:	mov	rax, qword ptr [rdi]
0x448d8c:	mov	rdx, qword ptr [rax - 0x18]
0x448d90:	cmp	r8, rsi
0x448d93:	ja	0x448e7d
0x448d99:	mov	rbp, rdi
0x448d9c:	cmp	rax, rcx
0x448d9f:	ja	0x448db8
0x448da1:	lea	rsi, [rax + rdx]
0x448da5:	cmp	rsi, rcx
0x448da8:	jb	0x448db8
0x448daa:	mov	eax, dword ptr [rax - 8]
0x448dad:	test	eax, eax
0x448daf:	jle	0x448dd0
0x448db1:	mov	rax, qword ptr [rdi]
0x448db4:	mov	rdx, qword ptr [rax - 0x18]
0x448db8:	add	rsp, 0x10
0x448dbc:	mov	rdi, rbp
0x448dbf:	xor	esi, esi
0x448dc1:	pop	rbp
0x448dc2:	jmp	0x448d00
0x448dc7:	nop	word ptr [rax + rax]
0x448dd0:	mov	rdi, qword ptr [rdi]
0x448dd3:	mov	rax, rcx
0x448dd6:	sub	rax, rdi
0x448dd9:	cmp	r8, rax
0x448ddc:	jbe	0x448e30
0x448dde:	test	rax, rax
0x448de1:	je	0x448e10
0x448de3:	cmp	r8, 1
0x448de7:	je	0x448e60
0x448de9:	test	r8, r8
0x448dec:	je	0x448e10
0x448dee:	mov	rdx, r8
0x448df1:	mov	rsi, rcx
0x448df4:	mov	qword ptr [rsp + 8], r8
0x448df9:	call	0x403d90
0x448dfe:	mov	rdi, qword ptr [rbp]
0x448e02:	mov	r8, qword ptr [rsp + 8]
0x448e07:	nop	word ptr [rax + rax]
0x448e10:	lea	rax, [rdi - 0x18]
0x448e14:	cmp	rax, 0x4e65a0
0x448e1b:	jne	0x448e6b
0x448e1d:	add	rsp, 0x10
0x448e21:	mov	rax, rbp
0x448e24:	pop	rbp
0x448e25:	ret	
0x448e26:	nop	word ptr cs:[rax + rax]
0x448e30:	cmp	r8, 1
0x448e34:	je	0x448e60
0x448e36:	test	r8, r8
0x448e39:	je	0x448e10
0x448e3b:	mov	rdx, r8
0x448e3e:	mov	rsi, rcx
0x448e41:	mov	qword ptr [rsp + 8], r8
0x448e46:	call	0x403c60
0x448e4b:	mov	rdi, qword ptr [rbp]
0x448e4f:	mov	r8, qword ptr [rsp + 8]
0x448e54:	jmp	0x448e10
0x448e56:	nop	word ptr cs:[rax + rax]
0x448e60:	movzx	eax, byte ptr [rcx]
0x448e63:	mov	byte ptr [rdi], al
0x448e65:	mov	rdi, qword ptr [rbp]
0x448e69:	jmp	0x448e10
0x448e6b:	mov	dword ptr [rdi - 8], 0
0x448e72:	mov	qword ptr [rdi - 0x18], r8
0x448e76:	mov	byte ptr [rdi + r8], 0
0x448e7b:	jmp	0x448e1d
0x448e7d:	lea	rdi, [rip + 0x83825]
0x448e84:	call	0x42c9f3
0x448e89:	nop	dword ptr [rax]
0x448e90:	endbr64	
0x448e94:	push	r12
0x448e96:	mov	r12, rdi
0x448e99:	call	0x448d70
0x448e9e:	mov	rax, r12
0x448ea1:	pop	r12
0x448ea3:	ret	
0x448ea4:	nop	word ptr cs:[rax + rax]
0x448eae:	nop	
0x448eb0:	endbr64	
0x448eb4:	mov	rsi, qword ptr [rsi]
0x448eb7:	mov	r8, rcx
0x448eba:	mov	rcx, qword ptr [rsi - 0x18]
0x448ebe:	mov	rax, rcx
0x448ec1:	sub	rax, rdx
0x448ec4:	cmp	rax, r8
0x448ec7:	cmovbe	r8, rax
0x448ecb:	cmp	rdx, rcx
0x448ece:	ja	0x448edb
0x448ed0:	add	rsi, rdx
0x448ed3:	mov	rdx, r8
0x448ed6:	jmp	0x448d70
0x448edb:	push	rax
0x448edc:	lea	rsi, [rip + 0x837c6]
0x448ee3:	lea	rdi, [rip + 0x836ce]
0x448eea:	xor	eax, eax
0x448eec:	call	0x440770
0x448ef1:	nop	word ptr cs:[rax + rax]
0x448efb:	nop	dword ptr [rax + rax]
0x448f00:	endbr64	
0x448f04:	push	r12
0x448f06:	mov	r12, rdi
0x448f09:	mov	rdi, rsi
0x448f0c:	push	rbp
0x448f0d:	mov	rbp, rsi
0x448f10:	sub	rsp, 8
0x448f14:	call	0x4039e0
0x448f19:	add	rsp, 8
0x448f1d:	mov	rsi, rbp
0x448f20:	mov	rdi, r12
0x448f23:	pop	rbp
0x448f24:	mov	rdx, rax
0x448f27:	pop	r12
0x448f29:	jmp	0x448d70
0x448f2e:	nop	
0x448f30:	endbr64	
0x448f34:	jmp	0x448d70
0x448f39:	nop	dword ptr [rax]
0x448f40:	endbr64	
0x448f44:	push	r12
0x448f46:	mov	r12, rdi
0x448f49:	mov	rdi, rsi
0x448f4c:	push	rbp
0x448f4d:	mov	rbp, rsi
0x448f50:	sub	rsp, 8
0x448f54:	call	0x4039e0
0x448f59:	add	rsp, 8
0x448f5d:	mov	rsi, rbp
0x448f60:	mov	rdi, r12
0x448f63:	pop	rbp
0x448f64:	mov	rdx, rax
0x448f67:	pop	r12
0x448f69:	jmp	0x448d70
0x448f6e:	nop	
0x448f70:	endbr64	
0x448f74:	push	r12
0x448f76:	mov	r9, rdx
0x448f79:	mov	r8, rcx
0x448f7c:	push	rbp
0x448f7d:	push	rbx
0x448f7e:	sub	rsp, 0x10
0x448f82:	mov	rdx, qword ptr [rdi]
0x448f85:	mov	rcx, qword ptr [rdx - 0x18]
0x448f89:	cmp	rsi, rcx
0x448f8c:	ja	0x4490c4
0x448f92:	movabs	rax, 0x3ffffffffffffff9
0x448f9c:	sub	rax, rcx
0x448f9f:	cmp	r8, rax
0x448fa2:	ja	0x4490b8
0x448fa8:	mov	rbp, rdi
0x448fab:	cmp	rdx, r9
0x448fae:	ja	0x448fbf
0x448fb0:	add	rcx, rdx
0x448fb3:	cmp	r9, rcx
0x448fb6:	ja	0x448fbf
0x448fb8:	mov	eax, dword ptr [rdx - 8]
0x448fbb:	test	eax, eax
0x448fbd:	jle	0x448fd8
0x448fbf:	add	rsp, 0x10
0x448fc3:	mov	rdi, rbp
0x448fc6:	mov	rcx, r9
0x448fc9:	xor	edx, edx
0x448fcb:	pop	rbx
0x448fcc:	pop	rbp
0x448fcd:	pop	r12
0x448fcf:	jmp	0x448d00
0x448fd4:	nop	dword ptr [rax]
0x448fd8:	mov	rcx, r8
0x448fdb:	xor	edx, edx
0x448fdd:	mov	rbx, r9
0x448fe0:	mov	qword ptr [rsp + 8], r8
0x448fe5:	sub	rbx, qword ptr [rdi]
0x448fe8:	mov	qword ptr [rsp], rsi
0x448fec:	call	0x4485d0
0x448ff1:	mov	rdi, qword ptr [rbp]
0x448ff5:	mov	rsi, qword ptr [rsp]
0x448ff9:	mov	r8, qword ptr [rsp + 8]
0x448ffe:	lea	r9, [rdi + rbx]
0x449002:	add	rdi, rsi
0x449005:	lea	r10, [r9 + r8]
0x449009:	cmp	r10, rdi
0x44900c:	ja	0x449030
0x44900e:	cmp	r8, 1
0x449012:	je	0x449093
0x449014:	test	r8, r8
0x449017:	je	0x449024
0x449019:	mov	rdx, r8
0x44901c:	mov	rsi, r9
0x44901f:	call	0x403c60
0x449024:	add	rsp, 0x10
0x449028:	mov	rax, rbp
0x44902b:	pop	rbx
0x44902c:	pop	rbp
0x44902d:	pop	r12
0x44902f:	ret	
0x449030:	cmp	r9, rdi
0x449033:	jb	0x44904d
0x449035:	cmp	r8, 1
0x449039:	je	0x4490a3
0x44903b:	test	r8, r8
0x44903e:	je	0x449024
0x449040:	mov	rdx, r8
0x449043:	mov	rsi, r10
0x449046:	call	0x403c60
0x44904b:	jmp	0x449024
0x44904d:	sub	rsi, rbx
0x449050:	mov	r12, rsi
0x449053:	cmp	rsi, 1
0x449057:	je	0x44909b
0x449059:	test	rsi, rsi
0x44905c:	je	0x449074
0x44905e:	mov	rdx, rsi
0x449061:	mov	rsi, r9
0x449064:	mov	qword ptr [rsp], r8
0x449068:	call	0x403c60
0x44906d:	mov	r8, qword ptr [rsp]
0x449071:	mov	rdi, rax
0x449074:	mov	rdx, r8
0x449077:	lea	rsi, [rdi + r8]
0x44907b:	add	rdi, r12
0x44907e:	sub	rdx, r12
0x449081:	cmp	rdx, 1
0x449085:	je	0x4490ae
0x449087:	test	rdx, rdx
0x44908a:	je	0x449024
0x44908c:	call	0x403c60
0x449091:	jmp	0x449024
0x449093:	movzx	eax, byte ptr [r9]
0x449097:	mov	byte ptr [rdi], al
0x449099:	jmp	0x449024
0x44909b:	movzx	eax, byte ptr [r9]
0x44909f:	mov	byte ptr [rdi], al
0x4490a1:	jmp	0x449074
0x4490a3:	movzx	eax, byte ptr [r10]
0x4490a7:	mov	byte ptr [rdi], al
0x4490a9:	jmp	0x449024
0x4490ae:	movzx	eax, byte ptr [rsi]
0x4490b1:	mov	byte ptr [rdi], al
0x4490b3:	jmp	0x449024
0x4490b8:	lea	rdi, [rip + 0x835a6]
0x4490bf:	call	0x42c9f3
0x4490c4:	mov	rdx, rsi
0x4490c7:	lea	rdi, [rip + 0x834ea]
0x4490ce:	xor	eax, eax
0x4490d0:	lea	rsi, [rip + 0x8358e]
0x4490d7:	call	0x440770
0x4490dc:	nop	dword ptr [rax]
0x4490e0:	endbr64	
0x4490e4:	sub	rsi, qword ptr [rdi]
0x4490e7:	jmp	0x448f70
0x4490ec:	nop	dword ptr [rax]
0x4490f0:	endbr64	
0x4490f4:	mov	r9, rdx
0x4490f7:	mov	rdx, rcx
0x4490fa:	mov	rax, qword ptr [r9]
0x4490fd:	mov	r9, qword ptr [rax - 0x18]
0x449101:	mov	rcx, r9
0x449104:	sub	rcx, rdx
0x449107:	cmp	rcx, r8
0x44910a:	cmova	rcx, r8
0x44910e:	cmp	rdx, r9
0x449111:	ja	0x44911b
0x449113:	add	rdx, rax
0x449116:	jmp	0x448f70
0x44911b:	push	rax
0x44911c:	mov	rcx, r9
0x44911f:	lea	rsi, [rip + 0x8353f]
0x449126:	xor	eax, eax
0x449128:	lea	rdi, [rip + 0x83489]
0x44912f:	call	0x440770
0x449134:	nop	word ptr cs:[rax + rax]
0x44913e:	nop	
0x449140:	endbr64	
0x449144:	push	r13
0x449146:	mov	r13, rsi
0x449149:	push	r12
0x44914b:	mov	r12, rdx
0x44914e:	push	rbp
0x44914f:	mov	rbp, rdi
0x449152:	mov	rdi, rdx
0x449155:	call	0x4039e0
0x44915a:	mov	rdx, r12
0x44915d:	mov	rsi, r13
0x449160:	mov	rdi, rbp
0x449163:	mov	rcx, rax
0x449166:	pop	rbp
0x449167:	pop	r12
0x449169:	pop	r13
0x44916b:	jmp	0x448f70
0x449170:	endbr64	
0x449174:	mov	rdx, qword ptr [rdx]
0x449177:	mov	rcx, qword ptr [rdx - 0x18]
0x44917b:	jmp	0x448f70
0x449180:	endbr64	
0x449184:	mov	rax, qword ptr [rdi]
0x449187:	mov	rax, qword ptr [rax - 0x18]
0x44918b:	lea	rsi, [rax - 1]
0x44918f:	cmp	rsi, rax
0x449192:	ja	0x4491a0
0x449194:	xor	ecx, ecx
0x449196:	mov	edx, 1
0x44919b:	jmp	0x4485d0
0x4491a0:	push	rax
0x4491a1:	xor	ecx, ecx
0x4491a3:	or	rdx, 0xffffffffffffffff
0x4491a7:	lea	rsi, [rip + 0x83486]
0x4491ae:	lea	rdi, [rip + 0x83403]
0x4491b5:	xor	eax, eax
0x4491b7:	call	0x440770
0x4491bc:	nop	dword ptr [rax]
0x4491c0:	endbr64	
0x4491c4:	cmp	rdi, 0x4e65a0
0x4491cb:	jne	0x4491d8
0x4491cd:	lea	rax, [rdi + 0x18]
0x4491d1:	ret	
0x4491d2:	nop	word ptr [rax + rax]
0x4491d8:	mov	rax, qword ptr [rip + 0x98e09]
0x4491df:	cmp	byte ptr [rax], 0
0x4491e2:	je	0x4491f0
0x4491e4:	add	dword ptr [rdi + 0x10], 1
0x4491e8:	jmp	0x4491cd
0x4491ea:	nop	word ptr [rax + rax]
0x4491f0:	lock add	dword ptr [rdi + 0x10], 1
0x4491f5:	jmp	0x4491cd
0x4491f7:	nop	word ptr [rax + rax]
0x449200:	endbr64	
0x449204:	push	rbp
0x449205:	mov	r8, rsi
0x449208:	push	rbx
0x449209:	mov	rbx, rdi
0x44920c:	sub	rsp, 8
0x449210:	mov	rsi, qword ptr [rdi + 8]
0x449214:	mov	rdi, qword ptr [rdi]
0x449217:	add	rdi, rdx
0x44921a:	mov	rdx, r8
0x44921d:	call	0x4482b0
0x449222:	mov	rdx, qword ptr [rbx]
0x449225:	mov	rbp, rax
0x449228:	lea	r8, [rax + 0x18]
0x44922c:	test	rdx, rdx
0x44922f:	je	0x449249
0x449231:	cmp	rdx, 1
0x449235:	je	0x449260
0x449237:	mov	rdi, r8
0x44923a:	lea	rsi, [rbx + 0x18]
0x44923e:	call	0x403c60
0x449243:	mov	rdx, qword ptr [rbx]
0x449246:	mov	r8, rax
0x449249:	cmp	rbp, 0x4e65a0
0x449250:	jne	0x449273
0x449252:	add	rsp, 8
0x449256:	mov	rax, r8
0x449259:	pop	rbx
0x44925a:	pop	rbp
0x44925b:	ret	
0x44925c:	nop	dword ptr [rax]
0x449260:	movzx	eax, byte ptr [rbx + 0x18]
0x449264:	cmp	rbp, 0x4e65a0
0x44926b:	mov	byte ptr [rbp + 0x18], al
0x44926e:	mov	rdx, qword ptr [rbx]
0x449271:	je	0x449252
0x449273:	mov	dword ptr [rbp + 0x10], 0
0x44927a:	mov	rax, r8
0x44927d:	mov	qword ptr [rbp], rdx
0x449281:	mov	byte ptr [rbp + rdx + 0x18], 0
0x449286:	add	rsp, 8
0x44928a:	pop	rbx
0x44928b:	pop	rbp
0x44928c:	ret	
0x44928d:	nop	dword ptr [rax]
0x449290:	endbr64	
0x449294:	push	rbp
0x449295:	push	rbx
0x449296:	mov	rbx, rdi
0x449299:	sub	rsp, 0x28
0x44929d:	mov	rdi, qword ptr [rdi]
0x4492a0:	mov	rax, qword ptr fs:[0x28]
0x4492a9:	mov	qword ptr [rsp + 0x18], rax
0x4492ae:	xor	eax, eax
0x4492b0:	mov	rax, qword ptr [rdi - 0x10]
0x4492b4:	cmp	rsi, rax
0x4492b7:	ja	0x4492c6
0x4492b9:	mov	edx, dword ptr [rdi - 8]
0x4492bc:	test	edx, edx
0x4492be:	jle	0x4492f0
0x4492c0:	mov	rdi, qword ptr [rbx]
0x4492c3:	mov	rsi, rax
0x4492c6:	lea	rbp, [rsp + 0x17]
0x4492cb:	sub	rdi, 0x18
0x4492cf:	mov	rdx, rsi
0x4492d2:	sub	rdx, qword ptr [rdi]
0x4492d5:	mov	rsi, rbp
0x4492d8:	call	0x449200
0x4492dd:	mov	rdx, qword ptr [rbx]
0x4492e0:	lea	rdi, [rdx - 0x18]
0x4492e4:	cmp	rdi, 0x4e65a0
0x4492eb:	jne	0x449310
0x4492ed:	mov	qword ptr [rbx], rax
0x4492f0:	mov	rax, qword ptr [rsp + 0x18]
0x4492f5:	sub	rax, qword ptr fs:[0x28]
0x4492fe:	jne	0x44934c
0x449300:	add	rsp, 0x28
0x449304:	pop	rbx
0x449305:	pop	rbp
0x449306:	ret	
0x449307:	nop	word ptr [rax + rax]
0x449310:	mov	rcx, qword ptr [rip + 0x98cd1]
0x449317:	cmp	byte ptr [rcx], 0
0x44931a:	je	0x449340
0x44931c:	mov	ecx, dword ptr [rdx - 8]
0x44931f:	lea	esi, [rcx - 1]
0x449322:	mov	dword ptr [rdx - 8], esi
0x449325:	test	ecx, ecx
0x449327:	jg	0x4492ed
0x449329:	mov	rsi, rbp
0x44932c:	mov	qword ptr [rsp + 8], rax
0x449331:	call	0x448430
0x449336:	mov	rax, qword ptr [rsp + 8]
0x44933b:	jmp	0x4492ed
0x44933d:	nop	dword ptr [rax]
0x449340:	mov	ecx, 0xffffffff
0x449345:	lock xadd	dword ptr [rdx - 8], ecx
0x44934a:	jmp	0x449325
0x44934c:	call	0x4039f0
0x449351:	nop	word ptr cs:[rax + rax]
0x44935b:	nop	dword ptr [rax + rax]
0x449360:	endbr64	
0x449364:	push	r13
0x449366:	push	r12
0x449368:	mov	r12, rdi
0x44936b:	push	rbp
0x44936c:	push	rbx
0x44936d:	sub	rsp, 8
0x449371:	mov	rax, qword ptr [rsi]
0x449374:	mov	r13, qword ptr [rax - 0x18]
0x449378:	test	r13, r13
0x44937b:	je	0x4493c5
0x44937d:	mov	rax, qword ptr [rdi]
0x449380:	mov	rbx, rsi
0x449383:	mov	rbp, qword ptr [rax - 0x18]
0x449387:	add	rbp, r13
0x44938a:	cmp	rbp, qword ptr [rax - 0x10]
0x44938e:	jbe	0x4493d8
0x449390:	mov	rsi, rbp
0x449393:	mov	rdi, r12
0x449396:	call	0x449290
0x44939b:	mov	rdi, qword ptr [r12]
0x44939f:	mov	rsi, qword ptr [rbx]
0x4493a2:	add	rdi, qword ptr [rdi - 0x18]
0x4493a6:	cmp	r13, 1
0x4493aa:	je	0x449400
0x4493ac:	mov	rdx, r13
0x4493af:	call	0x403c60
0x4493b4:	mov	rax, qword ptr [r12]
0x4493b8:	lea	rdx, [rax - 0x18]
0x4493bc:	cmp	rdx, 0x4e65a0
0x4493c3:	jne	0x4493e8
0x4493c5:	add	rsp, 8
0x4493c9:	mov	rax, r12
0x4493cc:	pop	rbx
0x4493cd:	pop	rbp
0x4493ce:	pop	r12
0x4493d0:	pop	r13
0x4493d2:	ret	
0x4493d3:	nop	dword ptr [rax + rax]
0x4493d8:	mov	eax, dword ptr [rax - 8]
0x4493db:	test	eax, eax
0x4493dd:	jg	0x449390
0x4493df:	jmp	0x44939b
0x4493e1:	nop	dword ptr [rax]
0x4493e8:	mov	dword ptr [rax - 8], 0
0x4493ef:	mov	qword ptr [rax - 0x18], rbp
0x4493f3:	mov	byte ptr [rax + rbp], 0
0x4493f7:	jmp	0x4493c5
0x4493f9:	nop	dword ptr [rax]
0x449400:	movzx	eax, byte ptr [rsi]
0x449403:	mov	byte ptr [rdi], al
0x449405:	jmp	0x4493b4
0x449407:	nop	word ptr [rax + rax]
0x449410:	endbr64	
0x449414:	jmp	0x449360
0x449419:	nop	dword ptr [rax]
0x449420:	endbr64	
0x449424:	push	r14
0x449426:	push	r13
0x449428:	mov	r13, rdx
0x44942b:	push	r12
0x44942d:	push	rbp
0x44942e:	push	rbx
0x44942f:	mov	rax, qword ptr [rsi]
0x449432:	mov	r12, qword ptr [rax - 0x18]
0x449436:	cmp	rdx, r12
0x449439:	ja	0x4494d1
0x44943f:	sub	r12, rdx
0x449442:	mov	r14, rdi
0x449445:	cmp	r12, rcx
0x449448:	cmova	r12, rcx
0x44944c:	test	r12, r12
0x44944f:	je	0x4494a1
0x449451:	mov	rax, qword ptr [rdi]
0x449454:	mov	rbx, rsi
0x449457:	mov	rbp, qword ptr [rax - 0x18]
0x44945b:	add	rbp, r12
0x44945e:	cmp	rbp, qword ptr [rax - 0x10]
0x449462:	ja	0x44946b
0x449464:	mov	eax, dword ptr [rax - 8]
0x449467:	test	eax, eax
0x449469:	jle	0x449476
0x44946b:	mov	rsi, rbp
0x44946e:	mov	rdi, r14
0x449471:	call	0x449290
0x449476:	mov	rdi, qword ptr [r14]
0x449479:	add	r13, qword ptr [rbx]
0x44947c:	add	rdi, qword ptr [rdi - 0x18]
0x449480:	cmp	r12, 1
0x449484:	je	0x4494b0
0x449486:	mov	rdx, r12
0x449489:	mov	rsi, r13
0x44948c:	call	0x403c60
0x449491:	mov	rax, qword ptr [r14]
0x449494:	lea	rdx, [rax - 0x18]
0x449498:	cmp	rdx, 0x4e65a0
0x44949f:	jne	0x4494c0
0x4494a1:	pop	rbx
0x4494a2:	mov	rax, r14
0x4494a5:	pop	rbp
0x4494a6:	pop	r12
0x4494a8:	pop	r13
0x4494aa:	pop	r14
0x4494ac:	ret	
0x4494ad:	nop	dword ptr [rax]
0x4494b0:	movzx	eax, byte ptr [r13]
0x4494b5:	mov	byte ptr [rdi], al
0x4494b7:	jmp	0x449491
0x4494b9:	nop	dword ptr [rax]
0x4494c0:	mov	dword ptr [rax - 8], 0
0x4494c7:	mov	qword ptr [rax - 0x18], rbp
0x4494cb:	mov	byte ptr [rax + rbp], 0
0x4494cf:	jmp	0x4494a1
0x4494d1:	mov	rcx, r12
0x4494d4:	lea	rsi, [rip + 0x831e3]
0x4494db:	lea	rdi, [rip + 0x830d6]
0x4494e2:	xor	eax, eax
0x4494e4:	call	0x440770
0x4494e9:	nop	dword ptr [rax]
0x4494f0:	endbr64	
0x4494f4:	push	r13
0x4494f6:	push	r12
0x4494f8:	mov	r12, rdi
0x4494fb:	push	rbp
0x4494fc:	push	rbx
0x4494fd:	sub	rsp, 8
0x449501:	test	rdx, rdx
0x449504:	je	0x44957c
0x449506:	mov	rax, qword ptr [rdi]
0x449509:	mov	r13, rdx
0x44950c:	movabs	rdx, 0x3ffffffffffffff9
0x449516:	mov	rbx, qword ptr [rax - 0x18]
0x44951a:	sub	rdx, rbx
0x44951d:	cmp	r13, rdx
0x449520:	ja	0x4495e1
0x449526:	mov	rbp, rsi
0x449529:	add	rbx, r13
0x44952c:	cmp	rbx, qword ptr [rax - 0x10]
0x449530:	jbe	0x4495c0
0x449536:	cmp	rax, rbp
0x449539:	ja	0x449547
0x44953b:	mov	rdx, qword ptr [rax - 0x18]
0x44953f:	add	rdx, rax
0x449542:	cmp	rbp, rdx
0x449545:	jbe	0x449590
0x449547:	mov	rsi, rbx
0x44954a:	mov	rdi, r12
0x44954d:	call	0x449290
0x449552:	mov	rdi, qword ptr [r12]
0x449556:	add	rdi, qword ptr [rdi - 0x18]
0x44955a:	cmp	r13, 1
0x44955e:	je	0x4495af
0x449560:	mov	rdx, r13
0x449563:	mov	rsi, rbp
0x449566:	call	0x403c60
0x44956b:	mov	rax, qword ptr [r12]
0x44956f:	lea	rdx, [rax - 0x18]
0x449573:	cmp	rdx, 0x4e65a0
0x44957a:	jne	0x4495d0
0x44957c:	add	rsp, 8
0x449580:	mov	rax, r12
0x449583:	pop	rbx
0x449584:	pop	rbp
0x449585:	pop	r12
0x449587:	pop	r13
0x449589:	ret	
0x44958a:	nop	word ptr [rax + rax]
0x449590:	mov	rdi, r12
0x449593:	mov	rsi, rbx
0x449596:	sub	rbp, rax
0x449599:	call	0x449290
0x44959e:	mov	rdi, qword ptr [r12]
0x4495a2:	add	rbp, rdi
0x4495a5:	add	rdi, qword ptr [rdi - 0x18]
0x4495a9:	cmp	r13, 1
0x4495ad:	jne	0x449560
0x4495af:	movzx	eax, byte ptr [rbp]
0x4495b3:	mov	byte ptr [rdi], al
0x4495b5:	jmp	0x44956b
0x4495b7:	nop	word ptr [rax + rax]
0x4495c0:	mov	eax, dword ptr [rax - 8]
0x4495c3:	test	eax, eax
0x4495c5:	jle	0x449552
0x4495c7:	mov	rax, qword ptr [rdi]
0x4495ca:	jmp	0x449536
0x4495cf:	nop	
0x4495d0:	mov	dword ptr [rax - 8], 0
0x4495d7:	mov	qword ptr [rax - 0x18], rbx
0x4495db:	mov	byte ptr [rax + rbx], 0
0x4495df:	jmp	0x44957c
0x4495e1:	lea	rdi, [rip + 0x830d6]
0x4495e8:	call	0x42c9f3
0x4495ed:	nop	dword ptr [rax]
0x4495f0:	endbr64	
0x4495f4:	jmp	0x4494f0
0x4495f9:	nop	dword ptr [rax]
0x449600:	endbr64	
0x449604:	push	r12
0x449606:	mov	r12, rdi
0x449609:	mov	rdi, rsi
0x44960c:	push	rbp
0x44960d:	mov	rbp, rsi
0x449610:	sub	rsp, 8
0x449614:	call	0x4039e0
0x449619:	add	rsp, 8
0x44961d:	mov	rsi, rbp
0x449620:	mov	rdi, r12
0x449623:	pop	rbp
0x449624:	mov	rdx, rax
0x449627:	pop	r12
0x449629:	jmp	0x4494f0
0x44962e:	nop	
0x449630:	endbr64	
0x449634:	jmp	0x4494f0
0x449639:	nop	dword ptr [rax]
0x449640:	endbr64	
0x449644:	push	r12
0x449646:	mov	r12, rdi
0x449649:	mov	rdi, rsi
0x44964c:	push	rbp
0x44964d:	mov	rbp, rsi
0x449650:	sub	rsp, 8
0x449654:	call	0x4039e0
0x449659:	add	rsp, 8
0x44965d:	mov	rsi, rbp
0x449660:	mov	rdi, r12
0x449663:	pop	rbp
0x449664:	mov	rdx, rax
0x449667:	pop	r12
0x449669:	jmp	0x4494f0
0x44966e:	nop	
0x449670:	endbr64	
0x449674:	push	r13
0x449676:	push	r12
0x449678:	mov	r12, rdi
0x44967b:	push	rbp
0x44967c:	push	rbx
0x44967d:	sub	rsp, 8
0x449681:	test	rsi, rsi
0x449684:	je	0x4496ea
0x449686:	mov	rcx, qword ptr [rdi]
0x449689:	mov	ebx, edx
0x44968b:	mov	r13, rsi
0x44968e:	movabs	rdx, 0x3ffffffffffffff9
0x449698:	mov	rax, qword ptr [rcx - 0x18]
0x44969c:	sub	rdx, rax
0x44969f:	cmp	rsi, rdx
0x4496a2:	ja	0x449719
0x4496a4:	lea	rbp, [rsi + rax]
0x4496a8:	cmp	rbp, qword ptr [rcx - 0x10]
0x4496ac:	ja	0x4496b5
0x4496ae:	mov	eax, dword ptr [rcx - 8]
0x4496b1:	test	eax, eax
0x4496b3:	jle	0x4496c0
0x4496b5:	mov	rsi, rbp
0x4496b8:	mov	rdi, r12
0x4496bb:	call	0x449290
0x4496c0:	mov	rdi, qword ptr [r12]
0x4496c4:	add	rdi, qword ptr [rdi - 0x18]
0x4496c8:	cmp	r13, 1
0x4496cc:	je	0x449700
0x4496ce:	movsx	esi, bl
0x4496d1:	mov	rdx, r13
0x4496d4:	call	0x403ac0
0x4496d9:	mov	rax, qword ptr [r12]
0x4496dd:	lea	rdx, [rax - 0x18]
0x4496e1:	cmp	rdx, 0x4e65a0
0x4496e8:	jne	0x449708
0x4496ea:	add	rsp, 8
0x4496ee:	mov	rax, r12
0x4496f1:	pop	rbx
0x4496f2:	pop	rbp
0x4496f3:	pop	r12
0x4496f5:	pop	r13
0x4496f7:	ret	
0x4496f8:	nop	dword ptr [rax + rax]
0x449700:	mov	byte ptr [rdi], bl
0x449702:	jmp	0x4496d9
0x449704:	nop	dword ptr [rax]
0x449708:	mov	dword ptr [rax - 8], 0
0x44970f:	mov	qword ptr [rax - 0x18], rbp
0x449713:	mov	byte ptr [rax + rbp], 0
0x449717:	jmp	0x4496ea
0x449719:	lea	rdi, [rip + 0x82f9e]
0x449720:	call	0x42c9f3
0x449725:	nop	word ptr cs:[rax + rax]
0x44972f:	nop	
0x449730:	endbr64	
0x449734:	movabs	rcx, 0x3ffffffffffffff9
0x44973e:	mov	rax, qword ptr [rdi]
0x449741:	mov	rax, qword ptr [rax - 0x18]
0x449745:	cmp	rsi, rcx
0x449748:	ja	0x449773
0x44974a:	cmp	rsi, rax
0x44974d:	ja	0x449768
0x44974f:	jb	0x449758
0x449751:	ret	
0x449752:	nop	word ptr [rax + rax]
0x449758:	sub	rax, rsi
0x44975b:	xor	ecx, ecx
0x44975d:	mov	rdx, rax
0x449760:	jmp	0x4485d0
0x449765:	nop	dword ptr [rax]
0x449768:	movsx	edx, dl
0x44976b:	sub	rsi, rax
0x44976e:	jmp	0x449670
0x449773:	push	rax
0x449774:	lea	rdi, [rip + 0x8342f]
0x44977b:	call	0x42c9f3
0x449780:	endbr64	
0x449784:	xor	edx, edx
0x449786:	jmp	0x449730
0x44978b:	nop	dword ptr [rax + rax]
0x449790:	endbr64	
0x449794:	push	r13
0x449796:	push	r12
0x449798:	push	rbp
0x449799:	mov	ebp, esi
0x44979b:	push	rbx
0x44979c:	mov	rbx, rdi
0x44979f:	sub	rsp, 8
0x4497a3:	mov	rax, qword ptr [rdi]
0x4497a6:	mov	r13, qword ptr [rax - 0x18]
0x4497aa:	lea	r12, [r13 + 1]
0x4497ae:	cmp	r12, qword ptr [rax - 0x10]
0x4497b2:	ja	0x4497bb
0x4497b4:	mov	eax, dword ptr [rax - 8]
0x4497b7:	test	eax, eax
0x4497b9:	jle	0x4497c6
0x4497bb:	mov	rsi, r12
0x4497be:	mov	rdi, rbx
0x4497c1:	call	0x449290
0x4497c6:	mov	rax, qword ptr [rbx]
0x4497c9:	mov	rdx, qword ptr [rax - 0x18]
0x4497cd:	mov	byte ptr [rax + rdx], bpl
0x4497d1:	mov	rax, qword ptr [rbx]
0x4497d4:	lea	rdx, [rax - 0x18]
0x4497d8:	cmp	rdx, 0x4e65a0
0x4497df:	jne	0x4497f0
0x4497e1:	add	rsp, 8
0x4497e5:	pop	rbx
0x4497e6:	pop	rbp
0x4497e7:	pop	r12
0x4497e9:	pop	r13
0x4497eb:	ret	
0x4497ec:	nop	dword ptr [rax]
0x4497f0:	mov	dword ptr [rax - 8], 0
0x4497f7:	mov	qword ptr [rax - 0x18], r12
0x4497fb:	mov	byte ptr [rax + r13 + 1], 0
0x449801:	add	rsp, 8
0x449805:	pop	rbx
0x449806:	pop	rbp
0x449807:	pop	r12
0x449809:	pop	r13
0x44980b:	ret	
0x44980c:	nop	dword ptr [rax]
0x449810:	endbr64	
0x449814:	push	r13
0x449816:	push	r12
0x449818:	mov	r12, rdi
0x44981b:	push	rbp
0x44981c:	push	rbx
0x44981d:	mov	ebx, esi
0x44981f:	sub	rsp, 8
0x449823:	mov	rax, qword ptr [rdi]
0x449826:	mov	r13, qword ptr [rax - 0x18]
0x44982a:	lea	rbp, [r13 + 1]
0x44982e:	cmp	rbp, qword ptr [rax - 0x10]
0x449832:	ja	0x44983b
0x449834:	mov	eax, dword ptr [rax - 8]
0x449837:	test	eax, eax
0x449839:	jle	0x449846
0x44983b:	mov	rsi, rbp
0x44983e:	mov	rdi, r12
0x449841:	call	0x449290
0x449846:	mov	rax, qword ptr [r12]
0x44984a:	mov	rdx, qword ptr [rax - 0x18]
0x44984e:	mov	byte ptr [rax + rdx], bl
0x449851:	mov	rax, qword ptr [r12]
0x449855:	lea	rdx, [rax - 0x18]
0x449859:	cmp	rdx, 0x4e65a0
0x449860:	jne	0x449870
0x449862:	add	rsp, 8
0x449866:	mov	rax, r12
0x449869:	pop	rbx
0x44986a:	pop	rbp
0x44986b:	pop	r12
0x44986d:	pop	r13
0x44986f:	ret	
0x449870:	mov	dword ptr [rax - 8], 0
0x449877:	mov	qword ptr [rax - 0x18], rbp
0x44987b:	mov	byte ptr [rax + r13 + 1], 0
0x449881:	add	rsp, 8
0x449885:	mov	rax, r12
0x449888:	pop	rbx
0x449889:	pop	rbp
0x44988a:	pop	r12
0x44988c:	pop	r13
0x44988e:	ret	
0x44988f:	nop	
0x449890:	endbr64	
0x449894:	push	rbp
0x449895:	push	rbx
0x449896:	mov	rbx, rdi
0x449899:	sub	rsp, 0x28
0x44989d:	mov	rdi, qword ptr [rdi]
0x4498a0:	mov	rax, qword ptr fs:[0x28]
0x4498a9:	mov	qword ptr [rsp + 0x18], rax
0x4498ae:	xor	eax, eax
0x4498b0:	mov	rax, qword ptr [rdi - 0x10]
0x4498b4:	cmp	qword ptr [rdi - 0x18], rax
0x4498b8:	jb	0x4498c4
0x4498ba:	mov	eax, dword ptr [rdi - 8]
0x4498bd:	test	eax, eax
0x4498bf:	jle	0x4498ea
0x4498c1:	mov	rdi, qword ptr [rbx]
0x4498c4:	lea	rbp, [rsp + 0x17]
0x4498c9:	sub	rdi, 0x18
0x4498cd:	xor	edx, edx
0x4498cf:	mov	rsi, rbp
0x4498d2:	call	0x449200
0x4498d7:	mov	rdx, qword ptr [rbx]
0x4498da:	lea	rdi, [rdx - 0x18]
0x4498de:	cmp	rdi, 0x4e65a0
0x4498e5:	jne	0x449908
0x4498e7:	mov	qword ptr [rbx], rax
0x4498ea:	mov	rax, qword ptr [rsp + 0x18]
0x4498ef:	sub	rax, qword ptr fs:[0x28]
0x4498f8:	jne	0x44995f
0x4498fa:	add	rsp, 0x28
0x4498fe:	pop	rbx
0x4498ff:	pop	rbp
0x449900:	ret	
0x449901:	nop	dword ptr [rax]
0x449908:	mov	rcx, qword ptr [rip + 0x986d9]
0x44990f:	cmp	byte ptr [rcx], 0
0x449912:	je	0x449938
0x449914:	mov	ecx, dword ptr [rdx - 8]
0x449917:	lea	esi, [rcx - 1]
0x44991a:	mov	dword ptr [rdx - 8], esi
0x44991d:	test	ecx, ecx
0x44991f:	jg	0x4498e7
0x449921:	mov	rsi, rbp
0x449924:	mov	qword ptr [rsp + 8], rax
0x449929:	call	0x448430
0x44992e:	mov	rax, qword ptr [rsp + 8]
0x449933:	jmp	0x4498e7
0x449935:	nop	dword ptr [rax]
0x449938:	mov	ecx, 0xffffffff
0x44993d:	lock xadd	dword ptr [rdx - 8], ecx
0x449942:	jmp	0x44991d
0x449944:	sub	rax, 1
0x449948:	je	0x449970
0x44994a:	call	0x4445b0
0x44994f:	mov	rax, qword ptr [rsp + 0x18]
0x449954:	sub	rax, qword ptr fs:[0x28]
0x44995d:	je	0x449983
0x44995f:	call	0x4039f0
0x449964:	endbr64	
0x449968:	mov	rdi, rax
0x44996b:	mov	rax, rdx
0x44996e:	jmp	0x449944
0x449970:	call	0x4445b0
0x449975:	call	0x4454f0
0x44997a:	endbr64	
0x44997e:	mov	rbp, rax
0x449981:	jmp	0x44998e
0x449983:	add	rsp, 0x28
0x449987:	pop	rbx
0x449988:	pop	rbp
0x449989:	jmp	0x444620
0x44998e:	call	0x444620
0x449993:	mov	rdi, rbp
0x449996:	call	0x457dd0
0x44999b:	nop	dword ptr [rax + rax]
0x4499a0:	endbr64	
0x4499a4:	sub	rsp, 8
0x4499a8:	call	0x449890
0x4499ad:	add	rsp, 8
0x4499b1:	ret	
0x4499b2:	nop	word ptr cs:[rax + rax]
0x4499bc:	nop	dword ptr [rax]
0x4499c0:	endbr64	
0x4499c4:	mov	eax, dword ptr [rdi + 0x10]
0x4499c7:	test	eax, eax
0x4499c9:	js	0x4499e0
0x4499cb:	cmp	rdi, 0x4e65a0
0x4499d2:	jne	0x4499f0
0x4499d4:	lea	rax, [rdi + 0x18]
0x4499d8:	ret	
0x4499d9:	nop	dword ptr [rax]
0x4499e0:	xor	edx, edx
0x4499e2:	jmp	0x449200
0x4499e7:	nop	word ptr [rax + rax]
0x4499f0:	mov	rax, qword ptr [rip + 0x985f1]
0x4499f7:	cmp	byte ptr [rax], 0
0x4499fa:	je	0x449a08
0x4499fc:	add	dword ptr [rdi + 0x10], 1
0x449a00:	jmp	0x4499d4
0x449a02:	nop	word ptr [rax + rax]
0x449a08:	lock add	dword ptr [rdi + 0x10], 1
0x449a0d:	jmp	0x4499d4
0x449a0f:	nop	
0x449a10:	endbr64	
0x449a14:	mov	r8, rsi
0x449a17:	push	rbx
0x449a18:	mov	rsi, rdx
0x449a1b:	mov	rbx, rdi
0x449a1e:	mov	rax, qword ptr [r8]
0x449a21:	mov	edx, dword ptr [rax - 8]
0x449a24:	lea	rdi, [rax - 0x18]
0x449a28:	test	edx, edx
0x449a2a:	js	0x449a40
0x449a2c:	cmp	rdi, 0x4e65a0
0x449a33:	jne	0x449a50
0x449a35:	mov	qword ptr [rbx], rax
0x449a38:	pop	rbx
0x449a39:	ret	
0x449a3a:	nop	word ptr [rax + rax]
0x449a40:	xor	edx, edx
0x449a42:	call	0x449200
0x449a47:	mov	qword ptr [rbx], rax
0x449a4a:	pop	rbx
0x449a4b:	ret	
0x449a4c:	nop	dword ptr [rax]
0x449a50:	mov	rdx, qword ptr [rip + 0x98591]
0x449a57:	cmp	byte ptr [rdx], 0
0x449a5a:	je	0x449a68
0x449a5c:	add	dword ptr [rax - 8], 1
0x449a60:	jmp	0x449a35
0x449a62:	nop	word ptr [rax + rax]
0x449a68:	lea	rcx, [rax - 8]
0x449a6c:	lock add	dword ptr [rcx], 1
0x449a70:	jmp	0x449a35
0x449a72:	nop	word ptr cs:[rax + rax]
0x449a7c:	nop	dword ptr [rax]
0x449a80:	endbr64	
0x449a84:	push	rbx
0x449a85:	mov	rbx, rdi
0x449a88:	sub	rsp, 0x10
0x449a8c:	mov	rax, qword ptr fs:[0x28]
0x449a95:	mov	qword ptr [rsp + 8], rax
0x449a9a:	mov	rax, qword ptr [rsi]
0x449a9d:	mov	edx, dword ptr [rax - 8]
0x449aa0:	lea	rdi, [rax - 0x18]
0x449aa4:	test	edx, edx
0x449aa6:	js	0x449ad0
0x449aa8:	cmp	rdi, 0x4e65a0
0x449aaf:	jne	0x449ae0
0x449ab1:	mov	qword ptr [rbx], rax
0x449ab4:	mov	rax, qword ptr [rsp + 8]
0x449ab9:	sub	rax, qword ptr fs:[0x28]
0x449ac2:	jne	0x449b02
0x449ac4:	add	rsp, 0x10
0x449ac8:	pop	rbx
0x449ac9:	ret	
0x449aca:	nop	word ptr [rax + rax]
0x449ad0:	lea	rsi, [rsp + 7]
0x449ad5:	xor	edx, edx
0x449ad7:	call	0x449200
0x449adc:	jmp	0x449ab1
0x449ade:	nop	
0x449ae0:	mov	rdx, qword ptr [rip + 0x98501]
0x449ae7:	cmp	byte ptr [rdx], 0
0x449aea:	je	0x449af8
0x449aec:	add	dword ptr [rax - 8], 1
0x449af0:	jmp	0x449ab1
0x449af2:	nop	word ptr [rax + rax]
0x449af8:	lea	rcx, [rax - 8]
0x449afc:	lock add	dword ptr [rcx], 1
0x449b00:	jmp	0x449ab1
0x449b02:	call	0x4039f0
0x449b07:	nop	word ptr [rax + rax]
0x449b10:	endbr64	
0x449b14:	push	r12
0x449b16:	mov	r12, rdi
0x449b19:	push	rbx
0x449b1a:	sub	rsp, 0x18
0x449b1e:	mov	rbx, qword ptr [rsi]
0x449b21:	mov	rax, qword ptr fs:[0x28]
0x449b2a:	mov	qword ptr [rsp + 8], rax
0x449b2f:	xor	eax, eax
0x449b31:	cmp	qword ptr [rdi], rbx
0x449b34:	je	0x449b66
0x449b36:	mov	eax, dword ptr [rbx - 8]
0x449b39:	lea	rdi, [rbx - 0x18]
0x449b3d:	lea	rdx, [rbx - 8]
0x449b41:	test	eax, eax
0x449b43:	js	0x449b88
0x449b45:	mov	rax, 0x4e65a0
0x449b4c:	cmp	rdi, rax
0x449b4f:	jne	0x449bd8
0x449b55:	mov	rdx, qword ptr [r12]
0x449b59:	lea	rdi, [rdx - 0x18]
0x449b5d:	cmp	rdi, rax
0x449b60:	jne	0x449ba0
0x449b62:	mov	qword ptr [r12], rbx
0x449b66:	mov	rax, qword ptr [rsp + 8]
0x449b6b:	sub	rax, qword ptr fs:[0x28]
0x449b74:	jne	0x449bf9
0x449b7a:	add	rsp, 0x18
0x449b7e:	mov	rax, r12
0x449b81:	pop	rbx
0x449b82:	pop	r12
0x449b84:	ret	
0x449b85:	nop	dword ptr [rax]
0x449b88:	lea	rsi, [rsp + 7]
0x449b8d:	xor	edx, edx
0x449b8f:	call	0x449200
0x449b94:	mov	rbx, rax
0x449b97:	mov	rax, 0x4e65a0
0x449b9e:	jmp	0x449b55
0x449ba0:	mov	rax, qword ptr [rip + 0x98441]
0x449ba7:	cmp	byte ptr [rax], 0
0x449baa:	je	0x449bc8
0x449bac:	mov	eax, dword ptr [rdx - 8]
0x449baf:	lea	ecx, [rax - 1]
0x449bb2:	mov	dword ptr [rdx - 8], ecx
0x449bb5:	test	eax, eax
0x449bb7:	jg	0x449b62
0x449bb9:	lea	rsi, [rsp + 7]
0x449bbe:	call	0x448430
0x449bc3:	jmp	0x449b62
0x449bc5:	nop	dword ptr [rax]
0x449bc8:	mov	eax, 0xffffffff
0x449bcd:	lock xadd	dword ptr [rdx - 8], eax
0x449bd2:	jmp	0x449bb5
0x449bd4:	nop	dword ptr [rax]
0x449bd8:	mov	rcx, qword ptr [rip + 0x98409]
0x449bdf:	cmp	byte ptr [rcx], 0
0x449be2:	je	0x449bf0
0x449be4:	add	dword ptr [rbx - 8], 1
0x449be8:	jmp	0x449b55
0x449bed:	nop	dword ptr [rax]
0x449bf0:	lock add	dword ptr [rdx], 1
0x449bf4:	jmp	0x449b55
0x449bf9:	call	0x4039f0
0x449bfe:	nop	
0x449c00:	endbr64	
0x449c04:	jmp	0x449b10
0x449c09:	nop	dword ptr [rax]
0x449c10:	endbr64	
0x449c14:	mov	qword ptr [rdi], rsi
0x449c17:	ret	
0x449c18:	nop	dword ptr [rax + rax]
0x449c20:	endbr64	
0x449c24:	push	r14
0x449c26:	push	r13
0x449c28:	mov	r13, rsi
0x449c2b:	push	r12
0x449c2d:	mov	r12, rdi
0x449c30:	mov	rdi, rsi
0x449c33:	push	rbp
0x449c34:	mov	rbp, rdx
0x449c37:	sub	rsp, 0x18
0x449c3b:	mov	rax, qword ptr fs:[0x28]
0x449c44:	mov	qword ptr [rsp + 8], rax
0x449c49:	xor	eax, eax
0x449c4b:	call	0x4039e0
0x449c50:	xor	esi, esi
0x449c52:	xor	edi, edi
0x449c54:	lea	rdx, [rsp + 7]
0x449c59:	mov	r14, rax
0x449c5c:	call	0x448350
0x449c61:	mov	rdi, r12
0x449c64:	mov	qword ptr [r12], rax
0x449c68:	mov	rax, qword ptr [rbp]
0x449c6c:	mov	rsi, qword ptr [rax - 0x18]
0x449c70:	add	rsi, r14
0x449c73:	call	0x449290
0x449c78:	mov	rdx, r14
0x449c7b:	mov	rsi, r13
0x449c7e:	mov	rdi, r12
0x449c81:	call	0x4494f0
0x449c86:	mov	rsi, rbp
0x449c89:	mov	rdi, r12
0x449c8c:	call	0x449360
0x449c91:	mov	rax, qword ptr [rsp + 8]
0x449c96:	sub	rax, qword ptr fs:[0x28]
0x449c9f:	jne	0x449cb0
0x449ca1:	add	rsp, 0x18
0x449ca5:	mov	rax, r12
0x449ca8:	pop	rbp
0x449ca9:	pop	r12
0x449cab:	pop	r13
0x449cad:	pop	r14
0x449caf:	ret	
0x449cb0:	call	0x4039f0
0x449cb5:	endbr64	
0x449cb9:	mov	rbp, rax
0x449cbc:	mov	rdi, r12
0x449cbf:	call	0x448480
0x449cc4:	mov	rdi, rbp
0x449cc7:	call	0x457dd0
0x449ccc:	nop	dword ptr [rax]
0x449cd0:	endbr64	
0x449cd4:	push	r12
0x449cd6:	mov	r12, rdi
0x449cd9:	xor	edi, edi
0x449cdb:	push	rbp
0x449cdc:	mov	rbp, rdx
0x449cdf:	push	rbx
0x449ce0:	mov	ebx, esi
0x449ce2:	xor	esi, esi
0x449ce4:	sub	rsp, 0x10
0x449ce8:	mov	rax, qword ptr fs:[0x28]
0x449cf1:	mov	qword ptr [rsp + 8], rax
0x449cf6:	xor	eax, eax
0x449cf8:	lea	rdx, [rsp + 7]
0x449cfd:	call	0x448350
0x449d02:	mov	rdi, r12
0x449d05:	mov	qword ptr [r12], rax
0x449d09:	mov	rax, qword ptr [rbp]
0x449d0d:	mov	rsi, qword ptr [rax - 0x18]
0x449d11:	add	rsi, 1
0x449d15:	call	0x449290
0x449d1a:	movsx	edx, bl
0x449d1d:	mov	esi, 1
0x449d22:	mov	rdi, r12
0x449d25:	call	0x449670
0x449d2a:	mov	rsi, rbp
0x449d2d:	mov	rdi, r12
0x449d30:	call	0x449360
0x449d35:	mov	rax, qword ptr [rsp + 8]
0x449d3a:	sub	rax, qword ptr fs:[0x28]
0x449d43:	jne	0x449d51
0x449d45:	add	rsp, 0x10
0x449d49:	mov	rax, r12
0x449d4c:	pop	rbx
0x449d4d:	pop	rbp
0x449d4e:	pop	r12
0x449d50:	ret	
0x449d51:	call	0x4039f0
0x449d56:	endbr64	
0x449d5a:	mov	rbp, rax
0x449d5d:	mov	rdi, r12
0x449d60:	call	0x448480
0x449d65:	mov	rdi, rbp
0x449d68:	call	0x457dd0
0x449d6d:	nop	dword ptr [rax]
0x449d70:	endbr64	
0x449d74:	push	r12
0x449d76:	mov	r12, rdi
0x449d79:	push	rbp
0x449d7a:	mov	rbp, rdx
0x449d7d:	sub	rsp, 0x18
0x449d81:	mov	rax, qword ptr fs:[0x28]
0x449d8a:	mov	qword ptr [rsp + 8], rax
0x449d8f:	mov	rax, qword ptr [rsi]
0x449d92:	mov	edx, dword ptr [rax - 8]
0x449d95:	lea	rdi, [rax - 0x18]
0x449d99:	test	edx, edx
0x449d9b:	js	0x449dd0
0x449d9d:	cmp	rdi, 0x4e65a0
0x449da4:	jne	0x449de0
0x449da6:	mov	qword ptr [r12], rax
0x449daa:	mov	rsi, rbp
0x449dad:	mov	rdi, r12
0x449db0:	call	0x449360
0x449db5:	mov	rax, qword ptr [rsp + 8]
0x449dba:	sub	rax, qword ptr fs:[0x28]
0x449dc3:	jne	0x449e02
0x449dc5:	add	rsp, 0x18
0x449dc9:	mov	rax, r12
0x449dcc:	pop	rbp
0x449dcd:	pop	r12
0x449dcf:	ret	
0x449dd0:	lea	rsi, [rsp + 7]
0x449dd5:	xor	edx, edx
0x449dd7:	call	0x449200
0x449ddc:	jmp	0x449da6
0x449dde:	nop	
0x449de0:	mov	rdx, qword ptr [rip + 0x98201]
0x449de7:	cmp	byte ptr [rdx], 0
0x449dea:	je	0x449df8
0x449dec:	add	dword ptr [rax - 8], 1
0x449df0:	jmp	0x449da6
0x449df2:	nop	word ptr [rax + rax]
0x449df8:	lea	rcx, [rax - 8]
0x449dfc:	lock add	dword ptr [rcx], 1
0x449e00:	jmp	0x449da6
0x449e02:	call	0x4039f0
0x449e07:	endbr64	
0x449e0b:	mov	rbp, rax
0x449e0e:	mov	rdi, r12
0x449e11:	call	0x448480
0x449e16:	mov	rdi, rbp
0x449e19:	call	0x457dd0
0x449e1e:	nop	
0x449e20:	endbr64	
0x449e24:	cmp	rsi, rdi
0x449e27:	je	0x449e70
0x449e29:	push	r12
0x449e2b:	push	rbp
0x449e2c:	mov	rbp, rdi
0x449e2f:	push	rbx
0x449e30:	mov	rbx, rsi
0x449e33:	xor	esi, esi
0x449e35:	sub	rbx, rdi
0x449e38:	mov	rdi, rbx
0x449e3b:	call	0x4482b0
0x449e40:	mov	r12, rax
0x449e43:	lea	r8, [rax + 0x18]
0x449e47:	cmp	rbx, 1
0x449e4b:	je	0x449e80
0x449e4d:	mov	rdi, r8
0x449e50:	mov	rdx, rbx
0x449e53:	mov	rsi, rbp
0x449e56:	call	0x403c60
0x449e5b:	mov	r8, rax
0x449e5e:	cmp	r12, 0x4e65a0
0x449e65:	jne	0x449e90
0x449e67:	pop	rbx
0x449e68:	mov	rax, r8
0x449e6b:	pop	rbp
0x449e6c:	pop	r12
0x449e6e:	ret	
0x449e6f:	nop	
0x449e70:	mov	rax, 0x4e65a0
0x449e77:	lea	r8, [rax + 0x18]
0x449e7b:	mov	rax, r8
0x449e7e:	ret	
0x449e7f:	nop	
0x449e80:	movzx	eax, byte ptr [rbp]
0x449e84:	mov	byte ptr [r12 + 0x18], al
0x449e89:	jmp	0x449e5e
0x449e8b:	nop	dword ptr [rax + rax]
0x449e90:	mov	dword ptr [r12 + 0x10], 0
0x449e99:	mov	qword ptr [r12], rbx
0x449e9d:	mov	byte ptr [r12 + rbx + 0x18], 0
0x449ea3:	jmp	0x449e67
0x449ea5:	nop	word ptr cs:[rax + rax]
0x449eaf:	nop	
0x449eb0:	endbr64	
0x449eb4:	push	rbx
0x449eb5:	mov	rbx, rdi
0x449eb8:	mov	rdi, rsi
0x449ebb:	mov	rsi, rdx
0x449ebe:	mov	rdx, rcx
0x449ec1:	call	0x449e20
0x449ec6:	mov	qword ptr [rbx], rax
0x449ec9:	pop	rbx
0x449eca:	ret	
0x449ecb:	nop	dword ptr [rax + rax]
0x449ed0:	endbr64	
0x449ed4:	cmp	rdi, rsi
0x449ed7:	je	0x449f40
0x449ed9:	push	r12
0x449edb:	push	rbp
0x449edc:	mov	rbp, rdi
0x449edf:	push	rbx
0x449ee0:	test	rdi, rdi
0x449ee3:	je	0x449f65
0x449ee9:	mov	rbx, rsi
0x449eec:	xor	esi, esi
0x449eee:	sub	rbx, rdi
0x449ef1:	mov	rdi, rbx
0x449ef4:	call	0x4482b0
0x449ef9:	mov	r12, rax
0x449efc:	lea	r8, [rax + 0x18]
0x449f00:	cmp	rbx, 1
0x449f04:	je	0x449f30
0x449f06:	mov	rdi, r8
0x449f09:	mov	rdx, rbx
0x449f0c:	mov	rsi, rbp
0x449f0f:	call	0x403c60
0x449f14:	mov	r8, rax
0x449f17:	cmp	r12, 0x4e65a0
0x449f1e:	jne	0x449f50
0x449f20:	pop	rbx
0x449f21:	mov	rax, r8
0x449f24:	pop	rbp
0x449f25:	pop	r12
0x449f27:	ret	
0x449f28:	nop	dword ptr [rax + rax]
0x449f30:	movzx	eax, byte ptr [rbp]
0x449f34:	mov	byte ptr [r12 + 0x18], al
0x449f39:	jmp	0x449f17
0x449f3b:	nop	dword ptr [rax + rax]
0x449f40:	mov	rax, 0x4e65a0
0x449f47:	lea	r8, [rax + 0x18]
0x449f4b:	mov	rax, r8
0x449f4e:	ret	
0x449f4f:	nop	
0x449f50:	mov	dword ptr [r12 + 0x10], 0
0x449f59:	mov	qword ptr [r12], rbx
0x449f5d:	mov	byte ptr [r12 + rbx + 0x18], 0
0x449f63:	jmp	0x449f20
0x449f65:	lea	rdi, [rip + 0x82bfc]
0x449f6c:	call	0x42c8eb
0x449f71:	nop	word ptr cs:[rax + rax]
0x449f7b:	nop	dword ptr [rax + rax]
0x449f80:	endbr64	
0x449f84:	push	rbx
0x449f85:	mov	rbx, rdi
0x449f88:	mov	rdi, qword ptr [rsi]
0x449f8b:	mov	r8, qword ptr [rdi - 0x18]
0x449f8f:	lea	rsi, [rdi + r8]
0x449f93:	cmp	rdx, r8
0x449f96:	ja	0x449fa8
0x449f98:	add	rdi, rdx
0x449f9b:	mov	rdx, rcx
0x449f9e:	call	0x449ed0
0x449fa3:	mov	qword ptr [rbx], rax
0x449fa6:	pop	rbx
0x449fa7:	ret	
0x449fa8:	mov	rcx, r8
0x449fab:	lea	rsi, [rip + 0x82778]
0x449fb2:	lea	rdi, [rip + 0x825ff]
0x449fb9:	xor	eax, eax
0x449fbb:	call	0x440770
0x449fc0:	endbr64	
0x449fc4:	push	rbx
0x449fc5:	mov	rbx, rdi
0x449fc8:	mov	r8, rcx
0x449fcb:	sub	rsp, 0x10
0x449fcf:	mov	rdi, qword ptr [rsi]
0x449fd2:	mov	rax, qword ptr fs:[0x28]
0x449fdb:	mov	qword ptr [rsp + 8], rax
0x449fe0:	xor	eax, eax
0x449fe2:	mov	rcx, qword ptr [rdi - 0x18]
0x449fe6:	mov	rsi, rcx
0x449fe9:	sub	rsi, rdx
0x449fec:	cmp	rsi, r8
0x449fef:	cmova	rsi, r8
0x449ff3:	add	rsi, rdx
0x449ff6:	add	rsi, rdi
0x449ff9:	cmp	rdx, rcx
0x449ffc:	ja	0x44a027
0x449ffe:	lea	r8, [rsp + 7]
0x44a003:	add	rdi, rdx
0x44a006:	mov	rdx, r8
0x44a009:	call	0x449ed0
0x44a00e:	mov	qword ptr [rbx], rax
0x44a011:	mov	rax, qword ptr [rsp + 8]
0x44a016:	sub	rax, qword ptr fs:[0x28]
0x44a01f:	jne	0x44a03a
0x44a021:	add	rsp, 0x10
0x44a025:	pop	rbx
0x44a026:	ret	
0x44a027:	lea	rsi, [rip + 0x826fc]
0x44a02e:	lea	rdi, [rip + 0x82583]
0x44a035:	call	0x440770
0x44a03a:	call	0x4039f0
0x44a03f:	nop	
0x44a040:	endbr64	
0x44a044:	push	r12
0x44a046:	mov	rax, qword ptr [rsi]
0x44a049:	mov	r8, qword ptr [rax - 0x18]
0x44a04d:	cmp	rdx, r8
0x44a050:	ja	0x44a060
0x44a052:	mov	r12, rdi
0x44a055:	call	0x449fc0
0x44a05a:	mov	rax, r12
0x44a05d:	pop	r12
0x44a05f:	ret	
0x44a060:	mov	rcx, r8
0x44a063:	lea	rsi, [rip + 0x826ea]
0x44a06a:	lea	rdi, [rip + 0x82547]
0x44a071:	xor	eax, eax
0x44a073:	call	0x440770
0x44a078:	nop	dword ptr [rax + rax]
0x44a080:	endbr64	
0x44a084:	push	rbx
0x44a085:	mov	rbx, rdi
0x44a088:	mov	rdi, qword ptr [rsi]
0x44a08b:	mov	r9, rcx
0x44a08e:	mov	rcx, qword ptr [rdi - 0x18]
0x44a092:	mov	rsi, rcx
0x44a095:	sub	rsi, rdx
0x44a098:	cmp	rsi, r9
0x44a09b:	cmova	rsi, r9
0x44a09f:	add	rsi, rdx
0x44a0a2:	add	rsi, rdi
0x44a0a5:	cmp	rdx, rcx
0x44a0a8:	ja	0x44a0ba
0x44a0aa:	add	rdi, rdx
0x44a0ad:	mov	rdx, r8
0x44a0b0:	call	0x449ed0
0x44a0b5:	mov	qword ptr [rbx], rax
0x44a0b8:	pop	rbx
0x44a0b9:	ret	
0x44a0ba:	lea	rsi, [rip + 0x82669]
0x44a0c1:	lea	rdi, [rip + 0x824f0]
0x44a0c8:	xor	eax, eax
0x44a0ca:	call	0x440770
0x44a0cf:	nop	
0x44a0d0:	endbr64	
0x44a0d4:	push	rbx
0x44a0d5:	mov	rbx, rdi
0x44a0d8:	mov	rdi, rsi
0x44a0db:	mov	rsi, rdx
0x44a0de:	mov	rdx, rcx
0x44a0e1:	call	0x449ed0
0x44a0e6:	mov	qword ptr [rbx], rax
0x44a0e9:	pop	rbx
0x44a0ea:	ret	
0x44a0eb:	nop	dword ptr [rax + rax]
0x44a0f0:	endbr64	
0x44a0f4:	cmp	rdi, rsi
0x44a0f7:	je	0x44a160
0x44a0f9:	push	r12
0x44a0fb:	push	rbp
0x44a0fc:	mov	rbp, rdi
0x44a0ff:	push	rbx
0x44a100:	test	rdi, rdi
0x44a103:	je	0x44a185
0x44a109:	mov	rbx, rsi
0x44a10c:	xor	esi, esi
0x44a10e:	sub	rbx, rdi
0x44a111:	mov	rdi, rbx
0x44a114:	call	0x4482b0
0x44a119:	mov	r12, rax
0x44a11c:	lea	r8, [rax + 0x18]
0x44a120:	cmp	rbx, 1
0x44a124:	je	0x44a150
0x44a126:	mov	rdi, r8
0x44a129:	mov	rdx, rbx
0x44a12c:	mov	rsi, rbp
0x44a12f:	call	0x403c60
0x44a134:	mov	r8, rax
0x44a137:	cmp	r12, 0x4e65a0
0x44a13e:	jne	0x44a170
0x44a140:	pop	rbx
0x44a141:	mov	rax, r8
0x44a144:	pop	rbp
0x44a145:	pop	r12
0x44a147:	ret	
0x44a148:	nop	dword ptr [rax + rax]
0x44a150:	movzx	eax, byte ptr [rbp]
0x44a154:	mov	byte ptr [r12 + 0x18], al
0x44a159:	jmp	0x44a137
0x44a15b:	nop	dword ptr [rax + rax]
0x44a160:	mov	rax, 0x4e65a0
0x44a167:	lea	r8, [rax + 0x18]
0x44a16b:	mov	rax, r8
0x44a16e:	ret	
0x44a16f:	nop	
0x44a170:	mov	dword ptr [r12 + 0x10], 0
0x44a179:	mov	qword ptr [r12], rbx
0x44a17d:	mov	byte ptr [r12 + rbx + 0x18], 0
0x44a183:	jmp	0x44a140
0x44a185:	lea	rdi, [rip + 0x829dc]
0x44a18c:	call	0x42c8eb
0x44a191:	nop	word ptr cs:[rax + rax]
0x44a19b:	nop	dword ptr [rax + rax]
0x44a1a0:	endbr64	
0x44a1a4:	push	rbx
0x44a1a5:	mov	rbx, rdi
0x44a1a8:	mov	rdi, rsi
0x44a1ab:	lea	rsi, [rsi + rdx]
0x44a1af:	mov	rdx, rcx
0x44a1b2:	call	0x44a0f0
0x44a1b7:	mov	qword ptr [rbx], rax
0x44a1ba:	pop	rbx
0x44a1bb:	ret	
0x44a1bc:	nop	dword ptr [rax]
0x44a1c0:	endbr64	
0x44a1c4:	push	r14
0x44a1c6:	push	r13
0x44a1c8:	push	r12
0x44a1ca:	push	rbp
0x44a1cb:	mov	rbp, rsi
0x44a1ce:	push	rbx
0x44a1cf:	sub	rsp, 0x30
0x44a1d3:	mov	rsi, qword ptr [rdi]
0x44a1d6:	mov	rax, qword ptr fs:[0x28]
0x44a1df:	mov	qword ptr [rsp + 0x28], rax
0x44a1e4:	xor	eax, eax
0x44a1e6:	mov	r9, qword ptr [rsi - 0x18]
0x44a1ea:	cmp	rbp, r9
0x44a1ed:	ja	0x44a397
0x44a1f3:	movabs	rax, 0x3ffffffffffffff9
0x44a1fd:	mov	r12, r9
0x44a200:	sub	r12, rbp
0x44a203:	cmp	r12, rdx
0x44a206:	cmova	r12, rdx
0x44a20a:	sub	rax, r9
0x44a20d:	add	rax, r12
0x44a210:	cmp	r8, rax
0x44a213:	ja	0x44a38b
0x44a219:	mov	r13, rdi
0x44a21c:	cmp	rsi, rcx
0x44a21f:	jbe	0x44a250
0x44a221:	mov	rax, qword ptr [rsp + 0x28]
0x44a226:	sub	rax, qword ptr fs:[0x28]
0x44a22f:	jne	0x44a386
0x44a235:	add	rsp, 0x30
0x44a239:	mov	rdx, r12
0x44a23c:	mov	rsi, rbp
0x44a23f:	mov	rdi, r13
0x44a242:	pop	rbx
0x44a243:	pop	rbp
0x44a244:	pop	r12
0x44a246:	pop	r13
0x44a248:	pop	r14
0x44a24a:	jmp	0x448d00
0x44a24f:	nop	
0x44a250:	add	r9, rsi
0x44a253:	cmp	rcx, r9
0x44a256:	ja	0x44a221
0x44a258:	mov	eax, dword ptr [rsi - 8]
0x44a25b:	test	eax, eax
0x44a25d:	jg	0x44a221
0x44a25f:	mov	rax, qword ptr [rdi]
0x44a262:	lea	rsi, [rcx + r8]
0x44a266:	lea	rdx, [rax + rbp]
0x44a26a:	cmp	rsi, rdx
0x44a26d:	jbe	0x44a360
0x44a273:	lea	rdx, [rbp + r12]
0x44a278:	add	rdx, rax
0x44a27b:	cmp	rcx, rdx
0x44a27e:	jb	0x44a2f0
0x44a280:	sub	rcx, rax
0x44a283:	add	rcx, r8
0x44a286:	mov	rbx, rcx
0x44a289:	sub	rbx, r12
0x44a28c:	mov	rcx, r8
0x44a28f:	mov	rsi, rbp
0x44a292:	mov	rdi, r13
0x44a295:	mov	rdx, r12
0x44a298:	mov	qword ptr [rsp + 8], r8
0x44a29d:	call	0x4485d0
0x44a2a2:	mov	rdi, qword ptr [r13]
0x44a2a6:	mov	r8, qword ptr [rsp + 8]
0x44a2ab:	add	rbx, qword ptr [r13]
0x44a2af:	mov	rsi, rbx
0x44a2b2:	add	rdi, rbp
0x44a2b5:	cmp	r8, 1
0x44a2b9:	je	0x44a370
0x44a2bf:	test	r8, r8
0x44a2c2:	je	0x44a2cc
0x44a2c4:	mov	rdx, r8
0x44a2c7:	call	0x403c60
0x44a2cc:	mov	rax, qword ptr [rsp + 0x28]
0x44a2d1:	sub	rax, qword ptr fs:[0x28]
0x44a2da:	jne	0x44a386
0x44a2e0:	add	rsp, 0x30
0x44a2e4:	mov	rax, r13
0x44a2e7:	pop	rbx
0x44a2e8:	pop	rbp
0x44a2e9:	pop	r12
0x44a2eb:	pop	r13
0x44a2ed:	pop	r14
0x44a2ef:	ret	
0x44a2f0:	lea	r14, [rsp + 0x1f]
0x44a2f5:	mov	rdi, rcx
0x44a2f8:	mov	qword ptr [rsp + 8], r8
0x44a2fd:	mov	rdx, r14
0x44a300:	call	0x44a0f0
0x44a305:	mov	r8, qword ptr [rsp + 8]
0x44a30a:	mov	rdx, r12
0x44a30d:	mov	rsi, rbp
0x44a310:	mov	rcx, rax
0x44a313:	mov	rdi, r13
0x44a316:	mov	qword ptr [rsp + 0x20], rax
0x44a31b:	mov	rbx, rax
0x44a31e:	call	0x448d00
0x44a323:	lea	rdi, [rbx - 0x18]
0x44a327:	cmp	rdi, 0x4e65a0
0x44a32e:	mov	r13, rax
0x44a331:	je	0x44a2cc
0x44a333:	mov	rax, qword ptr [rip + 0x97cae]
0x44a33a:	cmp	byte ptr [rax], 0
0x44a33d:	je	0x44a37a
0x44a33f:	mov	eax, dword ptr [rbx - 8]
0x44a342:	lea	edx, [rax - 1]
0x44a345:	mov	dword ptr [rbx - 8], edx
0x44a348:	test	eax, eax
0x44a34a:	jg	0x44a2cc
0x44a34c:	mov	rsi, r14
0x44a34f:	call	0x448430
0x44a354:	jmp	0x44a2cc
0x44a359:	nop	dword ptr [rax]
0x44a360:	mov	rbx, rcx
0x44a363:	sub	rbx, rax
0x44a366:	jmp	0x44a28c
0x44a36b:	nop	dword ptr [rax + rax]
0x44a370:	movzx	eax, byte ptr [rbx]
0x44a373:	mov	byte ptr [rdi], al
0x44a375:	jmp	0x44a2cc
0x44a37a:	mov	eax, 0xffffffff
0x44a37f:	lock xadd	dword ptr [rbx - 8], eax
0x44a384:	jmp	0x44a348
0x44a386:	call	0x4039f0
0x44a38b:	lea	rdi, [rip + 0x822e8]
0x44a392:	call	0x42c9f3
0x44a397:	mov	rcx, r9
0x44a39a:	mov	rdx, rbp
0x44a39d:	lea	rsi, [rip + 0x822d6]
0x44a3a4:	lea	rdi, [rip + 0x8220d]
0x44a3ab:	call	0x440770
0x44a3b0:	endbr64	
0x44a3b4:	mov	rbp, rax
0x44a3b7:	lea	rdi, [rsp + 0x20]
0x44a3bc:	call	0x448480
0x44a3c1:	mov	rdi, rbp
0x44a3c4:	call	0x457dd0
0x44a3c9:	nop	dword ptr [rax]
0x44a3d0:	endbr64	
0x44a3d4:	mov	rcx, qword ptr [rcx]
0x44a3d7:	mov	r8, qword ptr [rcx - 0x18]
0x44a3db:	jmp	0x44a1c0
0x44a3e0:	endbr64	
0x44a3e4:	mov	rcx, qword ptr [rcx]
0x44a3e7:	mov	r10, r8
0x44a3ea:	mov	r11, qword ptr [rcx - 0x18]
0x44a3ee:	mov	r8, r11
0x44a3f1:	sub	r8, r10
0x44a3f4:	cmp	r8, r9
0x44a3f7:	cmova	r8, r9
0x44a3fb:	cmp	r10, r11
0x44a3fe:	ja	0x44a408
0x44a400:	add	rcx, r10
0x44a403:	jmp	0x44a1c0
0x44a408:	push	rax
0x44a409:	mov	rcx, r11
0x44a40c:	mov	rdx, r10
0x44a40f:	lea	rsi, [rip + 0x82264]
0x44a416:	lea	rdi, [rip + 0x8219b]
0x44a41d:	xor	eax, eax
0x44a41f:	call	0x440770
0x44a424:	nop	word ptr cs:[rax + rax]
0x44a42e:	nop	
0x44a430:	endbr64	
0x44a434:	push	r14
0x44a436:	mov	r14, rdx
0x44a439:	push	r13
0x44a43b:	mov	r13, rsi
0x44a43e:	push	r12
0x44a440:	mov	r12, rcx
0x44a443:	push	rbp
0x44a444:	mov	rbp, rdi
0x44a447:	mov	rdi, rcx
0x44a44a:	sub	rsp, 8
0x44a44e:	call	0x4039e0
0x44a453:	add	rsp, 8
0x44a457:	mov	rcx, r12
0x44a45a:	mov	rdx, r14
0x44a45d:	mov	rsi, r13
0x44a460:	mov	rdi, rbp
0x44a463:	mov	r8, rax
0x44a466:	pop	rbp
0x44a467:	pop	r12
0x44a469:	pop	r13
0x44a46b:	pop	r14
0x44a46d:	jmp	0x44a1c0
0x44a472:	nop	word ptr cs:[rax + rax]
0x44a47c:	nop	dword ptr [rax]
0x44a480:	endbr64	
0x44a484:	sub	rdx, rsi
0x44a487:	sub	rsi, qword ptr [rdi]
0x44a48a:	jmp	0x44a1c0
0x44a48f:	nop	
0x44a490:	endbr64	
0x44a494:	mov	rcx, qword ptr [rcx]
0x44a497:	sub	rdx, rsi
0x44a49a:	sub	rsi, qword ptr [rdi]
0x44a49d:	mov	r8, qword ptr [rcx - 0x18]
0x44a4a1:	jmp	0x44a1c0
0x44a4a6:	nop	word ptr cs:[rax + rax]
0x44a4b0:	endbr64	
0x44a4b4:	push	r13
0x44a4b6:	mov	r13, rcx
0x44a4b9:	push	r12
0x44a4bb:	mov	r12, rdi
0x44a4be:	mov	rdi, rcx
0x44a4c1:	push	rbp
0x44a4c2:	mov	rbp, rdx
0x44a4c5:	push	rbx
0x44a4c6:	mov	rbx, rsi
0x44a4c9:	sub	rsp, 8
0x44a4cd:	call	0x4039e0
0x44a4d2:	mov	rdx, rbp
0x44a4d5:	mov	rcx, r13
0x44a4d8:	mov	rdi, r12
0x44a4db:	sub	rdx, rbx
0x44a4de:	sub	rbx, qword ptr [r12]
0x44a4e2:	add	rsp, 8
0x44a4e6:	mov	r8, rax
0x44a4e9:	mov	rsi, rbx
0x44a4ec:	pop	rbx
0x44a4ed:	pop	rbp
0x44a4ee:	pop	r12
0x44a4f0:	pop	r13
0x44a4f2:	jmp	0x44a1c0
0x44a4f7:	nop	word ptr [rax + rax]
0x44a500:	endbr64	
0x44a504:	sub	rdx, rsi
0x44a507:	sub	r8, rcx
0x44a50a:	sub	rsi, qword ptr [rdi]
0x44a50d:	jmp	0x44a1c0
0x44a512:	nop	word ptr cs:[rax + rax]
0x44a51c:	nop	dword ptr [rax]
0x44a520:	endbr64	
0x44a524:	sub	rdx, rsi
0x44a527:	sub	r8, rcx
0x44a52a:	sub	rsi, qword ptr [rdi]
0x44a52d:	jmp	0x44a1c0
0x44a532:	nop	word ptr cs:[rax + rax]
0x44a53c:	nop	dword ptr [rax]
0x44a540:	endbr64	
0x44a544:	sub	rdx, rsi
0x44a547:	sub	r8, rcx
0x44a54a:	sub	rsi, qword ptr [rdi]
0x44a54d:	jmp	0x44a1c0
0x44a552:	nop	word ptr cs:[rax + rax]
0x44a55c:	nop	dword ptr [rax]
0x44a560:	endbr64	
0x44a564:	sub	rdx, rsi
0x44a567:	sub	r8, rcx
0x44a56a:	sub	rsi, qword ptr [rdi]
0x44a56d:	jmp	0x44a1c0
0x44a572:	nop	word ptr cs:[rax + rax]
0x44a57c:	nop	dword ptr [rax]
0x44a580:	endbr64	
0x44a584:	sub	rdx, rsi
0x44a587:	sub	rsi, qword ptr [rdi]
0x44a58a:	jmp	0x44a1c0
0x44a58f:	nop	
0x44a590:	endbr64	
0x44a594:	push	r12
0x44a596:	mov	r12, rdx
0x44a599:	push	rbp
0x44a59a:	mov	rbp, rsi
0x44a59d:	mov	rsi, 0xffffffffffffffff
0x44a5a4:	push	rbx
0x44a5a5:	mov	rbx, rdi
0x44a5a8:	test	rbp, rbp
0x44a5ab:	je	0x44a5ba
0x44a5ad:	mov	rdi, rbp
0x44a5b0:	call	0x4039e0
0x44a5b5:	lea	rsi, [rbp + rax]
0x44a5ba:	mov	rdx, r12
0x44a5bd:	mov	rdi, rbp
0x44a5c0:	call	0x44a0f0
0x44a5c5:	mov	qword ptr [rbx], rax
0x44a5c8:	pop	rbx
0x44a5c9:	pop	rbp
0x44a5ca:	pop	r12
0x44a5cc:	ret	
0x44a5cd:	nop	dword ptr [rax]
0x44a5d0:	endbr64	
0x44a5d4:	push	rbx
0x44a5d5:	mov	rbx, rdi
0x44a5d8:	mov	rdi, rsi
0x44a5db:	lea	rsi, [rsi + rdx]
0x44a5df:	mov	rdx, rcx
0x44a5e2:	call	0x44a0f0
0x44a5e7:	mov	qword ptr [rbx], rax
0x44a5ea:	pop	rbx
0x44a5eb:	ret	
0x44a5ec:	nop	dword ptr [rax]
0x44a5f0:	endbr64	
0x44a5f4:	push	rbx
0x44a5f5:	mov	rbx, rdi
0x44a5f8:	mov	rdi, rsi
0x44a5fb:	mov	rsi, rdx
0x44a5fe:	mov	rdx, rcx
0x44a601:	call	0x44a0f0
0x44a606:	mov	qword ptr [rbx], rax
0x44a609:	pop	rbx
0x44a60a:	ret	
0x44a60b:	nop	dword ptr [rax + rax]
0x44a610:	endbr64	
0x44a614:	mov	rax, qword ptr [rsi]
0x44a617:	cmp	qword ptr [rdi], rax
0x44a61a:	sete	al
0x44a61d:	ret	
0x44a61e:	nop	
0x44a620:	endbr64	
0x44a624:	mov	rax, qword ptr [rsi]
0x44a627:	cmp	qword ptr [rdi], rax
0x44a62a:	sete	al
0x44a62d:	ret	
0x44a62e:	nop	
0x44a630:	endbr64	
0x44a634:	mov	rsi, qword ptr [rsi]
0x44a637:	mov	rdx, qword ptr [rsi - 0x18]
0x44a63b:	jmp	0x44ab10
0x44a640:	endbr64	
0x44a644:	mov	rsi, qword ptr [rsi]
0x44a647:	mov	rdx, qword ptr [rsi - 0x18]
0x44a64b:	jmp	0x44ab10
0x44a650:	endbr64	
0x44a654:	sub	rsp, 0x18
0x44a658:	mov	edx, 0x64
0x44a65d:	mov	ecx, 1
0x44a662:	mov	rax, qword ptr fs:[0x28]
0x44a66b:	mov	qword ptr [rsp + 8], rax
0x44a670:	xor	eax, eax
0x44a672:	lea	rsi, [rsp + 4]
0x44a677:	jmp	0x44a685
0x44a679:	nop	dword ptr [rax]
0x44a680:	sub	edx, 1
0x44a683:	je	0x44a6aa
0x44a685:	rdrand	eax
0x44a688:	mov	dword ptr [rsi], eax
0x44a68a:	cmovb	eax, ecx
0x44a68d:	test	eax, eax
0x44a68f:	je	0x44a680
0x44a691:	mov	eax, dword ptr [rsp + 4]
0x44a695:	mov	rdx, qword ptr [rsp + 8]
0x44a69a:	sub	rdx, qword ptr fs:[0x28]
0x44a6a3:	jne	0x44a6b6
0x44a6a5:	add	rsp, 0x18
0x44a6a9:	ret	
0x44a6aa:	lea	rdi, [rip + 0x8251f]
0x44a6b1:	call	0x42cac9
0x44a6b6:	call	0x4039f0
0x44a6bb:	nop	dword ptr [rax + rax]
0x44a6c0:	endbr64	
0x44a6c4:	sub	rsp, 0x18
0x44a6c8:	mov	rax, qword ptr fs:[0x28]
0x44a6d1:	mov	qword ptr [rsp + 8], rax
0x44a6d6:	xor	eax, eax
0x44a6d8:	rdseed	eax
0x44a6db:	mov	dword ptr [rsp + 4], eax
0x44a6df:	mov	rsi, rdi
0x44a6e2:	mov	eax, 0x63
0x44a6e7:	lea	rcx, [rsp + 4]
0x44a6ec:	jae	0x44a6f5
0x44a6ee:	jmp	0x44a6fe
0x44a6f0:	sub	eax, 1
0x44a6f3:	je	0x44a717
0x44a6f5:	pause	
0x44a6f7:	rdseed	edx
0x44a6fa:	mov	dword ptr [rcx], edx
0x44a6fc:	jae	0x44a6f0
0x44a6fe:	mov	eax, dword ptr [rsp + 4]
0x44a702:	mov	rdx, qword ptr [rsp + 8]
0x44a707:	sub	rdx, qword ptr fs:[0x28]
0x44a710:	jne	0x44a72e
0x44a712:	add	rsp, 0x18
0x44a716:	ret	
0x44a717:	test	rsi, rsi
0x44a71a:	je	0x44a722
0x44a71c:	xor	edi, edi
0x44a71e:	call	rsi
0x44a720:	jmp	0x44a702
0x44a722:	lea	rdi, [rip + 0x824c4]
0x44a729:	call	0x42cac9
0x44a72e:	call	0x4039f0
0x44a733:	nop	word ptr cs:[rax + rax]
0x44a73d:	nop	dword ptr [rax]
0x44a740:	push	r12
0x44a742:	mov	r12, rdx
0x44a745:	push	rbp
0x44a746:	mov	rbp, rsi
0x44a749:	push	rbx
0x44a74a:	mov	rbx, rdi
0x44a74d:	sub	rsp, 0x10
0x44a751:	mov	rax, qword ptr fs:[0x28]
0x44a75a:	mov	qword ptr [rsp + 8], rax
0x44a75f:	xor	eax, eax
0x44a761:	test	rdx, rdx
0x44a764:	je	0x44a76f
0x44a766:	test	rsi, rsi
0x44a769:	je	0x44a7ef
0x44a76f:	sub	r12, rbp
0x44a772:	mov	qword ptr [rsp], r12
0x44a776:	cmp	r12, 0xf
0x44a77a:	ja	0x44a7c0
0x44a77c:	mov	rdi, qword ptr [rbx]
0x44a77f:	cmp	r12, 1
0x44a783:	jne	0x44a7b8
0x44a785:	movzx	eax, byte ptr [rbp]
0x44a789:	mov	byte ptr [rdi], al
0x44a78b:	mov	r12, qword ptr [rsp]
0x44a78f:	mov	rdi, qword ptr [rbx]
0x44a792:	mov	qword ptr [rbx + 8], r12
0x44a796:	mov	byte ptr [rdi + r12], 0
0x44a79b:	mov	rax, qword ptr [rsp + 8]
0x44a7a0:	sub	rax, qword ptr fs:[0x28]
0x44a7a9:	jne	0x44a7fb
0x44a7ab:	add	rsp, 0x10
0x44a7af:	pop	rbx
0x44a7b0:	pop	rbp
0x44a7b1:	pop	r12
0x44a7b3:	ret	
0x44a7b4:	nop	dword ptr [rax]
0x44a7b8:	test	r12, r12
0x44a7bb:	je	0x44a792
0x44a7bd:	jmp	0x44a7db
0x44a7bf:	nop	
0x44a7c0:	mov	rdi, rbx
0x44a7c3:	mov	rsi, rsp
0x44a7c6:	xor	edx, edx
0x44a7c8:	call	0x440cf0
0x44a7cd:	mov	qword ptr [rbx], rax
0x44a7d0:	mov	rdi, rax
0x44a7d3:	mov	rax, qword ptr [rsp]
0x44a7d7:	mov	qword ptr [rbx + 0x10], rax
0x44a7db:	mov	rdx, r12
0x44a7de:	mov	rsi, rbp
0x44a7e1:	call	0x403c60
0x44a7e6:	mov	r12, qword ptr [rsp]
0x44a7ea:	mov	rdi, qword ptr [rbx]
0x44a7ed:	jmp	0x44a792
0x44a7ef:	lea	rdi, [rip + 0x81f0a]
0x44a7f6:	call	0x42c8eb
0x44a7fb:	call	0x4039f0
0x44a800:	endbr64	
0x44a804:	sub	rsp, 0x18
0x44a808:	mov	rax, qword ptr fs:[0x28]
0x44a811:	mov	qword ptr [rsp + 8], rax
0x44a816:	xor	eax, eax
0x44a818:	rdseed	eax
0x44a81b:	mov	dword ptr [rsp + 4], eax
0x44a81f:	lea	rcx, [rsp + 4]
0x44a824:	mov	eax, 0x63
0x44a829:	jae	0x44a835
0x44a82b:	jmp	0x44a83e
0x44a82d:	nop	dword ptr [rax]
0x44a830:	sub	eax, 1
0x44a833:	je	0x44a857
0x44a835:	pause	
0x44a837:	rdseed	edx
0x44a83a:	mov	dword ptr [rcx], edx
0x44a83c:	jae	0x44a830
0x44a83e:	mov	eax, dword ptr [rsp + 4]
0x44a842:	mov	rdx, qword ptr [rsp + 8]
0x44a847:	sub	rdx, qword ptr fs:[0x28]
0x44a850:	jne	0x44a860
0x44a852:	add	rsp, 0x18
0x44a856:	ret	
0x44a857:	xor	edi, edi
0x44a859:	call	0x44a650
0x44a85e:	jmp	0x44a842
0x44a860:	call	0x4039f0
0x44a865:	nop	word ptr cs:[rax + rax]
0x44a86f:	nop	
0x44a870:	endbr64	
0x44a874:	push	rbp
0x44a875:	mov	rbp, rdi
0x44a878:	push	rbx
0x44a879:	mov	rbx, rsi
0x44a87c:	lea	rsi, [rip + 0x13c7e]
0x44a883:	sub	rsp, 8
0x44a887:	mov	qword ptr [rdi], 0
0x44a88e:	mov	qword ptr [rdi + 8], 0
0x44a896:	mov	dword ptr [rdi + 0x10], 0xffffffff
0x44a89d:	mov	rdi, rbx
0x44a8a0:	call	0x443640
0x44a8a5:	mov	esi, 0xffff
0x44a8aa:	lea	rdi, [rip + 0x82359]
0x44a8b1:	test	eax, eax
0x44a8b3:	jne	0x44a950
0x44a8b9:	xor	eax, eax
0x44a8bb:	cpuid	
0x44a8bd:	test	eax, eax
0x44a8bf:	jne	0x44a900
0x44a8c1:	mov	eax, esi
0x44a8c3:	and	eax, 4
0x44a8c6:	test	eax, eax
0x44a8c8:	jne	0x44a988
0x44a8ce:	and	esi, 8
0x44a8d1:	je	0x44aa1d
0x44a8d7:	xor	esi, esi
0x44a8d9:	xor	eax, eax
0x44a8db:	call	0x403db0
0x44a8e0:	mov	dword ptr [rbp + 0x10], eax
0x44a8e3:	cmp	eax, -1
0x44a8e6:	je	0x44aa1d
0x44a8ec:	lea	rax, [rbp + 0x10]
0x44a8f0:	mov	qword ptr [rbp], rax
0x44a8f4:	add	rsp, 8
0x44a8f8:	pop	rbx
0x44a8f9:	pop	rbp
0x44a8fa:	ret	
0x44a8fb:	nop	dword ptr [rax + rax]
0x44a900:	cmp	ebx, 0x756e6547
0x44a906:	je	0x44a91a
0x44a908:	cmp	ebx, 0x68747541
0x44a90e:	mov	eax, esi
0x44a910:	sete	dl
0x44a913:	and	eax, 4
0x44a916:	test	dl, dl
0x44a918:	je	0x44a8c6
0x44a91a:	mov	eax, 7
0x44a91f:	xor	ecx, ecx
0x44a921:	cpuid	
0x44a923:	and	ebx, 0x40000
0x44a929:	je	0x44a8c1
0x44a92b:	mov	eax, 1
0x44a930:	cpuid	
0x44a932:	lea	rax, [rip - 0x139]
0x44a939:	and	ecx, 0x40000000
0x44a93f:	lea	rdx, [rip - 0x286]
0x44a946:	cmove	rax, rdx
0x44a94a:	mov	qword ptr [rbp + 8], rax
0x44a94e:	jmp	0x44a8f4
0x44a950:	lea	rsi, [rip + 0x1878e]
0x44a957:	mov	rdi, rbx
0x44a95a:	call	0x443640
0x44a95f:	mov	esi, 2
0x44a964:	xor	edi, edi
0x44a966:	test	eax, eax
0x44a968:	je	0x44a8b9
0x44a96e:	lea	rsi, [rip + 0x822a2]
0x44a975:	mov	rdi, rbx
0x44a978:	call	0x443640
0x44a97d:	test	eax, eax
0x44a97f:	jne	0x44a9d0
0x44a981:	xor	edi, edi
0x44a983:	mov	esi, 4
0x44a988:	xor	eax, eax
0x44a98a:	cpuid	
0x44a98c:	test	eax, eax
0x44a98e:	je	0x44a8ce
0x44a994:	cmp	ebx, 0x756e6547
0x44a99a:	je	0x44a9a8
0x44a99c:	cmp	ebx, 0x68747541
0x44a9a2:	jne	0x44a8ce
0x44a9a8:	mov	eax, 1
0x44a9ad:	cpuid	
0x44a9af:	and	ecx, 0x40000000
0x44a9b5:	je	0x44a8ce
0x44a9bb:	lea	rax, [rip - 0x372]
0x44a9c2:	mov	qword ptr [rbp + 8], rax
0x44a9c6:	jmp	0x44a8f4
0x44a9cb:	nop	dword ptr [rax + rax]
0x44a9d0:	lea	rsi, [rip + 0x18706]
0x44a9d7:	mov	rdi, rbx
0x44a9da:	call	0x443640
0x44a9df:	test	eax, eax
0x44a9e1:	je	0x44a981
0x44a9e3:	lea	rsi, [rip + 0x82220]
0x44a9ea:	mov	rdi, rbx
0x44a9ed:	call	0x443640
0x44a9f2:	test	eax, eax
0x44a9f4:	jne	0x44a9fe
0x44a9f6:	mov	rdi, qword ptr [rbx]
0x44a9f9:	jmp	0x44a8d7
0x44a9fe:	lea	rsi, [rip + 0x82219]
0x44aa05:	mov	rdi, rbx
0x44aa08:	call	0x443640
0x44aa0d:	test	eax, eax
0x44aa0f:	je	0x44a9f6
0x44aa11:	lea	rdi, [rip + 0x82218]
0x44aa18:	call	0x42cac9
0x44aa1d:	lea	rdi, [rip + 0x82254]
0x44aa24:	call	0x42cac9
0x44aa29:	nop	dword ptr [rax]
0x44aa30:	endbr64	
0x44aa34:	push	r13
0x44aa36:	push	r12
0x44aa38:	mov	r12, rdi
0x44aa3b:	push	rbp
0x44aa3c:	mov	rbp, rsi
0x44aa3f:	lea	rsi, [rip + 0x82279]
0x44aa46:	mov	rdi, rbp
0x44aa49:	sub	rsp, 0x30
0x44aa4d:	mov	rax, qword ptr fs:[0x28]
0x44aa56:	mov	qword ptr [rsp + 0x28], rax
0x44aa5b:	xor	eax, eax
0x44aa5d:	call	0x443640
0x44aa62:	test	eax, eax
0x44aa64:	je	0x44aa75
0x44aa66:	mov	rax, qword ptr [rbp]
0x44aa6a:	movzx	eax, byte ptr [rax]
0x44aa6d:	sub	eax, 0x30
0x44aa70:	cmp	eax, 9
0x44aa73:	ja	0x44aad0
0x44aa75:	mov	r13, rsp
0x44aa78:	lea	rdx, [rip + 0x13a89]
0x44aa7f:	lea	rbp, [rsp + 0x10]
0x44aa84:	lea	rsi, [rdx - 7]
0x44aa88:	mov	rdi, r13
0x44aa8b:	mov	qword ptr [rsp], rbp
0x44aa8f:	call	0x44a740
0x44aa94:	mov	rsi, r13
0x44aa97:	mov	rdi, r12
0x44aa9a:	call	0x44a870
0x44aa9f:	mov	rdi, qword ptr [rsp]
0x44aaa3:	cmp	rdi, rbp
0x44aaa6:	je	0x44aaad
0x44aaa8:	call	0x444170
0x44aaad:	mov	rax, qword ptr [rsp + 0x28]
0x44aab2:	sub	rax, qword ptr fs:[0x28]
0x44aabb:	jne	0x44aaf4
0x44aabd:	add	rsp, 0x30
0x44aac1:	pop	rbp
0x44aac2:	pop	r12
0x44aac4:	pop	r13
0x44aac6:	ret	
0x44aac7:	nop	word ptr [rax + rax]
0x44aad0:	mov	rax, qword ptr [rsp + 0x28]
0x44aad5:	sub	rax, qword ptr fs:[0x28]
0x44aade:	jne	0x44aaf4
0x44aae0:	add	rsp, 0x30
0x44aae4:	mov	rsi, rbp
0x44aae7:	mov	rdi, r12
0x44aaea:	pop	rbp
0x44aaeb:	pop	r12
0x44aaed:	pop	r13
0x44aaef:	jmp	0x44a870
0x44aaf4:	call	0x4039f0
0x44aaf9:	endbr64	
0x44aafd:	mov	r12, rax
0x44ab00:	jmp	0x42cf96
0x44ab05:	nop	word ptr cs:[rax + rax]
0x44ab0f:	nop	
0x44ab10:	endbr64	
0x44ab14:	push	r12
0x44ab16:	add	rdx, rsi
0x44ab19:	push	rbp
0x44ab1a:	mov	rbp, rdi
0x44ab1d:	push	rbx
0x44ab1e:	sub	rsp, 0x30
0x44ab22:	mov	rax, qword ptr fs:[0x28]
0x44ab2b:	mov	qword ptr [rsp + 0x28], rax
0x44ab30:	xor	eax, eax
0x44ab32:	mov	r12, rsp
0x44ab35:	lea	rbx, [rsp + 0x10]
0x44ab3a:	mov	rdi, r12
0x44ab3d:	mov	qword ptr [rsp], rbx
0x44ab41:	call	0x44a740
0x44ab46:	mov	rsi, r12
0x44ab49:	mov	rdi, rbp
0x44ab4c:	call	0x44a870
0x44ab51:	mov	rdi, qword ptr [rsp]
0x44ab55:	cmp	rdi, rbx
0x44ab58:	je	0x44ab5f
0x44ab5a:	call	0x444170
0x44ab5f:	mov	rax, qword ptr [rsp + 0x28]
0x44ab64:	sub	rax, qword ptr fs:[0x28]
0x44ab6d:	jne	0x44ab78
0x44ab6f:	add	rsp, 0x30
0x44ab73:	pop	rbx
0x44ab74:	pop	rbp
0x44ab75:	pop	r12
0x44ab77:	ret	
0x44ab78:	call	0x4039f0
0x44ab7d:	endbr64	
0x44ab81:	mov	rbp, rax
0x44ab84:	jmp	0x42cfac
0x44ab89:	nop	dword ptr [rax]
0x44ab90:	endbr64	
0x44ab94:	cmp	qword ptr [rdi], 0
0x44ab98:	je	0x44abc0
0x44ab9a:	push	rbx
0x44ab9b:	mov	rbx, rdi
0x44ab9e:	mov	edi, dword ptr [rdi + 0x10]
0x44aba1:	call	0x403b00
0x44aba6:	mov	dword ptr [rbx + 0x10], 0xffffffff
0x44abad:	mov	qword ptr [rbx], 0
0x44abb4:	pop	rbx
0x44abb5:	ret	
0x44abb6:	nop	word ptr cs:[rax + rax]
0x44abc0:	ret	
0x44abc1:	nop	word ptr cs:[rax + rax]
0x44abcb:	nop	dword ptr [rax + rax]
0x44abd0:	endbr64	
0x44abd4:	push	r12
0x44abd6:	mov	r12, rdi
0x44abd9:	push	rbp
0x44abda:	push	rbx
0x44abdb:	sub	rsp, 0x10
0x44abdf:	mov	rax, qword ptr fs:[0x28]
0x44abe8:	mov	qword ptr [rsp + 8], rax
0x44abed:	mov	rax, qword ptr [rdi + 8]
0x44abf1:	test	rax, rax
0x44abf4:	je	0x44ac18
0x44abf6:	mov	rdx, qword ptr [rsp + 8]
0x44abfb:	sub	rdx, qword ptr fs:[0x28]
0x44ac04:	jne	0x44ac83
0x44ac06:	mov	rdi, qword ptr [rdi]
0x44ac09:	add	rsp, 0x10
0x44ac0d:	pop	rbx
0x44ac0e:	pop	rbp
0x44ac0f:	pop	r12
0x44ac11:	jmp	rax
0x44ac13:	nop	dword ptr [rax + rax]
0x44ac18:	mov	ebx, 4
0x44ac1d:	lea	rbp, [rsp + 4]
0x44ac22:	nop	word ptr [rax + rax]
0x44ac28:	mov	edi, dword ptr [r12 + 0x10]
0x44ac2d:	mov	rdx, rbx
0x44ac30:	mov	rsi, rbp
0x44ac33:	call	0x403b50
0x44ac38:	test	eax, eax
0x44ac3a:	jle	0x44ac68
0x44ac3c:	cdqe	
0x44ac3e:	add	rbp, rax
0x44ac41:	sub	rbx, rax
0x44ac44:	jne	0x44ac28
0x44ac46:	mov	eax, dword ptr [rsp + 4]
0x44ac4a:	mov	rdx, qword ptr [rsp + 8]
0x44ac4f:	sub	rdx, qword ptr fs:[0x28]
0x44ac58:	jne	0x44ac83
0x44ac5a:	add	rsp, 0x10
0x44ac5e:	pop	rbx
0x44ac5f:	pop	rbp
0x44ac60:	pop	r12
0x44ac62:	ret	
0x44ac63:	nop	dword ptr [rax + rax]
0x44ac68:	cmp	eax, -1
0x44ac6b:	jne	0x44ac77
0x44ac6d:	call	0x403890
0x44ac72:	cmp	dword ptr [rax], 4
0x44ac75:	je	0x44ac28
0x44ac77:	lea	rdi, [rip + 0x8204a]
0x44ac7e:	call	0x42cac9
0x44ac83:	call	0x4039f0
0x44ac88:	nop	dword ptr [rax + rax]
0x44ac90:	endbr64	
0x44ac94:	jmp	0x44abd0
0x44ac99:	nop	dword ptr [rax]
0x44aca0:	endbr64	
0x44aca4:	sub	rsp, 0x18
0x44aca8:	mov	rax, qword ptr fs:[0x28]
0x44acb1:	mov	qword ptr [rsp + 8], rax
0x44acb6:	xor	eax, eax
0x44acb8:	cmp	qword ptr [rdi], 0
0x44acbc:	je	0x44ad00
0x44acbe:	mov	edi, dword ptr [rdi + 0x10]
0x44acc1:	test	edi, edi
0x44acc3:	js	0x44ad00
0x44acc5:	xor	eax, eax
0x44acc7:	lea	rdx, [rsp + 4]
0x44accc:	mov	esi, 0x80045200
0x44acd1:	call	0x403ad0
0x44acd6:	test	eax, eax
0x44acd8:	js	0x44ad00
0x44acda:	mov	eax, dword ptr [rsp + 4]
0x44acde:	test	eax, eax
0x44ace0:	js	0x44ad00
0x44ace2:	movsd	xmm0, qword ptr [rip + 0x81ffe]
0x44acea:	cmp	eax, 0x20
0x44aced:	jg	0x44ad04
0x44acef:	pxor	xmm0, xmm0
0x44acf3:	cvtsi2sd	xmm0, eax
0x44acf7:	jmp	0x44ad04
0x44acf9:	nop	dword ptr [rax]
0x44ad00:	pxor	xmm0, xmm0
0x44ad04:	mov	rax, qword ptr [rsp + 8]
0x44ad09:	sub	rax, qword ptr fs:[0x28]
0x44ad12:	jne	0x44ad19
0x44ad14:	add	rsp, 0x18
0x44ad18:	ret	
0x44ad19:	call	0x4039f0
0x44ad1e:	nop	
0x44ad20:	endbr64	
0x44ad24:	lea	rax, [rdi + 0x10]
0x44ad28:	mov	qword ptr [rdi + 8], 0
0x44ad30:	mov	qword ptr [rdi], rax
0x44ad33:	mov	byte ptr [rdi + 0x10], 0
0x44ad37:	ret	
0x44ad38:	nop	dword ptr [rax + rax]
0x44ad40:	endbr64	
0x44ad44:	push	r12
0x44ad46:	push	rbp
0x44ad47:	push	rbx
0x44ad48:	mov	rbx, rdi
0x44ad4b:	add	rdi, 0x10
0x44ad4f:	sub	rsp, 0x10
0x44ad53:	mov	r12, qword ptr [rsi + 8]
0x44ad57:	mov	rax, qword ptr fs:[0x28]
0x44ad60:	mov	qword ptr [rsp + 8], rax
0x44ad65:	xor	eax, eax
0x44ad67:	mov	qword ptr [rbx], rdi
0x44ad6a:	mov	rbp, qword ptr [rsi]
0x44ad6d:	mov	rax, rbp
0x44ad70:	add	rax, r12
0x44ad73:	je	0x44ad7a
0x44ad75:	test	rbp, rbp
0x44ad78:	je	0x44adef
0x44ad7a:	mov	qword ptr [rsp], r12
0x44ad7e:	cmp	r12, 0xf
0x44ad82:	ja	0x44adc0
0x44ad84:	cmp	r12, 1
0x44ad88:	jne	0x44adb8
0x44ad8a:	movzx	eax, byte ptr [rbp]
0x44ad8e:	mov	byte ptr [rbx + 0x10], al
0x44ad91:	mov	qword ptr [rbx + 8], r12
0x44ad95:	mov	byte ptr [rdi + r12], 0
0x44ad9a:	mov	rax, qword ptr [rsp + 8]
0x44ad9f:	sub	rax, qword ptr fs:[0x28]
0x44ada8:	jne	0x44adfb
0x44adaa:	add	rsp, 0x10
0x44adae:	pop	rbx
0x44adaf:	pop	rbp
0x44adb0:	pop	r12
0x44adb2:	ret	
0x44adb3:	nop	dword ptr [rax + rax]
0x44adb8:	test	r12, r12
0x44adbb:	je	0x44ad91
0x44adbd:	jmp	0x44addb
0x44adbf:	nop	
0x44adc0:	mov	rdi, rbx
0x44adc3:	mov	rsi, rsp
0x44adc6:	xor	edx, edx
0x44adc8:	call	0x440cf0
0x44adcd:	mov	qword ptr [rbx], rax
0x44add0:	mov	rdi, rax
0x44add3:	mov	rax, qword ptr [rsp]
0x44add7:	mov	qword ptr [rbx + 0x10], rax
0x44addb:	mov	rdx, r12
0x44adde:	mov	rsi, rbp
0x44ade1:	call	0x403c60
0x44ade6:	mov	r12, qword ptr [rsp]
0x44adea:	mov	rdi, qword ptr [rbx]
0x44aded:	jmp	0x44ad91
0x44adef:	lea	rdi, [rip + 0x8190a]
0x44adf6:	call	0x42c8eb
0x44adfb:	call	0x4039f0
0x44ae00:	endbr64	
0x44ae04:	push	r12
0x44ae06:	mov	r12, rdx
0x44ae09:	push	rbp
0x44ae0a:	mov	rbp, rsi
0x44ae0d:	push	rbx
0x44ae0e:	mov	rbx, rdi
0x44ae11:	add	rdi, 0x10
0x44ae15:	sub	rsp, 0x10
0x44ae19:	mov	rax, qword ptr fs:[0x28]
0x44ae22:	mov	qword ptr [rsp + 8], rax
0x44ae27:	xor	eax, eax
0x44ae29:	mov	rax, rsi
0x44ae2c:	mov	qword ptr [rbx], rdi
0x44ae2f:	add	rax, rdx
0x44ae32:	je	0x44ae39
0x44ae34:	test	rsi, rsi
0x44ae37:	je	0x44aeaf
0x44ae39:	mov	qword ptr [rsp], r12
0x44ae3d:	cmp	r12, 0xf
0x44ae41:	ja	0x44ae80
0x44ae43:	cmp	r12, 1
0x44ae47:	jne	0x44ae78
0x44ae49:	movzx	eax, byte ptr [rbp]
0x44ae4d:	mov	byte ptr [rbx + 0x10], al
0x44ae50:	mov	qword ptr [rbx + 8], r12
0x44ae54:	mov	byte ptr [rdi + r12], 0
0x44ae59:	mov	rax, qword ptr [rsp + 8]
0x44ae5e:	sub	rax, qword ptr fs:[0x28]
0x44ae67:	jne	0x44aebb
0x44ae69:	add	rsp, 0x10
0x44ae6d:	pop	rbx
0x44ae6e:	pop	rbp
0x44ae6f:	pop	r12
0x44ae71:	ret	
0x44ae72:	nop	word ptr [rax + rax]
0x44ae78:	test	r12, r12
0x44ae7b:	je	0x44ae50
0x44ae7d:	jmp	0x44ae9b
0x44ae7f:	nop	
0x44ae80:	mov	rdi, rbx
0x44ae83:	mov	rsi, rsp
0x44ae86:	xor	edx, edx
0x44ae88:	call	0x440cf0
0x44ae8d:	mov	qword ptr [rbx], rax
0x44ae90:	mov	rdi, rax
0x44ae93:	mov	rax, qword ptr [rsp]
0x44ae97:	mov	qword ptr [rbx + 0x10], rax
0x44ae9b:	mov	rdx, r12
0x44ae9e:	mov	rsi, rbp
0x44aea1:	call	0x403c60
0x44aea6:	mov	r12, qword ptr [rsp]
0x44aeaa:	mov	rdi, qword ptr [rbx]
0x44aead:	jmp	0x44ae50
0x44aeaf:	lea	rdi, [rip + 0x8184a]
0x44aeb6:	call	0x42c8eb
0x44aebb:	call	0x4039f0
0x44aec0:	endbr64	
0x44aec4:	push	r12
0x44aec6:	push	rbp
0x44aec7:	push	rbx
0x44aec8:	mov	rbx, rdi
0x44aecb:	add	rdi, 0x10
0x44aecf:	sub	rsp, 0x10
0x44aed3:	mov	r12, qword ptr [rsi + 8]
0x44aed7:	mov	rax, qword ptr fs:[0x28]
0x44aee0:	mov	qword ptr [rsp + 8], rax
0x44aee5:	xor	eax, eax
0x44aee7:	mov	qword ptr [rbx], rdi
0x44aeea:	mov	rbp, qword ptr [rsi]
0x44aeed:	mov	rax, rbp
0x44aef0:	add	rax, r12
0x44aef3:	je	0x44aefa
0x44aef5:	test	rbp, rbp
0x44aef8:	je	0x44af6f
0x44aefa:	mov	qword ptr [rsp], r12
0x44aefe:	cmp	r12, 0xf
0x44af02:	ja	0x44af40
0x44af04:	cmp	r12, 1
0x44af08:	jne	0x44af38
0x44af0a:	movzx	eax, byte ptr [rbp]
0x44af0e:	mov	byte ptr [rbx + 0x10], al
0x44af11:	mov	qword ptr [rbx + 8], r12
0x44af15:	mov	byte ptr [rdi + r12], 0
0x44af1a:	mov	rax, qword ptr [rsp + 8]
0x44af1f:	sub	rax, qword ptr fs:[0x28]
0x44af28:	jne	0x44af7b
0x44af2a:	add	rsp, 0x10
0x44af2e:	pop	rbx
0x44af2f:	pop	rbp
0x44af30:	pop	r12
0x44af32:	ret	
0x44af33:	nop	dword ptr [rax + rax]
0x44af38:	test	r12, r12
0x44af3b:	je	0x44af11
0x44af3d:	jmp	0x44af5b
0x44af3f:	nop	
0x44af40:	mov	rdi, rbx
0x44af43:	mov	rsi, rsp
0x44af46:	xor	edx, edx
0x44af48:	call	0x440cf0
0x44af4d:	mov	qword ptr [rbx], rax
0x44af50:	mov	rdi, rax
0x44af53:	mov	rax, qword ptr [rsp]
0x44af57:	mov	qword ptr [rbx + 0x10], rax
0x44af5b:	mov	rdx, r12
0x44af5e:	mov	rsi, rbp
0x44af61:	call	0x403c60
0x44af66:	mov	r12, qword ptr [rsp]
0x44af6a:	mov	rdi, qword ptr [rbx]
0x44af6d:	jmp	0x44af11
0x44af6f:	lea	rdi, [rip + 0x8178a]
0x44af76:	call	0x42c8eb
0x44af7b:	call	0x4039f0
0x44af80:	endbr64	
0x44af84:	push	r12
0x44af86:	mov	r12, rdi
0x44af89:	call	0x441060
0x44af8e:	mov	rax, r12
0x44af91:	pop	r12
0x44af93:	ret	
0x44af94:	nop	word ptr cs:[rax + rax]
0x44af9e:	nop	
0x44afa0:	endbr64	
0x44afa4:	mov	r8, qword ptr [rdi]
0x44afa7:	add	rdi, 0x10
0x44afab:	cmp	r8, rdi
0x44afae:	je	0x44afc0
0x44afb0:	mov	rdi, r8
0x44afb3:	jmp	0x444170
0x44afb8:	nop	dword ptr [rax + rax]
0x44afc0:	ret	
0x44afc1:	nop	word ptr cs:[rax + rax]
0x44afcb:	nop	dword ptr [rax + rax]
0x44afd0:	endbr64	
0x44afd4:	lea	rax, [rdi + 0x10]
0x44afd8:	mov	qword ptr [rdi], rax
0x44afdb:	mov	rdx, qword ptr [rsi]
0x44afde:	lea	rax, [rsi + 0x10]
0x44afe2:	cmp	rdx, rax
0x44afe5:	je	0x44b010
0x44afe7:	mov	qword ptr [rdi], rdx
0x44afea:	mov	rdx, qword ptr [rsi + 0x10]
0x44afee:	mov	qword ptr [rdi + 0x10], rdx
0x44aff2:	mov	rdx, qword ptr [rsi + 8]
0x44aff6:	mov	qword ptr [rsi], rax
0x44aff9:	mov	qword ptr [rsi + 8], 0
0x44b001:	mov	qword ptr [rdi + 8], rdx
0x44b005:	mov	byte ptr [rsi + 0x10], 0
0x44b009:	ret	
0x44b00a:	nop	word ptr [rax + rax]
0x44b010:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x44b015:	movups	xmmword ptr [rdi + 0x10], xmm0
0x44b019:	jmp	0x44aff2
0x44b01b:	nop	dword ptr [rax + rax]
0x44b020:	endbr64	
0x44b024:	push	r12
0x44b026:	mov	r12, rdi
0x44b029:	push	rbx
0x44b02a:	mov	rbx, rsi
0x44b02d:	lea	rax, [rbx + 0x10]
0x44b031:	sub	rsp, 8
0x44b035:	mov	rsi, qword ptr [rsi]
0x44b038:	mov	rdi, qword ptr [rdi]
0x44b03b:	cmp	rsi, rax
0x44b03e:	je	0x44b0b0
0x44b040:	lea	rcx, [r12 + 0x10]
0x44b045:	mov	rdx, qword ptr [rbx + 8]
0x44b049:	cmp	rdi, rcx
0x44b04c:	je	0x44b090
0x44b04e:	mov	qword ptr [r12], rsi
0x44b052:	mov	rcx, qword ptr [r12 + 0x10]
0x44b057:	mov	qword ptr [r12 + 8], rdx
0x44b05c:	mov	rdx, qword ptr [rbx + 0x10]
0x44b060:	mov	qword ptr [r12 + 0x10], rdx
0x44b065:	test	rdi, rdi
0x44b068:	je	0x44b0a2
0x44b06a:	mov	qword ptr [rbx], rdi
0x44b06d:	mov	qword ptr [rbx + 0x10], rcx
0x44b071:	mov	qword ptr [rbx + 8], 0
0x44b079:	mov	rax, r12
0x44b07c:	mov	byte ptr [rdi], 0
0x44b07f:	add	rsp, 8
0x44b083:	pop	rbx
0x44b084:	pop	r12
0x44b086:	ret	
0x44b087:	nop	word ptr [rax + rax]
0x44b090:	mov	qword ptr [r12], rsi
0x44b094:	mov	qword ptr [r12 + 8], rdx
0x44b099:	mov	rdx, qword ptr [rbx + 0x10]
0x44b09d:	mov	qword ptr [r12 + 0x10], rdx
0x44b0a2:	mov	qword ptr [rbx], rax
0x44b0a5:	mov	rdi, rax
0x44b0a8:	jmp	0x44b071
0x44b0aa:	nop	word ptr [rax + rax]
0x44b0b0:	cmp	rbx, r12
0x44b0b3:	je	0x44b0f0
0x44b0b5:	mov	rdx, qword ptr [rbx + 8]
0x44b0b9:	test	rdx, rdx
0x44b0bc:	je	0x44b0d1
0x44b0be:	cmp	rdx, 1
0x44b0c2:	je	0x44b0e0
0x44b0c4:	call	0x403c60
0x44b0c9:	mov	rdx, qword ptr [rbx + 8]
0x44b0cd:	mov	rdi, qword ptr [r12]
0x44b0d1:	mov	qword ptr [r12 + 8], rdx
0x44b0d6:	mov	byte ptr [rdi + rdx], 0
0x44b0da:	mov	rdi, qword ptr [rbx]
0x44b0dd:	jmp	0x44b071
0x44b0df:	nop	
0x44b0e0:	movzx	eax, byte ptr [rbx + 0x10]
0x44b0e4:	mov	byte ptr [rdi], al
0x44b0e6:	mov	rdx, qword ptr [rbx + 8]
0x44b0ea:	mov	rdi, qword ptr [r12]
0x44b0ee:	jmp	0x44b0d1
0x44b0f0:	mov	rdi, rsi
0x44b0f3:	jmp	0x44b071
0x44b0f8:	nop	dword ptr [rax + rax]
0x44b100:	mov	r8, rcx
0x44b103:	cmp	esi, 0x31
0x44b106:	ja	0x44b168
0x44b108:	cmp	esi, 0x28
0x44b10b:	ja	0x44b190
0x44b111:	mov	ecx, esi
0x44b113:	mov	eax, 1
0x44b118:	shl	rax, cl
0x44b11b:	movabs	rcx, 0x17c00fff600
0x44b125:	test	rax, rcx
0x44b128:	je	0x44b1b0
0x44b12e:	test	rdx, rdx
0x44b131:	je	0x44b18d
0x44b133:	nop	dword ptr [rax + rax]
0x44b138:	mov	ecx, dword ptr [rdi + 0x28]
0x44b13b:	cmp	ecx, dword ptr [rdi + 0x2c]
0x44b13e:	jge	0x44b18d
0x44b140:	movsxd	rax, ecx
0x44b143:	add	ecx, 1
0x44b146:	shl	rax, 5
0x44b14a:	add	rax, qword ptr [rdi + 0x20]
0x44b14e:	mov	qword ptr [rax + 4], 0
0x44b156:	mov	dword ptr [rdi + 0x28], ecx
0x44b159:	mov	dword ptr [rax], esi
0x44b15b:	mov	qword ptr [rax + 0x10], rdx
0x44b15f:	mov	qword ptr [rax + 0x18], r8
0x44b163:	ret	
0x44b164:	nop	dword ptr [rax]
0x44b168:	lea	ecx, [rsi - 0x34]
0x44b16b:	cmp	ecx, 0x1d
0x44b16e:	ja	0x44b18d
0x44b170:	mov	eax, 1
0x44b175:	shl	rax, cl
0x44b178:	test	eax, 0x1c71107
0x44b17d:	jne	0x44b12e
0x44b17f:	test	eax, 0xa002ef8
0x44b184:	jne	0x44b1cf
0x44b186:	test	eax, 0x34000000
0x44b18b:	jne	0x44b138
0x44b18d:	xor	eax, eax
0x44b18f:	ret	
0x44b190:	lea	eax, [rsi - 0x29]
0x44b193:	cmp	eax, 8
0x44b196:	ja	0x44b18d
0x44b198:	lea	rcx, [rip + 0x81b51]
0x44b19f:	movsxd	rax, dword ptr [rcx + rax*4]
0x44b1a3:	add	rax, rcx
0x44b1a6:	notrack jmp	rax
0x44b1a9:	nop	dword ptr [rax]
0x44b1b0:	movabs	rcx, 0x1fe000000
0x44b1ba:	test	rax, rcx
0x44b1bd:	jne	0x44b138
0x44b1c3:	add	rcx, 0x200081e
0x44b1ca:	test	rax, rcx
0x44b1cd:	je	0x44b18d
0x44b1cf:	test	rdx, rdx
0x44b1d2:	je	0x44b18d
0x44b1d4:	test	r8, r8
0x44b1d7:	jne	0x44b138
0x44b1dd:	jmp	0x44b18d
0x44b1df:	nop	
0x44b1e0:	mov	ecx, dword ptr [rdi + 0x28]
0x44b1e3:	cmp	ecx, dword ptr [rdi + 0x2c]
0x44b1e6:	jge	0x44b220
0x44b1e8:	movsxd	rax, ecx
0x44b1eb:	add	ecx, 1
0x44b1ee:	shl	rax, 5
0x44b1f2:	add	rax, qword ptr [rdi + 0x20]
0x44b1f6:	mov	qword ptr [rax + 4], 0
0x44b1fe:	mov	dword ptr [rdi + 0x28], ecx
0x44b201:	test	rsi, rsi
0x44b204:	je	0x44b220
0x44b206:	test	edx, edx
0x44b208:	jle	0x44b220
0x44b20a:	mov	qword ptr [rax], 0
0x44b211:	mov	dword ptr [rax + 8], 0
0x44b218:	mov	qword ptr [rax + 0x10], rsi
0x44b21c:	mov	dword ptr [rax + 0x18], edx
0x44b21f:	ret	
0x44b220:	xor	eax, eax
0x44b222:	ret	
0x44b223:	nop	word ptr cs:[rax + rax]
0x44b22e:	nop	
0x44b230:	mov	rcx, qword ptr [rdi + 0x18]
0x44b234:	mov	rsi, rdi
0x44b237:	movzx	eax, byte ptr [rcx]
0x44b23a:	cmp	al, 0x6e
0x44b23c:	je	0x44b2c0
0x44b242:	lea	edx, [rax - 0x30]
0x44b245:	cmp	dl, 9
0x44b248:	ja	0x44b2e2
0x44b24e:	xor	r10d, r10d
0x44b251:	sub	eax, 0x30
0x44b254:	add	rcx, 1
0x44b258:	xor	r8d, r8d
0x44b25b:	mov	r9d, 0x7fffffff
0x44b261:	movsx	eax, al
0x44b264:	mov	edi, 0xcccccccd
0x44b269:	jmp	0x44b289
0x44b26b:	nop	dword ptr [rax + rax]
0x44b270:	movsx	eax, al
0x44b273:	mov	edx, r9d
0x44b276:	add	rcx, 1
0x44b27a:	sub	edx, eax
0x44b27c:	imul	rdx, rdi
0x44b280:	shr	rdx, 0x23
0x44b284:	cmp	edx, r8d
0x44b287:	jl	0x44b2b0
0x44b289:	lea	edx, [r8 + r8*4]
0x44b28d:	mov	qword ptr [rsi + 0x18], rcx
0x44b291:	lea	r8d, [rax + rdx*2]
0x44b295:	movzx	eax, byte ptr [rcx]
0x44b298:	sub	eax, 0x30
0x44b29b:	cmp	al, 9
0x44b29d:	jbe	0x44b270
0x44b29f:	mov	eax, r8d
0x44b2a2:	neg	eax
0x44b2a4:	test	r10d, r10d
0x44b2a7:	cmovne	r8d, eax
0x44b2ab:	mov	eax, r8d
0x44b2ae:	ret	
0x44b2af:	nop	
0x44b2b0:	mov	r8d, 0xffffffff
0x44b2b6:	mov	eax, r8d
0x44b2b9:	ret	
0x44b2ba:	nop	word ptr [rax + rax]
0x44b2c0:	lea	rdx, [rcx + 1]
0x44b2c4:	mov	qword ptr [rdi + 0x18], rdx
0x44b2c8:	movzx	eax, byte ptr [rcx + 1]
0x44b2cc:	lea	ecx, [rax - 0x30]
0x44b2cf:	cmp	cl, 9
0x44b2d2:	ja	0x44b2e2
0x44b2d4:	mov	rcx, rdx
0x44b2d7:	mov	r10d, 1
0x44b2dd:	jmp	0x44b251
0x44b2e2:	xor	r8d, r8d
0x44b2e5:	jmp	0x44b2ab
0x44b2e7:	nop	word ptr [rax + rax]
0x44b2f0:	mov	r11, rdi
0x44b2f3:	test	esi, esi
0x44b2f5:	jne	0x44b30b
0x44b2f7:	mov	rax, qword ptr [rdi + 0x18]
0x44b2fb:	cmp	byte ptr [rax], 0
0x44b2fe:	je	0x44b326
0x44b300:	lea	rdx, [rax + 1]
0x44b304:	mov	qword ptr [rdi + 0x18], rdx
0x44b308:	movsx	esi, byte ptr [rax]
0x44b30b:	cmp	esi, 0x68
0x44b30e:	je	0x44b338
0x44b310:	cmp	esi, 0x76
0x44b313:	jne	0x44b326
0x44b315:	mov	rdi, r11
0x44b318:	call	0x44b230
0x44b31d:	mov	rax, qword ptr [r11 + 0x18]
0x44b321:	cmp	byte ptr [rax], 0x5f
0x44b324:	je	0x44b330
0x44b326:	xor	eax, eax
0x44b328:	ret	
0x44b329:	nop	dword ptr [rax]
0x44b330:	add	rax, 1
0x44b334:	mov	qword ptr [r11 + 0x18], rax
0x44b338:	mov	rdi, r11
0x44b33b:	call	0x44b230
0x44b340:	mov	rax, qword ptr [r11 + 0x18]
0x44b344:	cmp	byte ptr [rax], 0x5f
0x44b347:	jne	0x44b326
0x44b349:	add	rax, 1
0x44b34d:	mov	qword ptr [r11 + 0x18], rax
0x44b351:	mov	eax, 1
0x44b356:	ret	
0x44b357:	nop	word ptr [rax + rax]
0x44b360:	mov	rax, qword ptr [rdi + 0x18]
0x44b364:	movzx	edx, byte ptr [rax]
0x44b367:	cmp	dl, 0x52
0x44b36a:	je	0x44b378
0x44b36c:	cmp	dl, 0x4f
0x44b36f:	je	0x44b378
0x44b371:	mov	rax, rsi
0x44b374:	ret	
0x44b375:	nop	dword ptr [rax]
0x44b378:	mov	r9d, dword ptr [rdi + 0x48]
0x44b37c:	mov	r8d, 0x20
0x44b382:	lea	ecx, [r9 + 3]
0x44b386:	cmp	dl, 0x52
0x44b389:	je	0x44b3a8
0x44b38b:	add	rax, 1
0x44b38f:	mov	dword ptr [rdi + 0x48], ecx
0x44b392:	mov	rdx, rsi
0x44b395:	xor	ecx, ecx
0x44b397:	mov	qword ptr [rdi + 0x18], rax
0x44b39b:	mov	esi, r8d
0x44b39e:	jmp	0x44b100
0x44b3a3:	nop	dword ptr [rax + rax]
0x44b3a8:	lea	ecx, [r9 + 2]
0x44b3ac:	mov	r8d, 0x1f
0x44b3b2:	jmp	0x44b38b
0x44b3b4:	nop	word ptr cs:[rax + rax]
0x44b3bf:	nop	
0x44b3c0:	mov	rax, qword ptr [rdi + 0x18]
0x44b3c4:	cmp	byte ptr [rax], 0x5f
0x44b3c7:	je	0x44b3d0
0x44b3c9:	mov	eax, 1
0x44b3ce:	ret	
0x44b3cf:	nop	
0x44b3d0:	lea	rdx, [rax + 1]
0x44b3d4:	sub	rsp, 8
0x44b3d8:	mov	qword ptr [rdi + 0x18], rdx
0x44b3dc:	cmp	byte ptr [rax + 1], 0x5f
0x44b3e0:	je	0x44b400
0x44b3e2:	call	0x44b230
0x44b3e7:	mov	r8d, eax
0x44b3ea:	xor	eax, eax
0x44b3ec:	test	r8d, r8d
0x44b3ef:	js	0x44b3f6
0x44b3f1:	mov	eax, 1
0x44b3f6:	add	rsp, 8
0x44b3fa:	ret	
0x44b3fb:	nop	dword ptr [rax + rax]
0x44b400:	add	rax, 2
0x44b404:	mov	qword ptr [rsp], rdi
0x44b408:	mov	qword ptr [rdi + 0x18], rax
0x44b40c:	call	0x44b230
0x44b411:	test	eax, eax
0x44b413:	js	0x44b433
0x44b415:	cmp	eax, 9
0x44b418:	jle	0x44b3f1
0x44b41a:	mov	rdi, qword ptr [rsp]
0x44b41e:	xor	eax, eax
0x44b420:	mov	rdx, qword ptr [rdi + 0x18]
0x44b424:	cmp	byte ptr [rdx], 0x5f
0x44b427:	jne	0x44b3f6
0x44b429:	add	rdx, 1
0x44b42d:	mov	qword ptr [rdi + 0x18], rdx
0x44b431:	jmp	0x44b3f1
0x44b433:	xor	eax, eax
0x44b435:	jmp	0x44b3f6
0x44b437:	nop	word ptr [rax + rax]
0x44b440:	test	rsi, rsi
0x44b443:	je	0x44b502
0x44b449:	push	rbp
0x44b44a:	lea	rcx, [rip + 0x818c3]
0x44b451:	mov	rbp, rdi
0x44b454:	push	rbx
0x44b455:	mov	rbx, rsi
0x44b458:	sub	rsp, 8
0x44b45c:	mov	eax, dword ptr [rbx + 8]
0x44b45f:	cmp	eax, 1
0x44b462:	jg	0x44b499
0x44b464:	mov	edx, dword ptr [rbp + 0x134]
0x44b46a:	cmp	edx, 0x400
0x44b470:	jg	0x44b499
0x44b472:	add	eax, 1
0x44b475:	cmp	dword ptr [rbx], 0x51
0x44b478:	mov	dword ptr [rbx + 8], eax
0x44b47b:	ja	0x44b499
0x44b47d:	mov	eax, dword ptr [rbx]
0x44b47f:	movsxd	rax, dword ptr [rcx + rax*4]
0x44b483:	add	rax, rcx
0x44b486:	notrack jmp	rax
0x44b489:	nop	dword ptr [rax]
0x44b490:	mov	rbx, qword ptr [rbx + 0x10]
0x44b494:	test	rbx, rbx
0x44b497:	jne	0x44b45c
0x44b499:	add	rsp, 8
0x44b49d:	pop	rbx
0x44b49e:	pop	rbp
0x44b49f:	ret	
0x44b4a0:	mov	rbx, qword ptr [rbx + 0x18]
0x44b4a4:	jmp	0x44b494
0x44b4a6:	nop	word ptr cs:[rax + rax]
0x44b4b0:	add	dword ptr [rbp + 0x16c], 1
0x44b4b7:	nop	word ptr [rax + rax]
0x44b4c0:	mov	rsi, qword ptr [rbx + 0x10]
0x44b4c4:	add	edx, 1
0x44b4c7:	mov	rdi, rbp
0x44b4ca:	mov	dword ptr [rbp + 0x134], edx
0x44b4d0:	call	0x44b440
0x44b4d5:	mov	rsi, qword ptr [rbx + 0x18]
0x44b4d9:	mov	rdi, rbp
0x44b4dc:	call	0x44b440
0x44b4e1:	sub	dword ptr [rbp + 0x134], 1
0x44b4e8:	add	rsp, 8
0x44b4ec:	pop	rbx
0x44b4ed:	pop	rbp
0x44b4ee:	ret	
0x44b4ef:	nop	
0x44b4f0:	mov	rsi, qword ptr [rbx + 0x10]
0x44b4f4:	cmp	dword ptr [rsi], 5
0x44b4f7:	jne	0x44b4c4
0x44b4f9:	add	dword ptr [rbp + 0x15c], 1
0x44b500:	jmp	0x44b4c4
0x44b502:	ret	
0x44b503:	nop	word ptr cs:[rax + rax]
0x44b50e:	nop	
0x44b510:	xor	eax, eax
0x44b512:	test	rdi, rdi
0x44b515:	jne	0x44b533
0x44b517:	jmp	0x44b539
0x44b519:	nop	dword ptr [rax]
0x44b520:	cmp	qword ptr [rdi + 0x10], 0
0x44b525:	je	0x44b538
0x44b527:	mov	rdi, qword ptr [rdi + 0x18]
0x44b52b:	add	eax, 1
0x44b52e:	test	rdi, rdi
0x44b531:	je	0x44b538
0x44b533:	cmp	dword ptr [rdi], 0x2f
0x44b536:	je	0x44b520
0x44b538:	ret	
0x44b539:	ret	
0x44b53a:	nop	word ptr [rax + rax]
0x44b540:	jmp	0x44b558
0x44b542:	nop	word ptr [rax + rax]
0x44b548:	cmp	dword ptr [rdi], 0x2f
0x44b54b:	jne	0x44b55d
0x44b54d:	test	esi, esi
0x44b54f:	je	0x44b560
0x44b551:	mov	rdi, qword ptr [rdi + 0x18]
0x44b555:	sub	esi, 1
0x44b558:	test	rdi, rdi
0x44b55b:	jne	0x44b548
0x44b55d:	xor	eax, eax
0x44b55f:	ret	
0x44b560:	mov	rax, qword ptr [rdi + 0x10]
0x44b564:	ret	
0x44b565:	nop	word ptr cs:[rax + rax]
0x44b570:	endbr64	
0x44b574:	push	r13
0x44b576:	mov	r13, rdi
0x44b579:	push	r12
0x44b57b:	mov	r12, rsi
0x44b57e:	push	rbp
0x44b57f:	push	rbx
0x44b580:	mov	rbx, rdx
0x44b583:	sub	rsp, 8
0x44b587:	mov	rax, qword ptr [rdx + 8]
0x44b58b:	mov	rbp, qword ptr [rdx + 0x10]
0x44b58f:	mov	edx, dword ptr [rdx + 0x18]
0x44b592:	lea	rax, [rsi + rax + 1]
0x44b597:	cmp	rax, rbp
0x44b59a:	ja	0x44b5d8
0x44b59c:	mov	eax, dword ptr [rbx + 0x18]
0x44b59f:	test	eax, eax
0x44b5a1:	jne	0x44b5c6
0x44b5a3:	mov	rdi, qword ptr [rbx + 8]
0x44b5a7:	mov	rdx, r12
0x44b5aa:	add	rdi, qword ptr [rbx]
0x44b5ad:	mov	rsi, r13
0x44b5b0:	call	0x403c60
0x44b5b5:	mov	rax, qword ptr [rbx]
0x44b5b8:	add	rax, r12
0x44b5bb:	add	rax, qword ptr [rbx + 8]
0x44b5bf:	mov	byte ptr [rax], 0
0x44b5c2:	add	qword ptr [rbx + 8], r12
0x44b5c6:	add	rsp, 8
0x44b5ca:	pop	rbx
0x44b5cb:	pop	rbp
0x44b5cc:	pop	r12
0x44b5ce:	pop	r13
0x44b5d0:	ret	
0x44b5d1:	nop	dword ptr [rax]
0x44b5d8:	test	edx, edx
0x44b5da:	jne	0x44b5c6
0x44b5dc:	test	rbp, rbp
0x44b5df:	je	0x44b610
0x44b5e1:	nop	dword ptr [rax]
0x44b5e8:	add	rbp, rbp
0x44b5eb:	cmp	rax, rbp
0x44b5ee:	ja	0x44b5e8
0x44b5f0:	mov	rdi, qword ptr [rbx]
0x44b5f3:	mov	rsi, rbp
0x44b5f6:	call	0x403d20
0x44b5fb:	test	rax, rax
0x44b5fe:	je	0x44b61d
0x44b600:	mov	qword ptr [rbx], rax
0x44b603:	mov	qword ptr [rbx + 0x10], rbp
0x44b607:	jmp	0x44b59c
0x44b609:	nop	dword ptr [rax]
0x44b610:	mov	ebp, 2
0x44b615:	cmp	rax, 2
0x44b619:	ja	0x44b5e8
0x44b61b:	jmp	0x44b5f0
0x44b61d:	mov	rdi, qword ptr [rbx]
0x44b620:	call	0x403830
0x44b625:	mov	qword ptr [rbx], 0
0x44b62c:	mov	qword ptr [rbx + 8], 0
0x44b634:	mov	qword ptr [rbx + 0x10], 0
0x44b63c:	mov	dword ptr [rbx + 0x18], 1
0x44b643:	jmp	0x44b5c6
0x44b645:	nop	word ptr cs:[rax + rax]
0x44b650:	movzx	eax, byte ptr [rdi]
0x44b653:	lea	ecx, [rax - 0x4b]
0x44b656:	cmp	cl, 0x27
0x44b659:	jbe	0x44b668
0x44b65b:	cmp	al, 0x44
0x44b65d:	je	0x44b680
0x44b65f:	xor	eax, eax
0x44b661:	ret	
0x44b662:	nop	word ptr [rax + rax]
0x44b668:	movabs	rax, 0xffffff7ffffff7fe
0x44b672:	sar	rax, cl
0x44b675:	and	eax, 1
0x44b678:	xor	eax, 1
0x44b67b:	movzx	eax, al
0x44b67e:	ret	
0x44b67f:	nop	
0x44b680:	movzx	edx, byte ptr [rdi + 1]
0x44b684:	lea	eax, [rdx - 0x77]
0x44b687:	cmp	al, 1
0x44b689:	setbe	al
0x44b68c:	and	edx, 0xffffffdf
0x44b68f:	cmp	dl, 0x4f
0x44b692:	sete	dl
0x44b695:	or	eax, edx
0x44b697:	movzx	eax, al
0x44b69a:	ret	
0x44b69b:	nop	dword ptr [rax + rax]
0x44b6a0:	push	rbp
0x44b6a1:	mov	ebp, esi
0x44b6a3:	push	rbx
0x44b6a4:	mov	rbx, rdi
0x44b6a7:	sub	rsp, 8
0x44b6ab:	mov	rax, qword ptr [rdi + 0x100]
0x44b6b2:	cmp	rax, 0xff
0x44b6b8:	je	0x44b6e0
0x44b6ba:	lea	rdx, [rax + 1]
0x44b6be:	mov	qword ptr [rbx + 0x100], rdx
0x44b6c5:	mov	byte ptr [rbx + rax], bpl
0x44b6c9:	mov	byte ptr [rbx + 0x108], bpl
0x44b6d0:	add	rsp, 8
0x44b6d4:	pop	rbx
0x44b6d5:	pop	rbp
0x44b6d6:	ret	
0x44b6d7:	nop	word ptr [rax + rax]
0x44b6e0:	mov	rdx, qword ptr [rdi + 0x118]
0x44b6e7:	mov	byte ptr [rdi + 0xff], 0
0x44b6ee:	mov	esi, 0xff
0x44b6f3:	call	qword ptr [rdi + 0x110]
0x44b6f9:	add	qword ptr [rbx + 0x140], 1
0x44b701:	mov	edx, 1
0x44b706:	xor	eax, eax
0x44b708:	jmp	0x44b6be
0x44b70a:	nop	word ptr [rax + rax]
0x44b710:	mov	rax, qword ptr [rdi + 0x120]
0x44b717:	test	rax, rax
0x44b71a:	je	0x44b760
0x44b71c:	mov	rcx, qword ptr [rsi + 0x10]
0x44b720:	mov	rax, qword ptr [rax + 8]
0x44b724:	mov	edx, ecx
0x44b726:	mov	rax, qword ptr [rax + 0x18]
0x44b72a:	test	ecx, ecx
0x44b72c:	js	0x44b754
0x44b72e:	test	rax, rax
0x44b731:	jne	0x44b748
0x44b733:	jmp	0x44b754
0x44b735:	nop	dword ptr [rax]
0x44b738:	test	edx, edx
0x44b73a:	je	0x44b750
0x44b73c:	mov	rax, qword ptr [rax + 0x18]
0x44b740:	sub	edx, 1
0x44b743:	test	rax, rax
0x44b746:	je	0x44b758
0x44b748:	cmp	dword ptr [rax], 0x2f
0x44b74b:	je	0x44b738
0x44b74d:	xor	eax, eax
0x44b74f:	ret	
0x44b750:	mov	rax, qword ptr [rax + 0x10]
0x44b754:	ret	
0x44b755:	nop	dword ptr [rax]
0x44b758:	ret	
0x44b759:	nop	dword ptr [rax]
0x44b760:	mov	dword ptr [rdi + 0x130], 1
0x44b76a:	ret	
0x44b76b:	nop	dword ptr [rax + rax]
0x44b770:	push	r13
0x44b772:	push	r12
0x44b774:	push	rbp
0x44b775:	mov	rbp, rdi
0x44b778:	mov	rdi, rsi
0x44b77b:	push	rbx
0x44b77c:	mov	rbx, rsi
0x44b77f:	sub	rsp, 8
0x44b783:	call	0x4039e0
0x44b788:	test	rax, rax
0x44b78b:	je	0x44b800
0x44b78d:	mov	rdx, qword ptr [rbp + 0x100]
0x44b794:	lea	r13, [rbx + rax]
0x44b798:	jmp	0x44b7c3
0x44b79a:	nop	word ptr [rax + rax]
0x44b7a0:	mov	rcx, rdx
0x44b7a3:	add	rdx, 1
0x44b7a7:	add	rbx, 1
0x44b7ab:	mov	qword ptr [rbp + 0x100], rdx
0x44b7b2:	mov	byte ptr [rbp + rcx], r12b
0x44b7b7:	mov	byte ptr [rbp + 0x108], r12b
0x44b7be:	cmp	rbx, r13
0x44b7c1:	je	0x44b800
0x44b7c3:	movzx	r12d, byte ptr [rbx]
0x44b7c7:	cmp	rdx, 0xff
0x44b7ce:	jne	0x44b7a0
0x44b7d0:	mov	rdx, qword ptr [rbp + 0x118]
0x44b7d7:	mov	byte ptr [rbp + 0xff], 0
0x44b7de:	mov	esi, 0xff
0x44b7e3:	mov	rdi, rbp
0x44b7e6:	call	qword ptr [rbp + 0x110]
0x44b7ec:	add	qword ptr [rbp + 0x140], 1
0x44b7f4:	mov	edx, 1
0x44b7f9:	xor	ecx, ecx
0x44b7fb:	jmp	0x44b7a7
0x44b7fd:	nop	dword ptr [rax]
0x44b800:	add	rsp, 8
0x44b804:	pop	rbx
0x44b805:	pop	rbp
0x44b806:	pop	r12
0x44b808:	pop	r13
0x44b80a:	ret	
0x44b80b:	nop	dword ptr [rax + rax]
0x44b810:	test	rsi, rsi
0x44b813:	je	0x44b910
0x44b819:	push	r14
0x44b81b:	mov	r14, rdi
0x44b81e:	push	r13
0x44b820:	mov	r13d, 1
0x44b826:	push	r12
0x44b828:	movabs	r12, 0x338c0004108001
0x44b832:	push	rbp
0x44b833:	lea	rbp, [rip + 0x81622]
0x44b83a:	push	rbx
0x44b83b:	mov	rbx, rsi
0x44b83e:	mov	ecx, dword ptr [rbx]
0x44b840:	cmp	ecx, 8
0x44b843:	ja	0x44b870
0x44b845:	movsxd	rax, dword ptr [rbp + rcx*4]
0x44b84a:	add	rax, rbp
0x44b84d:	notrack jmp	rax
0x44b850:	mov	rax, qword ptr [rax + 0x10]
0x44b854:	test	rax, rax
0x44b857:	je	0x44b860
0x44b859:	cmp	dword ptr [rax], 0x2f
0x44b85c:	je	0x44b862
0x44b85e:	nop	
0x44b860:	xor	eax, eax
0x44b862:	pop	rbx
0x44b863:	pop	rbp
0x44b864:	pop	r12
0x44b866:	pop	r13
0x44b868:	pop	r14
0x44b86a:	ret	
0x44b86b:	nop	dword ptr [rax + rax]
0x44b870:	sub	ecx, 0x18
0x44b873:	cmp	ecx, 0x35
0x44b876:	ja	0x44b888
0x44b878:	mov	rax, r13
0x44b87b:	shl	rax, cl
0x44b87e:	test	rax, r12
0x44b881:	jne	0x44b860
0x44b883:	cmp	ecx, 0x1b
0x44b886:	je	0x44b899
0x44b888:	mov	rsi, qword ptr [rbx + 0x10]
0x44b88c:	mov	rdi, r14
0x44b88f:	call	0x44b810
0x44b894:	test	rax, rax
0x44b897:	jne	0x44b862
0x44b899:	mov	rbx, qword ptr [rbx + 0x18]
0x44b89d:	test	rbx, rbx
0x44b8a0:	jne	0x44b83e
0x44b8a2:	jmp	0x44b860
0x44b8a4:	nop	dword ptr [rax]
0x44b8a8:	mov	rax, qword ptr [r14 + 0x120]
0x44b8af:	test	rax, rax
0x44b8b2:	je	0x44b8f8
0x44b8b4:	mov	rcx, qword ptr [rbx + 0x10]
0x44b8b8:	mov	rax, qword ptr [rax + 8]
0x44b8bc:	mov	edx, ecx
0x44b8be:	mov	rax, qword ptr [rax + 0x18]
0x44b8c2:	test	ecx, ecx
0x44b8c4:	js	0x44b854
0x44b8c6:	test	rax, rax
0x44b8c9:	jne	0x44b8e8
0x44b8cb:	jmp	0x44b860
0x44b8cd:	nop	dword ptr [rax]
0x44b8d0:	test	edx, edx
0x44b8d2:	je	0x44b850
0x44b8d8:	mov	rax, qword ptr [rax + 0x18]
0x44b8dc:	sub	edx, 1
0x44b8df:	test	rax, rax
0x44b8e2:	je	0x44b860
0x44b8e8:	cmp	dword ptr [rax], 0x2f
0x44b8eb:	je	0x44b8d0
0x44b8ed:	jmp	0x44b860
0x44b8f2:	nop	word ptr [rax + rax]
0x44b8f8:	mov	dword ptr [r14 + 0x130], 1
0x44b903:	jmp	0x44b862
0x44b908:	nop	dword ptr [rax + rax]
0x44b910:	xor	eax, eax
0x44b912:	ret	
0x44b913:	nop	word ptr cs:[rax + rax]
0x44b91e:	nop	
0x44b920:	mov	rax, qword ptr [rdi + 0x18]
0x44b924:	mov	r11, rdi
0x44b927:	cmp	byte ptr [rax], 0x54
0x44b92a:	jne	0x44b990
0x44b92c:	lea	rdx, [rax + 1]
0x44b930:	mov	qword ptr [rdi + 0x18], rdx
0x44b934:	movzx	edx, byte ptr [rax + 1]
0x44b938:	cmp	dl, 0x5f
0x44b93b:	je	0x44b998
0x44b93d:	cmp	dl, 0x6e
0x44b940:	je	0x44b990
0x44b942:	call	0x44b230
0x44b947:	add	eax, 1
0x44b94a:	movsxd	rcx, eax
0x44b94d:	js	0x44b990
0x44b94f:	mov	rdx, qword ptr [r11 + 0x18]
0x44b953:	cmp	byte ptr [rdx], 0x5f
0x44b956:	jne	0x44b990
0x44b958:	add	rdx, 1
0x44b95c:	mov	qword ptr [r11 + 0x18], rdx
0x44b960:	mov	edx, dword ptr [r11 + 0x28]
0x44b964:	cmp	edx, dword ptr [r11 + 0x2c]
0x44b968:	jge	0x44b990
0x44b96a:	movsxd	rax, edx
0x44b96d:	add	edx, 1
0x44b970:	shl	rax, 5
0x44b974:	add	rax, qword ptr [r11 + 0x20]
0x44b978:	mov	qword ptr [rax + 4], 0
0x44b980:	mov	dword ptr [r11 + 0x28], edx
0x44b984:	mov	dword ptr [rax], 5
0x44b98a:	mov	qword ptr [rax + 0x10], rcx
0x44b98e:	ret	
0x44b98f:	nop	
0x44b990:	xor	eax, eax
0x44b992:	ret	
0x44b993:	nop	dword ptr [rax + rax]
0x44b998:	lea	rdx, [rax + 2]
0x44b99c:	xor	ecx, ecx
0x44b99e:	jmp	0x44b95c
0x44b9a0:	push	r13
0x44b9a2:	mov	r8d, esi
0x44b9a5:	mov	edx, 0x19
0x44b9aa:	lea	rcx, [rip + 0x7d710]
0x44b9b1:	push	r12
0x44b9b3:	mov	esi, 1
0x44b9b8:	push	rbp
0x44b9b9:	mov	rbp, rdi
0x44b9bc:	push	rbx
0x44b9bd:	sub	rsp, 0x38
0x44b9c1:	mov	rax, qword ptr fs:[0x28]
0x44b9ca:	mov	qword ptr [rsp + 0x28], rax
0x44b9cf:	xor	eax, eax
0x44b9d1:	mov	rbx, rsp
0x44b9d4:	mov	rdi, rbx
0x44b9d7:	call	0x403f60
0x44b9dc:	mov	rdi, rbx
0x44b9df:	call	0x4039e0
0x44b9e4:	test	rax, rax
0x44b9e7:	je	0x44ba60
0x44b9e9:	mov	rdx, qword ptr [rbp + 0x100]
0x44b9f0:	lea	r13, [rbx + rax]
0x44b9f4:	jmp	0x44ba23
0x44b9f6:	nop	word ptr cs:[rax + rax]
0x44ba00:	mov	rcx, rdx
0x44ba03:	add	rdx, 1
0x44ba07:	add	rbx, 1
0x44ba0b:	mov	qword ptr [rbp + 0x100], rdx
0x44ba12:	mov	byte ptr [rbp + rcx], r12b
0x44ba17:	mov	byte ptr [rbp + 0x108], r12b
0x44ba1e:	cmp	rbx, r13
0x44ba21:	je	0x44ba60
0x44ba23:	movzx	r12d, byte ptr [rbx]
0x44ba27:	cmp	rdx, 0xff
0x44ba2e:	jne	0x44ba00
0x44ba30:	mov	rdx, qword ptr [rbp + 0x118]
0x44ba37:	mov	byte ptr [rbp + 0xff], 0
0x44ba3e:	mov	esi, 0xff
0x44ba43:	mov	rdi, rbp
0x44ba46:	call	qword ptr [rbp + 0x110]
0x44ba4c:	add	qword ptr [rbp + 0x140], 1
0x44ba54:	mov	edx, 1
0x44ba59:	xor	ecx, ecx
0x44ba5b:	jmp	0x44ba07
0x44ba5d:	nop	dword ptr [rax]
0x44ba60:	mov	rax, qword ptr [rsp + 0x28]
0x44ba65:	sub	rax, qword ptr fs:[0x28]
0x44ba6e:	jne	0x44ba7b
0x44ba70:	add	rsp, 0x38
0x44ba74:	pop	rbx
0x44ba75:	pop	rbp
0x44ba76:	pop	r12
0x44ba78:	pop	r13
0x44ba7a:	ret	
0x44ba7b:	call	0x4039f0
0x44ba80:	mov	r11, rdi
0x44ba83:	call	0x44b230
0x44ba88:	mov	edx, eax
0x44ba8a:	xor	eax, eax
0x44ba8c:	test	edx, edx
0x44ba8e:	jle	0x44bafc
0x44ba90:	mov	rsi, qword ptr [r11 + 0x18]
0x44ba94:	mov	rcx, qword ptr [r11 + 8]
0x44ba98:	movsxd	rax, edx
0x44ba9b:	sub	rcx, rsi
0x44ba9e:	cmp	rcx, rax
0x44baa1:	jl	0x44bb10
0x44baa3:	add	rax, rsi
0x44baa6:	mov	qword ptr [r11 + 0x18], rax
0x44baaa:	test	byte ptr [r11 + 0x10], 4
0x44baaf:	je	0x44bab6
0x44bab1:	cmp	byte ptr [rax], 0x24
0x44bab4:	je	0x44bb00
0x44bab6:	cmp	edx, 9
0x44bab9:	jle	0x44baf0
0x44babb:	movabs	rax, 0x5f4c41424f4c475f
0x44bac5:	cmp	qword ptr [rsi], rax
0x44bac8:	jne	0x44baf0
0x44baca:	movzx	eax, byte ptr [rsi + 8]
0x44bace:	sub	eax, 0x24
0x44bad1:	cmp	al, 0x3b
0x44bad3:	ja	0x44baf0
0x44bad5:	movabs	rcx, 0xf7fffffffffffbfe
0x44badf:	bt	rcx, rax
0x44bae3:	jb	0x44baf0
0x44bae5:	cmp	byte ptr [rsi + 9], 0x4e
0x44bae9:	je	0x44bb18
0x44baeb:	nop	dword ptr [rax + rax]
0x44baf0:	mov	rdi, r11
0x44baf3:	call	0x44b1e0
0x44baf8:	mov	qword ptr [r11 + 0x40], rax
0x44bafc:	ret	
0x44bafd:	nop	dword ptr [rax]
0x44bb00:	add	rax, 1
0x44bb04:	mov	qword ptr [r11 + 0x18], rax
0x44bb08:	cmp	edx, 9
0x44bb0b:	jg	0x44babb
0x44bb0d:	jmp	0x44baf0
0x44bb0f:	nop	
0x44bb10:	xor	eax, eax
0x44bb12:	jmp	0x44baf8
0x44bb14:	nop	dword ptr [rax]
0x44bb18:	mov	eax, dword ptr [r11 + 0x48]
0x44bb1c:	add	eax, 0x16
0x44bb1f:	sub	eax, edx
0x44bb21:	mov	edx, dword ptr [r11 + 0x28]
0x44bb25:	mov	dword ptr [r11 + 0x48], eax
0x44bb29:	cmp	edx, dword ptr [r11 + 0x2c]
0x44bb2d:	jge	0x44bb10
0x44bb2f:	movsxd	rax, edx
0x44bb32:	lea	rcx, [rip + 0x81957]
0x44bb39:	add	edx, 1
0x44bb3c:	shl	rax, 5
0x44bb40:	add	rax, qword ptr [r11 + 0x20]
0x44bb44:	mov	dword ptr [r11 + 0x28], edx
0x44bb48:	mov	qword ptr [rax], 0
0x44bb4f:	mov	dword ptr [rax + 8], 0
0x44bb56:	mov	qword ptr [rax + 0x10], rcx
0x44bb5a:	mov	dword ptr [rax + 0x18], 0x15
0x44bb61:	jmp	0x44baf8
0x44bb63:	nop	word ptr cs:[rax + rax]
0x44bb6e:	nop	
0x44bb70:	push	r12
0x44bb72:	push	rbp
0x44bb73:	push	rbx
0x44bb74:	mov	rdx, qword ptr [rdi + 0x18]
0x44bb78:	cmp	byte ptr [rdx], 0x53
0x44bb7b:	jne	0x44bbe8
0x44bb7d:	lea	rax, [rdx + 1]
0x44bb81:	mov	rbx, rdi
0x44bb84:	mov	qword ptr [rdi + 0x18], rax
0x44bb88:	movzx	eax, byte ptr [rdx + 1]
0x44bb8c:	test	al, al
0x44bb8e:	jne	0x44bbf8
0x44bb90:	xor	edi, edi
0x44bb92:	test	byte ptr [rbx + 0x10], 8
0x44bb96:	setne	dil
0x44bb9a:	jne	0x44bbb6
0x44bb9c:	and	esi, 1
0x44bb9f:	je	0x44bbb6
0x44bba1:	mov	rdx, qword ptr [rbx + 0x18]
0x44bba5:	movzx	edx, byte ptr [rdx]
0x44bba8:	sub	edx, 0x43
0x44bbab:	cmp	dl, 1
0x44bbae:	mov	edx, 1
0x44bbb3:	cmovbe	edi, edx
0x44bbb6:	lea	rdx, [rip + 0x94f63]
0x44bbbd:	mov	ecx, 0x74
0x44bbc2:	lea	rsi, [rdx + 0x188]
0x44bbc9:	jmp	0x44bbd3
0x44bbcb:	nop	dword ptr [rax + rax]
0x44bbd0:	movzx	ecx, byte ptr [rdx]
0x44bbd3:	cmp	al, cl
0x44bbd5:	je	0x44bc90
0x44bbdb:	add	rdx, 0x38
0x44bbdf:	cmp	rdx, rsi
0x44bbe2:	jne	0x44bbd0
0x44bbe4:	nop	dword ptr [rax]
0x44bbe8:	xor	r12d, r12d
0x44bbeb:	mov	rax, r12
0x44bbee:	pop	rbx
0x44bbef:	pop	rbp
0x44bbf0:	pop	r12
0x44bbf2:	ret	
0x44bbf3:	nop	dword ptr [rax + rax]
0x44bbf8:	lea	rax, [rdx + 2]
0x44bbfc:	mov	qword ptr [rdi + 0x18], rax
0x44bc00:	movsx	eax, byte ptr [rdx + 1]
0x44bc04:	lea	edx, [rax - 0x30]
0x44bc07:	cmp	dl, 9
0x44bc0a:	ja	0x44bc60
0x44bc0c:	cmp	al, 0x5f
0x44bc0e:	je	0x44bc68
0x44bc10:	lea	ecx, [rax - 0x30]
0x44bc13:	xor	edx, edx
0x44bc15:	cmp	cl, 9
0x44bc18:	ja	0x44bc4f
0x44bc1a:	nop	word ptr [rax + rax]
0x44bc20:	lea	ecx, [rdx + rdx*8]
0x44bc23:	lea	ecx, [rax + rcx*4 - 0x30]
0x44bc27:	cmp	edx, ecx
0x44bc29:	ja	0x44bbe8
0x44bc2b:	mov	rdx, qword ptr [rbx + 0x18]
0x44bc2f:	movsx	eax, byte ptr [rdx]
0x44bc32:	test	al, al
0x44bc34:	je	0x44bc45
0x44bc36:	lea	rax, [rdx + 1]
0x44bc3a:	mov	qword ptr [rbx + 0x18], rax
0x44bc3e:	movsx	eax, byte ptr [rdx]
0x44bc41:	cmp	al, 0x5f
0x44bc43:	je	0x44bc88
0x44bc45:	mov	edx, ecx
0x44bc47:	lea	ecx, [rax - 0x30]
0x44bc4a:	cmp	cl, 9
0x44bc4d:	jbe	0x44bc20
0x44bc4f:	lea	ecx, [rax - 0x41]
0x44bc52:	cmp	cl, 0x19
0x44bc55:	ja	0x44bbe8
0x44bc57:	lea	ecx, [rdx + rdx*8]
0x44bc5a:	lea	ecx, [rax + rcx*4 - 0x37]
0x44bc5e:	jmp	0x44bc27
0x44bc60:	cmp	al, 0x5f
0x44bc62:	jne	0x44bda9
0x44bc68:	xor	ecx, ecx
0x44bc6a:	cmp	dword ptr [rbx + 0x38], ecx
0x44bc6d:	jbe	0x44bbe8
0x44bc73:	mov	rax, qword ptr [rbx + 0x30]
0x44bc77:	pop	rbx
0x44bc78:	pop	rbp
0x44bc79:	mov	r12, qword ptr [rax + rcx*8]
0x44bc7d:	mov	rax, r12
0x44bc80:	pop	r12
0x44bc82:	ret	
0x44bc83:	nop	dword ptr [rax + rax]
0x44bc88:	add	ecx, 1
0x44bc8b:	jmp	0x44bc6a
0x44bc8d:	nop	dword ptr [rax]
0x44bc90:	mov	r8, qword ptr [rdx + 0x28]
0x44bc94:	mov	eax, dword ptr [rbx + 0x28]
0x44bc97:	mov	esi, dword ptr [rbx + 0x2c]
0x44bc9a:	test	r8, r8
0x44bc9d:	je	0x44bcd6
0x44bc9f:	mov	r9d, dword ptr [rdx + 0x30]
0x44bca3:	cmp	eax, esi
0x44bca5:	jge	0x44bda2
0x44bcab:	movsxd	rcx, eax
0x44bcae:	add	eax, 1
0x44bcb1:	shl	rcx, 5
0x44bcb5:	add	rcx, qword ptr [rbx + 0x20]
0x44bcb9:	mov	qword ptr [rcx + 4], 0
0x44bcc1:	mov	dword ptr [rbx + 0x28], eax
0x44bcc4:	mov	dword ptr [rcx], 0x18
0x44bcca:	mov	qword ptr [rcx + 0x10], r8
0x44bcce:	mov	dword ptr [rcx + 0x18], r9d
0x44bcd2:	mov	qword ptr [rbx + 0x40], rcx
0x44bcd6:	test	edi, edi
0x44bcd8:	je	0x44bd8e
0x44bcde:	mov	rcx, qword ptr [rdx + 0x18]
0x44bce2:	mov	edx, dword ptr [rdx + 0x20]
0x44bce5:	add	dword ptr [rbx + 0x48], edx
0x44bce8:	cmp	eax, esi
0x44bcea:	jge	0x44bd9a
0x44bcf0:	movsxd	r12, eax
0x44bcf3:	add	eax, 1
0x44bcf6:	shl	r12, 5
0x44bcfa:	add	r12, qword ptr [rbx + 0x20]
0x44bcfe:	mov	qword ptr [r12 + 4], 0
0x44bd07:	mov	dword ptr [rbx + 0x28], eax
0x44bd0a:	mov	dword ptr [r12], 0x18
0x44bd12:	mov	qword ptr [r12 + 0x10], rcx
0x44bd17:	mov	dword ptr [r12 + 0x18], edx
0x44bd1c:	mov	rax, qword ptr [rbx + 0x18]
0x44bd20:	cmp	byte ptr [rax], 0x42
0x44bd23:	jne	0x44bbeb
0x44bd29:	mov	rbp, qword ptr [rbx + 0x40]
0x44bd2d:	nop	dword ptr [rax]
0x44bd30:	add	rax, 1
0x44bd34:	mov	rdi, rbx
0x44bd37:	mov	qword ptr [rbx + 0x18], rax
0x44bd3b:	call	0x44ba80
0x44bd40:	mov	rdx, r12
0x44bd43:	mov	esi, 0x4d
0x44bd48:	mov	rdi, rbx
0x44bd4b:	mov	rcx, rax
0x44bd4e:	call	0x44b100
0x44bd53:	mov	r12, rax
0x44bd56:	mov	rax, qword ptr [rbx + 0x18]
0x44bd5a:	cmp	byte ptr [rax], 0x42
0x44bd5d:	je	0x44bd30
0x44bd5f:	mov	qword ptr [rbx + 0x40], rbp
0x44bd63:	test	r12, r12
0x44bd66:	je	0x44bbe8
0x44bd6c:	mov	eax, dword ptr [rbx + 0x38]
0x44bd6f:	cmp	eax, dword ptr [rbx + 0x3c]
0x44bd72:	jge	0x44bbe8
0x44bd78:	mov	rdx, qword ptr [rbx + 0x30]
0x44bd7c:	movsxd	rcx, eax
0x44bd7f:	add	eax, 1
0x44bd82:	mov	qword ptr [rdx + rcx*8], r12
0x44bd86:	mov	dword ptr [rbx + 0x38], eax
0x44bd89:	jmp	0x44bbeb
0x44bd8e:	mov	rcx, qword ptr [rdx + 8]
0x44bd92:	mov	edx, dword ptr [rdx + 0x10]
0x44bd95:	jmp	0x44bce5
0x44bd9a:	xor	r12d, r12d
0x44bd9d:	jmp	0x44bd1c
0x44bda2:	xor	ecx, ecx
0x44bda4:	jmp	0x44bcd2
0x44bda9:	lea	edx, [rax - 0x41]
0x44bdac:	cmp	dl, 0x19
0x44bdaf:	jbe	0x44bc10
0x44bdb5:	jmp	0x44bb90
0x44bdba:	nop	word ptr [rax + rax]
0x44bdc0:	push	r15
0x44bdc2:	push	r14
0x44bdc4:	push	r13
0x44bdc6:	push	r12
0x44bdc8:	push	rbp
0x44bdc9:	push	rbx
0x44bdca:	mov	rbx, rdi
0x44bdcd:	sub	rsp, 0x18
0x44bdd1:	mov	rsi, qword ptr [rdi + 0x18]
0x44bdd5:	mov	rax, qword ptr fs:[0x28]
0x44bdde:	mov	qword ptr [rsp + 8], rax
0x44bde3:	xor	eax, eax
0x44bde5:	mov	rdi, rsi
0x44bde8:	call	0x44b650
0x44bded:	test	eax, eax
0x44bdef:	jne	0x44bef0
0x44bdf5:	movzx	eax, byte ptr [rsi]
0x44bdf8:	cmp	al, 0x55
0x44bdfa:	jg	0x44be28
0x44bdfc:	cmp	al, 0x2f
0x44bdfe:	jle	0x44bec0
0x44be04:	sub	eax, 0x30
0x44be07:	cmp	al, 0x25
0x44be09:	ja	0x44bec0
0x44be0f:	lea	rdx, [rip + 0x8106a]
0x44be16:	movzx	eax, al
0x44be19:	movsxd	rax, dword ptr [rdx + rax*4]
0x44be1d:	add	rax, rdx
0x44be20:	notrack jmp	rax
0x44be23:	nop	dword ptr [rax + rax]
0x44be28:	lea	ecx, [rax - 0x5a]
0x44be2b:	cmp	cl, 0x20
0x44be2e:	ja	0x44bec0
0x44be34:	movabs	rdi, 0x1f63dff80
0x44be3e:	mov	edx, 1
0x44be43:	shl	rdx, cl
0x44be46:	test	rdx, rdi
0x44be49:	je	0x44bea8
0x44be4b:	sub	eax, 0x61
0x44be4e:	lea	rdx, [rip + 0x9554b]
0x44be55:	movsx	rax, al
0x44be59:	shl	rax, 5
0x44be5d:	add	rax, rdx
0x44be60:	mov	edx, dword ptr [rbx + 0x28]
0x44be63:	cmp	edx, dword ptr [rbx + 0x2c]
0x44be66:	jge	0x42d001
0x44be6c:	movsxd	r12, edx
0x44be6f:	add	rsi, 1
0x44be73:	add	edx, 1
0x44be76:	shl	r12, 5
0x44be7a:	add	r12, qword ptr [rbx + 0x20]
0x44be7e:	mov	qword ptr [r12 + 4], 0
0x44be87:	mov	dword ptr [rbx + 0x28], edx
0x44be8a:	mov	qword ptr [r12 + 0x10], rax
0x44be8f:	mov	eax, dword ptr [rax + 8]
0x44be92:	mov	dword ptr [r12], 0x27
0x44be9a:	add	dword ptr [rbx + 0x48], eax
0x44be9d:	mov	qword ptr [rbx + 0x18], rsi
0x44bea1:	jmp	0x44bec3
0x44bea3:	nop	dword ptr [rax + rax]
0x44bea8:	and	edx, 1
0x44beab:	jne	0x44bf80
0x44beb1:	cmp	cl, 0x1b
0x44beb4:	je	0x44c780
0x44beba:	nop	word ptr [rax + rax]
0x44bec0:	xor	r12d, r12d
0x44bec3:	mov	rax, qword ptr [rsp + 8]
0x44bec8:	sub	rax, qword ptr fs:[0x28]
0x44bed1:	jne	0x44c8cc
0x44bed7:	add	rsp, 0x18
0x44bedb:	mov	rax, r12
0x44bede:	pop	rbx
0x44bedf:	pop	rbp
0x44bee0:	pop	r12
0x44bee2:	pop	r13
0x44bee4:	pop	r14
0x44bee6:	pop	r15
0x44bee8:	ret	
0x44bee9:	nop	dword ptr [rax]
0x44bef0:	mov	rsi, rsp
0x44bef3:	xor	edx, edx
0x44bef5:	mov	rdi, rbx
0x44bef8:	call	0x44dfc0
0x44befd:	mov	r12, rax
0x44bf00:	test	rax, rax
0x44bf03:	je	0x44bec0
0x44bf05:	mov	rax, qword ptr [rbx + 0x18]
0x44bf09:	mov	rdi, rbx
0x44bf0c:	cmp	byte ptr [rax], 0x46
0x44bf0f:	je	0x44bf70
0x44bf11:	call	0x44bdc0
0x44bf16:	mov	qword ptr [r12], rax
0x44bf1a:	test	rax, rax
0x44bf1d:	je	0x44bec0
0x44bf1f:	mov	ecx, dword ptr [rax]
0x44bf21:	lea	edx, [rcx - 0x1f]
0x44bf24:	cmp	edx, 1
0x44bf27:	ja	0x44bf41
0x44bf29:	mov	rcx, qword ptr [rsp]
0x44bf2d:	mov	rdx, qword ptr [rax + 0x10]
0x44bf31:	mov	qword ptr [rax + 0x10], rcx
0x44bf35:	mov	rax, qword ptr [r12]
0x44bf39:	mov	qword ptr [rsp], rax
0x44bf3d:	mov	qword ptr [r12], rdx
0x44bf41:	mov	r12, qword ptr [rsp]
0x44bf45:	test	r12, r12
0x44bf48:	je	0x44bec0
0x44bf4e:	mov	eax, dword ptr [rbx + 0x38]
0x44bf51:	cmp	eax, dword ptr [rbx + 0x3c]
0x44bf54:	jge	0x44bec0
0x44bf5a:	mov	rdx, qword ptr [rbx + 0x30]
0x44bf5e:	movsxd	rcx, eax
0x44bf61:	add	eax, 1
0x44bf64:	mov	qword ptr [rdx + rcx*8], r12
0x44bf68:	mov	dword ptr [rbx + 0x38], eax
0x44bf6b:	jmp	0x44bec3
0x44bf70:	call	0x44ca60
0x44bf75:	jmp	0x44bf16
0x44bf77:	nop	word ptr [rax + rax]
0x44bf80:	mov	rdi, rbx
0x44bf83:	call	0x44e7a0
0x44bf88:	mov	qword ptr [rsp], rax
0x44bf8c:	mov	r12, rax
0x44bf8f:	nop	
0x44bf90:	test	r12, r12
0x44bf93:	je	0x44bec0
0x44bf99:	mov	eax, dword ptr [rbx + 0x38]
0x44bf9c:	cmp	eax, dword ptr [rbx + 0x3c]
0x44bf9f:	jge	0x44bec0
0x44bfa5:	mov	rdx, qword ptr [rbx + 0x30]
0x44bfa9:	movsxd	rcx, eax
0x44bfac:	add	eax, 1
0x44bfaf:	mov	qword ptr [rdx + rcx*8], r12
0x44bfb3:	mov	r12, qword ptr [rsp]
0x44bfb7:	mov	dword ptr [rbx + 0x38], eax
0x44bfba:	jmp	0x44bec3
0x44bfbf:	nop	
0x44bfc0:	add	rsi, 1
0x44bfc4:	mov	rdi, rbx
0x44bfc7:	mov	qword ptr [rbx + 0x18], rsi
0x44bfcb:	call	0x44bdc0
0x44bfd0:	xor	ecx, ecx
0x44bfd2:	mov	esi, 0x22
0x44bfd7:	mov	rdi, rbx
0x44bfda:	mov	rdx, rax
0x44bfdd:	call	0x44b100
0x44bfe2:	mov	qword ptr [rsp], rax
0x44bfe6:	mov	r12, rax
0x44bfe9:	jmp	0x44bf90
0x44bfeb:	nop	dword ptr [rax + rax]
0x44bff0:	add	rsi, 1
0x44bff4:	mov	rdi, rbx
0x44bff7:	mov	qword ptr [rbx + 0x18], rsi
0x44bffb:	call	0x44bdc0
0x44c000:	xor	ecx, ecx
0x44c002:	mov	esi, 0x24
0x44c007:	mov	rdi, rbx
0x44c00a:	mov	rdx, rax
0x44c00d:	call	0x44b100
0x44c012:	mov	qword ptr [rsp], rax
0x44c016:	mov	r12, rax
0x44c019:	jmp	0x44bf90
0x44c01e:	nop	
0x44c020:	mov	rdi, rbx
0x44c023:	call	0x44b920
0x44c028:	mov	rbp, qword ptr [rbx + 0x18]
0x44c02c:	mov	qword ptr [rsp], rax
0x44c030:	mov	r12, rax
0x44c033:	cmp	byte ptr [rbp], 0x49
0x44c037:	jne	0x44bf90
0x44c03d:	mov	eax, dword ptr [rbx + 0x50]
0x44c040:	test	eax, eax
0x44c042:	jne	0x44c839
0x44c048:	test	r12, r12
0x44c04b:	je	0x44bec0
0x44c051:	mov	eax, dword ptr [rbx + 0x38]
0x44c054:	cmp	eax, dword ptr [rbx + 0x3c]
0x44c057:	jge	0x44bec0
0x44c05d:	mov	rdx, qword ptr [rbx + 0x30]
0x44c061:	movsxd	rcx, eax
0x44c064:	add	eax, 1
0x44c067:	mov	qword ptr [rdx + rcx*8], r12
0x44c06b:	xor	ecx, ecx
0x44c06d:	mov	dword ptr [rbx + 0x38], eax
0x44c070:	movzx	eax, byte ptr [rbp]
0x44c074:	lea	edx, [rax - 0x49]
0x44c077:	cmp	dl, 1
0x44c07a:	ja	0x44c08f
0x44c07c:	add	rbp, 1
0x44c080:	mov	rdi, rbx
0x44c083:	mov	qword ptr [rbx + 0x18], rbp
0x44c087:	call	0x44d420
0x44c08c:	mov	rcx, rax
0x44c08f:	mov	rdx, r12
0x44c092:	mov	esi, 4
0x44c097:	mov	rdi, rbx
0x44c09a:	call	0x44b100
0x44c09f:	mov	qword ptr [rsp], rax
0x44c0a3:	mov	r12, rax
0x44c0a6:	jmp	0x44bf90
0x44c0ab:	nop	dword ptr [rax + rax]
0x44c0b0:	movzx	eax, byte ptr [rsi + 1]
0x44c0b4:	sub	eax, 0x30
0x44c0b7:	cmp	al, 0x2f
0x44c0b9:	ja	0x44c7b0
0x44c0bf:	movabs	rdx, 0xffff78000001fc00
0x44c0c9:	bt	rdx, rax
0x44c0cd:	jb	0x44c7b0
0x44c0d3:	xor	esi, esi
0x44c0d5:	mov	rdi, rbx
0x44c0d8:	call	0x44bb70
0x44c0dd:	mov	qword ptr [rsp], rax
0x44c0e1:	mov	r12, rax
0x44c0e4:	mov	rax, qword ptr [rbx + 0x18]
0x44c0e8:	cmp	byte ptr [rax], 0x49
0x44c0eb:	jne	0x44bec3
0x44c0f1:	add	rax, 1
0x44c0f5:	mov	rdi, rbx
0x44c0f8:	mov	qword ptr [rbx + 0x18], rax
0x44c0fc:	call	0x44d420
0x44c101:	jmp	0x44c08c
0x44c103:	nop	dword ptr [rax + rax]
0x44c108:	add	rsi, 1
0x44c10c:	mov	rdi, rbx
0x44c10f:	mov	qword ptr [rbx + 0x18], rsi
0x44c113:	call	0x44ba80
0x44c118:	mov	qword ptr [rsp], rax
0x44c11c:	mov	r12, rax
0x44c11f:	mov	rax, qword ptr [rbx + 0x18]
0x44c123:	cmp	byte ptr [rax], 0x49
0x44c126:	je	0x44c7e8
0x44c12c:	mov	rdi, rbx
0x44c12f:	call	0x44bdc0
0x44c134:	mov	rcx, r12
0x44c137:	mov	esi, 0x21
0x44c13c:	mov	rdi, rbx
0x44c13f:	mov	rdx, rax
0x44c142:	call	0x44b100
0x44c147:	mov	qword ptr [rsp], rax
0x44c14b:	mov	r12, rax
0x44c14e:	jmp	0x44bf90
0x44c153:	nop	dword ptr [rax + rax]
0x44c158:	lea	rax, [rsi + 1]
0x44c15c:	mov	qword ptr [rbx + 0x18], rax
0x44c160:	cmp	byte ptr [rsi + 1], 0
0x44c164:	je	0x44bec0
0x44c16a:	lea	rax, [rsi + 2]
0x44c16e:	mov	qword ptr [rbx + 0x18], rax
0x44c172:	movzx	eax, byte ptr [rsi + 1]
0x44c176:	sub	eax, 0x46
0x44c179:	cmp	al, 0x30
0x44c17b:	ja	0x44bec0
0x44c181:	lea	rdx, [rip + 0x80d90]
0x44c188:	movzx	eax, al
0x44c18b:	movsxd	rax, dword ptr [rdx + rax*4]
0x44c18f:	add	rax, rdx
0x44c192:	notrack jmp	rax
0x44c195:	nop	dword ptr [rax]
0x44c198:	add	rsi, 1
0x44c19c:	mov	rdi, rbx
0x44c19f:	mov	qword ptr [rbx + 0x18], rsi
0x44c1a3:	call	0x44bdc0
0x44c1a8:	xor	ecx, ecx
0x44c1aa:	mov	esi, 0x26
0x44c1af:	mov	rdi, rbx
0x44c1b2:	mov	rdx, rax
0x44c1b5:	call	0x44b100
0x44c1ba:	mov	qword ptr [rsp], rax
0x44c1be:	mov	r12, rax
0x44c1c1:	jmp	0x44bf90
0x44c1c6:	nop	word ptr cs:[rax + rax]
0x44c1d0:	mov	rdi, rbx
0x44c1d3:	call	0x44ca60
0x44c1d8:	mov	qword ptr [rsp], rax
0x44c1dc:	mov	r12, rax
0x44c1df:	jmp	0x44bf90
0x44c1e4:	nop	dword ptr [rax]
0x44c1e8:	add	rsi, 1
0x44c1ec:	mov	rdi, rbx
0x44c1ef:	mov	qword ptr [rbx + 0x18], rsi
0x44c1f3:	call	0x44bdc0
0x44c1f8:	xor	ecx, ecx
0x44c1fa:	mov	esi, 0x23
0x44c1ff:	mov	rdi, rbx
0x44c202:	mov	rdx, rax
0x44c205:	call	0x44b100
0x44c20a:	mov	qword ptr [rsp], rax
0x44c20e:	mov	r12, rax
0x44c211:	jmp	0x44bf90
0x44c216:	nop	word ptr cs:[rax + rax]
0x44c220:	add	rsi, 1
0x44c224:	mov	rdi, rbx
0x44c227:	mov	qword ptr [rbx + 0x18], rsi
0x44c22b:	call	0x44bdc0
0x44c230:	xor	ecx, ecx
0x44c232:	mov	esi, 0x25
0x44c237:	mov	rdi, rbx
0x44c23a:	mov	rdx, rax
0x44c23d:	call	0x44b100
0x44c242:	mov	qword ptr [rsp], rax
0x44c246:	mov	r12, rax
0x44c249:	jmp	0x44bf90
0x44c24e:	nop	
0x44c250:	lea	r8, [rsi + 1]
0x44c254:	mov	qword ptr [rbx + 0x18], r8
0x44c258:	movzx	eax, byte ptr [rsi + 1]
0x44c25c:	cmp	al, 0x5f
0x44c25e:	je	0x44c7e0
0x44c264:	sub	eax, 0x30
0x44c267:	cmp	al, 9
0x44c269:	ja	0x44c813
0x44c26f:	mov	rax, r8
0x44c272:	nop	word ptr [rax + rax]
0x44c278:	mov	rdx, rax
0x44c27b:	add	rax, 1
0x44c27f:	mov	qword ptr [rbx + 0x18], rax
0x44c283:	movzx	ecx, byte ptr [rax]
0x44c286:	sub	ecx, 0x30
0x44c289:	cmp	cl, 9
0x44c28c:	jbe	0x44c278
0x44c28e:	sub	edx, esi
0x44c290:	mov	rdi, rbx
0x44c293:	mov	rsi, r8
0x44c296:	call	0x44b1e0
0x44c29b:	mov	r12, rax
0x44c29e:	test	rax, rax
0x44c2a1:	je	0x44bec0
0x44c2a7:	mov	r8, qword ptr [rbx + 0x18]
0x44c2ab:	movzx	eax, byte ptr [r8]
0x44c2af:	cmp	al, 0x5f
0x44c2b1:	jne	0x44bec0
0x44c2b7:	add	r8, 1
0x44c2bb:	mov	rdi, rbx
0x44c2be:	mov	qword ptr [rbx + 0x18], r8
0x44c2c2:	call	0x44bdc0
0x44c2c7:	mov	rdx, r12
0x44c2ca:	mov	esi, 0x2a
0x44c2cf:	mov	rdi, rbx
0x44c2d2:	mov	rcx, rax
0x44c2d5:	call	0x44b100
0x44c2da:	mov	qword ptr [rsp], rax
0x44c2de:	mov	r12, rax
0x44c2e1:	jmp	0x44bf90
0x44c2e6:	nop	word ptr cs:[rax + rax]
0x44c2f0:	add	rsi, 1
0x44c2f4:	mov	rdi, rbx
0x44c2f7:	mov	qword ptr [rbx + 0x18], rsi
0x44c2fb:	call	0x44bdc0
0x44c300:	mov	r12, rax
0x44c303:	test	rax, rax
0x44c306:	je	0x44bec0
0x44c30c:	mov	rdi, rbx
0x44c30f:	call	0x44bdc0
0x44c314:	mov	rcx, rax
0x44c317:	test	rax, rax
0x44c31a:	je	0x44bec0
0x44c320:	mov	rdx, r12
0x44c323:	mov	esi, 0x2b
0x44c328:	mov	rdi, rbx
0x44c32b:	call	0x44b100
0x44c330:	mov	qword ptr [rsp], rax
0x44c334:	mov	r12, rax
0x44c337:	jmp	0x44bf90
0x44c33c:	mov	ebp, dword ptr [rbx + 0x4c]
0x44c33f:	mov	dword ptr [rbx + 0x4c], 1
0x44c346:	mov	rdi, rbx
0x44c349:	call	0x44d6b0
0x44c34e:	mov	dword ptr [rbx + 0x4c], ebp
0x44c351:	xor	ecx, ecx
0x44c353:	mov	esi, 0x44
0x44c358:	mov	rdx, rax
0x44c35b:	mov	rdi, rbx
0x44c35e:	call	0x44b100
0x44c363:	mov	qword ptr [rsp], rax
0x44c367:	mov	r12, rax
0x44c36a:	test	rax, rax
0x44c36d:	je	0x44bec0
0x44c373:	mov	rax, qword ptr [rbx + 0x18]
0x44c377:	cmp	byte ptr [rax], 0
0x44c37a:	je	0x44bec0
0x44c380:	lea	rdx, [rax + 1]
0x44c384:	mov	qword ptr [rbx + 0x18], rdx
0x44c388:	cmp	byte ptr [rax], 0x45
0x44c38b:	jne	0x44bec0
0x44c391:	jmp	0x44bf99
0x44c396:	mov	eax, dword ptr [rbx + 0x28]
0x44c399:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c39c:	jge	0x42cfc2
0x44c3a2:	movsxd	r12, eax
0x44c3a5:	add	eax, 1
0x44c3a8:	shl	r12, 5
0x44c3ac:	add	r12, qword ptr [rbx + 0x20]
0x44c3b0:	mov	qword ptr [r12 + 4], 0
0x44c3b9:	mov	dword ptr [rbx + 0x28], eax
0x44c3bc:	mov	dword ptr [r12], 0x2c
0x44c3c4:	movzx	eax, byte ptr [rsi + 2]
0x44c3c8:	mov	qword ptr [rsp], r12
0x44c3cc:	sub	eax, 0x30
0x44c3cf:	cmp	al, 9
0x44c3d1:	setbe	al
0x44c3d4:	movzx	eax, al
0x44c3d7:	mov	word ptr [r12 + 0x18], ax
0x44c3dd:	ja	0x44c3e7
0x44c3df:	mov	rdi, rbx
0x44c3e2:	call	0x44b230
0x44c3e7:	mov	rdi, rbx
0x44c3ea:	call	0x44bdc0
0x44c3ef:	mov	qword ptr [r12 + 0x10], rax
0x44c3f4:	test	rax, rax
0x44c3f7:	je	0x44bec0
0x44c3fd:	mov	rdi, rbx
0x44c400:	call	0x44b230
0x44c405:	mov	rdx, qword ptr [rbx + 0x18]
0x44c409:	movzx	eax, byte ptr [rdx]
0x44c40c:	test	al, al
0x44c40e:	je	0x44c41b
0x44c410:	lea	rax, [rdx + 1]
0x44c414:	mov	qword ptr [rbx + 0x18], rax
0x44c418:	movzx	eax, byte ptr [rdx]
0x44c41b:	cmp	al, 0x73
0x44c41d:	sete	al
0x44c420:	movzx	eax, al
0x44c423:	mov	word ptr [r12 + 0x1a], ax
0x44c429:	jmp	0x44bec3
0x44c42e:	mov	eax, dword ptr [rbx + 0x28]
0x44c431:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c434:	jge	0x44bec0
0x44c43a:	movsxd	r12, eax
0x44c43d:	add	eax, 1
0x44c440:	mov	dword ptr [rbx + 0x28], eax
0x44c443:	shl	r12, 5
0x44c447:	lea	rax, [rip + 0x81058]
0x44c44e:	add	r12, qword ptr [rbx + 0x20]
0x44c452:	mov	qword ptr [r12], 0
0x44c45a:	mov	dword ptr [r12 + 8], 0
0x44c463:	mov	qword ptr [r12 + 0x10], rax
0x44c468:	mov	dword ptr [r12 + 0x18], 0xe
0x44c471:	jmp	0x44bec3
0x44c476:	mov	eax, dword ptr [rbx + 0x28]
0x44c479:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c47c:	jge	0x44bec0
0x44c482:	movsxd	r12, eax
0x44c485:	add	eax, 1
0x44c488:	mov	dword ptr [rbx + 0x28], eax
0x44c48b:	shl	r12, 5
0x44c48f:	lea	rax, [rip + 0x71f71]
0x44c496:	add	r12, qword ptr [rbx + 0x20]
0x44c49a:	mov	qword ptr [r12], 0
0x44c4a2:	mov	dword ptr [r12 + 8], 0
0x44c4ab:	mov	qword ptr [r12 + 0x10], rax
0x44c4b0:	mov	dword ptr [r12 + 0x18], 4
0x44c4b9:	jmp	0x44bec3
0x44c4be:	mov	eax, dword ptr [rbx + 0x28]
0x44c4c1:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c4c4:	jge	0x42cfcf
0x44c4ca:	movsxd	r12, eax
0x44c4cd:	add	eax, 1
0x44c4d0:	shl	r12, 5
0x44c4d4:	add	r12, qword ptr [rbx + 0x20]
0x44c4d8:	mov	qword ptr [r12 + 4], 0
0x44c4e1:	mov	dword ptr [rbx + 0x28], eax
0x44c4e4:	lea	rax, [rip + 0x95255]
0x44c4eb:	mov	dword ptr [r12], 0x27
0x44c4f3:	mov	qword ptr [r12 + 0x10], rax
0x44c4f8:	add	dword ptr [rbx + 0x48], 4
0x44c4fc:	jmp	0x44bec3
0x44c501:	mov	eax, dword ptr [rbx + 0x28]
0x44c504:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c507:	jge	0x42d015
0x44c50d:	movsxd	r12, eax
0x44c510:	add	eax, 1
0x44c513:	shl	r12, 5
0x44c517:	add	r12, qword ptr [rbx + 0x20]
0x44c51b:	mov	qword ptr [r12 + 4], 0
0x44c524:	mov	dword ptr [rbx + 0x28], eax
0x44c527:	lea	rax, [rip + 0x951b2]
0x44c52e:	mov	dword ptr [r12], 0x27
0x44c536:	mov	qword ptr [r12 + 0x10], rax
0x44c53b:	add	dword ptr [rbx + 0x48], 9
0x44c53f:	jmp	0x44bec3
0x44c544:	cmp	byte ptr [rsi + 2], 0x5f
0x44c548:	je	0x44c89e
0x44c54e:	mov	eax, dword ptr [rbx + 0x28]
0x44c551:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c554:	jge	0x44bec0
0x44c55a:	movsxd	r12, eax
0x44c55d:	add	eax, 1
0x44c560:	mov	rdi, rbx
0x44c563:	shl	r12, 5
0x44c567:	add	r12, qword ptr [rbx + 0x20]
0x44c56b:	mov	qword ptr [r12 + 4], 0
0x44c574:	mov	dword ptr [rbx + 0x28], eax
0x44c577:	mov	dword ptr [r12], 0x43
0x44c57f:	call	0x44b230
0x44c584:	cdqe	
0x44c586:	mov	qword ptr [r12 + 0x10], rax
0x44c58b:	mov	rax, qword ptr [rbx + 0x18]
0x44c58f:	cmp	byte ptr [rax], 0x5f
0x44c592:	jne	0x44bec0
0x44c598:	add	rax, 1
0x44c59c:	mov	rdi, rbx
0x44c59f:	mov	qword ptr [rbx + 0x18], rax
0x44c5a3:	call	0x44bdc0
0x44c5a8:	mov	rdx, r12
0x44c5ab:	mov	esi, 0x2d
0x44c5b0:	mov	rdi, rbx
0x44c5b3:	mov	rcx, rax
0x44c5b6:	call	0x44b100
0x44c5bb:	mov	qword ptr [rsp], rax
0x44c5bf:	mov	r12, rax
0x44c5c2:	jmp	0x44bf90
0x44c5c7:	mov	eax, dword ptr [rbx + 0x28]
0x44c5ca:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c5cd:	jge	0x42cfed
0x44c5d3:	movsxd	r12, eax
0x44c5d6:	add	eax, 1
0x44c5d9:	shl	r12, 5
0x44c5dd:	add	r12, qword ptr [rbx + 0x20]
0x44c5e1:	mov	qword ptr [r12 + 4], 0
0x44c5ea:	mov	dword ptr [rbx + 0x28], eax
0x44c5ed:	lea	rax, [rip + 0x9512c]
0x44c5f4:	mov	dword ptr [r12], 0x27
0x44c5fc:	mov	qword ptr [r12 + 0x10], rax
0x44c601:	add	dword ptr [rbx + 0x48], 0xa
0x44c605:	jmp	0x44bec3
0x44c60a:	mov	eax, dword ptr [rbx + 0x28]
0x44c60d:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c610:	jge	0x42cfd9
0x44c616:	movsxd	r12, eax
0x44c619:	add	eax, 1
0x44c61c:	shl	r12, 5
0x44c620:	add	r12, qword ptr [rbx + 0x20]
0x44c624:	mov	qword ptr [r12 + 4], 0
0x44c62d:	mov	dword ptr [rbx + 0x28], eax
0x44c630:	lea	rax, [rip + 0x95149]
0x44c637:	mov	dword ptr [r12], 0x27
0x44c63f:	mov	qword ptr [r12 + 0x10], rax
0x44c644:	add	dword ptr [rbx + 0x48], 8
0x44c648:	jmp	0x44bec3
0x44c64d:	mov	eax, dword ptr [rbx + 0x28]
0x44c650:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c653:	jge	0x42d01f
0x44c659:	movsxd	r12, eax
0x44c65c:	add	eax, 1
0x44c65f:	shl	r12, 5
0x44c663:	add	r12, qword ptr [rbx + 0x20]
0x44c667:	mov	qword ptr [r12 + 4], 0
0x44c670:	mov	dword ptr [rbx + 0x28], eax
0x44c673:	lea	rax, [rip + 0x95086]
0x44c67a:	mov	dword ptr [r12], 0x27
0x44c682:	mov	qword ptr [r12 + 0x10], rax
0x44c687:	add	dword ptr [rbx + 0x48], 9
0x44c68b:	jmp	0x44bec3
0x44c690:	mov	eax, dword ptr [rbx + 0x28]
0x44c693:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c696:	jge	0x42d00b
0x44c69c:	movsxd	r12, eax
0x44c69f:	add	eax, 1
0x44c6a2:	shl	r12, 5
0x44c6a6:	add	r12, qword ptr [rbx + 0x20]
0x44c6aa:	mov	qword ptr [r12 + 4], 0
0x44c6b3:	mov	dword ptr [rbx + 0x28], eax
0x44c6b6:	lea	rax, [rip + 0x950a3]
0x44c6bd:	mov	dword ptr [r12], 0x27
0x44c6c5:	mov	qword ptr [r12 + 0x10], rax
0x44c6ca:	add	dword ptr [rbx + 0x48], 7
0x44c6ce:	jmp	0x44bec3
0x44c6d3:	mov	eax, dword ptr [rbx + 0x28]
0x44c6d6:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c6d9:	jge	0x42cff7
0x44c6df:	movsxd	r12, eax
0x44c6e2:	add	eax, 1
0x44c6e5:	shl	r12, 5
0x44c6e9:	add	r12, qword ptr [rbx + 0x20]
0x44c6ed:	mov	qword ptr [r12 + 4], 0
0x44c6f6:	mov	dword ptr [rbx + 0x28], eax
0x44c6f9:	lea	rax, [rip + 0x950c0]
0x44c700:	mov	dword ptr [r12], 0x27
0x44c708:	mov	qword ptr [r12 + 0x10], rax
0x44c70d:	add	dword ptr [rbx + 0x48], 0x11
0x44c711:	jmp	0x44bec3
0x44c716:	mov	rdi, rbx
0x44c719:	call	0x44bdc0
0x44c71e:	xor	ecx, ecx
0x44c720:	mov	esi, 0x4c
0x44c725:	mov	rdi, rbx
0x44c728:	mov	rdx, rax
0x44c72b:	call	0x44b100
0x44c730:	mov	qword ptr [rsp], rax
0x44c734:	mov	r12, rax
0x44c737:	jmp	0x44bf90
0x44c73c:	mov	eax, dword ptr [rbx + 0x28]
0x44c73f:	cmp	eax, dword ptr [rbx + 0x2c]
0x44c742:	jge	0x42cfe3
0x44c748:	movsxd	r12, eax
0x44c74b:	add	eax, 1
0x44c74e:	shl	r12, 5
0x44c752:	add	r12, qword ptr [rbx + 0x20]
0x44c756:	mov	qword ptr [r12 + 4], 0
0x44c75f:	mov	dword ptr [rbx + 0x28], eax
0x44c762:	lea	rax, [rip + 0x95037]
0x44c769:	mov	dword ptr [r12], 0x27
0x44c771:	mov	qword ptr [r12 + 0x10], rax
0x44c776:	add	dword ptr [rbx + 0x48], 8
0x44c77a:	jmp	0x44bec3
0x44c77f:	nop	
0x44c780:	add	rsi, 1
0x44c784:	mov	rdi, rbx
0x44c787:	mov	qword ptr [rbx + 0x18], rsi
0x44c78b:	call	0x44ba80
0x44c790:	xor	ecx, ecx
0x44c792:	mov	esi, 0x28
0x44c797:	mov	rdi, rbx
0x44c79a:	mov	rdx, rax
0x44c79d:	call	0x44b100
0x44c7a2:	mov	qword ptr [rsp], rax
0x44c7a6:	mov	r12, rax
0x44c7a9:	jmp	0x44bf90
0x44c7ae:	nop	
0x44c7b0:	mov	rdi, rbx
0x44c7b3:	call	0x44e7a0
0x44c7b8:	mov	qword ptr [rsp], rax
0x44c7bc:	mov	r12, rax
0x44c7bf:	test	rax, rax
0x44c7c2:	je	0x44bec0
0x44c7c8:	cmp	dword ptr [rax], 0x18
0x44c7cb:	jne	0x44bf99
0x44c7d1:	jmp	0x44bec3
0x44c7d6:	nop	word ptr cs:[rax + rax]
0x44c7e0:	xor	r12d, r12d
0x44c7e3:	jmp	0x44c2b7
0x44c7e8:	add	rax, 1
0x44c7ec:	mov	rdi, rbx
0x44c7ef:	mov	qword ptr [rbx + 0x18], rax
0x44c7f3:	call	0x44d420
0x44c7f8:	mov	rdx, r12
0x44c7fb:	mov	esi, 4
0x44c800:	mov	rdi, rbx
0x44c803:	mov	rcx, rax
0x44c806:	call	0x44b100
0x44c80b:	mov	r12, rax
0x44c80e:	jmp	0x44c12c
0x44c813:	mov	ebp, dword ptr [rbx + 0x4c]
0x44c816:	mov	dword ptr [rbx + 0x4c], 1
0x44c81d:	mov	rdi, rbx
0x44c820:	call	0x44d6b0
0x44c825:	mov	dword ptr [rbx + 0x4c], ebp
0x44c828:	mov	r12, rax
0x44c82b:	test	rax, rax
0x44c82e:	jne	0x44c2a7
0x44c834:	jmp	0x44bec0
0x44c839:	lea	rax, [rbp + 1]
0x44c83d:	mov	rdi, rbx
0x44c840:	mov	r15d, dword ptr [rbx + 0x28]
0x44c844:	mov	r14d, dword ptr [rbx + 0x38]
0x44c848:	mov	qword ptr [rbx + 0x18], rax
0x44c84c:	mov	r13d, dword ptr [rbx + 0x48]
0x44c850:	call	0x44d420
0x44c855:	mov	rdx, qword ptr [rbx + 0x18]
0x44c859:	cmp	byte ptr [rdx], 0x49
0x44c85c:	je	0x44c873
0x44c85e:	mov	qword ptr [rbx + 0x18], rbp
0x44c862:	mov	dword ptr [rbx + 0x28], r15d
0x44c866:	mov	dword ptr [rbx + 0x38], r14d
0x44c86a:	mov	dword ptr [rbx + 0x48], r13d
0x44c86e:	jmp	0x44bf90
0x44c873:	test	r12, r12
0x44c876:	je	0x44bec0
0x44c87c:	mov	edx, dword ptr [rbx + 0x38]
0x44c87f:	cmp	edx, dword ptr [rbx + 0x3c]
0x44c882:	jge	0x44bec0
0x44c888:	mov	rcx, qword ptr [rbx + 0x30]
0x44c88c:	movsxd	rsi, edx
0x44c88f:	add	edx, 1
0x44c892:	mov	qword ptr [rcx + rsi*8], r12
0x44c896:	mov	dword ptr [rbx + 0x38], edx
0x44c899:	jmp	0x44c08c
0x44c89e:	add	rsi, 3
0x44c8a2:	mov	ebp, dword ptr [rbx + 0x4c]
0x44c8a5:	mov	dword ptr [rbx + 0x4c], 1
0x44c8ac:	mov	rdi, rbx
0x44c8af:	mov	qword ptr [rbx + 0x18], rsi
0x44c8b3:	call	0x44d6b0
0x44c8b8:	mov	dword ptr [rbx + 0x4c], ebp
0x44c8bb:	mov	r12, rax
0x44c8be:	test	rax, rax
0x44c8c1:	jne	0x44c58b
0x44c8c7:	jmp	0x44bec0
0x44c8cc:	call	0x4039f0
0x44c8d1:	nop	word ptr cs:[rax + rax]
0x44c8dc:	nop	dword ptr [rax]
0x44c8e0:	push	rbp
0x44c8e1:	push	rbx
0x44c8e2:	sub	rsp, 0x18
0x44c8e6:	mov	rcx, qword ptr [rdi + 0x18]
0x44c8ea:	mov	rax, qword ptr fs:[0x28]
0x44c8f3:	mov	qword ptr [rsp + 8], rax
0x44c8f8:	xor	eax, eax
0x44c8fa:	mov	qword ptr [rsp], 0
0x44c902:	movzx	eax, byte ptr [rcx]
0x44c905:	cmp	al, 0x45
0x44c907:	sete	dl
0x44c90a:	test	al, al
0x44c90c:	sete	sil
0x44c910:	or	dl, sil
0x44c913:	jne	0x44c984
0x44c915:	cmp	al, 0x2e
0x44c917:	mov	rbp, rdi
0x44c91a:	mov	rbx, rsp
0x44c91d:	sete	dl
0x44c920:	test	dl, dl
0x44c922:	je	0x44c966
0x44c924:	jmp	0x44c984
0x44c926:	nop	word ptr cs:[rax + rax]
0x44c930:	xor	ecx, ecx
0x44c932:	mov	esi, 0x2e
0x44c937:	mov	rdi, rbp
0x44c93a:	call	0x44b100
0x44c93f:	mov	qword ptr [rbx], rax
0x44c942:	test	rax, rax
0x44c945:	je	0x44c984
0x44c947:	mov	rcx, qword ptr [rbp + 0x18]
0x44c94b:	lea	rbx, [rax + 0x18]
0x44c94f:	movzx	eax, byte ptr [rcx]
0x44c952:	test	al, al
0x44c954:	sete	dl
0x44c957:	cmp	al, 0x45
0x44c959:	sete	sil
0x44c95d:	or	dl, sil
0x44c960:	jne	0x44c9a0
0x44c962:	cmp	al, 0x2e
0x44c964:	je	0x44c9a0
0x44c966:	cmp	al, 0x52
0x44c968:	je	0x44c96e
0x44c96a:	cmp	al, 0x4f
0x44c96c:	jne	0x44c974
0x44c96e:	cmp	byte ptr [rcx + 1], 0x45
0x44c972:	je	0x44c9a0
0x44c974:	mov	rdi, rbp
0x44c977:	call	0x44bdc0
0x44c97c:	mov	rdx, rax
0x44c97f:	test	rax, rax
0x44c982:	jne	0x44c930
0x44c984:	xor	eax, eax
0x44c986:	mov	rdx, qword ptr [rsp + 8]
0x44c98b:	sub	rdx, qword ptr fs:[0x28]
0x44c994:	jne	0x44c9d3
0x44c996:	add	rsp, 0x18
0x44c99a:	pop	rbx
0x44c99b:	pop	rbp
0x44c99c:	ret	
0x44c99d:	nop	dword ptr [rax]
0x44c9a0:	mov	rax, qword ptr [rsp]
0x44c9a4:	test	rax, rax
0x44c9a7:	je	0x44c984
0x44c9a9:	cmp	qword ptr [rax + 0x18], 0
0x44c9ae:	jne	0x44c986
0x44c9b0:	mov	rdx, qword ptr [rax + 0x10]
0x44c9b4:	cmp	dword ptr [rdx], 0x27
0x44c9b7:	jne	0x44c986
0x44c9b9:	mov	rdx, qword ptr [rdx + 0x10]
0x44c9bd:	cmp	dword ptr [rdx + 0x1c], 9
0x44c9c1:	jne	0x44c986
0x44c9c3:	mov	edx, dword ptr [rdx + 8]
0x44c9c6:	sub	dword ptr [rbp + 0x48], edx
0x44c9c9:	mov	qword ptr [rax + 0x10], 0
0x44c9d1:	jmp	0x44c986
0x44c9d3:	call	0x4039f0
0x44c9d8:	nop	dword ptr [rax + rax]
0x44c9e0:	push	r12
0x44c9e2:	push	rbp
0x44c9e3:	mov	rbp, rdi
0x44c9e6:	sub	rsp, 8
0x44c9ea:	mov	rax, qword ptr [rdi + 0x18]
0x44c9ee:	cmp	byte ptr [rax], 0x4a
0x44c9f1:	je	0x44ca50
0x44c9f3:	test	esi, esi
0x44c9f5:	je	0x44ca30
0x44c9f7:	mov	rdi, rbp
0x44c9fa:	call	0x44bdc0
0x44c9ff:	mov	r12, rax
0x44ca02:	test	rax, rax
0x44ca05:	je	0x44ca43
0x44ca07:	mov	rdi, rbp
0x44ca0a:	call	0x44c8e0
0x44ca0f:	mov	rcx, rax
0x44ca12:	test	rax, rax
0x44ca15:	je	0x44ca43
0x44ca17:	add	rsp, 8
0x44ca1b:	mov	rdx, r12
0x44ca1e:	mov	rdi, rbp
0x44ca21:	mov	esi, 0x29
0x44ca26:	pop	rbp
0x44ca27:	pop	r12
0x44ca29:	jmp	0x44b100
0x44ca2e:	nop	
0x44ca30:	mov	rdi, rbp
0x44ca33:	xor	r12d, r12d
0x44ca36:	call	0x44c8e0
0x44ca3b:	mov	rcx, rax
0x44ca3e:	test	rax, rax
0x44ca41:	jne	0x44ca17
0x44ca43:	add	rsp, 8
0x44ca47:	xor	eax, eax
0x44ca49:	pop	rbp
0x44ca4a:	pop	r12
0x44ca4c:	ret	
0x44ca4d:	nop	dword ptr [rax]
0x44ca50:	add	rax, 1
0x44ca54:	mov	qword ptr [rdi + 0x18], rax
0x44ca58:	jmp	0x44c9f7
0x44ca5a:	nop	word ptr [rax + rax]
0x44ca60:	push	rbx
0x44ca61:	mov	rbx, rdi
0x44ca64:	test	byte ptr [rdi + 0x12], 4
0x44ca68:	jne	0x44ca90
0x44ca6a:	mov	ecx, dword ptr [rdi + 0x58]
0x44ca6d:	cmp	ecx, 0x800
0x44ca73:	ja	0x44ca99
0x44ca75:	mov	rdx, qword ptr [rdi + 0x18]
0x44ca79:	lea	eax, [rcx + 1]
0x44ca7c:	mov	dword ptr [rdi + 0x58], eax
0x44ca7f:	xor	eax, eax
0x44ca81:	cmp	byte ptr [rdx], 0x46
0x44ca84:	je	0x44caa0
0x44ca86:	mov	dword ptr [rbx + 0x58], ecx
0x44ca89:	pop	rbx
0x44ca8a:	ret	
0x44ca8b:	nop	dword ptr [rax + rax]
0x44ca90:	mov	rdx, qword ptr [rdi + 0x18]
0x44ca94:	cmp	byte ptr [rdx], 0x46
0x44ca97:	je	0x44caa0
0x44ca99:	xor	eax, eax
0x44ca9b:	pop	rbx
0x44ca9c:	ret	
0x44ca9d:	nop	dword ptr [rax]
0x44caa0:	lea	rax, [rdx + 1]
0x44caa4:	mov	qword ptr [rbx + 0x18], rax
0x44caa8:	cmp	byte ptr [rdx + 1], 0x59
0x44caac:	jne	0x44cab6
0x44caae:	add	rdx, 2
0x44cab2:	mov	qword ptr [rbx + 0x18], rdx
0x44cab6:	mov	esi, 1
0x44cabb:	mov	rdi, rbx
0x44cabe:	call	0x44c9e0
0x44cac3:	mov	rdi, rbx
0x44cac6:	mov	rsi, rax
0x44cac9:	call	0x44b360
0x44cace:	mov	rdx, qword ptr [rbx + 0x18]
0x44cad2:	cmp	byte ptr [rdx], 0x45
0x44cad5:	je	0x44caf0
0x44cad7:	xor	eax, eax
0x44cad9:	test	byte ptr [rbx + 0x12], 4
0x44cadd:	jne	0x44ca89
0x44cadf:	mov	esi, dword ptr [rbx + 0x58]
0x44cae2:	lea	ecx, [rsi - 1]
0x44cae5:	jmp	0x44ca86
0x44cae7:	nop	word ptr [rax + rax]
0x44caf0:	add	rdx, 1
0x44caf4:	mov	qword ptr [rbx + 0x18], rdx
0x44caf8:	jmp	0x44cad9
0x44cafa:	nop	word ptr [rax + rax]
0x44cb00:	push	rbp
0x44cb01:	push	rbx
0x44cb02:	mov	rbx, rdi
0x44cb05:	sub	rsp, 8
0x44cb09:	mov	rax, qword ptr [rdi + 0x18]
0x44cb0d:	movzx	r10d, byte ptr [rax]
0x44cb11:	test	r10b, r10b
0x44cb14:	je	0x44cbc8
0x44cb1a:	lea	rdx, [rax + 1]
0x44cb1e:	mov	qword ptr [rdi + 0x18], rdx
0x44cb22:	movzx	r10d, byte ptr [rax + 1]
0x44cb27:	movzx	r8d, byte ptr [rax]
0x44cb2b:	test	r10b, r10b
0x44cb2e:	jne	0x44cbd0
0x44cb34:	mov	esi, 0x48
0x44cb39:	xor	edx, edx
0x44cb3b:	lea	r9, [rip + 0x9417e]
0x44cb42:	nop	word ptr [rax + rax]
0x44cb48:	mov	ecx, esi
0x44cb4a:	sub	ecx, edx
0x44cb4c:	mov	eax, ecx
0x44cb4e:	shr	eax, 0x1f
0x44cb51:	add	eax, ecx
0x44cb53:	sar	eax, 1
0x44cb55:	add	eax, edx
0x44cb57:	movsxd	rcx, eax
0x44cb5a:	lea	rcx, [rcx + rcx*2]
0x44cb5e:	lea	rdi, [r9 + rcx*8]
0x44cb62:	mov	rcx, qword ptr [rdi]
0x44cb65:	cmp	byte ptr [rcx], r8b
0x44cb68:	je	0x44cb80
0x44cb6a:	jle	0x44cbc0
0x44cb6c:	mov	esi, eax
0x44cb6e:	cmp	edx, esi
0x44cb70:	jne	0x44cb48
0x44cb72:	xor	eax, eax
0x44cb74:	add	rsp, 8
0x44cb78:	pop	rbx
0x44cb79:	pop	rbp
0x44cb7a:	ret	
0x44cb7b:	nop	dword ptr [rax + rax]
0x44cb80:	cmp	byte ptr [rcx + 1], r10b
0x44cb84:	jne	0x44cb6a
0x44cb86:	mov	edx, dword ptr [rbx + 0x28]
0x44cb89:	cmp	edx, dword ptr [rbx + 0x2c]
0x44cb8c:	jge	0x44cb72
0x44cb8e:	movsxd	rax, edx
0x44cb91:	add	edx, 1
0x44cb94:	shl	rax, 5
0x44cb98:	add	rax, qword ptr [rbx + 0x20]
0x44cb9c:	mov	qword ptr [rax + 4], 0
0x44cba4:	mov	dword ptr [rbx + 0x28], edx
0x44cba7:	mov	dword ptr [rax], 0x32
0x44cbad:	mov	qword ptr [rax + 0x10], rdi
0x44cbb1:	add	rsp, 8
0x44cbb5:	pop	rbx
0x44cbb6:	pop	rbp
0x44cbb7:	ret	
0x44cbb8:	nop	dword ptr [rax + rax]
0x44cbc0:	lea	edx, [rax + 1]
0x44cbc3:	jmp	0x44cb6e
0x44cbc5:	nop	dword ptr [rax]
0x44cbc8:	xor	r8d, r8d
0x44cbcb:	jmp	0x44cb34
0x44cbd0:	lea	rdx, [rax + 2]
0x44cbd4:	mov	qword ptr [rdi + 0x18], rdx
0x44cbd8:	movzx	r10d, byte ptr [rax + 1]
0x44cbdd:	cmp	r8b, 0x76
0x44cbe1:	jne	0x44cc45
0x44cbe3:	lea	ebp, [r10 - 0x30]
0x44cbe7:	cmp	bpl, 9
0x44cbeb:	ja	0x44cb34
0x44cbf1:	call	0x44ba80
0x44cbf6:	mov	edx, dword ptr [rbx + 0x28]
0x44cbf9:	mov	rcx, rax
0x44cbfc:	cmp	edx, dword ptr [rbx + 0x2c]
0x44cbff:	jge	0x44cb72
0x44cc05:	movsxd	rax, edx
0x44cc08:	add	edx, 1
0x44cc0b:	shl	rax, 5
0x44cc0f:	add	rax, qword ptr [rbx + 0x20]
0x44cc13:	mov	qword ptr [rax + 4], 0
0x44cc1b:	mov	dword ptr [rbx + 0x28], edx
0x44cc1e:	test	rcx, rcx
0x44cc21:	je	0x44cb72
0x44cc27:	movsx	ebp, bpl
0x44cc2b:	mov	qword ptr [rax], 0x33
0x44cc32:	mov	dword ptr [rax + 8], 0
0x44cc39:	mov	dword ptr [rax + 0x10], ebp
0x44cc3c:	mov	qword ptr [rax + 0x18], rcx
0x44cc40:	jmp	0x44cb74
0x44cc45:	cmp	r10b, 0x76
0x44cc49:	jne	0x44cb34
0x44cc4f:	cmp	r8b, 0x63
0x44cc53:	jne	0x44cb34
0x44cc59:	mov	edx, dword ptr [rdi + 0x4c]
0x44cc5c:	xor	eax, eax
0x44cc5e:	mov	ebp, dword ptr [rdi + 0x50]
0x44cc61:	test	edx, edx
0x44cc63:	sete	al
0x44cc66:	mov	dword ptr [rdi + 0x50], eax
0x44cc69:	call	0x44bdc0
0x44cc6e:	mov	esi, dword ptr [rbx + 0x50]
0x44cc71:	xor	ecx, ecx
0x44cc73:	mov	rdx, rax
0x44cc76:	test	esi, esi
0x44cc78:	je	0x44cc91
0x44cc7a:	mov	esi, 0x35
0x44cc7f:	mov	rdi, rbx
0x44cc82:	call	0x44b100
0x44cc87:	mov	dword ptr [rbx + 0x50], ebp
0x44cc8a:	add	rsp, 8
0x44cc8e:	pop	rbx
0x44cc8f:	pop	rbp
0x44cc90:	ret	
0x44cc91:	mov	esi, 0x34
0x44cc96:	mov	rdi, rbx
0x44cc99:	call	0x44b100
0x44cc9e:	jmp	0x44cc87
0x44cca0:	push	r12
0x44cca2:	push	rbp
0x44cca3:	push	rbx
0x44cca4:	mov	rdx, qword ptr [rdi + 0x18]
0x44cca8:	mov	rbx, rdi
0x44ccab:	movzx	eax, byte ptr [rdx]
0x44ccae:	lea	ecx, [rax - 0x30]
0x44ccb1:	cmp	cl, 9
0x44ccb4:	jbe	0x44cdf0
0x44ccba:	lea	ecx, [rax - 0x61]
0x44ccbd:	cmp	cl, 0x19
0x44ccc0:	ja	0x44cd08
0x44ccc2:	mov	ebp, dword ptr [rdi + 0x4c]
0x44ccc5:	cmp	al, 0x6f
0x44ccc7:	je	0x44cee0
0x44cccd:	mov	rdi, rbx
0x44ccd0:	call	0x44cb00
0x44ccd5:	mov	dword ptr [rbx + 0x4c], ebp
0x44ccd8:	mov	r12, rax
0x44ccdb:	test	rax, rax
0x44ccde:	je	0x44cce9
0x44cce0:	cmp	dword ptr [rax], 0x32
0x44cce3:	je	0x44ce50
0x44cce9:	mov	rdx, qword ptr [rbx + 0x18]
0x44cced:	movzx	ecx, byte ptr [rdx]
0x44ccf0:	cmp	cl, 0x42
0x44ccf3:	je	0x44ce08
0x44ccf9:	mov	rax, r12
0x44ccfc:	pop	rbx
0x44ccfd:	pop	rbp
0x44ccfe:	pop	r12
0x44cd00:	ret	
0x44cd01:	nop	dword ptr [rax]
0x44cd08:	lea	ecx, [rax - 0x43]
0x44cd0b:	cmp	cl, 1
0x44cd0e:	jbe	0x44cf00
0x44cd14:	cmp	al, 0x4c
0x44cd16:	je	0x44ceb0
0x44cd1c:	cmp	al, 0x55
0x44cd1e:	jne	0x44ced5
0x44cd24:	movzx	eax, byte ptr [rdx + 1]
0x44cd28:	cmp	al, 0x6c
0x44cd2a:	je	0x44d000
0x44cd30:	cmp	al, 0x74
0x44cd32:	jne	0x44ced5
0x44cd38:	lea	rax, [rdx + 1]
0x44cd3c:	mov	qword ptr [rdi + 0x18], rax
0x44cd40:	movzx	ecx, byte ptr [rdx + 1]
0x44cd44:	cmp	cl, 0x74
0x44cd47:	jne	0x44cf68
0x44cd4d:	lea	rax, [rdx + 2]
0x44cd51:	mov	qword ptr [rdi + 0x18], rax
0x44cd55:	movzx	eax, byte ptr [rdx + 2]
0x44cd59:	cmp	al, 0x5f
0x44cd5b:	je	0x44d187
0x44cd61:	cmp	al, 0x6e
0x44cd63:	je	0x44ced5
0x44cd69:	call	0x44b230
0x44cd6e:	mov	rdx, qword ptr [rbx + 0x18]
0x44cd72:	movzx	ecx, byte ptr [rdx]
0x44cd75:	add	eax, 1
0x44cd78:	js	0x44cf5c
0x44cd7e:	cmp	cl, 0x5f
0x44cd81:	jne	0x44cf5c
0x44cd87:	add	rdx, 1
0x44cd8b:	mov	qword ptr [rbx + 0x18], rdx
0x44cd8f:	mov	ecx, dword ptr [rbx + 0x28]
0x44cd92:	cmp	ecx, dword ptr [rbx + 0x2c]
0x44cd95:	jge	0x44d17c
0x44cd9b:	movsxd	r12, ecx
0x44cd9e:	cdqe	
0x44cda0:	add	ecx, 1
0x44cda3:	shl	r12, 5
0x44cda7:	add	r12, qword ptr [rbx + 0x20]
0x44cdab:	mov	qword ptr [r12 + 4], 0
0x44cdb4:	mov	dword ptr [rbx + 0x28], ecx
0x44cdb7:	mov	qword ptr [r12 + 0x10], rax
0x44cdbc:	mov	eax, dword ptr [rbx + 0x38]
0x44cdbf:	mov	dword ptr [r12], 0x49
0x44cdc7:	cmp	eax, dword ptr [rbx + 0x3c]
0x44cdca:	jge	0x44d17c
0x44cdd0:	mov	rcx, qword ptr [rbx + 0x30]
0x44cdd4:	movsxd	rsi, eax
0x44cdd7:	add	eax, 1
0x44cdda:	mov	qword ptr [rcx + rsi*8], r12
0x44cdde:	mov	dword ptr [rbx + 0x38], eax
0x44cde1:	movzx	ecx, byte ptr [rdx]
0x44cde4:	jmp	0x44ccf0
0x44cde9:	nop	dword ptr [rax]
0x44cdf0:	call	0x44ba80
0x44cdf5:	mov	rdx, qword ptr [rbx + 0x18]
0x44cdf9:	mov	r12, rax
0x44cdfc:	movzx	ecx, byte ptr [rdx]
0x44cdff:	cmp	cl, 0x42
0x44ce02:	jne	0x44ccf9
0x44ce08:	mov	rbp, qword ptr [rbx + 0x40]
0x44ce0c:	nop	dword ptr [rax]
0x44ce10:	add	rdx, 1
0x44ce14:	mov	rdi, rbx
0x44ce17:	mov	qword ptr [rbx + 0x18], rdx
0x44ce1b:	call	0x44ba80
0x44ce20:	mov	rdx, r12
0x44ce23:	mov	esi, 0x4d
0x44ce28:	mov	rdi, rbx
0x44ce2b:	mov	rcx, rax
0x44ce2e:	call	0x44b100
0x44ce33:	mov	rdx, qword ptr [rbx + 0x18]
0x44ce37:	mov	r12, rax
0x44ce3a:	cmp	byte ptr [rdx], 0x42
0x44ce3d:	je	0x44ce10
0x44ce3f:	mov	qword ptr [rbx + 0x40], rbp
0x44ce43:	mov	rax, r12
0x44ce46:	pop	rbx
0x44ce47:	pop	rbp
0x44ce48:	pop	r12
0x44ce4a:	ret	
0x44ce4b:	nop	dword ptr [rax + rax]
0x44ce50:	mov	rax, qword ptr [rax + 0x10]
0x44ce54:	mov	ecx, dword ptr [rbx + 0x48]
0x44ce57:	mov	edx, dword ptr [rax + 0x10]
0x44ce5a:	mov	rax, qword ptr [rax]
0x44ce5d:	lea	edx, [rcx + rdx + 7]
0x44ce61:	mov	dword ptr [rbx + 0x48], edx
0x44ce64:	cmp	byte ptr [rax], 0x6c
0x44ce67:	jne	0x44cce9
0x44ce6d:	cmp	byte ptr [rax + 1], 0x69
0x44ce71:	jne	0x44cce9
0x44ce77:	cmp	byte ptr [rax + 2], 0
0x44ce7b:	jne	0x44cce9
0x44ce81:	mov	rdi, rbx
0x44ce84:	call	0x44ba80
0x44ce89:	mov	rdx, r12
0x44ce8c:	mov	esi, 0x37
0x44ce91:	mov	rdi, rbx
0x44ce94:	mov	rcx, rax
0x44ce97:	call	0x44b100
0x44ce9c:	mov	rdx, qword ptr [rbx + 0x18]
0x44cea0:	mov	r12, rax
0x44cea3:	movzx	ecx, byte ptr [rdx]
0x44cea6:	jmp	0x44ccf0
0x44ceab:	nop	dword ptr [rax + rax]
0x44ceb0:	add	rdx, 1
0x44ceb4:	mov	qword ptr [rdi + 0x18], rdx
0x44ceb8:	call	0x44ba80
0x44cebd:	mov	r12, rax
0x44cec0:	test	rax, rax
0x44cec3:	je	0x44ced5
0x44cec5:	mov	rdi, rbx
0x44cec8:	call	0x44b3c0
0x44cecd:	test	eax, eax
0x44cecf:	jne	0x44cce9
0x44ced5:	xor	r12d, r12d
0x44ced8:	pop	rbx
0x44ced9:	pop	rbp
0x44ceda:	mov	rax, r12
0x44cedd:	pop	r12
0x44cedf:	ret	
0x44cee0:	cmp	byte ptr [rdx + 1], 0x6e
0x44cee4:	jne	0x44cccd
0x44ceea:	add	rdx, 2
0x44ceee:	mov	dword ptr [rdi + 0x4c], 0
0x44cef5:	mov	qword ptr [rdi + 0x18], rdx
0x44cef9:	jmp	0x44cccd
0x44cefe:	nop	
0x44cf00:	mov	rsi, qword ptr [rdi + 0x40]
0x44cf04:	test	rsi, rsi
0x44cf07:	je	0x44cf14
0x44cf09:	mov	ecx, dword ptr [rsi]
0x44cf0b:	test	ecx, ecx
0x44cf0d:	je	0x44cf40
0x44cf0f:	cmp	ecx, 0x18
0x44cf12:	je	0x44cf40
0x44cf14:	cmp	al, 0x43
0x44cf16:	je	0x44d0c8
0x44cf1c:	movzx	edi, byte ptr [rdx + 1]
0x44cf20:	lea	ecx, [rdi - 0x30]
0x44cf23:	cmp	cl, 5
0x44cf26:	ja	0x44cff2
0x44cf2c:	lea	rdi, [rip + 0x800a9]
0x44cf33:	movzx	ecx, cl
0x44cf36:	movsxd	rcx, dword ptr [rdi + rcx*4]
0x44cf3a:	add	rcx, rdi
0x44cf3d:	notrack jmp	rcx
0x44cf40:	mov	eax, dword ptr [rsi + 0x18]
0x44cf43:	add	eax, dword ptr [rbx + 0x48]
0x44cf46:	mov	dword ptr [rbx + 0x48], eax
0x44cf49:	movzx	ecx, byte ptr [rdx]
0x44cf4c:	mov	eax, ecx
0x44cf4e:	cmp	cl, 0x43
0x44cf51:	je	0x44d0c8
0x44cf57:	cmp	cl, 0x44
0x44cf5a:	je	0x44cf1c
0x44cf5c:	xor	r12d, r12d
0x44cf5f:	jmp	0x44ccf0
0x44cf64:	nop	dword ptr [rax]
0x44cf68:	mov	rdx, rax
0x44cf6b:	xor	r12d, r12d
0x44cf6e:	jmp	0x44ccf0
0x44cf73:	mov	ecx, 1
0x44cf78:	lea	rdi, [rdx + 2]
0x44cf7c:	mov	eax, dword ptr [rbx + 0x28]
0x44cf7f:	mov	qword ptr [rbx + 0x18], rdi
0x44cf83:	cmp	eax, dword ptr [rbx + 0x2c]
0x44cf86:	jge	0x44d12e
0x44cf8c:	movsxd	r12, eax
0x44cf8f:	add	eax, 1
0x44cf92:	shl	r12, 5
0x44cf96:	add	r12, qword ptr [rbx + 0x20]
0x44cf9a:	mov	qword ptr [r12 + 4], 0
0x44cfa3:	mov	dword ptr [rbx + 0x28], eax
0x44cfa6:	test	rsi, rsi
0x44cfa9:	je	0x44d12e
0x44cfaf:	mov	qword ptr [r12], 8
0x44cfb7:	mov	dword ptr [r12 + 8], 0
0x44cfc0:	mov	dword ptr [r12 + 0x10], ecx
0x44cfc5:	mov	qword ptr [r12 + 0x18], rsi
0x44cfca:	movzx	ecx, byte ptr [rdx + 2]
0x44cfce:	mov	rdx, rdi
0x44cfd1:	jmp	0x44ccf0
0x44cfd6:	mov	ecx, 3
0x44cfdb:	jmp	0x44cf78
0x44cfdd:	mov	ecx, 5
0x44cfe2:	jmp	0x44cf78
0x44cfe4:	mov	ecx, 4
0x44cfe9:	jmp	0x44cf78
0x44cfeb:	mov	ecx, 2
0x44cff0:	jmp	0x44cf78
0x44cff2:	mov	ecx, eax
0x44cff4:	xor	r12d, r12d
0x44cff7:	jmp	0x44ccf0
0x44cffc:	nop	dword ptr [rax]
0x44d000:	lea	rax, [rdx + 1]
0x44d004:	mov	qword ptr [rdi + 0x18], rax
0x44d008:	movzx	ecx, byte ptr [rdx + 1]
0x44d00c:	cmp	cl, 0x6c
0x44d00f:	jne	0x44cf68
0x44d015:	add	rdx, 2
0x44d019:	mov	qword ptr [rdi + 0x18], rdx
0x44d01d:	call	0x44c8e0
0x44d022:	mov	rdx, qword ptr [rbx + 0x18]
0x44d026:	mov	r11, rax
0x44d029:	movzx	ecx, byte ptr [rdx]
0x44d02c:	test	rax, rax
0x44d02f:	je	0x44cf5c
0x44d035:	cmp	cl, 0x45
0x44d038:	jne	0x44cf5c
0x44d03e:	lea	rax, [rdx + 1]
0x44d042:	mov	qword ptr [rbx + 0x18], rax
0x44d046:	movzx	eax, byte ptr [rdx + 1]
0x44d04a:	cmp	al, 0x5f
0x44d04c:	je	0x44d192
0x44d052:	cmp	al, 0x6e
0x44d054:	je	0x44ced5
0x44d05a:	mov	rdi, rbx
0x44d05d:	call	0x44b230
0x44d062:	mov	rdx, qword ptr [rbx + 0x18]
0x44d066:	movzx	ecx, byte ptr [rdx]
0x44d069:	add	eax, 1
0x44d06c:	js	0x44cf5c
0x44d072:	cmp	cl, 0x5f
0x44d075:	jne	0x44cf5c
0x44d07b:	add	rdx, 1
0x44d07f:	mov	qword ptr [rbx + 0x18], rdx
0x44d083:	mov	ecx, dword ptr [rbx + 0x28]
0x44d086:	cmp	ecx, dword ptr [rbx + 0x2c]
0x44d089:	jge	0x44d17c
0x44d08f:	movsxd	r12, ecx
0x44d092:	add	ecx, 1
0x44d095:	shl	r12, 5
0x44d099:	add	r12, qword ptr [rbx + 0x20]
0x44d09d:	mov	qword ptr [r12 + 4], 0
0x44d0a6:	mov	dword ptr [rbx + 0x28], ecx
0x44d0a9:	mov	dword ptr [r12], 0x47
0x44d0b1:	mov	qword ptr [r12 + 0x10], r11
0x44d0b6:	mov	dword ptr [r12 + 0x18], eax
0x44d0bb:	movzx	ecx, byte ptr [rdx]
0x44d0be:	jmp	0x44ccf0
0x44d0c3:	nop	dword ptr [rax + rax]
0x44d0c8:	movsx	eax, byte ptr [rdx + 1]
0x44d0cc:	cmp	al, 0x49
0x44d0ce:	je	0x44d14c
0x44d0d0:	lea	ecx, [rax - 0x31]
0x44d0d3:	cmp	cl, 4
0x44d0d6:	ja	0x44ced5
0x44d0dc:	add	rdx, 2
0x44d0e0:	lea	ebp, [rax - 0x30]
0x44d0e3:	mov	qword ptr [rbx + 0x18], rdx
0x44d0e7:	mov	eax, dword ptr [rbx + 0x28]
0x44d0ea:	cmp	eax, dword ptr [rbx + 0x2c]
0x44d0ed:	jge	0x44d13d
0x44d0ef:	movsxd	r12, eax
0x44d0f2:	add	eax, 1
0x44d0f5:	shl	r12, 5
0x44d0f9:	add	r12, qword ptr [rbx + 0x20]
0x44d0fd:	mov	qword ptr [r12 + 4], 0
0x44d106:	mov	dword ptr [rbx + 0x28], eax
0x44d109:	test	rsi, rsi
0x44d10c:	je	0x44d13d
0x44d10e:	mov	qword ptr [r12], 7
0x44d116:	mov	dword ptr [r12 + 8], 0
0x44d11f:	mov	dword ptr [r12 + 0x10], ebp
0x44d124:	mov	qword ptr [r12 + 0x18], rsi
0x44d129:	jmp	0x44cce9
0x44d12e:	movzx	ecx, byte ptr [rdx + 2]
0x44d132:	xor	r12d, r12d
0x44d135:	mov	rdx, rdi
0x44d138:	jmp	0x44ccf0
0x44d13d:	mov	rdx, qword ptr [rbx + 0x18]
0x44d141:	xor	r12d, r12d
0x44d144:	movzx	ecx, byte ptr [rdx]
0x44d147:	jmp	0x44ccf0
0x44d14c:	lea	rsi, [rdx + 1]
0x44d150:	mov	qword ptr [rbx + 0x18], rsi
0x44d154:	movsx	eax, byte ptr [rdx + 2]
0x44d158:	lea	ecx, [rax - 0x31]
0x44d15b:	cmp	cl, 4
0x44d15e:	ja	0x44d19d
0x44d160:	add	rdx, 3
0x44d164:	mov	rdi, rbx
0x44d167:	lea	ebp, [rax - 0x30]
0x44d16a:	mov	qword ptr [rbx + 0x18], rdx
0x44d16e:	call	0x44bdc0
0x44d173:	mov	rsi, qword ptr [rbx + 0x40]
0x44d177:	jmp	0x44d0e7
0x44d17c:	movzx	ecx, byte ptr [rdx]
0x44d17f:	xor	r12d, r12d
0x44d182:	jmp	0x44ccf0
0x44d187:	add	rdx, 3
0x44d18b:	xor	eax, eax
0x44d18d:	jmp	0x44cd8b
0x44d192:	add	rdx, 2
0x44d196:	xor	eax, eax
0x44d198:	jmp	0x44d07f
0x44d19d:	movzx	ecx, byte ptr [rdx + 1]
0x44d1a1:	xor	r12d, r12d
0x44d1a4:	mov	rdx, rsi
0x44d1a7:	jmp	0x44ccf0
0x44d1ac:	nop	dword ptr [rax]
0x44d1b0:	push	r12
0x44d1b2:	push	rbx
0x44d1b3:	sub	rsp, 8
0x44d1b7:	mov	rdx, qword ptr [rdi + 0x18]
0x44d1bb:	cmp	byte ptr [rdx], 0x4c
0x44d1be:	jne	0x44d23b
0x44d1c0:	lea	rax, [rdx + 1]
0x44d1c4:	mov	rbx, rdi
0x44d1c7:	mov	qword ptr [rdi + 0x18], rax
0x44d1cb:	movzx	ecx, byte ptr [rdx + 1]
0x44d1cf:	cmp	cl, 0x5f
0x44d1d2:	je	0x44d320
0x44d1d8:	cmp	cl, 0x5a
0x44d1db:	je	0x44d250
0x44d1dd:	call	0x44bdc0
0x44d1e2:	mov	r12, rax
0x44d1e5:	test	rax, rax
0x44d1e8:	je	0x44d23b
0x44d1ea:	cmp	dword ptr [rax], 0x27
0x44d1ed:	je	0x44d2b0
0x44d1f3:	mov	rsi, qword ptr [rbx + 0x18]
0x44d1f7:	mov	r8d, 0x3d
0x44d1fd:	movzx	ecx, byte ptr [rsi]
0x44d200:	cmp	cl, 0x6e
0x44d203:	je	0x44d300
0x44d209:	cmp	cl, 0x45
0x44d20c:	je	0x44d394
0x44d212:	lea	rax, [rsi + 1]
0x44d216:	jmp	0x44d237
0x44d218:	nop	dword ptr [rax + rax]
0x44d220:	mov	qword ptr [rbx + 0x18], rax
0x44d224:	mov	rdx, rax
0x44d227:	movzx	ecx, byte ptr [rax]
0x44d22a:	add	rax, 1
0x44d22e:	cmp	cl, 0x45
0x44d231:	je	0x44d340
0x44d237:	test	cl, cl
0x44d239:	jne	0x44d220
0x44d23b:	xor	r12d, r12d
0x44d23e:	add	rsp, 8
0x44d242:	mov	rax, r12
0x44d245:	pop	rbx
0x44d246:	pop	r12
0x44d248:	ret	
0x44d249:	nop	dword ptr [rax]
0x44d250:	cmp	cl, 0x5f
0x44d253:	je	0x44d320
0x44d259:	lea	rdx, [rax + 1]
0x44d25d:	mov	qword ptr [rbx + 0x18], rdx
0x44d261:	movzx	eax, byte ptr [rax + 1]
0x44d265:	cmp	al, 0x47
0x44d267:	je	0x44d370
0x44d26d:	cmp	al, 0x54
0x44d26f:	je	0x44d370
0x44d275:	xor	esi, esi
0x44d277:	mov	rdi, rbx
0x44d27a:	call	0x44ec50
0x44d27f:	mov	r12, rax
0x44d282:	mov	rax, qword ptr [rbx + 0x18]
0x44d286:	movzx	edx, byte ptr [rax]
0x44d289:	nop	dword ptr [rax]
0x44d290:	cmp	dl, 0x45
0x44d293:	jne	0x44d23b
0x44d295:	add	rax, 1
0x44d299:	mov	qword ptr [rbx + 0x18], rax
0x44d29d:	add	rsp, 8
0x44d2a1:	mov	rax, r12
0x44d2a4:	pop	rbx
0x44d2a5:	pop	r12
0x44d2a7:	ret	
0x44d2a8:	nop	dword ptr [rax + rax]
0x44d2b0:	mov	rax, qword ptr [rax + 0x10]
0x44d2b4:	mov	edx, dword ptr [rax + 0x1c]
0x44d2b7:	test	edx, edx
0x44d2b9:	je	0x44d2c1
0x44d2bb:	mov	edx, dword ptr [rax + 8]
0x44d2be:	sub	dword ptr [rbx + 0x48], edx
0x44d2c1:	mov	rdi, qword ptr [rax]
0x44d2c4:	lea	rsi, [rip + 0x801ea]
0x44d2cb:	call	0x403be0
0x44d2d0:	test	eax, eax
0x44d2d2:	jne	0x44d1f3
0x44d2d8:	mov	rsi, qword ptr [rbx + 0x18]
0x44d2dc:	movzx	ecx, byte ptr [rsi]
0x44d2df:	cmp	cl, 0x45
0x44d2e2:	je	0x44d387
0x44d2e8:	mov	r8d, 0x3d
0x44d2ee:	cmp	cl, 0x6e
0x44d2f1:	jne	0x44d212
0x44d2f7:	nop	word ptr [rax + rax]
0x44d300:	lea	rax, [rsi + 1]
0x44d304:	mov	r8d, 0x3e
0x44d30a:	mov	qword ptr [rbx + 0x18], rax
0x44d30e:	movzx	ecx, byte ptr [rsi + 1]
0x44d312:	mov	rsi, rax
0x44d315:	jmp	0x44d209
0x44d31a:	nop	word ptr [rax + rax]
0x44d320:	lea	rax, [rdx + 2]
0x44d324:	mov	qword ptr [rbx + 0x18], rax
0x44d328:	movzx	edx, byte ptr [rdx + 2]
0x44d32c:	cmp	dl, 0x5a
0x44d32f:	je	0x44d259
0x44d335:	xor	r12d, r12d
0x44d338:	jmp	0x44d290
0x44d33d:	nop	dword ptr [rax]
0x44d340:	sub	edx, esi
0x44d342:	mov	rdi, rbx
0x44d345:	call	0x44b1e0
0x44d34a:	mov	rdx, r12
0x44d34d:	mov	esi, r8d
0x44d350:	mov	rcx, rax
0x44d353:	call	0x44b100
0x44d358:	mov	r12, rax
0x44d35b:	mov	rax, qword ptr [rbx + 0x18]
0x44d35f:	movzx	edx, byte ptr [rax]
0x44d362:	jmp	0x44d290
0x44d367:	nop	word ptr [rax + rax]
0x44d370:	mov	rdi, rbx
0x44d373:	call	0x44e200
0x44d378:	mov	r12, rax
0x44d37b:	mov	rax, qword ptr [rbx + 0x18]
0x44d37f:	movzx	edx, byte ptr [rax]
0x44d382:	jmp	0x44d290
0x44d387:	add	rsi, 1
0x44d38b:	mov	qword ptr [rbx + 0x18], rsi
0x44d38f:	jmp	0x44d23e
0x44d394:	xor	edx, edx
0x44d396:	jmp	0x44d342
0x44d398:	nop	dword ptr [rax + rax]
0x44d3a0:	mov	rdx, qword ptr [rdi + 0x18]
0x44d3a4:	movzx	eax, byte ptr [rdx]
0x44d3a7:	cmp	al, 0x4c
0x44d3a9:	je	0x44d410
0x44d3ab:	jg	0x44d3c0
0x44d3ad:	sub	eax, 0x49
0x44d3b0:	cmp	al, 1
0x44d3b2:	ja	0x44d408
0x44d3b4:	add	rdx, 1
0x44d3b8:	mov	qword ptr [rdi + 0x18], rdx
0x44d3bc:	jmp	0x44d420
0x44d3be:	nop	
0x44d3c0:	cmp	al, 0x58
0x44d3c2:	jne	0x44d408
0x44d3c4:	push	rbx
0x44d3c5:	add	rdx, 1
0x44d3c9:	sub	rsp, 0x10
0x44d3cd:	mov	qword ptr [rdi + 0x18], rdx
0x44d3d1:	mov	ebx, dword ptr [rdi + 0x4c]
0x44d3d4:	mov	dword ptr [rdi + 0x4c], 1
0x44d3db:	mov	qword ptr [rsp + 8], rdi
0x44d3e0:	call	0x44d6b0
0x44d3e5:	mov	rdi, qword ptr [rsp + 8]
0x44d3ea:	mov	rdx, qword ptr [rdi + 0x18]
0x44d3ee:	mov	dword ptr [rdi + 0x4c], ebx
0x44d3f1:	cmp	byte ptr [rdx], 0x45
0x44d3f4:	jne	0x44d418
0x44d3f6:	add	rdx, 1
0x44d3fa:	mov	qword ptr [rdi + 0x18], rdx
0x44d3fe:	add	rsp, 0x10
0x44d402:	pop	rbx
0x44d403:	ret	
0x44d404:	nop	dword ptr [rax]
0x44d408:	jmp	0x44bdc0
0x44d40d:	nop	dword ptr [rax]
0x44d410:	jmp	0x44d1b0
0x44d415:	nop	dword ptr [rax]
0x44d418:	xor	eax, eax
0x44d41a:	jmp	0x44d3fe
0x44d41c:	nop	dword ptr [rax]
0x44d420:	push	r12
0x44d422:	mov	r12, rdi
0x44d425:	push	rbp
0x44d426:	push	rbx
0x44d427:	sub	rsp, 0x10
0x44d42b:	mov	rbp, qword ptr [rdi + 0x40]
0x44d42f:	mov	rax, qword ptr fs:[0x28]
0x44d438:	mov	qword ptr [rsp + 8], rax
0x44d43d:	xor	eax, eax
0x44d43f:	mov	rax, qword ptr [rdi + 0x18]
0x44d443:	cmp	byte ptr [rax], 0x45
0x44d446:	je	0x44d4c8
0x44d44c:	mov	qword ptr [rsp], 0
0x44d454:	mov	rbx, rsp
0x44d457:	jmp	0x44d485
0x44d459:	nop	dword ptr [rax]
0x44d460:	xor	ecx, ecx
0x44d462:	mov	esi, 0x2f
0x44d467:	mov	rdi, r12
0x44d46a:	call	0x44b100
0x44d46f:	mov	qword ptr [rbx], rax
0x44d472:	test	rax, rax
0x44d475:	je	0x44d495
0x44d477:	lea	rbx, [rax + 0x18]
0x44d47b:	mov	rax, qword ptr [r12 + 0x18]
0x44d480:	cmp	byte ptr [rax], 0x45
0x44d483:	je	0x44d4b0
0x44d485:	mov	rdi, r12
0x44d488:	call	0x44d3a0
0x44d48d:	mov	rdx, rax
0x44d490:	test	rax, rax
0x44d493:	jne	0x44d460
0x44d495:	xor	eax, eax
0x44d497:	mov	rdx, qword ptr [rsp + 8]
0x44d49c:	sub	rdx, qword ptr fs:[0x28]
0x44d4a5:	jne	0x44d4f6
0x44d4a7:	add	rsp, 0x10
0x44d4ab:	pop	rbx
0x44d4ac:	pop	rbp
0x44d4ad:	pop	r12
0x44d4af:	ret	
0x44d4b0:	add	rax, 1
0x44d4b4:	mov	qword ptr [r12 + 0x40], rbp
0x44d4b9:	mov	qword ptr [r12 + 0x18], rax
0x44d4be:	mov	rax, qword ptr [rsp]
0x44d4c2:	jmp	0x44d497
0x44d4c4:	nop	dword ptr [rax]
0x44d4c8:	add	rax, 1
0x44d4cc:	mov	qword ptr [rdi + 0x18], rax
0x44d4d0:	mov	rax, qword ptr [rsp + 8]
0x44d4d5:	sub	rax, qword ptr fs:[0x28]
0x44d4de:	jne	0x44d4f6
0x44d4e0:	add	rsp, 0x10
0x44d4e4:	xor	ecx, ecx
0x44d4e6:	xor	edx, edx
0x44d4e8:	mov	esi, 0x2f
0x44d4ed:	pop	rbx
0x44d4ee:	pop	rbp
0x44d4ef:	pop	r12
0x44d4f1:	jmp	0x44b100
0x44d4f6:	call	0x4039f0
0x44d4fb:	nop	dword ptr [rax + rax]
0x44d500:	push	r14
0x44d502:	push	r13
0x44d504:	push	r12
0x44d506:	push	rbp
0x44d507:	push	rbx
0x44d508:	mov	rdx, qword ptr [rdi + 0x18]
0x44d50c:	movzx	ebx, byte ptr [rdx]
0x44d50f:	test	bl, bl
0x44d511:	je	0x44d5b0
0x44d517:	mov	r13, rdi
0x44d51a:	mov	ebp, esi
0x44d51c:	lea	r14, [rip + 0x7fad1]
0x44d523:	xor	r12d, r12d
0x44d526:	lea	eax, [rbx - 0x30]
0x44d529:	cmp	al, 0x4a
0x44d52b:	ja	0x44d5b0
0x44d531:	movzx	eax, al
0x44d534:	movsxd	rax, dword ptr [r14 + rax*4]
0x44d538:	add	rax, r14
0x44d53b:	notrack jmp	rax
0x44d53e:	nop	
0x44d540:	mov	rdi, r13
0x44d543:	call	0x44cca0
0x44d548:	mov	rcx, rax
0x44d54b:	test	r12, r12
0x44d54e:	jne	0x44d690
0x44d554:	mov	rdx, qword ptr [r13 + 0x18]
0x44d558:	mov	r12, rax
0x44d55b:	movzx	ecx, byte ptr [rdx]
0x44d55e:	mov	rax, rdx
0x44d561:	cmp	bl, 0x53
0x44d564:	je	0x44d65e
0x44d56a:	nop	word ptr [rax + rax]
0x44d570:	movzx	ebx, byte ptr [rax]
0x44d573:	mov	rdx, rax
0x44d576:	cmp	bl, 0x45
0x44d579:	je	0x44d5a8
0x44d57b:	test	bpl, 1
0x44d57f:	je	0x44d5a8
0x44d581:	test	r12, r12
0x44d584:	je	0x44d5b0
0x44d586:	mov	eax, dword ptr [r13 + 0x38]
0x44d58a:	cmp	eax, dword ptr [r13 + 0x3c]
0x44d58e:	jge	0x44d5b0
0x44d590:	mov	rcx, qword ptr [r13 + 0x30]
0x44d594:	movsxd	rsi, eax
0x44d597:	add	eax, 1
0x44d59a:	mov	qword ptr [rcx + rsi*8], r12
0x44d59e:	mov	dword ptr [r13 + 0x38], eax
0x44d5a2:	movzx	ebx, byte ptr [rdx]
0x44d5a5:	nop	dword ptr [rax]
0x44d5a8:	test	bl, bl
0x44d5aa:	jne	0x44d526
0x44d5b0:	xor	r12d, r12d
0x44d5b3:	pop	rbx
0x44d5b4:	mov	rax, r12
0x44d5b7:	pop	rbp
0x44d5b8:	pop	r12
0x44d5ba:	pop	r13
0x44d5bc:	pop	r14
0x44d5be:	ret	
0x44d5bf:	nop	
0x44d5c0:	mov	rdi, r13
0x44d5c3:	call	0x44b920
0x44d5c8:	mov	rcx, rax
0x44d5cb:	test	r12, r12
0x44d5ce:	jne	0x44d690
0x44d5d4:	mov	rax, qword ptr [r13 + 0x18]
0x44d5d8:	mov	r12, rcx
0x44d5db:	jmp	0x44d570
0x44d5dd:	nop	dword ptr [rax]
0x44d5e0:	mov	esi, 1
0x44d5e5:	mov	rdi, r13
0x44d5e8:	call	0x44bb70
0x44d5ed:	mov	rcx, rax
0x44d5f0:	test	r12, r12
0x44d5f3:	jne	0x44d690
0x44d5f9:	mov	rdx, qword ptr [r13 + 0x18]
0x44d5fd:	mov	r12, rcx
0x44d600:	movzx	ebx, byte ptr [rdx]
0x44d603:	jmp	0x44d5a8
0x44d605:	nop	dword ptr [rax]
0x44d608:	test	r12, r12
0x44d60b:	je	0x44d5b0
0x44d60d:	lea	rax, [rdx + 1]
0x44d611:	mov	qword ptr [r13 + 0x18], rax
0x44d615:	movzx	ebx, byte ptr [rdx + 1]
0x44d619:	mov	rdx, rax
0x44d61c:	jmp	0x44d5a8
0x44d61e:	nop	
0x44d620:	test	r12, r12
0x44d623:	je	0x44d5b0
0x44d625:	add	rdx, 1
0x44d629:	mov	rdi, r13
0x44d62c:	mov	qword ptr [r13 + 0x18], rdx
0x44d630:	call	0x44d420
0x44d635:	mov	esi, 4
0x44d63a:	mov	rcx, rax
0x44d63d:	mov	rdx, r12
0x44d640:	mov	rdi, r13
0x44d643:	call	0x44b100
0x44d648:	mov	rdx, qword ptr [r13 + 0x18]
0x44d64c:	mov	r12, rax
0x44d64f:	movzx	ecx, byte ptr [rdx]
0x44d652:	mov	rax, rdx
0x44d655:	cmp	bl, 0x53
0x44d658:	jne	0x44d570
0x44d65e:	mov	ebx, ecx
0x44d660:	jmp	0x44d5a8
0x44d665:	nop	dword ptr [rax]
0x44d668:	movzx	eax, byte ptr [rdx + 1]
0x44d66c:	mov	rdi, r13
0x44d66f:	and	eax, 0xffffffdf
0x44d672:	cmp	al, 0x54
0x44d674:	jne	0x44d6a0
0x44d676:	call	0x44bdc0
0x44d67b:	mov	rcx, rax
0x44d67e:	test	r12, r12
0x44d681:	je	0x44d5d4
0x44d687:	nop	word ptr [rax + rax]
0x44d690:	mov	esi, 1
0x44d695:	jmp	0x44d63d
0x44d697:	nop	word ptr [rax + rax]
0x44d6a0:	call	0x44cca0
0x44d6a5:	mov	rcx, rax
0x44d6a8:	jmp	0x44d5cb
0x44d6ad:	nop	dword ptr [rax]
0x44d6b0:	push	r14
0x44d6b2:	push	r13
0x44d6b4:	push	r12
0x44d6b6:	push	rbp
0x44d6b7:	mov	rbp, rdi
0x44d6ba:	push	rbx
0x44d6bb:	mov	rdx, qword ptr [rdi + 0x18]
0x44d6bf:	movzx	eax, byte ptr [rdx]
0x44d6c2:	cmp	al, 0x4c
0x44d6c4:	je	0x44d840
0x44d6ca:	cmp	al, 0x54
0x44d6cc:	je	0x44d8b0
0x44d6d2:	cmp	al, 0x73
0x44d6d4:	je	0x44d7c0
0x44d6da:	cmp	al, 0x66
0x44d6dc:	je	0x44d720
0x44d6de:	lea	ecx, [rax - 0x30]
0x44d6e1:	cmp	cl, 9
0x44d6e4:	ja	0x44d850
0x44d6ea:	mov	rdi, rbp
0x44d6ed:	call	0x44cca0
0x44d6f2:	mov	r12, rax
0x44d6f5:	test	rax, rax
0x44d6f8:	je	0x44d82d
0x44d6fe:	mov	rax, qword ptr [rbp + 0x18]
0x44d702:	cmp	byte ptr [rax], 0x49
0x44d705:	je	0x44d8c0
0x44d70b:	pop	rbx
0x44d70c:	mov	rax, r12
0x44d70f:	pop	rbp
0x44d710:	pop	r12
0x44d712:	pop	r13
0x44d714:	pop	r14
0x44d716:	ret	
0x44d717:	nop	word ptr [rax + rax]
0x44d720:	cmp	byte ptr [rdx + 1], 0x70
0x44d724:	jne	0x44d7d4
0x44d72a:	lea	rax, [rdx + 2]
0x44d72e:	mov	qword ptr [rdi + 0x18], rax
0x44d732:	movzx	eax, byte ptr [rdx + 2]
0x44d736:	cmp	al, 0x54
0x44d738:	je	0x44db90
0x44d73e:	cmp	al, 0x5f
0x44d740:	je	0x44d9e0
0x44d746:	cmp	al, 0x6e
0x44d748:	je	0x44d82d
0x44d74e:	call	0x44b230
0x44d753:	mov	ecx, eax
0x44d755:	add	ecx, 1
0x44d758:	js	0x44d82d
0x44d75e:	mov	rdx, qword ptr [rbp + 0x18]
0x44d762:	cmp	byte ptr [rdx], 0x5f
0x44d765:	jne	0x44d82d
0x44d76b:	add	rdx, 1
0x44d76f:	mov	qword ptr [rbp + 0x18], rdx
0x44d773:	cmp	ecx, 0x7fffffff
0x44d779:	je	0x44d82d
0x44d77f:	add	eax, 2
0x44d782:	mov	edx, dword ptr [rbp + 0x28]
0x44d785:	cmp	edx, dword ptr [rbp + 0x2c]
0x44d788:	jge	0x44d82d
0x44d78e:	movsxd	r12, edx
0x44d791:	cdqe	
0x44d793:	add	edx, 1
0x44d796:	shl	r12, 5
0x44d79a:	add	r12, qword ptr [rbp + 0x20]
0x44d79e:	mov	qword ptr [r12 + 4], 0
0x44d7a7:	mov	dword ptr [rbp + 0x28], edx
0x44d7aa:	mov	dword ptr [r12], 6
0x44d7b2:	mov	qword ptr [r12 + 0x10], rax
0x44d7b7:	jmp	0x44d70b
0x44d7bc:	nop	dword ptr [rax]
0x44d7c0:	movzx	eax, byte ptr [rdx + 1]
0x44d7c4:	cmp	al, 0x72
0x44d7c6:	je	0x44dad0
0x44d7cc:	cmp	al, 0x70
0x44d7ce:	je	0x44db68
0x44d7d4:	mov	rdi, rbp
0x44d7d7:	call	0x44cb00
0x44d7dc:	mov	r12, rax
0x44d7df:	test	rax, rax
0x44d7e2:	je	0x44d82d
0x44d7e4:	mov	eax, dword ptr [rax]
0x44d7e6:	cmp	eax, 0x32
0x44d7e9:	je	0x44d8f0
0x44d7ef:	cmp	eax, 0x34
0x44d7f2:	je	0x44ddc0
0x44d7f8:	ja	0x44d82d
0x44d7fa:	cmp	eax, 0x33
0x44d7fd:	jne	0x44d82d
0x44d7ff:	mov	eax, dword ptr [r12 + 0x10]
0x44d804:	cmp	eax, 2
0x44d807:	je	0x44d82d
0x44d809:	jg	0x44d82d
0x44d80b:	test	eax, eax
0x44d80d:	jne	0x44da40
0x44d813:	xor	ecx, ecx
0x44d815:	mov	rdx, r12
0x44d818:	mov	esi, 0x36
0x44d81d:	mov	rdi, rbp
0x44d820:	jmp	0x44d8de
0x44d825:	nop	dword ptr [rax]
0x44d828:	test	r13d, r13d
0x44d82b:	je	0x44d813
0x44d82d:	xor	r12d, r12d
0x44d830:	pop	rbx
0x44d831:	pop	rbp
0x44d832:	mov	rax, r12
0x44d835:	pop	r12
0x44d837:	pop	r13
0x44d839:	pop	r14
0x44d83b:	ret	
0x44d83c:	nop	dword ptr [rax]
0x44d840:	pop	rbx
0x44d841:	pop	rbp
0x44d842:	pop	r12
0x44d844:	pop	r13
0x44d846:	pop	r14
0x44d848:	jmp	0x44d1b0
0x44d84d:	nop	dword ptr [rax]
0x44d850:	cmp	al, 0x6f
0x44d852:	jne	0x44d86b
0x44d854:	cmp	byte ptr [rdx + 1], 0x6e
0x44d858:	jne	0x44d7d4
0x44d85e:	add	rdx, 2
0x44d862:	mov	qword ptr [rdi + 0x18], rdx
0x44d866:	jmp	0x44d6ea
0x44d86b:	cmp	al, 0x69
0x44d86d:	je	0x44d873
0x44d86f:	cmp	al, 0x74
0x44d871:	jne	0x44d87d
0x44d873:	cmp	byte ptr [rdx + 1], 0x6c
0x44d877:	je	0x44d9f8
0x44d87d:	cmp	al, 0x75
0x44d87f:	jne	0x44d7d4
0x44d885:	add	rdx, 1
0x44d889:	mov	rdi, rbp
0x44d88c:	mov	qword ptr [rbp + 0x18], rdx
0x44d890:	call	0x44ba80
0x44d895:	mov	rdi, rbp
0x44d898:	mov	r12, rax
0x44d89b:	call	0x44d420
0x44d8a0:	mov	rdx, r12
0x44d8a3:	mov	esi, 0x3f
0x44d8a8:	mov	rdi, rbp
0x44d8ab:	mov	rcx, rax
0x44d8ae:	jmp	0x44d8de
0x44d8b0:	pop	rbx
0x44d8b1:	pop	rbp
0x44d8b2:	pop	r12
0x44d8b4:	pop	r13
0x44d8b6:	pop	r14
0x44d8b8:	jmp	0x44b920
0x44d8bd:	nop	dword ptr [rax]
0x44d8c0:	add	rax, 1
0x44d8c4:	mov	rdi, rbp
0x44d8c7:	mov	qword ptr [rbp + 0x18], rax
0x44d8cb:	call	0x44d420
0x44d8d0:	mov	rdx, r12
0x44d8d3:	mov	esi, 4
0x44d8d8:	mov	rdi, rbp
0x44d8db:	mov	rcx, rax
0x44d8de:	pop	rbx
0x44d8df:	pop	rbp
0x44d8e0:	pop	r12
0x44d8e2:	pop	r13
0x44d8e4:	pop	r14
0x44d8e6:	jmp	0x44b100
0x44d8eb:	nop	dword ptr [rax + rax]
0x44d8f0:	mov	rdx, qword ptr [r12 + 0x10]
0x44d8f5:	mov	rbx, qword ptr [rdx]
0x44d8f8:	mov	eax, dword ptr [rdx + 0x10]
0x44d8fb:	sub	eax, 2
0x44d8fe:	add	dword ptr [rbp + 0x48], eax
0x44d901:	movzx	eax, byte ptr [rbx]
0x44d904:	cmp	eax, 0x73
0x44d907:	je	0x44d9b0
0x44d90d:	mov	r13d, dword ptr [rdx + 0x14]
0x44d911:	cmp	r13d, 1
0x44d915:	je	0x44da70
0x44d91b:	jle	0x44d828
0x44d921:	cmp	r13d, 2
0x44d925:	je	0x44dc00
0x44d92b:	cmp	r13d, 3
0x44d92f:	jne	0x44d82d
0x44d935:	cmp	eax, 0x71
0x44d938:	jne	0x44dcb0
0x44d93e:	cmp	byte ptr [rbx + 1], 0x75
0x44d942:	jne	0x44dcb0
0x44d948:	cmp	byte ptr [rbx + 2], 0
0x44d94c:	jne	0x44dcb0
0x44d952:	mov	rdi, rbp
0x44d955:	call	0x44d6b0
0x44d95a:	mov	rdi, rbp
0x44d95d:	mov	r13, rax
0x44d960:	call	0x44d6b0
0x44d965:	mov	rdi, rbp
0x44d968:	mov	r14, rax
0x44d96b:	call	0x44d6b0
0x44d970:	mov	rcx, rax
0x44d973:	test	rax, rax
0x44d976:	je	0x44d82d
0x44d97c:	mov	rdx, r14
0x44d97f:	mov	esi, 0x3c
0x44d984:	mov	rdi, rbp
0x44d987:	call	0x44b100
0x44d98c:	mov	rdx, r13
0x44d98f:	mov	esi, 0x3b
0x44d994:	mov	rcx, rax
0x44d997:	call	0x44b100
0x44d99c:	mov	rdx, r12
0x44d99f:	mov	esi, 0x3a
0x44d9a4:	mov	rcx, rax
0x44d9a7:	jmp	0x44d8de
0x44d9ac:	nop	dword ptr [rax]
0x44d9b0:	cmp	byte ptr [rbx + 1], 0x74
0x44d9b4:	jne	0x44d90d
0x44d9ba:	cmp	byte ptr [rbx + 2], 0
0x44d9be:	jne	0x44d90d
0x44d9c4:	mov	rdi, rbp
0x44d9c7:	call	0x44bdc0
0x44d9cc:	mov	rdx, r12
0x44d9cf:	mov	esi, 0x37
0x44d9d4:	mov	rdi, rbp
0x44d9d7:	mov	rcx, rax
0x44d9da:	jmp	0x44d8de
0x44d9df:	nop	
0x44d9e0:	add	rdx, 3
0x44d9e4:	mov	eax, 1
0x44d9e9:	mov	qword ptr [rdi + 0x18], rdx
0x44d9ed:	jmp	0x44d782
0x44d9f2:	nop	word ptr [rax + rax]
0x44d9f8:	add	rdx, 2
0x44d9fc:	xor	r12d, r12d
0x44d9ff:	mov	qword ptr [rbp + 0x18], rdx
0x44da03:	cmp	al, 0x74
0x44da05:	je	0x44dc96
0x44da0b:	cmp	byte ptr [rdx], 0
0x44da0e:	je	0x44d82d
0x44da14:	cmp	byte ptr [rdx + 1], 0
0x44da18:	je	0x44d82d
0x44da1e:	mov	esi, 0x45
0x44da23:	mov	rdi, rbp
0x44da26:	call	0x44ded0
0x44da2b:	mov	rdx, r12
0x44da2e:	mov	esi, 0x31
0x44da33:	mov	rdi, rbp
0x44da36:	mov	rcx, rax
0x44da39:	jmp	0x44d8de
0x44da3e:	nop	
0x44da40:	cmp	eax, 1
0x44da43:	jne	0x44d82d
0x44da49:	mov	rdi, rbp
0x44da4c:	call	0x44d6b0
0x44da51:	mov	rcx, rax
0x44da54:	nop	dword ptr [rax]
0x44da58:	mov	rdx, r12
0x44da5b:	mov	esi, 0x37
0x44da60:	mov	rdi, rbp
0x44da63:	jmp	0x44d8de
0x44da68:	nop	dword ptr [rax + rax]
0x44da70:	movzx	edx, byte ptr [rbx]
0x44da73:	cmp	dl, 0x70
0x44da76:	je	0x44dbd0
0x44da7c:	cmp	dl, 0x6d
0x44da7f:	je	0x44dbd0
0x44da85:	xor	r13d, r13d
0x44da88:	cmp	eax, 0x73
0x44da8b:	jne	0x44dba0
0x44da91:	cmp	byte ptr [rbx + 1], 0x50
0x44da95:	jne	0x44dba0
0x44da9b:	cmp	byte ptr [rbx + 2], 0
0x44da9f:	jne	0x44dba0
0x44daa5:	mov	rdi, rbp
0x44daa8:	call	0x44d420
0x44daad:	mov	rcx, rax
0x44dab0:	test	r13d, r13d
0x44dab3:	je	0x44da58
0x44dab5:	mov	rdx, rcx
0x44dab8:	mov	esi, 0x39
0x44dabd:	mov	rdi, rbp
0x44dac0:	call	0x44b100
0x44dac5:	mov	rcx, rax
0x44dac8:	jmp	0x44da58
0x44daca:	nop	word ptr [rax + rax]
0x44dad0:	lea	rax, [rdx + 2]
0x44dad4:	mov	qword ptr [rdi + 0x18], rax
0x44dad8:	movzx	eax, byte ptr [rdx + 2]
0x44dadc:	mov	edx, dword ptr [rdi + 0x54]
0x44dadf:	test	edx, edx
0x44dae1:	je	0x44dbb8
0x44dae7:	cmp	al, 0x39
0x44dae9:	jle	0x44dbb0
0x44daef:	sub	eax, 0x43
0x44daf2:	cmp	al, 0x37
0x44daf4:	ja	0x44dbb8
0x44dafa:	movabs	rdx, 0xffffffc0040201
0x44db04:	bt	rdx, rax
0x44db08:	jae	0x44dbb8
0x44db0e:	mov	dword ptr [rbp + 0x54], 0xffffffff
0x44db15:	xor	esi, esi
0x44db17:	mov	rdi, rbp
0x44db1a:	call	0x44d500
0x44db1f:	mov	r13, rax
0x44db22:	mov	rax, qword ptr [rbp + 0x18]
0x44db26:	cmp	byte ptr [rax], 0x45
0x44db29:	jne	0x44db38
0x44db2b:	add	rax, 1
0x44db2f:	mov	qword ptr [rbp + 0x18], rax
0x44db33:	nop	dword ptr [rax + rax]
0x44db38:	mov	rdi, rbp
0x44db3b:	call	0x44cca0
0x44db40:	mov	r12, rax
0x44db43:	mov	rax, qword ptr [rbp + 0x18]
0x44db47:	cmp	byte ptr [rax], 0x49
0x44db4a:	je	0x44ddea
0x44db50:	mov	rcx, r12
0x44db53:	mov	rdx, r13
0x44db56:	mov	esi, 1
0x44db5b:	mov	rdi, rbp
0x44db5e:	jmp	0x44d8de
0x44db63:	nop	dword ptr [rax + rax]
0x44db68:	add	rdx, 2
0x44db6c:	mov	qword ptr [rdi + 0x18], rdx
0x44db70:	call	0x44d6b0
0x44db75:	xor	ecx, ecx
0x44db77:	mov	esi, 0x4c
0x44db7c:	mov	rdi, rbp
0x44db7f:	mov	rdx, rax
0x44db82:	jmp	0x44d8de
0x44db87:	nop	word ptr [rax + rax]
0x44db90:	add	rdx, 3
0x44db94:	xor	eax, eax
0x44db96:	mov	qword ptr [rdi + 0x18], rdx
0x44db9a:	jmp	0x44d782
0x44db9f:	nop	
0x44dba0:	mov	rdi, rbp
0x44dba3:	call	0x44d6b0
0x44dba8:	mov	rcx, rax
0x44dbab:	jmp	0x44dab0
0x44dbb0:	cmp	al, 0x2f
0x44dbb2:	jg	0x44db0e
0x44dbb8:	mov	rdi, rbp
0x44dbbb:	call	0x44bdc0
0x44dbc0:	mov	r13, rax
0x44dbc3:	jmp	0x44db38
0x44dbc8:	nop	dword ptr [rax + rax]
0x44dbd0:	cmp	dl, byte ptr [rbx + 1]
0x44dbd3:	jne	0x44da85
0x44dbd9:	mov	rdx, qword ptr [rbp + 0x18]
0x44dbdd:	cmp	byte ptr [rdx], 0x5f
0x44dbe0:	jne	0x44da88
0x44dbe6:	add	rdx, 1
0x44dbea:	xor	r13d, r13d
0x44dbed:	mov	qword ptr [rbp + 0x18], rdx
0x44dbf1:	movzx	eax, byte ptr [rbx]
0x44dbf4:	jmp	0x44da88
0x44dbf9:	nop	dword ptr [rax]
0x44dc00:	mov	rdx, qword ptr [r12 + 0x10]
0x44dc05:	mov	rdx, qword ptr [rdx]
0x44dc08:	cmp	byte ptr [rdx + 1], 0x63
0x44dc0c:	je	0x44de15
0x44dc12:	cmp	byte ptr [rbx], 0x66
0x44dc15:	je	0x44de7d
0x44dc1b:	cmp	eax, 0x64
0x44dc1e:	jne	0x44de61
0x44dc24:	cmp	byte ptr [rbx + 1], 0x69
0x44dc28:	jne	0x44de61
0x44dc2e:	cmp	byte ptr [rbx + 2], 0
0x44dc32:	jne	0x44de61
0x44dc38:	mov	rdi, rbp
0x44dc3b:	call	0x44cca0
0x44dc40:	mov	r14, rax
0x44dc43:	movzx	eax, byte ptr [rbx]
0x44dc46:	cmp	eax, 0x63
0x44dc49:	jne	0x44dd40
0x44dc4f:	cmp	byte ptr [rbx + 1], 0x6c
0x44dc53:	jne	0x44dd40
0x44dc59:	cmp	byte ptr [rbx + 2], 0
0x44dc5d:	jne	0x44dd40
0x44dc63:	mov	esi, 0x45
0x44dc68:	mov	rdi, rbp
0x44dc6b:	call	0x44ded0
0x44dc70:	mov	r13, rax
0x44dc73:	mov	rcx, r13
0x44dc76:	mov	rdx, r14
0x44dc79:	mov	esi, 0x39
0x44dc7e:	mov	rdi, rbp
0x44dc81:	call	0x44b100
0x44dc86:	mov	rdx, r12
0x44dc89:	mov	esi, 0x38
0x44dc8e:	mov	rcx, rax
0x44dc91:	jmp	0x44d8de
0x44dc96:	mov	rdi, rbp
0x44dc99:	call	0x44bdc0
0x44dc9e:	mov	rdx, qword ptr [rbp + 0x18]
0x44dca2:	mov	r12, rax
0x44dca5:	jmp	0x44da0b
0x44dcaa:	nop	word ptr [rax + rax]
0x44dcb0:	cmp	eax, 0x64
0x44dcb3:	jne	0x44dcc5
0x44dcb5:	cmp	byte ptr [rbx + 1], 0x58
0x44dcb9:	jne	0x44dcc5
0x44dcbb:	cmp	byte ptr [rbx + 2], 0
0x44dcbf:	je	0x44d952
0x44dcc5:	movzx	eax, byte ptr [rbx]
0x44dcc8:	cmp	al, 0x66
0x44dcca:	je	0x44de8d
0x44dcd0:	cmp	al, 0x6e
0x44dcd2:	jne	0x44d82d
0x44dcd8:	movzx	eax, byte ptr [rbx + 1]
0x44dcdc:	cmp	al, 0x77
0x44dcde:	je	0x44dce8
0x44dce0:	cmp	al, 0x61
0x44dce2:	jne	0x44d82d
0x44dce8:	mov	esi, 0x5f
0x44dced:	mov	rdi, rbp
0x44dcf0:	call	0x44ded0
0x44dcf5:	mov	rdi, rbp
0x44dcf8:	mov	r13, rax
0x44dcfb:	call	0x44bdc0
0x44dd00:	mov	r14, rax
0x44dd03:	mov	rax, qword ptr [rbp + 0x18]
0x44dd07:	movzx	edx, byte ptr [rax]
0x44dd0a:	cmp	dl, 0x45
0x44dd0d:	je	0x44dec1
0x44dd13:	cmp	dl, 0x70
0x44dd16:	je	0x44de9a
0x44dd1c:	cmp	dl, 0x69
0x44dd1f:	jne	0x44d82d
0x44dd25:	cmp	byte ptr [rax + 1], 0x6c
0x44dd29:	jne	0x44d82d
0x44dd2f:	mov	rdi, rbp
0x44dd32:	call	0x44d6b0
0x44dd37:	mov	rcx, rax
0x44dd3a:	jmp	0x44d97c
0x44dd3f:	nop	
0x44dd40:	cmp	eax, 0x64
0x44dd43:	jne	0x44de3c
0x44dd49:	cmp	byte ptr [rbx + 1], 0x74
0x44dd4d:	jne	0x44de3c
0x44dd53:	cmp	byte ptr [rbx + 2], 0
0x44dd57:	jne	0x44de3c
0x44dd5d:	mov	rax, qword ptr [rbp + 0x18]
0x44dd61:	movzx	edx, byte ptr [rax]
0x44dd64:	cmp	dl, 0x67
0x44dd67:	je	0x44de71
0x44dd6d:	cmp	dl, 0x73
0x44dd70:	jne	0x44dd7c
0x44dd72:	cmp	byte ptr [rax + 1], 0x72
0x44dd76:	je	0x44de51
0x44dd7c:	mov	rdi, rbp
0x44dd7f:	call	0x44cca0
0x44dd84:	mov	r13, rax
0x44dd87:	mov	rax, qword ptr [rbp + 0x18]
0x44dd8b:	cmp	byte ptr [rax], 0x49
0x44dd8e:	jne	0x44dc73
0x44dd94:	add	rax, 1
0x44dd98:	mov	rdi, rbp
0x44dd9b:	mov	qword ptr [rbp + 0x18], rax
0x44dd9f:	call	0x44d420
0x44dda4:	mov	rdx, r13
0x44dda7:	mov	esi, 4
0x44ddac:	mov	rdi, rbp
0x44ddaf:	mov	rcx, rax
0x44ddb2:	call	0x44b100
0x44ddb7:	mov	r13, rax
0x44ddba:	jmp	0x44dc73
0x44ddbf:	nop	
0x44ddc0:	mov	rax, qword ptr [rbp + 0x18]
0x44ddc4:	cmp	byte ptr [rax], 0x5f
0x44ddc7:	jne	0x44da49
0x44ddcd:	add	rax, 1
0x44ddd1:	mov	esi, 0x45
0x44ddd6:	mov	rdi, rbp
0x44ddd9:	mov	qword ptr [rbp + 0x18], rax
0x44dddd:	call	0x44ded0
0x44dde2:	mov	rcx, rax
0x44dde5:	jmp	0x44da58
0x44ddea:	add	rax, 1
0x44ddee:	mov	rdi, rbp
0x44ddf1:	mov	qword ptr [rbp + 0x18], rax
0x44ddf5:	call	0x44d420
0x44ddfa:	mov	rdx, r12
0x44ddfd:	mov	esi, 4
0x44de02:	mov	rdi, rbp
0x44de05:	mov	rcx, rax
0x44de08:	call	0x44b100
0x44de0d:	mov	r12, rax
0x44de10:	jmp	0x44db50
0x44de15:	movzx	edx, byte ptr [rdx]
0x44de18:	lea	ecx, [rdx - 0x63]
0x44de1b:	cmp	cl, 1
0x44de1e:	jbe	0x44de2c
0x44de20:	sub	edx, 0x72
0x44de23:	cmp	dl, 1
0x44de26:	ja	0x44dc12
0x44de2c:	mov	rdi, rbp
0x44de2f:	call	0x44bdc0
0x44de34:	mov	r14, rax
0x44de37:	jmp	0x44dc43
0x44de3c:	cmp	eax, 0x70
0x44de3f:	jne	0x44de51
0x44de41:	cmp	byte ptr [rbx + 1], 0x74
0x44de45:	jne	0x44de51
0x44de47:	cmp	byte ptr [rbx + 2], 0
0x44de4b:	je	0x44dd5d
0x44de51:	mov	rdi, rbp
0x44de54:	call	0x44d6b0
0x44de59:	mov	r13, rax
0x44de5c:	jmp	0x44dc73
0x44de61:	mov	rdi, rbp
0x44de64:	call	0x44d6b0
0x44de69:	mov	r14, rax
0x44de6c:	jmp	0x44dc43
0x44de71:	cmp	byte ptr [rax + 1], 0x73
0x44de75:	jne	0x44dd7c
0x44de7b:	jmp	0x44de51
0x44de7d:	mov	rdi, rbp
0x44de80:	call	0x44cb00
0x44de85:	mov	r14, rax
0x44de88:	jmp	0x44dc43
0x44de8d:	mov	rdi, rbp
0x44de90:	call	0x44cb00
0x44de95:	jmp	0x44d95a
0x44de9a:	cmp	byte ptr [rax + 1], 0x69
0x44de9e:	jne	0x44d82d
0x44dea4:	add	rax, 2
0x44dea8:	mov	esi, 0x45
0x44dead:	mov	rdi, rbp
0x44deb0:	mov	qword ptr [rbp + 0x18], rax
0x44deb4:	call	0x44ded0
0x44deb9:	mov	rcx, rax
0x44debc:	jmp	0x44d97c
0x44dec1:	add	rax, 1
0x44dec5:	xor	ecx, ecx
0x44dec7:	mov	qword ptr [rbp + 0x18], rax
0x44decb:	jmp	0x44d97c
0x44ded0:	push	r13
0x44ded2:	push	r12
0x44ded4:	mov	r12d, esi
0x44ded7:	push	rbp
0x44ded8:	mov	rbp, rdi
0x44dedb:	push	rbx
0x44dedc:	sub	rsp, 0x18
0x44dee0:	mov	rax, qword ptr fs:[0x28]
0x44dee9:	mov	qword ptr [rsp + 8], rax
0x44deee:	xor	eax, eax
0x44def0:	mov	rax, qword ptr [rdi + 0x18]
0x44def4:	mov	rbx, rsp
0x44def7:	mov	qword ptr [rsp], 0
0x44deff:	cmp	byte ptr [rax], sil
0x44df02:	jne	0x44df34
0x44df04:	jmp	0x44df80
0x44df06:	nop	word ptr cs:[rax + rax]
0x44df10:	xor	ecx, ecx
0x44df12:	mov	esi, 0x2e
0x44df17:	mov	rdi, rbp
0x44df1a:	call	0x44b100
0x44df1f:	mov	qword ptr [rbx], rax
0x44df22:	test	rax, rax
0x44df25:	je	0x44df53
0x44df27:	lea	rbx, [rax + 0x18]
0x44df2b:	mov	rax, qword ptr [rbp + 0x18]
0x44df2f:	cmp	byte ptr [rax], r12b
0x44df32:	je	0x44df70
0x44df34:	mov	r13d, dword ptr [rbp + 0x4c]
0x44df38:	mov	dword ptr [rbp + 0x4c], 1
0x44df3f:	mov	rdi, rbp
0x44df42:	call	0x44d6b0
0x44df47:	mov	dword ptr [rbp + 0x4c], r13d
0x44df4b:	mov	rdx, rax
0x44df4e:	test	rax, rax
0x44df51:	jne	0x44df10
0x44df53:	xor	eax, eax
0x44df55:	mov	rdx, qword ptr [rsp + 8]
0x44df5a:	sub	rdx, qword ptr fs:[0x28]
0x44df63:	jne	0x44dfb0
0x44df65:	add	rsp, 0x18
0x44df69:	pop	rbx
0x44df6a:	pop	rbp
0x44df6b:	pop	r12
0x44df6d:	pop	r13
0x44df6f:	ret	
0x44df70:	add	rax, 1
0x44df74:	mov	qword ptr [rbp + 0x18], rax
0x44df78:	mov	rax, qword ptr [rsp]
0x44df7c:	jmp	0x44df55
0x44df7e:	nop	
0x44df80:	add	rax, 1
0x44df84:	mov	qword ptr [rdi + 0x18], rax
0x44df88:	mov	rax, qword ptr [rsp + 8]
0x44df8d:	sub	rax, qword ptr fs:[0x28]
0x44df96:	jne	0x44dfb0
0x44df98:	add	rsp, 0x18
0x44df9c:	xor	ecx, ecx
0x44df9e:	xor	edx, edx
0x44dfa0:	mov	esi, 0x2e
0x44dfa5:	pop	rbx
0x44dfa6:	pop	rbp
0x44dfa7:	pop	r12
0x44dfa9:	pop	r13
0x44dfab:	jmp	0x44b100
0x44dfb0:	call	0x4039f0
0x44dfb5:	nop	word ptr cs:[rax + rax]
0x44dfc0:	push	r15
0x44dfc2:	mov	r15, rdi
0x44dfc5:	push	r14
0x44dfc7:	push	r13
0x44dfc9:	push	r12
0x44dfcb:	push	rbp
0x44dfcc:	push	rbx
0x44dfcd:	mov	rbx, rsi
0x44dfd0:	mov	r12, rbx
0x44dfd3:	sub	rsp, 0x18
0x44dfd7:	cmp	edx, 1
0x44dfda:	mov	rsi, qword ptr [rdi + 0x18]
0x44dfde:	sbb	r14d, r14d
0x44dfe1:	mov	dword ptr [rsp + 8], edx
0x44dfe5:	and	r14d, 0xfffffffd
0x44dfe9:	mov	rdi, rsi
0x44dfec:	movzx	r9d, byte ptr [rsi]
0x44dff0:	add	r14d, 0x1e
0x44dff4:	cmp	edx, 1
0x44dff7:	sbb	r13d, r13d
0x44dffa:	and	r13d, 0xfffffffd
0x44dffe:	add	r13d, 0x1d
0x44e002:	cmp	edx, 1
0x44e005:	sbb	ebp, ebp
0x44e007:	and	ebp, 0xfffffffd
0x44e00a:	add	ebp, 0x1c
0x44e00d:	call	0x44b650
0x44e012:	test	eax, eax
0x44e014:	je	0x44e110
0x44e01a:	nop	word ptr [rax + rax]
0x44e020:	lea	rax, [rsi + 1]
0x44e024:	mov	qword ptr [r15 + 0x18], rax
0x44e028:	cmp	r9b, 0x72
0x44e02c:	je	0x44e0d8
0x44e032:	cmp	r9b, 0x56
0x44e036:	je	0x44e150
0x44e03c:	cmp	r9b, 0x4b
0x44e040:	je	0x44e160
0x44e046:	cmp	byte ptr [rsi + 1], 0
0x44e04a:	je	0x44e0c0
0x44e04c:	lea	rax, [rsi + 2]
0x44e050:	mov	qword ptr [r15 + 0x18], rax
0x44e054:	movzx	eax, byte ptr [rsi + 1]
0x44e058:	cmp	al, 0x78
0x44e05a:	je	0x44e170
0x44e060:	mov	edx, eax
0x44e062:	and	edx, 0xffffffdf
0x44e065:	cmp	dl, 0x4f
0x44e068:	jne	0x44e188
0x44e06e:	add	dword ptr [r15 + 0x48], 9
0x44e073:	cmp	al, 0x4f
0x44e075:	jne	0x44e1d0
0x44e07b:	mov	edx, dword ptr [r15 + 0x4c]
0x44e07f:	mov	dword ptr [r15 + 0x4c], 1
0x44e087:	mov	rdi, r15
0x44e08a:	mov	dword ptr [rsp + 0xc], edx
0x44e08e:	call	0x44d6b0
0x44e093:	mov	edx, dword ptr [rsp + 0xc]
0x44e097:	mov	rcx, rax
0x44e09a:	mov	dword ptr [r15 + 0x4c], edx
0x44e09e:	test	rax, rax
0x44e0a1:	je	0x44e0c0
0x44e0a3:	mov	rax, qword ptr [r15 + 0x18]
0x44e0a7:	cmp	byte ptr [rax], 0x45
0x44e0aa:	jne	0x44e0c0
0x44e0ac:	add	rax, 1
0x44e0b0:	mov	esi, 0x50
0x44e0b5:	mov	qword ptr [r15 + 0x18], rax
0x44e0b9:	jmp	0x44e0e1
0x44e0bb:	nop	dword ptr [rax + rax]
0x44e0c0:	xor	r12d, r12d
0x44e0c3:	add	rsp, 0x18
0x44e0c7:	mov	rax, r12
0x44e0ca:	pop	rbx
0x44e0cb:	pop	rbp
0x44e0cc:	pop	r12
0x44e0ce:	pop	r13
0x44e0d0:	pop	r14
0x44e0d2:	pop	r15
0x44e0d4:	ret	
0x44e0d5:	nop	dword ptr [rax]
0x44e0d8:	add	dword ptr [r15 + 0x48], 9
0x44e0dd:	mov	esi, ebp
0x44e0df:	xor	ecx, ecx
0x44e0e1:	xor	edx, edx
0x44e0e3:	mov	rdi, r15
0x44e0e6:	call	0x44b100
0x44e0eb:	mov	qword ptr [r12], rax
0x44e0ef:	test	rax, rax
0x44e0f2:	je	0x44e0c0
0x44e0f4:	mov	rsi, qword ptr [r15 + 0x18]
0x44e0f8:	lea	r12, [rax + 0x10]
0x44e0fc:	mov	rdi, rsi
0x44e0ff:	movzx	r9d, byte ptr [rsi]
0x44e103:	call	0x44b650
0x44e108:	test	eax, eax
0x44e10a:	jne	0x44e020
0x44e110:	test	byte ptr [rsp + 8], 1
0x44e115:	jne	0x44e0c3
0x44e117:	cmp	r9b, 0x46
0x44e11b:	je	0x44e12d
0x44e11d:	jmp	0x44e0c3
0x44e11f:	nop	
0x44e120:	cmp	eax, 0x19
0x44e123:	je	0x44e1f0
0x44e129:	add	rbx, 0x10
0x44e12d:	cmp	r12, rbx
0x44e130:	je	0x44e0c3
0x44e132:	mov	rbx, qword ptr [rbx]
0x44e135:	mov	eax, dword ptr [rbx]
0x44e137:	cmp	eax, 0x1a
0x44e13a:	je	0x44e1e0
0x44e140:	cmp	eax, 0x1b
0x44e143:	jne	0x44e120
0x44e145:	mov	dword ptr [rbx], 0x1e
0x44e14b:	jmp	0x44e129
0x44e14d:	nop	dword ptr [rax]
0x44e150:	add	dword ptr [r15 + 0x48], 9
0x44e155:	mov	esi, r13d
0x44e158:	xor	ecx, ecx
0x44e15a:	jmp	0x44e0e1
0x44e15c:	nop	dword ptr [rax]
0x44e160:	add	dword ptr [r15 + 0x48], 6
0x44e165:	mov	esi, r14d
0x44e168:	xor	ecx, ecx
0x44e16a:	jmp	0x44e0e1
0x44e16f:	nop	
0x44e170:	add	dword ptr [r15 + 0x48], 0x11
0x44e175:	xor	ecx, ecx
0x44e177:	mov	esi, 0x4e
0x44e17c:	jmp	0x44e0e1
0x44e181:	nop	dword ptr [rax]
0x44e188:	cmp	al, 0x77
0x44e18a:	jne	0x44e0c0
0x44e190:	add	dword ptr [r15 + 0x48], 6
0x44e195:	mov	rdi, r15
0x44e198:	call	0x44c8e0
0x44e19d:	mov	rcx, rax
0x44e1a0:	test	rax, rax
0x44e1a3:	je	0x44e0c0
0x44e1a9:	mov	rax, qword ptr [r15 + 0x18]
0x44e1ad:	cmp	byte ptr [rax], 0x45
0x44e1b0:	jne	0x44e0c0
0x44e1b6:	add	rax, 1
0x44e1ba:	mov	esi, 0x51
0x44e1bf:	mov	qword ptr [r15 + 0x18], rax
0x44e1c3:	jmp	0x44e0e1
0x44e1c8:	nop	dword ptr [rax + rax]
0x44e1d0:	xor	ecx, ecx
0x44e1d2:	mov	esi, 0x50
0x44e1d7:	jmp	0x44e0e1
0x44e1dc:	nop	dword ptr [rax]
0x44e1e0:	mov	dword ptr [rbx], 0x1d
0x44e1e6:	jmp	0x44e129
0x44e1eb:	nop	dword ptr [rax + rax]
0x44e1f0:	mov	dword ptr [rbx], 0x1c
0x44e1f6:	jmp	0x44e129
0x44e1fb:	nop	dword ptr [rax + rax]
0x44e200:	push	r12
0x44e202:	push	rbp
0x44e203:	mov	rbp, rdi
0x44e206:	push	rbx
0x44e207:	mov	ecx, dword ptr [rdi + 0x48]
0x44e20a:	lea	eax, [rcx + 0x14]
0x44e20d:	mov	dword ptr [rdi + 0x48], eax
0x44e210:	mov	rax, qword ptr [rdi + 0x18]
0x44e214:	movzx	edx, byte ptr [rax]
0x44e217:	cmp	dl, 0x54
0x44e21a:	je	0x44e350
0x44e220:	cmp	dl, 0x47
0x44e223:	jne	0x44e371
0x44e229:	lea	rdx, [rax + 1]
0x44e22d:	mov	qword ptr [rdi + 0x18], rdx
0x44e231:	cmp	byte ptr [rax + 1], 0
0x44e235:	je	0x44e371
0x44e23b:	lea	rdx, [rax + 2]
0x44e23f:	mov	qword ptr [rdi + 0x18], rdx
0x44e243:	movzx	edx, byte ptr [rax + 1]
0x44e247:	cmp	dl, 0x54
0x44e24a:	je	0x44e438
0x44e250:	jle	0x44e380
0x44e256:	cmp	dl, 0x56
0x44e259:	je	0x44e420
0x44e25f:	cmp	dl, 0x72
0x44e262:	jne	0x44e371
0x44e268:	call	0x44b230
0x44e26d:	cmp	eax, 1
0x44e270:	jle	0x44e371
0x44e276:	mov	rdx, qword ptr [rbp + 0x18]
0x44e27a:	cmp	byte ptr [rdx], 0
0x44e27d:	je	0x44e371
0x44e283:	lea	r9, [rdx + 1]
0x44e287:	mov	qword ptr [rbp + 0x18], r9
0x44e28b:	cmp	byte ptr [rdx], 0x5f
0x44e28e:	jne	0x44e371
0x44e294:	lea	r10d, [rax - 1]
0x44e298:	xor	r11d, r11d
0x44e29b:	movzx	eax, byte ptr [r9]
0x44e29f:	test	al, al
0x44e2a1:	je	0x44e371
0x44e2a7:	cmp	al, 0x24
0x44e2a9:	jne	0x44e6a8
0x44e2af:	movzx	eax, byte ptr [r9 + 1]
0x44e2b4:	cmp	al, 0x53
0x44e2b6:	je	0x44e738
0x44e2bc:	cmp	al, 0x5f
0x44e2be:	je	0x44e710
0x44e2c4:	cmp	al, 0x24
0x44e2c6:	jne	0x44e371
0x44e2cc:	mov	edx, 0x24
0x44e2d1:	mov	rbx, qword ptr [rbp + 0x18]
0x44e2d5:	mov	eax, dword ptr [rbp + 0x28]
0x44e2d8:	lea	r9, [rbx + 2]
0x44e2dc:	cmp	eax, dword ptr [rbp + 0x2c]
0x44e2df:	jge	0x44e748
0x44e2e5:	movsxd	rcx, eax
0x44e2e8:	add	eax, 1
0x44e2eb:	sub	r10d, 2
0x44e2ef:	shl	rcx, 5
0x44e2f3:	add	rcx, qword ptr [rbp + 0x20]
0x44e2f7:	mov	qword ptr [rcx + 4], 0
0x44e2ff:	mov	dword ptr [rbp + 0x28], eax
0x44e302:	mov	dword ptr [rcx], 0x42
0x44e308:	mov	dword ptr [rcx + 0x10], edx
0x44e30b:	mov	qword ptr [rbp + 0x18], r9
0x44e30f:	test	r11, r11
0x44e312:	je	0x44e700
0x44e318:	mov	rdx, r11
0x44e31b:	mov	esi, 0x41
0x44e320:	mov	rdi, rbp
0x44e323:	call	0x44b100
0x44e328:	mov	r11, rax
0x44e32b:	test	rax, rax
0x44e32e:	je	0x44e371
0x44e330:	test	r10d, r10d
0x44e333:	jg	0x44e29b
0x44e339:	xor	ecx, ecx
0x44e33b:	mov	rdx, r11
0x44e33e:	mov	esi, 0x40
0x44e343:	jmp	0x44e3d7
0x44e348:	nop	dword ptr [rax + rax]
0x44e350:	lea	rdx, [rax + 1]
0x44e354:	mov	qword ptr [rdi + 0x18], rdx
0x44e358:	cmp	byte ptr [rax + 1], 0
0x44e35c:	je	0x44e371
0x44e35e:	lea	rdx, [rax + 2]
0x44e362:	mov	qword ptr [rdi + 0x18], rdx
0x44e366:	movzx	eax, byte ptr [rax + 1]
0x44e36a:	sub	eax, 0x41
0x44e36d:	cmp	al, 0x35
0x44e36f:	jbe	0x44e3e8
0x44e371:	pop	rbx
0x44e372:	xor	eax, eax
0x44e374:	pop	rbp
0x44e375:	pop	r12
0x44e377:	ret	
0x44e378:	nop	dword ptr [rax + rax]
0x44e380:	cmp	dl, 0x41
0x44e383:	je	0x44e400
0x44e385:	cmp	dl, 0x52
0x44e388:	jne	0x44e371
0x44e38a:	call	0x44e7a0
0x44e38f:	mov	ecx, dword ptr [rbp + 0x28]
0x44e392:	mov	r12, rax
0x44e395:	cmp	ecx, dword ptr [rbp + 0x2c]
0x44e398:	jge	0x44e490
0x44e39e:	movsxd	r11, ecx
0x44e3a1:	add	ecx, 1
0x44e3a4:	mov	rdi, rbp
0x44e3a7:	shl	r11, 5
0x44e3ab:	add	r11, qword ptr [rbp + 0x20]
0x44e3af:	mov	qword ptr [r11 + 4], 0
0x44e3b7:	mov	dword ptr [rbp + 0x28], ecx
0x44e3ba:	mov	dword ptr [r11], 0x43
0x44e3c1:	call	0x44b230
0x44e3c6:	cdqe	
0x44e3c8:	mov	qword ptr [r11 + 0x10], rax
0x44e3cc:	mov	rcx, r11
0x44e3cf:	mov	rdx, r12
0x44e3d2:	mov	esi, 0x16
0x44e3d7:	pop	rbx
0x44e3d8:	mov	rdi, rbp
0x44e3db:	pop	rbp
0x44e3dc:	pop	r12
0x44e3de:	jmp	0x44b100
0x44e3e3:	nop	dword ptr [rax + rax]
0x44e3e8:	lea	rdx, [rip + 0x7ed31]
0x44e3ef:	movzx	eax, al
0x44e3f2:	movsxd	rax, dword ptr [rdx + rax*4]
0x44e3f6:	add	rax, rdx
0x44e3f9:	notrack jmp	rax
0x44e3fc:	nop	dword ptr [rax]
0x44e400:	movzx	eax, byte ptr [rax + 2]
0x44e404:	cmp	al, 0x47
0x44e406:	je	0x44e480
0x44e408:	cmp	al, 0x54
0x44e40a:	je	0x44e480
0x44e40c:	xor	esi, esi
0x44e40e:	call	0x44ec50
0x44e413:	mov	rdx, rax
0x44e416:	xor	ecx, ecx
0x44e418:	mov	esi, 0x17
0x44e41d:	jmp	0x44e3d7
0x44e41f:	nop	
0x44e420:	call	0x44e7a0
0x44e425:	xor	ecx, ecx
0x44e427:	mov	esi, 0x13
0x44e42c:	mov	rdx, rax
0x44e42f:	jmp	0x44e3d7
0x44e431:	nop	dword ptr [rax]
0x44e438:	cmp	byte ptr [rax + 2], 0
0x44e43c:	je	0x44e720
0x44e442:	lea	rdx, [rax + 3]
0x44e446:	mov	qword ptr [rdi + 0x18], rdx
0x44e44a:	cmp	byte ptr [rax + 2], 0x6e
0x44e44e:	movzx	eax, byte ptr [rax + 3]
0x44e452:	je	0x44e4a0
0x44e454:	cmp	al, 0x47
0x44e456:	je	0x44e460
0x44e458:	cmp	al, 0x54
0x44e45a:	jne	0x44e720
0x44e460:	mov	rdi, rbp
0x44e463:	call	0x44e200
0x44e468:	mov	rdx, rax
0x44e46b:	xor	ecx, ecx
0x44e46d:	mov	esi, 0x4a
0x44e472:	jmp	0x44e3d7
0x44e477:	nop	word ptr [rax + rax]
0x44e480:	mov	rdi, rbp
0x44e483:	call	0x44e200
0x44e488:	mov	rdx, rax
0x44e48b:	jmp	0x44e416
0x44e48d:	nop	dword ptr [rax]
0x44e490:	xor	r11d, r11d
0x44e493:	jmp	0x44e3cc
0x44e498:	nop	dword ptr [rax + rax]
0x44e4a0:	cmp	al, 0x47
0x44e4a2:	je	0x44e771
0x44e4a8:	cmp	al, 0x54
0x44e4aa:	je	0x44e771
0x44e4b0:	xor	esi, esi
0x44e4b2:	call	0x44ec50
0x44e4b7:	mov	rdx, rax
0x44e4ba:	xor	ecx, ecx
0x44e4bc:	mov	esi, 0x4b
0x44e4c1:	jmp	0x44e3d7
0x44e4c6:	call	0x44bdc0
0x44e4cb:	xor	ecx, ecx
0x44e4cd:	mov	esi, 0xc
0x44e4d2:	mov	rdx, rax
0x44e4d5:	jmp	0x44e3d7
0x44e4da:	call	0x44bdc0
0x44e4df:	xor	ecx, ecx
0x44e4e1:	mov	esi, 0xe
0x44e4e6:	mov	rdx, rax
0x44e4e9:	jmp	0x44e3d7
0x44e4ee:	call	0x44bdc0
0x44e4f3:	mov	rdi, rbp
0x44e4f6:	mov	r12, rax
0x44e4f9:	call	0x44b230
0x44e4fe:	test	eax, eax
0x44e500:	js	0x44e371
0x44e506:	mov	rax, qword ptr [rbp + 0x18]
0x44e50a:	cmp	byte ptr [rax], 0x5f
0x44e50d:	jne	0x44e371
0x44e513:	add	rax, 1
0x44e517:	mov	rdi, rbp
0x44e51a:	mov	qword ptr [rbp + 0x18], rax
0x44e51e:	call	0x44bdc0
0x44e523:	add	dword ptr [rbp + 0x48], 5
0x44e527:	mov	rcx, r12
0x44e52a:	mov	esi, 0xb
0x44e52f:	mov	rdx, rax
0x44e532:	jmp	0x44e3d7
0x44e537:	call	0x44e7a0
0x44e53c:	xor	ecx, ecx
0x44e53e:	mov	esi, 0x14
0x44e543:	mov	rdx, rax
0x44e546:	jmp	0x44e3d7
0x44e54b:	call	0x44d3a0
0x44e550:	xor	ecx, ecx
0x44e552:	mov	esi, 0x30
0x44e557:	mov	rdx, rax
0x44e55a:	jmp	0x44e3d7
0x44e55f:	mov	esi, 0x76
0x44e564:	call	0x44b2f0
0x44e569:	test	eax, eax
0x44e56b:	je	0x44e371
0x44e571:	mov	rax, qword ptr [rbp + 0x18]
0x44e575:	movzx	eax, byte ptr [rax]
0x44e578:	cmp	al, 0x47
0x44e57a:	je	0x44e751
0x44e580:	cmp	al, 0x54
0x44e582:	je	0x44e751
0x44e588:	xor	esi, esi
0x44e58a:	mov	rdi, rbp
0x44e58d:	call	0x44ec50
0x44e592:	mov	rdx, rax
0x44e595:	xor	ecx, ecx
0x44e597:	mov	esi, 0x10
0x44e59c:	jmp	0x44e3d7
0x44e5a1:	mov	esi, 0x68
0x44e5a6:	call	0x44b2f0
0x44e5ab:	test	eax, eax
0x44e5ad:	je	0x44e371
0x44e5b3:	mov	rax, qword ptr [rbp + 0x18]
0x44e5b7:	movzx	eax, byte ptr [rax]
0x44e5ba:	cmp	al, 0x47
0x44e5bc:	je	0x44e761
0x44e5c2:	cmp	al, 0x54
0x44e5c4:	je	0x44e761
0x44e5ca:	xor	esi, esi
0x44e5cc:	mov	rdi, rbp
0x44e5cf:	call	0x44ec50
0x44e5d4:	mov	rdx, rax
0x44e5d7:	xor	ecx, ecx
0x44e5d9:	mov	esi, 0xf
0x44e5de:	jmp	0x44e3d7
0x44e5e3:	xor	esi, esi
0x44e5e5:	call	0x44b2f0
0x44e5ea:	test	eax, eax
0x44e5ec:	je	0x44e371
0x44e5f2:	xor	esi, esi
0x44e5f4:	mov	rdi, rbp
0x44e5f7:	call	0x44b2f0
0x44e5fc:	test	eax, eax
0x44e5fe:	je	0x44e371
0x44e604:	mov	rax, qword ptr [rbp + 0x18]
0x44e608:	movzx	eax, byte ptr [rax]
0x44e60b:	cmp	al, 0x47
0x44e60d:	je	0x44e781
0x44e613:	cmp	al, 0x54
0x44e615:	je	0x44e781
0x44e61b:	xor	esi, esi
0x44e61d:	mov	rdi, rbp
0x44e620:	call	0x44ec50
0x44e625:	mov	rdx, rax
0x44e628:	xor	ecx, ecx
0x44e62a:	mov	esi, 0x11
0x44e62f:	jmp	0x44e3d7
0x44e634:	call	0x44e7a0
0x44e639:	xor	ecx, ecx
0x44e63b:	mov	esi, 0x15
0x44e640:	mov	rdx, rax
0x44e643:	jmp	0x44e3d7
0x44e648:	add	ecx, 0xf
0x44e64b:	mov	dword ptr [rdi + 0x48], ecx
0x44e64e:	call	0x44bdc0
0x44e653:	xor	ecx, ecx
0x44e655:	mov	esi, 9
0x44e65a:	mov	rdx, rax
0x44e65d:	jmp	0x44e3d7
0x44e662:	add	ecx, 0xa
0x44e665:	mov	dword ptr [rdi + 0x48], ecx
0x44e668:	call	0x44bdc0
0x44e66d:	xor	ecx, ecx
0x44e66f:	mov	esi, 0xa
0x44e674:	mov	rdx, rax
0x44e677:	jmp	0x44e3d7
0x44e67c:	call	0x44bdc0
0x44e681:	xor	ecx, ecx
0x44e683:	mov	esi, 0xd
0x44e688:	mov	rdx, rax
0x44e68b:	jmp	0x44e3d7
0x44e690:	call	0x44bdc0
0x44e695:	xor	ecx, ecx
0x44e697:	mov	esi, 0x12
0x44e69c:	mov	rdx, rax
0x44e69f:	jmp	0x44e3d7
0x44e6a4:	nop	dword ptr [rax]
0x44e6a8:	mov	r8d, 1
0x44e6ae:	jmp	0x44e6c4
0x44e6b0:	movzx	eax, byte ptr [r9 + r8]
0x44e6b5:	lea	rdx, [r8 + 1]
0x44e6b9:	test	al, al
0x44e6bb:	je	0x44e6cc
0x44e6bd:	cmp	al, 0x24
0x44e6bf:	je	0x44e6cc
0x44e6c1:	mov	r8, rdx
0x44e6c4:	mov	ebx, r8d
0x44e6c7:	cmp	r10d, r8d
0x44e6ca:	jg	0x44e6b0
0x44e6cc:	mov	rsi, r9
0x44e6cf:	mov	edx, ebx
0x44e6d1:	mov	rdi, rbp
0x44e6d4:	sub	r10d, ebx
0x44e6d7:	call	0x44b1e0
0x44e6dc:	mov	r9, qword ptr [rbp + 0x18]
0x44e6e0:	mov	rcx, rax
0x44e6e3:	add	r9, r8
0x44e6e6:	mov	qword ptr [rbp + 0x18], r9
0x44e6ea:	test	rax, rax
0x44e6ed:	jne	0x44e30f
0x44e6f3:	jmp	0x44e371
0x44e6f8:	nop	dword ptr [rax + rax]
0x44e700:	mov	r11, rcx
0x44e703:	jmp	0x44e330
0x44e708:	nop	dword ptr [rax + rax]
0x44e710:	mov	edx, 0x2e
0x44e715:	jmp	0x44e2d1
0x44e71a:	nop	word ptr [rax + rax]
0x44e720:	xor	esi, esi
0x44e722:	mov	rdi, rbp
0x44e725:	call	0x44ec50
0x44e72a:	mov	rdx, rax
0x44e72d:	jmp	0x44e46b
0x44e732:	nop	word ptr [rax + rax]
0x44e738:	mov	edx, 0x2f
0x44e73d:	jmp	0x44e2d1
0x44e742:	nop	word ptr [rax + rax]
0x44e748:	mov	qword ptr [rbp + 0x18], r9
0x44e74c:	jmp	0x44e371
0x44e751:	mov	rdi, rbp
0x44e754:	call	0x44e200
0x44e759:	mov	rdx, rax
0x44e75c:	jmp	0x44e595
0x44e761:	mov	rdi, rbp
0x44e764:	call	0x44e200
0x44e769:	mov	rdx, rax
0x44e76c:	jmp	0x44e5d7
0x44e771:	mov	rdi, rbp
0x44e774:	call	0x44e200
0x44e779:	mov	rdx, rax
0x44e77c:	jmp	0x44e4ba
0x44e781:	mov	rdi, rbp
0x44e784:	call	0x44e200
0x44e789:	mov	rdx, rax
0x44e78c:	jmp	0x44e628
0x44e791:	nop	word ptr cs:[rax + rax]
0x44e79c:	nop	dword ptr [rax]
0x44e7a0:	push	r12
0x44e7a2:	push	rbp
0x44e7a3:	mov	rbp, rdi
0x44e7a6:	push	rbx
0x44e7a7:	sub	rsp, 0x20
0x44e7ab:	mov	rdx, qword ptr [rdi + 0x18]
0x44e7af:	mov	rax, qword ptr fs:[0x28]
0x44e7b8:	mov	qword ptr [rsp + 0x18], rax
0x44e7bd:	xor	eax, eax
0x44e7bf:	movzx	eax, byte ptr [rdx]
0x44e7c2:	cmp	al, 0x55
0x44e7c4:	je	0x44e8d0
0x44e7ca:	jg	0x44e820
0x44e7cc:	cmp	al, 0x4e
0x44e7ce:	je	0x44ea50
0x44e7d4:	cmp	al, 0x53
0x44e7d6:	jne	0x44e8f8
0x44e7dc:	cmp	byte ptr [rdx + 1], 0x74
0x44e7e0:	je	0x44e960
0x44e7e6:	xor	esi, esi
0x44e7e8:	call	0x44bb70
0x44e7ed:	mov	r12, rax
0x44e7f0:	mov	rax, qword ptr [rbp + 0x18]
0x44e7f4:	cmp	byte ptr [rax], 0x49
0x44e7f7:	je	0x44eac0
0x44e7fd:	nop	dword ptr [rax]
0x44e800:	mov	rax, qword ptr [rsp + 0x18]
0x44e805:	sub	rax, qword ptr fs:[0x28]
0x44e80e:	jne	0x44eb9c
0x44e814:	add	rsp, 0x20
0x44e818:	mov	rax, r12
0x44e81b:	pop	rbx
0x44e81c:	pop	rbp
0x44e81d:	pop	r12
0x44e81f:	ret	
0x44e820:	cmp	al, 0x5a
0x44e822:	jne	0x44e8f8
0x44e828:	lea	rax, [rdx + 1]
0x44e82c:	mov	qword ptr [rdi + 0x18], rax
0x44e830:	movzx	eax, byte ptr [rdx + 1]
0x44e834:	cmp	al, 0x47
0x44e836:	je	0x44ea08
0x44e83c:	cmp	al, 0x54
0x44e83e:	je	0x44ea08
0x44e844:	xor	esi, esi
0x44e846:	call	0x44ec50
0x44e84b:	mov	r12, rax
0x44e84e:	test	r12, r12
0x44e851:	je	0x44ea40
0x44e857:	mov	rax, qword ptr [rbp + 0x18]
0x44e85b:	cmp	byte ptr [rax], 0x45
0x44e85e:	jne	0x44ea40
0x44e864:	lea	rdx, [rax + 1]
0x44e868:	mov	qword ptr [rbp + 0x18], rdx
0x44e86c:	movzx	edx, byte ptr [rax + 1]
0x44e870:	cmp	dl, 0x73
0x44e873:	je	0x44ebc8
0x44e879:	cmp	dl, 0x64
0x44e87c:	je	0x44eb00
0x44e882:	mov	rdi, rbp
0x44e885:	call	0x44e7a0
0x44e88a:	mov	rcx, rax
0x44e88d:	test	rax, rax
0x44e890:	je	0x44e8a0
0x44e892:	mov	eax, dword ptr [rax]
0x44e894:	sub	eax, 0x47
0x44e897:	and	eax, 0xfffffffd
0x44e89a:	jne	0x44ea20
0x44e8a0:	cmp	dword ptr [r12], 3
0x44e8a5:	je	0x44eba8
0x44e8ab:	mov	rax, qword ptr [rsp + 0x18]
0x44e8b0:	sub	rax, qword ptr fs:[0x28]
0x44e8b9:	jne	0x44eb9c
0x44e8bf:	mov	rdx, r12
0x44e8c2:	mov	esi, 2
0x44e8c7:	jmp	0x44eaef
0x44e8cc:	nop	dword ptr [rax]
0x44e8d0:	mov	rax, qword ptr [rsp + 0x18]
0x44e8d5:	sub	rax, qword ptr fs:[0x28]
0x44e8de:	jne	0x44eb9c
0x44e8e4:	add	rsp, 0x20
0x44e8e8:	pop	rbx
0x44e8e9:	pop	rbp
0x44e8ea:	pop	r12
0x44e8ec:	jmp	0x44cca0
0x44e8f1:	nop	dword ptr [rax]
0x44e8f8:	mov	rdi, rbp
0x44e8fb:	call	0x44cca0
0x44e900:	mov	rdx, qword ptr [rbp + 0x18]
0x44e904:	mov	r12, rax
0x44e907:	cmp	byte ptr [rdx], 0x49
0x44e90a:	jne	0x44e800
0x44e910:	test	rax, rax
0x44e913:	je	0x44ea40
0x44e919:	mov	eax, dword ptr [rbp + 0x38]
0x44e91c:	cmp	eax, dword ptr [rbp + 0x3c]
0x44e91f:	jge	0x44ea40
0x44e925:	mov	rcx, qword ptr [rbp + 0x30]
0x44e929:	movsxd	rsi, eax
0x44e92c:	add	eax, 1
0x44e92f:	mov	qword ptr [rcx + rsi*8], r12
0x44e933:	xor	ecx, ecx
0x44e935:	mov	dword ptr [rbp + 0x38], eax
0x44e938:	movzx	eax, byte ptr [rdx]
0x44e93b:	lea	esi, [rax - 0x49]
0x44e93e:	cmp	sil, 1
0x44e942:	ja	0x44ead3
0x44e948:	add	rdx, 1
0x44e94c:	mov	rdi, rbp
0x44e94f:	mov	qword ptr [rbp + 0x18], rdx
0x44e953:	call	0x44d420
0x44e958:	mov	rcx, rax
0x44e95b:	jmp	0x44ead3
0x44e960:	add	rdx, 2
0x44e964:	mov	qword ptr [rdi + 0x18], rdx
0x44e968:	call	0x44cca0
0x44e96d:	mov	esi, dword ptr [rbp + 0x28]
0x44e970:	mov	rcx, rax
0x44e973:	cmp	esi, dword ptr [rbp + 0x2c]
0x44e976:	jge	0x44ec20
0x44e97c:	movsxd	rdx, esi
0x44e97f:	lea	rax, [rip + 0xd4ae]
0x44e986:	add	esi, 1
0x44e989:	shl	rdx, 5
0x44e98d:	add	rdx, qword ptr [rbp + 0x20]
0x44e991:	mov	dword ptr [rbp + 0x28], esi
0x44e994:	mov	qword ptr [rdx], 0
0x44e99b:	mov	dword ptr [rdx + 8], 0
0x44e9a2:	mov	qword ptr [rdx + 0x10], rax
0x44e9a6:	mov	dword ptr [rdx + 0x18], 3
0x44e9ad:	mov	esi, 1
0x44e9b2:	mov	rdi, rbp
0x44e9b5:	call	0x44b100
0x44e9ba:	add	dword ptr [rbp + 0x48], 3
0x44e9be:	mov	r12, rax
0x44e9c1:	mov	rax, qword ptr [rbp + 0x18]
0x44e9c5:	cmp	byte ptr [rax], 0x49
0x44e9c8:	jne	0x44e800
0x44e9ce:	test	r12, r12
0x44e9d1:	je	0x44ea40
0x44e9d3:	mov	edx, dword ptr [rbp + 0x38]
0x44e9d6:	cmp	edx, dword ptr [rbp + 0x3c]
0x44e9d9:	jge	0x44ea40
0x44e9db:	mov	rcx, qword ptr [rbp + 0x30]
0x44e9df:	movsxd	rsi, edx
0x44e9e2:	add	edx, 1
0x44e9e5:	mov	qword ptr [rcx + rsi*8], r12
0x44e9e9:	mov	dword ptr [rbp + 0x38], edx
0x44e9ec:	movzx	ebx, byte ptr [rax]
0x44e9ef:	lea	edx, [rbx - 0x49]
0x44e9f2:	cmp	dl, 1
0x44e9f5:	jbe	0x44eac0
0x44e9fb:	xor	ecx, ecx
0x44e9fd:	jmp	0x44ead3
0x44ea02:	nop	word ptr [rax + rax]
0x44ea08:	mov	rdi, rbp
0x44ea0b:	call	0x44e200
0x44ea10:	mov	r12, rax
0x44ea13:	jmp	0x44e84e
0x44ea18:	nop	dword ptr [rax + rax]
0x44ea20:	mov	rdi, rbp
0x44ea23:	mov	qword ptr [rsp + 8], rcx
0x44ea28:	call	0x44b3c0
0x44ea2d:	mov	rcx, qword ptr [rsp + 8]
0x44ea32:	test	eax, eax
0x44ea34:	jne	0x44e8a0
0x44ea3a:	nop	word ptr [rax + rax]
0x44ea40:	xor	r12d, r12d
0x44ea43:	jmp	0x44e800
0x44ea48:	nop	dword ptr [rax + rax]
0x44ea50:	add	rdx, 1
0x44ea54:	lea	rsi, [rsp + 0x10]
0x44ea59:	mov	qword ptr [rdi + 0x18], rdx
0x44ea5d:	mov	edx, 1
0x44ea62:	call	0x44dfc0
0x44ea67:	mov	r12, rax
0x44ea6a:	test	rax, rax
0x44ea6d:	je	0x44ea40
0x44ea6f:	xor	esi, esi
0x44ea71:	mov	rdi, rbp
0x44ea74:	call	0x44b360
0x44ea79:	mov	esi, 1
0x44ea7e:	mov	rbx, rax
0x44ea81:	call	0x44d500
0x44ea86:	mov	qword ptr [r12], rax
0x44ea8a:	test	rax, rax
0x44ea8d:	je	0x44ea40
0x44ea8f:	test	rbx, rbx
0x44ea92:	je	0x44eaa2
0x44ea94:	mov	rax, qword ptr [rsp + 0x10]
0x44ea99:	mov	qword ptr [rsp + 0x10], rbx
0x44ea9e:	mov	qword ptr [rbx + 0x10], rax
0x44eaa2:	mov	rax, qword ptr [rbp + 0x18]
0x44eaa6:	cmp	byte ptr [rax], 0x45
0x44eaa9:	jne	0x44ea40
0x44eaab:	add	rax, 1
0x44eaaf:	mov	r12, qword ptr [rsp + 0x10]
0x44eab4:	mov	qword ptr [rbp + 0x18], rax
0x44eab8:	jmp	0x44e800
0x44eabd:	nop	dword ptr [rax]
0x44eac0:	add	rax, 1
0x44eac4:	mov	rdi, rbp
0x44eac7:	mov	qword ptr [rbp + 0x18], rax
0x44eacb:	call	0x44d420
0x44ead0:	mov	rcx, rax
0x44ead3:	mov	rax, qword ptr [rsp + 0x18]
0x44ead8:	sub	rax, qword ptr fs:[0x28]
0x44eae1:	jne	0x44eb9c
0x44eae7:	mov	rdx, r12
0x44eaea:	mov	esi, 4
0x44eaef:	add	rsp, 0x20
0x44eaf3:	mov	rdi, rbp
0x44eaf6:	pop	rbx
0x44eaf7:	pop	rbp
0x44eaf8:	pop	r12
0x44eafa:	jmp	0x44b100
0x44eaff:	nop	
0x44eb00:	lea	rdx, [rax + 2]
0x44eb04:	mov	qword ptr [rbp + 0x18], rdx
0x44eb08:	movzx	edx, byte ptr [rax + 2]
0x44eb0c:	cmp	dl, 0x5f
0x44eb0f:	je	0x44ec27
0x44eb15:	cmp	dl, 0x6e
0x44eb18:	je	0x44ea40
0x44eb1e:	mov	rdi, rbp
0x44eb21:	call	0x44b230
0x44eb26:	add	eax, 1
0x44eb29:	mov	ebx, eax
0x44eb2b:	js	0x44ea40
0x44eb31:	mov	rax, qword ptr [rbp + 0x18]
0x44eb35:	cmp	byte ptr [rax], 0x5f
0x44eb38:	jne	0x44ea40
0x44eb3e:	add	rax, 1
0x44eb42:	mov	qword ptr [rbp + 0x18], rax
0x44eb46:	mov	rdi, rbp
0x44eb49:	call	0x44e7a0
0x44eb4e:	mov	r11, rax
0x44eb51:	test	rax, rax
0x44eb54:	je	0x44eb65
0x44eb56:	mov	eax, dword ptr [r11]
0x44eb59:	sub	eax, 0x47
0x44eb5c:	and	eax, 0xfffffffd
0x44eb5f:	jne	0x44ec39
0x44eb65:	mov	eax, dword ptr [rbp + 0x28]
0x44eb68:	cmp	eax, dword ptr [rbp + 0x2c]
0x44eb6b:	jge	0x44ec32
0x44eb71:	movsxd	rcx, eax
0x44eb74:	add	eax, 1
0x44eb77:	shl	rcx, 5
0x44eb7b:	add	rcx, qword ptr [rbp + 0x20]
0x44eb7f:	mov	qword ptr [rcx + 4], 0
0x44eb87:	mov	dword ptr [rbp + 0x28], eax
0x44eb8a:	mov	dword ptr [rcx], 0x48
0x44eb90:	mov	dword ptr [rcx + 0x18], ebx
0x44eb93:	mov	qword ptr [rcx + 0x10], r11
0x44eb97:	jmp	0x44e8a0
0x44eb9c:	call	0x4039f0
0x44eba1:	nop	dword ptr [rax]
0x44eba8:	mov	rax, qword ptr [r12 + 0x18]
0x44ebad:	cmp	dword ptr [rax], 0x29
0x44ebb0:	jne	0x44e8ab
0x44ebb6:	mov	qword ptr [rax + 0x10], 0
0x44ebbe:	jmp	0x44e8ab
0x44ebc3:	nop	dword ptr [rax + rax]
0x44ebc8:	add	rax, 2
0x44ebcc:	mov	rdi, rbp
0x44ebcf:	mov	qword ptr [rbp + 0x18], rax
0x44ebd3:	call	0x44b3c0
0x44ebd8:	test	eax, eax
0x44ebda:	je	0x44ea40
0x44ebe0:	mov	eax, dword ptr [rbp + 0x28]
0x44ebe3:	cmp	eax, dword ptr [rbp + 0x2c]
0x44ebe6:	jge	0x44ec32
0x44ebe8:	movsxd	rcx, eax
0x44ebeb:	add	eax, 1
0x44ebee:	mov	dword ptr [rbp + 0x28], eax
0x44ebf1:	shl	rcx, 5
0x44ebf5:	lea	rax, [rip + 0x7e8cb]
0x44ebfc:	add	rcx, qword ptr [rbp + 0x20]
0x44ec00:	mov	qword ptr [rcx], 0
0x44ec07:	mov	dword ptr [rcx + 8], 0
0x44ec0e:	mov	qword ptr [rcx + 0x10], rax
0x44ec12:	mov	dword ptr [rcx + 0x18], 0xe
0x44ec19:	jmp	0x44e8a0
0x44ec1e:	nop	
0x44ec20:	xor	edx, edx
0x44ec22:	jmp	0x44e9ad
0x44ec27:	add	rax, 3
0x44ec2b:	xor	ebx, ebx
0x44ec2d:	jmp	0x44eb42
0x44ec32:	xor	ecx, ecx
0x44ec34:	jmp	0x44e8a0
0x44ec39:	mov	rdi, rbp
0x44ec3c:	call	0x44b3c0
0x44ec41:	test	eax, eax
0x44ec43:	jne	0x44eb65
0x44ec49:	jmp	0x44ea40
0x44ec4e:	nop	
0x44ec50:	push	r12
0x44ec52:	push	rbp
0x44ec53:	mov	rbp, rdi
0x44ec56:	push	rbx
0x44ec57:	mov	ebx, esi
0x44ec59:	call	0x44e7a0
0x44ec5e:	test	rax, rax
0x44ec61:	je	0x44ed83
0x44ec67:	mov	r12, rax
0x44ec6a:	test	ebx, ebx
0x44ec6c:	je	0x44eca0
0x44ec6e:	test	byte ptr [rbp + 0x10], 1
0x44ec72:	jne	0x44eca0
0x44ec74:	movabs	rcx, 0x3400000000001f
0x44ec7e:	mov	edx, dword ptr [r12]
0x44ec82:	lea	eax, [rdx - 0x1c]
0x44ec85:	cmp	eax, 0x35
0x44ec88:	ja	0x44ed40
0x44ec8e:	bt	rcx, rax
0x44ec92:	jb	0x44ed20
0x44ec98:	mov	rax, r12
0x44ec9b:	pop	rbx
0x44ec9c:	pop	rbp
0x44ec9d:	pop	r12
0x44ec9f:	ret	
0x44eca0:	mov	rax, qword ptr [rbp + 0x18]
0x44eca4:	movzx	eax, byte ptr [rax]
0x44eca7:	test	al, al
0x44eca9:	je	0x44ec98
0x44ecab:	cmp	al, 0x45
0x44ecad:	je	0x44ec98
0x44ecaf:	movabs	rcx, 0x3400000000001f
0x44ecb9:	mov	rdx, r12
0x44ecbc:	mov	eax, dword ptr [rdx]
0x44ecbe:	cmp	eax, 4
0x44ecc1:	je	0x44ed90
0x44ecc7:	jbe	0x44ed10
0x44ecc9:	sub	eax, 0x1c
0x44eccc:	cmp	eax, 0x35
0x44eccf:	ja	0x44ecd7
0x44ecd1:	bt	rcx, rax
0x44ecd5:	jb	0x44ed30
0x44ecd7:	xor	esi, esi
0x44ecd9:	mov	rdi, rbp
0x44ecdc:	call	0x44c9e0
0x44ece1:	mov	rcx, rax
0x44ece4:	test	rax, rax
0x44ece7:	je	0x44ed83
0x44eced:	test	ebx, ebx
0x44ecef:	jne	0x44ecfc
0x44ecf1:	cmp	dword ptr [r12], 2
0x44ecf6:	je	0x44ede0
0x44ecfc:	pop	rbx
0x44ecfd:	mov	rdx, r12
0x44ed00:	mov	rdi, rbp
0x44ed03:	mov	esi, 3
0x44ed08:	pop	rbp
0x44ed09:	pop	r12
0x44ed0b:	jmp	0x44b100
0x44ed10:	cmp	eax, 2
0x44ed13:	jne	0x44ecd7
0x44ed15:	mov	rdx, qword ptr [rdx + 0x18]
0x44ed19:	test	rdx, rdx
0x44ed1c:	jne	0x44ecbc
0x44ed1e:	jmp	0x44ecd7
0x44ed20:	mov	r12, qword ptr [r12 + 0x10]
0x44ed25:	jmp	0x44ec7e
0x44ed2a:	nop	word ptr [rax + rax]
0x44ed30:	mov	rdx, qword ptr [rdx + 0x10]
0x44ed34:	jmp	0x44ed19
0x44ed36:	nop	word ptr cs:[rax + rax]
0x44ed40:	cmp	edx, 2
0x44ed43:	jne	0x44ec98
0x44ed49:	mov	rdx, qword ptr [r12 + 0x18]
0x44ed4e:	test	rdx, rdx
0x44ed51:	je	0x44ed83
0x44ed53:	movabs	rcx, 0x3400000000001f
0x44ed5d:	mov	eax, dword ptr [rdx]
0x44ed5f:	sub	eax, 0x1c
0x44ed62:	cmp	eax, 0x35
0x44ed65:	ja	0x44ec98
0x44ed6b:	bt	rcx, rax
0x44ed6f:	jae	0x44ec98
0x44ed75:	mov	rdx, qword ptr [rdx + 0x10]
0x44ed79:	mov	qword ptr [r12 + 0x18], rdx
0x44ed7e:	test	rdx, rdx
0x44ed81:	jne	0x44ed5d
0x44ed83:	xor	r12d, r12d
0x44ed86:	pop	rbx
0x44ed87:	pop	rbp
0x44ed88:	mov	rax, r12
0x44ed8b:	pop	r12
0x44ed8d:	ret	
0x44ed8e:	nop	
0x44ed90:	mov	rdx, qword ptr [rdx + 0x10]
0x44ed94:	test	rdx, rdx
0x44ed97:	je	0x44edc0
0x44ed99:	mov	eax, dword ptr [rdx]
0x44ed9b:	cmp	eax, 8
0x44ed9e:	ja	0x44edd0
0x44eda0:	cmp	eax, 6
0x44eda3:	ja	0x44ecd7
0x44eda9:	sub	eax, 1
0x44edac:	cmp	eax, 1
0x44edaf:	ja	0x44edc0
0x44edb1:	mov	rdx, qword ptr [rdx + 0x18]
0x44edb5:	test	rdx, rdx
0x44edb8:	jne	0x44ed99
0x44edba:	nop	word ptr [rax + rax]
0x44edc0:	mov	esi, 1
0x44edc5:	jmp	0x44ecd9
0x44edca:	nop	word ptr [rax + rax]
0x44edd0:	xor	esi, esi
0x44edd2:	cmp	eax, 0x35
0x44edd5:	setne	sil
0x44edd9:	jmp	0x44ecd9
0x44edde:	nop	
0x44ede0:	cmp	dword ptr [rax], 0x29
0x44ede3:	jne	0x44ecfc
0x44ede9:	mov	qword ptr [rax + 0x10], 0
0x44edf1:	jmp	0x44ecfc
0x44edf6:	nop	word ptr cs:[rax + rax]
0x44ee00:	push	r15
0x44ee02:	push	r14
0x44ee04:	push	r13
0x44ee06:	push	r12
0x44ee08:	push	rbp
0x44ee09:	mov	rbp, rdi
0x44ee0c:	push	rbx
0x44ee0d:	sub	rsp, 0xe8
0x44ee14:	mov	rax, qword ptr fs:[0x28]
0x44ee1d:	mov	qword ptr [rsp + 0xd8], rax
0x44ee25:	xor	eax, eax
0x44ee27:	test	rdx, rdx
0x44ee2a:	je	0x44ee60
0x44ee2c:	mov	r13d, dword ptr [rdi + 0x130]
0x44ee33:	test	r13d, r13d
0x44ee36:	jne	0x44ee6a
0x44ee38:	mov	r8d, dword ptr [rdx]
0x44ee3b:	mov	r12, rdx
0x44ee3e:	cmp	r8d, 0x51
0x44ee42:	ja	0x44ee60
0x44ee44:	lea	rdx, [rip + 0x7e3ad]
0x44ee4b:	mov	eax, r8d
0x44ee4e:	movsxd	rax, dword ptr [rdx + rax*4]
0x44ee52:	add	rax, rdx
0x44ee55:	notrack jmp	rax
0x44ee58:	mov	qword ptr [rbp + 0x128], r9
0x44ee5f:	nop	
0x44ee60:	mov	dword ptr [rbp + 0x130], 1
0x44ee6a:	mov	rax, qword ptr [rsp + 0xd8]
0x44ee72:	sub	rax, qword ptr fs:[0x28]
0x44ee7b:	jne	0x45295c
0x44ee81:	add	rsp, 0xe8
0x44ee88:	pop	rbx
0x44ee89:	pop	rbp
0x44ee8a:	pop	r12
0x44ee8c:	pop	r13
0x44ee8e:	pop	r14
0x44ee90:	pop	r15
0x44ee92:	ret	
0x44ee93:	nop	dword ptr [rax + rax]
0x44ee98:	mov	rcx, qword ptr [rdi + 0x128]
0x44ee9f:	xor	edx, edx
0x44eea1:	lea	rax, [rsp + 0x10]
0x44eea6:	mov	qword ptr [rsp + 0x10], rcx
0x44eeab:	mov	qword ptr [rbp + 0x128], rax
0x44eeb2:	mov	rax, qword ptr [rbp + 0x120]
0x44eeb9:	mov	qword ptr [rsp + 0x18], r12
0x44eebe:	mov	dword ptr [rsp + 0x20], 0
0x44eec6:	mov	qword ptr [rsp + 0x28], rax
0x44eecb:	test	rdx, rdx
0x44eece:	je	0x452af8
0x44eed4:	mov	esi, 0x11
0x44eed9:	mov	rdi, rbp
0x44eedc:	call	0x452c20
0x44eee1:	mov	r11d, dword ptr [rsp + 0x20]
0x44eee6:	test	r11d, r11d
0x44eee9:	je	0x4517d4
0x44eeef:	mov	rax, qword ptr [rsp + 0x10]
0x44eef4:	mov	qword ptr [rbp + 0x128], rax
0x44eefb:	test	r13d, r13d
0x44eefe:	je	0x44ee6a
0x44ef04:	mov	qword ptr [rbp + 0x120], rbx
0x44ef0b:	jmp	0x44ee6a
0x44ef10:	mov	rdi, qword ptr [rdi + 0x128]
0x44ef17:	mov	rdx, qword ptr [r12 + 0x10]
0x44ef1c:	test	rdi, rdi
0x44ef1f:	je	0x44f010
0x44ef25:	mov	rax, rdi
0x44ef28:	nop	dword ptr [rax + rax]
0x44ef30:	mov	r15d, dword ptr [rax + 0x10]
0x44ef34:	test	r15d, r15d
0x44ef37:	jne	0x44ef54
0x44ef39:	mov	rcx, qword ptr [rax + 8]
0x44ef3d:	mov	ecx, dword ptr [rcx]
0x44ef3f:	lea	esi, [rcx - 0x19]
0x44ef42:	cmp	esi, 2
0x44ef45:	ja	0x451ebb
0x44ef4b:	cmp	r8d, ecx
0x44ef4e:	je	0x451ec3
0x44ef54:	mov	rax, qword ptr [rax]
0x44ef57:	test	rax, rax
0x44ef5a:	jne	0x44ef30
0x44ef5c:	jmp	0x44f010
0x44ef61:	nop	dword ptr [rax]
0x44ef68:	mov	rdx, qword ptr [r12 + 0x18]
0x44ef6d:	mov	esi, 0x11
0x44ef72:	mov	rax, qword ptr [rdi + 0x128]
0x44ef79:	mov	qword ptr [rsp + 0x18], r12
0x44ef7e:	mov	dword ptr [rsp + 0x20], 0
0x44ef86:	mov	qword ptr [rsp + 0x10], rax
0x44ef8b:	lea	rax, [rsp + 0x10]
0x44ef90:	mov	qword ptr [rdi + 0x128], rax
0x44ef97:	mov	rax, qword ptr [rdi + 0x120]
0x44ef9e:	mov	qword ptr [rsp + 0x28], rax
0x44efa3:	call	0x452c20
0x44efa8:	mov	edi, dword ptr [rsp + 0x20]
0x44efac:	test	edi, edi
0x44efae:	je	0x451e95
0x44efb4:	mov	rax, qword ptr [rsp + 0x10]
0x44efb9:	mov	qword ptr [rbp + 0x128], rax
0x44efc0:	jmp	0x44ee6a
0x44efc5:	nop	dword ptr [rax]
0x44efc8:	mov	rdx, qword ptr [r12 + 0x10]
0x44efcd:	mov	r14d, dword ptr [rdi + 0x138]
0x44efd4:	mov	eax, dword ptr [rdx]
0x44efd6:	mov	r9, rdx
0x44efd9:	test	r14d, r14d
0x44efdc:	jne	0x44efea
0x44efde:	xor	r13d, r13d
0x44efe1:	cmp	eax, 5
0x44efe4:	je	0x452500
0x44efea:	mov	rcx, qword ptr [rbp + 0x128]
0x44eff1:	mov	rdi, rcx
0x44eff4:	cmp	eax, 0x23
0x44eff7:	je	0x451867
0x44effd:	cmp	r8d, eax
0x44f000:	je	0x451867
0x44f006:	cmp	eax, 0x24
0x44f009:	je	0x4525f6
0x44f00f:	nop	
0x44f010:	lea	rax, [rsp + 0x10]
0x44f015:	mov	qword ptr [rsp + 0x10], rdi
0x44f01a:	mov	qword ptr [rbp + 0x128], rax
0x44f021:	mov	rax, qword ptr [rbp + 0x120]
0x44f028:	mov	qword ptr [rsp + 0x18], r12
0x44f02d:	mov	dword ptr [rsp + 0x20], 0
0x44f035:	mov	qword ptr [rsp + 0x28], rax
0x44f03a:	jmp	0x44eed4
0x44f03f:	nop	
0x44f040:	mov	rdx, qword ptr [r12 + 0x10]
0x44f045:	test	rdx, rdx
0x44f048:	je	0x44f054
0x44f04a:	mov	esi, 0x11
0x44f04f:	call	0x452c20
0x44f054:	cmp	qword ptr [r12 + 0x18], 0
0x44f05a:	je	0x44ee6a
0x44f060:	mov	r13, qword ptr [rbp + 0x100]
0x44f067:	cmp	r13, 0xfd
0x44f06e:	ja	0x451ef8
0x44f074:	lea	rbx, [rip + 0x7e5af]
0x44f07b:	mov	r14d, 0x2c
0x44f081:	lea	r15, [rbx + 2]
0x44f085:	jmp	0x44f0bb
0x44f087:	nop	word ptr [rax + rax]
0x44f090:	mov	rax, r13
0x44f093:	add	r13, 1
0x44f097:	add	rbx, 1
0x44f09b:	mov	qword ptr [rbp + 0x100], r13
0x44f0a2:	mov	byte ptr [rbp + rax], r14b
0x44f0a7:	mov	byte ptr [rbp + 0x108], r14b
0x44f0ae:	cmp	r15, rbx
0x44f0b1:	je	0x4517e9
0x44f0b7:	movzx	r14d, byte ptr [rbx]
0x44f0bb:	cmp	r13, 0xff
0x44f0c2:	jne	0x44f090
0x44f0c4:	mov	byte ptr [rbp + 0xff], 0
0x44f0cb:	mov	rdx, qword ptr [rbp + 0x118]
0x44f0d2:	mov	esi, 0xff
0x44f0d7:	mov	rdi, rbp
0x44f0da:	call	qword ptr [rbp + 0x110]
0x44f0e0:	mov	r13d, 1
0x44f0e6:	add	qword ptr [rbp + 0x140], 1
0x44f0ee:	xor	eax, eax
0x44f0f0:	jmp	0x44f097
0x44f0f2:	nop	word ptr [rax + rax]
0x44f0f8:	mov	rdx, qword ptr [r12 + 0x10]
0x44f0fd:	mov	esi, 0x11
0x44f102:	call	0x452c20
0x44f107:	lea	rsi, [rip + 0x7e3dd]
0x44f10e:	mov	rdi, rbp
0x44f111:	call	0x44b770
0x44f116:	mov	r13, qword ptr [r12 + 0x18]
0x44f11b:	cmp	dword ptr [r13], 0x48
0x44f120:	je	0x452016
0x44f126:	mov	rax, qword ptr [rsp + 0xd8]
0x44f12e:	sub	rax, qword ptr fs:[0x28]
0x44f137:	jne	0x452b87
0x44f13d:	add	rsp, 0xe8
0x44f144:	mov	rdx, r13
0x44f147:	mov	rdi, rbp
0x44f14a:	mov	esi, 0x11
0x44f14f:	pop	rbx
0x44f150:	pop	rbp
0x44f151:	pop	r12
0x44f153:	pop	r13
0x44f155:	pop	r14
0x44f157:	pop	r15
0x44f159:	jmp	0x452c20
0x44f15e:	nop	
0x44f160:	mov	rdx, qword ptr [r12 + 0x10]
0x44f165:	cmp	dword ptr [rdx], 0x27
0x44f168:	jne	0x451b41
0x44f16e:	mov	rax, qword ptr [rdx + 0x10]
0x44f172:	mov	ebx, dword ptr [rax + 0x1c]
0x44f175:	cmp	ebx, 6
0x44f178:	ja	0x4518c0
0x44f17e:	test	ebx, ebx
0x44f180:	jne	0x452309
0x44f186:	mov	rax, qword ptr [rbp + 0x100]
0x44f18d:	cmp	rax, 0xff
0x44f193:	je	0x45223e
0x44f199:	lea	rcx, [rax + 1]
0x44f19d:	mov	qword ptr [rbp + 0x100], rcx
0x44f1a4:	mov	esi, 0x11
0x44f1a9:	mov	rdi, rbp
0x44f1ac:	mov	byte ptr [rbp + rax], 0x28
0x44f1b1:	mov	byte ptr [rbp + 0x108], 0x28
0x44f1b8:	call	0x452c20
0x44f1bd:	mov	rax, qword ptr [rbp + 0x100]
0x44f1c4:	cmp	rax, 0xff
0x44f1ca:	je	0x4522d9
0x44f1d0:	lea	rdx, [rax + 1]
0x44f1d4:	mov	qword ptr [rbp + 0x100], rdx
0x44f1db:	mov	byte ptr [rbp + rax], 0x29
0x44f1e0:	mov	byte ptr [rbp + 0x108], 0x29
0x44f1e7:	cmp	dword ptr [r12], 0x3e
0x44f1ec:	je	0x4522c7
0x44f1f2:	cmp	ebx, 8
0x44f1f5:	je	0x452273
0x44f1fb:	mov	rax, qword ptr [rsp + 0xd8]
0x44f203:	sub	rax, qword ptr fs:[0x28]
0x44f20c:	jne	0x452ae9
0x44f212:	mov	rdx, qword ptr [r12 + 0x18]
0x44f217:	add	rsp, 0xe8
0x44f21e:	mov	rdi, rbp
0x44f221:	mov	esi, 0x11
0x44f226:	pop	rbx
0x44f227:	pop	rbp
0x44f228:	pop	r12
0x44f22a:	pop	r13
0x44f22c:	pop	r14
0x44f22e:	pop	r15
0x44f230:	jmp	0x452c20
0x44f235:	mov	rdx, qword ptr [r12 + 0x10]
0x44f23a:	mov	esi, 0x11
0x44f23f:	call	0x452c20
0x44f244:	mov	rax, qword ptr [rsp + 0xd8]
0x44f24c:	sub	rax, qword ptr fs:[0x28]
0x44f255:	jne	0x452bc1
0x44f25b:	mov	rdx, qword ptr [r12 + 0x18]
0x44f260:	add	rsp, 0xe8
0x44f267:	mov	rdi, rbp
0x44f26a:	mov	esi, 0x11
0x44f26f:	pop	rbx
0x44f270:	pop	rbp
0x44f271:	pop	r12
0x44f273:	pop	r13
0x44f275:	pop	r14
0x44f277:	pop	r15
0x44f279:	jmp	0x452c20
0x44f27e:	cmp	word ptr [r12 + 0x1a], 0
0x44f285:	jne	0x451eaa
0x44f28b:	mov	rdx, qword ptr [r12 + 0x10]
0x44f290:	lea	rax, [rip + 0x92209]
0x44f297:	cmp	qword ptr [rdx + 0x10], rax
0x44f29b:	je	0x44f2d4
0x44f29d:	mov	esi, 0x11
0x44f2a2:	mov	rdi, rbp
0x44f2a5:	call	0x452c20
0x44f2aa:	mov	rax, qword ptr [rbp + 0x100]
0x44f2b1:	cmp	rax, 0xff
0x44f2b7:	je	0x4526f4
0x44f2bd:	lea	rdx, [rax + 1]
0x44f2c1:	mov	qword ptr [rbp + 0x100], rdx
0x44f2c8:	mov	byte ptr [rbp + rax], 0x20
0x44f2cd:	mov	byte ptr [rbp + 0x108], 0x20
0x44f2d4:	cmp	word ptr [r12 + 0x18], 0
0x44f2db:	je	0x451940
0x44f2e1:	mov	rax, qword ptr [rsp + 0xd8]
0x44f2e9:	sub	rax, qword ptr fs:[0x28]
0x44f2f2:	jne	0x452b78
0x44f2f8:	add	rsp, 0xe8
0x44f2ff:	mov	rdi, rbp
0x44f302:	lea	rsi, [rip + 0x7e313]
0x44f309:	pop	rbx
0x44f30a:	pop	rbp
0x44f30b:	pop	r12
0x44f30d:	pop	r13
0x44f30f:	pop	r14
0x44f311:	pop	r15
0x44f313:	jmp	0x44b770
0x44f318:	lea	r13, [rsp + 0x30]
0x44f31d:	mov	qword ptr [rsp + 0x38], r12
0x44f322:	mov	r14, qword ptr [rdi + 0x128]
0x44f329:	mov	ebx, 1
0x44f32e:	mov	rax, qword ptr [rdi + 0x120]
0x44f335:	mov	qword ptr [rdi + 0x128], r13
0x44f33c:	mov	rcx, r13
0x44f33f:	mov	qword ptr [rsp + 0x30], r14
0x44f344:	mov	qword ptr [rsp + 0x48], rax
0x44f349:	mov	rax, r14
0x44f34c:	mov	dword ptr [rsp + 0x40], 0
0x44f354:	test	r14, r14
0x44f357:	jne	0x44f3ae
0x44f359:	jmp	0x451873
0x44f35e:	nop	
0x44f360:	mov	r9d, dword ptr [rax + 0x10]
0x44f364:	test	r9d, r9d
0x44f367:	jne	0x44f3a6
0x44f369:	cmp	ebx, 3
0x44f36c:	ja	0x44ee60
0x44f372:	movdqu	xmm0, xmmword ptr [rax]
0x44f376:	mov	edx, ebx
0x44f378:	add	ebx, 1
0x44f37b:	shl	rdx, 5
0x44f37f:	movaps	xmmword ptr [rsp + rdx + 0x30], xmm0
0x44f384:	movdqu	xmm1, xmmword ptr [rax + 0x10]
0x44f389:	mov	qword ptr [rsp + rdx + 0x30], rcx
0x44f38e:	lea	rcx, [r13 + rdx]
0x44f393:	mov	qword ptr [rbp + 0x128], rcx
0x44f39a:	movaps	xmmword ptr [rsp + rdx + 0x40], xmm1
0x44f39f:	mov	dword ptr [rax + 0x10], 1
0x44f3a6:	mov	rax, qword ptr [rax]
0x44f3a9:	test	rax, rax
0x44f3ac:	je	0x44f3bc
0x44f3ae:	mov	rdx, qword ptr [rax + 8]
0x44f3b2:	mov	edx, dword ptr [rdx]
0x44f3b4:	sub	edx, 0x19
0x44f3b7:	cmp	edx, 2
0x44f3ba:	jbe	0x44f360
0x44f3bc:	mov	rdx, qword ptr [r12 + 0x18]
0x44f3c1:	mov	esi, 0x11
0x44f3c6:	mov	rdi, rbp
0x44f3c9:	call	0x452c20
0x44f3ce:	mov	r8d, dword ptr [rsp + 0x40]
0x44f3d3:	mov	qword ptr [rbp + 0x128], r14
0x44f3da:	test	r8d, r8d
0x44f3dd:	jne	0x44ee6a
0x44f3e3:	cmp	ebx, 1
0x44f3e6:	je	0x451898
0x44f3ec:	lea	eax, [rbx - 1]
0x44f3ef:	mov	rbx, rax
0x44f3f2:	shl	rax, 5
0x44f3f6:	add	r13, rax
0x44f3f9:	nop	dword ptr [rax]
0x44f400:	mov	rdx, qword ptr [r13 + 8]
0x44f404:	mov	esi, 0x11
0x44f409:	mov	rdi, rbp
0x44f40c:	sub	r13, 0x20
0x44f410:	call	0x452ce0
0x44f415:	cmp	ebx, 1
0x44f418:	je	0x451898
0x44f41e:	sub	ebx, 1
0x44f421:	jmp	0x44f400
0x44f423:	lea	rbx, [rip + 0x7e100]
0x44f42a:	mov	rax, qword ptr [rdi + 0x100]
0x44f431:	mov	r13d, 0x74
0x44f437:	lea	r14, [rbx + 0x11]
0x44f43b:	jmp	0x44f46b
0x44f43d:	nop	dword ptr [rax]
0x44f440:	mov	rdx, rax
0x44f443:	add	rax, 1
0x44f447:	mov	qword ptr [rbp + 0x100], rax
0x44f44e:	mov	byte ptr [rbp + rdx], r13b
0x44f453:	mov	byte ptr [rbp + 0x108], r13b
0x44f45a:	cmp	r14, rbx
0x44f45d:	je	0x45161a
0x44f463:	movzx	r13d, byte ptr [rbx]
0x44f467:	add	rbx, 1
0x44f46b:	cmp	rax, 0xff
0x44f471:	jne	0x44f440
0x44f473:	mov	rdx, qword ptr [rbp + 0x118]
0x44f47a:	mov	byte ptr [rbp + 0xff], 0
0x44f481:	mov	esi, 0xff
0x44f486:	mov	rdi, rbp
0x44f489:	call	qword ptr [rbp + 0x110]
0x44f48f:	add	qword ptr [rbp + 0x140], 1
0x44f497:	mov	eax, 1
0x44f49c:	xor	edx, edx
0x44f49e:	jmp	0x44f447
0x44f4a0:	lea	rbx, [rip + 0x7e075]
0x44f4a7:	mov	rax, qword ptr [rdi + 0x100]
0x44f4ae:	mov	r13d, 0x74
0x44f4b4:	lea	r14, [rbx + 0xc]
0x44f4b8:	jmp	0x44f4eb
0x44f4ba:	nop	word ptr [rax + rax]
0x44f4c0:	mov	rdx, rax
0x44f4c3:	add	rax, 1
0x44f4c7:	mov	qword ptr [rbp + 0x100], rax
0x44f4ce:	mov	byte ptr [rbp + rdx], r13b
0x44f4d3:	mov	byte ptr [rbp + 0x108], r13b
0x44f4da:	cmp	r14, rbx
0x44f4dd:	je	0x4515e0
0x44f4e3:	movzx	r13d, byte ptr [rbx]
0x44f4e7:	add	rbx, 1
0x44f4eb:	cmp	rax, 0xff
0x44f4f1:	jne	0x44f4c0
0x44f4f3:	mov	rdx, qword ptr [rbp + 0x118]
0x44f4fa:	mov	byte ptr [rbp + 0xff], 0
0x44f501:	mov	esi, 0xff
0x44f506:	mov	rdi, rbp
0x44f509:	call	qword ptr [rbp + 0x110]
0x44f50f:	add	qword ptr [rbp + 0x140], 1
0x44f517:	mov	eax, 1
0x44f51c:	xor	edx, edx
0x44f51e:	jmp	0x44f4c7
0x44f520:	lea	rbx, [rip + 0x7dfd7]
0x44f527:	mov	rax, qword ptr [rdi + 0x100]
0x44f52e:	mov	r13d, 0x63
0x44f534:	lea	r14, [rbx + 0x17]
0x44f538:	jmp	0x44f56b
0x44f53a:	nop	word ptr [rax + rax]
0x44f540:	mov	rdx, rax
0x44f543:	add	rax, 1
0x44f547:	mov	qword ptr [rbp + 0x100], rax
0x44f54e:	mov	byte ptr [rbp + rdx], r13b
0x44f553:	mov	byte ptr [rbp + 0x108], r13b
0x44f55a:	cmp	rbx, r14
0x44f55d:	je	0x45168e
0x44f563:	movzx	r13d, byte ptr [rbx]
0x44f567:	add	rbx, 1
0x44f56b:	cmp	rax, 0xff
0x44f571:	jne	0x44f540
0x44f573:	mov	rdx, qword ptr [rbp + 0x118]
0x44f57a:	mov	byte ptr [rbp + 0xff], 0
0x44f581:	mov	esi, 0xff
0x44f586:	mov	rdi, rbp
0x44f589:	call	qword ptr [rbp + 0x110]
0x44f58f:	add	qword ptr [rbp + 0x140], 1
0x44f597:	mov	eax, 1
0x44f59c:	xor	edx, edx
0x44f59e:	jmp	0x44f547
0x44f5a0:	lea	rbx, [rip + 0x7df4e]
0x44f5a7:	mov	rax, qword ptr [rdi + 0x100]
0x44f5ae:	mov	r13d, 0x56
0x44f5b4:	lea	r14, [rbx + 7]
0x44f5b8:	jmp	0x44f5eb
0x44f5ba:	nop	word ptr [rax + rax]
0x44f5c0:	mov	rdx, rax
0x44f5c3:	add	rax, 1
0x44f5c7:	mov	qword ptr [rbp + 0x100], rax
0x44f5ce:	mov	byte ptr [rbp + rdx], r13b
0x44f5d3:	mov	byte ptr [rbp + 0x108], r13b
0x44f5da:	cmp	r14, rbx
0x44f5dd:	je	0x451506
0x44f5e3:	movzx	r13d, byte ptr [rbx]
0x44f5e7:	add	rbx, 1
0x44f5eb:	cmp	rax, 0xff
0x44f5f1:	jne	0x44f5c0
0x44f5f3:	mov	rdx, qword ptr [rbp + 0x118]
0x44f5fa:	mov	byte ptr [rbp + 0xff], 0
0x44f601:	mov	esi, 0xff
0x44f606:	mov	rdi, rbp
0x44f609:	call	qword ptr [rbp + 0x110]
0x44f60f:	add	qword ptr [rbp + 0x140], 1
0x44f617:	mov	eax, 1
0x44f61c:	xor	edx, edx
0x44f61e:	jmp	0x44f5c7
0x44f620:	lea	rbx, [rip + 0x7dee4]
0x44f627:	mov	rax, qword ptr [rdi + 0x100]
0x44f62e:	mov	r13d, 0x76
0x44f634:	lea	r14, [rbx + 0xa]
0x44f638:	jmp	0x44f66b
0x44f63a:	nop	word ptr [rax + rax]
0x44f640:	mov	rdx, rax
0x44f643:	add	rax, 1
0x44f647:	mov	qword ptr [rbp + 0x100], rax
0x44f64e:	mov	byte ptr [rbp + rdx], r13b
0x44f653:	mov	byte ptr [rbp + 0x108], r13b
0x44f65a:	cmp	r14, rbx
0x44f65d:	je	0x450e91
0x44f663:	movzx	r13d, byte ptr [rbx]
0x44f667:	add	rbx, 1
0x44f66b:	cmp	rax, 0xff
0x44f671:	jne	0x44f640
0x44f673:	mov	rdx, qword ptr [rbp + 0x118]
0x44f67a:	mov	byte ptr [rbp + 0xff], 0
0x44f681:	mov	esi, 0xff
0x44f686:	mov	rdi, rbp
0x44f689:	call	qword ptr [rbp + 0x110]
0x44f68f:	add	qword ptr [rbp + 0x140], 1
0x44f697:	mov	eax, 1
0x44f69c:	xor	edx, edx
0x44f69e:	jmp	0x44f647
0x44f6a0:	mov	rax, qword ptr [rdi + 0x100]
0x44f6a7:	cmp	rax, 0xff
0x44f6ad:	je	0x451fe9
0x44f6b3:	lea	rdx, [rax + 1]
0x44f6b7:	mov	qword ptr [rbp + 0x100], rdx
0x44f6be:	mov	byte ptr [rbp + rax], 0x7e
0x44f6c3:	mov	byte ptr [rbp + 0x108], 0x7e
0x44f6ca:	mov	rax, qword ptr [rsp + 0xd8]
0x44f6d2:	sub	rax, qword ptr fs:[0x28]
0x44f6db:	jne	0x452b82
0x44f6e1:	mov	rdx, qword ptr [r12 + 0x18]
0x44f6e6:	add	rsp, 0xe8
0x44f6ed:	mov	rdi, rbp
0x44f6f0:	mov	esi, 0x11
0x44f6f5:	pop	rbx
0x44f6f6:	pop	rbp
0x44f6f7:	pop	r12
0x44f6f9:	pop	r13
0x44f6fb:	pop	r14
0x44f6fd:	pop	r15
0x44f6ff:	jmp	0x452c20
0x44f704:	mov	rax, qword ptr [rsp + 0xd8]
0x44f70c:	sub	rax, qword ptr fs:[0x28]
0x44f715:	jne	0x452b34
0x44f71b:	mov	rdx, qword ptr [r12 + 0x18]
0x44f720:	add	rsp, 0xe8
0x44f727:	mov	esi, 0x11
0x44f72c:	pop	rbx
0x44f72d:	pop	rbp
0x44f72e:	pop	r12
0x44f730:	pop	r13
0x44f732:	pop	r14
0x44f734:	pop	r15
0x44f736:	jmp	0x452c20
0x44f73b:	mov	rdx, qword ptr [r12 + 0x10]
0x44f740:	mov	esi, 0x11
0x44f745:	lea	rbx, [rip + 0x7df8e]
0x44f74c:	mov	r13d, 0x20
0x44f752:	lea	r14, [rbx + 7]
0x44f756:	call	0x452c20
0x44f75b:	mov	rax, qword ptr [rbp + 0x100]
0x44f762:	jmp	0x44f793
0x44f764:	nop	dword ptr [rax]
0x44f768:	mov	rdx, rax
0x44f76b:	add	rax, 1
0x44f76f:	mov	qword ptr [rbp + 0x100], rax
0x44f776:	mov	byte ptr [rbp + rdx], r13b
0x44f77b:	mov	byte ptr [rbp + 0x108], r13b
0x44f782:	cmp	r14, rbx
0x44f785:	je	0x450e50
0x44f78b:	movzx	r13d, byte ptr [rbx]
0x44f78f:	add	rbx, 1
0x44f793:	cmp	rax, 0xff
0x44f799:	jne	0x44f768
0x44f79b:	mov	rdx, qword ptr [rbp + 0x118]
0x44f7a2:	mov	byte ptr [rbp + 0xff], 0
0x44f7a9:	mov	esi, 0xff
0x44f7ae:	mov	rdi, rbp
0x44f7b1:	call	qword ptr [rbp + 0x110]
0x44f7b7:	add	qword ptr [rbp + 0x140], 1
0x44f7bf:	mov	eax, 1
0x44f7c4:	xor	edx, edx
0x44f7c6:	jmp	0x44f76f
0x44f7c8:	mov	r12, qword ptr [r12 + 0x10]
0x44f7cd:	test	r12, r12
0x44f7d0:	jne	0x4519be
0x44f7d6:	mov	rax, qword ptr [rsp + 0xd8]
0x44f7de:	sub	rax, qword ptr fs:[0x28]
0x44f7e7:	jne	0x452b64
0x44f7ed:	add	rsp, 0xe8
0x44f7f4:	lea	rsi, [rip + 0x7de7c]
0x44f7fb:	pop	rbx
0x44f7fc:	pop	rbp
0x44f7fd:	pop	r12
0x44f7ff:	pop	r13
0x44f801:	pop	r14
0x44f803:	pop	r15
0x44f805:	jmp	0x44b770
0x44f80a:	lea	rbx, [rip + 0x7dda9]
0x44f811:	mov	rax, qword ptr [rdi + 0x100]
0x44f818:	mov	r13d, 0x54
0x44f81e:	lea	r14, [rbx + 0x18]
0x44f822:	jmp	0x44f853
0x44f824:	nop	dword ptr [rax]
0x44f828:	mov	rdx, rax
0x44f82b:	add	rax, 1
0x44f82f:	mov	qword ptr [rbp + 0x100], rax
0x44f836:	mov	byte ptr [rbp + rdx], r13b
0x44f83b:	mov	byte ptr [rbp + 0x108], r13b
0x44f842:	cmp	r14, rbx
0x44f845:	je	0x450f05
0x44f84b:	movzx	r13d, byte ptr [rbx]
0x44f84f:	add	rbx, 1
0x44f853:	cmp	rax, 0xff
0x44f859:	jne	0x44f828
0x44f85b:	mov	rdx, qword ptr [rbp + 0x118]
0x44f862:	mov	byte ptr [rbp + 0xff], 0
0x44f869:	mov	esi, 0xff
0x44f86e:	mov	rdi, rbp
0x44f871:	call	qword ptr [rbp + 0x110]
0x44f877:	add	qword ptr [rbp + 0x140], 1
0x44f87f:	mov	eax, 1
0x44f884:	xor	edx, edx
0x44f886:	jmp	0x44f82f
0x44f888:	lea	rbx, [rip + 0x7dd14]
0x44f88f:	mov	rax, qword ptr [rdi + 0x100]
0x44f896:	mov	r13d, 0x54
0x44f89c:	lea	r14, [rbx + 0x15]
0x44f8a0:	jmp	0x44f8d3
0x44f8a2:	nop	word ptr [rax + rax]
0x44f8a8:	mov	rdx, rax
0x44f8ab:	add	rax, 1
0x44f8af:	mov	qword ptr [rbp + 0x100], rax
0x44f8b6:	mov	byte ptr [rbp + rdx], r13b
0x44f8bb:	mov	byte ptr [rbp + 0x108], r13b
0x44f8c2:	cmp	r14, rbx
0x44f8c5:	je	0x450ecb
0x44f8cb:	movzx	r13d, byte ptr [rbx]
0x44f8cf:	add	rbx, 1
0x44f8d3:	cmp	rax, 0xff
0x44f8d9:	jne	0x44f8a8
0x44f8db:	mov	rdx, qword ptr [rbp + 0x118]
0x44f8e2:	mov	byte ptr [rbp + 0xff], 0
0x44f8e9:	mov	esi, 0xff
0x44f8ee:	mov	rdi, rbp
0x44f8f1:	call	qword ptr [rbp + 0x110]
0x44f8f7:	add	qword ptr [rbp + 0x140], 1
0x44f8ff:	mov	eax, 1
0x44f904:	xor	edx, edx
0x44f906:	jmp	0x44f8af
0x44f908:	lea	rbx, [rip + 0x7dc80]
0x44f90f:	mov	rax, qword ptr [rdi + 0x100]
0x44f916:	mov	r13d, 0x67
0x44f91c:	lea	r14, [rbx + 0x12]
0x44f920:	jmp	0x44f953
0x44f922:	nop	word ptr [rax + rax]
0x44f928:	mov	rdx, rax
0x44f92b:	add	rax, 1
0x44f92f:	mov	qword ptr [rbp + 0x100], rax
0x44f936:	mov	byte ptr [rbp + rdx], r13b
0x44f93b:	mov	byte ptr [rbp + 0x108], r13b
0x44f942:	cmp	rbx, r14
0x44f945:	je	0x45119a
0x44f94b:	movzx	r13d, byte ptr [rbx]
0x44f94f:	add	rbx, 1
0x44f953:	cmp	rax, 0xff
0x44f959:	jne	0x44f928
0x44f95b:	mov	rdx, qword ptr [rbp + 0x118]
0x44f962:	mov	byte ptr [rbp + 0xff], 0
0x44f969:	mov	esi, 0xff
0x44f96e:	mov	rdi, rbp
0x44f971:	call	qword ptr [rbp + 0x110]
0x44f977:	add	qword ptr [rbp + 0x140], 1
0x44f97f:	mov	eax, 1
0x44f984:	xor	edx, edx
0x44f986:	jmp	0x44f92f
0x44f988:	lea	rbx, [rip + 0x7dbf0]
0x44f98f:	mov	rax, qword ptr [rdi + 0x100]
0x44f996:	mov	r13d, 0x6a
0x44f99c:	lea	r14, [rbx + 0xe]
0x44f9a0:	jmp	0x44f9d3
0x44f9a2:	nop	word ptr [rax + rax]
0x44f9a8:	mov	rdx, rax
0x44f9ab:	add	rax, 1
0x44f9af:	mov	qword ptr [rbp + 0x100], rax
0x44f9b6:	mov	byte ptr [rbp + rdx], r13b
0x44f9bb:	mov	byte ptr [rbp + 0x108], r13b
0x44f9c2:	cmp	r14, rbx
0x44f9c5:	je	0x451027
0x44f9cb:	movzx	r13d, byte ptr [rbx]
0x44f9cf:	add	rbx, 1
0x44f9d3:	cmp	rax, 0xff
0x44f9d9:	jne	0x44f9a8
0x44f9db:	mov	rdx, qword ptr [rbp + 0x118]
0x44f9e2:	mov	byte ptr [rbp + 0xff], 0
0x44f9e9:	mov	esi, 0xff
0x44f9ee:	mov	rdi, rbp
0x44f9f1:	call	qword ptr [rbp + 0x110]
0x44f9f7:	add	qword ptr [rbp + 0x140], 1
0x44f9ff:	mov	eax, 1
0x44fa04:	xor	edx, edx
0x44fa06:	jmp	0x44f9af
0x44fa08:	lea	rbx, [rip + 0x7db55]
0x44fa0f:	mov	rax, qword ptr [rdi + 0x100]
0x44fa16:	mov	r13d, 0x63
0x44fa1c:	lea	r14, [rbx + 0x19]
0x44fa20:	jmp	0x44fa53
0x44fa22:	nop	word ptr [rax + rax]
0x44fa28:	mov	rdx, rax
0x44fa2b:	add	rax, 1
0x44fa2f:	mov	qword ptr [rbp + 0x100], rax
0x44fa36:	mov	byte ptr [rbp + rdx], r13b
0x44fa3b:	mov	byte ptr [rbp + 0x108], r13b
0x44fa42:	cmp	r14, rbx
0x44fa45:	je	0x451126
0x44fa4b:	movzx	r13d, byte ptr [rbx]
0x44fa4f:	add	rbx, 1
0x44fa53:	cmp	rax, 0xff
0x44fa59:	jne	0x44fa28
0x44fa5b:	mov	rdx, qword ptr [rbp + 0x118]
0x44fa62:	mov	byte ptr [rbp + 0xff], 0
0x44fa69:	mov	esi, 0xff
0x44fa6e:	mov	rdi, rbp
0x44fa71:	call	qword ptr [rbp + 0x110]
0x44fa77:	add	qword ptr [rbp + 0x140], 1
0x44fa7f:	mov	eax, 1
0x44fa84:	xor	edx, edx
0x44fa86:	jmp	0x44fa2f
0x44fa88:	lea	rbx, [rip + 0x7dac3]
0x44fa8f:	mov	rax, qword ptr [rdi + 0x100]
0x44fa96:	mov	r13d, 0x76
0x44fa9c:	lea	r14, [rbx + 0x10]
0x44faa0:	jmp	0x44fad3
0x44faa2:	nop	word ptr [rax + rax]
0x44faa8:	mov	rdx, rax
0x44faab:	add	rax, 1
0x44faaf:	mov	qword ptr [rbp + 0x100], rax
0x44fab6:	mov	byte ptr [rbp + rdx], r13b
0x44fabb:	mov	byte ptr [rbp + 0x108], r13b
0x44fac2:	cmp	r14, rbx
0x44fac5:	je	0x450fb3
0x44facb:	movzx	r13d, byte ptr [rbx]
0x44facf:	add	rbx, 1
0x44fad3:	cmp	rax, 0xff
0x44fad9:	jne	0x44faa8
0x44fadb:	mov	rdx, qword ptr [rbp + 0x118]
0x44fae2:	mov	byte ptr [rbp + 0xff], 0
0x44fae9:	mov	esi, 0xff
0x44faee:	mov	rdi, rbp
0x44faf1:	call	qword ptr [rbp + 0x110]
0x44faf7:	add	qword ptr [rbp + 0x140], 1
0x44faff:	mov	eax, 1
0x44fb04:	xor	edx, edx
0x44fb06:	jmp	0x44faaf
0x44fb08:	lea	rbx, [rip + 0x7da3f]
0x44fb0f:	mov	rax, qword ptr [rdi + 0x100]
0x44fb16:	mov	r13d, 0x6e
0x44fb1c:	lea	r14, [rbx + 0x14]
0x44fb20:	jmp	0x44fb53
0x44fb22:	nop	word ptr [rax + rax]
0x44fb28:	mov	rdx, rax
0x44fb2b:	add	rax, 1
0x44fb2f:	mov	qword ptr [rbp + 0x100], rax
0x44fb36:	mov	byte ptr [rbp + rdx], r13b
0x44fb3b:	mov	byte ptr [rbp + 0x108], r13b
0x44fb42:	cmp	r14, rbx
0x44fb45:	je	0x451160
0x44fb4b:	movzx	r13d, byte ptr [rbx]
0x44fb4f:	add	rbx, 1
0x44fb53:	cmp	rax, 0xff
0x44fb59:	jne	0x44fb28
0x44fb5b:	mov	rdx, qword ptr [rbp + 0x118]
0x44fb62:	mov	byte ptr [rbp + 0xff], 0
0x44fb69:	mov	esi, 0xff
0x44fb6e:	mov	rdi, rbp
0x44fb71:	call	qword ptr [rbp + 0x110]
0x44fb77:	add	qword ptr [rbp + 0x140], 1
0x44fb7f:	mov	eax, 1
0x44fb84:	xor	edx, edx
0x44fb86:	jmp	0x44fb2f
0x44fb88:	lea	rbx, [rip + 0x7d9ae]
0x44fb8f:	mov	rax, qword ptr [rdi + 0x100]
0x44fb96:	mov	r13d, 0x74
0x44fb9c:	lea	r14, [rbx + 0xf]
0x44fba0:	jmp	0x44fbd3
0x44fba2:	nop	word ptr [rax + rax]
0x44fba8:	mov	rdx, rax
0x44fbab:	add	rax, 1
0x44fbaf:	mov	qword ptr [rbp + 0x100], rax
0x44fbb6:	mov	byte ptr [rbp + rdx], r13b
0x44fbbb:	mov	byte ptr [rbp + 0x108], r13b
0x44fbc2:	cmp	r14, rbx
0x44fbc5:	je	0x450fed
0x44fbcb:	movzx	r13d, byte ptr [rbx]
0x44fbcf:	add	rbx, 1
0x44fbd3:	cmp	rax, 0xff
0x44fbd9:	jne	0x44fba8
0x44fbdb:	mov	rdx, qword ptr [rbp + 0x118]
0x44fbe2:	mov	byte ptr [rbp + 0xff], 0
0x44fbe9:	mov	esi, 0xff
0x44fbee:	mov	rdi, rbp
0x44fbf1:	call	qword ptr [rbp + 0x110]
0x44fbf7:	add	qword ptr [rbp + 0x140], 1
0x44fbff:	mov	eax, 1
0x44fc04:	xor	edx, edx
0x44fc06:	jmp	0x44fbaf
0x44fc08:	mov	rdx, qword ptr [r12 + 0x10]
0x44fc0d:	mov	rax, qword ptr [rdi + 0x128]
0x44fc14:	test	rdx, rdx
0x44fc17:	je	0x44fc74
0x44fc19:	mov	qword ptr [rsp + 0x10], rax
0x44fc1e:	lea	rax, [rsp + 0x10]
0x44fc23:	mov	esi, 0x11
0x44fc28:	mov	qword ptr [rdi + 0x128], rax
0x44fc2f:	mov	rax, qword ptr [rdi + 0x120]
0x44fc36:	mov	qword ptr [rsp + 0x18], r12
0x44fc3b:	mov	qword ptr [rsp + 0x28], rax
0x44fc40:	mov	dword ptr [rsp + 0x20], 0
0x44fc48:	call	0x452c20
0x44fc4d:	mov	rax, qword ptr [rsp + 0x10]
0x44fc52:	mov	r10d, dword ptr [rsp + 0x20]
0x44fc57:	mov	qword ptr [rbp + 0x128], rax
0x44fc5e:	test	r10d, r10d
0x44fc61:	jne	0x44ee6a
0x44fc67:	mov	esi, 0x20
0x44fc6c:	mov	rdi, rbp
0x44fc6f:	call	0x44b6a0
0x44fc74:	mov	rax, qword ptr [rsp + 0xd8]
0x44fc7c:	sub	rax, qword ptr fs:[0x28]
0x44fc85:	jne	0x452b25
0x44fc8b:	mov	rcx, qword ptr [rbp + 0x128]
0x44fc92:	mov	rdx, r12
0x44fc95:	mov	rdi, rbp
0x44fc98:	mov	esi, 0x11
0x44fc9d:	add	rsp, 0xe8
0x44fca4:	pop	rbx
0x44fca5:	pop	rbp
0x44fca6:	pop	r12
0x44fca8:	pop	r13
0x44fcaa:	pop	r14
0x44fcac:	pop	r15
0x44fcae:	jmp	0x453620
0x44fcb3:	mov	rax, qword ptr [rsp + 0xd8]
0x44fcbb:	sub	rax, qword ptr fs:[0x28]
0x44fcc4:	jne	0x452c02
0x44fcca:	mov	rdx, qword ptr [r12 + 0x10]
0x44fccf:	add	rsp, 0xe8
0x44fcd6:	mov	esi, 0x11
0x44fcdb:	pop	rbx
0x44fcdc:	pop	rbp
0x44fcdd:	pop	r12
0x44fcdf:	pop	r13
0x44fce1:	pop	r14
0x44fce3:	pop	r15
0x44fce5:	jmp	0x452c20
0x44fcea:	lea	rbx, [rip + 0x7dd00]
0x44fcf1:	mov	rax, qword ptr [rdi + 0x100]
0x44fcf8:	mov	r13d, 0x74
0x44fcfe:	lea	r14, [rbx + 0x1d]
0x44fd02:	jmp	0x44fd33
0x44fd04:	nop	dword ptr [rax]
0x44fd08:	mov	rdx, rax
0x44fd0b:	add	rax, 1
0x44fd0f:	mov	qword ptr [rbp + 0x100], rax
0x44fd16:	mov	byte ptr [rbp + rdx], r13b
0x44fd1b:	mov	byte ptr [rbp + 0x108], r13b
0x44fd22:	cmp	r14, rbx
0x44fd25:	je	0x4511d4
0x44fd2b:	movzx	r13d, byte ptr [rbx]
0x44fd2f:	add	rbx, 1
0x44fd33:	cmp	rax, 0xff
0x44fd39:	jne	0x44fd08
0x44fd3b:	mov	rdx, qword ptr [rbp + 0x118]
0x44fd42:	mov	byte ptr [rbp + 0xff], 0
0x44fd49:	mov	esi, 0xff
0x44fd4e:	mov	rdi, rbp
0x44fd51:	call	qword ptr [rbp + 0x110]
0x44fd57:	add	qword ptr [rbp + 0x140], 1
0x44fd5f:	mov	eax, 1
0x44fd64:	xor	edx, edx
0x44fd66:	jmp	0x44fd0f
0x44fd68:	lea	rbx, [rip + 0x7d865]
0x44fd6f:	mov	rax, qword ptr [rdi + 0x100]
0x44fd76:	mov	r13d, 0x72
0x44fd7c:	lea	r14, [rbx + 0x14]
0x44fd80:	jmp	0x44fdb3
0x44fd82:	nop	word ptr [rax + rax]
0x44fd88:	mov	rdx, rax
0x44fd8b:	add	rax, 1
0x44fd8f:	mov	qword ptr [rbp + 0x100], rax
0x44fd96:	mov	byte ptr [rbp + rdx], r13b
0x44fd9b:	mov	byte ptr [rbp + 0x108], r13b
0x44fda2:	cmp	rbx, r14
0x44fda5:	je	0x451061
0x44fdab:	movzx	r13d, byte ptr [rbx]
0x44fdaf:	add	rbx, 1
0x44fdb3:	cmp	rax, 0xff
0x44fdb9:	jne	0x44fd88
0x44fdbb:	mov	rdx, qword ptr [rbp + 0x118]
0x44fdc2:	mov	byte ptr [rbp + 0xff], 0
0x44fdc9:	mov	esi, 0xff
0x44fdce:	mov	rdi, rbp
0x44fdd1:	call	qword ptr [rbp + 0x110]
0x44fdd7:	add	qword ptr [rbp + 0x140], 1
0x44fddf:	mov	eax, 1
0x44fde4:	xor	edx, edx
0x44fde6:	jmp	0x44fd8f
0x44fde8:	mov	eax, dword ptr [rdi + 0x138]
0x44fdee:	test	eax, eax
0x44fdf0:	je	0x451977
0x44fdf6:	lea	rbx, [rip + 0x7d6f1]
0x44fdfd:	mov	rax, qword ptr [rdi + 0x100]
0x44fe04:	mov	r13d, 0x61
0x44fe0a:	lea	r14, [rbx + 5]
0x44fe0e:	jmp	0x44fe3b
0x44fe10:	mov	rdx, rax
0x44fe13:	add	rax, 1
0x44fe17:	add	rbx, 1
0x44fe1b:	mov	qword ptr [rbp + 0x100], rax
0x44fe22:	mov	byte ptr [rbp + rdx], r13b
0x44fe27:	mov	byte ptr [rbp + 0x108], r13b
0x44fe2e:	cmp	r14, rbx
0x44fe31:	je	0x451a96
0x44fe37:	movzx	r13d, byte ptr [rbx]
0x44fe3b:	cmp	rax, 0xff
0x44fe41:	jne	0x44fe10
0x44fe43:	mov	rdx, qword ptr [rbp + 0x118]
0x44fe4a:	mov	byte ptr [rbp + 0xff], 0
0x44fe51:	mov	esi, 0xff
0x44fe56:	mov	rdi, rbp
0x44fe59:	call	qword ptr [rbp + 0x110]
0x44fe5f:	add	qword ptr [rbp + 0x140], 1
0x44fe67:	mov	eax, 1
0x44fe6c:	xor	edx, edx
0x44fe6e:	jmp	0x44fe17
0x44fe70:	mov	rbx, qword ptr [rdi + 0x170]
0x44fe77:	mov	rdx, qword ptr [r12 + 0x10]
0x44fe7c:	mov	esi, 0x11
0x44fe81:	mov	qword ptr [rdi + 0x170], r12
0x44fe88:	mov	r13, qword ptr [rdi + 0x128]
0x44fe8f:	mov	qword ptr [rdi + 0x128], 0
0x44fe9a:	call	0x452c20
0x44fe9f:	cmp	byte ptr [rbp + 0x108], 0x3c
0x44fea6:	je	0x45222c
0x44feac:	mov	rax, qword ptr [rbp + 0x100]
0x44feb3:	cmp	rax, 0xff
0x44feb9:	je	0x4521fc
0x44febf:	lea	rdx, [rax + 1]
0x44fec3:	mov	qword ptr [rbp + 0x100], rdx
0x44feca:	mov	esi, 0x11
0x44fecf:	mov	rdi, rbp
0x44fed2:	mov	byte ptr [rbp + rax], 0x3c
0x44fed7:	mov	byte ptr [rbp + 0x108], 0x3c
0x44fede:	mov	rdx, qword ptr [r12 + 0x18]
0x44fee3:	call	0x452c20
0x44fee8:	cmp	byte ptr [rbp + 0x108], 0x3e
0x44feef:	je	0x4521ea
0x44fef5:	mov	rax, qword ptr [rbp + 0x100]
0x44fefc:	cmp	rax, 0xff
0x44ff02:	je	0x4521ba
0x44ff08:	lea	rdx, [rax + 1]
0x44ff0c:	mov	qword ptr [rbp + 0x100], rdx
0x44ff13:	mov	byte ptr [rbp + rax], 0x3e
0x44ff18:	mov	byte ptr [rbp + 0x108], 0x3e
0x44ff1f:	mov	qword ptr [rbp + 0x128], r13
0x44ff26:	mov	qword ptr [rbp + 0x170], rbx
0x44ff2d:	jmp	0x44ee6a
0x44ff32:	movsxd	r13, dword ptr [r12 + 0x18]
0x44ff37:	mov	rbx, qword ptr [r12 + 0x10]
0x44ff3c:	test	r13, r13
0x44ff3f:	je	0x44ee6a
0x44ff45:	mov	rax, qword ptr [rdi + 0x100]
0x44ff4c:	add	r13, rbx
0x44ff4f:	jmp	0x44ff7f
0x44ff51:	nop	dword ptr [rax]
0x44ff58:	mov	rdx, rax
0x44ff5b:	add	rax, 1
0x44ff5f:	add	rbx, 1
0x44ff63:	mov	qword ptr [rbp + 0x100], rax
0x44ff6a:	mov	byte ptr [rbp + rdx], r12b
0x44ff6f:	mov	byte ptr [rbp + 0x108], r12b
0x44ff76:	cmp	r13, rbx
0x44ff79:	je	0x44ee6a
0x44ff7f:	movzx	r12d, byte ptr [rbx]
0x44ff83:	cmp	rax, 0xff
0x44ff89:	jne	0x44ff58
0x44ff8b:	mov	rdx, qword ptr [rbp + 0x118]
0x44ff92:	mov	byte ptr [rbp + 0xff], 0
0x44ff99:	mov	esi, 0xff
0x44ff9e:	mov	rdi, rbp
0x44ffa1:	call	qword ptr [rbp + 0x110]
0x44ffa7:	add	qword ptr [rbp + 0x140], 1
0x44ffaf:	mov	eax, 1
0x44ffb4:	xor	edx, edx
0x44ffb6:	jmp	0x44ff5f
0x44ffb8:	lea	rbx, [rip + 0x7d62b]
0x44ffbf:	mov	rax, qword ptr [rdi + 0x100]
0x44ffc6:	mov	r13d, 0x68
0x44ffcc:	lea	r14, [rbx + 0x10]
0x44ffd0:	jmp	0x450003
0x44ffd2:	nop	word ptr [rax + rax]
0x44ffd8:	mov	rdx, rax
0x44ffdb:	add	rax, 1
0x44ffdf:	mov	qword ptr [rbp + 0x100], rax
0x44ffe6:	mov	byte ptr [rbp + rdx], r13b
0x44ffeb:	mov	byte ptr [rbp + 0x108], r13b
0x44fff2:	cmp	r14, rbx
0x44fff5:	je	0x450f79
0x44fffb:	movzx	r13d, byte ptr [rbx]
0x44ffff:	add	rbx, 1
0x450003:	cmp	rax, 0xff
0x450009:	jne	0x44ffd8
0x45000b:	mov	rdx, qword ptr [rbp + 0x118]
0x450012:	mov	byte ptr [rbp + 0xff], 0
0x450019:	mov	esi, 0xff
0x45001e:	mov	rdi, rbp
0x450021:	call	qword ptr [rbp + 0x110]
0x450027:	add	qword ptr [rbp + 0x140], 1
0x45002f:	mov	eax, 1
0x450034:	xor	edx, edx
0x450036:	jmp	0x44ffdf
0x450038:	lea	rbx, [rip + 0x7d645]
0x45003f:	mov	rax, qword ptr [rdi + 0x100]
0x450046:	mov	r13d, 0x67
0x45004c:	lea	r14, [rbx + 0x1c]
0x450050:	jmp	0x450083
0x450052:	nop	word ptr [rax + rax]
0x450058:	mov	rdx, rax
0x45005b:	add	rax, 1
0x45005f:	mov	qword ptr [rbp + 0x100], rax
0x450066:	mov	byte ptr [rbp + rdx], r13b
0x45006b:	mov	byte ptr [rbp + 0x108], r13b
0x450072:	cmp	rbx, r14
0x450075:	je	0x450f3f
0x45007b:	movzx	r13d, byte ptr [rbx]
0x45007f:	add	rbx, 1
0x450083:	cmp	rax, 0xff
0x450089:	jne	0x450058
0x45008b:	mov	rdx, qword ptr [rbp + 0x118]
0x450092:	mov	byte ptr [rbp + 0xff], 0
0x450099:	mov	esi, 0xff
0x45009e:	mov	rdi, rbp
0x4500a1:	call	qword ptr [rbp + 0x110]
0x4500a7:	add	qword ptr [rbp + 0x140], 1
0x4500af:	mov	eax, 1
0x4500b4:	xor	edx, edx
0x4500b6:	jmp	0x45005f
0x4500b8:	mov	rax, qword ptr [r12 + 0x18]
0x4500bd:	cmp	dword ptr [rax], 0x39
0x4500c0:	jne	0x44ee60
0x4500c6:	mov	rdx, qword ptr [r12 + 0x10]
0x4500cb:	mov	rax, qword ptr [rdx + 0x10]
0x4500cf:	mov	rax, qword ptr [rax]
0x4500d2:	cmp	byte ptr [rax + 1], 0x63
0x4500d6:	je	0x452460
0x4500dc:	mov	rdx, r12
0x4500df:	mov	esi, 0x11
0x4500e4:	mov	rdi, rbp
0x4500e7:	call	0x454990
0x4500ec:	test	eax, eax
0x4500ee:	jne	0x44ee6a
0x4500f4:	mov	rdx, r12
0x4500f7:	mov	esi, 0x11
0x4500fc:	mov	rdi, rbp
0x4500ff:	call	0x454d40
0x450104:	test	eax, eax
0x450106:	jne	0x44ee6a
0x45010c:	mov	rax, qword ptr [r12 + 0x10]
0x450111:	cmp	dword ptr [rax], 0x32
0x450114:	je	0x452961
0x45011a:	mov	rax, qword ptr [rax + 0x10]
0x45011e:	lea	r14, [rip + 0x7d51e]
0x450125:	mov	rsi, r14
0x450128:	mov	rdi, qword ptr [rax]
0x45012b:	call	0x403be0
0x450130:	mov	r9, qword ptr [r12 + 0x18]
0x450135:	test	eax, eax
0x450137:	jne	0x450146
0x450139:	mov	rax, qword ptr [r9 + 0x10]
0x45013d:	cmp	dword ptr [rax], 3
0x450140:	je	0x4529dd
0x450146:	mov	rdx, qword ptr [r9 + 0x10]
0x45014a:	mov	esi, 0x11
0x45014f:	mov	rdi, rbp
0x450152:	call	0x4547e0
0x450157:	mov	r13, qword ptr [r12 + 0x10]
0x45015c:	lea	rsi, [rip + 0xc9d9]
0x450163:	mov	rax, qword ptr [r13 + 0x10]
0x450167:	mov	r15, qword ptr [rax]
0x45016a:	mov	rdi, r15
0x45016d:	call	0x403be0
0x450172:	test	eax, eax
0x450174:	je	0x452993
0x45017a:	mov	rsi, r14
0x45017d:	mov	rdi, r15
0x450180:	call	0x403be0
0x450185:	test	eax, eax
0x450187:	jne	0x4529c8
0x45018d:	mov	rax, qword ptr [r12 + 0x18]
0x450192:	mov	esi, 0x11
0x450197:	mov	rdi, rbp
0x45019a:	mov	rdx, qword ptr [rax + 0x18]
0x45019e:	call	0x4547e0
0x4501a3:	mov	rax, qword ptr [r12 + 0x10]
0x4501a8:	cmp	dword ptr [rax], 0x32
0x4501ab:	jne	0x44ee6a
0x4501b1:	mov	rax, qword ptr [rax + 0x10]
0x4501b5:	cmp	dword ptr [rax + 0x10], 1
0x4501b9:	jne	0x44ee6a
0x4501bf:	mov	rax, qword ptr [rax + 8]
0x4501c3:	cmp	byte ptr [rax], 0x3e
0x4501c6:	jne	0x44ee6a
0x4501cc:	mov	rax, qword ptr [rsp + 0xd8]
0x4501d4:	sub	rax, qword ptr fs:[0x28]
0x4501dd:	jne	0x452b1b
0x4501e3:	add	rsp, 0xe8
0x4501ea:	mov	rdi, rbp
0x4501ed:	mov	esi, 0x29
0x4501f2:	pop	rbx
0x4501f3:	pop	rbp
0x4501f4:	pop	r12
0x4501f6:	pop	r13
0x4501f8:	pop	r14
0x4501fa:	pop	r15
0x4501fc:	jmp	0x44b6a0
0x450201:	nop	dword ptr [rax]
0x450208:	mov	r13, qword ptr [r12 + 0x10]
0x45020d:	mov	r12, qword ptr [r12 + 0x18]
0x450212:	mov	eax, dword ptr [r13]
0x450216:	cmp	eax, 0x32
0x450219:	je	0x451c88
0x45021f:	cmp	eax, 0x34
0x450222:	jne	0x452b43
0x450228:	mov	esi, 0x28
0x45022d:	call	0x44b6a0
0x450232:	mov	rdx, qword ptr [r13 + 0x10]
0x450236:	mov	esi, 0x11
0x45023b:	mov	rdi, rbp
0x45023e:	call	0x452c20
0x450243:	mov	esi, 0x29
0x450248:	mov	rdi, rbp
0x45024b:	call	0x44b6a0
0x450250:	mov	rax, qword ptr [rsp + 0xd8]
0x450258:	sub	rax, qword ptr fs:[0x28]
0x450261:	jne	0x452b6e
0x450267:	add	rsp, 0xe8
0x45026e:	mov	rdx, r12
0x450271:	mov	rdi, rbp
0x450274:	mov	esi, 0x11
0x450279:	pop	rbx
0x45027a:	pop	rbp
0x45027b:	pop	r12
0x45027d:	pop	r13
0x45027f:	pop	r14
0x450281:	pop	r15
0x450283:	jmp	0x4547e0
0x450288:	mov	rdx, qword ptr [r12 + 0x10]
0x45028d:	mov	esi, 0x11
0x450292:	call	0x452c20
0x450297:	mov	rax, qword ptr [rbp + 0x100]
0x45029e:	cmp	rax, 0xff
0x4502a4:	je	0x451f59
0x4502aa:	lea	rdx, [rax + 1]
0x4502ae:	mov	qword ptr [rbp + 0x100], rdx
0x4502b5:	mov	byte ptr [rbp + rax], 0x28
0x4502ba:	mov	byte ptr [rbp + 0x108], 0x28
0x4502c1:	mov	rdx, qword ptr [r12 + 0x18]
0x4502c6:	mov	esi, 0x11
0x4502cb:	mov	rdi, rbp
0x4502ce:	call	0x452c20
0x4502d3:	mov	rax, qword ptr [rbp + 0x100]
0x4502da:	cmp	rax, 0xff
0x4502e0:	je	0x451ba8
0x4502e6:	lea	rdx, [rax + 1]
0x4502ea:	mov	qword ptr [rbp + 0x100], rdx
0x4502f1:	mov	byte ptr [rbp + rax], 0x29
0x4502f6:	mov	byte ptr [rbp + 0x108], 0x29
0x4502fd:	jmp	0x44ee6a
0x450302:	lea	rbx, [rsp + 0xb0]
0x45030a:	mov	r8d, dword ptr [r12 + 0x10]
0x45030f:	xor	eax, eax
0x450311:	lea	rcx, [rip + 0x78da9]
0x450318:	mov	rdi, rbx
0x45031b:	mov	edx, 0x19
0x450320:	mov	esi, 1
0x450325:	call	0x403f60
0x45032a:	mov	rdi, rbx
0x45032d:	call	0x4039e0
0x450332:	test	rax, rax
0x450335:	je	0x44ee6a
0x45033b:	mov	rdx, qword ptr [rbp + 0x100]
0x450342:	lea	r13, [rbx + rax]
0x450346:	jmp	0x450377
0x450348:	nop	dword ptr [rax + rax]
0x450350:	mov	rax, rdx
0x450353:	add	rdx, 1
0x450357:	add	rbx, 1
0x45035b:	mov	qword ptr [rbp + 0x100], rdx
0x450362:	mov	byte ptr [rbp + rax], r12b
0x450367:	mov	byte ptr [rbp + 0x108], r12b
0x45036e:	cmp	r13, rbx
0x450371:	je	0x44ee6a
0x450377:	movzx	r12d, byte ptr [rbx]
0x45037b:	cmp	rdx, 0xff
0x450382:	jne	0x450350
0x450384:	mov	rdx, qword ptr [rbp + 0x118]
0x45038b:	mov	byte ptr [rbp + 0xff], 0
0x450392:	mov	esi, 0xff
0x450397:	mov	rdi, rbp
0x45039a:	call	qword ptr [rbp + 0x110]
0x4503a0:	add	qword ptr [rbp + 0x140], 1
0x4503a8:	mov	edx, 1
0x4503ad:	xor	eax, eax
0x4503af:	jmp	0x450357
0x4503b1:	mov	rax, qword ptr [rdi + 0x100]
0x4503b8:	mov	ebx, dword ptr [r12 + 0x10]
0x4503bd:	cmp	rax, 0xff
0x4503c3:	je	0x451f2c
0x4503c9:	lea	rdx, [rax + 1]
0x4503cd:	mov	qword ptr [rbp + 0x100], rdx
0x4503d4:	mov	byte ptr [rbp + rax], bl
0x4503d8:	mov	byte ptr [rbp + 0x108], bl
0x4503de:	jmp	0x44ee6a
0x4503e3:	lea	rbx, [rip + 0x7d216]
0x4503ea:	mov	rax, qword ptr [rdi + 0x100]
0x4503f1:	mov	r13d, 0x74
0x4503f7:	lea	r14, [rbx + 0x15]
0x4503fb:	jmp	0x45042b
0x4503fd:	nop	dword ptr [rax]
0x450400:	mov	rdx, rax
0x450403:	add	rax, 1
0x450407:	mov	qword ptr [rbp + 0x100], rax
0x45040e:	mov	byte ptr [rbp + rdx], r13b
0x450413:	mov	byte ptr [rbp + 0x108], r13b
0x45041a:	cmp	rbx, r14
0x45041d:	je	0x451756
0x450423:	movzx	r13d, byte ptr [rbx]
0x450427:	add	rbx, 1
0x45042b:	cmp	rax, 0xff
0x450431:	jne	0x450400
0x450433:	mov	rdx, qword ptr [rbp + 0x118]
0x45043a:	mov	byte ptr [rbp + 0xff], 0
0x450441:	mov	esi, 0xff
0x450446:	mov	rdi, rbp
0x450449:	call	qword ptr [rbp + 0x110]
0x45044f:	add	qword ptr [rbp + 0x140], 1
0x450457:	mov	eax, 1
0x45045c:	xor	edx, edx
0x45045e:	jmp	0x450407
0x450460:	mov	rax, qword ptr [r12 + 0x18]
0x450465:	cmp	dword ptr [rax], 0x3b
0x450468:	jne	0x44ee60
0x45046e:	mov	rax, qword ptr [rax + 0x18]
0x450472:	cmp	dword ptr [rax], 0x3c
0x450475:	jne	0x44ee60
0x45047b:	mov	rdx, r12
0x45047e:	mov	esi, 0x11
0x450483:	call	0x454990
0x450488:	test	eax, eax
0x45048a:	jne	0x44ee6a
0x450490:	mov	rdx, r12
0x450493:	mov	esi, 0x11
0x450498:	mov	rdi, rbp
0x45049b:	call	0x454d40
0x4504a0:	test	eax, eax
0x4504a2:	jne	0x44ee6a
0x4504a8:	mov	rax, qword ptr [r12 + 0x18]
0x4504ad:	mov	r15, qword ptr [r12 + 0x10]
0x4504b2:	lea	rsi, [rip + 0x7d18d]
0x4504b9:	mov	r13, qword ptr [rax + 0x10]
0x4504bd:	mov	rax, qword ptr [rax + 0x18]
0x4504c1:	mov	r14, qword ptr [rax + 0x10]
0x4504c5:	mov	r12, qword ptr [rax + 0x18]
0x4504c9:	mov	rax, qword ptr [r15 + 0x10]
0x4504cd:	mov	rdi, qword ptr [rax]
0x4504d0:	call	0x403be0
0x4504d5:	test	eax, eax
0x4504d7:	jne	0x452a06
0x4504dd:	mov	rdx, r13
0x4504e0:	mov	esi, 0x11
0x4504e5:	mov	rdi, rbp
0x4504e8:	call	0x4547e0
0x4504ed:	mov	rdx, r15
0x4504f0:	mov	esi, 0x11
0x4504f5:	mov	rdi, rbp
0x4504f8:	call	0x454020
0x4504fd:	mov	esi, 0x11
0x450502:	mov	rdi, rbp
0x450505:	mov	rdx, r14
0x450508:	call	0x4547e0
0x45050d:	lea	rsi, [rip + 0x7d135]
0x450514:	mov	rdi, rbp
0x450517:	call	0x44b770
0x45051c:	mov	rax, qword ptr [rsp + 0xd8]
0x450524:	sub	rax, qword ptr fs:[0x28]
0x45052d:	jne	0x452bd5
0x450533:	add	rsp, 0xe8
0x45053a:	mov	rdx, r12
0x45053d:	mov	rdi, rbp
0x450540:	mov	esi, 0x11
0x450545:	pop	rbx
0x450546:	pop	rbp
0x450547:	pop	r12
0x450549:	pop	r13
0x45054b:	pop	r14
0x45054d:	pop	r15
0x45054f:	jmp	0x4547e0
0x450554:	nop	dword ptr [rax]
0x450558:	lea	rbx, [rip + 0x7d0ff]
0x45055f:	mov	rax, qword ptr [rdi + 0x100]
0x450566:	mov	r13d, 0x6a
0x45056c:	lea	r14, [rbx + 0xd]
0x450570:	jmp	0x4505a3
0x450572:	nop	word ptr [rax + rax]
0x450578:	mov	rdx, rax
0x45057b:	add	rax, 1
0x45057f:	mov	qword ptr [rbp + 0x100], rax
0x450586:	mov	byte ptr [rbp + rdx], r13b
0x45058b:	mov	byte ptr [rbp + 0x108], r13b
0x450592:	cmp	rbx, r14
0x450595:	je	0x45179a
0x45059b:	movzx	r13d, byte ptr [rbx]
0x45059f:	add	rbx, 1
0x4505a3:	cmp	rax, 0xff
0x4505a9:	jne	0x450578
0x4505ab:	mov	rdx, qword ptr [rbp + 0x118]
0x4505b2:	mov	byte ptr [rbp + 0xff], 0
0x4505b9:	mov	esi, 0xff
0x4505be:	mov	rdi, rbp
0x4505c1:	call	qword ptr [rbp + 0x110]
0x4505c7:	add	qword ptr [rbp + 0x140], 1
0x4505cf:	mov	eax, 1
0x4505d4:	xor	edx, edx
0x4505d6:	jmp	0x45057f
0x4505d8:	lea	rbx, [rip + 0x7d058]
0x4505df:	mov	rax, qword ptr [rdi + 0x100]
0x4505e6:	mov	r13d, 0x6f
0x4505ec:	lea	r14, [rbx + 8]
0x4505f0:	jmp	0x450623
0x4505f2:	nop	word ptr [rax + rax]
0x4505f8:	mov	rdx, rax
0x4505fb:	add	rax, 1
0x4505ff:	mov	qword ptr [rbp + 0x100], rax
0x450606:	mov	byte ptr [rbp + rdx], r13b
0x45060b:	mov	byte ptr [rbp + 0x108], r13b
0x450612:	cmp	r14, rbx
0x450615:	je	0x451469
0x45061b:	movzx	r13d, byte ptr [rbx]
0x45061f:	add	rbx, 1
0x450623:	cmp	rax, 0xff
0x450629:	jne	0x4505f8
0x45062b:	mov	rdx, qword ptr [rbp + 0x118]
0x450632:	mov	byte ptr [rbp + 0xff], 0
0x450639:	mov	esi, 0xff
0x45063e:	mov	rdi, rbp
0x450641:	call	qword ptr [rbp + 0x110]
0x450647:	add	qword ptr [rbp + 0x140], 1
0x45064f:	mov	eax, 1
0x450654:	xor	edx, edx
0x450656:	jmp	0x4505ff
0x450658:	lea	rbx, [rip + 0x7cfd8]
0x45065f:	mov	rax, qword ptr [rdi + 0x100]
0x450666:	mov	r13d, 0x6f
0x45066c:	lea	r14, [rbx + 8]
0x450670:	jmp	0x4506a3
0x450672:	nop	word ptr [rax + rax]
0x450678:	mov	rdx, rax
0x45067b:	add	rax, 1
0x45067f:	mov	qword ptr [rbp + 0x100], rax
0x450686:	mov	byte ptr [rbp + rdx], r13b
0x45068b:	mov	byte ptr [rbp + 0x108], r13b
0x450692:	cmp	r14, rbx
0x450695:	je	0x4514cc
0x45069b:	movzx	r13d, byte ptr [rbx]
0x45069f:	add	rbx, 1
0x4506a3:	cmp	rax, 0xff
0x4506a9:	jne	0x450678
0x4506ab:	mov	rdx, qword ptr [rbp + 0x118]
0x4506b2:	mov	byte ptr [rbp + 0xff], 0
0x4506b9:	mov	esi, 0xff
0x4506be:	mov	rdi, rbp
0x4506c1:	call	qword ptr [rbp + 0x110]
0x4506c7:	add	qword ptr [rbp + 0x140], 1
0x4506cf:	mov	eax, 1
0x4506d4:	xor	edx, edx
0x4506d6:	jmp	0x45067f
0x4506d8:	mov	r13, qword ptr [r12 + 0x10]
0x4506dd:	lea	rbx, [rip + 0x7cf4a]
0x4506e4:	mov	rax, qword ptr [rdi + 0x100]
0x4506eb:	mov	r14d, 0x6f
0x4506f1:	lea	r15, [rbx + 7]
0x4506f5:	movsxd	r12, dword ptr [r13 + 0x10]
0x4506f9:	jmp	0x45072b
0x4506fb:	nop	dword ptr [rax + rax]
0x450700:	mov	rdx, rax
0x450703:	add	rax, 1
0x450707:	mov	qword ptr [rbp + 0x100], rax
0x45070e:	mov	byte ptr [rbp + rdx], r14b
0x450713:	mov	byte ptr [rbp + 0x108], r14b
0x45071a:	cmp	r15, rbx
0x45071d:	je	0x451540
0x450723:	movzx	r14d, byte ptr [rbx]
0x450727:	add	rbx, 1
0x45072b:	cmp	rax, 0xff
0x450731:	jne	0x450700
0x450733:	mov	rdx, qword ptr [rbp + 0x118]
0x45073a:	mov	byte ptr [rbp + 0xff], 0
0x450741:	mov	esi, 0xff
0x450746:	mov	rdi, rbp
0x450749:	call	qword ptr [rbp + 0x110]
0x45074f:	add	qword ptr [rbp + 0x140], 1
0x450757:	mov	eax, 1
0x45075c:	xor	edx, edx
0x45075e:	jmp	0x450707
0x450760:	mov	rdx, qword ptr [r12 + 0x10]
0x450765:	mov	r12, qword ptr [r12 + 0x18]
0x45076a:	test	rdx, rdx
0x45076d:	je	0x450779
0x45076f:	mov	esi, 0x11
0x450774:	call	0x452c20
0x450779:	mov	rax, qword ptr [rbp + 0x100]
0x450780:	cmp	rax, 0xff
0x450786:	je	0x451fb9
0x45078c:	lea	rdx, [rax + 1]
0x450790:	mov	qword ptr [rbp + 0x100], rdx
0x450797:	mov	esi, 0x11
0x45079c:	mov	rdx, r12
0x45079f:	mov	rdi, rbp
0x4507a2:	mov	byte ptr [rbp + rax], 0x7b
0x4507a7:	mov	byte ptr [rbp + 0x108], 0x7b
0x4507ae:	call	0x452c20
0x4507b3:	mov	rax, qword ptr [rbp + 0x100]
0x4507ba:	cmp	rax, 0xff
0x4507c0:	je	0x451f89
0x4507c6:	lea	rdx, [rax + 1]
0x4507ca:	mov	qword ptr [rbp + 0x100], rdx
0x4507d1:	mov	byte ptr [rbp + rax], 0x7d
0x4507d6:	mov	byte ptr [rbp + 0x108], 0x7d
0x4507dd:	jmp	0x44ee6a
0x4507e2:	mov	rax, qword ptr [rsp + 0xd8]
0x4507ea:	sub	rax, qword ptr fs:[0x28]
0x4507f3:	jne	0x452b73
0x4507f9:	mov	rdx, qword ptr [r12 + 0x10]
0x4507fe:	add	rsp, 0xe8
0x450805:	mov	esi, 0x11
0x45080a:	pop	rbx
0x45080b:	pop	rbp
0x45080c:	pop	r12
0x45080e:	pop	r13
0x450810:	pop	r14
0x450812:	pop	r15
0x450814:	jmp	0x454020
0x450819:	lea	rbx, [rip + 0x7ce4d]
0x450820:	mov	rax, qword ptr [rdi + 0x100]
0x450827:	mov	r13d, 0x64
0x45082d:	lea	r14, [rbx + 9]
0x450831:	jmp	0x450863
0x450833:	nop	dword ptr [rax + rax]
0x450838:	mov	rdx, rax
0x45083b:	add	rax, 1
0x45083f:	mov	qword ptr [rbp + 0x100], rax
0x450846:	mov	byte ptr [rbp + rdx], r13b
0x45084b:	mov	byte ptr [rbp + 0x108], r13b
0x450852:	cmp	r14, rbx
0x450855:	je	0x451790
0x45085b:	movzx	r13d, byte ptr [rbx]
0x45085f:	add	rbx, 1
0x450863:	cmp	rax, 0xff
0x450869:	jne	0x450838
0x45086b:	mov	rdx, qword ptr [rbp + 0x118]
0x450872:	mov	byte ptr [rbp + 0xff], 0
0x450879:	mov	esi, 0xff
0x45087e:	mov	rdi, rbp
0x450881:	call	qword ptr [rbp + 0x110]
0x450887:	add	qword ptr [rbp + 0x140], 1
0x45088f:	mov	eax, 1
0x450894:	xor	edx, edx
0x450896:	jmp	0x45083f
0x450898:	mov	r15, qword ptr [r12 + 0x10]
0x45089d:	xor	r12d, r12d
0x4508a0:	mov	rsi, r15
0x4508a3:	call	0x44b810
0x4508a8:	test	rax, rax
0x4508ab:	jne	0x4508bb
0x4508ad:	jmp	0x45271f
0x4508b2:	nop	word ptr [rax + rax]
0x4508b8:	mov	r12d, r14d
0x4508bb:	cmp	dword ptr [rax], 0x2f
0x4508be:	jne	0x451852
0x4508c4:	cmp	qword ptr [rax + 0x10], 0
0x4508c9:	je	0x451852
0x4508cf:	mov	rax, qword ptr [rax + 0x18]
0x4508d3:	lea	r14d, [r12 + 1]
0x4508d8:	test	rax, rax
0x4508db:	jne	0x4508b8
0x4508dd:	lea	rbx, [rip + 0x7cd48]
0x4508e4:	jmp	0x4508fd
0x4508e6:	nop	word ptr cs:[rax + rax]
0x4508f0:	add	r13d, 1
0x4508f4:	cmp	r13d, r14d
0x4508f7:	jge	0x44ee6a
0x4508fd:	mov	dword ptr [rbp + 0x13c], r13d
0x450904:	mov	rdx, r15
0x450907:	mov	esi, 0x11
0x45090c:	mov	rdi, rbp
0x45090f:	call	0x452c20
0x450914:	cmp	r12d, r13d
0x450917:	jle	0x4508f0
0x450919:	mov	rax, qword ptr [rbp + 0x100]
0x450920:	lea	rcx, [rip + 0x7cd03]
0x450927:	mov	r8d, 0x2c
0x45092d:	jmp	0x450957
0x45092f:	nop	
0x450930:	mov	rdx, rax
0x450933:	add	rax, 1
0x450937:	add	rcx, 1
0x45093b:	mov	qword ptr [rbp + 0x100], rax
0x450942:	mov	byte ptr [rbp + rdx], r8b
0x450947:	mov	byte ptr [rbp + 0x108], r8b
0x45094e:	cmp	rcx, rbx
0x450951:	je	0x4508f0
0x450953:	movzx	r8d, byte ptr [rcx]
0x450957:	cmp	rax, 0xff
0x45095d:	jne	0x450930
0x45095f:	mov	byte ptr [rsp + 0xf], r8b
0x450964:	mov	esi, 0xff
0x450969:	mov	rdi, rbp
0x45096c:	mov	rdx, qword ptr [rbp + 0x118]
0x450973:	mov	qword ptr [rsp], rcx
0x450977:	mov	byte ptr [rbp + 0xff], 0
0x45097e:	call	qword ptr [rbp + 0x110]
0x450984:	add	qword ptr [rbp + 0x140], 1
0x45098c:	mov	rcx, qword ptr [rsp]
0x450990:	xor	edx, edx
0x450992:	movzx	r8d, byte ptr [rsp + 0xf]
0x450998:	mov	eax, 1
0x45099d:	jmp	0x450937
0x45099f:	lea	rbx, [rip + 0x7cc56]
0x4509a6:	mov	rax, qword ptr [rdi + 0x100]
0x4509ad:	mov	r13d, 0x6e
0x4509b3:	lea	r14, [rbx + 0x19]
0x4509b7:	jmp	0x4509eb
0x4509b9:	nop	dword ptr [rax]
0x4509c0:	mov	rdx, rax
0x4509c3:	add	rax, 1
0x4509c7:	mov	qword ptr [rbp + 0x100], rax
0x4509ce:	mov	byte ptr [rbp + rdx], r13b
0x4509d3:	mov	byte ptr [rbp + 0x108], r13b
0x4509da:	cmp	rbx, r14
0x4509dd:	je	0x451381
0x4509e3:	movzx	r13d, byte ptr [rbx]
0x4509e7:	add	rbx, 1
0x4509eb:	cmp	rax, 0xff
0x4509f1:	jne	0x4509c0
0x4509f3:	mov	rdx, qword ptr [rbp + 0x118]
0x4509fa:	mov	byte ptr [rbp + 0xff], 0
0x450a01:	mov	esi, 0xff
0x450a06:	mov	rdi, rbp
0x450a09:	call	qword ptr [rbp + 0x110]
0x450a0f:	add	qword ptr [rbp + 0x140], 1
0x450a17:	mov	eax, 1
0x450a1c:	xor	edx, edx
0x450a1e:	jmp	0x4509c7
0x450a20:	mov	rdx, qword ptr [r12 + 0x10]
0x450a25:	mov	esi, 0x11
0x450a2a:	lea	rbx, [rip + 0x7caa5]
0x450a31:	mov	r13d, 0x5b
0x450a37:	lea	r14, [rbx + 5]
0x450a3b:	call	0x452c20
0x450a40:	mov	rax, qword ptr [rbp + 0x100]
0x450a47:	jmp	0x450a7b
0x450a49:	nop	dword ptr [rax]
0x450a50:	mov	rdx, rax
0x450a53:	add	rax, 1
0x450a57:	add	rbx, 1
0x450a5b:	mov	qword ptr [rbp + 0x100], rax
0x450a62:	mov	byte ptr [rbp + rdx], r13b
0x450a67:	mov	byte ptr [rbp + 0x108], r13b
0x450a6e:	cmp	r14, rbx
0x450a71:	je	0x450e50
0x450a77:	movzx	r13d, byte ptr [rbx]
0x450a7b:	cmp	rax, 0xff
0x450a81:	jne	0x450a50
0x450a83:	mov	rdx, qword ptr [rbp + 0x118]
0x450a8a:	mov	byte ptr [rbp + 0xff], 0
0x450a91:	mov	esi, 0xff
0x450a96:	mov	rdi, rbp
0x450a99:	call	qword ptr [rbp + 0x110]
0x450a9f:	add	qword ptr [rbp + 0x140], 1
0x450aa7:	mov	eax, 1
0x450aac:	xor	edx, edx
0x450aae:	jmp	0x450a57
0x450ab0:	mov	rbx, qword ptr [r12 + 0x10]
0x450ab5:	mov	r14, qword ptr [rdi + 0x128]
0x450abc:	mov	qword ptr [rdi + 0x128], 0
0x450ac7:	test	rbx, rbx
0x450aca:	je	0x44ee60
0x450ad0:	lea	r13, [rsp + 0x30]
0x450ad5:	mov	rdi, qword ptr [rdi + 0x120]
0x450adc:	xor	ecx, ecx
0x450ade:	xor	edx, edx
0x450ae0:	movabs	r8, 0x3400000000001f
0x450aea:	mov	rax, r13
0x450aed:	mov	qword ptr [rax], rcx
0x450af0:	mov	r9, rax
0x450af3:	lea	r15d, [rdx + 1]
0x450af7:	mov	dword ptr [rax + 0x10], 0
0x450afe:	mov	ecx, dword ptr [rbx]
0x450b00:	mov	qword ptr [rax + 8], rbx
0x450b04:	lea	esi, [rcx - 0x1c]
0x450b07:	mov	qword ptr [rax + 0x18], rdi
0x450b0b:	cmp	esi, 0x35
0x450b0e:	ja	0x4520e4
0x450b14:	bt	r8, rsi
0x450b18:	jb	0x45182c
0x450b1e:	mov	qword ptr [rbp + 0x128], rax
0x450b25:	mov	rdx, qword ptr [r12 + 0x18]
0x450b2a:	mov	esi, 0x11
0x450b2f:	mov	rdi, rbp
0x450b32:	call	0x452c20
0x450b37:	cmp	dword ptr [rbx], 4
0x450b3a:	jne	0x450b48
0x450b3c:	mov	rax, qword ptr [rsp + 0x10]
0x450b41:	mov	qword ptr [rbp + 0x120], rax
0x450b48:	test	r15d, r15d
0x450b4b:	je	0x4518b4
0x450b51:	lea	ebx, [r15 - 1]
0x450b55:	shl	rbx, 5
0x450b59:	add	rbx, r13
0x450b5c:	mov	eax, dword ptr [rbx + 0x10]
0x450b5f:	test	eax, eax
0x450b61:	je	0x450b7f
0x450b63:	nop	dword ptr [rax + rax]
0x450b68:	lea	rax, [rbx - 0x20]
0x450b6c:	cmp	r13, rbx
0x450b6f:	je	0x4518b4
0x450b75:	mov	rbx, rax
0x450b78:	mov	eax, dword ptr [rbx + 0x10]
0x450b7b:	test	eax, eax
0x450b7d:	jne	0x450b68
0x450b7f:	mov	rax, qword ptr [rbp + 0x100]
0x450b86:	cmp	rax, 0xff
0x450b8c:	je	0x4525c6
0x450b92:	lea	rdx, [rax + 1]
0x450b96:	mov	qword ptr [rbp + 0x100], rdx
0x450b9d:	mov	rdx, qword ptr [rbx + 8]
0x450ba1:	mov	esi, 0x11
0x450ba6:	mov	rdi, rbp
0x450ba9:	mov	byte ptr [rbp + rax], 0x20
0x450bae:	mov	byte ptr [rbp + 0x108], 0x20
0x450bb5:	call	0x452ce0
0x450bba:	jmp	0x450b68
0x450bbc:	lea	rbx, [rip + 0x7cafc]
0x450bc3:	mov	rax, qword ptr [rdi + 0x100]
0x450bca:	mov	r13d, 0x7b
0x450bd0:	lea	r14, [rbx + 7]
0x450bd4:	jmp	0x450c0b
0x450bd6:	nop	word ptr cs:[rax + rax]
0x450be0:	mov	rdx, rax
0x450be3:	add	rax, 1
0x450be7:	mov	qword ptr [rbp + 0x100], rax
0x450bee:	mov	byte ptr [rbp + rdx], r13b
0x450bf3:	mov	byte ptr [rbp + 0x108], r13b
0x450bfa:	cmp	r14, rbx
0x450bfd:	je	0x45120e
0x450c03:	movzx	r13d, byte ptr [rbx]
0x450c07:	add	rbx, 1
0x450c0b:	cmp	rax, 0xff
0x450c11:	jne	0x450be0
0x450c13:	mov	rdx, qword ptr [rbp + 0x118]
0x450c1a:	mov	byte ptr [rbp + 0xff], 0
0x450c21:	mov	esi, 0xff
0x450c26:	mov	rdi, rbp
0x450c29:	call	qword ptr [rbp + 0x110]
0x450c2f:	add	qword ptr [rbp + 0x140], 1
0x450c37:	mov	eax, 1
0x450c3c:	xor	edx, edx
0x450c3e:	jmp	0x450be7
0x450c40:	lea	rbx, [rip + 0x7ca5b]
0x450c47:	mov	rax, qword ptr [rdi + 0x100]
0x450c4e:	mov	r13d, 0x67
0x450c54:	lea	r14, [rbx + 0x1b]
0x450c58:	jmp	0x450c8b
0x450c5a:	nop	word ptr [rax + rax]
0x450c60:	mov	rdx, rax
0x450c63:	add	rax, 1
0x450c67:	mov	qword ptr [rbp + 0x100], rax
0x450c6e:	mov	byte ptr [rbp + rdx], r13b
0x450c73:	mov	byte ptr [rbp + 0x108], r13b
0x450c7a:	cmp	r14, rbx
0x450c7d:	je	0x451654
0x450c83:	movzx	r13d, byte ptr [rbx]
0x450c87:	add	rbx, 1
0x450c8b:	cmp	rax, 0xff
0x450c91:	jne	0x450c60
0x450c93:	mov	rdx, qword ptr [rbp + 0x118]
0x450c9a:	mov	byte ptr [rbp + 0xff], 0
0x450ca1:	mov	esi, 0xff
0x450ca6:	mov	rdi, rbp
0x450ca9:	call	qword ptr [rbp + 0x110]
0x450caf:	add	qword ptr [rbp + 0x140], 1
0x450cb7:	mov	eax, 1
0x450cbc:	xor	edx, edx
0x450cbe:	jmp	0x450c67
0x450cc0:	lea	rbx, [rip + 0x7ca04]
0x450cc7:	mov	rax, qword ptr [rdi + 0x100]
0x450cce:	mov	r13d, 0x7b
0x450cd4:	lea	r14, [rbx + 0xd]
0x450cd8:	jmp	0x450d0b
0x450cda:	nop	word ptr [rax + rax]
0x450ce0:	mov	rdx, rax
0x450ce3:	add	rax, 1
0x450ce7:	mov	qword ptr [rbp + 0x100], rax
0x450cee:	mov	byte ptr [rbp + rdx], r13b
0x450cf3:	mov	byte ptr [rbp + 0x108], r13b
0x450cfa:	cmp	r14, rbx
0x450cfd:	je	0x4513bb
0x450d03:	movzx	r13d, byte ptr [rbx]
0x450d07:	add	rbx, 1
0x450d0b:	cmp	rax, 0xff
0x450d11:	jne	0x450ce0
0x450d13:	mov	rdx, qword ptr [rbp + 0x118]
0x450d1a:	mov	byte ptr [rbp + 0xff], 0
0x450d21:	mov	esi, 0xff
0x450d26:	mov	rdi, rbp
0x450d29:	call	qword ptr [rbp + 0x110]
0x450d2f:	add	qword ptr [rbp + 0x140], 1
0x450d37:	mov	eax, 1
0x450d3c:	xor	edx, edx
0x450d3e:	jmp	0x450ce7
0x450d40:	mov	rax, qword ptr [r12 + 0x10]
0x450d45:	movsxd	r13, dword ptr [rax + 8]
0x450d49:	mov	rbx, qword ptr [rax]
0x450d4c:	test	r13, r13
0x450d4f:	je	0x44ee6a
0x450d55:	mov	rax, qword ptr [rdi + 0x100]
0x450d5c:	add	r13, rbx
0x450d5f:	jmp	0x450d8f
0x450d61:	nop	dword ptr [rax]
0x450d68:	mov	rdx, rax
0x450d6b:	add	rax, 1
0x450d6f:	add	rbx, 1
0x450d73:	mov	qword ptr [rbp + 0x100], rax
0x450d7a:	mov	byte ptr [rbp + rdx], r12b
0x450d7f:	mov	byte ptr [rbp + 0x108], r12b
0x450d86:	cmp	r13, rbx
0x450d89:	je	0x44ee6a
0x450d8f:	movzx	r12d, byte ptr [rbx]
0x450d93:	cmp	rax, 0xff
0x450d99:	jne	0x450d68
0x450d9b:	mov	rdx, qword ptr [rbp + 0x118]
0x450da2:	mov	byte ptr [rbp + 0xff], 0
0x450da9:	mov	esi, 0xff
0x450dae:	mov	rdi, rbp
0x450db1:	call	qword ptr [rbp + 0x110]
0x450db7:	add	qword ptr [rbp + 0x140], 1
0x450dbf:	mov	eax, 1
0x450dc4:	xor	edx, edx
0x450dc6:	jmp	0x450d6f
0x450dc8:	movsxd	r13, dword ptr [r12 + 0x18]
0x450dcd:	mov	rbx, qword ptr [r12 + 0x10]
0x450dd2:	test	r13, r13
0x450dd5:	je	0x44ee6a
0x450ddb:	mov	rax, qword ptr [rdi + 0x100]
0x450de2:	add	r13, rbx
0x450de5:	jmp	0x450e17
0x450de7:	nop	word ptr [rax + rax]
0x450df0:	mov	rdx, rax
0x450df3:	add	rax, 1
0x450df7:	add	rbx, 1
0x450dfb:	mov	qword ptr [rbp + 0x100], rax
0x450e02:	mov	byte ptr [rbp + rdx], r12b
0x450e07:	mov	byte ptr [rbp + 0x108], r12b
0x450e0e:	cmp	r13, rbx
0x450e11:	je	0x44ee6a
0x450e17:	movzx	r12d, byte ptr [rbx]
0x450e1b:	cmp	rax, 0xff
0x450e21:	jne	0x450df0
0x450e23:	mov	rdx, qword ptr [rbp + 0x118]
0x450e2a:	mov	byte ptr [rbp + 0xff], 0
0x450e31:	mov	esi, 0xff
0x450e36:	mov	rdi, rbp
0x450e39:	call	qword ptr [rbp + 0x110]
0x450e3f:	add	qword ptr [rbp + 0x140], 1
0x450e47:	mov	eax, 1
0x450e4c:	xor	edx, edx
0x450e4e:	jmp	0x450df7
0x450e50:	mov	rdx, qword ptr [r12 + 0x18]
0x450e55:	mov	esi, 0x11
0x450e5a:	mov	rdi, rbp
0x450e5d:	call	0x452c20
0x450e62:	mov	rax, qword ptr [rbp + 0x100]
0x450e69:	cmp	rax, 0xff
0x450e6f:	je	0x451b78
0x450e75:	lea	rdx, [rax + 1]
0x450e79:	mov	qword ptr [rbp + 0x100], rdx
0x450e80:	mov	byte ptr [rbp + rax], 0x5d
0x450e85:	mov	byte ptr [rbp + 0x108], 0x5d
0x450e8c:	jmp	0x44ee6a
0x450e91:	mov	rax, qword ptr [rsp + 0xd8]
0x450e99:	sub	rax, qword ptr fs:[0x28]
0x450ea2:	jne	0x452b39
0x450ea8:	mov	rdx, qword ptr [r12 + 0x10]
0x450ead:	add	rsp, 0xe8
0x450eb4:	mov	rdi, rbp
0x450eb7:	mov	esi, 0x11
0x450ebc:	pop	rbx
0x450ebd:	pop	rbp
0x450ebe:	pop	r12
0x450ec0:	pop	r13
0x450ec2:	pop	r14
0x450ec4:	pop	r15
0x450ec6:	jmp	0x452c20
0x450ecb:	mov	rax, qword ptr [rsp + 0xd8]
0x450ed3:	sub	rax, qword ptr fs:[0x28]
0x450edc:	jne	0x452b3e
0x450ee2:	mov	rdx, qword ptr [r12 + 0x10]
0x450ee7:	add	rsp, 0xe8
0x450eee:	mov	rdi, rbp
0x450ef1:	mov	esi, 0x11
0x450ef6:	pop	rbx
0x450ef7:	pop	rbp
0x450ef8:	pop	r12
0x450efa:	pop	r13
0x450efc:	pop	r14
0x450efe:	pop	r15
0x450f00:	jmp	0x452c20
0x450f05:	mov	rax, qword ptr [rsp + 0xd8]
0x450f0d:	sub	rax, qword ptr fs:[0x28]
0x450f16:	jne	0x452bd0
0x450f1c:	mov	rdx, qword ptr [r12 + 0x10]
0x450f21:	add	rsp, 0xe8
0x450f28:	mov	rdi, rbp
0x450f2b:	mov	esi, 0x11
0x450f30:	pop	rbx
0x450f31:	pop	rbp
0x450f32:	pop	r12
0x450f34:	pop	r13
0x450f36:	pop	r14
0x450f38:	pop	r15
0x450f3a:	jmp	0x452c20
0x450f3f:	mov	rax, qword ptr [rsp + 0xd8]
0x450f47:	sub	rax, qword ptr fs:[0x28]
0x450f50:	jne	0x452b2a
0x450f56:	mov	rdx, qword ptr [r12 + 0x10]
0x450f5b:	add	rsp, 0xe8
0x450f62:	mov	rdi, rbp
0x450f65:	mov	esi, 0x11
0x450f6a:	pop	rbx
0x450f6b:	pop	rbp
0x450f6c:	pop	r12
0x450f6e:	pop	r13
0x450f70:	pop	r14
0x450f72:	pop	r15
0x450f74:	jmp	0x452c20
0x450f79:	mov	rax, qword ptr [rsp + 0xd8]
0x450f81:	sub	rax, qword ptr fs:[0x28]
0x450f8a:	jne	0x452be4
0x450f90:	mov	rdx, qword ptr [r12 + 0x10]
0x450f95:	add	rsp, 0xe8
0x450f9c:	mov	rdi, rbp
0x450f9f:	mov	esi, 0x11
0x450fa4:	pop	rbx
0x450fa5:	pop	rbp
0x450fa6:	pop	r12
0x450fa8:	pop	r13
0x450faa:	pop	r14
0x450fac:	pop	r15
0x450fae:	jmp	0x452c20
0x450fb3:	mov	rax, qword ptr [rsp + 0xd8]
0x450fbb:	sub	rax, qword ptr fs:[0x28]
0x450fc4:	jne	0x452bf8
0x450fca:	mov	rdx, qword ptr [r12 + 0x10]
0x450fcf:	add	rsp, 0xe8
0x450fd6:	mov	rdi, rbp
0x450fd9:	mov	esi, 0x11
0x450fde:	pop	rbx
0x450fdf:	pop	rbp
0x450fe0:	pop	r12
0x450fe2:	pop	r13
0x450fe4:	pop	r14
0x450fe6:	pop	r15
0x450fe8:	jmp	0x452c20
0x450fed:	mov	rax, qword ptr [rsp + 0xd8]
0x450ff5:	sub	rax, qword ptr fs:[0x28]
0x450ffe:	jne	0x452bee
0x451004:	mov	rdx, qword ptr [r12 + 0x10]
0x451009:	add	rsp, 0xe8
0x451010:	mov	rdi, rbp
0x451013:	mov	esi, 0x11
0x451018:	pop	rbx
0x451019:	pop	rbp
0x45101a:	pop	r12
0x45101c:	pop	r13
0x45101e:	pop	r14
0x451020:	pop	r15
0x451022:	jmp	0x452c20
0x451027:	mov	rax, qword ptr [rsp + 0xd8]
0x45102f:	sub	rax, qword ptr fs:[0x28]
0x451038:	jne	0x452ad0
0x45103e:	mov	rdx, qword ptr [r12 + 0x10]
0x451043:	add	rsp, 0xe8
0x45104a:	mov	rdi, rbp
0x45104d:	mov	esi, 0x11
0x451052:	pop	rbx
0x451053:	pop	rbp
0x451054:	pop	r12
0x451056:	pop	r13
0x451058:	pop	r14
0x45105a:	pop	r15
0x45105c:	jmp	0x452c20
0x451061:	mov	rdx, qword ptr [r12 + 0x18]
0x451066:	mov	esi, 0x11
0x45106b:	mov	rdi, rbp
0x45106e:	lea	rbx, [rip + 0x7c482]
0x451075:	lea	r14, [rbx + 5]
0x451079:	mov	r13d, 0x20
0x45107f:	call	0x452c20
0x451084:	mov	rax, qword ptr [rbp + 0x100]
0x45108b:	jmp	0x4510b7
0x45108d:	nop	dword ptr [rax]
0x451090:	mov	rdx, rax
0x451093:	add	rax, 1
0x451097:	add	rbx, 1
0x45109b:	mov	qword ptr [rbp + 0x100], rax
0x4510a2:	mov	byte ptr [rbp + rdx], r13b
0x4510a7:	mov	byte ptr [rbp + 0x108], r13b
0x4510ae:	cmp	r14, rbx
0x4510b1:	je	0x4510ec
0x4510b3:	movzx	r13d, byte ptr [rbx]
0x4510b7:	cmp	rax, 0xff
0x4510bd:	jne	0x451090
0x4510bf:	mov	rdx, qword ptr [rbp + 0x118]
0x4510c6:	mov	byte ptr [rbp + 0xff], 0
0x4510cd:	mov	esi, 0xff
0x4510d2:	mov	rdi, rbp
0x4510d5:	call	qword ptr [rbp + 0x110]
0x4510db:	add	qword ptr [rbp + 0x140], 1
0x4510e3:	mov	eax, 1
0x4510e8:	xor	edx, edx
0x4510ea:	jmp	0x451097
0x4510ec:	mov	rax, qword ptr [rsp + 0xd8]
0x4510f4:	sub	rax, qword ptr fs:[0x28]
0x4510fd:	jne	0x452be9
0x451103:	mov	rdx, qword ptr [r12 + 0x10]
0x451108:	add	rsp, 0xe8
0x45110f:	mov	rdi, rbp
0x451112:	mov	esi, 0x11
0x451117:	pop	rbx
0x451118:	pop	rbp
0x451119:	pop	r12
0x45111b:	pop	r13
0x45111d:	pop	r14
0x45111f:	pop	r15
0x451121:	jmp	0x452c20
0x451126:	mov	rax, qword ptr [rsp + 0xd8]
0x45112e:	sub	rax, qword ptr fs:[0x28]
0x451137:	jne	0x452bfd
0x45113d:	mov	rdx, qword ptr [r12 + 0x10]
0x451142:	add	rsp, 0xe8
0x451149:	mov	rdi, rbp
0x45114c:	mov	esi, 0x11
0x451151:	pop	rbx
0x451152:	pop	rbp
0x451153:	pop	r12
0x451155:	pop	r13
0x451157:	pop	r14
0x451159:	pop	r15
0x45115b:	jmp	0x452c20
0x451160:	mov	rax, qword ptr [rsp + 0xd8]
0x451168:	sub	rax, qword ptr fs:[0x28]
0x451171:	jne	0x452bf3
0x451177:	mov	rdx, qword ptr [r12 + 0x10]
0x45117c:	add	rsp, 0xe8
0x451183:	mov	rdi, rbp
0x451186:	mov	esi, 0x11
0x45118b:	pop	rbx
0x45118c:	pop	rbp
0x45118d:	pop	r12
0x45118f:	pop	r13
0x451191:	pop	r14
0x451193:	pop	r15
0x451195:	jmp	0x452c20
0x45119a:	mov	rax, qword ptr [rsp + 0xd8]
0x4511a2:	sub	rax, qword ptr fs:[0x28]
0x4511ab:	jne	0x452ad5
0x4511b1:	mov	rdx, qword ptr [r12 + 0x10]
0x4511b6:	add	rsp, 0xe8
0x4511bd:	mov	rdi, rbp
0x4511c0:	mov	esi, 0x11
0x4511c5:	pop	rbx
0x4511c6:	pop	rbp
0x4511c7:	pop	r12
0x4511c9:	pop	r13
0x4511cb:	pop	r14
0x4511cd:	pop	r15
0x4511cf:	jmp	0x452c20
0x4511d4:	mov	rax, qword ptr [rsp + 0xd8]
0x4511dc:	sub	rax, qword ptr fs:[0x28]
0x4511e5:	jne	0x452c16
0x4511eb:	mov	rdx, qword ptr [r12 + 0x10]
0x4511f0:	add	rsp, 0xe8
0x4511f7:	mov	rdi, rbp
0x4511fa:	mov	esi, 0x11
0x4511ff:	pop	rbx
0x451200:	pop	rbp
0x451201:	pop	r12
0x451203:	pop	r13
0x451205:	pop	r14
0x451207:	pop	r15
0x451209:	jmp	0x452c20
0x45120e:	add	dword ptr [rbp + 0x138], 1
0x451215:	mov	rdx, qword ptr [r12 + 0x10]
0x45121a:	mov	esi, 0x11
0x45121f:	mov	rdi, rbp
0x451222:	lea	rbx, [rip + 0x7c49e]
0x451229:	mov	r13d, 0x29
0x45122f:	lea	r14, [rbx + 2]
0x451233:	call	0x452c20
0x451238:	sub	dword ptr [rbp + 0x138], 1
0x45123f:	mov	rax, qword ptr [rbp + 0x100]
0x451246:	jmp	0x451277
0x451248:	nop	dword ptr [rax + rax]
0x451250:	mov	rdx, rax
0x451253:	add	rax, 1
0x451257:	add	rbx, 1
0x45125b:	mov	qword ptr [rbp + 0x100], rax
0x451262:	mov	byte ptr [rbp + rdx], r13b
0x451267:	mov	byte ptr [rbp + 0x108], r13b
0x45126e:	cmp	r14, rbx
0x451271:	je	0x4512ac
0x451273:	movzx	r13d, byte ptr [rbx]
0x451277:	cmp	rax, 0xff
0x45127d:	jne	0x451250
0x45127f:	mov	rdx, qword ptr [rbp + 0x118]
0x451286:	mov	byte ptr [rbp + 0xff], 0
0x45128d:	mov	esi, 0xff
0x451292:	mov	rdi, rbp
0x451295:	call	qword ptr [rbp + 0x110]
0x45129b:	add	qword ptr [rbp + 0x140], 1
0x4512a3:	mov	eax, 1
0x4512a8:	xor	edx, edx
0x4512aa:	jmp	0x451257
0x4512ac:	mov	eax, dword ptr [r12 + 0x18]
0x4512b1:	lea	rbx, [rsp + 0xb0]
0x4512b9:	mov	edx, 0x19
0x4512be:	lea	rcx, [rip + 0x77dfc]
0x4512c5:	mov	esi, 1
0x4512ca:	mov	rdi, rbx
0x4512cd:	lea	r8d, [rax + 1]
0x4512d1:	xor	eax, eax
0x4512d3:	call	0x403f60
0x4512d8:	mov	rdi, rbx
0x4512db:	call	0x4039e0
0x4512e0:	mov	rdx, qword ptr [rbp + 0x100]
0x4512e7:	test	rax, rax
0x4512ea:	je	0x451358
0x4512ec:	lea	r13, [rbx + rax]
0x4512f0:	jmp	0x45131b
0x4512f2:	nop	word ptr [rax + rax]
0x4512f8:	mov	rax, rdx
0x4512fb:	add	rdx, 1
0x4512ff:	add	rbx, 1
0x451303:	mov	qword ptr [rbp + 0x100], rdx
0x45130a:	mov	byte ptr [rbp + rax], r12b
0x45130f:	mov	byte ptr [rbp + 0x108], r12b
0x451316:	cmp	r13, rbx
0x451319:	je	0x451358
0x45131b:	movzx	r12d, byte ptr [rbx]
0x45131f:	cmp	rdx, 0xff
0x451326:	jne	0x4512f8
0x451328:	mov	rdx, qword ptr [rbp + 0x118]
0x45132f:	mov	byte ptr [rbp + 0xff], 0
0x451336:	mov	esi, 0xff
0x45133b:	mov	rdi, rbp
0x45133e:	call	qword ptr [rbp + 0x110]
0x451344:	add	qword ptr [rbp + 0x140], 1
0x45134c:	mov	edx, 1
0x451351:	xor	eax, eax
0x451353:	jmp	0x4512ff
0x451355:	nop	dword ptr [rax]
0x451358:	cmp	rdx, 0xff
0x45135f:	je	0x451b48
0x451365:	lea	rax, [rdx + 1]
0x451369:	mov	qword ptr [rbp + 0x100], rax
0x451370:	mov	byte ptr [rbp + rdx], 0x7d
0x451375:	mov	byte ptr [rbp + 0x108], 0x7d
0x45137c:	jmp	0x44ee6a
0x451381:	mov	rax, qword ptr [rsp + 0xd8]
0x451389:	sub	rax, qword ptr fs:[0x28]
0x451392:	jne	0x452ada
0x451398:	mov	rdx, qword ptr [r12 + 0x10]
0x45139d:	add	rsp, 0xe8
0x4513a4:	mov	rdi, rbp
0x4513a7:	mov	esi, 0x11
0x4513ac:	pop	rbx
0x4513ad:	pop	rbp
0x4513ae:	pop	r12
0x4513b0:	pop	r13
0x4513b2:	pop	r14
0x4513b4:	pop	r15
0x4513b6:	jmp	0x452c20
0x4513bb:	mov	rax, qword ptr [r12 + 0x10]
0x4513c0:	lea	rbx, [rsp + 0xb0]
0x4513c8:	mov	edx, 0x19
0x4513cd:	lea	rcx, [rip + 0x77ced]
0x4513d4:	mov	esi, 1
0x4513d9:	mov	rdi, rbx
0x4513dc:	lea	r8d, [rax + 1]
0x4513e0:	xor	eax, eax
0x4513e2:	call	0x403f60
0x4513e7:	mov	rdi, rbx
0x4513ea:	call	0x4039e0
0x4513ef:	mov	rdx, qword ptr [rbp + 0x100]
0x4513f6:	test	rax, rax
0x4513f9:	je	0x451358
0x4513ff:	lea	r13, [rbx + rax]
0x451403:	jmp	0x45142f
0x451405:	nop	dword ptr [rax]
0x451408:	mov	rax, rdx
0x45140b:	add	rdx, 1
0x45140f:	add	rbx, 1
0x451413:	mov	qword ptr [rbp + 0x100], rdx
0x45141a:	mov	byte ptr [rbp + rax], r12b
0x45141f:	mov	byte ptr [rbp + 0x108], r12b
0x451426:	cmp	r13, rbx
0x451429:	je	0x451358
0x45142f:	movzx	r12d, byte ptr [rbx]
0x451433:	cmp	rdx, 0xff
0x45143a:	jne	0x451408
0x45143c:	mov	rdx, qword ptr [rbp + 0x118]
0x451443:	mov	byte ptr [rbp + 0xff], 0
0x45144a:	mov	esi, 0xff
0x45144f:	mov	rdi, rbp
0x451452:	call	qword ptr [rbp + 0x110]
0x451458:	add	qword ptr [rbp + 0x140], 1
0x451460:	mov	edx, 1
0x451465:	xor	eax, eax
0x451467:	jmp	0x45140f
0x451469:	mov	rax, qword ptr [rbp + 0x170]
0x451470:	test	rax, rax
0x451473:	je	0x451492
0x451475:	mov	rdx, qword ptr [rbp + 0x120]
0x45147c:	mov	qword ptr [rsp + 0x18], rax
0x451481:	mov	qword ptr [rsp + 0x10], rdx
0x451486:	lea	rdx, [rsp + 0x10]
0x45148b:	mov	qword ptr [rbp + 0x120], rdx
0x451492:	mov	rdx, qword ptr [r12 + 0x10]
0x451497:	cmp	dword ptr [rdx], 4
0x45149a:	je	0x451bd8
0x4514a0:	mov	esi, 0x11
0x4514a5:	mov	rdi, rbp
0x4514a8:	call	0x452c20
0x4514ad:	cmp	qword ptr [rbp + 0x170], 0
0x4514b5:	je	0x44ee6a
0x4514bb:	mov	rax, qword ptr [rsp + 0x10]
0x4514c0:	mov	qword ptr [rbp + 0x120], rax
0x4514c7:	jmp	0x44ee6a
0x4514cc:	mov	rax, qword ptr [rsp + 0xd8]
0x4514d4:	sub	rax, qword ptr fs:[0x28]
0x4514dd:	jne	0x452bda
0x4514e3:	mov	rdx, qword ptr [r12 + 0x18]
0x4514e8:	add	rsp, 0xe8
0x4514ef:	mov	rdi, rbp
0x4514f2:	mov	esi, 0x11
0x4514f7:	pop	rbx
0x4514f8:	pop	rbp
0x4514f9:	pop	r12
0x4514fb:	pop	r13
0x4514fd:	pop	r14
0x4514ff:	pop	r15
0x451501:	jmp	0x452c20
0x451506:	mov	rax, qword ptr [rsp + 0xd8]
0x45150e:	sub	rax, qword ptr fs:[0x28]
0x451517:	jne	0x452b20
0x45151d:	mov	rdx, qword ptr [r12 + 0x10]
0x451522:	add	rsp, 0xe8
0x451529:	mov	rdi, rbp
0x45152c:	mov	esi, 0x11
0x451531:	pop	rbx
0x451532:	pop	rbp
0x451533:	pop	r12
0x451535:	pop	r13
0x451537:	pop	r14
0x451539:	pop	r15
0x45153b:	jmp	0x452c20
0x451540:	mov	rbx, qword ptr [r13 + 8]
0x451544:	movzx	esi, byte ptr [rbx]
0x451547:	lea	edx, [rsi - 0x61]
0x45154a:	cmp	dl, 0x19
0x45154d:	jbe	0x451e6d
0x451553:	lea	r13, [r12 - 1]
0x451558:	cmp	byte ptr [rbx + r12 - 1], 0x20
0x45155e:	cmovne	r13, r12
0x451562:	test	r13, r13
0x451565:	je	0x44ee6a
0x45156b:	mov	rax, qword ptr [rbp + 0x100]
0x451572:	add	r13, rbx
0x451575:	jmp	0x4515a7
0x451577:	nop	word ptr [rax + rax]
0x451580:	mov	rdx, rax
0x451583:	add	rax, 1
0x451587:	add	rbx, 1
0x45158b:	mov	qword ptr [rbp + 0x100], rax
0x451592:	mov	byte ptr [rbp + rdx], r12b
0x451597:	mov	byte ptr [rbp + 0x108], r12b
0x45159e:	cmp	r13, rbx
0x4515a1:	je	0x44ee6a
0x4515a7:	movzx	r12d, byte ptr [rbx]
0x4515ab:	cmp	rax, 0xff
0x4515b1:	jne	0x451580
0x4515b3:	mov	rdx, qword ptr [rbp + 0x118]
0x4515ba:	mov	byte ptr [rbp + 0xff], 0
0x4515c1:	mov	esi, 0xff
0x4515c6:	mov	rdi, rbp
0x4515c9:	call	qword ptr [rbp + 0x110]
0x4515cf:	add	qword ptr [rbp + 0x140], 1
0x4515d7:	mov	eax, 1
0x4515dc:	xor	edx, edx
0x4515de:	jmp	0x451587
0x4515e0:	mov	rax, qword ptr [rsp + 0xd8]
0x4515e8:	sub	rax, qword ptr fs:[0x28]
0x4515f1:	jne	0x452c11
0x4515f7:	mov	rdx, qword ptr [r12 + 0x10]
0x4515fc:	add	rsp, 0xe8
0x451603:	mov	rdi, rbp
0x451606:	mov	esi, 0x11
0x45160b:	pop	rbx
0x45160c:	pop	rbp
0x45160d:	pop	r12
0x45160f:	pop	r13
0x451611:	pop	r14
0x451613:	pop	r15
0x451615:	jmp	0x452c20
0x45161a:	mov	rax, qword ptr [rsp + 0xd8]
0x451622:	sub	rax, qword ptr fs:[0x28]
0x45162b:	jne	0x452b2f
0x451631:	mov	rdx, qword ptr [r12 + 0x10]
0x451636:	add	rsp, 0xe8
0x45163d:	mov	rdi, rbp
0x451640:	mov	esi, 0x11
0x451645:	pop	rbx
0x451646:	pop	rbp
0x451647:	pop	r12
0x451649:	pop	r13
0x45164b:	pop	r14
0x45164d:	pop	r15
0x45164f:	jmp	0x452c20
0x451654:	mov	rax, qword ptr [rsp + 0xd8]
0x45165c:	sub	rax, qword ptr fs:[0x28]
0x451665:	jne	0x452bdf
0x45166b:	mov	rdx, qword ptr [r12 + 0x10]
0x451670:	add	rsp, 0xe8
0x451677:	mov	rdi, rbp
0x45167a:	mov	esi, 0x11
0x45167f:	pop	rbx
0x451680:	pop	rbp
0x451681:	pop	r12
0x451683:	pop	r13
0x451685:	pop	r14
0x451687:	pop	r15
0x451689:	jmp	0x452c20
0x45168e:	mov	rdx, qword ptr [r12 + 0x10]
0x451693:	mov	esi, 0x11
0x451698:	mov	rdi, rbp
0x45169b:	lea	rbx, [rip + 0x7be74]
0x4516a2:	lea	r14, [rbx + 4]
0x4516a6:	mov	r13d, 0x2d
0x4516ac:	call	0x452c20
0x4516b1:	mov	rax, qword ptr [rbp + 0x100]
0x4516b8:	jmp	0x4516e7
0x4516ba:	nop	word ptr [rax + rax]
0x4516c0:	mov	rdx, rax
0x4516c3:	add	rax, 1
0x4516c7:	add	rbx, 1
0x4516cb:	mov	qword ptr [rbp + 0x100], rax
0x4516d2:	mov	byte ptr [rbp + rdx], r13b
0x4516d7:	mov	byte ptr [rbp + 0x108], r13b
0x4516de:	cmp	r14, rbx
0x4516e1:	je	0x45171c
0x4516e3:	movzx	r13d, byte ptr [rbx]
0x4516e7:	cmp	rax, 0xff
0x4516ed:	jne	0x4516c0
0x4516ef:	mov	rdx, qword ptr [rbp + 0x118]
0x4516f6:	mov	byte ptr [rbp + 0xff], 0
0x4516fd:	mov	esi, 0xff
0x451702:	mov	rdi, rbp
0x451705:	call	qword ptr [rbp + 0x110]
0x45170b:	add	qword ptr [rbp + 0x140], 1
0x451713:	mov	eax, 1
0x451718:	xor	edx, edx
0x45171a:	jmp	0x4516c7
0x45171c:	mov	rax, qword ptr [rsp + 0xd8]
0x451724:	sub	rax, qword ptr fs:[0x28]
0x45172d:	jne	0x452b7d
0x451733:	mov	rdx, qword ptr [r12 + 0x18]
0x451738:	add	rsp, 0xe8
0x45173f:	mov	rdi, rbp
0x451742:	mov	esi, 0x11
0x451747:	pop	rbx
0x451748:	pop	rbp
0x451749:	pop	r12
0x45174b:	pop	r13
0x45174d:	pop	r14
0x45174f:	pop	r15
0x451751:	jmp	0x452c20
0x451756:	mov	rax, qword ptr [rsp + 0xd8]
0x45175e:	sub	rax, qword ptr fs:[0x28]
0x451767:	jne	0x452c0c
0x45176d:	mov	rdx, qword ptr [r12 + 0x10]
0x451772:	add	rsp, 0xe8
0x451779:	mov	rdi, rbp
0x45177c:	mov	esi, 0x11
0x451781:	pop	rbx
0x451782:	pop	rbp
0x451783:	pop	r12
0x451785:	pop	r13
0x451787:	pop	r14
0x451789:	pop	r15
0x45178b:	jmp	0x452c20
0x451790:	mov	rdx, qword ptr [r12 + 0x10]
0x451795:	jmp	0x4502c6
0x45179a:	mov	rax, qword ptr [rsp + 0xd8]
0x4517a2:	sub	rax, qword ptr fs:[0x28]
0x4517ab:	jne	0x452af3
0x4517b1:	mov	rdx, qword ptr [r12 + 0x10]
0x4517b6:	add	rsp, 0xe8
0x4517bd:	mov	rdi, rbp
0x4517c0:	mov	esi, 0x11
0x4517c5:	pop	rbx
0x4517c6:	pop	rbp
0x4517c7:	pop	r12
0x4517c9:	pop	r13
0x4517cb:	pop	r14
0x4517cd:	pop	r15
0x4517cf:	jmp	0x452c20
0x4517d4:	mov	rdx, r12
0x4517d7:	mov	esi, 0x11
0x4517dc:	mov	rdi, rbp
0x4517df:	call	0x452ce0
0x4517e4:	jmp	0x44eeef
0x4517e9:	mov	rdx, qword ptr [r12 + 0x18]
0x4517ee:	mov	esi, 0x11
0x4517f3:	mov	rdi, rbp
0x4517f6:	mov	rbx, qword ptr [rbp + 0x140]
0x4517fd:	call	0x452c20
0x451802:	cmp	qword ptr [rbp + 0x140], rbx
0x451809:	jne	0x44ee6a
0x45180f:	cmp	qword ptr [rbp + 0x100], r13
0x451816:	jne	0x44ee6a
0x45181c:	sub	r13, 2
0x451820:	mov	qword ptr [rbp + 0x100], r13
0x451827:	jmp	0x44ee6a
0x45182c:	mov	rbx, qword ptr [rbx + 0x10]
0x451830:	test	rbx, rbx
0x451833:	je	0x452a8a
0x451839:	add	rax, 0x20
0x45183d:	cmp	r15d, 4
0x451841:	je	0x44ee58
0x451847:	mov	rcx, r9
0x45184a:	mov	edx, r15d
0x45184d:	jmp	0x450aed
0x451852:	test	r12d, r12d
0x451855:	je	0x44ee6a
0x45185b:	mov	r14d, r12d
0x45185e:	sub	r12d, 1
0x451862:	jmp	0x4508dd
0x451867:	mov	rdx, qword ptr [r9 + 0x10]
0x45186b:	mov	r12, r9
0x45186e:	jmp	0x44f010
0x451873:	mov	rdx, qword ptr [r12 + 0x18]
0x451878:	mov	esi, 0x11
0x45187d:	call	0x452c20
0x451882:	cmp	dword ptr [rsp + 0x40], 0
0x451887:	mov	qword ptr [rbp + 0x128], 0
0x451892:	jne	0x44ee6a
0x451898:	mov	rcx, qword ptr [rbp + 0x128]
0x45189f:	mov	rdx, r12
0x4518a2:	mov	esi, 0x11
0x4518a7:	mov	rdi, rbp
0x4518aa:	call	0x453d30
0x4518af:	jmp	0x44ee6a
0x4518b4:	mov	qword ptr [rbp + 0x128], r14
0x4518bb:	jmp	0x44ee6a
0x4518c0:	cmp	ebx, 7
0x4518c3:	jne	0x44f186
0x4518c9:	mov	rax, qword ptr [r12 + 0x18]
0x4518ce:	mov	ecx, dword ptr [rax]
0x4518d0:	test	ecx, ecx
0x4518d2:	jne	0x44f186
0x4518d8:	cmp	dword ptr [rax + 0x18], 1
0x4518dc:	jne	0x44f186
0x4518e2:	cmp	r8d, 0x3d
0x4518e6:	jne	0x44f186
0x4518ec:	mov	rax, qword ptr [rax + 0x10]
0x4518f0:	movzx	eax, byte ptr [rax]
0x4518f3:	cmp	al, 0x30
0x4518f5:	je	0x452b91
0x4518fb:	cmp	al, 0x31
0x4518fd:	jne	0x44f186
0x451903:	mov	rax, qword ptr [rsp + 0xd8]
0x45190b:	sub	rax, qword ptr fs:[0x28]
0x451914:	jne	0x452b8c
0x45191a:	add	rsp, 0xe8
0x451921:	lea	rsi, [rip + 0x7bd30]
0x451928:	pop	rbx
0x451929:	pop	rbp
0x45192a:	pop	r12
0x45192c:	pop	r13
0x45192e:	pop	r14
0x451930:	pop	r15
0x451932:	jmp	0x44b770
0x451937:	nop	word ptr [rax + rax]
0x451940:	mov	rax, qword ptr [rsp + 0xd8]
0x451948:	sub	rax, qword ptr fs:[0x28]
0x451951:	jne	0x452b69
0x451957:	add	rsp, 0xe8
0x45195e:	mov	rdi, rbp
0x451961:	lea	rsi, [rip + 0x7bcbb]
0x451968:	pop	rbx
0x451969:	pop	rbp
0x45196a:	pop	r12
0x45196c:	pop	r13
0x45196e:	pop	r14
0x451970:	pop	r15
0x451972:	jmp	0x44b770
0x451977:	mov	rsi, r12
0x45197a:	call	0x44b710
0x45197f:	mov	rdx, rax
0x451982:	test	rax, rax
0x451985:	je	0x44ee60
0x45198b:	cmp	dword ptr [rax], 0x2f
0x45198e:	je	0x4526a2
0x451994:	mov	rbx, qword ptr [rbp + 0x120]
0x45199b:	mov	esi, 0x11
0x4519a0:	mov	rdi, rbp
0x4519a3:	mov	rax, qword ptr [rbx]
0x4519a6:	mov	qword ptr [rbp + 0x120], rax
0x4519ad:	call	0x452c20
0x4519b2:	mov	qword ptr [rbp + 0x120], rbx
0x4519b9:	jmp	0x44ee6a
0x4519be:	lea	rsi, [rip + 0x7bcb7]
0x4519c5:	lea	rbx, [rsp + 0xb0]
0x4519cd:	call	0x44b770
0x4519d2:	mov	edx, 0x19
0x4519d7:	mov	r8d, r12d
0x4519da:	mov	rdi, rbx
0x4519dd:	lea	rcx, [rip + 0x776dd]
0x4519e4:	mov	esi, 1
0x4519e9:	xor	eax, eax
0x4519eb:	call	0x403f60
0x4519f0:	mov	rdi, rbx
0x4519f3:	call	0x4039e0
0x4519f8:	mov	rdx, qword ptr [rbp + 0x100]
0x4519ff:	test	rax, rax
0x451a02:	je	0x451a6d
0x451a04:	lea	r13, [rbx + rax]
0x451a08:	jmp	0x451a33
0x451a0a:	nop	word ptr [rax + rax]
0x451a10:	mov	rax, rdx
0x451a13:	add	rdx, 1
0x451a17:	add	rbx, 1
0x451a1b:	mov	qword ptr [rbp + 0x100], rdx
0x451a22:	mov	byte ptr [rbp + rax], r12b
0x451a27:	mov	byte ptr [rbp + 0x108], r12b
0x451a2e:	cmp	r13, rbx
0x451a31:	je	0x451a6d
0x451a33:	movzx	r12d, byte ptr [rbx]
0x451a37:	cmp	rdx, 0xff
0x451a3e:	jne	0x451a10
0x451a40:	mov	rdx, qword ptr [rbp + 0x118]
0x451a47:	mov	byte ptr [rbp + 0xff], 0
0x451a4e:	mov	esi, 0xff
0x451a53:	mov	rdi, rbp
0x451a56:	call	qword ptr [rbp + 0x110]
0x451a5c:	add	qword ptr [rbp + 0x140], 1
0x451a64:	mov	edx, 1
0x451a69:	xor	eax, eax
0x451a6b:	jmp	0x451a17
0x451a6d:	cmp	rdx, 0xff
0x451a74:	je	0x4526c9
0x451a7a:	lea	rax, [rdx + 1]
0x451a7e:	mov	qword ptr [rbp + 0x100], rax
0x451a85:	mov	byte ptr [rbp + rdx], 0x7d
0x451a8a:	mov	byte ptr [rbp + 0x108], 0x7d
0x451a91:	jmp	0x44ee6a
0x451a96:	mov	rax, qword ptr [r12 + 0x10]
0x451a9b:	mov	edx, 0x19
0x451aa0:	mov	esi, 1
0x451aa5:	lea	rbx, [rsp + 0xb0]
0x451aad:	mov	rdi, rbx
0x451ab0:	lea	rcx, [rip + 0x7760a]
0x451ab7:	lea	r8d, [rax + 1]
0x451abb:	xor	eax, eax
0x451abd:	call	0x403f60
0x451ac2:	mov	rdi, rbx
0x451ac5:	call	0x4039e0
0x451aca:	test	rax, rax
0x451acd:	je	0x44ee6a
0x451ad3:	mov	rdx, qword ptr [rbp + 0x100]
0x451ada:	lea	r13, [rbx + rax]
0x451ade:	jmp	0x451b07
0x451ae0:	mov	rax, rdx
0x451ae3:	add	rdx, 1
0x451ae7:	add	rbx, 1
0x451aeb:	mov	qword ptr [rbp + 0x100], rdx
0x451af2:	mov	byte ptr [rbp + rax], r12b
0x451af7:	mov	byte ptr [rbp + 0x108], r12b
0x451afe:	cmp	r13, rbx
0x451b01:	je	0x44ee6a
0x451b07:	movzx	r12d, byte ptr [rbx]
0x451b0b:	cmp	rdx, 0xff
0x451b12:	jne	0x451ae0
0x451b14:	mov	rdx, qword ptr [rbp + 0x118]
0x451b1b:	mov	byte ptr [rbp + 0xff], 0
0x451b22:	mov	esi, 0xff
0x451b27:	mov	rdi, rbp
0x451b2a:	call	qword ptr [rbp + 0x110]
0x451b30:	add	qword ptr [rbp + 0x140], 1
0x451b38:	mov	edx, 1
0x451b3d:	xor	eax, eax
0x451b3f:	jmp	0x451ae7
0x451b41:	xor	ebx, ebx
0x451b43:	jmp	0x44f186
0x451b48:	mov	rdx, qword ptr [rbp + 0x118]
0x451b4f:	mov	byte ptr [rbp + 0xff], 0
0x451b56:	mov	esi, 0xff
0x451b5b:	mov	rdi, rbp
0x451b5e:	call	qword ptr [rbp + 0x110]
0x451b64:	add	qword ptr [rbp + 0x140], 1
0x451b6c:	mov	eax, 1
0x451b71:	xor	edx, edx
0x451b73:	jmp	0x451369
0x451b78:	mov	rdx, qword ptr [rbp + 0x118]
0x451b7f:	mov	byte ptr [rbp + 0xff], 0
0x451b86:	mov	esi, 0xff
0x451b8b:	mov	rdi, rbp
0x451b8e:	call	qword ptr [rbp + 0x110]
0x451b94:	add	qword ptr [rbp + 0x140], 1
0x451b9c:	mov	edx, 1
0x451ba1:	xor	eax, eax
0x451ba3:	jmp	0x450e79
0x451ba8:	mov	rdx, qword ptr [rbp + 0x118]
0x451baf:	mov	byte ptr [rbp + 0xff], 0
0x451bb6:	mov	esi, 0xff
0x451bbb:	mov	rdi, rbp
0x451bbe:	call	qword ptr [rbp + 0x110]
0x451bc4:	add	qword ptr [rbp + 0x140], 1
0x451bcc:	mov	edx, 1
0x451bd1:	xor	eax, eax
0x451bd3:	jmp	0x4502ea
0x451bd8:	mov	rdx, qword ptr [rdx + 0x10]
0x451bdc:	mov	esi, 0x11
0x451be1:	mov	rdi, rbp
0x451be4:	call	0x452c20
0x451be9:	cmp	qword ptr [rbp + 0x170], 0
0x451bf1:	je	0x451bff
0x451bf3:	mov	rax, qword ptr [rsp + 0x10]
0x451bf8:	mov	qword ptr [rbp + 0x120], rax
0x451bff:	cmp	byte ptr [rbp + 0x108], 0x3c
0x451c06:	je	0x452825
0x451c0c:	mov	rax, qword ptr [rbp + 0x100]
0x451c13:	cmp	rax, 0xff
0x451c19:	je	0x4527fa
0x451c1f:	lea	rdx, [rax + 1]
0x451c23:	mov	esi, 0x11
0x451c28:	mov	rdi, rbp
0x451c2b:	mov	qword ptr [rbp + 0x100], rdx
0x451c32:	mov	byte ptr [rbp + rax], 0x3c
0x451c37:	mov	byte ptr [rbp + 0x108], 0x3c
0x451c3e:	mov	rax, qword ptr [r12 + 0x10]
0x451c43:	mov	rdx, qword ptr [rax + 0x18]
0x451c47:	call	0x452c20
0x451c4c:	cmp	byte ptr [rbp + 0x108], 0x3e
0x451c53:	je	0x4527e8
0x451c59:	mov	rax, qword ptr [rbp + 0x100]
0x451c60:	cmp	rax, 0xff
0x451c66:	je	0x4527bd
0x451c6c:	lea	rdx, [rax + 1]
0x451c70:	mov	qword ptr [rbp + 0x100], rdx
0x451c77:	mov	byte ptr [rbp + rax], 0x3e
0x451c7c:	mov	byte ptr [rbp + 0x108], 0x3e
0x451c83:	jmp	0x44ee6a
0x451c88:	mov	rax, qword ptr [r13 + 0x10]
0x451c8c:	mov	rbx, qword ptr [rax]
0x451c8f:	movzx	eax, byte ptr [rbx]
0x451c92:	cmp	eax, 0x61
0x451c95:	jne	0x451cae
0x451c97:	cmp	byte ptr [rbx + 1], 0x64
0x451c9b:	jne	0x451cae
0x451c9d:	cmp	byte ptr [rbx + 2], 0
0x451ca1:	jne	0x451cae
0x451ca3:	cmp	dword ptr [r12], 3
0x451ca8:	je	0x452866
0x451cae:	cmp	dword ptr [r12], 0x39
0x451cb3:	je	0x452885
0x451cb9:	cmp	eax, 0x73
0x451cbc:	jne	0x451d17
0x451cbe:	cmp	byte ptr [rbx + 1], 0x5a
0x451cc2:	jne	0x451de2
0x451cc8:	cmp	byte ptr [rbx + 2], 0
0x451ccc:	jne	0x451de2
0x451cd2:	mov	rsi, r12
0x451cd5:	mov	rdi, rbp
0x451cd8:	call	0x44b810
0x451cdd:	mov	rdi, rax
0x451ce0:	call	0x44b510
0x451ce5:	mov	esi, eax
0x451ce7:	mov	rax, qword ptr [rsp + 0xd8]
0x451cef:	sub	rax, qword ptr fs:[0x28]
0x451cf8:	jne	0x452b5a
0x451cfe:	add	rsp, 0xe8
0x451d05:	mov	rdi, rbp
0x451d08:	pop	rbx
0x451d09:	pop	rbp
0x451d0a:	pop	r12
0x451d0c:	pop	r13
0x451d0e:	pop	r14
0x451d10:	pop	r15
0x451d12:	jmp	0x44b9a0
0x451d17:	mov	rdx, r13
0x451d1a:	mov	esi, 0x11
0x451d1f:	mov	rdi, rbp
0x451d22:	call	0x454020
0x451d27:	movzx	eax, byte ptr [rbx]
0x451d2a:	cmp	eax, 0x67
0x451d2d:	jne	0x451d73
0x451d2f:	cmp	byte ptr [rbx + 1], 0x73
0x451d33:	jne	0x451d73
0x451d35:	cmp	byte ptr [rbx + 2], 0
0x451d39:	jne	0x451d73
0x451d3b:	mov	rax, qword ptr [rsp + 0xd8]
0x451d43:	sub	rax, qword ptr fs:[0x28]
0x451d4c:	jne	0x452b55
0x451d52:	add	rsp, 0xe8
0x451d59:	mov	rdx, r12
0x451d5c:	mov	rdi, rbp
0x451d5f:	mov	esi, 0x11
0x451d64:	pop	rbx
0x451d65:	pop	rbp
0x451d66:	pop	r12
0x451d68:	pop	r13
0x451d6a:	pop	r14
0x451d6c:	pop	r15
0x451d6e:	jmp	0x452c20
0x451d73:	cmp	eax, 0x73
0x451d76:	jne	0x450250
0x451d7c:	cmp	byte ptr [rbx + 1], 0x74
0x451d80:	jne	0x450250
0x451d86:	cmp	byte ptr [rbx + 2], 0
0x451d8a:	jne	0x450250
0x451d90:	mov	esi, 0x28
0x451d95:	mov	rdi, rbp
0x451d98:	call	0x44b6a0
0x451d9d:	mov	rdx, r12
0x451da0:	mov	esi, 0x11
0x451da5:	mov	rdi, rbp
0x451da8:	call	0x452c20
0x451dad:	mov	rax, qword ptr [rsp + 0xd8]
0x451db5:	sub	rax, qword ptr fs:[0x28]
0x451dbe:	jne	0x452b5f
0x451dc4:	add	rsp, 0xe8
0x451dcb:	mov	rdi, rbp
0x451dce:	mov	esi, 0x29
0x451dd3:	pop	rbx
0x451dd4:	pop	rbp
0x451dd5:	pop	r12
0x451dd7:	pop	r13
0x451dd9:	pop	r14
0x451ddb:	pop	r15
0x451ddd:	jmp	0x44b6a0
0x451de2:	cmp	eax, 0x73
0x451de5:	jne	0x451d17
0x451deb:	cmp	byte ptr [rbx + 1], 0x50
0x451def:	jne	0x451d17
0x451df5:	xor	r8d, r8d
0x451df8:	cmp	byte ptr [rbx + 2], 0
0x451dfc:	je	0x451e1a
0x451dfe:	jmp	0x451d17
0x451e03:	nop	dword ptr [rax + rax]
0x451e08:	add	r8d, 1
0x451e0c:	mov	r12, qword ptr [r12 + 0x18]
0x451e11:	test	r12, r12
0x451e14:	je	0x4525ff
0x451e1a:	cmp	dword ptr [r12], 0x2f
0x451e1f:	jne	0x4525ff
0x451e25:	mov	rax, qword ptr [r12 + 0x10]
0x451e2a:	test	rax, rax
0x451e2d:	je	0x4525ff
0x451e33:	cmp	dword ptr [rax], 0x4c
0x451e36:	jne	0x451e08
0x451e38:	mov	rsi, qword ptr [rax + 0x10]
0x451e3c:	mov	rdi, rbp
0x451e3f:	call	0x44b810
0x451e44:	xor	edx, edx
0x451e46:	test	rax, rax
0x451e49:	jne	0x451e63
0x451e4b:	jmp	0x451e68
0x451e4d:	nop	dword ptr [rax]
0x451e50:	cmp	qword ptr [rax + 0x10], 0
0x451e55:	je	0x451e68
0x451e57:	mov	rax, qword ptr [rax + 0x18]
0x451e5b:	add	edx, 1
0x451e5e:	test	rax, rax
0x451e61:	je	0x451e68
0x451e63:	cmp	dword ptr [rax], 0x2f
0x451e66:	je	0x451e50
0x451e68:	add	r8d, edx
0x451e6b:	jmp	0x451e0c
0x451e6d:	cmp	rax, 0xff
0x451e73:	je	0x452837
0x451e79:	lea	rdx, [rax + 1]
0x451e7d:	mov	qword ptr [rbp + 0x100], rdx
0x451e84:	mov	byte ptr [rbp + rax], 0x20
0x451e89:	mov	byte ptr [rbp + 0x108], 0x20
0x451e90:	jmp	0x451553
0x451e95:	mov	rdx, r12
0x451e98:	mov	esi, 0x11
0x451e9d:	mov	rdi, rbp
0x451ea0:	call	0x452ce0
0x451ea5:	jmp	0x44efb4
0x451eaa:	lea	rsi, [rip + 0x7b765]
0x451eb1:	call	0x44b770
0x451eb6:	jmp	0x44f28b
0x451ebb:	xor	r13d, r13d
0x451ebe:	jmp	0x44f010
0x451ec3:	mov	rax, qword ptr [rsp + 0xd8]
0x451ecb:	sub	rax, qword ptr fs:[0x28]
0x451ed4:	jne	0x452bc6
0x451eda:	add	rsp, 0xe8
0x451ee1:	mov	rdi, rbp
0x451ee4:	mov	esi, 0x11
0x451ee9:	pop	rbx
0x451eea:	pop	rbp
0x451eeb:	pop	r12
0x451eed:	pop	r13
0x451eef:	pop	r14
0x451ef1:	pop	r15
0x451ef3:	jmp	0x452c20
0x451ef8:	mov	byte ptr [rbp + r13], 0
0x451efe:	mov	rsi, r13
0x451f01:	mov	rdi, rbp
0x451f04:	mov	rdx, qword ptr [rbp + 0x118]
0x451f0b:	call	qword ptr [rbp + 0x110]
0x451f11:	xor	r13d, r13d
0x451f14:	add	qword ptr [rbp + 0x140], 1
0x451f1c:	mov	qword ptr [rbp + 0x100], 0
0x451f27:	jmp	0x44f074
0x451f2c:	mov	rdx, qword ptr [rdi + 0x118]
0x451f33:	mov	byte ptr [rdi + 0xff], 0
0x451f3a:	mov	esi, 0xff
0x451f3f:	call	qword ptr [rdi + 0x110]
0x451f45:	add	qword ptr [rbp + 0x140], 1
0x451f4d:	mov	edx, 1
0x451f52:	xor	eax, eax
0x451f54:	jmp	0x4503cd
0x451f59:	mov	rdx, qword ptr [rbp + 0x118]
0x451f60:	mov	byte ptr [rbp + 0xff], 0
0x451f67:	mov	esi, 0xff
0x451f6c:	mov	rdi, rbp
0x451f6f:	call	qword ptr [rbp + 0x110]
0x451f75:	add	qword ptr [rbp + 0x140], 1
0x451f7d:	mov	edx, 1
0x451f82:	xor	eax, eax
0x451f84:	jmp	0x4502ae
0x451f89:	mov	rdx, qword ptr [rbp + 0x118]
0x451f90:	mov	byte ptr [rbp + 0xff], 0
0x451f97:	mov	esi, 0xff
0x451f9c:	mov	rdi, rbp
0x451f9f:	call	qword ptr [rbp + 0x110]
0x451fa5:	add	qword ptr [rbp + 0x140], 1
0x451fad:	mov	edx, 1
0x451fb2:	xor	eax, eax
0x451fb4:	jmp	0x4507ca
0x451fb9:	mov	rdx, qword ptr [rbp + 0x118]
0x451fc0:	mov	byte ptr [rbp + 0xff], 0
0x451fc7:	mov	esi, 0xff
0x451fcc:	mov	rdi, rbp
0x451fcf:	call	qword ptr [rbp + 0x110]
0x451fd5:	add	qword ptr [rbp + 0x140], 1
0x451fdd:	mov	edx, 1
0x451fe2:	xor	eax, eax
0x451fe4:	jmp	0x450790
0x451fe9:	mov	rdx, qword ptr [rdi + 0x118]
0x451ff0:	mov	byte ptr [rdi + 0xff], 0
0x451ff7:	mov	esi, 0xff
0x451ffc:	call	qword ptr [rdi + 0x110]
0x452002:	add	qword ptr [rbp + 0x140], 1
0x45200a:	mov	edx, 1
0x45200f:	xor	eax, eax
0x452011:	jmp	0x44f6b7
0x452016:	lea	rsi, [rip + 0x7b4bf]
0x45201d:	mov	rdi, rbp
0x452020:	lea	rbx, [rsp + 0xb0]
0x452028:	call	0x44b770
0x45202d:	mov	eax, dword ptr [r13 + 0x18]
0x452031:	mov	edx, 0x19
0x452036:	mov	rdi, rbx
0x452039:	lea	rcx, [rip + 0x77081]
0x452040:	mov	esi, 1
0x452045:	lea	r8d, [rax + 1]
0x452049:	xor	eax, eax
0x45204b:	call	0x403f60
0x452050:	mov	rdi, rbx
0x452053:	call	0x4039e0
0x452058:	mov	r14, rax
0x45205b:	test	rax, rax
0x45205e:	je	0x4520cc
0x452060:	mov	rax, qword ptr [rbp + 0x100]
0x452067:	add	r14, rbx
0x45206a:	jmp	0x452093
0x45206c:	nop	dword ptr [rax]
0x452070:	mov	rdx, rax
0x452073:	add	rax, 1
0x452077:	add	rbx, 1
0x45207b:	mov	qword ptr [rbp + 0x100], rax
0x452082:	mov	byte ptr [rbp + rdx], r12b
0x452087:	mov	byte ptr [rbp + 0x108], r12b
0x45208e:	cmp	r14, rbx
0x452091:	je	0x4520cc
0x452093:	movzx	r12d, byte ptr [rbx]
0x452097:	cmp	rax, 0xff
0x45209d:	jne	0x452070
0x45209f:	mov	rdx, qword ptr [rbp + 0x118]
0x4520a6:	mov	byte ptr [rbp + 0xff], 0
0x4520ad:	mov	esi, 0xff
0x4520b2:	mov	rdi, rbp
0x4520b5:	call	qword ptr [rbp + 0x110]
0x4520bb:	add	qword ptr [rbp + 0x140], 1
0x4520c3:	mov	eax, 1
0x4520c8:	xor	edx, edx
0x4520ca:	jmp	0x452077
0x4520cc:	lea	rsi, [rip + 0x7b417]
0x4520d3:	mov	rdi, rbp
0x4520d6:	call	0x44b770
0x4520db:	mov	r13, qword ptr [r13 + 0x10]
0x4520df:	jmp	0x44f126
0x4520e4:	mov	qword ptr [rbp + 0x128], rax
0x4520eb:	cmp	ecx, 2
0x4520ee:	jne	0x452196
0x4520f4:	mov	rbx, qword ptr [rbx + 0x18]
0x4520f8:	mov	ecx, dword ptr [rbx]
0x4520fa:	cmp	ecx, 0x48
0x4520fd:	je	0x452766
0x452103:	mov	esi, r15d
0x452106:	mov	eax, edx
0x452108:	lea	r8d, [rcx - 0x1c]
0x45210c:	movabs	r9, 0x3400000000001f
0x452116:	mov	rdx, rsi
0x452119:	shl	rax, 5
0x45211d:	mov	r15d, esi
0x452120:	shl	rdx, 5
0x452124:	add	rax, r13
0x452127:	add	rdx, r13
0x45212a:	cmp	r8d, 0x35
0x45212e:	ja	0x452196
0x452130:	bt	r9, r8
0x452134:	jae	0x450b25
0x45213a:	cmp	esi, 4
0x45213d:	je	0x44ee60
0x452143:	movdqa	xmm2, xmmword ptr [rax]
0x452147:	mov	qword ptr [rbp + 0x128], rdx
0x45214e:	add	rsi, 1
0x452152:	add	rdx, 0x20
0x452156:	movaps	xmmword ptr [rdx - 0x20], xmm2
0x45215a:	movdqa	xmm3, xmmword ptr [rax + 0x10]
0x45215f:	mov	qword ptr [rdx - 0x20], rax
0x452163:	add	rax, 0x20
0x452167:	movaps	xmmword ptr [rdx - 0x10], xmm3
0x45216b:	mov	qword ptr [rax - 0x18], rbx
0x45216f:	mov	dword ptr [rax - 0x10], 0
0x452176:	mov	rbx, qword ptr [rbx + 0x10]
0x45217a:	mov	qword ptr [rax - 8], rdi
0x45217e:	test	rbx, rbx
0x452181:	je	0x44ee60
0x452187:	mov	ecx, dword ptr [rbx]
0x452189:	mov	r15d, esi
0x45218c:	lea	r8d, [rcx - 0x1c]
0x452190:	cmp	r8d, 0x35
0x452194:	jbe	0x452130
0x452196:	cmp	ecx, 4
0x452199:	jne	0x450b25
0x45219f:	lea	rax, [rsp + 0x10]
0x4521a4:	mov	qword ptr [rsp + 0x10], rdi
0x4521a9:	mov	qword ptr [rbp + 0x120], rax
0x4521b0:	mov	qword ptr [rsp + 0x18], rbx
0x4521b5:	jmp	0x450b25
0x4521ba:	mov	rdx, qword ptr [rbp + 0x118]
0x4521c1:	mov	byte ptr [rbp + 0xff], 0
0x4521c8:	mov	esi, 0xff
0x4521cd:	mov	rdi, rbp
0x4521d0:	call	qword ptr [rbp + 0x110]
0x4521d6:	add	qword ptr [rbp + 0x140], 1
0x4521de:	mov	edx, 1
0x4521e3:	xor	eax, eax
0x4521e5:	jmp	0x44ff0c
0x4521ea:	mov	esi, 0x20
0x4521ef:	mov	rdi, rbp
0x4521f2:	call	0x44b6a0
0x4521f7:	jmp	0x44fef5
0x4521fc:	mov	rdx, qword ptr [rbp + 0x118]
0x452203:	mov	byte ptr [rbp + 0xff], 0
0x45220a:	mov	esi, 0xff
0x45220f:	mov	rdi, rbp
0x452212:	call	qword ptr [rbp + 0x110]
0x452218:	add	qword ptr [rbp + 0x140], 1
0x452220:	mov	edx, 1
0x452225:	xor	eax, eax
0x452227:	jmp	0x44fec3
0x45222c:	mov	esi, 0x20
0x452231:	mov	rdi, rbp
0x452234:	call	0x44b6a0
0x452239:	jmp	0x44feac
0x45223e:	mov	rdx, qword ptr [rbp + 0x118]
0x452245:	mov	byte ptr [rbp + 0xff], 0
0x45224c:	mov	esi, 0xff
0x452251:	mov	rdi, rbp
0x452254:	call	qword ptr [rbp + 0x110]
0x45225a:	add	qword ptr [rbp + 0x140], 1
0x452262:	mov	rdx, qword ptr [r12 + 0x10]
0x452267:	xor	eax, eax
0x452269:	mov	ecx, 1
0x45226e:	jmp	0x44f19d
0x452273:	mov	esi, 0x5b
0x452278:	mov	rdi, rbp
0x45227b:	call	0x44b6a0
0x452280:	mov	rdx, qword ptr [r12 + 0x18]
0x452285:	mov	esi, 0x11
0x45228a:	mov	rdi, rbp
0x45228d:	call	0x452c20
0x452292:	mov	rax, qword ptr [rsp + 0xd8]
0x45229a:	sub	rax, qword ptr fs:[0x28]
0x4522a3:	jne	0x452ae4
0x4522a9:	add	rsp, 0xe8
0x4522b0:	mov	rdi, rbp
0x4522b3:	mov	esi, 0x5d
0x4522b8:	pop	rbx
0x4522b9:	pop	rbp
0x4522ba:	pop	r12
0x4522bc:	pop	r13
0x4522be:	pop	r14
0x4522c0:	pop	r15
0x4522c2:	jmp	0x44b6a0
0x4522c7:	mov	esi, 0x2d
0x4522cc:	mov	rdi, rbp
0x4522cf:	call	0x44b6a0
0x4522d4:	jmp	0x44f1f2
0x4522d9:	mov	rdx, qword ptr [rbp + 0x118]
0x4522e0:	mov	byte ptr [rbp + 0xff], 0
0x4522e7:	mov	esi, 0xff
0x4522ec:	mov	rdi, rbp
0x4522ef:	call	qword ptr [rbp + 0x110]
0x4522f5:	add	qword ptr [rbp + 0x140], 1
0x4522fd:	mov	edx, 1
0x452302:	xor	eax, eax
0x452304:	jmp	0x44f1d4
0x452309:	mov	r9, qword ptr [r12 + 0x18]
0x45230e:	mov	esi, dword ptr [r9]
0x452311:	test	esi, esi
0x452313:	jne	0x44f186
0x452319:	cmp	r8d, 0x3e
0x45231d:	je	0x452aa2
0x452323:	mov	rdx, r9
0x452326:	mov	esi, 0x11
0x45232b:	mov	rdi, rbp
0x45232e:	sub	ebx, 2
0x452331:	call	0x452c20
0x452336:	cmp	ebx, 4
0x452339:	ja	0x44ee6a
0x45233f:	lea	rdx, [rip + 0x7affa]
0x452346:	movsxd	rax, dword ptr [rdx + rbx*4]
0x45234a:	add	rax, rdx
0x45234d:	notrack jmp	rax
0x452350:	mov	rax, qword ptr [rsp + 0xd8]
0x452358:	sub	rax, qword ptr fs:[0x28]
0x452361:	jne	0x452b11
0x452367:	add	rsp, 0xe8
0x45236e:	mov	rdi, rbp
0x452371:	lea	rsi, [rip + 0xe490]
0x452378:	pop	rbx
0x452379:	pop	rbp
0x45237a:	pop	r12
0x45237c:	pop	r13
0x45237e:	pop	r14
0x452380:	pop	r15
0x452382:	jmp	0x44b770
0x452387:	mov	rax, qword ptr [rsp + 0xd8]
0x45238f:	sub	rax, qword ptr fs:[0x28]
0x452398:	jne	0x452b07
0x45239e:	add	rsp, 0xe8
0x4523a5:	mov	rdi, rbp
0x4523a8:	lea	rsi, [rip + 0x6c7be]
0x4523af:	pop	rbx
0x4523b0:	pop	rbp
0x4523b1:	pop	r12
0x4523b3:	pop	r13
0x4523b5:	pop	r14
0x4523b7:	pop	r15
0x4523b9:	jmp	0x44b770
0x4523be:	mov	rax, qword ptr [rsp + 0xd8]
0x4523c6:	sub	rax, qword ptr fs:[0x28]
0x4523cf:	jne	0x452b0c
0x4523d5:	add	rsp, 0xe8
0x4523dc:	mov	rdi, rbp
0x4523df:	mov	esi, 0x6c
0x4523e4:	pop	rbx
0x4523e5:	pop	rbp
0x4523e6:	pop	r12
0x4523e8:	pop	r13
0x4523ea:	pop	r14
0x4523ec:	pop	r15
0x4523ee:	jmp	0x44b6a0
0x4523f3:	mov	rax, qword ptr [rsp + 0xd8]
0x4523fb:	sub	rax, qword ptr fs:[0x28]
0x452404:	jne	0x452adf
0x45240a:	add	rsp, 0xe8
0x452411:	mov	rdi, rbp
0x452414:	mov	esi, 0x75
0x452419:	pop	rbx
0x45241a:	pop	rbp
0x45241b:	pop	r12
0x45241d:	pop	r13
0x45241f:	pop	r14
0x452421:	pop	r15
0x452423:	jmp	0x44b6a0
0x452428:	mov	rax, qword ptr [rsp + 0xd8]
0x452430:	sub	rax, qword ptr fs:[0x28]
0x452439:	jne	0x452aee
0x45243f:	add	rsp, 0xe8
0x452446:	mov	rdi, rbp
0x452449:	lea	rsi, [rip + 0x9584]
0x452450:	pop	rbx
0x452451:	pop	rbp
0x452452:	pop	r12
0x452454:	pop	r13
0x452456:	pop	r14
0x452458:	pop	r15
0x45245a:	jmp	0x44b770
0x45245f:	nop	
0x452460:	movzx	eax, byte ptr [rax]
0x452463:	lea	ecx, [rax - 0x72]
0x452466:	cmp	cl, 1
0x452469:	jbe	0x452476
0x45246b:	sub	eax, 0x63
0x45246e:	cmp	al, 1
0x452470:	ja	0x4500dc
0x452476:	mov	esi, 0x11
0x45247b:	mov	rdi, rbp
0x45247e:	call	0x454020
0x452483:	mov	esi, 0x3c
0x452488:	mov	rdi, rbp
0x45248b:	call	0x44b6a0
0x452490:	mov	rax, qword ptr [r12 + 0x18]
0x452495:	mov	esi, 0x11
0x45249a:	mov	rdi, rbp
0x45249d:	mov	rdx, qword ptr [rax + 0x10]
0x4524a1:	call	0x452c20
0x4524a6:	lea	rsi, [rip + 0x7b193]
0x4524ad:	mov	rdi, rbp
0x4524b0:	call	0x44b770
0x4524b5:	mov	rax, qword ptr [r12 + 0x18]
0x4524ba:	mov	esi, 0x11
0x4524bf:	mov	rdi, rbp
0x4524c2:	mov	rdx, qword ptr [rax + 0x18]
0x4524c6:	call	0x452c20
0x4524cb:	mov	rax, qword ptr [rsp + 0xd8]
0x4524d3:	sub	rax, qword ptr fs:[0x28]
0x4524dc:	jne	0x452b02
0x4524e2:	add	rsp, 0xe8
0x4524e9:	mov	rdi, rbp
0x4524ec:	mov	esi, 0x29
0x4524f1:	pop	rbx
0x4524f2:	pop	rbp
0x4524f3:	pop	r12
0x4524f5:	pop	r13
0x4524f7:	pop	r14
0x4524f9:	pop	r15
0x4524fb:	jmp	0x44b6a0
0x452500:	mov	esi, dword ptr [rdi + 0x158]
0x452506:	test	esi, esi
0x452508:	jle	0x4528cf
0x45250e:	mov	rcx, qword ptr [rdi + 0x150]
0x452515:	lea	eax, [rsi - 1]
0x452518:	shl	rax, 4
0x45251c:	lea	rax, [rcx + rax + 0x10]
0x452521:	jmp	0x452535
0x452523:	nop	dword ptr [rax + rax]
0x452528:	add	rcx, 0x10
0x45252c:	cmp	rcx, rax
0x45252f:	je	0x4528cf
0x452535:	cmp	rdx, qword ptr [rcx]
0x452538:	jne	0x452528
0x45253a:	mov	rdi, qword ptr [rbp + 0x148]
0x452541:	mov	rax, rdi
0x452544:	test	rdi, rdi
0x452547:	jne	0x452567
0x452549:	jmp	0x45277a
0x45254e:	nop	
0x452550:	cmp	rdi, rax
0x452553:	je	0x45255a
0x452555:	cmp	rsi, r12
0x452558:	je	0x45256f
0x45255a:	mov	rax, qword ptr [rax + 8]
0x45255e:	test	rax, rax
0x452561:	je	0x45277a
0x452567:	mov	rsi, qword ptr [rax]
0x45256a:	cmp	rsi, rdx
0x45256d:	jne	0x452550
0x45256f:	mov	rsi, rdx
0x452572:	mov	rdi, rbp
0x452575:	mov	qword ptr [rsp], rdx
0x452579:	xor	r13d, r13d
0x45257c:	call	0x44b710
0x452581:	mov	rdx, qword ptr [rsp]
0x452585:	test	rax, rax
0x452588:	mov	r9, rax
0x45258b:	je	0x44ee60
0x452591:	mov	eax, dword ptr [r9]
0x452594:	cmp	eax, 0x2f
0x452597:	jne	0x44efea
0x45259d:	mov	esi, dword ptr [rbp + 0x13c]
0x4525a3:	test	esi, esi
0x4525a5:	js	0x452ab6
0x4525ab:	mov	rdi, r9
0x4525ae:	call	0x44b540
0x4525b3:	mov	r9, rax
0x4525b6:	test	rax, rax
0x4525b9:	je	0x452ac2
0x4525bf:	mov	eax, dword ptr [rax]
0x4525c1:	jmp	0x44efea
0x4525c6:	mov	rdx, qword ptr [rbp + 0x118]
0x4525cd:	mov	byte ptr [rbp + 0xff], 0
0x4525d4:	mov	esi, 0xff
0x4525d9:	mov	rdi, rbp
0x4525dc:	call	qword ptr [rbp + 0x110]
0x4525e2:	add	qword ptr [rbp + 0x140], 1
0x4525ea:	mov	edx, 1
0x4525ef:	xor	eax, eax
0x4525f1:	jmp	0x450b96
0x4525f6:	mov	rdx, qword ptr [r9 + 0x10]
0x4525fa:	jmp	0x44eea1
0x4525ff:	lea	rbx, [rsp + 0xb0]
0x452607:	lea	rcx, [rip + 0x76ab3]
0x45260e:	mov	edx, 0x19
0x452613:	xor	eax, eax
0x452615:	mov	esi, 1
0x45261a:	mov	rdi, rbx
0x45261d:	call	0x403f60
0x452622:	mov	rdi, rbx
0x452625:	call	0x4039e0
0x45262a:	mov	r13, rax
0x45262d:	test	rax, rax
0x452630:	je	0x44ee6a
0x452636:	mov	rax, qword ptr [rbp + 0x100]
0x45263d:	add	r13, rbx
0x452640:	jmp	0x452669
0x452642:	mov	rdx, rax
0x452645:	add	rax, 1
0x452649:	add	rbx, 1
0x45264d:	mov	qword ptr [rbp + 0x100], rax
0x452654:	mov	byte ptr [rbp + rdx], r12b
0x452659:	mov	byte ptr [rbp + 0x108], r12b
0x452660:	cmp	rbx, r13
0x452663:	je	0x44ee6a
0x452669:	movzx	r12d, byte ptr [rbx]
0x45266d:	cmp	rax, 0xff
0x452673:	jne	0x452642
0x452675:	mov	rdx, qword ptr [rbp + 0x118]
0x45267c:	mov	byte ptr [rbp + 0xff], 0
0x452683:	mov	esi, 0xff
0x452688:	mov	rdi, rbp
0x45268b:	call	qword ptr [rbp + 0x110]
0x452691:	add	qword ptr [rbp + 0x140], 1
0x452699:	mov	eax, 1
0x45269e:	xor	edx, edx
0x4526a0:	jmp	0x452649
0x4526a2:	mov	esi, dword ptr [rdi + 0x13c]
0x4526a8:	test	esi, esi
0x4526aa:	js	0x451994
0x4526b0:	mov	rdi, rax
0x4526b3:	call	0x44b540
0x4526b8:	mov	rdx, rax
0x4526bb:	test	rax, rax
0x4526be:	jne	0x451994
0x4526c4:	jmp	0x44ee60
0x4526c9:	mov	rdx, qword ptr [rbp + 0x118]
0x4526d0:	mov	byte ptr [rbp + 0xff], 0
0x4526d7:	mov	esi, 0xff
0x4526dc:	mov	rdi, rbp
0x4526df:	call	qword ptr [rbp + 0x110]
0x4526e5:	add	qword ptr [rbp + 0x140], 1
0x4526ed:	xor	edx, edx
0x4526ef:	jmp	0x451a7a
0x4526f4:	mov	byte ptr [rbp + 0xff], 0
0x4526fb:	mov	rdx, qword ptr [rbp + 0x118]
0x452702:	mov	esi, 0xff
0x452707:	mov	rdi, rbp
0x45270a:	call	qword ptr [rbp + 0x110]
0x452710:	add	qword ptr [rbp + 0x140], 1
0x452718:	xor	eax, eax
0x45271a:	jmp	0x44f2bd
0x45271f:	mov	rdx, r15
0x452722:	mov	esi, 0x11
0x452727:	mov	rdi, rbp
0x45272a:	call	0x4547e0
0x45272f:	mov	rax, qword ptr [rsp + 0xd8]
0x452737:	sub	rax, qword ptr fs:[0x28]
0x452740:	jne	0x452c07
0x452746:	add	rsp, 0xe8
0x45274d:	mov	rdi, rbp
0x452750:	lea	rsi, [rip + 0x7affb]
0x452757:	pop	rbx
0x452758:	pop	rbp
0x452759:	pop	r12
0x45275b:	pop	r13
0x45275d:	pop	r14
0x45275f:	pop	r15
0x452761:	jmp	0x44b770
0x452766:	mov	rbx, qword ptr [rbx + 0x10]
0x45276a:	test	rbx, rbx
0x45276d:	je	0x44ee60
0x452773:	mov	ecx, dword ptr [rbx]
0x452775:	jmp	0x452103
0x45277a:	mov	rax, qword ptr [rcx + 8]
0x45277e:	mov	rsi, rdx
0x452781:	mov	rdi, rbp
0x452784:	mov	qword ptr [rsp], rdx
0x452788:	mov	rbx, qword ptr [rbp + 0x120]
0x45278f:	mov	r13d, 1
0x452795:	mov	qword ptr [rbp + 0x120], rax
0x45279c:	call	0x44b710
0x4527a1:	mov	rdx, qword ptr [rsp]
0x4527a5:	test	rax, rax
0x4527a8:	mov	r9, rax
0x4527ab:	jne	0x452591
0x4527b1:	mov	qword ptr [rbp + 0x120], rbx
0x4527b8:	jmp	0x44ee60
0x4527bd:	mov	byte ptr [rbp + 0xff], 0
0x4527c4:	mov	rdx, qword ptr [rbp + 0x118]
0x4527cb:	mov	esi, 0xff
0x4527d0:	mov	rdi, rbp
0x4527d3:	call	qword ptr [rbp + 0x110]
0x4527d9:	add	qword ptr [rbp + 0x140], 1
0x4527e1:	xor	eax, eax
0x4527e3:	jmp	0x451c6c
0x4527e8:	mov	esi, 0x20
0x4527ed:	mov	rdi, rbp
0x4527f0:	call	0x44b6a0
0x4527f5:	jmp	0x451c59
0x4527fa:	mov	byte ptr [rbp + 0xff], 0
0x452801:	mov	rdx, qword ptr [rbp + 0x118]
0x452808:	mov	esi, 0xff
0x45280d:	mov	rdi, rbp
0x452810:	call	qword ptr [rbp + 0x110]
0x452816:	add	qword ptr [rbp + 0x140], 1
0x45281e:	xor	eax, eax
0x452820:	jmp	0x451c1f
0x452825:	mov	esi, 0x20
0x45282a:	mov	rdi, rbp
0x45282d:	call	0x44b6a0
0x452832:	jmp	0x451c0c
0x452837:	mov	byte ptr [rbp + 0xff], 0
0x45283e:	mov	rdx, qword ptr [rbp + 0x118]
0x452845:	mov	esi, 0xff
0x45284a:	mov	rdi, rbp
0x45284d:	call	qword ptr [rbp + 0x110]
0x452853:	add	qword ptr [rbp + 0x140], 1
0x45285b:	mov	rbx, qword ptr [r13 + 8]
0x45285f:	xor	eax, eax
0x452861:	jmp	0x451e79
0x452866:	mov	rdx, qword ptr [r12 + 0x10]
0x45286b:	cmp	dword ptr [rdx], 1
0x45286e:	jne	0x451cb9
0x452874:	mov	rcx, qword ptr [r12 + 0x18]
0x452879:	cmp	dword ptr [rcx], 0x29
0x45287c:	cmove	r12, rdx
0x452880:	jmp	0x451cb9
0x452885:	mov	rdx, qword ptr [r12 + 0x10]
0x45288a:	mov	esi, 0x11
0x45288f:	mov	rdi, rbp
0x452892:	call	0x4547e0
0x452897:	mov	rax, qword ptr [rsp + 0xd8]
0x45289f:	sub	rax, qword ptr fs:[0x28]
0x4528a8:	jne	0x452b16
0x4528ae:	add	rsp, 0xe8
0x4528b5:	mov	rdx, r13
0x4528b8:	mov	rdi, rbp
0x4528bb:	mov	esi, 0x11
0x4528c0:	pop	rbx
0x4528c1:	pop	rbp
0x4528c2:	pop	r12
0x4528c4:	pop	r13
0x4528c6:	pop	r14
0x4528c8:	pop	r15
0x4528ca:	jmp	0x454020
0x4528cf:	cmp	dword ptr [rbp + 0x15c], esi
0x4528d5:	jle	0x44ee60
0x4528db:	movsxd	rax, esi
0x4528de:	mov	rdi, qword ptr [rbp + 0x120]
0x4528e5:	add	esi, 1
0x4528e8:	shl	rax, 4
0x4528ec:	add	rax, qword ptr [rbp + 0x150]
0x4528f3:	mov	dword ptr [rbp + 0x158], esi
0x4528f9:	add	rax, 8
0x4528fd:	mov	qword ptr [rax - 8], rdx
0x452901:	test	rdi, rdi
0x452904:	je	0x452a96
0x45290a:	movsxd	rcx, dword ptr [rbp + 0x168]
0x452911:	mov	r10d, dword ptr [rbp + 0x16c]
0x452918:	mov	rsi, rcx
0x45291b:	shl	rcx, 4
0x45291f:	jmp	0x452952
0x452921:	mov	r9, qword ptr [rbp + 0x160]
0x452928:	mov	r11, qword ptr [rdi + 8]
0x45292c:	add	esi, 1
0x45292f:	mov	dword ptr [rbp + 0x168], esi
0x452935:	add	r9, rcx
0x452938:	add	rcx, 0x10
0x45293c:	mov	qword ptr [r9 + 8], r11
0x452940:	mov	qword ptr [rax], r9
0x452943:	mov	rdi, qword ptr [rdi]
0x452946:	mov	rax, r9
0x452949:	test	rdi, rdi
0x45294c:	je	0x452a96
0x452952:	cmp	r10d, esi
0x452955:	jg	0x452921
0x452957:	jmp	0x44ee60
0x45295c:	call	0x4039f0
0x452961:	mov	rdx, qword ptr [rax + 0x10]
0x452965:	cmp	dword ptr [rdx + 0x10], 1
0x452969:	jne	0x45011a
0x45296f:	mov	rdx, qword ptr [rdx + 8]
0x452973:	cmp	byte ptr [rdx], 0x3e
0x452976:	jne	0x45011a
0x45297c:	mov	esi, 0x28
0x452981:	mov	rdi, rbp
0x452984:	call	0x44b6a0
0x452989:	mov	rax, qword ptr [r12 + 0x10]
0x45298e:	jmp	0x45011a
0x452993:	mov	rdi, rbp
0x452996:	mov	esi, 0x5b
0x45299b:	call	0x44b6a0
0x4529a0:	mov	rax, qword ptr [r12 + 0x18]
0x4529a5:	mov	rdi, rbp
0x4529a8:	mov	esi, 0x11
0x4529ad:	mov	rdx, qword ptr [rax + 0x18]
0x4529b1:	call	0x452c20
0x4529b6:	mov	esi, 0x5d
0x4529bb:	mov	rdi, rbp
0x4529be:	call	0x44b6a0
0x4529c3:	jmp	0x4501a3
0x4529c8:	mov	rdx, r13
0x4529cb:	mov	esi, 0x11
0x4529d0:	mov	rdi, rbp
0x4529d3:	call	0x454020
0x4529d8:	jmp	0x45018d
0x4529dd:	mov	rdx, qword ptr [rax + 0x18]
0x4529e1:	cmp	dword ptr [rdx], 0x29
0x4529e4:	je	0x4529f0
0x4529e6:	mov	dword ptr [rbp + 0x130], 1
0x4529f0:	mov	rdx, qword ptr [rax + 0x10]
0x4529f4:	mov	esi, 0x11
0x4529f9:	mov	rdi, rbp
0x4529fc:	call	0x4547e0
0x452a01:	jmp	0x450157
0x452a06:	lea	rsi, [rip + 0x7ac40]
0x452a0d:	mov	rdi, rbp
0x452a10:	call	0x44b770
0x452a15:	cmp	qword ptr [r13 + 0x10], 0
0x452a1a:	je	0x452a39
0x452a1c:	mov	esi, 0x11
0x452a21:	mov	rdi, rbp
0x452a24:	mov	rdx, r13
0x452a27:	call	0x4547e0
0x452a2c:	mov	esi, 0x20
0x452a31:	mov	rdi, rbp
0x452a34:	call	0x44b6a0
0x452a39:	mov	rdx, r14
0x452a3c:	mov	esi, 0x11
0x452a41:	mov	rdi, rbp
0x452a44:	call	0x452c20
0x452a49:	test	r12, r12
0x452a4c:	je	0x44ee6a
0x452a52:	mov	rax, qword ptr [rsp + 0xd8]
0x452a5a:	sub	rax, qword ptr fs:[0x28]
0x452a63:	jne	0x452c1b
0x452a69:	add	rsp, 0xe8
0x452a70:	mov	rdx, r12
0x452a73:	mov	rdi, rbp
0x452a76:	mov	esi, 0x11
0x452a7b:	pop	rbx
0x452a7c:	pop	rbp
0x452a7d:	pop	r12
0x452a7f:	pop	r13
0x452a81:	pop	r14
0x452a83:	pop	r15
0x452a85:	jmp	0x4547e0
0x452a8a:	mov	qword ptr [rbp + 0x128], rax
0x452a91:	jmp	0x44ee60
0x452a96:	mov	qword ptr [rax], 0
0x452a9d:	jmp	0x45256f
0x452aa2:	mov	esi, 0x2d
0x452aa7:	call	0x44b6a0
0x452aac:	mov	r9, qword ptr [r12 + 0x18]
0x452ab1:	jmp	0x452323
0x452ab6:	mov	rdi, qword ptr [rbp + 0x128]
0x452abd:	jmp	0x44f010
0x452ac2:	test	r13d, r13d
0x452ac5:	jne	0x4527b1
0x452acb:	jmp	0x44ee60
0x452ad0:	call	0x4039f0
0x452ad5:	call	0x4039f0
0x452ada:	call	0x4039f0
0x452adf:	call	0x4039f0
0x452ae4:	call	0x4039f0
0x452ae9:	call	0x4039f0
0x452aee:	call	0x4039f0
0x452af3:	call	0x4039f0
0x452af8:	mov	rdx, qword ptr [r12 + 0x10]
0x452afd:	jmp	0x44eed4
0x452b02:	call	0x4039f0
0x452b07:	call	0x4039f0
0x452b0c:	call	0x4039f0
0x452b11:	call	0x4039f0
0x452b16:	call	0x4039f0
0x452b1b:	call	0x4039f0
0x452b20:	call	0x4039f0
0x452b25:	call	0x4039f0
0x452b2a:	call	0x4039f0
0x452b2f:	call	0x4039f0
0x452b34:	call	0x4039f0
0x452b39:	call	0x4039f0
0x452b3e:	call	0x4039f0
0x452b43:	mov	rdx, r13
0x452b46:	mov	esi, 0x11
0x452b4b:	call	0x454020
0x452b50:	jmp	0x450250
0x452b55:	call	0x4039f0
0x452b5a:	call	0x4039f0
0x452b5f:	call	0x4039f0
0x452b64:	call	0x4039f0
0x452b69:	call	0x4039f0
0x452b6e:	call	0x4039f0
0x452b73:	call	0x4039f0
0x452b78:	call	0x4039f0
0x452b7d:	call	0x4039f0
0x452b82:	call	0x4039f0
0x452b87:	call	0x4039f0
0x452b8c:	call	0x4039f0
0x452b91:	mov	rax, qword ptr [rsp + 0xd8]
0x452b99:	sub	rax, qword ptr fs:[0x28]
0x452ba2:	jne	0x452bcb
0x452ba4:	add	rsp, 0xe8
0x452bab:	lea	rsi, [rip + 0x7aaa0]
0x452bb2:	pop	rbx
0x452bb3:	pop	rbp
0x452bb4:	pop	r12
0x452bb6:	pop	r13
0x452bb8:	pop	r14
0x452bba:	pop	r15
0x452bbc:	jmp	0x44b770
0x452bc1:	call	0x4039f0
0x452bc6:	call	0x4039f0
0x452bcb:	call	0x4039f0
0x452bd0:	call	0x4039f0
0x452bd5:	call	0x4039f0
0x452bda:	call	0x4039f0
0x452bdf:	call	0x4039f0
0x452be4:	call	0x4039f0
0x452be9:	call	0x4039f0
0x452bee:	call	0x4039f0
0x452bf3:	call	0x4039f0
0x452bf8:	call	0x4039f0
0x452bfd:	call	0x4039f0
0x452c02:	call	0x4039f0
0x452c07:	call	0x4039f0
0x452c0c:	call	0x4039f0
0x452c11:	call	0x4039f0
0x452c16:	call	0x4039f0
0x452c1b:	call	0x4039f0
0x452c20:	push	rbp
0x452c21:	mov	rbp, rdi
0x452c24:	push	rbx
0x452c25:	sub	rsp, 0x28
0x452c29:	mov	rax, qword ptr fs:[0x28]
0x452c32:	mov	qword ptr [rsp + 0x18], rax
0x452c37:	xor	eax, eax
0x452c39:	test	rdx, rdx
0x452c3c:	je	0x452cb0
0x452c3e:	mov	eax, dword ptr [rdx + 4]
0x452c41:	mov	rbx, rdx
0x452c44:	cmp	eax, 1
0x452c47:	jg	0x452cb0
0x452c49:	mov	edx, dword ptr [rdi + 0x134]
0x452c4f:	cmp	edx, 0x400
0x452c55:	jg	0x452cb0
0x452c57:	add	eax, 1
0x452c5a:	add	edx, 1
0x452c5d:	mov	esi, 0x11
0x452c62:	mov	qword ptr [rsp], rbx
0x452c66:	mov	dword ptr [rbx + 4], eax
0x452c69:	mov	rax, qword ptr [rdi + 0x148]
0x452c70:	mov	dword ptr [rdi + 0x134], edx
0x452c76:	mov	rdx, rbx
0x452c79:	mov	qword ptr [rsp + 8], rax
0x452c7e:	mov	rax, rsp
0x452c81:	mov	qword ptr [rdi + 0x148], rax
0x452c88:	call	0x44ee00
0x452c8d:	mov	rax, qword ptr [rsp + 8]
0x452c92:	mov	qword ptr [rbp + 0x148], rax
0x452c99:	sub	dword ptr [rbx + 4], 1
0x452c9d:	sub	dword ptr [rbp + 0x134], 1
0x452ca4:	jmp	0x452cba
0x452ca6:	nop	word ptr cs:[rax + rax]
0x452cb0:	mov	dword ptr [rbp + 0x130], 1
0x452cba:	mov	rax, qword ptr [rsp + 0x18]
0x452cbf:	sub	rax, qword ptr fs:[0x28]
0x452cc8:	jne	0x452cd1
0x452cca:	add	rsp, 0x28
0x452cce:	pop	rbx
0x452ccf:	pop	rbp
0x452cd0:	ret	
0x452cd1:	call	0x4039f0
0x452cd6:	nop	word ptr cs:[rax + rax]
0x452ce0:	push	r14
0x452ce2:	push	r13
0x452ce4:	push	r12
0x452ce6:	mov	r12, rdx
0x452ce9:	push	rbp
0x452cea:	mov	rbp, rdi
0x452ced:	push	rbx
0x452cee:	mov	eax, dword ptr [rdx]
0x452cf0:	sub	eax, 3
0x452cf3:	cmp	eax, 0x4e
0x452cf6:	ja	0x452d10
0x452cf8:	lea	rdx, [rip + 0x7a655]
0x452cff:	movsxd	rax, dword ptr [rdx + rax*4]
0x452d03:	add	rax, rdx
0x452d06:	notrack jmp	rax
0x452d09:	nop	dword ptr [rax]
0x452d10:	mov	rdx, r12
0x452d13:	pop	rbx
0x452d14:	mov	rdi, rbp
0x452d17:	mov	esi, 0x11
0x452d1c:	pop	rbp
0x452d1d:	pop	r12
0x452d1f:	pop	r13
0x452d21:	pop	r14
0x452d23:	jmp	0x452c20
0x452d28:	nop	dword ptr [rax + rax]
0x452d30:	lea	rbx, [rip + 0x7a9ac]
0x452d37:	mov	rax, qword ptr [rdi + 0x100]
0x452d3e:	mov	r12d, 0x20
0x452d44:	lea	r13, [rbx + 8]
0x452d48:	jmp	0x452d7b
0x452d4a:	nop	word ptr [rax + rax]
0x452d50:	mov	rdx, rax
0x452d53:	add	rax, 1
0x452d57:	mov	qword ptr [rbp + 0x100], rax
0x452d5e:	mov	byte ptr [rbp + rdx], r12b
0x452d63:	mov	byte ptr [rbp + 0x108], r12b
0x452d6a:	cmp	rbx, r13
0x452d6d:	je	0x453002
0x452d73:	movzx	r12d, byte ptr [rbx]
0x452d77:	add	rbx, 1
0x452d7b:	cmp	rax, 0xff
0x452d81:	jne	0x452d50
0x452d83:	mov	rdx, qword ptr [rbp + 0x118]
0x452d8a:	mov	byte ptr [rbp + 0xff], 0
0x452d91:	mov	esi, 0xff
0x452d96:	mov	rdi, rbp
0x452d99:	call	qword ptr [rbp + 0x110]
0x452d9f:	add	qword ptr [rbp + 0x140], 1
0x452da7:	mov	eax, 1
0x452dac:	xor	edx, edx
0x452dae:	jmp	0x452d57
0x452db0:	lea	rbx, [rip + 0x7a936]
0x452db7:	mov	rax, qword ptr [rdi + 0x100]
0x452dbe:	mov	r12d, 0x20
0x452dc4:	lea	r13, [rbx + 8]
0x452dc8:	jmp	0x452dfb
0x452dca:	nop	word ptr [rax + rax]
0x452dd0:	mov	rdx, rax
0x452dd3:	add	rax, 1
0x452dd7:	mov	qword ptr [rbp + 0x100], rax
0x452dde:	mov	byte ptr [rbp + rdx], r12b
0x452de3:	mov	byte ptr [rbp + 0x108], r12b
0x452dea:	cmp	r13, rbx
0x452ded:	je	0x453002
0x452df3:	movzx	r12d, byte ptr [rbx]
0x452df7:	add	rbx, 1
0x452dfb:	cmp	rax, 0xff
0x452e01:	jne	0x452dd0
0x452e03:	mov	rdx, qword ptr [rbp + 0x118]
0x452e0a:	mov	byte ptr [rbp + 0xff], 0
0x452e11:	mov	esi, 0xff
0x452e16:	mov	rdi, rbp
0x452e19:	call	qword ptr [rbp + 0x110]
0x452e1f:	add	qword ptr [rbp + 0x140], 1
0x452e27:	mov	eax, 1
0x452e2c:	xor	edx, edx
0x452e2e:	jmp	0x452dd7
0x452e30:	lea	rbx, [rip + 0x7a8bf]
0x452e37:	mov	rax, qword ptr [rdi + 0x100]
0x452e3e:	mov	r12d, 0x20
0x452e44:	lea	r13, [rbx + 6]
0x452e48:	jmp	0x452e7b
0x452e4a:	nop	word ptr [rax + rax]
0x452e50:	mov	rdx, rax
0x452e53:	add	rax, 1
0x452e57:	add	rbx, 1
0x452e5b:	mov	qword ptr [rbp + 0x100], rax
0x452e62:	mov	byte ptr [rbp + rdx], r12b
0x452e67:	mov	byte ptr [rbp + 0x108], r12b
0x452e6e:	cmp	r13, rbx
0x452e71:	je	0x453002
0x452e77:	movzx	r12d, byte ptr [rbx]
0x452e7b:	cmp	rax, 0xff
0x452e81:	jne	0x452e50
0x452e83:	mov	rdx, qword ptr [rbp + 0x118]
0x452e8a:	mov	byte ptr [rbp + 0xff], 0
0x452e91:	mov	esi, 0xff
0x452e96:	mov	rdi, rbp
0x452e99:	call	qword ptr [rbp + 0x110]
0x452e9f:	add	qword ptr [rbp + 0x140], 1
0x452ea7:	mov	eax, 1
0x452eac:	xor	edx, edx
0x452eae:	jmp	0x452e57
0x452eb0:	lea	rbx, [rip + 0x7a862]
0x452eb7:	mov	rax, qword ptr [rdi + 0x100]
0x452ebe:	mov	r13d, 0x20
0x452ec4:	lea	r14, [rbx + 6]
0x452ec8:	jmp	0x452efb
0x452eca:	nop	word ptr [rax + rax]
0x452ed0:	mov	rdx, rax
0x452ed3:	add	rax, 1
0x452ed7:	add	rbx, 1
0x452edb:	mov	qword ptr [rbp + 0x100], rax
0x452ee2:	mov	byte ptr [rbp + rdx], r13b
0x452ee7:	mov	byte ptr [rbp + 0x108], r13b
0x452eee:	cmp	rbx, r14
0x452ef1:	je	0x4533b0
0x452ef7:	movzx	r13d, byte ptr [rbx]
0x452efb:	cmp	rax, 0xff
0x452f01:	jne	0x452ed0
0x452f03:	mov	rdx, qword ptr [rbp + 0x118]
0x452f0a:	mov	byte ptr [rbp + 0xff], 0
0x452f11:	mov	esi, 0xff
0x452f16:	mov	rdi, rbp
0x452f19:	call	qword ptr [rbp + 0x110]
0x452f1f:	add	qword ptr [rbp + 0x140], 1
0x452f27:	mov	eax, 1
0x452f2c:	xor	edx, edx
0x452f2e:	jmp	0x452ed7
0x452f30:	mov	rdx, qword ptr [rdi + 0x100]
0x452f37:	cmp	rdx, 0xff
0x452f3e:	je	0x453528
0x452f44:	lea	rax, [rdx + 1]
0x452f48:	mov	qword ptr [rdi + 0x100], rax
0x452f4f:	mov	byte ptr [rdi + rdx], 0x20
0x452f53:	mov	byte ptr [rdi + 0x108], 0x20
0x452f5a:	jmp	0x452fdf
0x452f5f:	nop	
0x452f60:	mov	rdx, qword ptr [rdi + 0x100]
0x452f67:	cmp	rdx, 0xff
0x452f6e:	je	0x4534f8
0x452f74:	lea	rax, [rdx + 1]
0x452f78:	mov	qword ptr [rbp + 0x100], rax
0x452f7f:	mov	byte ptr [rbp + rdx], 0x20
0x452f84:	mov	byte ptr [rbp + 0x108], 0x20
0x452f8b:	jmp	0x453017
0x452f90:	mov	rax, qword ptr [rdi + 0x100]
0x452f97:	cmp	rax, 0xff
0x452f9d:	je	0x4534c8
0x452fa3:	lea	rdx, [rax + 1]
0x452fa7:	mov	qword ptr [rbp + 0x100], rdx
0x452fae:	mov	byte ptr [rbp + rax], 0x20
0x452fb3:	mov	byte ptr [rbp + 0x108], 0x20
0x452fba:	mov	rdx, qword ptr [r12 + 0x18]
0x452fbf:	jmp	0x452d13
0x452fc4:	nop	dword ptr [rax]
0x452fc8:	mov	rdx, qword ptr [r12 + 0x10]
0x452fcd:	jmp	0x452d13
0x452fd2:	nop	word ptr [rax + rax]
0x452fd8:	mov	rax, qword ptr [rdi + 0x100]
0x452fdf:	cmp	rax, 0xff
0x452fe5:	je	0x453590
0x452feb:	lea	rdx, [rax + 1]
0x452fef:	mov	qword ptr [rbp + 0x100], rdx
0x452ff6:	mov	byte ptr [rbp + rax], 0x26
0x452ffb:	mov	byte ptr [rbp + 0x108], 0x26
0x453002:	pop	rbx
0x453003:	pop	rbp
0x453004:	pop	r12
0x453006:	pop	r13
0x453008:	pop	r14
0x45300a:	ret	
0x45300b:	nop	dword ptr [rax + rax]
0x453010:	mov	rax, qword ptr [rdi + 0x100]
0x453017:	lea	r12, [rip + 0x7a702]
0x45301e:	mov	ebx, 0x26
0x453023:	lea	r13, [r12 + 2]
0x453028:	jmp	0x453056
0x45302a:	nop	word ptr [rax + rax]
0x453030:	mov	rdx, rax
0x453033:	add	rax, 1
0x453037:	add	r12, 1
0x45303b:	mov	qword ptr [rbp + 0x100], rax
0x453042:	mov	byte ptr [rbp + rdx], bl
0x453046:	mov	byte ptr [rbp + 0x108], bl
0x45304c:	cmp	r13, r12
0x45304f:	je	0x453002
0x453051:	movzx	ebx, byte ptr [r12]
0x453056:	cmp	rax, 0xff
0x45305c:	jne	0x453030
0x45305e:	mov	rdx, qword ptr [rbp + 0x118]
0x453065:	mov	byte ptr [rbp + 0xff], 0
0x45306c:	mov	esi, 0xff
0x453071:	mov	rdi, rbp
0x453074:	call	qword ptr [rbp + 0x110]
0x45307a:	add	qword ptr [rbp + 0x140], 1
0x453082:	mov	eax, 1
0x453087:	xor	edx, edx
0x453089:	jmp	0x453037
0x45308b:	nop	dword ptr [rax + rax]
0x453090:	lea	rbx, [rip + 0x7a68d]
0x453097:	mov	rax, qword ptr [rdi + 0x100]
0x45309e:	mov	r12d, 0x20
0x4530a4:	lea	r13, [rbx + 8]
0x4530a8:	jmp	0x4530db
0x4530aa:	nop	word ptr [rax + rax]
0x4530b0:	mov	rdx, rax
0x4530b3:	add	rax, 1
0x4530b7:	mov	qword ptr [rbp + 0x100], rax
0x4530be:	mov	byte ptr [rbp + rdx], r12b
0x4530c3:	mov	byte ptr [rbp + 0x108], r12b
0x4530ca:	cmp	r13, rbx
0x4530cd:	je	0x453002
0x4530d3:	movzx	r12d, byte ptr [rbx]
0x4530d7:	add	rbx, 1
0x4530db:	cmp	rax, 0xff
0x4530e1:	jne	0x4530b0
0x4530e3:	mov	rdx, qword ptr [rbp + 0x118]
0x4530ea:	mov	byte ptr [rbp + 0xff], 0
0x4530f1:	mov	esi, 0xff
0x4530f6:	mov	rdi, rbp
0x4530f9:	call	qword ptr [rbp + 0x110]
0x4530ff:	add	qword ptr [rbp + 0x140], 1
0x453107:	mov	eax, 1
0x45310c:	xor	edx, edx
0x45310e:	jmp	0x4530b7
0x453110:	lea	rbx, [rip + 0x7a617]
0x453117:	mov	rax, qword ptr [rdi + 0x100]
0x45311e:	mov	r12d, 0x20
0x453124:	lea	r13, [rbx + 0xa]
0x453128:	jmp	0x45315b
0x45312a:	nop	word ptr [rax + rax]
0x453130:	mov	rdx, rax
0x453133:	add	rax, 1
0x453137:	mov	qword ptr [rbp + 0x100], rax
0x45313e:	mov	byte ptr [rbp + rdx], r12b
0x453143:	mov	byte ptr [rbp + 0x108], r12b
0x45314a:	cmp	r13, rbx
0x45314d:	je	0x453002
0x453153:	movzx	r12d, byte ptr [rbx]
0x453157:	add	rbx, 1
0x45315b:	cmp	rax, 0xff
0x453161:	jne	0x453130
0x453163:	mov	rdx, qword ptr [rbp + 0x118]
0x45316a:	mov	byte ptr [rbp + 0xff], 0
0x453171:	mov	esi, 0xff
0x453176:	mov	rdi, rbp
0x453179:	call	qword ptr [rbp + 0x110]
0x45317f:	add	qword ptr [rbp + 0x140], 1
0x453187:	mov	eax, 1
0x45318c:	xor	edx, edx
0x45318e:	jmp	0x453137
0x453190:	cmp	byte ptr [rdi + 0x108], 0x28
0x453197:	jne	0x453430
0x45319d:	mov	rdx, qword ptr [r12 + 0x10]
0x4531a2:	mov	esi, 0x11
0x4531a7:	mov	rdi, rbp
0x4531aa:	lea	rbx, [rip + 0x7a588]
0x4531b1:	lea	r13, [rbx + 3]
0x4531b5:	mov	r12d, 0x3a
0x4531bb:	call	0x452c20
0x4531c0:	mov	rax, qword ptr [rbp + 0x100]
0x4531c7:	jmp	0x4531fb
0x4531c9:	nop	dword ptr [rax]
0x4531d0:	mov	rdx, rax
0x4531d3:	add	rax, 1
0x4531d7:	add	rbx, 1
0x4531db:	mov	qword ptr [rbp + 0x100], rax
0x4531e2:	mov	byte ptr [rbp + rdx], r12b
0x4531e7:	mov	byte ptr [rbp + 0x108], r12b
0x4531ee:	cmp	rbx, r13
0x4531f1:	je	0x453002
0x4531f7:	movzx	r12d, byte ptr [rbx]
0x4531fb:	cmp	rax, 0xff
0x453201:	jne	0x4531d0
0x453203:	mov	rdx, qword ptr [rbp + 0x118]
0x45320a:	mov	byte ptr [rbp + 0xff], 0
0x453211:	mov	esi, 0xff
0x453216:	mov	rdi, rbp
0x453219:	call	qword ptr [rbp + 0x110]
0x45321f:	add	qword ptr [rbp + 0x140], 1
0x453227:	mov	eax, 1
0x45322c:	xor	edx, edx
0x45322e:	jmp	0x4531d7
0x453230:	lea	rbx, [rip + 0x7a507]
0x453237:	mov	rax, qword ptr [rdi + 0x100]
0x45323e:	mov	r13d, 0x20
0x453244:	lea	r14, [rbx + 9]
0x453248:	jmp	0x45327b
0x45324a:	nop	word ptr [rax + rax]
0x453250:	mov	rdx, rax
0x453253:	add	rax, 1
0x453257:	mov	qword ptr [rbp + 0x100], rax
0x45325e:	mov	byte ptr [rbp + rdx], r13b
0x453263:	mov	byte ptr [rbp + 0x108], r13b
0x45326a:	cmp	r14, rbx
0x45326d:	je	0x4533e8
0x453273:	movzx	r13d, byte ptr [rbx]
0x453277:	add	rbx, 1
0x45327b:	cmp	rax, 0xff
0x453281:	jne	0x453250
0x453283:	mov	rdx, qword ptr [rbp + 0x118]
0x45328a:	mov	byte ptr [rbp + 0xff], 0
0x453291:	mov	esi, 0xff
0x453296:	mov	rdi, rbp
0x453299:	call	qword ptr [rbp + 0x110]
0x45329f:	add	qword ptr [rbp + 0x140], 1
0x4532a7:	mov	eax, 1
0x4532ac:	xor	edx, edx
0x4532ae:	jmp	0x453257
0x4532b0:	lea	rbx, [rip + 0x7a447]
0x4532b7:	mov	rax, qword ptr [rdi + 0x100]
0x4532be:	mov	r12d, 0x20
0x4532c4:	lea	r13, [rbx + 0x10]
0x4532c8:	jmp	0x4532fb
0x4532ca:	nop	word ptr [rax + rax]
0x4532d0:	mov	rdx, rax
0x4532d3:	add	rax, 1
0x4532d7:	mov	qword ptr [rbp + 0x100], rax
0x4532de:	mov	byte ptr [rbp + rdx], r12b
0x4532e3:	mov	byte ptr [rbp + 0x108], r12b
0x4532ea:	cmp	r13, rbx
0x4532ed:	je	0x453002
0x4532f3:	movzx	r12d, byte ptr [rbx]
0x4532f7:	add	rbx, 1
0x4532fb:	cmp	rax, 0xff
0x453301:	jne	0x4532d0
0x453303:	mov	rdx, qword ptr [rbp + 0x118]
0x45330a:	mov	byte ptr [rbp + 0xff], 0
0x453311:	mov	esi, 0xff
0x453316:	mov	rdi, rbp
0x453319:	call	qword ptr [rbp + 0x110]
0x45331f:	add	qword ptr [rbp + 0x140], 1
0x453327:	mov	eax, 1
0x45332c:	xor	edx, edx
0x45332e:	jmp	0x4532d7
0x453330:	lea	rbx, [rip + 0x7a3d9]
0x453337:	mov	rax, qword ptr [rdi + 0x100]
0x45333e:	mov	r13d, 0x20
0x453344:	lea	r14, [rbx + 8]
0x453348:	jmp	0x453377
0x45334a:	nop	word ptr [rax + rax]
0x453350:	mov	rdx, rax
0x453353:	add	rax, 1
0x453357:	mov	qword ptr [rbp + 0x100], rax
0x45335e:	mov	byte ptr [rbp + rdx], r13b
0x453363:	mov	byte ptr [rbp + 0x108], r13b
0x45336a:	cmp	r14, rbx
0x45336d:	je	0x4533b0
0x45336f:	movzx	r13d, byte ptr [rbx]
0x453373:	add	rbx, 1
0x453377:	cmp	rax, 0xff
0x45337d:	jne	0x453350
0x45337f:	mov	rdx, qword ptr [rbp + 0x118]
0x453386:	mov	byte ptr [rbp + 0xff], 0
0x45338d:	mov	esi, 0xff
0x453392:	mov	rdi, rbp
0x453395:	call	qword ptr [rbp + 0x110]
0x45339b:	add	qword ptr [rbp + 0x140], 1
0x4533a3:	mov	eax, 1
0x4533a8:	xor	edx, edx
0x4533aa:	jmp	0x453357
0x4533ac:	nop	dword ptr [rax]
0x4533b0:	mov	rdx, qword ptr [r12 + 0x18]
0x4533b5:	test	rdx, rdx
0x4533b8:	je	0x453002
0x4533be:	cmp	rax, 0xff
0x4533c4:	je	0x453490
0x4533ca:	lea	rcx, [rax + 1]
0x4533ce:	mov	qword ptr [rbp + 0x100], rcx
0x4533d5:	mov	byte ptr [rbp + rax], 0x28
0x4533da:	mov	byte ptr [rbp + 0x108], 0x28
0x4533e1:	jmp	0x4533ed
0x4533e3:	nop	dword ptr [rax + rax]
0x4533e8:	mov	rdx, qword ptr [r12 + 0x10]
0x4533ed:	mov	esi, 0x11
0x4533f2:	mov	rdi, rbp
0x4533f5:	call	0x452c20
0x4533fa:	mov	rax, qword ptr [rbp + 0x100]
0x453401:	cmp	rax, 0xff
0x453407:	je	0x453560
0x45340d:	lea	rdx, [rax + 1]
0x453411:	pop	rbx
0x453412:	mov	qword ptr [rbp + 0x100], rdx
0x453419:	mov	byte ptr [rbp + rax], 0x29
0x45341e:	mov	byte ptr [rbp + 0x108], 0x29
0x453425:	pop	rbp
0x453426:	pop	r12
0x453428:	pop	r13
0x45342a:	pop	r14
0x45342c:	ret	
0x45342d:	nop	dword ptr [rax]
0x453430:	mov	rax, qword ptr [rdi + 0x100]
0x453437:	cmp	rax, 0xff
0x45343d:	je	0x4535c0
0x453443:	lea	rdx, [rax + 1]
0x453447:	mov	qword ptr [rbp + 0x100], rdx
0x45344e:	mov	byte ptr [rbp + rax], 0x20
0x453453:	mov	byte ptr [rbp + 0x108], 0x20
0x45345a:	jmp	0x45319d
0x45345f:	nop	
0x453460:	mov	rax, qword ptr [rdi + 0x100]
0x453467:	cmp	rax, 0xff
0x45346d:	je	0x4535ed
0x453473:	lea	rdx, [rax + 1]
0x453477:	mov	qword ptr [rbp + 0x100], rdx
0x45347e:	mov	byte ptr [rbp + rax], 0x2a
0x453483:	mov	byte ptr [rbp + 0x108], 0x2a
0x45348a:	jmp	0x453002
0x45348f:	nop	
0x453490:	mov	rdx, qword ptr [rbp + 0x118]
0x453497:	mov	byte ptr [rbp + 0xff], 0
0x45349e:	mov	esi, 0xff
0x4534a3:	mov	rdi, rbp
0x4534a6:	call	qword ptr [rbp + 0x110]
0x4534ac:	add	qword ptr [rbp + 0x140], 1
0x4534b4:	mov	rdx, qword ptr [r12 + 0x18]
0x4534b9:	xor	eax, eax
0x4534bb:	mov	ecx, 1
0x4534c0:	jmp	0x4533ce
0x4534c5:	nop	dword ptr [rax]
0x4534c8:	mov	rdx, qword ptr [rdi + 0x118]
0x4534cf:	mov	byte ptr [rdi + 0xff], 0
0x4534d6:	mov	esi, 0xff
0x4534db:	call	qword ptr [rdi + 0x110]
0x4534e1:	add	qword ptr [rbp + 0x140], 1
0x4534e9:	mov	edx, 1
0x4534ee:	xor	eax, eax
0x4534f0:	jmp	0x452fa7
0x4534f5:	nop	dword ptr [rax]
0x4534f8:	mov	rdx, qword ptr [rdi + 0x118]
0x4534ff:	mov	byte ptr [rdi + 0xff], 0
0x453506:	mov	esi, 0xff
0x45350b:	call	qword ptr [rdi + 0x110]
0x453511:	add	qword ptr [rbp + 0x140], 1
0x453519:	mov	eax, 1
0x45351e:	xor	edx, edx
0x453520:	jmp	0x452f78
0x453525:	nop	dword ptr [rax]
0x453528:	mov	byte ptr [rdi + 0xff], 0
0x45352f:	mov	rdx, qword ptr [rdi + 0x118]
0x453536:	mov	esi, 0xff
0x45353b:	call	qword ptr [rdi + 0x110]
0x453541:	mov	byte ptr [rbp], 0x20
0x453545:	mov	eax, 1
0x45354a:	add	qword ptr [rbp + 0x140], 1
0x453552:	jmp	0x452feb
0x453557:	nop	word ptr [rax + rax]
0x453560:	mov	rdx, qword ptr [rbp + 0x118]
0x453567:	mov	byte ptr [rbp + 0xff], 0
0x45356e:	mov	esi, 0xff
0x453573:	mov	rdi, rbp
0x453576:	call	qword ptr [rbp + 0x110]
0x45357c:	add	qword ptr [rbp + 0x140], 1
0x453584:	mov	edx, 1
0x453589:	xor	eax, eax
0x45358b:	jmp	0x453411
0x453590:	mov	rdx, qword ptr [rbp + 0x118]
0x453597:	mov	byte ptr [rbp + 0xff], 0
0x45359e:	mov	esi, 0xff
0x4535a3:	mov	rdi, rbp
0x4535a6:	call	qword ptr [rbp + 0x110]
0x4535ac:	add	qword ptr [rbp + 0x140], 1
0x4535b4:	mov	edx, 1
0x4535b9:	xor	eax, eax
0x4535bb:	jmp	0x452fef
0x4535c0:	mov	rdx, qword ptr [rdi + 0x118]
0x4535c7:	mov	byte ptr [rdi + 0xff], 0
0x4535ce:	mov	esi, 0xff
0x4535d3:	call	qword ptr [rdi + 0x110]
0x4535d9:	add	qword ptr [rbp + 0x140], 1
0x4535e1:	mov	edx, 1
0x4535e6:	xor	eax, eax
0x4535e8:	jmp	0x453447
0x4535ed:	mov	rdx, qword ptr [rdi + 0x118]
0x4535f4:	mov	byte ptr [rdi + 0xff], 0
0x4535fb:	mov	esi, 0xff
0x453600:	call	qword ptr [rdi + 0x110]
0x453606:	add	qword ptr [rbp + 0x140], 1
0x45360e:	mov	edx, 1
0x453613:	xor	eax, eax
0x453615:	jmp	0x453477
0x45361a:	nop	word ptr [rax + rax]
0x453620:	push	r13
0x453622:	push	r12
0x453624:	mov	r12, rcx
0x453627:	push	rbp
0x453628:	mov	rbp, rdx
0x45362b:	push	rbx
0x45362c:	mov	rbx, rdi
0x45362f:	sub	rsp, 8
0x453633:	test	rcx, rcx
0x453636:	je	0x453690
0x453638:	mov	rax, rcx
0x45363b:	mov	edi, 1
0x453640:	movabs	rsi, 0x8620e000000
0x45364a:	movabs	r8, 0x1c00000000
0x453654:	mov	edx, dword ptr [rax + 0x10]
0x453657:	test	edx, edx
0x453659:	jne	0x453690
0x45365b:	mov	rdx, qword ptr [rax + 8]
0x45365f:	mov	ecx, dword ptr [rdx]
0x453661:	cmp	ecx, 0x2b
0x453664:	ja	0x45367e
0x453666:	mov	rdx, rdi
0x453669:	shl	rdx, cl
0x45366c:	test	rdx, rsi
0x45366f:	jne	0x453748
0x453675:	test	rdx, r8
0x453678:	jne	0x453830
0x45367e:	mov	rax, qword ptr [rax]
0x453681:	test	rax, rax
0x453684:	jne	0x453654
0x453686:	nop	word ptr cs:[rax + rax]
0x453690:	mov	r13, qword ptr [rbx + 0x128]
0x453697:	mov	rdx, r12
0x45369a:	xor	ecx, ecx
0x45369c:	mov	rdi, rbx
0x45369f:	mov	qword ptr [rbx + 0x128], 0
0x4536aa:	mov	esi, 0x11
0x4536af:	call	0x453980
0x4536b4:	mov	rdx, qword ptr [rbx + 0x100]
0x4536bb:	cmp	rdx, 0xff
0x4536c2:	je	0x4537db
0x4536c8:	lea	rax, [rdx + 1]
0x4536cc:	mov	qword ptr [rbx + 0x100], rax
0x4536d3:	mov	byte ptr [rbx + rdx], 0x28
0x4536d7:	mov	byte ptr [rbx + 0x108], 0x28
0x4536de:	mov	rdx, qword ptr [rbp + 0x18]
0x4536e2:	test	rdx, rdx
0x4536e5:	je	0x4536fb
0x4536e7:	mov	esi, 0x11
0x4536ec:	mov	rdi, rbx
0x4536ef:	call	0x452c20
0x4536f4:	mov	rax, qword ptr [rbx + 0x100]
0x4536fb:	cmp	rax, 0xff
0x453701:	je	0x453890
0x453707:	lea	rdx, [rax + 1]
0x45370b:	mov	qword ptr [rbx + 0x100], rdx
0x453712:	mov	rdi, rbx
0x453715:	mov	rdx, r12
0x453718:	mov	ecx, 1
0x45371d:	mov	byte ptr [rbx + rax], 0x29
0x453721:	mov	esi, 0x11
0x453726:	mov	byte ptr [rbx + 0x108], 0x29
0x45372d:	call	0x453980
0x453732:	mov	qword ptr [rbx + 0x128], r13
0x453739:	add	rsp, 8
0x45373d:	pop	rbx
0x45373e:	pop	rbp
0x45373f:	pop	r12
0x453741:	pop	r13
0x453743:	ret	
0x453744:	nop	dword ptr [rax]
0x453748:	movzx	edx, byte ptr [rbx + 0x108]
0x45374f:	mov	rax, qword ptr [rbx + 0x100]
0x453756:	cmp	dl, 0x20
0x453759:	jne	0x4538c0
0x45375f:	cmp	rax, 0xff
0x453765:	je	0x453857
0x45376b:	lea	rdx, [rax + 1]
0x45376f:	mov	qword ptr [rbx + 0x100], rdx
0x453776:	xor	ecx, ecx
0x453778:	mov	rdx, r12
0x45377b:	mov	esi, 0x11
0x453780:	mov	byte ptr [rbx + rax], 0x28
0x453784:	mov	r13, qword ptr [rbx + 0x128]
0x45378b:	mov	rdi, rbx
0x45378e:	mov	byte ptr [rbx + 0x108], 0x28
0x453795:	mov	qword ptr [rbx + 0x128], 0
0x4537a0:	call	0x453980
0x4537a5:	mov	rax, qword ptr [rbx + 0x100]
0x4537ac:	cmp	rax, 0xff
0x4537b2:	je	0x4538f0
0x4537b8:	lea	rdx, [rax + 1]
0x4537bc:	mov	qword ptr [rbx + 0x100], rdx
0x4537c3:	mov	byte ptr [rbx + rax], 0x29
0x4537c7:	mov	byte ptr [rbx + 0x108], 0x29
0x4537ce:	cmp	rdx, 0xff
0x4537d5:	jne	0x4536c8
0x4537db:	mov	rdx, qword ptr [rbx + 0x118]
0x4537e2:	mov	byte ptr [rbx + 0xff], 0
0x4537e9:	mov	esi, 0xff
0x4537ee:	mov	rdi, rbx
0x4537f1:	call	qword ptr [rbx + 0x110]
0x4537f7:	mov	byte ptr [rbx], 0x28
0x4537fa:	mov	byte ptr [rbx + 0x108], 0x28
0x453801:	mov	rdx, qword ptr [rbp + 0x18]
0x453805:	add	qword ptr [rbx + 0x140], 1
0x45380d:	mov	qword ptr [rbx + 0x100], 1
0x453818:	test	rdx, rdx
0x45381b:	jne	0x4536e7
0x453821:	mov	eax, 1
0x453826:	jmp	0x453707
0x45382b:	nop	dword ptr [rax + rax]
0x453830:	movzx	edx, byte ptr [rbx + 0x108]
0x453837:	mov	eax, edx
0x453839:	and	eax, 0xfffffffd
0x45383c:	cmp	al, 0x28
0x45383e:	jne	0x45374f
0x453844:	mov	rax, qword ptr [rbx + 0x100]
0x45384b:	cmp	rax, 0xff
0x453851:	jne	0x45376b
0x453857:	mov	rdx, qword ptr [rbx + 0x118]
0x45385e:	mov	byte ptr [rbx + 0xff], 0
0x453865:	mov	esi, 0xff
0x45386a:	mov	rdi, rbx
0x45386d:	call	qword ptr [rbx + 0x110]
0x453873:	add	qword ptr [rbx + 0x140], 1
0x45387b:	mov	edx, 1
0x453880:	xor	eax, eax
0x453882:	jmp	0x45376f
0x453887:	nop	word ptr [rax + rax]
0x453890:	mov	rdx, qword ptr [rbx + 0x118]
0x453897:	mov	byte ptr [rbx + 0xff], 0
0x45389e:	mov	esi, 0xff
0x4538a3:	mov	rdi, rbx
0x4538a6:	call	qword ptr [rbx + 0x110]
0x4538ac:	add	qword ptr [rbx + 0x140], 1
0x4538b4:	mov	edx, 1
0x4538b9:	xor	eax, eax
0x4538bb:	jmp	0x45370b
0x4538c0:	cmp	rax, 0xff
0x4538c6:	je	0x453948
0x4538cc:	lea	rdx, [rax + 1]
0x4538d0:	mov	qword ptr [rbx + 0x100], rdx
0x4538d7:	mov	byte ptr [rbx + rax], 0x20
0x4538db:	mov	rax, rdx
0x4538de:	mov	byte ptr [rbx + 0x108], 0x20
0x4538e5:	jmp	0x45375f
0x4538ea:	nop	word ptr [rax + rax]
0x4538f0:	mov	rdx, qword ptr [rbx + 0x118]
0x4538f7:	mov	byte ptr [rbx + 0xff], 0
0x4538fe:	mov	esi, 0xff
0x453903:	mov	rdi, rbx
0x453906:	call	qword ptr [rbx + 0x110]
0x45390c:	mov	eax, 0x2829
0x453911:	mov	byte ptr [rbx + 0x108], 0x28
0x453918:	mov	word ptr [rbx], ax
0x45391b:	mov	rdx, qword ptr [rbp + 0x18]
0x45391f:	mov	eax, 2
0x453924:	add	qword ptr [rbx + 0x140], 1
0x45392c:	mov	qword ptr [rbx + 0x100], 2
0x453937:	test	rdx, rdx
0x45393a:	jne	0x4536e7
0x453940:	jmp	0x453707
0x453945:	nop	dword ptr [rax]
0x453948:	mov	byte ptr [rbx + 0xff], 0
0x45394f:	mov	rdx, qword ptr [rbx + 0x118]
0x453956:	mov	esi, 0xff
0x45395b:	mov	rdi, rbx
0x45395e:	call	qword ptr [rbx + 0x110]
0x453964:	mov	byte ptr [rbx], 0x20
0x453967:	mov	eax, 1
0x45396c:	add	qword ptr [rbx + 0x140], 1
0x453974:	jmp	0x45376b
0x453979:	nop	dword ptr [rax]
0x453980:	push	r15
0x453982:	push	r14
0x453984:	push	r13
0x453986:	push	r12
0x453988:	push	rbp
0x453989:	push	rbx
0x45398a:	sub	rsp, 0x38
0x45398e:	mov	rax, qword ptr fs:[0x28]
0x453997:	mov	qword ptr [rsp + 0x28], rax
0x45399c:	xor	eax, eax
0x45399e:	test	rdx, rdx
0x4539a1:	je	0x453a70
0x4539a7:	mov	rbp, rdi
0x4539aa:	mov	rbx, rdx
0x4539ad:	mov	r13d, ecx
0x4539b0:	movabs	r14, 0x3400000000001f
0x4539ba:	jmp	0x453a12
0x4539bc:	nop	dword ptr [rax]
0x4539c0:	bt	r14, rcx
0x4539c4:	jb	0x453a0a
0x4539c6:	mov	rcx, qword ptr [rbx + 0x18]
0x4539ca:	mov	dword ptr [rbx + 0x10], 1
0x4539d1:	mov	r12, qword ptr [rbp + 0x120]
0x4539d8:	mov	qword ptr [rbp + 0x120], rcx
0x4539df:	cmp	eax, 0x29
0x4539e2:	je	0x453a93
0x4539e8:	cmp	eax, 0x2a
0x4539eb:	je	0x453a54
0x4539ed:	cmp	eax, 2
0x4539f0:	je	0x453aac
0x4539f6:	mov	esi, 0x11
0x4539fb:	mov	rdi, rbp
0x4539fe:	call	0x452ce0
0x453a03:	mov	qword ptr [rbp + 0x120], r12
0x453a0a:	mov	rbx, qword ptr [rbx]
0x453a0d:	test	rbx, rbx
0x453a10:	je	0x453a70
0x453a12:	mov	edx, dword ptr [rbp + 0x130]
0x453a18:	test	edx, edx
0x453a1a:	jne	0x453a70
0x453a1c:	mov	eax, dword ptr [rbx + 0x10]
0x453a1f:	test	eax, eax
0x453a21:	jne	0x453a0a
0x453a23:	mov	rdx, qword ptr [rbx + 8]
0x453a27:	mov	eax, dword ptr [rdx]
0x453a29:	test	r13d, r13d
0x453a2c:	jne	0x4539c6
0x453a2e:	lea	ecx, [rax - 0x1c]
0x453a31:	cmp	ecx, 0x35
0x453a34:	jbe	0x4539c0
0x453a36:	mov	rcx, qword ptr [rbx + 0x18]
0x453a3a:	mov	dword ptr [rbx + 0x10], 1
0x453a41:	mov	r12, qword ptr [rbp + 0x120]
0x453a48:	mov	qword ptr [rbp + 0x120], rcx
0x453a4f:	cmp	eax, 0x2a
0x453a52:	jne	0x4539ed
0x453a54:	mov	rcx, qword ptr [rbx]
0x453a57:	mov	esi, 0x11
0x453a5c:	mov	rdi, rbp
0x453a5f:	call	0x453d30
0x453a64:	mov	qword ptr [rbp + 0x120], r12
0x453a6b:	nop	dword ptr [rax + rax]
0x453a70:	mov	rax, qword ptr [rsp + 0x28]
0x453a75:	sub	rax, qword ptr fs:[0x28]
0x453a7e:	jne	0x453d25
0x453a84:	add	rsp, 0x38
0x453a88:	pop	rbx
0x453a89:	pop	rbp
0x453a8a:	pop	r12
0x453a8c:	pop	r13
0x453a8e:	pop	r14
0x453a90:	pop	r15
0x453a92:	ret	
0x453a93:	mov	rcx, qword ptr [rbx]
0x453a96:	mov	esi, 0x11
0x453a9b:	mov	rdi, rbp
0x453a9e:	call	0x453620
0x453aa3:	mov	qword ptr [rbp + 0x120], r12
0x453aaa:	jmp	0x453a70
0x453aac:	mov	r13, qword ptr [rbp + 0x128]
0x453ab3:	mov	rdx, qword ptr [rdx + 0x10]
0x453ab7:	mov	esi, 0x11
0x453abc:	mov	rdi, rbp
0x453abf:	mov	qword ptr [rbp + 0x128], 0
0x453aca:	mov	r14d, 0x3a
0x453ad0:	call	0x452c20
0x453ad5:	mov	qword ptr [rbp + 0x128], r13
0x453adc:	lea	r13, [rip + 0x79a08]
0x453ae3:	mov	rax, qword ptr [rbp + 0x100]
0x453aea:	lea	r15, [r13 + 2]
0x453aee:	jmp	0x453b18
0x453af0:	mov	rdx, rax
0x453af3:	add	rax, 1
0x453af7:	add	r13, 1
0x453afb:	mov	qword ptr [rbp + 0x100], rax
0x453b02:	mov	byte ptr [rbp + rdx], r14b
0x453b07:	mov	byte ptr [rbp + 0x108], r14b
0x453b0e:	cmp	r13, r15
0x453b11:	je	0x453b4d
0x453b13:	movzx	r14d, byte ptr [r13]
0x453b18:	cmp	rax, 0xff
0x453b1e:	jne	0x453af0
0x453b20:	mov	rdx, qword ptr [rbp + 0x118]
0x453b27:	mov	byte ptr [rbp + 0xff], 0
0x453b2e:	mov	esi, 0xff
0x453b33:	mov	rdi, rbp
0x453b36:	call	qword ptr [rbp + 0x110]
0x453b3c:	add	qword ptr [rbp + 0x140], 1
0x453b44:	mov	eax, 1
0x453b49:	xor	edx, edx
0x453b4b:	jmp	0x453af7
0x453b4d:	mov	rdx, qword ptr [rbx + 8]
0x453b51:	mov	r13, qword ptr [rdx + 0x18]
0x453b55:	mov	edx, dword ptr [r13]
0x453b59:	cmp	edx, 0x48
0x453b5c:	je	0x453b9c
0x453b5e:	movabs	rcx, 0x3400000000001f
0x453b68:	lea	eax, [rdx - 0x1c]
0x453b6b:	cmp	eax, 0x35
0x453b6e:	ja	0x453b76
0x453b70:	bt	rcx, rax
0x453b74:	jb	0x453b92
0x453b76:	mov	rdx, r13
0x453b79:	mov	esi, 0x11
0x453b7e:	mov	rdi, rbp
0x453b81:	call	0x452c20
0x453b86:	mov	qword ptr [rbp + 0x120], r12
0x453b8d:	jmp	0x453a70
0x453b92:	mov	r13, qword ptr [r13 + 0x10]
0x453b96:	mov	edx, dword ptr [r13]
0x453b9a:	jmp	0x453b68
0x453b9c:	lea	rbx, [rip + 0x7993a]
0x453ba3:	mov	r14d, 0x7b
0x453ba9:	lea	r15, [rbx + 0xc]
0x453bad:	jmp	0x453bd6
0x453baf:	mov	rdx, rax
0x453bb2:	add	rax, 1
0x453bb6:	mov	qword ptr [rbp + 0x100], rax
0x453bbd:	mov	byte ptr [rbp + rdx], r14b
0x453bc2:	mov	byte ptr [rbp + 0x108], r14b
0x453bc9:	cmp	rbx, r15
0x453bcc:	je	0x453c0b
0x453bce:	movzx	r14d, byte ptr [rbx]
0x453bd2:	add	rbx, 1
0x453bd6:	cmp	rax, 0xff
0x453bdc:	jne	0x453baf
0x453bde:	mov	rdx, qword ptr [rbp + 0x118]
0x453be5:	mov	byte ptr [rbp + 0xff], 0
0x453bec:	mov	esi, 0xff
0x453bf1:	mov	rdi, rbp
0x453bf4:	call	qword ptr [rbp + 0x110]
0x453bfa:	add	qword ptr [rbp + 0x140], 1
0x453c02:	mov	eax, 1
0x453c07:	xor	edx, edx
0x453c09:	jmp	0x453bb6
0x453c0b:	mov	eax, dword ptr [r13 + 0x18]
0x453c0f:	mov	rbx, rsp
0x453c12:	mov	edx, 0x19
0x453c17:	lea	rcx, [rip + 0x754a3]
0x453c1e:	mov	esi, 1
0x453c23:	mov	rdi, rbx
0x453c26:	lea	r8d, [rax + 1]
0x453c2a:	xor	eax, eax
0x453c2c:	call	0x403f60
0x453c31:	mov	rdi, rbx
0x453c34:	call	0x4039e0
0x453c39:	mov	r15, rax
0x453c3c:	mov	rax, qword ptr [rbp + 0x100]
0x453c43:	test	r15, r15
0x453c46:	je	0x453ca9
0x453c48:	add	r15, rbx
0x453c4b:	jmp	0x453c70
0x453c4d:	mov	rdx, rax
0x453c50:	add	rax, 1
0x453c54:	add	rbx, 1
0x453c58:	mov	qword ptr [rbp + 0x100], rax
0x453c5f:	mov	byte ptr [rbp + rdx], r14b
0x453c64:	mov	byte ptr [rbp + 0x108], r14b
0x453c6b:	cmp	rbx, r15
0x453c6e:	je	0x453ca9
0x453c70:	movzx	r14d, byte ptr [rbx]
0x453c74:	cmp	rax, 0xff
0x453c7a:	jne	0x453c4d
0x453c7c:	mov	rdx, qword ptr [rbp + 0x118]
0x453c83:	mov	byte ptr [rbp + 0xff], 0
0x453c8a:	mov	esi, 0xff
0x453c8f:	mov	rdi, rbp
0x453c92:	call	qword ptr [rbp + 0x110]
0x453c98:	add	qword ptr [rbp + 0x140], 1
0x453ca0:	mov	eax, 1
0x453ca5:	xor	edx, edx
0x453ca7:	jmp	0x453c54
0x453ca9:	lea	rbx, [rip + 0x7983a]
0x453cb0:	mov	r14d, 0x7d
0x453cb6:	lea	r15, [rbx + 3]
0x453cba:	jmp	0x453ce3
0x453cbc:	mov	rdx, rax
0x453cbf:	add	rax, 1
0x453cc3:	add	rbx, 1
0x453cc7:	mov	qword ptr [rbp + 0x100], rax
0x453cce:	mov	byte ptr [rbp + rdx], r14b
0x453cd3:	mov	byte ptr [rbp + 0x108], r14b
0x453cda:	cmp	r15, rbx
0x453cdd:	je	0x453d18
0x453cdf:	movzx	r14d, byte ptr [rbx]
0x453ce3:	cmp	rax, 0xff
0x453ce9:	jne	0x453cbc
0x453ceb:	mov	rdx, qword ptr [rbp + 0x118]
0x453cf2:	mov	byte ptr [rbp + 0xff], 0
0x453cf9:	mov	esi, 0xff
0x453cfe:	mov	rdi, rbp
0x453d01:	call	qword ptr [rbp + 0x110]
0x453d07:	add	qword ptr [rbp + 0x140], 1
0x453d0f:	mov	eax, 1
0x453d14:	xor	edx, edx
0x453d16:	jmp	0x453cc3
0x453d18:	mov	r13, qword ptr [r13 + 0x10]
0x453d1c:	mov	edx, dword ptr [r13]
0x453d20:	jmp	0x453b5e
0x453d25:	call	0x4039f0
0x453d2a:	nop	word ptr [rax + rax]
0x453d30:	push	r15
0x453d32:	mov	rax, rcx
0x453d35:	push	r14
0x453d37:	push	r13
0x453d39:	mov	r13, rdx
0x453d3c:	push	r12
0x453d3e:	mov	r12, rcx
0x453d41:	push	rbp
0x453d42:	push	rbx
0x453d43:	mov	rbx, rdi
0x453d46:	sub	rsp, 8
0x453d4a:	test	rcx, rcx
0x453d4d:	je	0x453d75
0x453d4f:	nop	
0x453d50:	mov	edx, dword ptr [rax + 0x10]
0x453d53:	test	edx, edx
0x453d55:	je	0x453e10
0x453d5b:	mov	rax, qword ptr [rax]
0x453d5e:	test	rax, rax
0x453d61:	jne	0x453d50
0x453d63:	xor	ecx, ecx
0x453d65:	mov	rdx, r12
0x453d68:	mov	esi, 0x11
0x453d6d:	mov	rdi, rbx
0x453d70:	call	0x453980
0x453d75:	mov	rax, qword ptr [rbx + 0x100]
0x453d7c:	cmp	rax, 0xff
0x453d82:	je	0x453f94
0x453d88:	lea	rdx, [rax + 1]
0x453d8c:	mov	qword ptr [rbx + 0x100], rdx
0x453d93:	mov	byte ptr [rbx + rax], 0x20
0x453d97:	mov	byte ptr [rbx + 0x108], 0x20
0x453d9e:	cmp	rdx, 0xff
0x453da5:	je	0x453e43
0x453dab:	lea	rax, [rdx + 1]
0x453daf:	mov	qword ptr [rbx + 0x100], rax
0x453db6:	mov	byte ptr [rbx + rdx], 0x5b
0x453dba:	mov	byte ptr [rbx + 0x108], 0x5b
0x453dc1:	mov	rdx, qword ptr [r13 + 0x10]
0x453dc5:	test	rdx, rdx
0x453dc8:	je	0x453dde
0x453dca:	mov	esi, 0x11
0x453dcf:	mov	rdi, rbx
0x453dd2:	call	0x452c20
0x453dd7:	mov	rax, qword ptr [rbx + 0x100]
0x453dde:	cmp	rax, 0xff
0x453de4:	je	0x453e98
0x453dea:	lea	rdx, [rax + 1]
0x453dee:	mov	qword ptr [rbx + 0x100], rdx
0x453df5:	mov	byte ptr [rbx + rax], 0x5d
0x453df9:	mov	byte ptr [rbx + 0x108], 0x5d
0x453e00:	add	rsp, 8
0x453e04:	pop	rbx
0x453e05:	pop	rbp
0x453e06:	pop	r12
0x453e08:	pop	r13
0x453e0a:	pop	r14
0x453e0c:	pop	r15
0x453e0e:	ret	
0x453e0f:	nop	
0x453e10:	mov	rax, qword ptr [rax + 8]
0x453e14:	cmp	dword ptr [rax], 0x2a
0x453e17:	jne	0x453ed0
0x453e1d:	mov	rdx, r12
0x453e20:	xor	ecx, ecx
0x453e22:	mov	esi, 0x11
0x453e27:	mov	rdi, rbx
0x453e2a:	call	0x453980
0x453e2f:	mov	rdx, qword ptr [rbx + 0x100]
0x453e36:	cmp	rdx, 0xff
0x453e3d:	jne	0x453dab
0x453e43:	mov	rdx, qword ptr [rbx + 0x118]
0x453e4a:	mov	byte ptr [rbx + 0xff], 0
0x453e51:	mov	esi, 0xff
0x453e56:	mov	rdi, rbx
0x453e59:	call	qword ptr [rbx + 0x110]
0x453e5f:	mov	byte ptr [rbx], 0x5b
0x453e62:	mov	byte ptr [rbx + 0x108], 0x5b
0x453e69:	mov	rdx, qword ptr [r13 + 0x10]
0x453e6d:	add	qword ptr [rbx + 0x140], 1
0x453e75:	mov	qword ptr [rbx + 0x100], 1
0x453e80:	test	rdx, rdx
0x453e83:	jne	0x453dca
0x453e89:	mov	eax, 1
0x453e8e:	jmp	0x453dea
0x453e93:	nop	dword ptr [rax + rax]
0x453e98:	mov	rdx, qword ptr [rbx + 0x118]
0x453e9f:	mov	byte ptr [rbx + 0xff], 0
0x453ea6:	mov	esi, 0xff
0x453eab:	mov	rdi, rbx
0x453eae:	call	qword ptr [rbx + 0x110]
0x453eb4:	add	qword ptr [rbx + 0x140], 1
0x453ebc:	mov	edx, 1
0x453ec1:	xor	eax, eax
0x453ec3:	jmp	0x453dee
0x453ec8:	nop	dword ptr [rax + rax]
0x453ed0:	lea	rbp, [rip + 0x7979d]
0x453ed7:	mov	rax, qword ptr [rbx + 0x100]
0x453ede:	mov	r14d, 0x20
0x453ee4:	lea	r15, [rbp + 2]
0x453ee8:	jmp	0x453f17
0x453eea:	nop	word ptr [rax + rax]
0x453ef0:	mov	rdx, rax
0x453ef3:	add	rax, 1
0x453ef7:	add	rbp, 1
0x453efb:	mov	qword ptr [rbx + 0x100], rax
0x453f02:	mov	byte ptr [rbx + rdx], r14b
0x453f06:	mov	byte ptr [rbx + 0x108], r14b
0x453f0d:	cmp	rbp, r15
0x453f10:	je	0x453f50
0x453f12:	movzx	r14d, byte ptr [rbp]
0x453f17:	cmp	rax, 0xff
0x453f1d:	jne	0x453ef0
0x453f1f:	mov	rdx, qword ptr [rbx + 0x118]
0x453f26:	mov	byte ptr [rbx + 0xff], 0
0x453f2d:	mov	esi, 0xff
0x453f32:	mov	rdi, rbx
0x453f35:	call	qword ptr [rbx + 0x110]
0x453f3b:	add	qword ptr [rbx + 0x140], 1
0x453f43:	mov	eax, 1
0x453f48:	xor	edx, edx
0x453f4a:	jmp	0x453ef7
0x453f4c:	nop	dword ptr [rax]
0x453f50:	mov	rdx, r12
0x453f53:	xor	ecx, ecx
0x453f55:	mov	esi, 0x11
0x453f5a:	mov	rdi, rbx
0x453f5d:	call	0x453980
0x453f62:	mov	rdx, qword ptr [rbx + 0x100]
0x453f69:	cmp	rdx, 0xff
0x453f70:	je	0x453fe9
0x453f72:	lea	rax, [rdx + 1]
0x453f76:	mov	qword ptr [rbx + 0x100], rax
0x453f7d:	mov	byte ptr [rbx + rdx], 0x29
0x453f81:	mov	byte ptr [rbx + 0x108], 0x29
0x453f88:	cmp	rax, 0xff
0x453f8e:	jne	0x453d88
0x453f94:	mov	rdx, qword ptr [rbx + 0x118]
0x453f9b:	mov	byte ptr [rbx + 0xff], 0
0x453fa2:	mov	esi, 0xff
0x453fa7:	mov	rdi, rbx
0x453faa:	call	qword ptr [rbx + 0x110]
0x453fb0:	mov	eax, 0x5b20
0x453fb5:	mov	byte ptr [rbx + 0x108], 0x5b
0x453fbc:	mov	word ptr [rbx], ax
0x453fbf:	mov	rdx, qword ptr [r13 + 0x10]
0x453fc3:	mov	eax, 2
0x453fc8:	add	qword ptr [rbx + 0x140], 1
0x453fd0:	mov	qword ptr [rbx + 0x100], 2
0x453fdb:	test	rdx, rdx
0x453fde:	jne	0x453dca
0x453fe4:	jmp	0x453dea
0x453fe9:	mov	byte ptr [rbx + 0xff], 0
0x453ff0:	mov	rdx, qword ptr [rbx + 0x118]
0x453ff7:	mov	esi, 0xff
0x453ffc:	mov	rdi, rbx
0x453fff:	call	qword ptr [rbx + 0x110]
0x454005:	mov	byte ptr [rbx], 0x29
0x454008:	mov	eax, 1
0x45400d:	add	qword ptr [rbx + 0x140], 1
0x454015:	jmp	0x453d88
0x45401a:	nop	word ptr [rax + rax]
0x454020:	push	r13
0x454022:	push	r12
0x454024:	push	rbp
0x454025:	mov	rbp, rdi
0x454028:	push	rbx
0x454029:	sub	rsp, 8
0x45402d:	cmp	dword ptr [rdx], 0x32
0x454030:	je	0x454050
0x454032:	add	rsp, 8
0x454036:	mov	esi, 0x11
0x45403b:	pop	rbx
0x45403c:	pop	rbp
0x45403d:	pop	r12
0x45403f:	pop	r13
0x454041:	jmp	0x452c20
0x454046:	nop	word ptr cs:[rax + rax]
0x454050:	mov	rax, qword ptr [rdx + 0x10]
0x454054:	movsxd	r13, dword ptr [rax + 0x10]
0x454058:	mov	rbx, qword ptr [rax + 8]
0x45405c:	test	r13, r13
0x45405f:	je	0x4540d0
0x454061:	mov	rax, qword ptr [rdi + 0x100]
0x454068:	add	r13, rbx
0x45406b:	jmp	0x454093
0x45406d:	nop	dword ptr [rax]
0x454070:	mov	rdx, rax
0x454073:	add	rax, 1
0x454077:	add	rbx, 1
0x45407b:	mov	qword ptr [rbp + 0x100], rax
0x454082:	mov	byte ptr [rbp + rdx], r12b
0x454087:	mov	byte ptr [rbp + 0x108], r12b
0x45408e:	cmp	rbx, r13
0x454091:	je	0x4540d0
0x454093:	movzx	r12d, byte ptr [rbx]
0x454097:	cmp	rax, 0xff
0x45409d:	jne	0x454070
0x45409f:	mov	rdx, qword ptr [rbp + 0x118]
0x4540a6:	mov	byte ptr [rbp + 0xff], 0
0x4540ad:	mov	esi, 0xff
0x4540b2:	mov	rdi, rbp
0x4540b5:	call	qword ptr [rbp + 0x110]
0x4540bb:	add	qword ptr [rbp + 0x140], 1
0x4540c3:	mov	eax, 1
0x4540c8:	xor	edx, edx
0x4540ca:	jmp	0x454077
0x4540cc:	nop	dword ptr [rax]
0x4540d0:	add	rsp, 8
0x4540d4:	pop	rbx
0x4540d5:	pop	rbp
0x4540d6:	pop	r12
0x4540d8:	pop	r13
0x4540da:	ret	
0x4540db:	nop	dword ptr [rax + rax]
0x4540e0:	push	rbp
0x4540e1:	mov	rbp, rsp
0x4540e4:	push	r15
0x4540e6:	mov	r15, rdi
0x4540e9:	push	r14
0x4540eb:	push	r13
0x4540ed:	push	r12
0x4540ef:	push	rbx
0x4540f0:	sub	rsp, 0x218
0x4540f7:	mov	qword ptr [rbp - 0x238], rsi
0x4540fe:	mov	qword ptr [rbp - 0x240], rdx
0x454105:	mov	rax, qword ptr fs:[0x28]
0x45410e:	mov	qword ptr [rbp - 0x38], rax
0x454112:	xor	eax, eax
0x454114:	cmp	byte ptr [rdi], 0x5f
0x454117:	je	0x4545e2
0x45411d:	mov	edx, 8
0x454122:	lea	rsi, [rip + 0x7961f]
0x454129:	mov	rdi, r15
0x45412c:	xor	ebx, ebx
0x45412e:	call	0x4038d0
0x454133:	test	eax, eax
0x454135:	je	0x454519
0x45413b:	mov	dword ptr [rbp - 0x1bc], 1
0x454145:	xor	eax, eax
0x454147:	cmp	ebx, 2
0x45414a:	setne	al
0x45414d:	add	eax, 0x45
0x454150:	mov	dword ptr [rbp - 0x224], eax
0x454156:	lea	rax, [r15 + 1]
0x45415a:	mov	qword ptr [rbp - 0x230], rax
0x454161:	nop	dword ptr [rax]
0x454168:	mov	rdi, r15
0x45416b:	call	0x4039e0
0x454170:	mov	qword ptr [rbp - 0x210], r15
0x454177:	lea	rdx, [r15 + rax]
0x45417b:	lea	ecx, [rax + rax]
0x45417e:	mov	dword ptr [rbp - 0x200], 0x11
0x454188:	mov	qword ptr [rbp - 0x208], rdx
0x45418f:	mov	qword ptr [rbp - 0x1f8], r15
0x454196:	mov	dword ptr [rbp - 0x1e4], ecx
0x45419c:	mov	dword ptr [rbp - 0x1e8], 0
0x4541a6:	mov	dword ptr [rbp - 0x1d4], eax
0x4541ac:	mov	dword ptr [rbp - 0x1d8], 0
0x4541b6:	mov	qword ptr [rbp - 0x1d0], 0
0x4541c1:	mov	qword ptr [rbp - 0x1c8], 0
0x4541cc:	mov	dword ptr [rbp - 0x1c0], 0
0x4541d6:	mov	dword ptr [rbp - 0x1b8], 0
0x4541e0:	cmp	ecx, 0x800
0x4541e6:	ja	0x4545f6
0x4541ec:	movsxd	rdx, ecx
0x4541ef:	mov	rsi, rsp
0x4541f2:	mov	r13, rsp
0x4541f5:	shl	rdx, 5
0x4541f9:	mov	rdi, rdx
0x4541fc:	and	rdi, 0xfffffffffffff000
0x454203:	sub	rsi, rdi
0x454206:	cmp	rsp, rsi
0x454209:	je	0x454220
0x45420b:	sub	rsp, 0x1000
0x454212:	or	qword ptr [rsp + 0xff8], 0
0x45421b:	cmp	rsp, rsi
0x45421e:	jne	0x45420b
0x454220:	and	edx, 0xfff
0x454226:	sub	rsp, rdx
0x454229:	test	rdx, rdx
0x45422c:	je	0x454234
0x45422e:	or	qword ptr [rsp + rdx - 8], 0
0x454234:	cdqe	
0x454236:	lea	rdi, [rsp + 7]
0x45423b:	mov	r10, rsp
0x45423e:	lea	rax, [rax*8 + 0xf]
0x454246:	mov	rsi, rdi
0x454249:	and	rdi, 0xfffffffffffffff8
0x45424d:	mov	r9, rax
0x454250:	and	rax, 0xfffffffffffff000
0x454256:	shr	rsi, 3
0x45425a:	mov	r14, rdi
0x45425d:	sub	r10, rax
0x454260:	and	r9, 0xfffffffffffffff0
0x454264:	cmp	rsp, r10
0x454267:	je	0x45427e
0x454269:	sub	rsp, 0x1000
0x454270:	or	qword ptr [rsp + 0xff8], 0
0x454279:	cmp	rsp, r10
0x45427c:	jne	0x454269
0x45427e:	and	r9d, 0xfff
0x454285:	sub	rsp, r9
0x454288:	test	r9, r9
0x45428b:	jne	0x45456a
0x454291:	mov	qword ptr [rbp - 0x1f0], rdi
0x454298:	mov	qword ptr [rbp - 0x1e0], rsp
0x45429f:	cmp	ebx, 1
0x4542a2:	je	0x4543ab
0x4542a8:	lea	eax, [rbx - 2]
0x4542ab:	cmp	eax, 1
0x4542ae:	ja	0x454390
0x4542b4:	lea	r12, [r15 + 0xb]
0x4542b8:	cmp	byte ptr [r15 + 0xb], 0x5f
0x4542bd:	mov	qword ptr [rbp - 0x1f8], r12
0x4542c4:	jne	0x4542d1
0x4542c6:	cmp	byte ptr [r15 + 0xc], 0x5a
0x4542cb:	je	0x4544ce
0x4542d1:	mov	rdi, r12
0x4542d4:	mov	dword ptr [rbp - 0x218], ecx
0x4542da:	mov	qword ptr [rbp - 0x220], rsi
0x4542e1:	call	0x4039e0
0x4542e6:	mov	ecx, dword ptr [rbp - 0x218]
0x4542ec:	test	ecx, ecx
0x4542ee:	jle	0x4544bf
0x4542f4:	mov	rsi, qword ptr [rbp - 0x220]
0x4542fb:	mov	dword ptr [rbp - 0x1e8], 1
0x454305:	mov	qword ptr [rsi*8 + 4], 0
0x454311:	test	eax, eax
0x454313:	jle	0x4544bf
0x454319:	mov	qword ptr [rsi*8 + 0x10], r12
0x454321:	lea	rdi, [rbp - 0x210]
0x454328:	mov	dword ptr [rsi*8], 0
0x454333:	mov	dword ptr [rsi*8 + 0x18], eax
0x45433a:	mov	esi, dword ptr [rbp - 0x224]
0x454340:	mov	rdx, r14
0x454343:	xor	ecx, ecx
0x454345:	call	0x44b100
0x45434a:	mov	rdi, r12
0x45434d:	mov	r14, rax
0x454350:	call	0x4039e0
0x454355:	lea	r10, [r12 + rax]
0x454359:	mov	qword ptr [rbp - 0x1f8], r10
0x454360:	movzx	eax, byte ptr [r10]
0x454364:	test	r14, r14
0x454367:	je	0x454371
0x454369:	test	al, al
0x45436b:	je	0x454621
0x454371:	cmp	dword ptr [rbp - 0x1bc], -1
0x454378:	jne	0x45461a
0x45437e:	mov	dword ptr [rbp - 0x1bc], 0
0x454388:	mov	rsp, r13
0x45438b:	jmp	0x454168
0x454390:	lea	rdi, [rbp - 0x210]
0x454397:	call	0x44bdc0
0x45439c:	mov	r14, rax
0x45439f:	mov	rax, qword ptr [rbp - 0x1f8]
0x4543a6:	movzx	eax, byte ptr [rax]
0x4543a9:	jmp	0x454364
0x4543ab:	cmp	byte ptr [r15], 0x5f
0x4543af:	jne	0x454371
0x4543b1:	mov	rax, qword ptr [rbp - 0x230]
0x4543b8:	cmp	byte ptr [r15 + 1], 0x5a
0x4543bd:	mov	qword ptr [rbp - 0x1f8], rax
0x4543c4:	jne	0x454371
0x4543c6:	lea	rax, [r15 + 2]
0x4543ca:	lea	rdi, [rbp - 0x210]
0x4543d1:	mov	qword ptr [rbp - 0x1f8], rax
0x4543d8:	movzx	eax, byte ptr [r15 + 2]
0x4543dd:	cmp	al, 0x47
0x4543df:	je	0x454597
0x4543e5:	cmp	al, 0x54
0x4543e7:	je	0x454597
0x4543ed:	mov	esi, 1
0x4543f2:	mov	qword ptr [rbp - 0x218], rdi
0x4543f9:	call	0x44ec50
0x4543fe:	mov	rdi, qword ptr [rbp - 0x218]
0x454405:	mov	r14, rax
0x454408:	mov	rsi, qword ptr [rbp - 0x1f8]
0x45440f:	movzx	eax, byte ptr [rsi]
0x454412:	test	byte ptr [rbp - 0x200], 1
0x454419:	je	0x454364
0x45441f:	nop	
0x454420:	cmp	al, 0x2e
0x454422:	jne	0x454364
0x454428:	movzx	eax, byte ptr [rsi + 1]
0x45442c:	lea	edx, [rax - 0x61]
0x45442f:	cmp	dl, 0x19
0x454432:	jbe	0x4545b2
0x454438:	cmp	al, 0x5f
0x45443a:	je	0x4545b2
0x454440:	sub	eax, 0x30
0x454443:	cmp	al, 9
0x454445:	ja	0x4547bc
0x45444b:	movzx	edx, byte ptr [rsi]
0x45444e:	mov	rax, rsi
0x454451:	cmp	dl, 0x2e
0x454454:	jne	0x45448d
0x454456:	movzx	ecx, byte ptr [rax + 1]
0x45445a:	lea	edx, [rcx - 0x30]
0x45445d:	cmp	dl, 9
0x454460:	ja	0x45448d
0x454462:	movzx	edx, byte ptr [rax + 2]
0x454466:	lea	rcx, [rax + 2]
0x45446a:	lea	eax, [rdx - 0x30]
0x45446d:	cmp	al, 9
0x45446f:	mov	rax, rcx
0x454472:	ja	0x454451
0x454474:	nop	dword ptr [rax]
0x454478:	movzx	edx, byte ptr [rax + 1]
0x45447c:	add	rax, 1
0x454480:	lea	ecx, [rdx - 0x30]
0x454483:	cmp	cl, 9
0x454486:	jbe	0x454478
0x454488:	cmp	dl, 0x2e
0x45448b:	je	0x454456
0x45448d:	mov	edx, eax
0x45448f:	mov	qword ptr [rbp - 0x1f8], rax
0x454496:	sub	edx, esi
0x454498:	call	0x44b1e0
0x45449d:	mov	rdx, r14
0x4544a0:	mov	esi, 0x4f
0x4544a5:	mov	rcx, rax
0x4544a8:	call	0x44b100
0x4544ad:	mov	rsi, qword ptr [rbp - 0x1f8]
0x4544b4:	mov	r14, rax
0x4544b7:	movzx	eax, byte ptr [rsi]
0x4544ba:	jmp	0x454420
0x4544bf:	xor	r14d, r14d
0x4544c2:	lea	rdi, [rbp - 0x210]
0x4544c9:	jmp	0x45433a
0x4544ce:	lea	rax, [r15 + 0xd]
0x4544d2:	lea	rdi, [rbp - 0x210]
0x4544d9:	mov	qword ptr [rbp - 0x1f8], rax
0x4544e0:	movzx	eax, byte ptr [r15 + 0xd]
0x4544e5:	cmp	al, 0x47
0x4544e7:	je	0x454575
0x4544ed:	cmp	al, 0x54
0x4544ef:	je	0x454575
0x4544f5:	xor	esi, esi
0x4544f7:	mov	qword ptr [rbp - 0x218], rdi
0x4544fe:	call	0x44ec50
0x454503:	mov	r12, qword ptr [rbp - 0x1f8]
0x45450a:	mov	rdi, qword ptr [rbp - 0x218]
0x454511:	mov	r14, rax
0x454514:	jmp	0x45433a
0x454519:	movzx	eax, byte ptr [r15 + 8]
0x45451e:	sub	eax, 0x24
0x454521:	cmp	al, 0x3b
0x454523:	ja	0x45413b
0x454529:	movabs	rdx, 0xf7fffffffffffbfe
0x454533:	bt	rdx, rax
0x454537:	jb	0x45413b
0x45453d:	movzx	eax, byte ptr [r15 + 9]
0x454542:	cmp	al, 0x44
0x454544:	je	0x45454e
0x454546:	cmp	al, 0x49
0x454548:	jne	0x45413b
0x45454e:	xor	ebx, ebx
0x454550:	cmp	byte ptr [r15 + 0xa], 0x5f
0x454555:	jne	0x45413b
0x45455b:	xor	ebx, ebx
0x45455d:	cmp	al, 0x49
0x45455f:	setne	bl
0x454562:	add	ebx, 2
0x454565:	jmp	0x45413b
0x45456a:	or	qword ptr [rsp + r9 - 8], 0
0x454570:	jmp	0x454291
0x454575:	mov	qword ptr [rbp - 0x218], rdi
0x45457c:	call	0x44e200
0x454581:	mov	r12, qword ptr [rbp - 0x1f8]
0x454588:	mov	rdi, qword ptr [rbp - 0x218]
0x45458f:	mov	r14, rax
0x454592:	jmp	0x45433a
0x454597:	mov	qword ptr [rbp - 0x218], rdi
0x45459e:	call	0x44e200
0x4545a3:	mov	rdi, qword ptr [rbp - 0x218]
0x4545aa:	mov	r14, rax
0x4545ad:	jmp	0x454408
0x4545b2:	movzx	edx, byte ptr [rsi + 2]
0x4545b6:	lea	rax, [rsi + 2]
0x4545ba:	lea	ecx, [rdx - 0x61]
0x4545bd:	cmp	cl, 0x19
0x4545c0:	ja	0x4545d8
0x4545c2:	nop	word ptr [rax + rax]
0x4545c8:	movzx	edx, byte ptr [rax + 1]
0x4545cc:	add	rax, 1
0x4545d0:	lea	ecx, [rdx - 0x61]
0x4545d3:	cmp	cl, 0x19
0x4545d6:	jbe	0x4545c8
0x4545d8:	cmp	dl, 0x5f
0x4545db:	je	0x4545c8
0x4545dd:	jmp	0x454451
0x4545e2:	cmp	byte ptr [rdi + 1], 0x5a
0x4545e6:	mov	ebx, 1
0x4545eb:	jne	0x45411d
0x4545f1:	jmp	0x45413b
0x4545f6:	xor	eax, eax
0x4545f8:	mov	rdx, qword ptr [rbp - 0x38]
0x4545fc:	sub	rdx, qword ptr fs:[0x28]
0x454605:	jne	0x4547cf
0x45460b:	lea	rsp, [rbp - 0x28]
0x45460f:	pop	rbx
0x454610:	pop	r12
0x454612:	pop	r13
0x454614:	pop	r14
0x454616:	pop	r15
0x454618:	pop	rbp
0x454619:	ret	
0x45461a:	xor	eax, eax
0x45461c:	mov	rsp, r13
0x45461f:	jmp	0x4545f8
0x454621:	mov	rax, qword ptr [rbp - 0x238]
0x454628:	mov	rsi, r14
0x45462b:	lea	r12, [rbp - 0x1b0]
0x454632:	mov	qword ptr [rbp - 0xb0], 0
0x45463d:	mov	rdi, r12
0x454640:	mov	byte ptr [rbp - 0xa8], 0
0x454647:	mov	qword ptr [rbp - 0xa0], rax
0x45464e:	mov	rax, qword ptr [rbp - 0x240]
0x454655:	mov	qword ptr [rbp - 0x90], 0
0x454660:	mov	qword ptr [rbp - 0x98], rax
0x454667:	mov	qword ptr [rbp - 0x88], 0
0x454672:	mov	qword ptr [rbp - 0x80], 0
0x45467a:	mov	qword ptr [rbp - 0x78], 0
0x454682:	mov	qword ptr [rbp - 0x70], 0
0x45468a:	mov	qword ptr [rbp - 0x68], 0
0x454692:	mov	qword ptr [rbp - 0x58], 0
0x45469a:	mov	qword ptr [rbp - 0x48], 0
0x4546a2:	call	0x44b440
0x4546a7:	cmp	dword ptr [rbp - 0x7c], 0x7ff
0x4546ae:	jle	0x4547b0
0x4546b4:	movsxd	rdx, dword ptr [rbp - 0x54]
0x4546b8:	mov	eax, dword ptr [rbp - 0x44]
0x4546bb:	mov	ecx, 1
0x4546c0:	mov	rbx, rsp
0x4546c3:	mov	qword ptr [rbp - 0x40], 0
0x4546cb:	imul	eax, edx
0x4546ce:	test	edx, edx
0x4546d0:	cmovle	rdx, rcx
0x4546d4:	mov	rcx, rsp
0x4546d7:	shl	rdx, 4
0x4546db:	mov	dword ptr [rbp - 0x44], eax
0x4546de:	mov	rsi, rdx
0x4546e1:	and	rsi, 0xfffffffffffff000
0x4546e8:	sub	rcx, rsi
0x4546eb:	cmp	rsp, rcx
0x4546ee:	je	0x454705
0x4546f0:	sub	rsp, 0x1000
0x4546f7:	or	qword ptr [rsp + 0xff8], 0
0x454700:	cmp	rsp, rcx
0x454703:	jne	0x4546f0
0x454705:	and	edx, 0xfff
0x45470b:	sub	rsp, rdx
0x45470e:	test	rdx, rdx
0x454711:	jne	0x4547c4
0x454717:	test	eax, eax
0x454719:	mov	ecx, 1
0x45471e:	mov	rdx, rsp
0x454721:	cmovle	eax, ecx
0x454724:	mov	rcx, rsp
0x454727:	cdqe	
0x454729:	shl	rax, 4
0x45472d:	mov	rsi, rax
0x454730:	and	rsi, 0xfffffffffffff000
0x454737:	sub	rcx, rsi
0x45473a:	cmp	rsp, rcx
0x45473d:	je	0x454754
0x45473f:	sub	rsp, 0x1000
0x454746:	or	qword ptr [rsp + 0xff8], 0
0x45474f:	cmp	rsp, rcx
0x454752:	jne	0x45473f
0x454754:	and	eax, 0xfff
0x454759:	sub	rsp, rax
0x45475c:	test	rax, rax
0x45475f:	je	0x454767
0x454761:	or	qword ptr [rsp + rax - 8], 0
0x454767:	mov	qword ptr [rbp - 0x60], rdx
0x45476b:	mov	esi, 0x11
0x454770:	mov	rdx, r14
0x454773:	mov	rdi, r12
0x454776:	mov	qword ptr [rbp - 0x50], rsp
0x45477a:	call	0x452c20
0x45477f:	mov	rsi, qword ptr [rbp - 0xb0]
0x454786:	mov	rsp, rbx
0x454789:	mov	rdx, qword ptr [rbp - 0x98]
0x454790:	mov	rdi, r12
0x454793:	mov	byte ptr [rbp + rsi - 0x1b0], 0
0x45479b:	call	qword ptr [rbp - 0xa0]
0x4547a1:	mov	edx, dword ptr [rbp - 0x80]
0x4547a4:	xor	eax, eax
0x4547a6:	test	edx, edx
0x4547a8:	sete	al
0x4547ab:	jmp	0x45461c
0x4547b0:	mov	dword ptr [rbp - 0x7c], 0
0x4547b7:	jmp	0x4546b4
0x4547bc:	movzx	eax, byte ptr [rsi]
0x4547bf:	jmp	0x454364
0x4547c4:	or	qword ptr [rsp + rdx - 8], 0
0x4547ca:	jmp	0x454717
0x4547cf:	call	0x4039f0
0x4547d4:	nop	word ptr cs:[rax + rax]
0x4547df:	nop	
0x4547e0:	push	r12
0x4547e2:	push	rbp
0x4547e3:	mov	rbp, rdx
0x4547e6:	push	rbx
0x4547e7:	mov	rbx, rdi
0x4547ea:	sub	rsp, 0x20
0x4547ee:	mov	rax, qword ptr fs:[0x28]
0x4547f7:	mov	qword ptr [rsp + 0x18], rax
0x4547fc:	mov	eax, dword ptr [rdx]
0x4547fe:	cmp	eax, 0x31
0x454801:	jbe	0x4548d0
0x454807:	mov	rax, qword ptr [rbx + 0x100]
0x45480e:	cmp	rax, 0xff
0x454814:	je	0x454950
0x45481a:	lea	rdx, [rax + 1]
0x45481e:	mov	qword ptr [rbx + 0x100], rdx
0x454825:	xor	r12d, r12d
0x454828:	mov	byte ptr [rbx + rax], 0x28
0x45482c:	mov	byte ptr [rbx + 0x108], 0x28
0x454833:	mov	eax, dword ptr [rbp + 4]
0x454836:	cmp	eax, 1
0x454839:	jg	0x4548f6
0x45483f:	mov	edx, dword ptr [rbx + 0x134]
0x454845:	cmp	edx, 0x400
0x45484b:	jg	0x4548f6
0x454851:	add	eax, 1
0x454854:	add	edx, 1
0x454857:	mov	esi, 0x11
0x45485c:	mov	rdi, rbx
0x45485f:	mov	dword ptr [rbp + 4], eax
0x454862:	mov	rax, qword ptr [rbx + 0x148]
0x454869:	mov	dword ptr [rbx + 0x134], edx
0x45486f:	mov	rdx, rbp
0x454872:	mov	qword ptr [rsp + 8], rax
0x454877:	mov	rax, rsp
0x45487a:	mov	qword ptr [rbx + 0x148], rax
0x454881:	mov	qword ptr [rsp], rbp
0x454885:	call	0x44ee00
0x45488a:	mov	rax, qword ptr [rsp + 8]
0x45488f:	mov	qword ptr [rbx + 0x148], rax
0x454896:	sub	dword ptr [rbp + 4], 1
0x45489a:	sub	dword ptr [rbx + 0x134], 1
0x4548a1:	test	r12d, r12d
0x4548a4:	jne	0x454905
0x4548a6:	mov	rax, qword ptr [rbx + 0x100]
0x4548ad:	cmp	rax, 0xff
0x4548b3:	je	0x454920
0x4548b5:	lea	rdx, [rax + 1]
0x4548b9:	mov	qword ptr [rbx + 0x100], rdx
0x4548c0:	mov	byte ptr [rbx + rax], 0x29
0x4548c4:	mov	byte ptr [rbx + 0x108], 0x29
0x4548cb:	jmp	0x454905
0x4548cd:	nop	dword ptr [rax]
0x4548d0:	movabs	rdx, 0xfffdffffffffffbc
0x4548da:	mov	r12d, 1
0x4548e0:	bt	rdx, rax
0x4548e4:	jb	0x454807
0x4548ea:	mov	eax, dword ptr [rbp + 4]
0x4548ed:	cmp	eax, 1
0x4548f0:	jle	0x45483f
0x4548f6:	mov	dword ptr [rbx + 0x130], 1
0x454900:	test	r12d, r12d
0x454903:	je	0x4548a6
0x454905:	mov	rax, qword ptr [rsp + 0x18]
0x45490a:	sub	rax, qword ptr fs:[0x28]
0x454913:	jne	0x454980
0x454915:	add	rsp, 0x20
0x454919:	pop	rbx
0x45491a:	pop	rbp
0x45491b:	pop	r12
0x45491d:	ret	
0x45491e:	nop	
0x454920:	mov	rdx, qword ptr [rbx + 0x118]
0x454927:	mov	byte ptr [rbx + 0xff], 0
0x45492e:	mov	esi, 0xff
0x454933:	mov	rdi, rbx
0x454936:	call	qword ptr [rbx + 0x110]
0x45493c:	add	qword ptr [rbx + 0x140], 1
0x454944:	mov	edx, 1
0x454949:	xor	eax, eax
0x45494b:	jmp	0x4548b9
0x454950:	mov	rdx, qword ptr [rbx + 0x118]
0x454957:	mov	byte ptr [rbx + 0xff], 0
0x45495e:	mov	esi, 0xff
0x454963:	mov	rdi, rbx
0x454966:	call	qword ptr [rbx + 0x110]
0x45496c:	add	qword ptr [rbx + 0x140], 1
0x454974:	mov	edx, 1
0x454979:	xor	eax, eax
0x45497b:	jmp	0x45481e
0x454980:	call	0x4039f0
0x454985:	nop	word ptr cs:[rax + rax]
0x454990:	mov	rax, qword ptr [rdx + 0x10]
0x454994:	mov	rax, qword ptr [rax + 0x10]
0x454998:	mov	rcx, qword ptr [rax]
0x45499b:	cmp	byte ptr [rcx], 0x66
0x45499e:	jne	0x454ac8
0x4549a4:	push	r15
0x4549a6:	push	r14
0x4549a8:	xor	r14d, r14d
0x4549ab:	push	r13
0x4549ad:	push	r12
0x4549af:	push	rbp
0x4549b0:	push	rbx
0x4549b1:	mov	rbx, rdi
0x4549b4:	sub	rsp, 8
0x4549b8:	mov	rax, qword ptr [rdx + 0x18]
0x4549bc:	mov	r15, qword ptr [rax + 0x18]
0x4549c0:	mov	r13, qword ptr [rax + 0x10]
0x4549c4:	cmp	dword ptr [r15], 0x3c
0x4549c8:	je	0x454c00
0x4549ce:	mov	r12d, dword ptr [rbx + 0x13c]
0x4549d5:	mov	dword ptr [rbx + 0x13c], 0xffffffff
0x4549df:	movzx	eax, byte ptr [rcx + 1]
0x4549e3:	cmp	al, 0x6c
0x4549e5:	je	0x454c10
0x4549eb:	jg	0x454b38
0x4549f1:	cmp	al, 0x4c
0x4549f3:	je	0x4549fd
0x4549f5:	cmp	al, 0x52
0x4549f7:	jne	0x454b19
0x4549fd:	mov	rax, qword ptr [rbx + 0x100]
0x454a04:	cmp	rax, 0xff
0x454a0a:	je	0x454d10
0x454a10:	lea	rdx, [rax + 1]
0x454a14:	mov	qword ptr [rbx + 0x100], rdx
0x454a1b:	mov	esi, 0x11
0x454a20:	mov	rdx, r15
0x454a23:	mov	rdi, rbx
0x454a26:	mov	byte ptr [rbx + rax], 0x28
0x454a2a:	lea	rbp, [rip + 0x78d21]
0x454a31:	mov	r15d, 0x2e
0x454a37:	mov	byte ptr [rbx + 0x108], 0x28
0x454a3e:	call	0x4547e0
0x454a43:	mov	rdx, r13
0x454a46:	mov	esi, 0x11
0x454a4b:	mov	rdi, rbx
0x454a4e:	call	0x454020
0x454a53:	mov	rax, qword ptr [rbx + 0x100]
0x454a5a:	lea	rcx, [rbp + 3]
0x454a5e:	jmp	0x454a87
0x454a60:	mov	rdx, rax
0x454a63:	add	rax, 1
0x454a67:	add	rbp, 1
0x454a6b:	mov	qword ptr [rbx + 0x100], rax
0x454a72:	mov	byte ptr [rbx + rdx], r15b
0x454a76:	mov	byte ptr [rbx + 0x108], r15b
0x454a7d:	cmp	rbp, rcx
0x454a80:	je	0x454ad0
0x454a82:	movzx	r15d, byte ptr [rbp]
0x454a87:	cmp	rax, 0xff
0x454a8d:	jne	0x454a60
0x454a8f:	mov	rdx, qword ptr [rbx + 0x118]
0x454a96:	mov	byte ptr [rbx + 0xff], 0
0x454a9d:	mov	esi, 0xff
0x454aa2:	mov	rdi, rbx
0x454aa5:	call	qword ptr [rbx + 0x110]
0x454aab:	add	qword ptr [rbx + 0x140], 1
0x454ab3:	xor	edx, edx
0x454ab5:	mov	eax, 1
0x454aba:	lea	rcx, [rip + 0x78c94]
0x454ac1:	jmp	0x454a67
0x454ac3:	nop	dword ptr [rax + rax]
0x454ac8:	xor	eax, eax
0x454aca:	ret	
0x454acb:	nop	dword ptr [rax + rax]
0x454ad0:	mov	rdx, r13
0x454ad3:	mov	esi, 0x11
0x454ad8:	mov	rdi, rbx
0x454adb:	call	0x454020
0x454ae0:	mov	rdx, r14
0x454ae3:	mov	esi, 0x11
0x454ae8:	mov	rdi, rbx
0x454aeb:	call	0x4547e0
0x454af0:	mov	rax, qword ptr [rbx + 0x100]
0x454af7:	cmp	rax, 0xff
0x454afd:	je	0x454cb0
0x454b03:	lea	rdx, [rax + 1]
0x454b07:	mov	qword ptr [rbx + 0x100], rdx
0x454b0e:	mov	byte ptr [rbx + rax], 0x29
0x454b12:	mov	byte ptr [rbx + 0x108], 0x29
0x454b19:	mov	dword ptr [rbx + 0x13c], r12d
0x454b20:	add	rsp, 8
0x454b24:	mov	eax, 1
0x454b29:	pop	rbx
0x454b2a:	pop	rbp
0x454b2b:	pop	r12
0x454b2d:	pop	r13
0x454b2f:	pop	r14
0x454b31:	pop	r15
0x454b33:	ret	
0x454b34:	nop	dword ptr [rax]
0x454b38:	cmp	al, 0x72
0x454b3a:	jne	0x454b19
0x454b3c:	mov	rax, qword ptr [rbx + 0x100]
0x454b43:	cmp	rax, 0xff
0x454b49:	je	0x454ce0
0x454b4f:	lea	rdx, [rax + 1]
0x454b53:	mov	qword ptr [rbx + 0x100], rdx
0x454b5a:	mov	esi, 0x11
0x454b5f:	mov	rdx, r15
0x454b62:	mov	rdi, rbx
0x454b65:	mov	byte ptr [rbx + rax], 0x28
0x454b69:	lea	rbp, [rip + 0x78be6]
0x454b70:	mov	byte ptr [rbx + 0x108], 0x28
0x454b77:	lea	r14, [rbp + 4]
0x454b7b:	call	0x4547e0
0x454b80:	mov	rdx, r13
0x454b83:	mov	esi, 0x11
0x454b88:	mov	rdi, rbx
0x454b8b:	call	0x454020
0x454b90:	mov	r13d, 0x2e
0x454b96:	mov	rax, qword ptr [rbx + 0x100]
0x454b9d:	jmp	0x454bcb
0x454b9f:	nop	
0x454ba0:	mov	rdx, rax
0x454ba3:	add	rax, 1
0x454ba7:	add	rbp, 1
0x454bab:	mov	qword ptr [rbx + 0x100], rax
0x454bb2:	mov	byte ptr [rbx + rdx], r13b
0x454bb6:	mov	byte ptr [rbx + 0x108], r13b
0x454bbd:	cmp	rbp, r14
0x454bc0:	je	0x454b19
0x454bc6:	movzx	r13d, byte ptr [rbp]
0x454bcb:	cmp	rax, 0xff
0x454bd1:	jne	0x454ba0
0x454bd3:	mov	rdx, qword ptr [rbx + 0x118]
0x454bda:	mov	byte ptr [rbx + 0xff], 0
0x454be1:	mov	esi, 0xff
0x454be6:	mov	rdi, rbx
0x454be9:	call	qword ptr [rbx + 0x110]
0x454bef:	add	qword ptr [rbx + 0x140], 1
0x454bf7:	mov	eax, 1
0x454bfc:	xor	edx, edx
0x454bfe:	jmp	0x454ba7
0x454c00:	mov	r14, qword ptr [r15 + 0x18]
0x454c04:	mov	r15, qword ptr [r15 + 0x10]
0x454c08:	jmp	0x4549ce
0x454c0d:	nop	dword ptr [rax]
0x454c10:	lea	rbp, [rip + 0x78b3a]
0x454c17:	mov	rax, qword ptr [rbx + 0x100]
0x454c1e:	mov	r14d, 0x28
0x454c24:	lea	rcx, [rbp + 4]
0x454c28:	jmp	0x454c57
0x454c2a:	nop	word ptr [rax + rax]
0x454c30:	mov	rdx, rax
0x454c33:	add	rax, 1
0x454c37:	add	rbp, 1
0x454c3b:	mov	qword ptr [rbx + 0x100], rax
0x454c42:	mov	byte ptr [rbx + rdx], r14b
0x454c46:	mov	byte ptr [rbx + 0x108], r14b
0x454c4d:	cmp	rcx, rbp
0x454c50:	je	0x454c98
0x454c52:	movzx	r14d, byte ptr [rbp]
0x454c57:	cmp	rax, 0xff
0x454c5d:	jne	0x454c30
0x454c5f:	mov	rdx, qword ptr [rbx + 0x118]
0x454c66:	mov	byte ptr [rbx + 0xff], 0
0x454c6d:	mov	esi, 0xff
0x454c72:	mov	rdi, rbx
0x454c75:	call	qword ptr [rbx + 0x110]
0x454c7b:	add	qword ptr [rbx + 0x140], 1
0x454c83:	xor	edx, edx
0x454c85:	mov	eax, 1
0x454c8a:	lea	rcx, [rip + 0x78ac4]
0x454c91:	jmp	0x454c37
0x454c93:	nop	dword ptr [rax + rax]
0x454c98:	mov	rdx, r13
0x454c9b:	mov	esi, 0x11
0x454ca0:	mov	rdi, rbx
0x454ca3:	call	0x454020
0x454ca8:	mov	rdx, r15
0x454cab:	jmp	0x454ae3
0x454cb0:	mov	rdx, qword ptr [rbx + 0x118]
0x454cb7:	mov	byte ptr [rbx + 0xff], 0
0x454cbe:	mov	esi, 0xff
0x454cc3:	mov	rdi, rbx
0x454cc6:	call	qword ptr [rbx + 0x110]
0x454ccc:	add	qword ptr [rbx + 0x140], 1
0x454cd4:	mov	edx, 1
0x454cd9:	xor	eax, eax
0x454cdb:	jmp	0x454b07
0x454ce0:	mov	rdx, qword ptr [rbx + 0x118]
0x454ce7:	mov	byte ptr [rbx + 0xff], 0
0x454cee:	mov	esi, 0xff
0x454cf3:	mov	rdi, rbx
0x454cf6:	call	qword ptr [rbx + 0x110]
0x454cfc:	add	qword ptr [rbx + 0x140], 1
0x454d04:	mov	edx, 1
0x454d09:	xor	eax, eax
0x454d0b:	jmp	0x454b53
0x454d10:	mov	rdx, qword ptr [rbx + 0x118]
0x454d17:	mov	byte ptr [rbx + 0xff], 0
0x454d1e:	mov	esi, 0xff
0x454d23:	mov	rdi, rbx
0x454d26:	call	qword ptr [rbx + 0x110]
0x454d2c:	add	qword ptr [rbx + 0x140], 1
0x454d34:	mov	edx, 1
0x454d39:	xor	eax, eax
0x454d3b:	jmp	0x454a14
0x454d40:	mov	eax, dword ptr [rdx]
0x454d42:	xor	r8d, r8d
0x454d45:	and	eax, 0xfffffffd
0x454d48:	cmp	eax, 0x38
0x454d4b:	jne	0x454e90
0x454d51:	push	r15
0x454d53:	push	r14
0x454d55:	push	r13
0x454d57:	push	r12
0x454d59:	push	rbp
0x454d5a:	push	rbx
0x454d5b:	sub	rsp, 8
0x454d5f:	mov	rax, qword ptr [rdx + 0x10]
0x454d63:	mov	rax, qword ptr [rax + 0x10]
0x454d67:	mov	r14, qword ptr [rax]
0x454d6a:	cmp	byte ptr [r14], 0x64
0x454d6e:	je	0x454d88
0x454d70:	add	rsp, 8
0x454d74:	mov	eax, r8d
0x454d77:	pop	rbx
0x454d78:	pop	rbp
0x454d79:	pop	r12
0x454d7b:	pop	r13
0x454d7d:	pop	r14
0x454d7f:	pop	r15
0x454d81:	ret	
0x454d82:	nop	word ptr [rax + rax]
0x454d88:	movzx	ecx, byte ptr [r14 + 1]
0x454d8d:	mov	rbp, rdi
0x454d90:	mov	eax, ecx
0x454d92:	and	eax, 0xffffffdf
0x454d95:	cmp	al, 0x58
0x454d97:	je	0x454d9e
0x454d99:	cmp	cl, 0x69
0x454d9c:	jne	0x454d70
0x454d9e:	mov	rax, qword ptr [rdx + 0x18]
0x454da2:	mov	r12, qword ptr [rax + 0x10]
0x454da6:	mov	r13, qword ptr [rax + 0x18]
0x454daa:	mov	rax, qword ptr [rbp + 0x100]
0x454db1:	cmp	cl, 0x69
0x454db4:	je	0x454e98
0x454dba:	cmp	rax, 0xff
0x454dc0:	je	0x454fa0
0x454dc6:	lea	rdx, [rax + 1]
0x454dca:	mov	qword ptr [rbp + 0x100], rdx
0x454dd1:	mov	byte ptr [rbp + rax], 0x5b
0x454dd6:	mov	eax, 0x5b
0x454ddb:	mov	byte ptr [rbp + 0x108], al
0x454de1:	mov	rdx, r12
0x454de4:	mov	esi, 0x11
0x454de9:	mov	rdi, rbp
0x454dec:	call	0x452c20
0x454df1:	movzx	eax, byte ptr [r14 + 1]
0x454df6:	cmp	al, 0x58
0x454df8:	je	0x454ef8
0x454dfe:	cmp	al, 0x69
0x454e00:	je	0x454e2c
0x454e02:	mov	rax, qword ptr [rbp + 0x100]
0x454e09:	cmp	rax, 0xff
0x454e0f:	je	0x455000
0x454e15:	lea	rdx, [rax + 1]
0x454e19:	mov	qword ptr [rbp + 0x100], rdx
0x454e20:	mov	byte ptr [rbp + rax], 0x5d
0x454e25:	mov	byte ptr [rbp + 0x108], 0x5d
0x454e2c:	mov	eax, dword ptr [r13]
0x454e30:	and	eax, 0xfffffffd
0x454e33:	cmp	eax, 0x38
0x454e36:	jne	0x454e48
0x454e38:	mov	rax, qword ptr [r13 + 0x10]
0x454e3c:	mov	rax, qword ptr [rax + 0x10]
0x454e40:	mov	rax, qword ptr [rax]
0x454e43:	cmp	byte ptr [rax], 0x64
0x454e46:	je	0x454ec0
0x454e48:	mov	rax, qword ptr [rbp + 0x100]
0x454e4f:	cmp	rax, 0xff
0x454e55:	je	0x454fd0
0x454e5b:	lea	rdx, [rax + 1]
0x454e5f:	mov	qword ptr [rbp + 0x100], rdx
0x454e66:	mov	esi, 0x11
0x454e6b:	mov	rdx, r13
0x454e6e:	mov	rdi, rbp
0x454e71:	mov	byte ptr [rbp + rax], 0x3d
0x454e76:	mov	byte ptr [rbp + 0x108], 0x3d
0x454e7d:	call	0x4547e0
0x454e82:	mov	r8d, 1
0x454e88:	jmp	0x454d70
0x454e8d:	nop	dword ptr [rax]
0x454e90:	mov	eax, r8d
0x454e93:	ret	
0x454e94:	nop	dword ptr [rax]
0x454e98:	cmp	rax, 0xff
0x454e9e:	je	0x455030
0x454ea4:	lea	rdx, [rax + 1]
0x454ea8:	mov	qword ptr [rbp + 0x100], rdx
0x454eaf:	mov	byte ptr [rbp + rax], 0x2e
0x454eb4:	mov	eax, 0x2e
0x454eb9:	jmp	0x454ddb
0x454ebe:	nop	
0x454ec0:	movzx	eax, byte ptr [rax + 1]
0x454ec4:	mov	edx, eax
0x454ec6:	and	edx, 0xffffffdf
0x454ec9:	cmp	dl, 0x58
0x454ecc:	je	0x454ed6
0x454ece:	cmp	al, 0x69
0x454ed0:	jne	0x454e48
0x454ed6:	mov	rdx, r13
0x454ed9:	mov	esi, 0x11
0x454ede:	mov	rdi, rbp
0x454ee1:	call	0x452c20
0x454ee6:	mov	r8d, 1
0x454eec:	jmp	0x454d70
0x454ef1:	nop	dword ptr [rax]
0x454ef8:	lea	rbx, [rip + 0x7885c]
0x454eff:	mov	rax, qword ptr [rbp + 0x100]
0x454f06:	mov	r12d, 0x20
0x454f0c:	lea	r15, [rbx + 5]
0x454f10:	jmp	0x454f3f
0x454f12:	nop	word ptr [rax + rax]
0x454f18:	mov	rdx, rax
0x454f1b:	add	rax, 1
0x454f1f:	add	rbx, 1
0x454f23:	mov	qword ptr [rbp + 0x100], rax
0x454f2a:	mov	byte ptr [rbp + rdx], r12b
0x454f2f:	mov	byte ptr [rbp + 0x108], r12b
0x454f36:	cmp	r15, rbx
0x454f39:	je	0x454f78
0x454f3b:	movzx	r12d, byte ptr [rbx]
0x454f3f:	cmp	rax, 0xff
0x454f45:	jne	0x454f18
0x454f47:	mov	rdx, qword ptr [rbp + 0x118]
0x454f4e:	mov	byte ptr [rbp + 0xff], 0
0x454f55:	mov	esi, 0xff
0x454f5a:	mov	rdi, rbp
0x454f5d:	call	qword ptr [rbp + 0x110]
0x454f63:	add	qword ptr [rbp + 0x140], 1
0x454f6b:	mov	eax, 1
0x454f70:	xor	edx, edx
0x454f72:	jmp	0x454f1f
0x454f74:	nop	dword ptr [rax]
0x454f78:	mov	rdx, qword ptr [r13 + 0x10]
0x454f7c:	mov	esi, 0x11
0x454f81:	mov	rdi, rbp
0x454f84:	call	0x452c20
0x454f89:	mov	r13, qword ptr [r13 + 0x18]
0x454f8d:	movzx	eax, byte ptr [r14 + 1]
0x454f92:	jmp	0x454dfe
0x454f97:	nop	word ptr [rax + rax]
0x454fa0:	mov	rdx, qword ptr [rbp + 0x118]
0x454fa7:	mov	byte ptr [rbp + 0xff], 0
0x454fae:	mov	esi, 0xff
0x454fb3:	mov	rdi, rbp
0x454fb6:	call	qword ptr [rbp + 0x110]
0x454fbc:	add	qword ptr [rbp + 0x140], 1
0x454fc4:	mov	edx, 1
0x454fc9:	xor	eax, eax
0x454fcb:	jmp	0x454dca
0x454fd0:	mov	rdx, qword ptr [rbp + 0x118]
0x454fd7:	mov	byte ptr [rbp + 0xff], 0
0x454fde:	mov	esi, 0xff
0x454fe3:	mov	rdi, rbp
0x454fe6:	call	qword ptr [rbp + 0x110]
0x454fec:	add	qword ptr [rbp + 0x140], 1
0x454ff4:	mov	edx, 1
0x454ff9:	xor	eax, eax
0x454ffb:	jmp	0x454e5f
0x455000:	mov	rdx, qword ptr [rbp + 0x118]
0x455007:	mov	byte ptr [rbp + 0xff], 0
0x45500e:	mov	esi, 0xff
0x455013:	mov	rdi, rbp
0x455016:	call	qword ptr [rbp + 0x110]
0x45501c:	add	qword ptr [rbp + 0x140], 1
0x455024:	mov	edx, 1
0x455029:	xor	eax, eax
0x45502b:	jmp	0x454e19
0x455030:	mov	rdx, qword ptr [rbp + 0x118]
0x455037:	mov	byte ptr [rbp + 0xff], 0
0x45503e:	mov	esi, 0xff
0x455043:	mov	rdi, rbp
0x455046:	call	qword ptr [rbp + 0x110]
0x45504c:	add	qword ptr [rbp + 0x140], 1
0x455054:	mov	edx, 1
0x455059:	xor	eax, eax
0x45505b:	jmp	0x454ea8
0x455060:	endbr64	
0x455064:	push	r14
0x455066:	push	r13
0x455068:	push	r12
0x45506a:	push	rbp
0x45506b:	push	rbx
0x45506c:	mov	rbx, rcx
0x45506f:	sub	rsp, 0x30
0x455073:	mov	rax, qword ptr fs:[0x28]
0x45507c:	mov	qword ptr [rsp + 0x28], rax
0x455081:	xor	eax, eax
0x455083:	test	rdi, rdi
0x455086:	je	0x455180
0x45508c:	mov	rbp, rsi
0x45508f:	mov	r12, rdx
0x455092:	test	rsi, rsi
0x455095:	je	0x4550a0
0x455097:	test	rdx, rdx
0x45509a:	je	0x455180
0x4550a0:	mov	rdx, rsp
0x4550a3:	lea	rsi, [rip - 0x9b3a]
0x4550aa:	mov	qword ptr [rsp], 0
0x4550b2:	mov	qword ptr [rsp + 8], 0
0x4550bb:	mov	qword ptr [rsp + 0x10], 0
0x4550c4:	mov	dword ptr [rsp + 0x18], 0
0x4550cc:	call	0x4540e0
0x4550d1:	test	eax, eax
0x4550d3:	je	0x4551b0
0x4550d9:	mov	eax, dword ptr [rsp + 0x18]
0x4550dd:	mov	r13, qword ptr [rsp]
0x4550e1:	test	eax, eax
0x4550e3:	je	0x455160
0x4550e5:	mov	r14d, 1
0x4550eb:	test	r13, r13
0x4550ee:	je	0x4551cc
0x4550f4:	test	rbp, rbp
0x4550f7:	je	0x4551a0
0x4550fd:	mov	rdi, r13
0x455100:	call	0x4039e0
0x455105:	cmp	rax, qword ptr [r12]
0x455109:	jae	0x455190
0x45510f:	mov	rsi, r13
0x455112:	lea	rdx, [rax + 1]
0x455116:	mov	rdi, rbp
0x455119:	call	0x403c60
0x45511e:	mov	rdi, r13
0x455121:	mov	r13, rbp
0x455124:	call	0x403830
0x455129:	test	rbx, rbx
0x45512c:	je	0x455134
0x45512e:	mov	dword ptr [rbx], 0
0x455134:	mov	rax, qword ptr [rsp + 0x28]
0x455139:	sub	rax, qword ptr fs:[0x28]
0x455142:	jne	0x4551d3
0x455148:	add	rsp, 0x30
0x45514c:	mov	rax, r13
0x45514f:	pop	rbx
0x455150:	pop	rbp
0x455151:	pop	r12
0x455153:	pop	r13
0x455155:	pop	r14
0x455157:	ret	
0x455158:	nop	dword ptr [rax + rax]
0x455160:	mov	r14, qword ptr [rsp + 0x10]
0x455165:	test	r13, r13
0x455168:	jne	0x4550f4
0x45516a:	test	rbx, rbx
0x45516d:	je	0x45518b
0x45516f:	cmp	r14, 1
0x455173:	jne	0x4551be
0x455175:	mov	dword ptr [rbx], 0xffffffff
0x45517b:	xor	r13d, r13d
0x45517e:	jmp	0x455134
0x455180:	test	rbx, rbx
0x455183:	je	0x45518b
0x455185:	mov	dword ptr [rbx], 0xfffffffd
0x45518b:	xor	r13d, r13d
0x45518e:	jmp	0x455134
0x455190:	mov	rdi, rbp
0x455193:	call	0x403830
0x455198:	mov	qword ptr [r12], r14
0x45519c:	jmp	0x455129
0x45519e:	nop	
0x4551a0:	test	r12, r12
0x4551a3:	jne	0x455198
0x4551a5:	jmp	0x455129
0x4551aa:	nop	word ptr [rax + rax]
0x4551b0:	mov	rdi, qword ptr [rsp]
0x4551b4:	call	0x403830
0x4551b9:	test	rbx, rbx
0x4551bc:	je	0x45518b
0x4551be:	mov	dword ptr [rbx], 0xfffffffe
0x4551c4:	xor	r13d, r13d
0x4551c7:	jmp	0x455134
0x4551cc:	test	rbx, rbx
0x4551cf:	jne	0x455175
0x4551d1:	jmp	0x45518b
0x4551d3:	call	0x4039f0
0x4551d8:	nop	dword ptr [rax + rax]
0x4551e0:	endbr64	
0x4551e4:	test	rdi, rdi
0x4551e7:	je	0x455208
0x4551e9:	test	rsi, rsi
0x4551ec:	je	0x455208
0x4551ee:	sub	rsp, 8
0x4551f2:	call	0x4540e0
0x4551f7:	cmp	eax, 1
0x4551fa:	sbb	eax, eax
0x4551fc:	add	rsp, 8
0x455200:	and	eax, 0xfffffffe
0x455203:	ret	
0x455204:	nop	dword ptr [rax]
0x455208:	mov	eax, 0xfffffffd
0x45520d:	ret	
0x45520e:	nop	
0x455210:	endbr64	
0x455214:	push	rbx
0x455215:	test	rdi, rdi
0x455218:	je	0x455235
0x45521a:	mov	rbx, rdi
0x45521d:	call	0x4445b0
0x455222:	movabs	rax, 0xb8b1aabcbcd4d500
0x45522c:	add	rax, qword ptr [rbx]
0x45522f:	cmp	rax, 1
0x455233:	jbe	0x455240
0x455235:	call	0x445370
0x45523a:	nop	word ptr [rax + rax]
0x455240:	mov	rdi, qword ptr [rbx - 0x38]
0x455244:	call	0x445310
0x455249:	nop	dword ptr [rax]
0x455250:	endbr64	
0x455254:	sub	rsp, 8
0x455258:	call	0x444850
0x45525d:	mov	rax, qword ptr [rax]
0x455260:	test	rax, rax
0x455263:	je	0x45526e
0x455265:	test	byte ptr [rax + 0x50], 1
0x455269:	jne	0x455278
0x45526b:	mov	rax, qword ptr [rax]
0x45526e:	add	rsp, 8
0x455272:	ret	
0x455273:	nop	dword ptr [rax + rax]
0x455278:	mov	rax, qword ptr [rax]
0x45527b:	sub	rax, 0x70
0x45527f:	jmp	0x45526b
0x455281:	nop	word ptr cs:[rax + rax]
0x45528b:	nop	dword ptr [rax + rax]
0x455290:	endbr64	
0x455294:	mov	byte ptr [rip + 0x91335], 8
0x45529b:	mov	byte ptr [rip + 0x9132f], 8
0x4552a2:	mov	byte ptr [rip + 0x91329], 8
0x4552a9:	mov	byte ptr [rip + 0x91323], 8
0x4552b0:	mov	byte ptr [rip + 0x9131d], 8
0x4552b7:	mov	byte ptr [rip + 0x91317], 8
0x4552be:	mov	byte ptr [rip + 0x91311], 8
0x4552c5:	mov	byte ptr [rip + 0x9130b], 8
0x4552cc:	mov	byte ptr [rip + 0x91305], 8
0x4552d3:	mov	byte ptr [rip + 0x912ff], 8
0x4552da:	mov	byte ptr [rip + 0x912f9], 8
0x4552e1:	mov	byte ptr [rip + 0x912f3], 8
0x4552e8:	mov	byte ptr [rip + 0x912ed], 8
0x4552ef:	mov	byte ptr [rip + 0x912e7], 8
0x4552f6:	mov	byte ptr [rip + 0x912e1], 8
0x4552fd:	mov	byte ptr [rip + 0x912db], 8
0x455304:	mov	byte ptr [rip + 0x912d5], 8
0x45530b:	ret	
0x45530c:	nop	dword ptr [rax]
0x455310:	sub	rsp, 0x18
0x455314:	mov	r9, rdi
0x455317:	mov	r8, rsi
0x45531a:	test	byte ptr [rsi + 0xc7], 0x40
0x455321:	je	0x45532c
0x455323:	cmp	byte ptr [rsi + 0xdf], 0
0x45532a:	jne	0x455337
0x45532c:	cmp	qword ptr [r8 + 0x38], 0
0x455331:	je	0x45542a
0x455337:	xor	eax, eax
0x455339:	lea	r10, [rip + 0x91290]
0x455340:	jmp	0x455369
0x455342:	nop	word ptr [rax + rax]
0x455348:	test	rdx, rdx
0x45534b:	je	0x45535b
0x45534d:	cmp	byte ptr [r10 + rax], 8
0x455352:	jne	0x42d029
0x455358:	mov	qword ptr [rdx], rsi
0x45535b:	add	rax, 1
0x45535f:	cmp	rax, 0x11
0x455363:	je	0x455408
0x455369:	cmp	byte ptr [r9 + rax + 0xd8], 0
0x455372:	mov	rdx, qword ptr [r9 + rax*8]
0x455376:	mov	rsi, qword ptr [r8 + rax*8]
0x45537a:	jne	0x42d029
0x455380:	cmp	byte ptr [r8 + rax + 0xd8], 0
0x455389:	jne	0x455348
0x45538b:	test	rsi, rsi
0x45538e:	setne	dil
0x455392:	test	rdx, rdx
0x455395:	setne	cl
0x455398:	test	dil, cl
0x45539b:	je	0x45535b
0x45539d:	cmp	rdx, rsi
0x4553a0:	je	0x45535b
0x4553a2:	movzx	ecx, byte ptr [r10 + rax]
0x4553a7:	cmp	ecx, 8
0x4553aa:	jae	0x4553d0
0x4553ac:	test	cl, 4
0x4553af:	jne	0x455463
0x4553b5:	test	ecx, ecx
0x4553b7:	je	0x45535b
0x4553b9:	movzx	edi, byte ptr [rsi]
0x4553bc:	mov	byte ptr [rdx], dil
0x4553bf:	test	cl, 2
0x4553c2:	je	0x45535b
0x4553c4:	movzx	esi, word ptr [rsi + rcx - 2]
0x4553c9:	mov	word ptr [rdx + rcx - 2], si
0x4553ce:	jmp	0x45535b
0x4553d0:	mov	rdi, qword ptr [rsi]
0x4553d3:	add	rax, 1
0x4553d7:	mov	qword ptr [rdx], rdi
0x4553da:	mov	rdi, qword ptr [rsi + rcx - 8]
0x4553df:	mov	qword ptr [rdx + rcx - 8], rdi
0x4553e4:	lea	rdi, [rdx + 8]
0x4553e8:	and	rdi, 0xfffffffffffffff8
0x4553ec:	sub	rdx, rdi
0x4553ef:	add	ecx, edx
0x4553f1:	sub	rsi, rdx
0x4553f4:	shr	ecx, 3
0x4553f7:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x4553fa:	cmp	rax, 0x11
0x4553fe:	jne	0x455369
0x455404:	nop	dword ptr [rax]
0x455408:	xor	eax, eax
0x45540a:	test	byte ptr [r9 + 0xc7], 0x40
0x455412:	je	0x45541e
0x455414:	cmp	byte ptr [r9 + 0xdf], 0
0x45541c:	jne	0x455425
0x45541e:	cmp	qword ptr [r9 + 0x38], 0
0x455423:	je	0x455474
0x455425:	add	rsp, 0x18
0x455429:	ret	
0x45542a:	cmp	byte ptr [rip + 0x911a6], 8
0x455431:	mov	rax, qword ptr [r8 + 0x90]
0x455438:	jne	0x42d029
0x45543e:	mov	qword ptr [rsp + 8], rax
0x455443:	test	byte ptr [r8 + 0xc7], 0x40
0x45544b:	je	0x455455
0x45544d:	mov	byte ptr [r8 + 0xdf], 0
0x455455:	lea	rax, [rsp + 8]
0x45545a:	mov	qword ptr [r8 + 0x38], rax
0x45545e:	jmp	0x455337
0x455463:	mov	edi, dword ptr [rsi]
0x455465:	mov	dword ptr [rdx], edi
0x455467:	mov	esi, dword ptr [rsi + rcx - 4]
0x45546b:	mov	dword ptr [rdx + rcx - 4], esi
0x45546f:	jmp	0x45535b
0x455474:	movzx	edx, byte ptr [rip + 0x9115c]
0x45547b:	mov	rax, qword ptr [r8 + 0x38]
0x45547f:	test	byte ptr [r8 + 0xc7], 0x40
0x455487:	je	0x455493
0x455489:	cmp	byte ptr [r8 + 0xdf], 0
0x455491:	jne	0x45549f
0x455493:	cmp	dl, 8
0x455496:	jne	0x42d029
0x45549c:	mov	rax, qword ptr [rax]
0x45549f:	sub	rax, qword ptr [r9 + 0x90]
0x4554a6:	add	rax, qword ptr [r8 + 0xd0]
0x4554ad:	jmp	0x455425
0x4554b2:	nop	word ptr cs:[rax + rax]
0x4554bd:	nop	dword ptr [rax]
0x4554c0:	push	rbx
0x4554c1:	cmp	sil, 0xff
0x4554c5:	je	0x42d02e
0x4554cb:	mov	r9d, esi
0x4554ce:	mov	r8, rdx
0x4554d1:	mov	r10, rcx
0x4554d4:	and	r9d, 0x70
0x4554d8:	cmp	r9b, 0x30
0x4554dc:	je	0x455660
0x4554e2:	ja	0x455520
0x4554e4:	cmp	r9b, 0x20
0x4554e8:	jne	0x455550
0x4554ea:	mov	rdi, qword ptr [rdi + 0xa8]
0x4554f1:	cmp	sil, 0x50
0x4554f5:	je	0x455533
0x4554f7:	mov	eax, esi
0x4554f9:	and	eax, 0xf
0x4554fc:	cmp	al, 0xc
0x4554fe:	ja	0x42d02e
0x455504:	lea	rdx, [rip + 0x785f1]
0x45550b:	movzx	eax, al
0x45550e:	movsxd	rax, dword ptr [rdx + rax*4]
0x455512:	add	rax, rdx
0x455515:	notrack jmp	rax
0x455518:	nop	dword ptr [rax + rax]
0x455520:	cmp	r9b, 0x40
0x455524:	jne	0x455570
0x455526:	mov	rdi, qword ptr [rdi + 0xb8]
0x45552d:	cmp	sil, 0x50
0x455531:	jne	0x4554f7
0x455533:	lea	rax, [r8 + 7]
0x455537:	and	rax, 0xfffffffffffffff8
0x45553b:	mov	rdx, qword ptr [rax]
0x45553e:	add	rax, 8
0x455542:	mov	qword ptr [r10], rdx
0x455545:	pop	rbx
0x455546:	ret	
0x455547:	nop	word ptr [rax + rax]
0x455550:	ja	0x42d02e
0x455556:	test	sil, 0x60
0x45555a:	jne	0x42d02e
0x455560:	xor	edi, edi
0x455562:	cmp	sil, 0x50
0x455566:	jne	0x4554f7
0x455568:	jmp	0x455533
0x45556a:	nop	word ptr [rax + rax]
0x455570:	cmp	r9b, 0x50
0x455574:	je	0x455560
0x455576:	jmp	0x42d02e
0x45557b:	nop	dword ptr [rax + rax]
0x455580:	mov	rdx, qword ptr [r8]
0x455583:	lea	rax, [r8 + 8]
0x455587:	test	rdx, rdx
0x45558a:	je	0x455542
0x45558c:	cmp	r9b, 0x10
0x455590:	cmove	rdi, r8
0x455594:	add	rdx, rdi
0x455597:	test	sil, sil
0x45559a:	jns	0x455542
0x45559c:	mov	rdx, qword ptr [rdx]
0x45559f:	mov	qword ptr [r10], rdx
0x4555a2:	pop	rbx
0x4555a3:	ret	
0x4555a4:	nop	dword ptr [rax]
0x4555a8:	movzx	edx, word ptr [r8]
0x4555ac:	lea	rax, [r8 + 2]
0x4555b0:	jmp	0x455587
0x4555b2:	nop	word ptr [rax + rax]
0x4555b8:	movsxd	rdx, dword ptr [r8]
0x4555bb:	lea	rax, [r8 + 4]
0x4555bf:	jmp	0x455587
0x4555c1:	nop	dword ptr [rax]
0x4555c8:	movsx	rdx, word ptr [r8]
0x4555cc:	lea	rax, [r8 + 2]
0x4555d0:	jmp	0x455587
0x4555d2:	nop	word ptr [rax + rax]
0x4555d8:	mov	edx, dword ptr [r8]
0x4555db:	lea	rax, [r8 + 4]
0x4555df:	jmp	0x455587
0x4555e1:	nop	dword ptr [rax]
0x4555e8:	mov	rax, r8
0x4555eb:	xor	edx, edx
0x4555ed:	xor	ecx, ecx
0x4555ef:	nop	
0x4555f0:	movzx	ebx, byte ptr [rax]
0x4555f3:	add	rax, 1
0x4555f7:	mov	r11, rbx
0x4555fa:	and	r11d, 0x7f
0x4555fe:	shl	r11, cl
0x455601:	add	ecx, 7
0x455604:	or	rdx, r11
0x455607:	test	bl, bl
0x455609:	js	0x4555f0
0x45560b:	cmp	ecx, 0x3f
0x45560e:	ja	0x455587
0x455614:	and	ebx, 0x40
0x455617:	je	0x455587
0x45561d:	mov	r11, 0xffffffffffffffff
0x455624:	shl	r11, cl
0x455627:	or	rdx, r11
0x45562a:	jmp	0x45558c
0x45562f:	nop	
0x455630:	mov	rax, r8
0x455633:	xor	edx, edx
0x455635:	xor	ecx, ecx
0x455637:	nop	word ptr [rax + rax]
0x455640:	movzx	ebx, byte ptr [rax]
0x455643:	add	rax, 1
0x455647:	mov	r11, rbx
0x45564a:	and	r11d, 0x7f
0x45564e:	shl	r11, cl
0x455651:	add	ecx, 7
0x455654:	or	rdx, r11
0x455657:	test	bl, bl
0x455659:	js	0x455640
0x45565b:	jmp	0x455587
0x455660:	mov	rdi, qword ptr [rdi + 0xb0]
0x455667:	jmp	0x455562
0x45566c:	nop	dword ptr [rax]
0x455670:	push	r15
0x455672:	push	r14
0x455674:	push	r13
0x455676:	push	r12
0x455678:	push	rbp
0x455679:	push	rbx
0x45567a:	sub	rsp, 0x218
0x455681:	mov	qword ptr [rsp + 0x10], rcx
0x455686:	cmp	rdi, rsi
0x455689:	jae	0x455cc0
0x45568f:	mov	r12, rsi
0x455692:	mov	r15, rdx
0x455695:	mov	ebx, 1
0x45569a:	lea	r14, [rip + 0x785d3]
0x4556a1:	lea	rbp, [rip + 0x784dc]
0x4556a8:	lea	r13, [rip + 0x90f21]
0x4556af:	nop	
0x4556b0:	movzx	edx, byte ptr [rdi]
0x4556b3:	lea	rsi, [rdi + 1]
0x4556b7:	mov	ecx, edx
0x4556b9:	cmp	dl, 0x17
0x4556bc:	ja	0x455748
0x4556c2:	cmp	dl, 2
0x4556c5:	jbe	0x4558c0
0x4556cb:	lea	eax, [rdx - 3]
0x4556ce:	cmp	al, 0x14
0x4556d0:	ja	0x42d033
0x4556d6:	lea	rdx, [rip + 0x78453]
0x4556dd:	movzx	eax, al
0x4556e0:	movsxd	rax, dword ptr [rdx + rax*4]
0x4556e4:	add	rax, rdx
0x4556e7:	notrack jmp	rax
0x4556ea:	nop	word ptr [rax + rax]
0x4556f0:	mov	r8, qword ptr [rdi + 1]
0x4556f4:	lea	rsi, [rdi + 9]
0x4556f8:	nop	dword ptr [rax + rax]
0x455700:	cmp	ebx, 0x3f
0x455703:	jg	0x42d038
0x455709:	movsxd	rax, ebx
0x45570c:	mov	rdi, rsi
0x45570f:	add	ebx, 1
0x455712:	mov	qword ptr [rsp + rax*8 + 0x10], r8
0x455717:	cmp	r12, rdi
0x45571a:	ja	0x4556b0
0x45571c:	test	ebx, ebx
0x45571e:	je	0x42d038
0x455724:	sub	ebx, 1
0x455727:	movsxd	rbx, ebx
0x45572a:	mov	rax, qword ptr [rsp + rbx*8 + 0x10]
0x45572f:	add	rsp, 0x218
0x455736:	pop	rbx
0x455737:	pop	rbp
0x455738:	pop	r12
0x45573a:	pop	r13
0x45573c:	pop	r14
0x45573e:	pop	r15
0x455740:	ret	
0x455741:	nop	dword ptr [rax]
0x455748:	cmp	dl, 0x6f
0x45574b:	ja	0x455770
0x45574d:	cmp	dl, 0x4f
0x455750:	ja	0x455c30
0x455756:	cmp	dl, 0x28
0x455759:	ja	0x4558a0
0x45575f:	cmp	dl, 0x18
0x455762:	jne	0x455848
0x455768:	jmp	0x42d033
0x45576d:	nop	dword ptr [rax]
0x455770:	cmp	dl, 0x96
0x455773:	ja	0x455818
0x455779:	lea	eax, [rcx - 0x70]
0x45577c:	cmp	al, 0x26
0x45577e:	ja	0x42d033
0x455784:	movzx	eax, al
0x455787:	movsxd	rax, dword ptr [rbp + rax*4]
0x45578c:	add	rax, rbp
0x45578f:	notrack jmp	rax
0x455792:	nop	word ptr [rax + rax]
0x455798:	xor	eax, eax
0x45579a:	xor	ecx, ecx
0x45579c:	movzx	r8d, byte ptr [rsi]
0x4557a0:	add	rsi, 1
0x4557a4:	mov	rdi, r8
0x4557a7:	and	edi, 0x7f
0x4557aa:	shl	rdi, cl
0x4557ad:	add	ecx, 7
0x4557b0:	or	rax, rdi
0x4557b3:	test	r8b, r8b
0x4557b6:	js	0x45579c
0x4557b8:	cmp	ecx, 0x3f
0x4557bb:	ja	0x4557d0
0x4557bd:	and	r8d, 0x40
0x4557c1:	je	0x4557d0
0x4557c3:	mov	rdi, 0xffffffffffffffff
0x4557ca:	shl	rdi, cl
0x4557cd:	or	rax, rdi
0x4557d0:	sub	edx, 0x70
0x4557d3:	cmp	edx, 0x11
0x4557d6:	jg	0x42d038
0x4557dc:	movsxd	rdx, edx
0x4557df:	movzx	ecx, byte ptr [r13 + rdx]
0x4557e5:	mov	r8, qword ptr [r15 + rdx*8]
0x4557e9:	test	byte ptr [r15 + 0xc7], 0x40
0x4557f1:	je	0x4557fe
0x4557f3:	cmp	byte ptr [r15 + rdx + 0xd8], 0
0x4557fc:	jne	0x45580a
0x4557fe:	cmp	cl, 8
0x455801:	jne	0x42d038
0x455807:	mov	r8, qword ptr [r8]
0x45580a:	add	r8, rax
0x45580d:	jmp	0x455700
0x455812:	nop	word ptr [rax + rax]
0x455818:	cmp	dl, 0xf1
0x45581b:	jne	0x455e31
0x455821:	movzx	esi, byte ptr [rdi + 1]
0x455825:	lea	rdx, [rdi + 2]
0x455829:	lea	rcx, [rsp + 8]
0x45582e:	mov	rdi, r15
0x455831:	call	0x4554c0
0x455836:	mov	r8, qword ptr [rsp + 8]
0x45583b:	mov	rsi, rax
0x45583e:	jmp	0x455700
0x455843:	nop	dword ptr [rax + rax]
0x455848:	movabs	r8, 0xf67c000000
0x455852:	mov	eax, 1
0x455857:	shl	rax, cl
0x45585a:	test	rax, r8
0x45585d:	je	0x4558c8
0x45585f:	cmp	ebx, 1
0x455862:	jle	0x42d038
0x455868:	lea	edi, [rbx - 2]
0x45586b:	sub	ebx, 1
0x45586e:	lea	edx, [rcx - 0x1a]
0x455871:	movsxd	rax, edi
0x455874:	movsxd	rbx, ebx
0x455877:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x45587c:	mov	r9, qword ptr [rsp + rbx*8 + 0x10]
0x455881:	cmp	dl, 0x14
0x455884:	ja	0x42d033
0x45588a:	lea	rcx, [rip + 0x7838f]
0x455891:	movzx	edx, dl
0x455894:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x455898:	add	rdx, rcx
0x45589b:	notrack jmp	rdx
0x45589e:	nop	
0x4558a0:	cmp	dl, 0x2f
0x4558a3:	je	0x455c70
0x4558a9:	jbe	0x4558b4
0x4558ab:	lea	r8d, [rdx - 0x30]
0x4558af:	jmp	0x455700
0x4558b4:	jne	0x45585f
0x4558b6:	jmp	0x42d033
0x4558bb:	nop	dword ptr [rax + rax]
0x4558c0:	jmp	0x42d033
0x4558c5:	nop	dword ptr [rax]
0x4558c8:	movabs	r8, 0x982000000
0x4558d2:	test	rax, r8
0x4558d5:	je	0x455918
0x4558d7:	test	ebx, ebx
0x4558d9:	je	0x42d038
0x4558df:	sub	ebx, 1
0x4558e2:	movsxd	rax, ebx
0x4558e5:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x4558ea:	cmp	cl, 0x23
0x4558ed:	ja	0x455c7f
0x4558f3:	cmp	cl, 5
0x4558f6:	jbe	0x42d033
0x4558fc:	sub	ecx, 6
0x4558ff:	cmp	cl, 0x1d
0x455902:	ja	0x42d033
0x455908:	movzx	ecx, cl
0x45590b:	movsxd	rax, dword ptr [r14 + rcx*4]
0x45590f:	add	rax, r14
0x455912:	notrack jmp	rax
0x455915:	nop	dword ptr [rax]
0x455918:	cmp	edx, 0x28
0x45591b:	jne	0x455e3b
0x455921:	test	ebx, ebx
0x455923:	je	0x42d038
0x455929:	sub	ebx, 1
0x45592c:	lea	rdx, [rdi + 3]
0x455930:	movsxd	rax, ebx
0x455933:	cmp	qword ptr [rsp + rax*8 + 0x10], 0
0x455939:	je	0x455cb0
0x45593f:	movsx	rdi, word ptr [rdi + 1]
0x455944:	add	rdi, rdx
0x455947:	jmp	0x455717
0x45594c:	nop	dword ptr [rax]
0x455950:	xor	r8d, r8d
0x455953:	xor	ecx, ecx
0x455955:	nop	dword ptr [rax]
0x455958:	movzx	edx, byte ptr [rsi]
0x45595b:	add	rsi, 1
0x45595f:	mov	rax, rdx
0x455962:	and	eax, 0x7f
0x455965:	shl	rax, cl
0x455968:	add	ecx, 7
0x45596b:	or	r8, rax
0x45596e:	test	dl, dl
0x455970:	js	0x455958
0x455972:	cmp	ecx, 0x3f
0x455975:	ja	0x455700
0x45597b:	and	edx, 0x40
0x45597e:	je	0x455700
0x455984:	mov	rax, 0xffffffffffffffff
0x45598b:	shl	rax, cl
0x45598e:	or	r8, rax
0x455991:	jmp	0x455700
0x455996:	nop	word ptr cs:[rax + rax]
0x4559a0:	xor	r8d, r8d
0x4559a3:	xor	ecx, ecx
0x4559a5:	nop	dword ptr [rax]
0x4559a8:	movzx	edx, byte ptr [rsi]
0x4559ab:	add	rsi, 1
0x4559af:	mov	rax, rdx
0x4559b2:	and	eax, 0x7f
0x4559b5:	shl	rax, cl
0x4559b8:	add	ecx, 7
0x4559bb:	or	r8, rax
0x4559be:	test	dl, dl
0x4559c0:	js	0x4559a8
0x4559c2:	jmp	0x455700
0x4559c7:	nop	word ptr [rax + rax]
0x4559d0:	cmp	ebx, 2
0x4559d3:	jle	0x42d038
0x4559d9:	lea	ecx, [rbx - 1]
0x4559dc:	lea	edx, [rbx - 2]
0x4559df:	lea	eax, [rbx - 3]
0x4559e2:	movsxd	rcx, ecx
0x4559e5:	movsxd	rdx, edx
0x4559e8:	cdqe	
0x4559ea:	mov	rdi, qword ptr [rsp + rcx*8 + 0x10]
0x4559ef:	mov	r9, qword ptr [rsp + rdx*8 + 0x10]
0x4559f4:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x4559f9:	mov	qword ptr [rsp + rcx*8 + 0x10], r9
0x4559fe:	mov	qword ptr [rsp + rdx*8 + 0x10], r8
0x455a03:	mov	qword ptr [rsp + rax*8 + 0x10], rdi
0x455a08:	mov	rdi, rsi
0x455a0b:	jmp	0x455717
0x455a10:	test	ebx, ebx
0x455a12:	je	0x42d038
0x455a18:	lea	eax, [rbx - 1]
0x455a1b:	cdqe	
0x455a1d:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x455a22:	jmp	0x455700
0x455a27:	nop	word ptr [rax + rax]
0x455a30:	cmp	ebx, 1
0x455a33:	jle	0x42d038
0x455a39:	lea	eax, [rbx - 2]
0x455a3c:	cdqe	
0x455a3e:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x455a43:	jmp	0x455700
0x455a48:	nop	dword ptr [rax + rax]
0x455a50:	test	ebx, ebx
0x455a52:	je	0x42d038
0x455a58:	sub	ebx, 1
0x455a5b:	mov	rdi, rsi
0x455a5e:	jmp	0x455717
0x455a63:	nop	dword ptr [rax + rax]
0x455a68:	lea	eax, [rbx - 1]
0x455a6b:	movzx	edx, byte ptr [rdi + 1]
0x455a6f:	lea	rsi, [rdi + 2]
0x455a73:	cdqe	
0x455a75:	cmp	rdx, rax
0x455a78:	jge	0x42d038
0x455a7e:	sub	rax, rdx
0x455a81:	mov	r8, qword ptr [rsp + rax*8 + 0x10]
0x455a86:	jmp	0x455700
0x455a8b:	nop	dword ptr [rax + rax]
0x455a90:	movsx	r8, word ptr [rdi + 1]
0x455a95:	lea	rsi, [rdi + 3]
0x455a99:	jmp	0x455700
0x455a9e:	nop	
0x455aa0:	movzx	r8d, word ptr [rdi + 1]
0x455aa5:	lea	rsi, [rdi + 3]
0x455aa9:	jmp	0x455700
0x455aae:	nop	
0x455ab0:	movsx	r8, byte ptr [rdi + 1]
0x455ab5:	lea	rsi, [rdi + 2]
0x455ab9:	jmp	0x455700
0x455abe:	nop	
0x455ac0:	movzx	r8d, byte ptr [rdi + 1]
0x455ac5:	lea	rsi, [rdi + 2]
0x455ac9:	jmp	0x455700
0x455ace:	nop	
0x455ad0:	movsxd	r8, dword ptr [rdi + 1]
0x455ad4:	lea	rsi, [rdi + 5]
0x455ad8:	jmp	0x455700
0x455add:	nop	dword ptr [rax]
0x455ae0:	mov	r8d, dword ptr [rdi + 1]
0x455ae4:	lea	rsi, [rdi + 5]
0x455ae8:	jmp	0x455700
0x455aed:	nop	dword ptr [rax]
0x455af0:	cmp	ebx, 1
0x455af3:	jle	0x42d038
0x455af9:	lea	edx, [rbx - 1]
0x455afc:	lea	eax, [rbx - 2]
0x455aff:	movsxd	rdx, edx
0x455b02:	cdqe	
0x455b04:	mov	rdi, qword ptr [rsp + rax*8 + 0x10]
0x455b09:	mov	rcx, qword ptr [rsp + rdx*8 + 0x10]
0x455b0e:	mov	qword ptr [rsp + rdx*8 + 0x10], rdi
0x455b13:	mov	rdi, rsi
0x455b16:	mov	qword ptr [rsp + rax*8 + 0x10], rcx
0x455b1b:	jmp	0x455717
0x455b20:	xor	edi, edi
0x455b22:	xor	ecx, ecx
0x455b24:	nop	dword ptr [rax]
0x455b28:	movzx	edx, byte ptr [rsi]
0x455b2b:	add	rsi, 1
0x455b2f:	mov	rax, rdx
0x455b32:	and	eax, 0x7f
0x455b35:	shl	rax, cl
0x455b38:	add	ecx, 7
0x455b3b:	or	rdi, rax
0x455b3e:	test	dl, dl
0x455b40:	js	0x455b28
0x455b42:	cmp	edi, 0x11
0x455b45:	jg	0x42d038
0x455b4b:	movsxd	rdi, edi
0x455b4e:	movzx	eax, byte ptr [r13 + rdi]
0x455b54:	mov	r8, qword ptr [r15 + rdi*8]
0x455b58:	test	byte ptr [r15 + 0xc7], 0x40
0x455b60:	je	0x455b71
0x455b62:	cmp	byte ptr [r15 + rdi + 0xd8], 0
0x455b6b:	jne	0x455700
0x455b71:	cmp	al, 8
0x455b73:	jne	0x42d038
0x455b79:	mov	r8, qword ptr [r8]
0x455b7c:	jmp	0x455700
0x455b81:	nop	dword ptr [rax]
0x455b88:	mov	rdi, rsi
0x455b8b:	jmp	0x455717
0x455b90:	xor	edx, edx
0x455b92:	xor	ecx, ecx
0x455b94:	nop	dword ptr [rax]
0x455b98:	movzx	edi, byte ptr [rsi]
0x455b9b:	add	rsi, 1
0x455b9f:	mov	rax, rdi
0x455ba2:	and	eax, 0x7f
0x455ba5:	shl	rax, cl
0x455ba8:	add	ecx, 7
0x455bab:	or	rdx, rax
0x455bae:	test	dil, dil
0x455bb1:	js	0x455b98
0x455bb3:	xor	r9d, r9d
0x455bb6:	xor	ecx, ecx
0x455bb8:	nop	dword ptr [rax + rax]
0x455bc0:	movzx	edi, byte ptr [rsi]
0x455bc3:	add	rsi, 1
0x455bc7:	mov	rax, rdi
0x455bca:	and	eax, 0x7f
0x455bcd:	shl	rax, cl
0x455bd0:	add	ecx, 7
0x455bd3:	or	r9, rax
0x455bd6:	test	dil, dil
0x455bd9:	js	0x455bc0
0x455bdb:	cmp	ecx, 0x3f
0x455bde:	ja	0x455bf2
0x455be0:	and	edi, 0x40
0x455be3:	je	0x455bf2
0x455be5:	mov	rax, 0xffffffffffffffff
0x455bec:	shl	rax, cl
0x455bef:	or	r9, rax
0x455bf2:	cmp	edx, 0x11
0x455bf5:	jg	0x42d038
0x455bfb:	movsxd	rdx, edx
0x455bfe:	movzx	eax, byte ptr [r13 + rdx]
0x455c04:	mov	r8, qword ptr [r15 + rdx*8]
0x455c08:	test	byte ptr [r15 + 0xc7], 0x40
0x455c10:	je	0x455c1d
0x455c12:	cmp	byte ptr [r15 + rdx + 0xd8], 0
0x455c1b:	jne	0x455c28
0x455c1d:	cmp	al, 8
0x455c1f:	jne	0x42d038
0x455c25:	mov	r8, qword ptr [r8]
0x455c28:	add	r8, r9
0x455c2b:	jmp	0x455700
0x455c30:	sub	edx, 0x50
0x455c33:	cmp	edx, 0x11
0x455c36:	jg	0x42d038
0x455c3c:	movsxd	rdx, edx
0x455c3f:	movzx	eax, byte ptr [r13 + rdx]
0x455c45:	mov	r8, qword ptr [r15 + rdx*8]
0x455c49:	test	byte ptr [r15 + 0xc7], 0x40
0x455c51:	je	0x455b71
0x455c57:	cmp	byte ptr [r15 + rdx + 0xd8], 0
0x455c60:	jne	0x455700
0x455c66:	jmp	0x455b71
0x455c6b:	nop	dword ptr [rax + rax]
0x455c70:	movsx	rax, word ptr [rdi + 1]
0x455c75:	lea	rdi, [rdi + rax + 3]
0x455c7a:	jmp	0x455717
0x455c7f:	cmp	cl, 0x94
0x455c82:	jne	0x455e36
0x455c88:	movzx	eax, byte ptr [rdi + 1]
0x455c8c:	lea	rsi, [rdi + 2]
0x455c90:	cmp	al, 4
0x455c92:	je	0x455dbc
0x455c98:	ja	0x455e1f
0x455c9e:	cmp	al, 1
0x455ca0:	jne	0x455e12
0x455ca6:	movzx	r8d, byte ptr [r8]
0x455caa:	jmp	0x455700
0x455caf:	nop	
0x455cb0:	mov	rdi, rdx
0x455cb3:	jmp	0x455717
0x455cb8:	nop	dword ptr [rax + rax]
0x455cc0:	mov	rax, rcx
0x455cc3:	jmp	0x45572f
0x455cc8:	mov	rax, r8
0x455ccb:	xor	edx, edx
0x455ccd:	mov	ebx, edi
0x455ccf:	div	r9
0x455cd2:	mov	r8, rdx
0x455cd5:	jmp	0x455700
0x455cda:	imul	r8, r9
0x455cde:	mov	ebx, edi
0x455ce0:	jmp	0x455700
0x455ce5:	or	r8, r9
0x455ce8:	mov	ebx, edi
0x455cea:	jmp	0x455700
0x455cef:	add	r8, r9
0x455cf2:	mov	ebx, edi
0x455cf4:	jmp	0x455700
0x455cf9:	mov	ecx, r9d
0x455cfc:	mov	ebx, edi
0x455cfe:	shl	r8, cl
0x455d01:	jmp	0x455700
0x455d06:	mov	ecx, r9d
0x455d09:	mov	ebx, edi
0x455d0b:	shr	r8, cl
0x455d0e:	jmp	0x455700
0x455d13:	mov	ecx, r9d
0x455d16:	mov	ebx, edi
0x455d18:	sar	r8, cl
0x455d1b:	jmp	0x455700
0x455d20:	xor	r8, r9
0x455d23:	mov	ebx, edi
0x455d25:	jmp	0x455700
0x455d2a:	cmp	r8, r9
0x455d2d:	mov	ebx, edi
0x455d2f:	sete	r8b
0x455d33:	movzx	r8d, r8b
0x455d37:	jmp	0x455700
0x455d3c:	cmp	r8, r9
0x455d3f:	mov	ebx, edi
0x455d41:	setge	r8b
0x455d45:	movzx	r8d, r8b
0x455d49:	jmp	0x455700
0x455d4e:	cmp	r8, r9
0x455d51:	mov	ebx, edi
0x455d53:	setg	r8b
0x455d57:	movzx	r8d, r8b
0x455d5b:	jmp	0x455700
0x455d60:	cmp	r8, r9
0x455d63:	mov	ebx, edi
0x455d65:	setle	r8b
0x455d69:	movzx	r8d, r8b
0x455d6d:	jmp	0x455700
0x455d72:	mov	rax, r8
0x455d75:	mov	ebx, edi
0x455d77:	cqo	
0x455d79:	idiv	r9
0x455d7c:	mov	r8, rax
0x455d7f:	jmp	0x455700
0x455d84:	sub	r8, r9
0x455d87:	mov	ebx, edi
0x455d89:	jmp	0x455700
0x455d8e:	and	r8, r9
0x455d91:	mov	ebx, edi
0x455d93:	jmp	0x455700
0x455d98:	cmp	r8, r9
0x455d9b:	mov	ebx, edi
0x455d9d:	setl	r8b
0x455da1:	movzx	r8d, r8b
0x455da5:	jmp	0x455700
0x455daa:	cmp	r8, r9
0x455dad:	mov	ebx, edi
0x455daf:	setne	r8b
0x455db3:	movzx	r8d, r8b
0x455db7:	jmp	0x455700
0x455dbc:	mov	r8d, dword ptr [r8]
0x455dbf:	jmp	0x455700
0x455dc4:	not	r8
0x455dc7:	jmp	0x455700
0x455dcc:	neg	r8
0x455dcf:	jmp	0x455700
0x455dd4:	mov	rax, r8
0x455dd7:	neg	rax
0x455dda:	cmovns	r8, rax
0x455dde:	jmp	0x455700
0x455de3:	xor	edi, edi
0x455de5:	xor	ecx, ecx
0x455de7:	nop	word ptr [rax + rax]
0x455df0:	movzx	edx, byte ptr [rsi]
0x455df3:	add	rsi, 1
0x455df7:	mov	rax, rdx
0x455dfa:	and	eax, 0x7f
0x455dfd:	shl	rax, cl
0x455e00:	add	ecx, 7
0x455e03:	or	rdi, rax
0x455e06:	test	dl, dl
0x455e08:	js	0x455df0
0x455e0a:	add	r8, rdi
0x455e0d:	jmp	0x455700
0x455e12:	cmp	al, 2
0x455e14:	jne	0x455e2c
0x455e16:	movzx	r8d, word ptr [r8]
0x455e1a:	jmp	0x455700
0x455e1f:	cmp	al, 8
0x455e21:	je	0x455b79
0x455e27:	jmp	0x42d033
0x455e2c:	jmp	0x42d033
0x455e31:	jmp	0x42d033
0x455e36:	jmp	0x42d033
0x455e3b:	jmp	0x42d033
0x455e40:	push	r15
0x455e42:	mov	r15, rdi
0x455e45:	push	r14
0x455e47:	push	r13
0x455e49:	push	r12
0x455e4b:	push	rbp
0x455e4c:	push	rbx
0x455e4d:	sub	rsp, 0x138
0x455e54:	movdqu	xmm0, xmmword ptr [rdi]
0x455e58:	movdqu	xmm1, xmmword ptr [rdi + 0x10]
0x455e5d:	movdqu	xmm2, xmmword ptr [rdi + 0x20]
0x455e62:	movdqu	xmm3, xmmword ptr [rdi + 0x30]
0x455e67:	mov	qword ptr [rsp + 0x10], rsi
0x455e6c:	movdqu	xmm4, xmmword ptr [rdi + 0x40]
0x455e71:	movdqu	xmm5, xmmword ptr [rdi + 0x50]
0x455e76:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x455e7b:	movdqu	xmm6, xmmword ptr [rdi + 0x60]
0x455e80:	movdqu	xmm7, xmmword ptr [rdi + 0x70]
0x455e85:	movaps	xmmword ptr [rsp + 0x50], xmm1
0x455e8a:	movdqu	xmm0, xmmword ptr [rdi + 0x80]
0x455e92:	movdqu	xmm1, xmmword ptr [rdi + 0x90]
0x455e9a:	movaps	xmmword ptr [rsp + 0x60], xmm2
0x455e9f:	movaps	xmmword ptr [rsp + 0x70], xmm3
0x455ea4:	movdqu	xmm2, xmmword ptr [rdi + 0xa0]
0x455eac:	movdqu	xmm3, xmmword ptr [rdi + 0xb0]
0x455eb4:	movaps	xmmword ptr [rsp + 0x80], xmm4
0x455ebc:	movaps	xmmword ptr [rsp + 0x90], xmm5
0x455ec4:	movaps	xmmword ptr [rsp + 0xa0], xmm6
0x455ecc:	movaps	xmmword ptr [rsp + 0xb0], xmm7
0x455ed4:	movaps	xmmword ptr [rsp + 0xc0], xmm0
0x455edc:	movaps	xmmword ptr [rsp + 0xd0], xmm1
0x455ee4:	movaps	xmmword ptr [rsp + 0xe0], xmm2
0x455eec:	movaps	xmmword ptr [rsp + 0xf0], xmm3
0x455ef4:	mov	rax, qword ptr [rdi + 0xc0]
0x455efb:	movdqu	xmm4, xmmword ptr [rdi + 0xc0]
0x455f03:	movdqu	xmm5, xmmword ptr [rdi + 0xd0]
0x455f0b:	movdqu	xmm6, xmmword ptr [rdi + 0xe0]
0x455f13:	bt	rax, 0x3e
0x455f18:	movaps	xmmword ptr [rsp + 0x100], xmm4
0x455f20:	movaps	xmmword ptr [rsp + 0x110], xmm5
0x455f28:	movaps	xmmword ptr [rsp + 0x120], xmm6
0x455f30:	jae	0x455f3c
0x455f32:	cmp	byte ptr [rsp + 0x11f], 0
0x455f3a:	jne	0x455f48
0x455f3c:	cmp	qword ptr [rsp + 0x78], 0
0x455f42:	je	0x45623e
0x455f48:	mov	rax, qword ptr [r15 + 0xc0]
0x455f4f:	movabs	r14, 0x4000000000000000
0x455f59:	and	r14, rax
0x455f5c:	mov	qword ptr [rsp + 0x18], rax
0x455f61:	mov	qword ptr [rsp], r14
0x455f65:	je	0x455f6f
0x455f67:	mov	byte ptr [r15 + 0xdf], 0
0x455f6f:	mov	rax, qword ptr [rsp + 0x10]
0x455f74:	mov	qword ptr [r15 + 0x38], 0
0x455f7c:	mov	eax, dword ptr [rax + 0x140]
0x455f82:	cmp	eax, 1
0x455f85:	jne	0x455fe8
0x455f87:	mov	rax, qword ptr [rsp + 0x10]
0x455f8c:	mov	rax, qword ptr [rax + 0x130]
0x455f93:	cmp	eax, 0x11
0x455f96:	jg	0x42d03d
0x455f9c:	lea	rbx, [rip + 0x9062d]
0x455fa3:	cdqe	
0x455fa5:	movzx	edx, byte ptr [rbx + rax]
0x455fa9:	mov	r11, qword ptr [rsp + rax*8 + 0x40]
0x455fae:	mov	qword ptr [rsp + 0x20], rbx
0x455fb3:	test	byte ptr [rsp + 0x107], 0x40
0x455fbb:	je	0x455fc7
0x455fbd:	cmp	byte ptr [rsp + rax + 0x118], 0
0x455fc5:	jne	0x455fd3
0x455fc7:	cmp	dl, 8
0x455fca:	jne	0x42d03d
0x455fd0:	mov	r11, qword ptr [r11]
0x455fd3:	mov	rax, qword ptr [rsp + 0x10]
0x455fd8:	add	r11, qword ptr [rax + 0x128]
0x455fdf:	jmp	0x456040
0x455fe1:	nop	dword ptr [rax]
0x455fe8:	cmp	eax, 2
0x455feb:	jne	0x456278
0x455ff1:	mov	rax, qword ptr [rsp + 0x10]
0x455ff6:	xor	esi, esi
0x455ff8:	xor	ecx, ecx
0x455ffa:	mov	rdi, qword ptr [rax + 0x138]
0x456001:	nop	dword ptr [rax]
0x456008:	movzx	edx, byte ptr [rdi]
0x45600b:	add	rdi, 1
0x45600f:	mov	rax, rdx
0x456012:	and	eax, 0x7f
0x456015:	shl	rax, cl
0x456018:	add	ecx, 7
0x45601b:	or	rsi, rax
0x45601e:	test	dl, dl
0x456020:	js	0x456008
0x456022:	lea	rdx, [rsp + 0x40]
0x456027:	add	rsi, rdi
0x45602a:	xor	ecx, ecx
0x45602c:	call	0x455670
0x456031:	mov	r11, rax
0x456034:	lea	rax, [rip + 0x90595]
0x45603b:	mov	qword ptr [rsp + 0x20], rax
0x456040:	lea	rax, [rsp + 0x40]
0x456045:	mov	rbx, qword ptr [rsp + 0x10]
0x45604a:	mov	r12, r15
0x45604d:	lea	rbp, [rip + 0x9057c]
0x456054:	mov	qword ptr [rsp + 8], rax
0x456059:	lea	r13, [r15 + 0xd8]
0x456060:	lea	r10, [rbp + 0x12]
0x456064:	mov	qword ptr [r15 + 0x90], r11
0x45606b:	lea	r14, [rip + 0x77c7a]
0x456072:	mov	qword ptr [rsp + 0x28], r15
0x456077:	mov	r15, r11
0x45607a:	nop	word ptr [rax + rax]
0x456080:	cmp	dword ptr [rbx + 8], 5
0x456084:	ja	0x456119
0x45608a:	mov	eax, dword ptr [rbx + 8]
0x45608d:	movsxd	rax, dword ptr [r14 + rax*4]
0x456091:	add	rax, r14
0x456094:	notrack jmp	rax
0x456097:	nop	word ptr [rax + rax]
0x4560a0:	mov	rdi, qword ptr [rbx]
0x4560a3:	xor	esi, esi
0x4560a5:	xor	ecx, ecx
0x4560a7:	nop	word ptr [rax + rax]
0x4560b0:	movzx	edx, byte ptr [rdi]
0x4560b3:	add	rdi, 1
0x4560b7:	mov	rax, rdx
0x4560ba:	and	eax, 0x7f
0x4560bd:	shl	rax, cl
0x4560c0:	add	ecx, 7
0x4560c3:	or	rsi, rax
0x4560c6:	test	dl, dl
0x4560c8:	js	0x4560b0
0x4560ca:	mov	rdx, qword ptr [rsp + 8]
0x4560cf:	add	rsi, rdi
0x4560d2:	mov	rcx, r15
0x4560d5:	call	0x455670
0x4560da:	cmp	byte ptr [rbp], 8
0x4560de:	ja	0x42d03d
0x4560e4:	mov	byte ptr [r13], 1
0x4560e9:	lea	r10, [rip + 0x904f2]
0x4560f0:	mov	qword ptr [r12], rax
0x4560f4:	jmp	0x456119
0x4560f6:	nop	word ptr cs:[rax + rax]
0x456100:	mov	rax, qword ptr [rbx]
0x456103:	add	rax, r15
0x456106:	cmp	byte ptr [rbp], 8
0x45610a:	ja	0x42d03d
0x456110:	mov	byte ptr [r13], 1
0x456115:	mov	qword ptr [r12], rax
0x456119:	add	rbp, 1
0x45611d:	add	rbx, 0x10
0x456121:	add	r13, 1
0x456125:	add	r12, 8
0x456129:	cmp	r10, rbp
0x45612c:	jne	0x456080
0x456132:	mov	rbx, qword ptr [rsp + 0x18]
0x456137:	mov	rsi, qword ptr [rsp + 0x10]
0x45613c:	mov	r15, qword ptr [rsp + 0x28]
0x456141:	mov	rax, rbx
0x456144:	btr	rax, 0x3f
0x456149:	cmp	byte ptr [rsi + 0x173], 0
0x456150:	je	0x45615a
0x456152:	mov	rax, rbx
0x456155:	bts	rax, 0x3f
0x45615a:	mov	qword ptr [r15 + 0xc0], rax
0x456161:	add	rsp, 0x138
0x456168:	pop	rbx
0x456169:	pop	rbp
0x45616a:	pop	r12
0x45616c:	pop	r13
0x45616e:	pop	r14
0x456170:	pop	r15
0x456172:	ret	
0x456173:	nop	dword ptr [rax + rax]
0x456178:	mov	rdi, qword ptr [rbx]
0x45617b:	xor	esi, esi
0x45617d:	xor	ecx, ecx
0x45617f:	nop	
0x456180:	movzx	edx, byte ptr [rdi]
0x456183:	add	rdi, 1
0x456187:	mov	rax, rdx
0x45618a:	and	eax, 0x7f
0x45618d:	shl	rax, cl
0x456190:	add	ecx, 7
0x456193:	or	rsi, rax
0x456196:	test	dl, dl
0x456198:	js	0x456180
0x45619a:	mov	rdx, qword ptr [rsp + 8]
0x45619f:	add	rsi, rdi
0x4561a2:	mov	rcx, r15
0x4561a5:	call	0x455670
0x4561aa:	cmp	qword ptr [rsp], 0
0x4561af:	lea	r10, [rip + 0x9042c]
0x4561b6:	je	0x456115
0x4561bc:	jmp	0x4561d1
0x4561be:	nop	
0x4561c0:	mov	rax, qword ptr [rbx]
0x4561c3:	add	rax, r15
0x4561c6:	cmp	qword ptr [rsp], 0
0x4561cb:	je	0x456115
0x4561d1:	mov	byte ptr [r13], 0
0x4561d6:	jmp	0x456115
0x4561db:	nop	dword ptr [rax + rax]
0x4561e0:	mov	rdx, qword ptr [rbx]
0x4561e3:	movsxd	rax, edx
0x4561e6:	cmp	byte ptr [rsp + rax + 0x118], 0
0x4561ee:	jne	0x456208
0x4561f0:	cmp	qword ptr [rsp], 0
0x4561f5:	mov	rax, qword ptr [rsp + rax*8 + 0x40]
0x4561fa:	je	0x456115
0x456200:	jmp	0x4561d1
0x456202:	nop	word ptr [rax + rax]
0x456208:	cmp	edx, 0x11
0x45620b:	jg	0x42d03d
0x456211:	mov	rsi, qword ptr [rsp + 0x20]
0x456216:	movzx	edx, byte ptr [rsi + rax]
0x45621a:	mov	rax, qword ptr [rsp + rax*8 + 0x40]
0x45621f:	test	byte ptr [rsp + 0x107], 0x40
0x456227:	jne	0x456106
0x45622d:	cmp	dl, 8
0x456230:	jne	0x42d03d
0x456236:	mov	rax, qword ptr [rax]
0x456239:	jmp	0x456106
0x45623e:	cmp	byte ptr [rip + 0x90392], 8
0x456245:	mov	rax, qword ptr [r15 + 0x90]
0x45624c:	jne	0x42d03d
0x456252:	mov	qword ptr [rsp + 0x38], rax
0x456257:	test	byte ptr [rsp + 0x107], 0x40
0x45625f:	je	0x456269
0x456261:	mov	byte ptr [rsp + 0x11f], 0
0x456269:	lea	rax, [rsp + 0x38]
0x45626e:	mov	qword ptr [rsp + 0x78], rax
0x456273:	jmp	0x455f48
0x456278:	jmp	0x42d042
0x45627d:	nop	dword ptr [rax]
0x456280:	mov	qword ptr [rcx + 0x120], 0
0x45628b:	cmp	rdi, rsi
0x45628e:	jae	0x456ad4
0x456294:	push	rbp
0x456295:	mov	rax, rdi
0x456298:	xor	r8d, r8d
0x45629b:	mov	rbp, rsp
0x45629e:	push	r15
0x4562a0:	mov	r15, rdx
0x4562a3:	push	r14
0x4562a5:	lea	r14, [rip + 0x77a58]
0x4562ac:	push	r13
0x4562ae:	mov	r13, rsi
0x4562b1:	push	r12
0x4562b3:	push	rbx
0x4562b4:	mov	rbx, rcx
0x4562b7:	sub	rsp, 0x28
0x4562bb:	mov	r12, qword ptr [rdx + 0xc0]
0x4562c2:	shr	r12, 0x3f
0x4562c6:	add	r12, qword ptr [rdx + 0x98]
0x4562cd:	nop	dword ptr [rax]
0x4562d0:	mov	rsi, qword ptr [rbx + 0x148]
0x4562d7:	cmp	rsi, r12
0x4562da:	jae	0x45632d
0x4562dc:	movzx	edx, byte ptr [rax]
0x4562df:	lea	r9, [rax + 1]
0x4562e3:	mov	ecx, edx
0x4562e5:	and	ecx, 0xffffffc0
0x4562e8:	cmp	cl, 0x40
0x4562eb:	je	0x456310
0x4562ed:	cmp	cl, 0x80
0x4562f0:	je	0x456360
0x4562f2:	cmp	cl, 0xc0
0x4562f5:	je	0x456340
0x4562f7:	cmp	dl, 0x2f
0x4562fa:	ja	0x42d047
0x456300:	movsxd	rdx, dword ptr [r14 + rdx*4]
0x456304:	add	rdx, r14
0x456307:	notrack jmp	rdx
0x45630a:	nop	word ptr [rax + rax]
0x456310:	and	edx, 0x3f
0x456313:	imul	rdx, qword ptr [rbx + 0x160]
0x45631b:	mov	rax, r9
0x45631e:	add	rdx, rsi
0x456321:	mov	qword ptr [rbx + 0x148], rdx
0x456328:	cmp	rax, r13
0x45632b:	jb	0x4562d0
0x45632d:	lea	rsp, [rbp - 0x28]
0x456331:	pop	rbx
0x456332:	pop	r12
0x456334:	pop	r13
0x456336:	pop	r14
0x456338:	pop	r15
0x45633a:	pop	rbp
0x45633b:	ret	
0x45633c:	nop	dword ptr [rax]
0x456340:	mov	eax, edx
0x456342:	and	edx, 0x3f
0x456345:	and	eax, 0x3f
0x456348:	cmp	al, 0x11
0x45634a:	ja	0x4563b0
0x45634c:	shl	rdx, 4
0x456350:	mov	rax, r9
0x456353:	mov	dword ptr [rbx + rdx + 8], 0
0x45635b:	jmp	0x456328
0x45635d:	nop	dword ptr [rax]
0x456360:	mov	edi, edx
0x456362:	mov	rax, r9
0x456365:	and	edx, 0x3f
0x456368:	xor	r10d, r10d
0x45636b:	and	edi, 0x3f
0x45636e:	xor	ecx, ecx
0x456370:	movzx	r9d, byte ptr [rax]
0x456374:	add	rax, 1
0x456378:	mov	rsi, r9
0x45637b:	and	esi, 0x7f
0x45637e:	shl	rsi, cl
0x456381:	add	ecx, 7
0x456384:	or	r10, rsi
0x456387:	test	r9b, r9b
0x45638a:	js	0x456370
0x45638c:	imul	r10, qword ptr [rbx + 0x158]
0x456394:	cmp	dil, 0x11
0x456398:	ja	0x456328
0x45639a:	shl	rdx, 4
0x45639e:	add	rdx, rbx
0x4563a1:	mov	dword ptr [rdx + 8], 1
0x4563a8:	mov	qword ptr [rdx], r10
0x4563ab:	jmp	0x456328
0x4563b0:	mov	rax, r9
0x4563b3:	jmp	0x456328
0x4563b8:	mov	qword ptr [rbx + 0x138], r9
0x4563bf:	xor	eax, eax
0x4563c1:	xor	ecx, ecx
0x4563c3:	mov	dword ptr [rbx + 0x140], 2
0x4563cd:	nop	dword ptr [rax]
0x4563d0:	movzx	esi, byte ptr [r9]
0x4563d4:	add	r9, 1
0x4563d8:	mov	rdx, rsi
0x4563db:	and	edx, 0x7f
0x4563de:	shl	rdx, cl
0x4563e1:	add	ecx, 7
0x4563e4:	or	rax, rdx
0x4563e7:	test	sil, sil
0x4563ea:	js	0x4563d0
0x4563ec:	add	rax, r9
0x4563ef:	jmp	0x456328
0x4563f4:	mov	rdx, r9
0x4563f7:	lea	rcx, [rbp - 0x38]
0x4563fb:	mov	rdi, r15
0x4563fe:	mov	qword ptr [rbp - 0x48], r8
0x456402:	movzx	esi, byte ptr [rbx + 0x170]
0x456409:	call	0x4554c0
0x45640e:	mov	rdx, qword ptr [rbp - 0x38]
0x456412:	mov	r8, qword ptr [rbp - 0x48]
0x456416:	mov	qword ptr [rbx + 0x148], rdx
0x45641d:	jmp	0x456328
0x456422:	movzx	edx, byte ptr [rax + 1]
0x456426:	imul	rdx, qword ptr [rbx + 0x160]
0x45642e:	add	rax, 2
0x456432:	add	rdx, rsi
0x456435:	mov	qword ptr [rbx + 0x148], rdx
0x45643c:	jmp	0x456328
0x456441:	movzx	edx, word ptr [rax + 1]
0x456445:	imul	rdx, qword ptr [rbx + 0x160]
0x45644d:	add	rax, 3
0x456451:	add	rdx, rsi
0x456454:	mov	qword ptr [rbx + 0x148], rdx
0x45645b:	jmp	0x456328
0x456460:	mov	edx, dword ptr [rax + 1]
0x456463:	imul	rdx, qword ptr [rbx + 0x160]
0x45646b:	add	rax, 5
0x45646f:	add	rdx, rsi
0x456472:	mov	qword ptr [rbx + 0x148], rdx
0x456479:	jmp	0x456328
0x45647e:	test	r8, r8
0x456481:	je	0x456ae7
0x456487:	mov	rax, r8
0x45648a:	mov	r8, qword ptr [r8 + 0x120]
0x456491:	mov	rdi, rax
0x456494:	mov	ecx, 0x29
0x456499:	mov	rsi, rbx
0x45649c:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x45649f:	mov	qword ptr [rbx + 0x120], rax
0x4564a6:	mov	rax, r9
0x4564a9:	jmp	0x456328
0x4564ae:	mov	rax, qword ptr [rbx + 0x120]
0x4564b5:	mov	ecx, 0x29
0x4564ba:	mov	rdi, rbx
0x4564bd:	mov	rsi, rax
0x4564c0:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x4564c3:	mov	qword ptr [rax + 0x120], r8
0x4564ca:	mov	r8, rax
0x4564cd:	mov	rax, r9
0x4564d0:	jmp	0x456328
0x4564d5:	xor	esi, esi
0x4564d7:	xor	ecx, ecx
0x4564d9:	nop	dword ptr [rax]
0x4564e0:	movzx	edx, byte ptr [r9]
0x4564e4:	add	r9, 1
0x4564e8:	mov	rax, rdx
0x4564eb:	and	eax, 0x7f
0x4564ee:	shl	rax, cl
0x4564f1:	add	ecx, 7
0x4564f4:	or	rsi, rax
0x4564f7:	test	dl, dl
0x4564f9:	js	0x4564e0
0x4564fb:	cmp	rsi, 0x11
0x4564ff:	ja	0x456513
0x456501:	shl	rsi, 4
0x456505:	lea	rax, [rbx + rsi]
0x456509:	mov	dword ptr [rax + 8], 3
0x456510:	mov	qword ptr [rax], r9
0x456513:	xor	eax, eax
0x456515:	xor	ecx, ecx
0x456517:	nop	word ptr [rax + rax]
0x456520:	movzx	esi, byte ptr [r9]
0x456524:	add	r9, 1
0x456528:	mov	rdx, rsi
0x45652b:	and	edx, 0x7f
0x45652e:	shl	rdx, cl
0x456531:	add	ecx, 7
0x456534:	or	rax, rdx
0x456537:	test	sil, sil
0x45653a:	js	0x456520
0x45653c:	add	rax, r9
0x45653f:	jmp	0x456328
0x456544:	mov	rax, r9
0x456547:	xor	esi, esi
0x456549:	xor	ecx, ecx
0x45654b:	nop	dword ptr [rax + rax]
0x456550:	movzx	edi, byte ptr [rax]
0x456553:	add	rax, 1
0x456557:	mov	rdx, rdi
0x45655a:	and	edx, 0x7f
0x45655d:	shl	rdx, cl
0x456560:	add	ecx, 7
0x456563:	or	rsi, rdx
0x456566:	test	dil, dil
0x456569:	js	0x456550
0x45656b:	xor	r9d, r9d
0x45656e:	xor	ecx, ecx
0x456570:	movzx	edi, byte ptr [rax]
0x456573:	add	rax, 1
0x456577:	mov	rdx, rdi
0x45657a:	and	edx, 0x7f
0x45657d:	shl	rdx, cl
0x456580:	add	ecx, 7
0x456583:	or	r9, rdx
0x456586:	test	dil, dil
0x456589:	js	0x456570
0x45658b:	cmp	rsi, 0x11
0x45658f:	ja	0x456328
0x456595:	shl	rsi, 4
0x456599:	lea	rdx, [rbx + rsi]
0x45659d:	mov	dword ptr [rdx + 8], 2
0x4565a4:	mov	qword ptr [rdx], r9
0x4565a7:	jmp	0x456328
0x4565ac:	mov	rax, r9
0x4565af:	xor	esi, esi
0x4565b1:	xor	ecx, ecx
0x4565b3:	nop	dword ptr [rax + rax]
0x4565b8:	movzx	edi, byte ptr [rax]
0x4565bb:	add	rax, 1
0x4565bf:	mov	rdx, rdi
0x4565c2:	and	edx, 0x7f
0x4565c5:	shl	rdx, cl
0x4565c8:	add	ecx, 7
0x4565cb:	or	rsi, rdx
0x4565ce:	test	dil, dil
0x4565d1:	js	0x4565b8
0x4565d3:	xor	r9d, r9d
0x4565d6:	xor	ecx, ecx
0x4565d8:	nop	dword ptr [rax + rax]
0x4565e0:	movzx	edi, byte ptr [rax]
0x4565e3:	add	rax, 1
0x4565e7:	mov	rdx, rdi
0x4565ea:	and	edx, 0x7f
0x4565ed:	shl	rdx, cl
0x4565f0:	add	ecx, 7
0x4565f3:	or	r9, rdx
0x4565f6:	test	dil, dil
0x4565f9:	js	0x4565e0
0x4565fb:	cmp	ecx, 0x3f
0x4565fe:	ja	0x456610
0x456600:	and	edi, 0x40
0x456603:	jne	0x456ad5
0x456609:	nop	dword ptr [rax]
0x456610:	imul	r9, qword ptr [rbx + 0x158]
0x456618:	cmp	rsi, 0x11
0x45661c:	ja	0x456328
0x456622:	shl	rsi, 4
0x456626:	lea	rdx, [rbx + rsi]
0x45662a:	mov	dword ptr [rdx + 8], 1
0x456631:	mov	qword ptr [rdx], r9
0x456634:	jmp	0x456328
0x456639:	xor	esi, esi
0x45663b:	xor	ecx, ecx
0x45663d:	nop	dword ptr [rax]
0x456640:	movzx	edx, byte ptr [r9]
0x456644:	add	r9, 1
0x456648:	mov	rax, rdx
0x45664b:	and	eax, 0x7f
0x45664e:	shl	rax, cl
0x456651:	add	ecx, 7
0x456654:	or	rsi, rax
0x456657:	test	dl, dl
0x456659:	js	0x456640
0x45665b:	mov	qword ptr [rbx + 0x130], rsi
0x456662:	xor	ecx, ecx
0x456664:	xor	esi, esi
0x456666:	nop	word ptr cs:[rax + rax]
0x456670:	movzx	edx, byte ptr [r9]
0x456674:	add	r9, 1
0x456678:	mov	rax, rdx
0x45667b:	and	eax, 0x7f
0x45667e:	shl	rax, cl
0x456681:	add	ecx, 7
0x456684:	or	rsi, rax
0x456687:	test	dl, dl
0x456689:	js	0x456670
0x45668b:	cmp	ecx, 0x3f
0x45668e:	ja	0x4566a2
0x456690:	and	edx, 0x40
0x456693:	je	0x4566a2
0x456695:	mov	rax, 0xffffffffffffffff
0x45669c:	shl	rax, cl
0x45669f:	or	rsi, rax
0x4566a2:	mov	dword ptr [rbx + 0x140], 1
0x4566ac:	imul	rsi, qword ptr [rbx + 0x158]
0x4566b4:	mov	rax, r9
0x4566b7:	mov	qword ptr [rbx + 0x128], rsi
0x4566be:	jmp	0x456328
0x4566c3:	mov	rax, r9
0x4566c6:	xor	esi, esi
0x4566c8:	xor	ecx, ecx
0x4566ca:	nop	word ptr [rax + rax]
0x4566d0:	movzx	edi, byte ptr [rax]
0x4566d3:	add	rax, 1
0x4566d7:	mov	rdx, rdi
0x4566da:	and	edx, 0x7f
0x4566dd:	shl	rdx, cl
0x4566e0:	add	ecx, 7
0x4566e3:	or	rsi, rdx
0x4566e6:	test	dil, dil
0x4566e9:	js	0x4566d0
0x4566eb:	xor	r9d, r9d
0x4566ee:	xor	ecx, ecx
0x4566f0:	movzx	edi, byte ptr [rax]
0x4566f3:	add	rax, 1
0x4566f7:	mov	rdx, rdi
0x4566fa:	and	edx, 0x7f
0x4566fd:	shl	rdx, cl
0x456700:	add	ecx, 7
0x456703:	or	r9, rdx
0x456706:	test	dil, dil
0x456709:	js	0x4566f0
0x45670b:	imul	r9, qword ptr [rbx + 0x158]
0x456713:	cmp	rsi, 0x11
0x456717:	ja	0x456328
0x45671d:	shl	rsi, 4
0x456721:	neg	r9
0x456724:	lea	rdx, [rbx + rsi]
0x456728:	mov	dword ptr [rdx + 8], 1
0x45672f:	mov	qword ptr [rdx], r9
0x456732:	jmp	0x456328
0x456737:	mov	rax, r9
0x45673a:	xor	esi, esi
0x45673c:	xor	ecx, ecx
0x45673e:	nop	
0x456740:	movzx	edi, byte ptr [rax]
0x456743:	add	rax, 1
0x456747:	mov	rdx, rdi
0x45674a:	and	edx, 0x7f
0x45674d:	shl	rdx, cl
0x456750:	add	ecx, 7
0x456753:	or	rsi, rdx
0x456756:	test	dil, dil
0x456759:	js	0x456740
0x45675b:	xor	r9d, r9d
0x45675e:	xor	ecx, ecx
0x456760:	movzx	edi, byte ptr [rax]
0x456763:	add	rax, 1
0x456767:	mov	rdx, rdi
0x45676a:	and	edx, 0x7f
0x45676d:	shl	rdx, cl
0x456770:	add	ecx, 7
0x456773:	or	r9, rdx
0x456776:	test	dil, dil
0x456779:	js	0x456760
0x45677b:	imul	r9, qword ptr [rbx + 0x158]
0x456783:	cmp	rsi, 0x11
0x456787:	ja	0x456328
0x45678d:	shl	rsi, 4
0x456791:	lea	rdx, [rbx + rsi]
0x456795:	mov	dword ptr [rdx + 8], 4
0x45679c:	mov	qword ptr [rdx], r9
0x45679f:	jmp	0x456328
0x4567a4:	mov	rax, r9
0x4567a7:	xor	esi, esi
0x4567a9:	xor	ecx, ecx
0x4567ab:	nop	dword ptr [rax + rax]
0x4567b0:	movzx	edi, byte ptr [rax]
0x4567b3:	add	rax, 1
0x4567b7:	mov	rdx, rdi
0x4567ba:	and	edx, 0x7f
0x4567bd:	shl	rdx, cl
0x4567c0:	add	ecx, 7
0x4567c3:	or	rsi, rdx
0x4567c6:	test	dil, dil
0x4567c9:	js	0x4567b0
0x4567cb:	xor	r9d, r9d
0x4567ce:	xor	ecx, ecx
0x4567d0:	movzx	edi, byte ptr [rax]
0x4567d3:	add	rax, 1
0x4567d7:	mov	rdx, rdi
0x4567da:	and	edx, 0x7f
0x4567dd:	shl	rdx, cl
0x4567e0:	add	ecx, 7
0x4567e3:	or	r9, rdx
0x4567e6:	test	dil, dil
0x4567e9:	js	0x4567d0
0x4567eb:	cmp	ecx, 0x3f
0x4567ee:	ja	0x45677b
0x4567f0:	and	edi, 0x40
0x4567f3:	je	0x45677b
0x4567f5:	mov	rdx, 0xffffffffffffffff
0x4567fc:	shl	rdx, cl
0x4567ff:	or	r9, rdx
0x456802:	jmp	0x45677b
0x456807:	xor	esi, esi
0x456809:	xor	ecx, ecx
0x45680b:	nop	dword ptr [rax + rax]
0x456810:	movzx	edx, byte ptr [r9]
0x456814:	add	r9, 1
0x456818:	mov	rax, rdx
0x45681b:	and	eax, 0x7f
0x45681e:	shl	rax, cl
0x456821:	add	ecx, 7
0x456824:	or	rsi, rax
0x456827:	test	dl, dl
0x456829:	js	0x456810
0x45682b:	cmp	rsi, 0x11
0x45682f:	ja	0x456843
0x456831:	shl	rsi, 4
0x456835:	lea	rax, [rbx + rsi]
0x456839:	mov	dword ptr [rax + 8], 5
0x456840:	mov	qword ptr [rax], r9
0x456843:	xor	eax, eax
0x456845:	xor	ecx, ecx
0x456847:	nop	word ptr [rax + rax]
0x456850:	movzx	esi, byte ptr [r9]
0x456854:	add	r9, 1
0x456858:	mov	rdx, rsi
0x45685b:	and	edx, 0x7f
0x45685e:	shl	rdx, cl
0x456861:	add	ecx, 7
0x456864:	or	rax, rdx
0x456867:	test	sil, sil
0x45686a:	js	0x456850
0x45686c:	add	rax, r9
0x45686f:	jmp	0x456328
0x456874:	xor	esi, esi
0x456876:	xor	ecx, ecx
0x456878:	nop	dword ptr [rax + rax]
0x456880:	movzx	edx, byte ptr [r9]
0x456884:	add	r9, 1
0x456888:	mov	rax, rdx
0x45688b:	and	eax, 0x7f
0x45688e:	shl	rax, cl
0x456891:	add	ecx, 7
0x456894:	or	rsi, rax
0x456897:	test	dl, dl
0x456899:	js	0x456880
0x45689b:	mov	qword ptr [r15 + 0xd0], rsi
0x4568a2:	mov	rax, r9
0x4568a5:	jmp	0x456328
0x4568aa:	xor	esi, esi
0x4568ac:	xor	ecx, ecx
0x4568ae:	nop	
0x4568b0:	movzx	edx, byte ptr [r9]
0x4568b4:	add	r9, 1
0x4568b8:	mov	rax, rdx
0x4568bb:	and	eax, 0x7f
0x4568be:	shl	rax, cl
0x4568c1:	add	ecx, 7
0x4568c4:	or	rsi, rax
0x4568c7:	test	dl, dl
0x4568c9:	js	0x4568b0
0x4568cb:	cmp	ecx, 0x3f
0x4568ce:	ja	0x4566ac
0x4568d4:	and	edx, 0x40
0x4568d7:	je	0x4566ac
0x4568dd:	mov	rax, 0xffffffffffffffff
0x4568e4:	shl	rax, cl
0x4568e7:	or	rsi, rax
0x4568ea:	jmp	0x4566ac
0x4568ef:	mov	rax, r9
0x4568f2:	xor	edi, edi
0x4568f4:	xor	ecx, ecx
0x4568f6:	nop	word ptr cs:[rax + rax]
0x456900:	movzx	esi, byte ptr [rax]
0x456903:	add	rax, 1
0x456907:	mov	rdx, rsi
0x45690a:	and	edx, 0x7f
0x45690d:	shl	rdx, cl
0x456910:	add	ecx, 7
0x456913:	or	rdi, rdx
0x456916:	test	sil, sil
0x456919:	js	0x456900
0x45691b:	cmp	rdi, 0x11
0x45691f:	ja	0x456328
0x456925:	shl	rdi, 4
0x456929:	mov	dword ptr [rbx + rdi + 8], 0
0x456931:	jmp	0x456328
0x456936:	mov	rax, r9
0x456939:	xor	edi, edi
0x45693b:	xor	ecx, ecx
0x45693d:	nop	dword ptr [rax]
0x456940:	movzx	esi, byte ptr [rax]
0x456943:	add	rax, 1
0x456947:	mov	rdx, rsi
0x45694a:	and	edx, 0x7f
0x45694d:	shl	rdx, cl
0x456950:	add	ecx, 7
0x456953:	or	rdi, rdx
0x456956:	test	sil, sil
0x456959:	js	0x456940
0x45695b:	jmp	0x45691b
0x45695d:	mov	rax, r9
0x456960:	xor	edi, edi
0x456962:	xor	ecx, ecx
0x456964:	nop	dword ptr [rax]
0x456968:	movzx	esi, byte ptr [rax]
0x45696b:	add	rax, 1
0x45696f:	mov	rdx, rsi
0x456972:	and	edx, 0x7f
0x456975:	shl	rdx, cl
0x456978:	add	ecx, 7
0x45697b:	or	rdi, rdx
0x45697e:	test	sil, sil
0x456981:	js	0x456968
0x456983:	cmp	rdi, 0x11
0x456987:	ja	0x456328
0x45698d:	shl	rdi, 4
0x456991:	mov	dword ptr [rbx + rdi + 8], 6
0x456999:	jmp	0x456328
0x45699e:	mov	rax, r9
0x4569a1:	xor	esi, esi
0x4569a3:	xor	ecx, ecx
0x4569a5:	nop	dword ptr [rax]
0x4569a8:	movzx	edi, byte ptr [rax]
0x4569ab:	add	rax, 1
0x4569af:	mov	rdx, rdi
0x4569b2:	and	edx, 0x7f
0x4569b5:	shl	rdx, cl
0x4569b8:	add	ecx, 7
0x4569bb:	or	rsi, rdx
0x4569be:	test	dil, dil
0x4569c1:	js	0x4569a8
0x4569c3:	xor	r9d, r9d
0x4569c6:	xor	ecx, ecx
0x4569c8:	nop	dword ptr [rax + rax]
0x4569d0:	movzx	edi, byte ptr [rax]
0x4569d3:	add	rax, 1
0x4569d7:	mov	rdx, rdi
0x4569da:	and	edx, 0x7f
0x4569dd:	shl	rdx, cl
0x4569e0:	add	ecx, 7
0x4569e3:	or	r9, rdx
0x4569e6:	test	dil, dil
0x4569e9:	js	0x4569d0
0x4569eb:	jmp	0x456610
0x4569f0:	xor	esi, esi
0x4569f2:	xor	ecx, ecx
0x4569f4:	nop	dword ptr [rax]
0x4569f8:	movzx	edx, byte ptr [r9]
0x4569fc:	add	r9, 1
0x456a00:	mov	rax, rdx
0x456a03:	and	eax, 0x7f
0x456a06:	shl	rax, cl
0x456a09:	add	ecx, 7
0x456a0c:	or	rsi, rax
0x456a0f:	test	dl, dl
0x456a11:	js	0x4569f8
0x456a13:	mov	qword ptr [rbx + 0x128], rsi
0x456a1a:	mov	rax, r9
0x456a1d:	jmp	0x456328
0x456a22:	xor	esi, esi
0x456a24:	xor	ecx, ecx
0x456a26:	nop	word ptr cs:[rax + rax]
0x456a30:	movzx	edx, byte ptr [r9]
0x456a34:	add	r9, 1
0x456a38:	mov	rax, rdx
0x456a3b:	and	eax, 0x7f
0x456a3e:	shl	rax, cl
0x456a41:	add	ecx, 7
0x456a44:	or	rsi, rax
0x456a47:	test	dl, dl
0x456a49:	js	0x456a30
0x456a4b:	mov	qword ptr [rbx + 0x130], rsi
0x456a52:	xor	ecx, ecx
0x456a54:	xor	esi, esi
0x456a56:	nop	word ptr cs:[rax + rax]
0x456a60:	movzx	edx, byte ptr [r9]
0x456a64:	add	r9, 1
0x456a68:	mov	rax, rdx
0x456a6b:	and	eax, 0x7f
0x456a6e:	shl	rax, cl
0x456a71:	add	ecx, 7
0x456a74:	or	rsi, rax
0x456a77:	test	dl, dl
0x456a79:	js	0x456a60
0x456a7b:	mov	qword ptr [rbx + 0x128], rsi
0x456a82:	mov	rax, r9
0x456a85:	mov	dword ptr [rbx + 0x140], 1
0x456a8f:	jmp	0x456328
0x456a94:	xor	esi, esi
0x456a96:	xor	ecx, ecx
0x456a98:	nop	dword ptr [rax + rax]
0x456aa0:	movzx	edx, byte ptr [r9]
0x456aa4:	add	r9, 1
0x456aa8:	mov	rax, rdx
0x456aab:	and	eax, 0x7f
0x456aae:	shl	rax, cl
0x456ab1:	add	ecx, 7
0x456ab4:	or	rsi, rax
0x456ab7:	test	dl, dl
0x456ab9:	js	0x456aa0
0x456abb:	mov	qword ptr [rbx + 0x130], rsi
0x456ac2:	mov	rax, r9
0x456ac5:	mov	dword ptr [rbx + 0x140], 1
0x456acf:	jmp	0x456328
0x456ad4:	ret	
0x456ad5:	mov	rdx, 0xffffffffffffffff
0x456adc:	shl	rdx, cl
0x456adf:	or	r9, rdx
0x456ae2:	jmp	0x456610
0x456ae7:	mov	rax, rsp
0x456aea:	cmp	rsp, rax
0x456aed:	je	0x456b04
0x456aef:	sub	rsp, 0x1000
0x456af6:	or	qword ptr [rsp + 0xff8], 0
0x456aff:	cmp	rsp, rax
0x456b02:	jne	0x456aef
0x456b04:	sub	rsp, 0x150
0x456b0b:	or	qword ptr [rsp + 0x148], 0
0x456b14:	lea	rax, [rsp + 0xf]
0x456b19:	and	rax, 0xfffffffffffffff0
0x456b1d:	jmp	0x456491
0x456b22:	nop	word ptr cs:[rax + rax]
0x456b2d:	nop	dword ptr [rax]
0x456b30:	push	r15
0x456b32:	mov	ecx, 0x30
0x456b37:	xor	eax, eax
0x456b39:	push	r14
0x456b3b:	push	r13
0x456b3d:	push	r12
0x456b3f:	mov	r12, rdi
0x456b42:	mov	rdi, rsi
0x456b45:	push	rbp
0x456b46:	push	rbx
0x456b47:	sub	rsp, 0x18
0x456b4b:	rep stosq	qword ptr [rdi], rax
0x456b4e:	mov	qword ptr [r12 + 0xd0], 0
0x456b5a:	mov	qword ptr [r12 + 0xa0], 0
0x456b66:	mov	rdx, qword ptr [r12 + 0x98]
0x456b6e:	test	rdx, rdx
0x456b71:	je	0x456ef0
0x456b77:	mov	rax, qword ptr [r12 + 0xc0]
0x456b7f:	mov	rbp, rsi
0x456b82:	lea	rsi, [r12 + 0xa8]
0x456b8a:	shr	rax, 0x3f
0x456b8e:	lea	rdi, [rdx + rax - 1]
0x456b93:	call	0x45a170
0x456b98:	mov	rbx, rax
0x456b9b:	test	rax, rax
0x456b9e:	je	0x456f68
0x456ba4:	mov	rax, qword ptr [r12 + 0xb8]
0x456bac:	lea	r13, [rbx + 4]
0x456bb0:	mov	qword ptr [rbp + 0x148], rax
0x456bb7:	movsxd	rax, dword ptr [rbx + 4]
0x456bbb:	sub	r13, rax
0x456bbe:	lea	r14, [r13 + 9]
0x456bc2:	mov	rdi, r14
0x456bc5:	call	0x4039e0
0x456bca:	cmp	byte ptr [r13 + 9], 0x65
0x456bcf:	lea	rax, [r14 + rax + 1]
0x456bd4:	je	0x456dc0
0x456bda:	movzx	edi, byte ptr [r13 + 8]
0x456bdf:	movzx	edx, byte ptr [rax]
0x456be2:	cmp	dil, 3
0x456be6:	ja	0x457150
0x456bec:	xor	r8d, r8d
0x456bef:	xor	ecx, ecx
0x456bf1:	nop	dword ptr [rax]
0x456bf8:	movzx	esi, byte ptr [rax]
0x456bfb:	add	rax, 1
0x456bff:	mov	rdx, rsi
0x456c02:	and	edx, 0x7f
0x456c05:	shl	rdx, cl
0x456c08:	add	ecx, 7
0x456c0b:	or	r8, rdx
0x456c0e:	test	sil, sil
0x456c11:	js	0x456bf8
0x456c13:	mov	qword ptr [rbp + 0x160], r8
0x456c1a:	xor	ecx, ecx
0x456c1c:	xor	r8d, r8d
0x456c1f:	nop	
0x456c20:	mov	r9, rax
0x456c23:	movzx	esi, byte ptr [rax]
0x456c26:	add	rax, 1
0x456c2a:	mov	rdx, rsi
0x456c2d:	and	edx, 0x7f
0x456c30:	shl	rdx, cl
0x456c33:	add	ecx, 7
0x456c36:	or	r8, rdx
0x456c39:	test	sil, sil
0x456c3c:	js	0x456c20
0x456c3e:	cmp	ecx, 0x3f
0x456c41:	ja	0x456c55
0x456c43:	and	esi, 0x40
0x456c46:	je	0x456c55
0x456c48:	mov	rdx, 0xffffffffffffffff
0x456c4f:	shl	rdx, cl
0x456c52:	or	r8, rdx
0x456c55:	mov	qword ptr [rbp + 0x158], r8
0x456c5c:	xor	ecx, ecx
0x456c5e:	xor	r8d, r8d
0x456c61:	cmp	dil, 1
0x456c65:	je	0x456e30
0x456c6b:	nop	dword ptr [rax + rax]
0x456c70:	movzx	esi, byte ptr [rax]
0x456c73:	add	rax, 1
0x456c77:	mov	rdx, rsi
0x456c7a:	and	edx, 0x7f
0x456c7d:	shl	rdx, cl
0x456c80:	add	ecx, 7
0x456c83:	or	r8, rdx
0x456c86:	test	sil, sil
0x456c89:	js	0x456c70
0x456c8b:	mov	qword ptr [rbp + 0x168], r8
0x456c92:	xor	r15d, r15d
0x456c95:	mov	byte ptr [rbp + 0x171], 0xff
0x456c9c:	movzx	edx, byte ptr [r14]
0x456ca0:	cmp	dl, 0x7a
0x456ca3:	je	0x456de8
0x456ca9:	test	dl, dl
0x456cab:	je	0x457189
0x456cb1:	add	r14, 1
0x456cb5:	lea	r8, [rip + 0x77108]
0x456cbc:	sub	edx, 0x42
0x456cbf:	cmp	dl, 0x11
0x456cc2:	ja	0x456d00
0x456cc4:	movzx	edx, dl
0x456cc7:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x456ccb:	add	rdx, r8
0x456cce:	notrack jmp	rdx
0x456cd1:	nop	dword ptr [rax]
0x456cd8:	movzx	edx, byte ptr [rax]
0x456cdb:	add	rax, 1
0x456cdf:	mov	byte ptr [rbp + 0x171], dl
0x456ce5:	movzx	edx, byte ptr [r14]
0x456ce9:	add	r14, 1
0x456ced:	test	dl, dl
0x456cef:	jne	0x456cbc
0x456cf1:	test	r15, r15
0x456cf4:	jne	0x456d09
0x456cf6:	mov	r15, rax
0x456cf9:	nop	dword ptr [rax]
0x456d00:	test	r15, r15
0x456d03:	je	0x457155
0x456d09:	mov	eax, dword ptr [r13]
0x456d0d:	mov	rcx, rbp
0x456d10:	mov	rdx, r12
0x456d13:	mov	rdi, r15
0x456d16:	lea	rsi, [r13 + rax + 4]
0x456d1b:	call	0x456280
0x456d20:	movzx	eax, byte ptr [rbp + 0x170]
0x456d27:	cmp	al, 0xff
0x456d29:	je	0x457170
0x456d2f:	and	eax, 7
0x456d32:	cmp	al, 2
0x456d34:	je	0x457140
0x456d3a:	jbe	0x456ee0
0x456d40:	mov	edx, 0x10
0x456d45:	cmp	al, 3
0x456d47:	jne	0x456ec8
0x456d4d:	add	rdx, rbx
0x456d50:	cmp	byte ptr [rbp + 0x172], 0
0x456d57:	movzx	esi, byte ptr [rbp + 0x171]
0x456d5e:	je	0x456f08
0x456d64:	xor	r8d, r8d
0x456d67:	xor	ecx, ecx
0x456d69:	nop	dword ptr [rax]
0x456d70:	movzx	edi, byte ptr [rdx]
0x456d73:	add	rdx, 1
0x456d77:	mov	rax, rdi
0x456d7a:	and	eax, 0x7f
0x456d7d:	shl	rax, cl
0x456d80:	add	ecx, 7
0x456d83:	or	r8, rax
0x456d86:	test	dil, dil
0x456d89:	js	0x456d70
0x456d8b:	lea	r13, [rdx + r8]
0x456d8f:	cmp	sil, 0xff
0x456d93:	jne	0x456f40
0x456d99:	mov	eax, dword ptr [rbx]
0x456d9b:	mov	rcx, rbp
0x456d9e:	mov	rdx, r12
0x456da1:	mov	rdi, r13
0x456da4:	lea	rsi, [rbx + rax + 4]
0x456da9:	call	0x456280
0x456dae:	xor	eax, eax
0x456db0:	add	rsp, 0x18
0x456db4:	pop	rbx
0x456db5:	pop	rbp
0x456db6:	pop	r12
0x456db8:	pop	r13
0x456dba:	pop	r14
0x456dbc:	pop	r15
0x456dbe:	ret	
0x456dbf:	nop	
0x456dc0:	cmp	byte ptr [r13 + 0xa], 0x68
0x456dc5:	jne	0x456bda
0x456dcb:	mov	rdx, qword ptr [rax]
0x456dce:	lea	r14, [r13 + 0xb]
0x456dd2:	add	rax, 8
0x456dd6:	mov	qword ptr [rbp + 0x178], rdx
0x456ddd:	jmp	0x456bda
0x456de2:	nop	word ptr [rax + rax]
0x456de8:	xor	ecx, ecx
0x456dea:	nop	word ptr [rax + rax]
0x456df0:	movzx	esi, byte ptr [rax]
0x456df3:	add	rax, 1
0x456df7:	mov	rdx, rsi
0x456dfa:	and	edx, 0x7f
0x456dfd:	shl	rdx, cl
0x456e00:	add	ecx, 7
0x456e03:	or	r15, rdx
0x456e06:	test	sil, sil
0x456e09:	js	0x456df0
0x456e0b:	mov	byte ptr [rbp + 0x172], 1
0x456e12:	movzx	edx, byte ptr [r14 + 1]
0x456e17:	add	r15, rax
0x456e1a:	lea	rcx, [r14 + 1]
0x456e1e:	test	dl, dl
0x456e20:	je	0x456d09
0x456e26:	mov	r14, rcx
0x456e29:	jmp	0x456cb1
0x456e2e:	nop	
0x456e30:	movzx	r8d, byte ptr [rax]
0x456e34:	lea	rax, [r9 + 2]
0x456e38:	jmp	0x456c8b
0x456e3d:	nop	dword ptr [rax]
0x456e40:	movzx	edx, byte ptr [rax]
0x456e43:	add	r14, 1
0x456e47:	add	rax, 1
0x456e4b:	mov	byte ptr [rbp + 0x170], dl
0x456e51:	movzx	edx, byte ptr [r14 - 1]
0x456e56:	test	dl, dl
0x456e58:	jne	0x456cbc
0x456e5e:	jmp	0x456cf1
0x456e63:	nop	dword ptr [rax + rax]
0x456e68:	movzx	esi, byte ptr [rax]
0x456e6b:	lea	rdx, [rax + 1]
0x456e6f:	lea	rcx, [rsp + 8]
0x456e74:	mov	rdi, r12
0x456e77:	add	r14, 1
0x456e7b:	call	0x4554c0
0x456e80:	mov	rdx, qword ptr [rsp + 8]
0x456e85:	lea	r8, [rip + 0x76f38]
0x456e8c:	mov	qword ptr [rbp + 0x150], rdx
0x456e93:	movzx	edx, byte ptr [r14 - 1]
0x456e98:	test	dl, dl
0x456e9a:	jne	0x456cbc
0x456ea0:	jmp	0x456cf1
0x456ea5:	nop	dword ptr [rax]
0x456ea8:	mov	byte ptr [rbp + 0x173], 1
0x456eaf:	movzx	edx, byte ptr [r14]
0x456eb3:	add	r14, 1
0x456eb7:	test	dl, dl
0x456eb9:	jne	0x456cbc
0x456ebf:	jmp	0x456cf1
0x456ec4:	nop	dword ptr [rax]
0x456ec8:	cmp	al, 4
0x456eca:	jne	0x42d04c
0x456ed0:	mov	edx, 0x18
0x456ed5:	jmp	0x456d4d
0x456eda:	nop	word ptr [rax + rax]
0x456ee0:	test	al, al
0x456ee2:	je	0x456ed0
0x456ee4:	jmp	0x42d04c
0x456ee9:	nop	dword ptr [rax]
0x456ef0:	add	rsp, 0x18
0x456ef4:	mov	eax, 5
0x456ef9:	pop	rbx
0x456efa:	pop	rbp
0x456efb:	pop	r12
0x456efd:	pop	r13
0x456eff:	pop	r14
0x456f01:	pop	r15
0x456f03:	ret	
0x456f04:	nop	dword ptr [rax]
0x456f08:	mov	r13, rdx
0x456f0b:	cmp	sil, 0xff
0x456f0f:	je	0x456d99
0x456f15:	lea	rcx, [rsp + 8]
0x456f1a:	mov	rdi, r12
0x456f1d:	call	0x4554c0
0x456f22:	mov	r13, rax
0x456f25:	mov	rax, qword ptr [rsp + 8]
0x456f2a:	mov	qword ptr [r12 + 0xa0], rax
0x456f32:	jmp	0x456d99
0x456f37:	nop	word ptr [rax + rax]
0x456f40:	lea	rcx, [rsp + 8]
0x456f45:	movzx	esi, sil
0x456f49:	mov	rdi, r12
0x456f4c:	call	0x4554c0
0x456f51:	mov	rax, qword ptr [rsp + 8]
0x456f56:	mov	qword ptr [r12 + 0xa0], rax
0x456f5e:	jmp	0x456d99
0x456f63:	nop	dword ptr [rax + rax]
0x456f68:	mov	rdx, qword ptr [r12 + 0x98]
0x456f70:	mov	rax, qword ptr [r12 + 0x90]
0x456f78:	cmp	byte ptr [rdx], 0x48
0x456f7b:	jne	0x456ef0
0x456f81:	movabs	rcx, 0x50f0000000fc0c7
0x456f8b:	cmp	qword ptr [rdx + 1], rcx
0x456f8f:	jne	0x456ef0
0x456f95:	mov	rdx, qword ptr [rax + 0xa0]
0x456f9c:	lea	rsi, [rax + 0x90]
0x456fa3:	mov	dword ptr [rbp + 0x140], 1
0x456fad:	mov	qword ptr [rbp + 0x130], 7
0x456fb8:	mov	rcx, rdx
0x456fbb:	sub	rsi, rdx
0x456fbe:	mov	dword ptr [rbp + 8], 1
0x456fc5:	sub	rcx, rax
0x456fc8:	mov	qword ptr [rbp], rsi
0x456fcc:	lea	rsi, [rax + 0x88]
0x456fd3:	mov	qword ptr [rbp + 0x128], rcx
0x456fda:	lea	rcx, [rax + 0x28]
0x456fde:	sub	rsi, rdx
0x456fe1:	sub	rcx, rdx
0x456fe4:	mov	qword ptr [rbp + 0x10], rsi
0x456fe8:	lea	rsi, [rax + 0x98]
0x456fef:	mov	qword ptr [rbp + 0x80], rcx
0x456ff6:	lea	rcx, [rax + 0x30]
0x456ffa:	sub	rsi, rdx
0x456ffd:	sub	rcx, rdx
0x457000:	mov	qword ptr [rbp + 0x20], rsi
0x457004:	lea	rsi, [rax + 0x80]
0x45700b:	mov	qword ptr [rbp + 0x90], rcx
0x457012:	lea	rcx, [rax + 0x38]
0x457016:	sub	rsi, rdx
0x457019:	sub	rcx, rdx
0x45701c:	mov	qword ptr [rbp + 0x30], rsi
0x457020:	lea	rsi, [rax + 0x70]
0x457024:	mov	qword ptr [rbp + 0xa0], rcx
0x45702b:	lea	rcx, [rax + 0x40]
0x45702f:	sub	rsi, rdx
0x457032:	sub	rcx, rdx
0x457035:	mov	qword ptr [rbp + 0x40], rsi
0x457039:	lea	rsi, [rax + 0x68]
0x45703d:	mov	qword ptr [rbp + 0xb0], rcx
0x457044:	lea	rcx, [rax + 0x48]
0x457048:	sub	rsi, rdx
0x45704b:	sub	rcx, rdx
0x45704e:	mov	qword ptr [rbp + 0x50], rsi
0x457052:	lea	rsi, [rax + 0x78]
0x457056:	mov	qword ptr [rbp + 0xc0], rcx
0x45705d:	lea	rcx, [rax + 0x50]
0x457061:	sub	rsi, rdx
0x457064:	sub	rcx, rdx
0x457067:	mov	dword ptr [rbp + 0x18], 1
0x45706e:	mov	qword ptr [rbp + 0xd0], rcx
0x457075:	lea	rcx, [rax + 0x58]
0x457079:	sub	rcx, rdx
0x45707c:	mov	dword ptr [rbp + 0x28], 1
0x457083:	mov	qword ptr [rbp + 0xe0], rcx
0x45708a:	lea	rcx, [rax + 0x60]
0x45708e:	add	rax, 0xa8
0x457094:	sub	rax, rdx
0x457097:	sub	rcx, rdx
0x45709a:	mov	dword ptr [rbp + 0x38], 1
0x4570a1:	mov	dword ptr [rbp + 0x48], 1
0x4570a8:	mov	dword ptr [rbp + 0x58], 1
0x4570af:	mov	dword ptr [rbp + 0x68], 1
0x4570b6:	mov	qword ptr [rbp + 0x60], rsi
0x4570ba:	mov	dword ptr [rbp + 0x88], 1
0x4570c4:	mov	dword ptr [rbp + 0x98], 1
0x4570ce:	mov	dword ptr [rbp + 0xa8], 1
0x4570d8:	mov	dword ptr [rbp + 0xb8], 1
0x4570e2:	mov	dword ptr [rbp + 0xc8], 1
0x4570ec:	mov	dword ptr [rbp + 0xd8], 1
0x4570f6:	mov	dword ptr [rbp + 0xe8], 1
0x457100:	mov	dword ptr [rbp + 0xf8], 1
0x45710a:	mov	qword ptr [rbp + 0x100], rax
0x457111:	xor	eax, eax
0x457113:	mov	qword ptr [rbp + 0xf0], rcx
0x45711a:	mov	dword ptr [rbp + 0x108], 1
0x457124:	mov	qword ptr [rbp + 0x168], 0x10
0x45712f:	mov	byte ptr [rbp + 0x173], 1
0x457136:	jmp	0x456db0
0x45713b:	nop	dword ptr [rax + rax]
0x457140:	mov	edx, 0xc
0x457145:	jmp	0x456d4d
0x45714a:	nop	word ptr [rax + rax]
0x457150:	cmp	dl, 8
0x457153:	je	0x45717a
0x457155:	add	rsp, 0x18
0x457159:	mov	eax, 3
0x45715e:	pop	rbx
0x45715f:	pop	rbp
0x457160:	pop	r12
0x457162:	pop	r13
0x457164:	pop	r14
0x457166:	pop	r15
0x457168:	ret	
0x457169:	nop	dword ptr [rax]
0x457170:	mov	edx, 8
0x457175:	jmp	0x456d4d
0x45717a:	cmp	byte ptr [rax + 1], 0
0x45717e:	jne	0x457155
0x457180:	add	rax, 2
0x457184:	jmp	0x456bec
0x457189:	mov	r15, rax
0x45718c:	jmp	0x456d09
0x457191:	nop	word ptr cs:[rax + rax]
0x45719c:	nop	dword ptr [rax]
0x4571a0:	push	r13
0x4571a2:	xor	eax, eax
0x4571a4:	mov	ecx, 0x1e
0x4571a9:	push	r12
0x4571ab:	mov	r12, rsi
0x4571ae:	push	rbp
0x4571af:	mov	rbp, rdi
0x4571b2:	push	rbx
0x4571b3:	mov	rbx, rdx
0x4571b6:	sub	rsp, 0x198
0x4571bd:	rep stosq	qword ptr [rdi], rax
0x4571c0:	lea	r13, [rsp + 0x10]
0x4571c5:	mov	rdi, rbp
0x4571c8:	mov	rsi, r13
0x4571cb:	mov	rax, qword ptr [rsp + 0x1b8]
0x4571d3:	mov	qword ptr [rbp + 0x98], rax
0x4571da:	movabs	rax, 0x4000000000000000
0x4571e4:	mov	qword ptr [rbp + 0xc0], rax
0x4571eb:	call	0x456b30
0x4571f0:	test	eax, eax
0x4571f2:	jne	0x42d051
0x4571f8:	cmp	qword ptr [rip + 0x8ade0], 0
0x457200:	je	0x457290
0x457206:	lea	rsi, [rip - 0x1f7d]
0x45720d:	lea	rdi, [rip + 0x8f3ac]
0x457214:	call	0x403f00
0x457219:	test	eax, eax
0x45721b:	jne	0x457290
0x45721d:	cmp	byte ptr [rip + 0x8f3b3], 8
0x457224:	jne	0x42d051
0x45722a:	mov	qword ptr [rsp + 8], r12
0x45722f:	test	byte ptr [rbp + 0xc7], 0x40
0x457236:	je	0x45723f
0x457238:	mov	byte ptr [rbp + 0xdf], 0
0x45723f:	lea	rax, [rsp + 8]
0x457244:	mov	rsi, r13
0x457247:	mov	rdi, rbp
0x45724a:	mov	dword ptr [rsp + 0x150], 1
0x457255:	mov	qword ptr [rbp + 0x38], rax
0x457259:	mov	qword ptr [rsp + 0x140], 7
0x457265:	mov	qword ptr [rsp + 0x138], 0
0x457271:	call	0x455e40
0x457276:	mov	qword ptr [rbp + 0x98], rbx
0x45727d:	add	rsp, 0x198
0x457284:	pop	rbx
0x457285:	pop	rbp
0x457286:	pop	r12
0x457288:	pop	r13
0x45728a:	ret	
0x45728b:	nop	dword ptr [rax + rax]
0x457290:	cmp	byte ptr [rip + 0x8f339], 0
0x457297:	jne	0x45721d
0x457299:	mov	byte ptr [rip + 0x8f330], 8
0x4572a0:	mov	byte ptr [rip + 0x8f32a], 8
0x4572a7:	mov	byte ptr [rip + 0x8f324], 8
0x4572ae:	mov	byte ptr [rip + 0x8f31e], 8
0x4572b5:	mov	byte ptr [rip + 0x8f318], 8
0x4572bc:	mov	byte ptr [rip + 0x8f312], 8
0x4572c3:	mov	byte ptr [rip + 0x8f30c], 8
0x4572ca:	mov	byte ptr [rip + 0x8f306], 8
0x4572d1:	mov	byte ptr [rip + 0x8f300], 8
0x4572d8:	mov	byte ptr [rip + 0x8f2fa], 8
0x4572df:	mov	byte ptr [rip + 0x8f2f4], 8
0x4572e6:	mov	byte ptr [rip + 0x8f2ee], 8
0x4572ed:	mov	byte ptr [rip + 0x8f2e8], 8
0x4572f4:	mov	byte ptr [rip + 0x8f2e2], 8
0x4572fb:	mov	byte ptr [rip + 0x8f2dc], 8
0x457302:	mov	byte ptr [rip + 0x8f2d6], 8
0x457309:	mov	byte ptr [rip + 0x8f2d0], 8
0x457310:	jmp	0x45721d
0x457315:	nop	word ptr cs:[rax + rax]
0x457320:	push	r15
0x457322:	push	r14
0x457324:	lea	r14, [rip + 0x8f2a5]
0x45732b:	push	r13
0x45732d:	mov	r13d, 1
0x457333:	push	r12
0x457335:	push	rbp
0x457336:	mov	rbp, rdi
0x457339:	push	rbx
0x45733a:	mov	rbx, rsi
0x45733d:	sub	rsp, 0x198
0x457344:	mov	qword ptr [rsp + 8], rdx
0x457349:	lea	r12, [rsp + 0x10]
0x45734e:	jmp	0x4573f8
0x457353:	nop	dword ptr [rax + rax]
0x457358:	mov	rax, qword ptr [rsp + 0x160]
0x457360:	test	rax, rax
0x457363:	je	0x45738e
0x457365:	mov	esi, r15d
0x457368:	mov	rdx, qword ptr [rbp]
0x45736c:	mov	r8, rbx
0x45736f:	mov	rcx, rbp
0x457372:	or	esi, 2
0x457375:	mov	edi, 1
0x45737a:	call	rax
0x45737c:	cmp	eax, 7
0x45737f:	je	0x457450
0x457385:	cmp	eax, 8
0x457388:	jne	0x457437
0x45738e:	test	r15d, r15d
0x457391:	jne	0x45745a
0x457397:	mov	rsi, r12
0x45739a:	mov	rdi, rbx
0x45739d:	call	0x455e40
0x4573a2:	mov	rax, qword ptr [rsp + 0x178]
0x4573aa:	xor	edx, edx
0x4573ac:	mov	rcx, rax
0x4573af:	shl	rcx, 4
0x4573b3:	cmp	dword ptr [rsp + rcx + 0x18], 6
0x4573b8:	je	0x4573ed
0x4573ba:	cmp	eax, 0x11
0x4573bd:	jg	0x42d056
0x4573c3:	cdqe	
0x4573c5:	movzx	ecx, byte ptr [r14 + rax]
0x4573ca:	mov	rdx, qword ptr [rbx + rax*8]
0x4573ce:	test	byte ptr [rbx + 0xc7], 0x40
0x4573d5:	je	0x4573e1
0x4573d7:	cmp	byte ptr [rbx + rax + 0xd8], 0
0x4573df:	jne	0x4573ed
0x4573e1:	cmp	cl, 8
0x4573e4:	jne	0x42d056
0x4573ea:	mov	rdx, qword ptr [rdx]
0x4573ed:	mov	qword ptr [rbx + 0x98], rdx
0x4573f4:	add	r13, 1
0x4573f8:	mov	rsi, r12
0x4573fb:	mov	rdi, rbx
0x4573fe:	call	0x456b30
0x457403:	mov	rdx, qword ptr [rbx + 0xc0]
0x45740a:	xor	r9d, r9d
0x45740d:	mov	r8d, eax
0x457410:	mov	rax, qword ptr [rbx + 0x90]
0x457417:	shr	rdx, 0x3f
0x45741b:	sub	rax, rdx
0x45741e:	cmp	rax, qword ptr [rbp + 0x18]
0x457422:	sete	r9b
0x457426:	lea	r15d, [r9*4]
0x45742e:	test	r8d, r8d
0x457431:	je	0x457358
0x457437:	mov	eax, 2
0x45743c:	add	rsp, 0x198
0x457443:	pop	rbx
0x457444:	pop	rbp
0x457445:	pop	r12
0x457447:	pop	r13
0x457449:	pop	r14
0x45744b:	pop	r15
0x45744d:	ret	
0x45744e:	nop	
0x457450:	mov	rdi, qword ptr [rsp + 8]
0x457455:	mov	qword ptr [rdi], r13
0x457458:	jmp	0x45743c
0x45745a:	jmp	0x42d056
0x45745f:	nop	
0x457460:	push	r15
0x457462:	push	r14
0x457464:	push	r13
0x457466:	mov	r13, rsi
0x457469:	push	r12
0x45746b:	mov	r12, rdi
0x45746e:	push	rbp
0x45746f:	mov	ebp, 1
0x457474:	push	rbx
0x457475:	sub	rsp, 0x198
0x45747c:	mov	rax, qword ptr [rdi + 0x10]
0x457480:	mov	r14, qword ptr [rdi + 0x18]
0x457484:	mov	qword ptr [rsp + 8], rdx
0x457489:	lea	rbx, [rsp + 0x10]
0x45748e:	mov	qword ptr [rsp], rax
0x457492:	jmp	0x457563
0x457497:	nop	word ptr [rax + rax]
0x4574a0:	mov	rax, qword ptr [rsp]
0x4574a4:	mov	r9, r14
0x4574a7:	mov	r8, r13
0x4574aa:	mov	rcx, r12
0x4574ad:	mov	esi, 0xa
0x4574b2:	mov	edi, 1
0x4574b7:	call	rax
0x4574b9:	test	eax, eax
0x4574bb:	jne	0x4575a5
0x4574c1:	mov	rax, qword ptr [rsp + 0x160]
0x4574c9:	test	rax, rax
0x4574cc:	je	0x4574f9
0x4574ce:	mov	rdx, qword ptr [r12]
0x4574d2:	mov	r8, r13
0x4574d5:	mov	rcx, r12
0x4574d8:	mov	esi, 0xa
0x4574dd:	mov	edi, 1
0x4574e2:	call	rax
0x4574e4:	mov	r15d, eax
0x4574e7:	cmp	eax, 7
0x4574ea:	je	0x4575c0
0x4574f0:	cmp	eax, 8
0x4574f3:	jne	0x4575a5
0x4574f9:	mov	rsi, rbx
0x4574fc:	mov	rdi, r13
0x4574ff:	call	0x455e40
0x457504:	mov	rax, qword ptr [rsp + 0x178]
0x45750c:	xor	edx, edx
0x45750e:	mov	rcx, rax
0x457511:	shl	rcx, 4
0x457515:	cmp	dword ptr [rsp + rcx + 0x18], 6
0x45751a:	je	0x457558
0x45751c:	cmp	eax, 0x11
0x45751f:	jg	0x42d05b
0x457525:	cdqe	
0x457527:	lea	rsi, [rip + 0x8f0a2]
0x45752e:	movzx	ecx, byte ptr [rsi + rax]
0x457532:	mov	rdx, qword ptr [r13 + rax*8]
0x457537:	test	byte ptr [r13 + 0xc7], 0x40
0x45753f:	je	0x45754c
0x457541:	cmp	byte ptr [r13 + rax + 0xd8], 0
0x45754a:	jne	0x457558
0x45754c:	cmp	cl, 8
0x45754f:	jne	0x42d05b
0x457555:	mov	rdx, qword ptr [rdx]
0x457558:	mov	qword ptr [r13 + 0x98], rdx
0x45755f:	add	rbp, 1
0x457563:	mov	rsi, rbx
0x457566:	mov	rdi, r13
0x457569:	call	0x456b30
0x45756e:	mov	r15d, eax
0x457571:	test	eax, eax
0x457573:	je	0x45757a
0x457575:	cmp	eax, 5
0x457578:	jne	0x4575a5
0x45757a:	mov	rdx, qword ptr [r12]
0x45757e:	cmp	r15d, 5
0x457582:	jne	0x4574a0
0x457588:	mov	rax, qword ptr [rsp]
0x45758c:	mov	r9, r14
0x45758f:	mov	r8, r13
0x457592:	mov	rcx, r12
0x457595:	mov	esi, 0x1a
0x45759a:	mov	edi, 1
0x45759f:	call	rax
0x4575a1:	test	eax, eax
0x4575a3:	je	0x4575c0
0x4575a5:	mov	r15d, 2
0x4575ab:	add	rsp, 0x198
0x4575b2:	mov	eax, r15d
0x4575b5:	pop	rbx
0x4575b6:	pop	rbp
0x4575b7:	pop	r12
0x4575b9:	pop	r13
0x4575bb:	pop	r14
0x4575bd:	pop	r15
0x4575bf:	ret	
0x4575c0:	mov	rax, qword ptr [rsp + 8]
0x4575c5:	mov	qword ptr [rax], rbp
0x4575c8:	jmp	0x4575ab
0x4575ca:	nop	word ptr [rax + rax]
0x4575d0:	endbr64	
0x4575d4:	cmp	esi, 0x11
0x4575d7:	jg	0x42d060
0x4575dd:	movsxd	rsi, esi
0x4575e0:	mov	rax, qword ptr [rdi + rsi*8]
0x4575e4:	test	byte ptr [rdi + 0xc7], 0x40
0x4575eb:	je	0x4575f7
0x4575ed:	cmp	byte ptr [rdi + rsi + 0xd8], 0
0x4575f5:	jne	0x45760b
0x4575f7:	lea	rdx, [rip + 0x8efd2]
0x4575fe:	cmp	byte ptr [rdx + rsi], 8
0x457602:	jne	0x42d060
0x457608:	mov	rax, qword ptr [rax]
0x45760b:	ret	
0x45760c:	nop	dword ptr [rax]
0x457610:	endbr64	
0x457614:	mov	rax, qword ptr [rdi + 0x90]
0x45761b:	ret	
0x45761c:	nop	dword ptr [rax]
0x457620:	endbr64	
0x457624:	cmp	esi, 0x11
0x457627:	jg	0x42d066
0x45762d:	movsxd	rsi, esi
0x457630:	lea	rax, [rip + 0x8ef99]
0x457637:	movzx	eax, byte ptr [rax + rsi]
0x45763b:	test	byte ptr [rdi + 0xc7], 0x40
0x457642:	je	0x45764e
0x457644:	cmp	byte ptr [rdi + rsi + 0xd8], 0
0x45764c:	jne	0x457660
0x45764e:	mov	rcx, qword ptr [rdi + rsi*8]
0x457652:	cmp	al, 8
0x457654:	jne	0x42d066
0x45765a:	mov	qword ptr [rcx], rdx
0x45765d:	ret	
0x45765e:	nop	
0x457660:	mov	qword ptr [rdi + rsi*8], rdx
0x457664:	ret	
0x457665:	nop	word ptr cs:[rax + rax]
0x457670:	endbr64	
0x457674:	mov	rax, qword ptr [rdi + 0x98]
0x45767b:	ret	
0x45767c:	nop	dword ptr [rax]
0x457680:	endbr64	
0x457684:	mov	rax, qword ptr [rdi + 0xc0]
0x45768b:	sar	rax, 0x3f
0x45768f:	and	eax, 1
0x457692:	mov	dword ptr [rsi], eax
0x457694:	mov	rax, qword ptr [rdi + 0x98]
0x45769b:	ret	
0x45769c:	nop	dword ptr [rax]
0x4576a0:	endbr64	
0x4576a4:	mov	qword ptr [rdi + 0x98], rsi
0x4576ab:	ret	
0x4576ac:	nop	dword ptr [rax]
0x4576b0:	endbr64	
0x4576b4:	mov	rax, qword ptr [rdi + 0xa0]
0x4576bb:	ret	
0x4576bc:	nop	dword ptr [rax]
0x4576c0:	endbr64	
0x4576c4:	mov	rax, qword ptr [rdi + 0xb8]
0x4576cb:	ret	
0x4576cc:	nop	dword ptr [rax]
0x4576d0:	endbr64	
0x4576d4:	sub	rsp, 0x28
0x4576d8:	sub	rdi, 1
0x4576dc:	mov	rsi, rsp
0x4576df:	call	0x45a170
0x4576e4:	test	rax, rax
0x4576e7:	cmovne	rax, qword ptr [rsp + 0x10]
0x4576ed:	add	rsp, 0x28
0x4576f1:	ret	
0x4576f2:	nop	word ptr cs:[rax + rax]
0x4576fd:	nop	dword ptr [rax]
0x457700:	endbr64	
0x457704:	mov	rax, qword ptr [rdi + 0xb0]
0x45770b:	ret	
0x45770c:	nop	dword ptr [rax]
0x457710:	endbr64	
0x457714:	mov	rax, qword ptr [rdi + 0xa8]
0x45771b:	ret	
0x45771c:	nop	dword ptr [rax]
0x457720:	endbr64	
0x457724:	push	rbp
0x457725:	xor	eax, eax
0x457727:	mov	r9, rdi
0x45772a:	mov	ecx, 0x1e
0x45772f:	push	rbx
0x457730:	add	r9, 1
0x457734:	mov	rbp, rsi
0x457737:	sub	rsp, 0x278
0x45773e:	mov	r8, rsp
0x457741:	lea	rbx, [rsp + 0xf0]
0x457749:	mov	rdi, r8
0x45774c:	mov	rsi, rbx
0x45774f:	rep stosq	qword ptr [rdi], rax
0x457752:	mov	rdi, r8
0x457755:	mov	qword ptr [rsp + 0x98], r9
0x45775d:	movabs	rax, 0x4000000000000000
0x457767:	mov	qword ptr [rsp + 0xc0], rax
0x45776f:	call	0x456b30
0x457774:	test	eax, eax
0x457776:	jne	0x457830
0x45777c:	cmp	dword ptr [rsp + 0x230], 2
0x457784:	je	0x457830
0x45778a:	lea	rcx, [rbp*8]
0x457792:	mov	rdi, rbp
0x457795:	mov	rax, rbx
0x457798:	lea	rdx, [rbp + 0xb4]
0x45779f:	lea	r8, [rsp + 0x210]
0x4577a7:	sub	rdi, rcx
0x4577aa:	nop	word ptr [rax + rax]
0x4577b0:	mov	ecx, dword ptr [rax + 8]
0x4577b3:	mov	byte ptr [rdx], cl
0x4577b5:	cmp	cl, 1
0x4577b8:	je	0x4577c1
0x4577ba:	xor	esi, esi
0x4577bc:	cmp	cl, 2
0x4577bf:	jne	0x4577c4
0x4577c1:	mov	rsi, qword ptr [rax]
0x4577c4:	add	rax, 0x10
0x4577c8:	mov	qword ptr [rdi + rdx*8 - 0x580], rsi
0x4577d0:	add	rdx, 1
0x4577d4:	cmp	rax, r8
0x4577d7:	jne	0x4577b0
0x4577d9:	mov	rax, qword ptr [rsp + 0x218]
0x4577e1:	mov	qword ptr [rbp + 0x10], rax
0x4577e5:	mov	rax, qword ptr [rsp + 0x220]
0x4577ed:	mov	word ptr [rbp + 0xb0], ax
0x4577f4:	mov	rax, qword ptr [rsp + 0x258]
0x4577fc:	mov	word ptr [rbp + 0xb2], ax
0x457803:	mov	rax, qword ptr [rsp + 0xd0]
0x45780b:	mov	qword ptr [rbp + 0x18], rax
0x45780f:	mov	rax, qword ptr [rsp + 0x268]
0x457817:	mov	qword ptr [rbp + 8], rax
0x45781b:	add	rsp, 0x278
0x457822:	mov	rax, rbp
0x457825:	pop	rbx
0x457826:	pop	rbp
0x457827:	ret	
0x457828:	nop	dword ptr [rax + rax]
0x457830:	add	rsp, 0x278
0x457837:	xor	eax, eax
0x457839:	pop	rbx
0x45783a:	pop	rbp
0x45783b:	ret	
0x45783c:	nop	dword ptr [rax]
0x457840:	endbr64	
0x457844:	ret	
0x457845:	nop	word ptr cs:[rax + rax]
0x457850:	endbr64	
0x457854:	push	rbp
0x457855:	mov	rbp, rsp
0x457858:	push	r15
0x45785a:	push	r14
0x45785c:	lea	r15, [rbp - 0x3a0]
0x457863:	mov	r14, rdi
0x457866:	lea	rsi, [rbp + 0x10]
0x45786a:	push	r13
0x45786c:	mov	rdi, r15
0x45786f:	lea	r13, [rbp - 0x1c0]
0x457876:	push	r12
0x457878:	lea	r12, [rbp - 0x2b0]
0x45787f:	push	rbx
0x457880:	lea	rbx, [rip + 0x8ed49]
0x457887:	push	rdx
0x457888:	push	rax
0x457889:	sub	rsp, 0x368
0x457890:	mov	rdx, qword ptr [rbp + 8]
0x457894:	call	0x4571a0
0x457899:	movdqa	xmm0, xmmword ptr [rbp - 0x3a0]
0x4578a1:	movdqa	xmm1, xmmword ptr [rbp - 0x390]
0x4578a9:	movdqa	xmm2, xmmword ptr [rbp - 0x380]
0x4578b1:	movdqa	xmm3, xmmword ptr [rbp - 0x370]
0x4578b9:	movdqa	xmm4, xmmword ptr [rbp - 0x360]
0x4578c1:	movdqa	xmm5, xmmword ptr [rbp - 0x350]
0x4578c9:	movaps	xmmword ptr [rbp - 0x2b0], xmm0
0x4578d0:	movdqa	xmm6, xmmword ptr [rbp - 0x340]
0x4578d8:	movdqa	xmm7, xmmword ptr [rbp - 0x330]
0x4578e0:	movaps	xmmword ptr [rbp - 0x2a0], xmm1
0x4578e7:	movdqa	xmm0, xmmword ptr [rbp - 0x320]
0x4578ef:	movdqa	xmm1, xmmword ptr [rbp - 0x310]
0x4578f7:	movaps	xmmword ptr [rbp - 0x290], xmm2
0x4578fe:	movaps	xmmword ptr [rbp - 0x280], xmm3
0x457905:	movdqa	xmm2, xmmword ptr [rbp - 0x300]
0x45790d:	movdqa	xmm3, xmmword ptr [rbp - 0x2f0]
0x457915:	movaps	xmmword ptr [rbp - 0x270], xmm4
0x45791c:	movdqa	xmm4, xmmword ptr [rbp - 0x2e0]
0x457924:	movaps	xmmword ptr [rbp - 0x260], xmm5
0x45792b:	movdqa	xmm5, xmmword ptr [rbp - 0x2d0]
0x457933:	movaps	xmmword ptr [rbp - 0x250], xmm6
0x45793a:	movdqa	xmm6, xmmword ptr [rbp - 0x2c0]
0x457942:	movaps	xmmword ptr [rbp - 0x240], xmm7
0x457949:	movaps	xmmword ptr [rbp - 0x230], xmm0
0x457950:	movaps	xmmword ptr [rbp - 0x220], xmm1
0x457957:	movaps	xmmword ptr [rbp - 0x210], xmm2
0x45795e:	movaps	xmmword ptr [rbp - 0x200], xmm3
0x457965:	movaps	xmmword ptr [rbp - 0x1f0], xmm4
0x45796c:	movaps	xmmword ptr [rbp - 0x1e0], xmm5
0x457973:	movaps	xmmword ptr [rbp - 0x1d0], xmm6
0x45797a:	jmp	0x457a17
0x45797f:	nop	
0x457980:	test	eax, eax
0x457982:	jne	0x457a48
0x457988:	mov	rax, qword ptr [rbp - 0x70]
0x45798c:	test	rax, rax
0x45798f:	je	0x4579b8
0x457991:	mov	rdx, qword ptr [r14]
0x457994:	mov	r8, r12
0x457997:	mov	rcx, r14
0x45799a:	mov	esi, 1
0x45799f:	mov	edi, 1
0x4579a4:	call	rax
0x4579a6:	cmp	eax, 6
0x4579a9:	je	0x457a50
0x4579af:	cmp	eax, 8
0x4579b2:	jne	0x457a48
0x4579b8:	mov	rsi, r13
0x4579bb:	mov	rdi, r12
0x4579be:	call	0x455e40
0x4579c3:	mov	rax, qword ptr [rbp - 0x58]
0x4579c7:	xor	edx, edx
0x4579c9:	mov	rcx, rax
0x4579cc:	shl	rcx, 4
0x4579d0:	cmp	dword ptr [rbp + rcx - 0x1b8], 6
0x4579d8:	je	0x457a10
0x4579da:	cmp	eax, 0x11
0x4579dd:	jg	0x42d06c
0x4579e3:	cdqe	
0x4579e5:	movzx	ecx, byte ptr [rbx + rax]
0x4579e9:	mov	rdx, qword ptr [rbp + rax*8 - 0x2b0]
0x4579f1:	test	byte ptr [rbp - 0x1e9], 0x40
0x4579f8:	je	0x457a04
0x4579fa:	cmp	byte ptr [rbp + rax - 0x1d8], 0
0x457a02:	jne	0x457a10
0x457a04:	cmp	cl, 8
0x457a07:	jne	0x42d06c
0x457a0d:	mov	rdx, qword ptr [rdx]
0x457a10:	mov	qword ptr [rbp - 0x218], rdx
0x457a17:	mov	rsi, r13
0x457a1a:	mov	rdi, r12
0x457a1d:	call	0x456b30
0x457a22:	cmp	eax, 5
0x457a25:	jne	0x457980
0x457a2b:	mov	rbx, qword ptr [rbp - 0x28]
0x457a2f:	mov	r12, qword ptr [rbp - 0x20]
0x457a33:	mov	r13, qword ptr [rbp - 0x18]
0x457a37:	mov	r14, qword ptr [rbp - 0x10]
0x457a3b:	mov	r15, qword ptr [rbp - 8]
0x457a3f:	leave	
0x457a40:	ret	
0x457a41:	nop	dword ptr [rax]
0x457a48:	mov	eax, 3
0x457a4d:	jmp	0x457a2b
0x457a4f:	nop	
0x457a50:	movdqa	xmm7, xmmword ptr [rbp - 0x3a0]
0x457a58:	mov	rdx, qword ptr [rbp - 0x1f0]
0x457a5f:	mov	qword ptr [r14 + 0x10], 0
0x457a67:	mov	rsi, r12
0x457a6a:	movdqa	xmm0, xmmword ptr [rbp - 0x350]
0x457a72:	mov	rax, qword ptr [rbp - 0x220]
0x457a79:	mov	rdi, r14
0x457a7c:	movaps	xmmword ptr [rbp - 0x2b0], xmm7
0x457a83:	movdqa	xmm7, xmmword ptr [rbp - 0x390]
0x457a8b:	shr	rdx, 0x3f
0x457a8f:	movdqa	xmm1, xmmword ptr [rbp - 0x340]
0x457a97:	movdqa	xmm2, xmmword ptr [rbp - 0x330]
0x457a9f:	movdqa	xmm3, xmmword ptr [rbp - 0x320]
0x457aa7:	movaps	xmmword ptr [rbp - 0x260], xmm0
0x457aae:	sub	rax, rdx
0x457ab1:	movaps	xmmword ptr [rbp - 0x2a0], xmm7
0x457ab8:	movdqa	xmm7, xmmword ptr [rbp - 0x380]
0x457ac0:	movdqa	xmm4, xmmword ptr [rbp - 0x310]
0x457ac8:	mov	rdx, r13
0x457acb:	movdqa	xmm5, xmmword ptr [rbp - 0x300]
0x457ad3:	movdqa	xmm6, xmmword ptr [rbp - 0x2f0]
0x457adb:	mov	qword ptr [r14 + 0x18], rax
0x457adf:	movaps	xmmword ptr [rbp - 0x290], xmm7
0x457ae6:	movdqa	xmm7, xmmword ptr [rbp - 0x370]
0x457aee:	movdqa	xmm0, xmmword ptr [rbp - 0x2d0]
0x457af6:	movaps	xmmword ptr [rbp - 0x250], xmm1
0x457afd:	movaps	xmmword ptr [rbp - 0x280], xmm7
0x457b04:	movdqa	xmm7, xmmword ptr [rbp - 0x360]
0x457b0c:	movaps	xmmword ptr [rbp - 0x240], xmm2
0x457b13:	movaps	xmmword ptr [rbp - 0x270], xmm7
0x457b1a:	movdqa	xmm7, xmmword ptr [rbp - 0x2e0]
0x457b22:	movaps	xmmword ptr [rbp - 0x230], xmm3
0x457b29:	movaps	xmmword ptr [rbp - 0x220], xmm4
0x457b30:	movaps	xmmword ptr [rbp - 0x210], xmm5
0x457b37:	movaps	xmmword ptr [rbp - 0x200], xmm6
0x457b3e:	movaps	xmmword ptr [rbp - 0x1f0], xmm7
0x457b45:	movaps	xmmword ptr [rbp - 0x1e0], xmm0
0x457b4c:	movdqa	xmm1, xmmword ptr [rbp - 0x2c0]
0x457b54:	movaps	xmmword ptr [rbp - 0x1d0], xmm1
0x457b5b:	call	0x457320
0x457b60:	cmp	eax, 7
0x457b63:	jne	0x457a2b
0x457b69:	mov	rsi, r12
0x457b6c:	mov	rdi, r15
0x457b6f:	call	0x455310
0x457b74:	mov	rsi, qword ptr [rbp - 0x218]
0x457b7b:	mov	rdi, qword ptr [rbp - 0x220]
0x457b82:	mov	rdx, rax
0x457b85:	xor	eax, eax
0x457b87:	call	0x457840
0x457b8c:	rdsspq	rax
0x457b91:	test	rax, rax
0x457b94:	je	0x457bbc
0x457b96:	mov	rax, qword ptr [rbp - 0x1c0]
0x457b9d:	mov	ecx, 0xff
0x457ba2:	jmp	0x457baf
0x457ba4:	incsspq	rcx
0x457ba9:	sub	rax, 0xff
0x457baf:	cmp	rax, 0xff
0x457bb5:	ja	0x457ba4
0x457bb7:	incsspq	rax
0x457bbc:	mov	rcx, rdx
0x457bbf:	mov	qword ptr [rbp + rdx + 8], rsi
0x457bc4:	mov	rax, qword ptr [rbp - 0x38]
0x457bc8:	lea	rcx, [rbp + rcx + 8]
0x457bcd:	mov	rdx, qword ptr [rbp - 0x30]
0x457bd1:	mov	rbx, qword ptr [rbp - 0x28]
0x457bd5:	mov	r12, qword ptr [rbp - 0x20]
0x457bd9:	mov	r13, qword ptr [rbp - 0x18]
0x457bdd:	mov	r14, qword ptr [rbp - 0x10]
0x457be1:	mov	r15, qword ptr [rbp - 8]
0x457be5:	mov	rbp, qword ptr [rbp]
0x457be9:	mov	rsp, rcx
0x457bec:	pop	rcx
0x457bed:	jmp	rcx
0x457bef:	nop	
0x457bf0:	endbr64	
0x457bf4:	push	rbp
0x457bf5:	mov	rbp, rsp
0x457bf8:	push	r15
0x457bfa:	push	r14
0x457bfc:	lea	r14, [rbp - 0x220]
0x457c03:	push	r13
0x457c05:	mov	r13, rsi
0x457c08:	lea	rsi, [rbp + 0x10]
0x457c0c:	push	r12
0x457c0e:	mov	r12, rdi
0x457c11:	mov	rdi, r14
0x457c14:	push	rbx
0x457c15:	mov	rbx, rdx
0x457c18:	push	rdx
0x457c19:	push	rax
0x457c1a:	sub	rsp, 0x1f8
0x457c21:	mov	rdx, qword ptr [rbp + 8]
0x457c25:	call	0x4571a0
0x457c2a:	movdqa	xmm0, xmmword ptr [rbp - 0x220]
0x457c32:	mov	rdi, r12
0x457c35:	movdqa	xmm1, xmmword ptr [rbp - 0x210]
0x457c3d:	movdqa	xmm2, xmmword ptr [rbp - 0x200]
0x457c45:	movdqa	xmm3, xmmword ptr [rbp - 0x1f0]
0x457c4d:	mov	qword ptr [r12 + 0x10], r13
0x457c52:	lea	r13, [rbp - 0x130]
0x457c59:	movdqa	xmm4, xmmword ptr [rbp - 0x1e0]
0x457c61:	movdqa	xmm5, xmmword ptr [rbp - 0x1d0]
0x457c69:	mov	rsi, r13
0x457c6c:	mov	qword ptr [r12 + 0x18], rbx
0x457c71:	movdqa	xmm6, xmmword ptr [rbp - 0x1c0]
0x457c79:	movdqa	xmm7, xmmword ptr [rbp - 0x1b0]
0x457c81:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x457c88:	lea	rdx, [rbp - 0x228]
0x457c8f:	movdqa	xmm0, xmmword ptr [rbp - 0x1a0]
0x457c97:	movaps	xmmword ptr [rbp - 0x120], xmm1
0x457c9e:	movdqa	xmm1, xmmword ptr [rbp - 0x190]
0x457ca6:	movaps	xmmword ptr [rbp - 0x110], xmm2
0x457cad:	movdqa	xmm2, xmmword ptr [rbp - 0x180]
0x457cb5:	movaps	xmmword ptr [rbp - 0x100], xmm3
0x457cbc:	movdqa	xmm3, xmmword ptr [rbp - 0x170]
0x457cc4:	movaps	xmmword ptr [rbp - 0xf0], xmm4
0x457ccb:	movdqa	xmm4, xmmword ptr [rbp - 0x160]
0x457cd3:	movaps	xmmword ptr [rbp - 0xe0], xmm5
0x457cda:	movdqa	xmm5, xmmword ptr [rbp - 0x150]
0x457ce2:	movaps	xmmword ptr [rbp - 0xd0], xmm6
0x457ce9:	movdqa	xmm6, xmmword ptr [rbp - 0x140]
0x457cf1:	movaps	xmmword ptr [rbp - 0xc0], xmm7
0x457cf8:	movaps	xmmword ptr [rbp - 0xb0], xmm0
0x457cff:	movaps	xmmword ptr [rbp - 0xa0], xmm1
0x457d06:	movaps	xmmword ptr [rbp - 0x90], xmm2
0x457d0d:	movaps	xmmword ptr [rbp - 0x80], xmm3
0x457d11:	movaps	xmmword ptr [rbp - 0x70], xmm4
0x457d15:	movaps	xmmword ptr [rbp - 0x60], xmm5
0x457d19:	movaps	xmmword ptr [rbp - 0x50], xmm6
0x457d1d:	call	0x457460
0x457d22:	cmp	eax, 7
0x457d25:	je	0x457d3d
0x457d27:	mov	rbx, qword ptr [rbp - 0x28]
0x457d2b:	mov	r12, qword ptr [rbp - 0x20]
0x457d2f:	mov	r13, qword ptr [rbp - 0x18]
0x457d33:	mov	r14, qword ptr [rbp - 0x10]
0x457d37:	mov	r15, qword ptr [rbp - 8]
0x457d3b:	leave	
0x457d3c:	ret	
0x457d3d:	mov	rsi, r13
0x457d40:	mov	rdi, r14
0x457d43:	call	0x455310
0x457d48:	mov	rsi, qword ptr [rbp - 0x98]
0x457d4f:	mov	rdi, qword ptr [rbp - 0xa0]
0x457d56:	mov	rdx, rax
0x457d59:	xor	eax, eax
0x457d5b:	call	0x457840
0x457d60:	rdsspq	rax
0x457d65:	test	rax, rax
0x457d68:	je	0x457d96
0x457d6a:	mov	rax, qword ptr [rbp - 0x228]
0x457d71:	cmp	rax, 0xff
0x457d77:	jbe	0x457d91
0x457d79:	mov	ecx, 0xff
0x457d7e:	incsspq	rcx
0x457d83:	sub	rax, 0xff
0x457d89:	cmp	rax, 0xff
0x457d8f:	ja	0x457d7e
0x457d91:	incsspq	rax
0x457d96:	mov	rcx, rdx
0x457d99:	mov	qword ptr [rbp + rdx + 8], rsi
0x457d9e:	mov	rax, qword ptr [rbp - 0x38]
0x457da2:	lea	rcx, [rbp + rcx + 8]
0x457da7:	mov	rdx, qword ptr [rbp - 0x30]
0x457dab:	mov	rbx, qword ptr [rbp - 0x28]
0x457daf:	mov	r12, qword ptr [rbp - 0x20]
0x457db3:	mov	r13, qword ptr [rbp - 0x18]
0x457db7:	mov	r14, qword ptr [rbp - 0x10]
0x457dbb:	mov	r15, qword ptr [rbp - 8]
0x457dbf:	mov	rbp, qword ptr [rbp]
0x457dc3:	mov	rsp, rcx
0x457dc6:	pop	rcx
0x457dc7:	jmp	rcx
0x457dc9:	nop	dword ptr [rax]
0x457dd0:	endbr64	
0x457dd4:	push	rbp
0x457dd5:	mov	rbp, rsp
0x457dd8:	push	r15
0x457dda:	push	r14
0x457ddc:	lea	rsi, [rbp + 0x10]
0x457de0:	lea	r14, [rbp - 0x130]
0x457de7:	push	r13
0x457de9:	lea	r13, [rbp - 0x220]
0x457df0:	push	r12
0x457df2:	mov	r12, rdi
0x457df5:	mov	rdi, r13
0x457df8:	push	rbx
0x457df9:	push	rdx
0x457dfa:	push	rax
0x457dfb:	sub	rsp, 0x1f8
0x457e02:	mov	rdx, qword ptr [rbp + 8]
0x457e06:	call	0x4571a0
0x457e0b:	movdqa	xmm0, xmmword ptr [rbp - 0x220]
0x457e13:	mov	rsi, r14
0x457e16:	movdqa	xmm1, xmmword ptr [rbp - 0x210]
0x457e1e:	movdqa	xmm2, xmmword ptr [rbp - 0x200]
0x457e26:	movdqa	xmm3, xmmword ptr [rbp - 0x1f0]
0x457e2e:	lea	rdx, [rbp - 0x228]
0x457e35:	mov	rdi, r12
0x457e38:	movdqa	xmm4, xmmword ptr [rbp - 0x1e0]
0x457e40:	movdqa	xmm5, xmmword ptr [rbp - 0x1d0]
0x457e48:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x457e4f:	movdqa	xmm6, xmmword ptr [rbp - 0x1c0]
0x457e57:	movdqa	xmm7, xmmword ptr [rbp - 0x1b0]
0x457e5f:	movaps	xmmword ptr [rbp - 0x120], xmm1
0x457e66:	movdqa	xmm0, xmmword ptr [rbp - 0x1a0]
0x457e6e:	movdqa	xmm1, xmmword ptr [rbp - 0x190]
0x457e76:	movaps	xmmword ptr [rbp - 0x110], xmm2
0x457e7d:	movaps	xmmword ptr [rbp - 0x100], xmm3
0x457e84:	movdqa	xmm2, xmmword ptr [rbp - 0x180]
0x457e8c:	movdqa	xmm3, xmmword ptr [rbp - 0x170]
0x457e94:	movaps	xmmword ptr [rbp - 0xf0], xmm4
0x457e9b:	movdqa	xmm4, xmmword ptr [rbp - 0x160]
0x457ea3:	cmp	qword ptr [r12 + 0x10], 0
0x457ea9:	movaps	xmmword ptr [rbp - 0xe0], xmm5
0x457eb0:	movdqa	xmm5, xmmword ptr [rbp - 0x150]
0x457eb8:	movaps	xmmword ptr [rbp - 0xd0], xmm6
0x457ebf:	movdqa	xmm6, xmmword ptr [rbp - 0x140]
0x457ec7:	movaps	xmmword ptr [rbp - 0xc0], xmm7
0x457ece:	movaps	xmmword ptr [rbp - 0xb0], xmm0
0x457ed5:	movaps	xmmword ptr [rbp - 0xa0], xmm1
0x457edc:	movaps	xmmword ptr [rbp - 0x90], xmm2
0x457ee3:	movaps	xmmword ptr [rbp - 0x80], xmm3
0x457ee7:	movaps	xmmword ptr [rbp - 0x70], xmm4
0x457eeb:	movaps	xmmword ptr [rbp - 0x60], xmm5
0x457eef:	movaps	xmmword ptr [rbp - 0x50], xmm6
0x457ef3:	jne	0x457f9d
0x457ef9:	call	0x457320
0x457efe:	cmp	eax, 7
0x457f01:	jne	0x42d071
0x457f07:	mov	rsi, r14
0x457f0a:	mov	rdi, r13
0x457f0d:	call	0x455310
0x457f12:	mov	rsi, qword ptr [rbp - 0x98]
0x457f19:	mov	rdi, qword ptr [rbp - 0xa0]
0x457f20:	xor	edx, edx
0x457f22:	call	0x457840
0x457f27:	rdsspq	rdx
0x457f2c:	test	rdx, rdx
0x457f2f:	je	0x457f6a
0x457f31:	mov	rdx, qword ptr [rbp - 0x228]
0x457f38:	cmp	rdx, 0xff
0x457f3f:	jbe	0x457f65
0x457f41:	mov	ecx, 0xff
0x457f46:	nop	word ptr cs:[rax + rax]
0x457f50:	incsspq	rcx
0x457f55:	sub	rdx, 0xff
0x457f5c:	cmp	rdx, 0xff
0x457f63:	ja	0x457f50
0x457f65:	incsspq	rdx
0x457f6a:	mov	rcx, rax
0x457f6d:	mov	qword ptr [rbp + rax + 8], rsi
0x457f72:	mov	rax, qword ptr [rbp - 0x38]
0x457f76:	lea	rcx, [rbp + rcx + 8]
0x457f7b:	mov	rdx, qword ptr [rbp - 0x30]
0x457f7f:	mov	rbx, qword ptr [rbp - 0x28]
0x457f83:	mov	r12, qword ptr [rbp - 0x20]
0x457f87:	mov	r13, qword ptr [rbp - 0x18]
0x457f8b:	mov	r14, qword ptr [rbp - 0x10]
0x457f8f:	mov	r15, qword ptr [rbp - 8]
0x457f93:	mov	rbp, qword ptr [rbp]
0x457f97:	mov	rsp, rcx
0x457f9a:	pop	rcx
0x457f9b:	jmp	rcx
0x457f9d:	call	0x457460
0x457fa2:	jmp	0x457efe
0x457fa7:	nop	word ptr [rax + rax]
0x457fb0:	endbr64	
0x457fb4:	push	rbp
0x457fb5:	mov	rbp, rsp
0x457fb8:	push	r15
0x457fba:	push	r14
0x457fbc:	push	r13
0x457fbe:	push	r12
0x457fc0:	mov	r12, rdi
0x457fc3:	push	rbx
0x457fc4:	push	rdx
0x457fc5:	push	rax
0x457fc6:	sub	rsp, 0x1f8
0x457fcd:	cmp	qword ptr [rdi + 0x10], 0
0x457fd2:	jne	0x457fef
0x457fd4:	call	0x457850
0x457fd9:	mov	rbx, qword ptr [rbp - 0x28]
0x457fdd:	mov	r12, qword ptr [rbp - 0x20]
0x457fe1:	mov	r13, qword ptr [rbp - 0x18]
0x457fe5:	mov	r14, qword ptr [rbp - 0x10]
0x457fe9:	mov	r15, qword ptr [rbp - 8]
0x457fed:	leave	
0x457fee:	ret	
0x457fef:	mov	rdx, qword ptr [rbp + 8]
0x457ff3:	lea	r13, [rbp - 0x220]
0x457ffa:	lea	rsi, [rbp + 0x10]
0x457ffe:	mov	ebx, 0x3c
0x458003:	mov	rdi, r13
0x458006:	lea	r14, [rbp - 0x130]
0x45800d:	call	0x4571a0
0x458012:	mov	rcx, rbx
0x458015:	mov	rsi, r13
0x458018:	lea	rdi, [rbp - 0x130]
0x45801f:	rep movsd	dword ptr [rdi], dword ptr [rsi]
0x458021:	lea	rdx, [rbp - 0x228]
0x458028:	mov	rsi, r14
0x45802b:	mov	rdi, r12
0x45802e:	mov	rbx, rcx
0x458031:	call	0x457460
0x458036:	cmp	eax, 7
0x458039:	jne	0x42d076
0x45803f:	mov	rsi, r14
0x458042:	mov	rdi, r13
0x458045:	call	0x455310
0x45804a:	mov	rsi, qword ptr [rbp - 0x98]
0x458051:	mov	rdi, qword ptr [rbp - 0xa0]
0x458058:	mov	rdx, rax
0x45805b:	call	0x457840
0x458060:	rdsspq	rbx
0x458065:	test	rbx, rbx
0x458068:	je	0x458096
0x45806a:	mov	rax, qword ptr [rbp - 0x228]
0x458071:	cmp	rax, 0xff
0x458077:	jbe	0x458091
0x458079:	mov	ecx, 0xff
0x45807e:	incsspq	rcx
0x458083:	sub	rax, 0xff
0x458089:	cmp	rax, 0xff
0x45808f:	ja	0x45807e
0x458091:	incsspq	rax
0x458096:	mov	rcx, rdx
0x458099:	mov	qword ptr [rbp + rdx + 8], rsi
0x45809e:	mov	rax, qword ptr [rbp - 0x38]
0x4580a2:	lea	rcx, [rbp + rcx + 8]
0x4580a7:	mov	rdx, qword ptr [rbp - 0x30]
0x4580ab:	mov	rbx, qword ptr [rbp - 0x28]
0x4580af:	mov	r12, qword ptr [rbp - 0x20]
0x4580b3:	mov	r13, qword ptr [rbp - 0x18]
0x4580b7:	mov	r14, qword ptr [rbp - 0x10]
0x4580bb:	mov	r15, qword ptr [rbp - 8]
0x4580bf:	mov	rbp, qword ptr [rbp]
0x4580c3:	mov	rsp, rcx
0x4580c6:	pop	rcx
0x4580c7:	jmp	rcx
0x4580c9:	nop	dword ptr [rax]
0x4580d0:	endbr64	
0x4580d4:	mov	rax, qword ptr [rdi + 8]
0x4580d8:	mov	rsi, rdi
0x4580db:	test	rax, rax
0x4580de:	je	0x4580f0
0x4580e0:	mov	edi, 1
0x4580e5:	jmp	rax
0x4580e7:	nop	word ptr [rax + rax]
0x4580f0:	ret	
0x4580f1:	nop	word ptr cs:[rax + rax]
0x4580fc:	nop	dword ptr [rax]
0x458100:	endbr64	
0x458104:	push	rbp
0x458105:	mov	rbp, rsp
0x458108:	push	r15
0x45810a:	push	r14
0x45810c:	mov	r14, rdi
0x45810f:	push	r13
0x458111:	mov	r13, rsi
0x458114:	lea	rsi, [rbp + 0x10]
0x458118:	push	r12
0x45811a:	lea	r12, [rbp - 0x1b0]
0x458121:	push	rbx
0x458122:	lea	rbx, [rbp - 0x2a0]
0x458129:	mov	rdi, rbx
0x45812c:	sub	rsp, 0x278
0x458133:	mov	rdx, qword ptr [rbp + 8]
0x458137:	call	0x4571a0
0x45813c:	jmp	0x4581c9
0x458141:	nop	dword ptr [rax]
0x458148:	mov	rsi, r13
0x45814b:	mov	rdi, rbx
0x45814e:	call	r14
0x458151:	test	eax, eax
0x458153:	jne	0x4581e8
0x458159:	cmp	r15d, 5
0x45815d:	je	0x4581ee
0x458163:	mov	rsi, r12
0x458166:	mov	rdi, rbx
0x458169:	call	0x455e40
0x45816e:	mov	rax, qword ptr [rbp - 0x48]
0x458172:	xor	edx, edx
0x458174:	mov	rcx, rax
0x458177:	shl	rcx, 4
0x45817b:	cmp	dword ptr [rbp + rcx - 0x1a8], 6
0x458183:	je	0x4581c2
0x458185:	cmp	eax, 0x11
0x458188:	jg	0x42d07b
0x45818e:	cdqe	
0x458190:	lea	rsi, [rip + 0x8e439]
0x458197:	movzx	ecx, byte ptr [rsi + rax]
0x45819b:	mov	rdx, qword ptr [rbp + rax*8 - 0x2a0]
0x4581a3:	test	byte ptr [rbp - 0x1d9], 0x40
0x4581aa:	je	0x4581b6
0x4581ac:	cmp	byte ptr [rbp + rax - 0x1c8], 0
0x4581b4:	jne	0x4581c2
0x4581b6:	cmp	cl, 8
0x4581b9:	jne	0x42d07b
0x4581bf:	mov	rdx, qword ptr [rdx]
0x4581c2:	mov	qword ptr [rbp - 0x208], rdx
0x4581c9:	mov	rsi, r12
0x4581cc:	mov	rdi, rbx
0x4581cf:	call	0x456b30
0x4581d4:	mov	r15d, eax
0x4581d7:	test	eax, eax
0x4581d9:	je	0x458148
0x4581df:	cmp	eax, 5
0x4581e2:	je	0x458148
0x4581e8:	mov	r15d, 3
0x4581ee:	add	rsp, 0x278
0x4581f5:	mov	eax, r15d
0x4581f8:	pop	rbx
0x4581f9:	pop	r12
0x4581fb:	pop	r13
0x4581fd:	pop	r14
0x4581ff:	pop	r15
0x458201:	pop	rbp
0x458202:	ret	
0x458203:	nop	word ptr cs:[rax + rax]
0x45820d:	nop	dword ptr [rax]
0x458210:	endbr64	
0x458214:	mov	rcx, qword ptr [rdx + 8]
0x458218:	mov	eax, 1
0x45821d:	cmp	qword ptr [rsi + 8], rcx
0x458221:	ja	0x458225
0x458223:	sbb	eax, eax
0x458225:	ret	
0x458226:	nop	word ptr cs:[rax + rax]
0x458230:	push	r15
0x458232:	movsxd	r9, ecx
0x458235:	mov	r15, rdi
0x458238:	push	r14
0x45823a:	lea	ecx, [r9 + r9 + 1]
0x45823f:	push	r13
0x458241:	mov	r13d, r8d
0x458244:	push	r12
0x458246:	mov	r12, rdx
0x458249:	push	rbp
0x45824a:	push	rbx
0x45824b:	sub	rsp, 0x18
0x45824f:	mov	qword ptr [rsp], rsi
0x458253:	cmp	ecx, r8d
0x458256:	jl	0x4582be
0x458258:	jmp	0x4582d8
0x45825a:	nop	word ptr [rax + rax]
0x458260:	lea	r14, [r12 + rax + 8]
0x458265:	mov	dword ptr [rsp + 0xc], r9d
0x45826a:	mov	rsi, qword ptr [rbx]
0x45826d:	mov	rdi, r15
0x458270:	mov	rdx, qword ptr [r14]
0x458273:	mov	rax, qword ptr [rsp]
0x458277:	mov	dword ptr [rsp + 8], ecx
0x45827b:	call	rax
0x45827d:	mov	ecx, dword ptr [rsp + 8]
0x458281:	movsxd	r9, dword ptr [rsp + 0xc]
0x458286:	test	eax, eax
0x458288:	cmovns	ebp, ecx
0x45828b:	cmovs	rbx, r14
0x45828f:	lea	r14, [r12 + r9*8]
0x458293:	mov	rdx, qword ptr [rbx]
0x458296:	mov	rax, qword ptr [rsp]
0x45829a:	mov	rdi, r15
0x45829d:	mov	rsi, qword ptr [r14]
0x4582a0:	call	rax
0x4582a2:	test	eax, eax
0x4582a4:	jns	0x4582d8
0x4582a6:	mov	rax, qword ptr [r14]
0x4582a9:	mov	rdx, qword ptr [rbx]
0x4582ac:	lea	ecx, [rbp + rbp + 1]
0x4582b0:	mov	qword ptr [r14], rdx
0x4582b3:	mov	qword ptr [rbx], rax
0x4582b6:	cmp	r13d, ecx
0x4582b9:	jle	0x4582d8
0x4582bb:	movsxd	r9, ebp
0x4582be:	movsxd	rax, ecx
0x4582c1:	lea	ebp, [rcx + 1]
0x4582c4:	shl	rax, 3
0x4582c8:	lea	rbx, [r12 + rax]
0x4582cc:	cmp	ebp, r13d
0x4582cf:	jl	0x458260
0x4582d1:	mov	ebp, ecx
0x4582d3:	jmp	0x45828f
0x4582d5:	nop	dword ptr [rax]
0x4582d8:	add	rsp, 0x18
0x4582dc:	pop	rbx
0x4582dd:	pop	rbp
0x4582de:	pop	r12
0x4582e0:	pop	r13
0x4582e2:	pop	r14
0x4582e4:	pop	r15
0x4582e6:	ret	
0x4582e7:	nop	word ptr [rax + rax]
0x4582f0:	push	r15
0x4582f2:	push	r14
0x4582f4:	lea	r14, [rdx + 0x10]
0x4582f8:	push	r13
0x4582fa:	mov	r13, rsi
0x4582fd:	push	r12
0x4582ff:	mov	r12, rdi
0x458302:	push	rbp
0x458303:	mov	rbp, rdx
0x458306:	push	rbx
0x458307:	sub	rsp, 0x18
0x45830b:	mov	rax, qword ptr [rdx + 8]
0x45830f:	mov	rbx, rax
0x458312:	mov	qword ptr [rsp + 8], rax
0x458317:	mov	r15d, eax
0x45831a:	shr	rbx, 1
0x45831d:	sub	ebx, 1
0x458320:	js	0x458340
0x458322:	nop	word ptr [rax + rax]
0x458328:	mov	ecx, ebx
0x45832a:	mov	r8d, r15d
0x45832d:	mov	rdx, r14
0x458330:	mov	rsi, r13
0x458333:	mov	rdi, r12
0x458336:	call	0x458230
0x45833b:	sub	ebx, 1
0x45833e:	jae	0x458328
0x458340:	mov	r15d, dword ptr [rsp + 8]
0x458345:	sub	r15d, 1
0x458349:	movsxd	rbx, r15d
0x45834c:	test	r15d, r15d
0x45834f:	jle	0x458385
0x458351:	nop	dword ptr [rax]
0x458358:	mov	rdx, qword ptr [rbp + rbx*8 + 0x10]
0x45835d:	mov	rax, qword ptr [rbp + 0x10]
0x458361:	mov	r8d, ebx
0x458364:	xor	ecx, ecx
0x458366:	mov	rsi, r13
0x458369:	mov	rdi, r12
0x45836c:	mov	qword ptr [rbp + 0x10], rdx
0x458370:	mov	rdx, r14
0x458373:	mov	qword ptr [rbp + rbx*8 + 0x10], rax
0x458378:	sub	rbx, 1
0x45837c:	call	0x458230
0x458381:	test	ebx, ebx
0x458383:	jg	0x458358
0x458385:	add	rsp, 0x18
0x458389:	pop	rbx
0x45838a:	pop	rbp
0x45838b:	pop	r12
0x45838d:	pop	r13
0x45838f:	pop	r14
0x458391:	pop	r15
0x458393:	ret	
0x458394:	nop	word ptr cs:[rax + rax]
0x45839f:	nop	
0x4583a0:	mov	r9, rsi
0x4583a3:	mov	r8, rcx
0x4583a6:	mov	rsi, rdx
0x4583a9:	cmp	dil, 0x50
0x4583ad:	je	0x4583f8
0x4583af:	mov	eax, edi
0x4583b1:	and	eax, 0xf
0x4583b4:	cmp	al, 0xc
0x4583b6:	ja	0x42d080
0x4583bc:	lea	rdx, [rip + 0x75a4d]
0x4583c3:	movzx	eax, al
0x4583c6:	movsxd	rax, dword ptr [rdx + rax*4]
0x4583ca:	add	rax, rdx
0x4583cd:	notrack jmp	rax
0x4583d0:	mov	rdx, qword ptr [rsi]
0x4583d3:	lea	rax, [rsi + 8]
0x4583d7:	test	rdx, rdx
0x4583da:	je	0x4583f0
0x4583dc:	mov	ecx, edi
0x4583de:	and	ecx, 0x70
0x4583e1:	cmp	cl, 0x10
0x4583e4:	cmove	r9, rsi
0x4583e8:	add	rdx, r9
0x4583eb:	test	dil, dil
0x4583ee:	js	0x458410
0x4583f0:	mov	qword ptr [r8], rdx
0x4583f3:	ret	
0x4583f4:	nop	dword ptr [rax]
0x4583f8:	lea	rax, [rdx + 7]
0x4583fc:	and	rax, 0xfffffffffffffff8
0x458400:	mov	rdx, qword ptr [rax]
0x458403:	add	rax, 8
0x458407:	mov	qword ptr [r8], rdx
0x45840a:	ret	
0x45840b:	nop	dword ptr [rax + rax]
0x458410:	mov	rdx, qword ptr [rdx]
0x458413:	mov	qword ptr [r8], rdx
0x458416:	ret	
0x458417:	nop	word ptr [rax + rax]
0x458420:	movzx	edx, word ptr [rsi]
0x458423:	lea	rax, [rsi + 2]
0x458427:	jmp	0x4583d7
0x458429:	nop	dword ptr [rax]
0x458430:	mov	edx, dword ptr [rsi]
0x458432:	lea	rax, [rsi + 4]
0x458436:	jmp	0x4583d7
0x458438:	nop	dword ptr [rax + rax]
0x458440:	movsxd	rdx, dword ptr [rsi]
0x458443:	lea	rax, [rsi + 4]
0x458447:	jmp	0x4583d7
0x458449:	nop	dword ptr [rax]
0x458450:	movsx	rdx, word ptr [rsi]
0x458454:	lea	rax, [rsi + 2]
0x458458:	jmp	0x4583d7
0x45845d:	nop	dword ptr [rax]
0x458460:	mov	rax, rsi
0x458463:	xor	edx, edx
0x458465:	xor	ecx, ecx
0x458467:	nop	word ptr [rax + rax]
0x458470:	movzx	r11d, byte ptr [rax]
0x458474:	add	rax, 1
0x458478:	mov	r10, r11
0x45847b:	and	r10d, 0x7f
0x45847f:	shl	r10, cl
0x458482:	add	ecx, 7
0x458485:	or	rdx, r10
0x458488:	test	r11b, r11b
0x45848b:	js	0x458470
0x45848d:	jmp	0x4583d7
0x458492:	nop	word ptr [rax + rax]
0x458498:	mov	rax, rsi
0x45849b:	xor	edx, edx
0x45849d:	xor	ecx, ecx
0x45849f:	nop	
0x4584a0:	movzx	r11d, byte ptr [rax]
0x4584a4:	add	rax, 1
0x4584a8:	mov	r10, r11
0x4584ab:	and	r10d, 0x7f
0x4584af:	shl	r10, cl
0x4584b2:	add	ecx, 7
0x4584b5:	or	rdx, r10
0x4584b8:	test	r11b, r11b
0x4584bb:	js	0x4584a0
0x4584bd:	cmp	ecx, 0x3f
0x4584c0:	ja	0x4583d7
0x4584c6:	and	r11d, 0x40
0x4584ca:	je	0x4583d7
0x4584d0:	mov	r10, 0xffffffffffffffff
0x4584d7:	shl	r10, cl
0x4584da:	or	rdx, r10
0x4584dd:	jmp	0x4583dc
0x4584e2:	nop	word ptr cs:[rax + rax]
0x4584ed:	nop	dword ptr [rax]
0x4584f0:	push	rbp
0x4584f1:	mov	rbp, rdi
0x4584f4:	push	rbx
0x4584f5:	lea	rbx, [rdi + 9]
0x4584f9:	mov	rdi, rbx
0x4584fc:	sub	rsp, 0x18
0x458500:	call	0x4039e0
0x458505:	movzx	ecx, byte ptr [rbp + 8]
0x458509:	lea	rax, [rbx + rax + 1]
0x45850e:	cmp	cl, 3
0x458511:	ja	0x4585f0
0x458517:	cmp	byte ptr [rbp + 9], 0x7a
0x45851b:	je	0x458530
0x45851d:	xor	r8d, r8d
0x458520:	add	rsp, 0x18
0x458524:	mov	eax, r8d
0x458527:	pop	rbx
0x458528:	pop	rbp
0x458529:	ret	
0x45852a:	nop	word ptr [rax + rax]
0x458530:	add	rax, 1
0x458534:	cmp	byte ptr [rax - 1], 0
0x458538:	js	0x458530
0x45853a:	nop	word ptr [rax + rax]
0x458540:	mov	rdx, rax
0x458543:	add	rax, 1
0x458547:	cmp	byte ptr [rax - 1], 0
0x45854b:	js	0x458540
0x45854d:	cmp	cl, 1
0x458550:	je	0x4585e0
0x458556:	nop	word ptr cs:[rax + rax]
0x458560:	add	rax, 1
0x458564:	cmp	byte ptr [rax - 1], 0
0x458568:	js	0x458560
0x45856a:	lea	rbx, [rbp + 0xa]
0x45856e:	nop	
0x458570:	add	rax, 1
0x458574:	cmp	byte ptr [rax - 1], 0
0x458578:	js	0x458570
0x45857a:	movzx	edx, byte ptr [rbp + 0xa]
0x45857e:	lea	rbp, [rsp + 8]
0x458583:	cmp	dl, 0x52
0x458586:	jne	0x4585ab
0x458588:	jmp	0x4585d0
0x45858a:	nop	word ptr [rax + rax]
0x458590:	cmp	dl, 0x4c
0x458593:	je	0x45859a
0x458595:	cmp	dl, 0x42
0x458598:	jne	0x45851d
0x45859a:	movzx	edx, byte ptr [rbx + 1]
0x45859e:	add	rbx, 1
0x4585a2:	add	rax, 1
0x4585a6:	cmp	dl, 0x52
0x4585a9:	je	0x4585d0
0x4585ab:	cmp	dl, 0x50
0x4585ae:	jne	0x458590
0x4585b0:	movzx	edi, byte ptr [rax]
0x4585b3:	lea	rdx, [rax + 1]
0x4585b7:	mov	rcx, rbp
0x4585ba:	xor	esi, esi
0x4585bc:	add	rbx, 1
0x4585c0:	and	edi, 0x7f
0x4585c3:	call	0x4583a0
0x4585c8:	movzx	edx, byte ptr [rbx]
0x4585cb:	cmp	dl, 0x52
0x4585ce:	jne	0x4585ab
0x4585d0:	movzx	r8d, byte ptr [rax]
0x4585d4:	add	rsp, 0x18
0x4585d8:	pop	rbx
0x4585d9:	pop	rbp
0x4585da:	mov	eax, r8d
0x4585dd:	ret	
0x4585de:	nop	
0x4585e0:	lea	rax, [rdx + 2]
0x4585e4:	jmp	0x45856a
0x4585e9:	nop	dword ptr [rax]
0x4585f0:	cmp	byte ptr [rax], 8
0x4585f3:	mov	r8d, 0xff
0x4585f9:	jne	0x458520
0x4585ff:	cmp	byte ptr [rax + 1], 0
0x458603:	jne	0x458520
0x458609:	add	rax, 2
0x45860d:	jmp	0x458517
0x458612:	nop	word ptr cs:[rax + rax]
0x45861d:	nop	dword ptr [rax]
0x458620:	push	r15
0x458622:	push	r14
0x458624:	push	r13
0x458626:	push	r12
0x458628:	push	rbp
0x458629:	push	rbx
0x45862a:	sub	rsp, 0x28
0x45862e:	mov	ebp, dword ptr [rsi]
0x458630:	mov	qword ptr [rsp], rdi
0x458634:	test	ebp, ebp
0x458636:	je	0x4587fd
0x45863c:	mov	rbx, rsi
0x45863f:	xor	r13d, r13d
0x458642:	xor	r14d, r14d
0x458645:	xor	ecx, ecx
0x458647:	mov	qword ptr [rsp + 8], 0
0x458650:	jmp	0x45869c
0x458652:	nop	word ptr [rax + rax]
0x458658:	jbe	0x458788
0x45865e:	mov	edx, 0xffffffff
0x458663:	cmp	al, 3
0x458665:	jne	0x458770
0x45866b:	mov	rax, qword ptr [rsp + 0x18]
0x458670:	mov	rcx, r12
0x458673:	test	rax, rdx
0x458676:	je	0x45868d
0x458678:	mov	rsi, qword ptr [rsp]
0x45867c:	add	qword ptr [rsp + 8], 1
0x458682:	cmp	qword ptr [rsi], rax
0x458685:	jbe	0x45868a
0x458687:	mov	qword ptr [rsi], rax
0x45868a:	mov	rcx, r12
0x45868d:	lea	rbx, [rbx + rbp + 4]
0x458692:	mov	ebp, dword ptr [rbx]
0x458694:	test	ebp, ebp
0x458696:	je	0x4587e9
0x45869c:	movsxd	rax, dword ptr [rbx + 4]
0x4586a0:	test	eax, eax
0x4586a2:	je	0x45868d
0x4586a4:	lea	r9, [rbx + 4]
0x4586a8:	mov	r15d, r14d
0x4586ab:	sub	r9, rax
0x4586ae:	mov	r12, r9
0x4586b1:	cmp	r9, rcx
0x4586b4:	je	0x458726
0x4586b6:	mov	rdi, r9
0x4586b9:	call	0x4584f0
0x4586be:	mov	r14d, eax
0x4586c1:	cmp	eax, 0xff
0x4586c6:	je	0x4587e0
0x4586cc:	mov	r15d, eax
0x4586cf:	cmp	al, 0xff
0x4586d1:	je	0x458768
0x4586d7:	and	eax, 0x70
0x4586da:	cmp	al, 0x20
0x4586dc:	je	0x4587d0
0x4586e2:	jbe	0x458798
0x4586e8:	cmp	al, 0x30
0x4586ea:	jne	0x458760
0x4586ec:	mov	rax, qword ptr [rsp]
0x4586f0:	mov	r13, qword ptr [rax + 0x10]
0x4586f4:	nop	dword ptr [rax]
0x4586f8:	mov	rax, qword ptr [rsp]
0x4586fc:	movzx	eax, word ptr [rax + 0x20]
0x458700:	mov	edx, eax
0x458702:	and	dx, 0x7f8
0x458707:	cmp	dx, 0x7f8
0x45870c:	je	0x4587a8
0x458712:	shr	ax, 3
0x458716:	movzx	eax, al
0x458719:	cmp	eax, r14d
0x45871c:	je	0x458726
0x45871e:	mov	rax, qword ptr [rsp]
0x458722:	or	byte ptr [rax + 0x20], 4
0x458726:	lea	rcx, [rsp + 0x18]
0x45872b:	lea	rdx, [rbx + 8]
0x45872f:	movzx	edi, r14b
0x458733:	mov	rsi, r13
0x458736:	call	0x4583a0
0x45873b:	cmp	r15b, 0xff
0x45873f:	je	0x4587c8
0x458745:	mov	eax, r15d
0x458748:	and	eax, 7
0x45874b:	cmp	al, 2
0x45874d:	jne	0x458658
0x458753:	mov	edx, 0xffff
0x458758:	jmp	0x45866b
0x45875d:	nop	dword ptr [rax]
0x458760:	cmp	al, 0x50
0x458762:	jne	0x45880d
0x458768:	xor	r13d, r13d
0x45876b:	jmp	0x4586f8
0x45876d:	nop	dword ptr [rax]
0x458770:	cmp	al, 4
0x458772:	jne	0x458808
0x458778:	mov	rdx, 0xffffffffffffffff
0x45877f:	jmp	0x45866b
0x458784:	nop	dword ptr [rax]
0x458788:	test	al, al
0x45878a:	je	0x458778
0x45878c:	jmp	0x42d086
0x458791:	nop	dword ptr [rax]
0x458798:	test	r14b, 0x60
0x45879c:	jne	0x42d086
0x4587a2:	jmp	0x458768
0x4587a4:	nop	dword ptr [rax]
0x4587a8:	movzx	edx, r15b
0x4587ac:	mov	rcx, qword ptr [rsp]
0x4587b0:	and	ax, 0xf807
0x4587b4:	shl	edx, 3
0x4587b7:	or	eax, edx
0x4587b9:	mov	word ptr [rcx + 0x20], ax
0x4587bd:	jmp	0x458726
0x4587c2:	nop	word ptr [rax + rax]
0x4587c8:	xor	edx, edx
0x4587ca:	jmp	0x45866b
0x4587cf:	nop	
0x4587d0:	mov	rax, qword ptr [rsp]
0x4587d4:	mov	r13, qword ptr [rax + 8]
0x4587d8:	jmp	0x4586f8
0x4587dd:	nop	dword ptr [rax]
0x4587e0:	mov	qword ptr [rsp + 8], 0xffffffffffffffff
0x4587e9:	mov	rax, qword ptr [rsp + 8]
0x4587ee:	add	rsp, 0x28
0x4587f2:	pop	rbx
0x4587f3:	pop	rbp
0x4587f4:	pop	r12
0x4587f6:	pop	r13
0x4587f8:	pop	r14
0x4587fa:	pop	r15
0x4587fc:	ret	
0x4587fd:	mov	qword ptr [rsp + 8], 0
0x458806:	jmp	0x4587e9
0x458808:	jmp	0x42d086
0x45880d:	jmp	0x42d086
0x458812:	nop	word ptr cs:[rax + rax]
0x45881d:	nop	dword ptr [rax]
0x458820:	endbr64	
0x458824:	push	r12
0x458826:	push	rbp
0x458827:	push	rbx
0x458828:	mov	rbx, rdx
0x45882b:	sub	rsp, 0x10
0x45882f:	movzx	eax, word ptr [rdi + 0x20]
0x458833:	shr	ax, 3
0x458837:	movzx	r12d, al
0x45883b:	cmp	al, 0xff
0x45883d:	je	0x4588a5
0x45883f:	mov	edx, eax
0x458841:	and	edx, 0x70
0x458844:	cmp	dl, 0x20
0x458847:	je	0x4588c0
0x458849:	jbe	0x4588b0
0x45884b:	cmp	dl, 0x30
0x45884e:	jne	0x4588a0
0x458850:	mov	rbp, qword ptr [rdi + 0x10]
0x458854:	nop	dword ptr [rax]
0x458858:	lea	rdx, [rsi + 8]
0x45885c:	mov	rcx, rsp
0x45885f:	mov	rsi, rbp
0x458862:	mov	edi, r12d
0x458865:	call	0x4583a0
0x45886a:	lea	rdx, [rbx + 8]
0x45886e:	mov	rsi, rbp
0x458871:	mov	edi, r12d
0x458874:	lea	rcx, [rsp + 8]
0x458879:	call	0x4583a0
0x45887e:	mov	rbx, qword ptr [rsp + 8]
0x458883:	mov	eax, 1
0x458888:	cmp	qword ptr [rsp], rbx
0x45888c:	ja	0x458890
0x45888e:	sbb	eax, eax
0x458890:	add	rsp, 0x10
0x458894:	pop	rbx
0x458895:	pop	rbp
0x458896:	pop	r12
0x458898:	ret	
0x458899:	nop	dword ptr [rax]
0x4588a0:	cmp	dl, 0x50
0x4588a3:	jne	0x4588c6
0x4588a5:	xor	ebp, ebp
0x4588a7:	jmp	0x458858
0x4588a9:	nop	dword ptr [rax]
0x4588b0:	test	al, 0x60
0x4588b2:	jne	0x42d08b
0x4588b8:	jmp	0x4588a5
0x4588ba:	nop	word ptr [rax + rax]
0x4588c0:	mov	rbp, qword ptr [rdi + 8]
0x4588c4:	jmp	0x458858
0x4588c6:	jmp	0x42d08b
0x4588cb:	nop	dword ptr [rax + rax]
0x4588d0:	endbr64	
0x4588d4:	push	r12
0x4588d6:	mov	r12, rdi
0x4588d9:	lea	rdi, [rsi + 4]
0x4588dd:	push	rbp
0x4588de:	mov	rbp, rsi
0x4588e1:	push	rbx
0x4588e2:	mov	rbx, rdx
0x4588e5:	sub	rsp, 0x10
0x4588e9:	movsxd	rax, dword ptr [rsi + 4]
0x4588ed:	sub	rdi, rax
0x4588f0:	call	0x4584f0
0x4588f5:	lea	rdx, [rbp + 8]
0x4588f9:	movzx	edi, al
0x4588fc:	cmp	al, 0xff
0x4588fe:	je	0x4589ad
0x458904:	mov	ecx, eax
0x458906:	and	ecx, 0x70
0x458909:	cmp	cl, 0x20
0x45890c:	je	0x4589d8
0x458912:	jbe	0x4589b8
0x458918:	cmp	cl, 0x30
0x45891b:	jne	0x4589a8
0x458921:	mov	rsi, qword ptr [r12 + 0x10]
0x458926:	nop	word ptr cs:[rax + rax]
0x458930:	mov	rcx, rsp
0x458933:	call	0x4583a0
0x458938:	movsxd	rax, dword ptr [rbx + 4]
0x45893c:	lea	rdi, [rbx + 4]
0x458940:	sub	rdi, rax
0x458943:	call	0x4584f0
0x458948:	lea	rdx, [rbx + 8]
0x45894c:	movzx	edi, al
0x45894f:	cmp	al, 0xff
0x458951:	je	0x45899d
0x458953:	mov	ecx, eax
0x458955:	and	ecx, 0x70
0x458958:	cmp	cl, 0x20
0x45895b:	je	0x4589e8
0x458961:	jbe	0x4589c8
0x458963:	cmp	cl, 0x30
0x458966:	jne	0x458998
0x458968:	mov	rsi, qword ptr [r12 + 0x10]
0x45896d:	nop	dword ptr [rax]
0x458970:	lea	rcx, [rsp + 8]
0x458975:	call	0x4583a0
0x45897a:	mov	rbx, qword ptr [rsp + 8]
0x45897f:	mov	eax, 1
0x458984:	cmp	qword ptr [rsp], rbx
0x458988:	ja	0x45898c
0x45898a:	sbb	eax, eax
0x45898c:	add	rsp, 0x10
0x458990:	pop	rbx
0x458991:	pop	rbp
0x458992:	pop	r12
0x458994:	ret	
0x458995:	nop	dword ptr [rax]
0x458998:	cmp	cl, 0x50
0x45899b:	jne	0x4589f4
0x45899d:	xor	esi, esi
0x45899f:	jmp	0x458970
0x4589a1:	nop	dword ptr [rax]
0x4589a8:	cmp	cl, 0x50
0x4589ab:	jne	0x4589ef
0x4589ad:	xor	esi, esi
0x4589af:	jmp	0x458930
0x4589b4:	nop	dword ptr [rax]
0x4589b8:	test	al, 0x60
0x4589ba:	jne	0x42d090
0x4589c0:	jmp	0x4589ad
0x4589c2:	nop	word ptr [rax + rax]
0x4589c8:	test	al, 0x60
0x4589ca:	jne	0x42d090
0x4589d0:	jmp	0x45899d
0x4589d2:	nop	word ptr [rax + rax]
0x4589d8:	mov	rsi, qword ptr [r12 + 8]
0x4589dd:	jmp	0x458930
0x4589e2:	nop	word ptr [rax + rax]
0x4589e8:	mov	rsi, qword ptr [r12 + 8]
0x4589ed:	jmp	0x458970
0x4589ef:	jmp	0x42d090
0x4589f4:	jmp	0x42d090
0x4589f9:	nop	dword ptr [rax]
0x458a00:	push	r15
0x458a02:	mov	r15, rdi
0x458a05:	push	r14
0x458a07:	push	r13
0x458a09:	push	r12
0x458a0b:	mov	r12, rsi
0x458a0e:	push	rbp
0x458a0f:	push	rbx
0x458a10:	mov	rbx, rdx
0x458a13:	sub	rsp, 0x28
0x458a17:	movzx	eax, word ptr [rdi + 0x20]
0x458a1b:	shr	ax, 3
0x458a1f:	cmp	al, 0xff
0x458a21:	je	0x458ca0
0x458a27:	mov	edx, eax
0x458a29:	movzx	r14d, al
0x458a2d:	and	edx, 0x70
0x458a30:	cmp	dl, 0x20
0x458a33:	je	0x458c90
0x458a39:	jbe	0x458c18
0x458a3f:	cmp	dl, 0x30
0x458a42:	jne	0x458c00
0x458a48:	mov	r9, qword ptr [rdi + 0x10]
0x458a4c:	nop	dword ptr [rax]
0x458a50:	mov	ebp, dword ptr [rbx]
0x458a52:	xor	r13d, r13d
0x458a55:	test	ebp, ebp
0x458a57:	je	0x458b03
0x458a5d:	nop	dword ptr [rax]
0x458a60:	movsxd	rax, dword ptr [rbx + 4]
0x458a64:	test	eax, eax
0x458a66:	je	0x458af4
0x458a6c:	test	byte ptr [r15 + 0x20], 4
0x458a71:	je	0x458b18
0x458a77:	lea	r10, [rbx + 4]
0x458a7b:	sub	r10, rax
0x458a7e:	cmp	r10, r13
0x458a81:	je	0x458b18
0x458a87:	mov	rdi, r10
0x458a8a:	mov	qword ptr [rsp], r10
0x458a8e:	call	0x4584f0
0x458a93:	mov	r10, qword ptr [rsp]
0x458a97:	cmp	al, 0xff
0x458a99:	mov	r14d, eax
0x458a9c:	mov	r11d, eax
0x458a9f:	je	0x458c68
0x458aa5:	and	eax, 0x70
0x458aa8:	cmp	al, 0x20
0x458aaa:	je	0x458c28
0x458ab0:	jbe	0x458b98
0x458ab6:	cmp	al, 0x30
0x458ab8:	jne	0x458bf0
0x458abe:	mov	r9, qword ptr [r15 + 0x10]
0x458ac2:	mov	r13, r10
0x458ac5:	test	r14d, r14d
0x458ac8:	jne	0x458c38
0x458ace:	nop	
0x458ad0:	xor	r14d, r14d
0x458ad3:	cmp	qword ptr [rbx + 8], 0
0x458ad8:	je	0x458af4
0x458ada:	mov	rax, qword ptr [r12]
0x458ade:	test	rax, rax
0x458ae1:	je	0x458af4
0x458ae3:	mov	rdx, qword ptr [rax + 8]
0x458ae7:	lea	rcx, [rdx + 1]
0x458aeb:	mov	qword ptr [rax + 8], rcx
0x458aef:	mov	qword ptr [rax + rdx*8 + 0x10], rbx
0x458af4:	lea	rbx, [rbx + rbp + 4]
0x458af9:	mov	ebp, dword ptr [rbx]
0x458afb:	test	ebp, ebp
0x458afd:	jne	0x458a60
0x458b03:	add	rsp, 0x28
0x458b07:	pop	rbx
0x458b08:	pop	rbp
0x458b09:	pop	r12
0x458b0b:	pop	r13
0x458b0d:	pop	r14
0x458b0f:	pop	r15
0x458b11:	ret	
0x458b12:	nop	word ptr [rax + rax]
0x458b18:	test	r14d, r14d
0x458b1b:	je	0x458ad0
0x458b1d:	mov	rsi, r9
0x458b20:	lea	rcx, [rsp + 0x18]
0x458b25:	lea	rdx, [rbx + 8]
0x458b29:	movzx	edi, r14b
0x458b2d:	mov	qword ptr [rsp], r9
0x458b31:	call	0x4583a0
0x458b36:	cmp	r14b, 0xff
0x458b3a:	mov	r9, qword ptr [rsp]
0x458b3e:	mov	r11d, r14d
0x458b41:	je	0x458cae
0x458b47:	mov	edx, r11d
0x458b4a:	and	edx, 7
0x458b4d:	cmp	dl, 2
0x458b50:	je	0x458bdf
0x458b56:	jbe	0x458b70
0x458b58:	mov	eax, 0xffffffff
0x458b5d:	cmp	dl, 3
0x458b60:	jne	0x458b88
0x458b62:	and	rax, qword ptr [rsp + 0x18]
0x458b67:	jne	0x458ada
0x458b6d:	jmp	0x458af4
0x458b6f:	nop	
0x458b70:	test	dl, dl
0x458b72:	jne	0x458cb5
0x458b78:	mov	rax, 0xffffffffffffffff
0x458b7f:	jmp	0x458b62
0x458b81:	nop	dword ptr [rax]
0x458b88:	cmp	dl, 4
0x458b8b:	je	0x458b78
0x458b8d:	jmp	0x42d095
0x458b92:	nop	word ptr [rax + rax]
0x458b98:	and	r11d, 0x60
0x458b9c:	jne	0x42d095
0x458ba2:	mov	r13, r10
0x458ba5:	xor	r9d, r9d
0x458ba8:	test	r14d, r14d
0x458bab:	je	0x458ad0
0x458bb1:	lea	rdx, [rbx + 8]
0x458bb5:	lea	rcx, [rsp + 0x18]
0x458bba:	movzx	edi, r14b
0x458bbe:	xor	esi, esi
0x458bc0:	mov	qword ptr [rsp], r9
0x458bc4:	call	0x4583a0
0x458bc9:	mov	r11d, r14d
0x458bcc:	mov	r9, qword ptr [rsp]
0x458bd0:	mov	edx, r11d
0x458bd3:	and	edx, 7
0x458bd6:	cmp	dl, 2
0x458bd9:	jne	0x458b56
0x458bdf:	mov	eax, 0xffff
0x458be4:	jmp	0x458b62
0x458be9:	nop	dword ptr [rax]
0x458bf0:	cmp	al, 0x50
0x458bf2:	je	0x458ba2
0x458bf4:	jmp	0x42d095
0x458bf9:	nop	dword ptr [rax]
0x458c00:	cmp	dl, 0x50
0x458c03:	jne	0x458cba
0x458c09:	xor	r9d, r9d
0x458c0c:	jmp	0x458a50
0x458c11:	nop	dword ptr [rax]
0x458c18:	test	al, 0x60
0x458c1a:	jne	0x42d095
0x458c20:	jmp	0x458c09
0x458c22:	nop	word ptr [rax + rax]
0x458c28:	mov	r9, qword ptr [r15 + 8]
0x458c2c:	mov	r13, r10
0x458c2f:	test	r14d, r14d
0x458c32:	je	0x458ad0
0x458c38:	mov	rsi, r9
0x458c3b:	lea	rcx, [rsp + 0x18]
0x458c40:	lea	rdx, [rbx + 8]
0x458c44:	movzx	edi, r14b
0x458c48:	mov	byte ptr [rsp + 0xf], r11b
0x458c4d:	mov	qword ptr [rsp], r9
0x458c51:	call	0x4583a0
0x458c56:	mov	r9, qword ptr [rsp]
0x458c5a:	movzx	r11d, byte ptr [rsp + 0xf]
0x458c60:	jmp	0x458b47
0x458c65:	nop	dword ptr [rax]
0x458c68:	lea	rcx, [rsp + 0x18]
0x458c6d:	lea	rdx, [rbx + 8]
0x458c71:	xor	esi, esi
0x458c73:	mov	edi, 0xff
0x458c78:	mov	qword ptr [rsp], r10
0x458c7c:	call	0x4583a0
0x458c81:	mov	r13, qword ptr [rsp]
0x458c85:	xor	eax, eax
0x458c87:	xor	r9d, r9d
0x458c8a:	jmp	0x458b62
0x458c8f:	nop	
0x458c90:	mov	r9, qword ptr [rdi + 8]
0x458c94:	jmp	0x458a50
0x458c99:	nop	dword ptr [rax]
0x458ca0:	xor	r9d, r9d
0x458ca3:	mov	r14d, 0xff
0x458ca9:	jmp	0x458a50
0x458cae:	xor	eax, eax
0x458cb0:	jmp	0x458b62
0x458cb5:	jmp	0x42d095
0x458cba:	jmp	0x42d095
0x458cbf:	nop	
0x458cc0:	push	r15
0x458cc2:	mov	r15, rdi
0x458cc5:	push	r14
0x458cc7:	push	r13
0x458cc9:	push	r12
0x458ccb:	mov	r12, rdx
0x458cce:	push	rbp
0x458ccf:	push	rbx
0x458cd0:	mov	rbx, rsi
0x458cd3:	sub	rsp, 0x28
0x458cd7:	movzx	eax, word ptr [rdi + 0x20]
0x458cdb:	shr	ax, 3
0x458cdf:	cmp	al, 0xff
0x458ce1:	je	0x458fb0
0x458ce7:	mov	edx, eax
0x458ce9:	movzx	r14d, al
0x458ced:	and	edx, 0x70
0x458cf0:	cmp	dl, 0x20
0x458cf3:	je	0x458fa0
0x458cf9:	jbe	0x458ed0
0x458cff:	cmp	dl, 0x30
0x458d02:	jne	0x458eb8
0x458d08:	mov	r9, qword ptr [rdi + 0x10]
0x458d0c:	nop	dword ptr [rax]
0x458d10:	mov	ebp, dword ptr [rbx]
0x458d12:	xor	r13d, r13d
0x458d15:	test	ebp, ebp
0x458d17:	jne	0x458db8
0x458d1d:	jmp	0x458ef0
0x458d22:	nop	word ptr [rax + rax]
0x458d28:	lea	r10, [rbx + 4]
0x458d2c:	sub	r10, rax
0x458d2f:	cmp	r10, r13
0x458d32:	je	0x458dcb
0x458d38:	mov	rdi, r10
0x458d3b:	mov	qword ptr [rsp], r10
0x458d3f:	call	0x4584f0
0x458d44:	mov	r10, qword ptr [rsp]
0x458d48:	cmp	al, 0xff
0x458d4a:	mov	r14d, eax
0x458d4d:	mov	r11d, eax
0x458d50:	je	0x458f60
0x458d56:	and	eax, 0x70
0x458d59:	cmp	al, 0x20
0x458d5b:	je	0x458f08
0x458d61:	jbe	0x458ea8
0x458d67:	cmp	al, 0x30
0x458d69:	jne	0x458e88
0x458d6f:	mov	r9, qword ptr [r15 + 0x10]
0x458d73:	mov	r13, r10
0x458d76:	test	r14d, r14d
0x458d79:	jne	0x458f18
0x458d7f:	nop	
0x458d80:	mov	rax, qword ptr [rbx + 8]
0x458d84:	mov	rdx, qword ptr [rbx + 0x10]
0x458d88:	xor	r14d, r14d
0x458d8b:	mov	qword ptr [rsp + 0x10], rax
0x458d90:	mov	qword ptr [rsp + 0x18], rdx
0x458d95:	test	rax, rax
0x458d98:	je	0x458da9
0x458d9a:	mov	rcx, r12
0x458d9d:	sub	rcx, rax
0x458da0:	cmp	rcx, rdx
0x458da3:	jb	0x458e4a
0x458da9:	lea	rbx, [rbx + rbp + 4]
0x458dae:	mov	ebp, dword ptr [rbx]
0x458db0:	test	ebp, ebp
0x458db2:	je	0x458ef0
0x458db8:	movsxd	rax, dword ptr [rbx + 4]
0x458dbc:	test	eax, eax
0x458dbe:	je	0x458da9
0x458dc0:	test	byte ptr [r15 + 0x20], 4
0x458dc5:	jne	0x458d28
0x458dcb:	test	r14d, r14d
0x458dce:	je	0x458d80
0x458dd0:	mov	rsi, r9
0x458dd3:	lea	rcx, [rsp + 0x10]
0x458dd8:	lea	rdx, [rbx + 8]
0x458ddc:	movzx	edi, r14b
0x458de0:	mov	qword ptr [rsp], r9
0x458de4:	call	0x4583a0
0x458de9:	mov	edi, r14d
0x458dec:	xor	esi, esi
0x458dee:	lea	rcx, [rsp + 0x18]
0x458df3:	and	edi, 0xf
0x458df6:	mov	rdx, rax
0x458df9:	call	0x4583a0
0x458dfe:	cmp	r14b, 0xff
0x458e02:	mov	r9, qword ptr [rsp]
0x458e06:	mov	r11d, r14d
0x458e09:	je	0x458fbe
0x458e0f:	mov	eax, r11d
0x458e12:	and	eax, 7
0x458e15:	cmp	al, 2
0x458e17:	je	0x458ee0
0x458e1d:	jbe	0x458e60
0x458e1f:	mov	edx, 0xffffffff
0x458e24:	cmp	al, 3
0x458e26:	jne	0x458e78
0x458e28:	mov	rax, qword ptr [rsp + 0x10]
0x458e2d:	test	rax, rdx
0x458e30:	je	0x458da9
0x458e36:	mov	rcx, r12
0x458e39:	mov	rdx, qword ptr [rsp + 0x18]
0x458e3e:	sub	rcx, rax
0x458e41:	cmp	rcx, rdx
0x458e44:	jae	0x458da9
0x458e4a:	add	rsp, 0x28
0x458e4e:	mov	rax, rbx
0x458e51:	pop	rbx
0x458e52:	pop	rbp
0x458e53:	pop	r12
0x458e55:	pop	r13
0x458e57:	pop	r14
0x458e59:	pop	r15
0x458e5b:	ret	
0x458e5c:	nop	dword ptr [rax]
0x458e60:	test	al, al
0x458e62:	jne	0x458fc5
0x458e68:	mov	rdx, 0xffffffffffffffff
0x458e6f:	jmp	0x458e28
0x458e71:	nop	dword ptr [rax]
0x458e78:	cmp	al, 4
0x458e7a:	je	0x458e68
0x458e7c:	jmp	0x42d09a
0x458e81:	nop	dword ptr [rax]
0x458e88:	cmp	al, 0x50
0x458e8a:	jne	0x458fcf
0x458e90:	mov	r13, r10
0x458e93:	xor	r9d, r9d
0x458e96:	test	r14d, r14d
0x458e99:	je	0x458d80
0x458e9f:	jmp	0x458dd0
0x458ea4:	nop	dword ptr [rax]
0x458ea8:	and	r11d, 0x60
0x458eac:	jne	0x42d09a
0x458eb2:	jmp	0x458e90
0x458eb4:	nop	dword ptr [rax]
0x458eb8:	cmp	dl, 0x50
0x458ebb:	jne	0x458fca
0x458ec1:	xor	r9d, r9d
0x458ec4:	jmp	0x458d10
0x458ec9:	nop	dword ptr [rax]
0x458ed0:	test	al, 0x60
0x458ed2:	jne	0x42d09a
0x458ed8:	jmp	0x458ec1
0x458eda:	nop	word ptr [rax + rax]
0x458ee0:	mov	edx, 0xffff
0x458ee5:	jmp	0x458e28
0x458eea:	nop	word ptr [rax + rax]
0x458ef0:	add	rsp, 0x28
0x458ef4:	xor	eax, eax
0x458ef6:	pop	rbx
0x458ef7:	pop	rbp
0x458ef8:	pop	r12
0x458efa:	pop	r13
0x458efc:	pop	r14
0x458efe:	pop	r15
0x458f00:	ret	
0x458f01:	nop	dword ptr [rax]
0x458f08:	mov	r9, qword ptr [r15 + 8]
0x458f0c:	mov	r13, r10
0x458f0f:	test	r14d, r14d
0x458f12:	je	0x458d80
0x458f18:	mov	rsi, r9
0x458f1b:	lea	rcx, [rsp + 0x10]
0x458f20:	lea	rdx, [rbx + 8]
0x458f24:	movzx	edi, r14b
0x458f28:	mov	byte ptr [rsp + 0xf], r11b
0x458f2d:	mov	qword ptr [rsp], r9
0x458f31:	call	0x4583a0
0x458f36:	mov	edi, r14d
0x458f39:	lea	rcx, [rsp + 0x18]
0x458f3e:	xor	esi, esi
0x458f40:	mov	rdx, rax
0x458f43:	and	edi, 0xf
0x458f46:	call	0x4583a0
0x458f4b:	mov	r9, qword ptr [rsp]
0x458f4f:	movzx	r11d, byte ptr [rsp + 0xf]
0x458f55:	jmp	0x458e0f
0x458f5a:	nop	word ptr [rax + rax]
0x458f60:	lea	rcx, [rsp + 0x10]
0x458f65:	lea	rdx, [rbx + 8]
0x458f69:	xor	esi, esi
0x458f6b:	mov	edi, 0xff
0x458f70:	mov	qword ptr [rsp], r10
0x458f74:	call	0x4583a0
0x458f79:	mov	edi, r14d
0x458f7c:	lea	rcx, [rsp + 0x18]
0x458f81:	xor	esi, esi
0x458f83:	mov	rdx, rax
0x458f86:	and	edi, 0xf
0x458f89:	call	0x4583a0
0x458f8e:	mov	r13, qword ptr [rsp]
0x458f92:	xor	edx, edx
0x458f94:	xor	r9d, r9d
0x458f97:	jmp	0x458e28
0x458f9c:	nop	dword ptr [rax]
0x458fa0:	mov	r9, qword ptr [rdi + 8]
0x458fa4:	jmp	0x458d10
0x458fa9:	nop	dword ptr [rax]
0x458fb0:	xor	r9d, r9d
0x458fb3:	mov	r14d, 0xff
0x458fb9:	jmp	0x458d10
0x458fbe:	xor	edx, edx
0x458fc0:	jmp	0x458e28
0x458fc5:	jmp	0x42d09a
0x458fca:	jmp	0x42d09a
0x458fcf:	jmp	0x42d09a
0x458fd4:	nop	word ptr cs:[rax + rax]
0x458fdf:	nop	
0x458fe0:	endbr64	
0x458fe4:	push	r15
0x458fe6:	mov	rcx, rdi
0x458fe9:	mov	rdi, rsi
0x458fec:	push	r14
0x458fee:	push	r13
0x458ff0:	push	r12
0x458ff2:	push	rbp
0x458ff3:	push	rbx
0x458ff4:	mov	rbx, rdx
0x458ff7:	sub	rsp, 0x58
0x458ffb:	mov	edx, dword ptr [rdx + 0x28]
0x458ffe:	mov	rax, qword ptr [rcx + 0x10]
0x459002:	mov	r8, qword ptr [rcx]
0x459005:	test	edx, edx
0x459007:	je	0x459013
0x459009:	cmp	rsi, 0x2f
0x45900d:	ja	0x459158
0x459013:	cmp	rdi, 0x19
0x459017:	jbe	0x459140
0x45901d:	mov	qword ptr [rsp + 8], 0
0x459026:	xor	r12d, r12d
0x459029:	movzx	edx, word ptr [rcx + 0x18]
0x45902d:	test	dx, dx
0x459030:	je	0x4591f0
0x459036:	xor	r13d, r13d
0x459039:	xor	r14d, r14d
0x45903c:	xor	r10d, r10d
0x45903f:	xor	r11d, r11d
0x459042:	lea	rcx, [rdx*8]
0x45904a:	mov	r15d, 1
0x459050:	sub	rcx, rdx
0x459053:	lea	rdx, [rax + rcx*8]
0x459057:	xor	ecx, ecx
0x459059:	jmp	0x45907c
0x45905b:	nop	dword ptr [rax + rax]
0x459060:	cmp	esi, 0x6474e550
0x459066:	je	0x4591e0
0x45906c:	cmp	esi, 2
0x45906f:	cmove	rcx, rax
0x459073:	add	rax, 0x38
0x459077:	cmp	rdx, rax
0x45907a:	je	0x4590b8
0x45907c:	mov	esi, dword ptr [rax]
0x45907e:	cmp	esi, 1
0x459081:	jne	0x459060
0x459083:	mov	rsi, qword ptr [rax + 0x10]
0x459087:	mov	r9, qword ptr [rbx]
0x45908a:	add	rsi, r8
0x45908d:	cmp	r9, rsi
0x459090:	jb	0x459073
0x459092:	mov	rbp, qword ptr [rax + 0x28]
0x459096:	add	rbp, rsi
0x459099:	cmp	r9, rbp
0x45909c:	cmovb	r13, rbp
0x4590a0:	cmovb	r14, rsi
0x4590a4:	cmovb	r10, r15
0x4590a8:	add	rax, 0x38
0x4590ac:	cmp	rdx, rax
0x4590af:	jne	0x45907c
0x4590b1:	nop	dword ptr [rax]
0x4590b8:	test	r10, r10
0x4590bb:	je	0x4591f0
0x4590c1:	cmp	rdi, 0x2f
0x4590c5:	jbe	0x459108
0x4590c7:	mov	rax, qword ptr [rip + 0x8d542]
0x4590ce:	test	r12, r12
0x4590d1:	je	0x4590f5
0x4590d3:	mov	rdi, qword ptr [rsp + 8]
0x4590d8:	test	rdi, rdi
0x4590db:	je	0x4590f5
0x4590dd:	mov	rdx, qword ptr [r12 + 0x28]
0x4590e2:	mov	qword ptr [rip + 0x8d527], r12
0x4590e9:	mov	qword ptr [rdi + 0x28], rdx
0x4590ed:	mov	qword ptr [r12 + 0x28], rax
0x4590f2:	mov	rax, r12
0x4590f5:	mov	qword ptr [rax + 0x10], r8
0x4590f9:	mov	qword ptr [rax + 0x18], r11
0x4590fd:	mov	qword ptr [rax + 0x20], rcx
0x459101:	mov	qword ptr [rax], r14
0x459104:	mov	qword ptr [rax + 8], r13
0x459108:	test	r11, r11
0x45910b:	je	0x4591f0
0x459111:	add	r8, qword ptr [r11 + 0x10]
0x459115:	cmp	byte ptr [r8], 1
0x459119:	mov	rbp, r8
0x45911c:	je	0x459280
0x459122:	add	rsp, 0x58
0x459126:	mov	eax, 1
0x45912b:	pop	rbx
0x45912c:	pop	rbp
0x45912d:	pop	r12
0x45912f:	pop	r13
0x459131:	pop	r14
0x459133:	pop	r15
0x459135:	ret	
0x459136:	nop	word ptr cs:[rax + rax]
0x459140:	add	rsp, 0x58
0x459144:	mov	eax, 0xffffffff
0x459149:	pop	rbx
0x45914a:	pop	rbp
0x45914b:	pop	r12
0x45914d:	pop	r13
0x45914f:	pop	r14
0x459151:	pop	r15
0x459153:	ret	
0x459154:	nop	dword ptr [rax]
0x459158:	mov	rdx, qword ptr [rcx + 0x20]
0x45915c:	cmp	rdx, qword ptr [rip + 0x89ee5]
0x459163:	mov	rsi, qword ptr [rcx + 0x28]
0x459167:	je	0x459208
0x45916d:	mov	qword ptr [rip + 0x89ed4], rdx
0x459174:	lea	rdx, [rip + 0x8d4d5]
0x45917b:	mov	qword ptr [rip + 0x8d486], rsi
0x459182:	lea	rsi, [rdx + 0x180]
0x459189:	nop	dword ptr [rax]
0x459190:	mov	qword ptr [rdx - 0x30], 0
0x459198:	mov	qword ptr [rdx - 0x28], 0
0x4591a0:	mov	qword ptr [rdx - 8], rdx
0x4591a4:	add	rdx, 0x30
0x4591a8:	cmp	rdx, rsi
0x4591ab:	jne	0x459190
0x4591ad:	lea	rdx, [rip + 0x8d46c]
0x4591b4:	xor	r12d, r12d
0x4591b7:	mov	qword ptr [rip + 0x8d5d6], 0
0x4591c2:	mov	qword ptr [rip + 0x8d447], rdx
0x4591c9:	mov	dword ptr [rbx + 0x28], 0
0x4591d0:	mov	qword ptr [rsp + 8], 0
0x4591d9:	jmp	0x459029
0x4591de:	nop	
0x4591e0:	mov	r11, rax
0x4591e3:	jmp	0x459073
0x4591e8:	nop	dword ptr [rax + rax]
0x4591f0:	add	rsp, 0x58
0x4591f4:	xor	eax, eax
0x4591f6:	pop	rbx
0x4591f7:	pop	rbp
0x4591f8:	pop	r12
0x4591fa:	pop	r13
0x4591fc:	pop	r14
0x4591fe:	pop	r15
0x459200:	ret	
0x459201:	nop	dword ptr [rax]
0x459208:	cmp	qword ptr [rip + 0x8d3f9], rsi
0x45920f:	jne	0x45916d
0x459215:	mov	r10, qword ptr [rip + 0x8d3f4]
0x45921c:	test	r10, r10
0x45921f:	je	0x45901d
0x459225:	mov	r12, r10
0x459228:	mov	r9, qword ptr [rbx]
0x45922b:	xor	r11d, r11d
0x45922e:	mov	rdx, qword ptr [r12]
0x459232:	mov	rsi, qword ptr [r12 + 8]
0x459237:	cmp	r9, rdx
0x45923a:	jb	0x459249
0x45923c:	nop	dword ptr [rax]
0x459240:	cmp	r9, rsi
0x459243:	jb	0x459507
0x459249:	or	rdx, rsi
0x45924c:	je	0x4593a0
0x459252:	mov	rdx, qword ptr [r12 + 0x28]
0x459257:	test	rdx, rdx
0x45925a:	je	0x4593a0
0x459260:	mov	r11, r12
0x459263:	mov	r12, rdx
0x459266:	mov	rdx, qword ptr [r12]
0x45926a:	mov	rsi, qword ptr [r12 + 8]
0x45926f:	cmp	r9, rdx
0x459272:	jb	0x459249
0x459274:	jmp	0x459240
0x459276:	nop	word ptr cs:[rax + rax]
0x459280:	movzx	edi, byte ptr [rbp + 1]
0x459284:	lea	r8, [r8 + 4]
0x459288:	mov	eax, edi
0x45928a:	cmp	dil, 0xff
0x45928e:	je	0x45938b
0x459294:	mov	edx, edi
0x459296:	and	edx, 0x70
0x459299:	cmp	dl, 0x20
0x45929c:	je	0x4593aa
0x4592a2:	jbe	0x459392
0x4592a8:	cmp	dl, 0x30
0x4592ab:	jne	0x459382
0x4592b1:	mov	rsi, qword ptr [rbx + 0x10]
0x4592b5:	nop	dword ptr [rax]
0x4592b8:	mov	rdx, r8
0x4592bb:	lea	rcx, [rsp + 0x10]
0x4592c0:	call	0x4583a0
0x4592c5:	movzx	edx, byte ptr [rbp + 2]
0x4592c9:	cmp	dl, 0xff
0x4592cc:	je	0x4592d8
0x4592ce:	cmp	byte ptr [rbp + 3], 0x3b
0x4592d2:	je	0x4593b3
0x4592d8:	mov	r13, qword ptr [rbx + 8]
0x4592dc:	mov	r12, qword ptr [rbx + 0x10]
0x4592e0:	lea	rdi, [rsp + 0x20]
0x4592e5:	mov	qword ptr [rsp + 0x20], 0
0x4592ee:	mov	rsi, qword ptr [rsp + 0x10]
0x4592f3:	mov	rdx, qword ptr [rbx]
0x4592f6:	mov	qword ptr [rsp + 0x40], 4
0x4592ff:	mov	qword ptr [rsp + 0x28], r13
0x459304:	mov	qword ptr [rsp + 0x30], r12
0x459309:	mov	qword ptr [rsp + 0x38], rsi
0x45930e:	call	0x458cc0
0x459313:	mov	qword ptr [rbx + 0x20], rax
0x459317:	mov	rbp, rax
0x45931a:	test	rax, rax
0x45931d:	je	0x459122
0x459323:	lea	rdi, [rax + 4]
0x459327:	movsxd	rax, dword ptr [rax + 4]
0x45932b:	sub	rdi, rax
0x45932e:	call	0x4584f0
0x459333:	lea	rdx, [rbp + 8]
0x459337:	movzx	edi, al
0x45933a:	cmp	al, 0xff
0x45933c:	je	0x459368
0x45933e:	mov	ecx, eax
0x459340:	and	ecx, 0x70
0x459343:	cmp	cl, 0x20
0x459346:	je	0x4594ff
0x45934c:	jbe	0x459360
0x45934e:	mov	rsi, r12
0x459351:	cmp	cl, 0x30
0x459354:	je	0x45936a
0x459356:	cmp	cl, 0x50
0x459359:	je	0x459368
0x45935b:	jmp	0x42d0a4
0x459360:	test	al, 0x60
0x459362:	jne	0x42d0a4
0x459368:	xor	esi, esi
0x45936a:	lea	rcx, [rsp + 0x18]
0x45936f:	call	0x4583a0
0x459374:	mov	rax, qword ptr [rsp + 0x18]
0x459379:	mov	qword ptr [rbx + 0x18], rax
0x45937d:	jmp	0x459122
0x459382:	cmp	dl, 0x50
0x459385:	jne	0x45957e
0x45938b:	xor	esi, esi
0x45938d:	jmp	0x4592b8
0x459392:	test	al, 0x60
0x459394:	jne	0x42d0a4
0x45939a:	jmp	0x45938b
0x45939c:	nop	dword ptr [rax]
0x4593a0:	mov	qword ptr [rsp + 8], r11
0x4593a5:	jmp	0x459029
0x4593aa:	mov	rsi, qword ptr [rbx + 8]
0x4593ae:	jmp	0x4592b8
0x4593b3:	mov	ecx, edx
0x4593b5:	movzx	edi, dl
0x4593b8:	and	ecx, 0x70
0x4593bb:	cmp	cl, 0x20
0x4593be:	je	0x459537
0x4593c4:	jbe	0x4594ec
0x4593ca:	cmp	cl, 0x30
0x4593cd:	jne	0x4594dc
0x4593d3:	mov	rsi, qword ptr [rbx + 0x10]
0x4593d7:	lea	rcx, [rsp + 0x18]
0x4593dc:	mov	rdx, rax
0x4593df:	call	0x4583a0
0x4593e4:	mov	rcx, qword ptr [rsp + 0x18]
0x4593e9:	mov	rdx, rax
0x4593ec:	test	rcx, rcx
0x4593ef:	je	0x459122
0x4593f5:	mov	r8, rax
0x4593f8:	mov	r13, qword ptr [rbx]
0x4593fb:	and	r8d, 3
0x4593ff:	jne	0x4592d8
0x459405:	movsxd	rax, dword ptr [rax]
0x459408:	add	rax, rbp
0x45940b:	cmp	rax, r13
0x45940e:	ja	0x459122
0x459414:	sub	rcx, 1
0x459418:	lea	r12, [rdx + rcx*8]
0x45941c:	movsxd	rax, dword ptr [r12]
0x459420:	add	rax, rbp
0x459423:	cmp	rax, r13
0x459426:	jbe	0x459465
0x459428:	cmp	rcx, r8
0x45942b:	jbe	0x459560
0x459431:	lea	rax, [rcx + r8]
0x459435:	shr	rax, 1
0x459438:	lea	rdi, [rax*8]
0x459440:	lea	r12, [rdx + rdi]
0x459444:	movsxd	rsi, dword ptr [r12]
0x459448:	add	rsi, rbp
0x45944b:	cmp	rsi, r13
0x45944e:	ja	0x4594f7
0x459454:	lea	r8, [rax + 1]
0x459458:	movsxd	rax, dword ptr [rdx + rdi + 8]
0x45945d:	add	rax, rbp
0x459460:	cmp	rax, r13
0x459463:	jbe	0x459428
0x459465:	movsxd	r14, dword ptr [r12 + 4]
0x45946a:	add	r14, rbp
0x45946d:	movsxd	rax, dword ptr [r14 + 4]
0x459471:	lea	rdi, [r14 + 4]
0x459475:	sub	rdi, rax
0x459478:	call	0x4584f0
0x45947d:	cmp	al, 0xff
0x45947f:	je	0x45956f
0x459485:	mov	ecx, eax
0x459487:	and	ecx, 7
0x45948a:	cmp	cl, 2
0x45948d:	je	0x459565
0x459493:	jbe	0x459553
0x459499:	mov	edx, 0xc
0x45949e:	cmp	cl, 3
0x4594a1:	jne	0x459540
0x4594a7:	and	eax, 0xf
0x4594aa:	add	rdx, r14
0x4594ad:	lea	rcx, [rsp + 0x20]
0x4594b2:	xor	esi, esi
0x4594b4:	mov	edi, eax
0x4594b6:	call	0x4583a0
0x4594bb:	movsxd	rax, dword ptr [r12]
0x4594bf:	mov	rdx, qword ptr [rsp + 0x20]
0x4594c4:	add	rax, rbp
0x4594c7:	add	rdx, rax
0x4594ca:	cmp	rdx, r13
0x4594cd:	jbe	0x459379
0x4594d3:	mov	qword ptr [rbx + 0x20], r14
0x4594d7:	jmp	0x459379
0x4594dc:	cmp	cl, 0x50
0x4594df:	jne	0x459579
0x4594e5:	xor	esi, esi
0x4594e7:	jmp	0x4593d7
0x4594ec:	and	edx, 0x60
0x4594ef:	jne	0x42d0a4
0x4594f5:	jmp	0x4594e5
0x4594f7:	mov	rcx, rax
0x4594fa:	jmp	0x459428
0x4594ff:	mov	rsi, r13
0x459502:	jmp	0x45936a
0x459507:	mov	rdi, r11
0x45950a:	mov	r8, qword ptr [r12 + 0x10]
0x45950f:	mov	r11, qword ptr [r12 + 0x18]
0x459514:	cmp	r12, r10
0x459517:	je	0x459108
0x45951d:	mov	rax, qword ptr [r12 + 0x28]
0x459522:	mov	qword ptr [rip + 0x8d0e7], r12
0x459529:	mov	qword ptr [rdi + 0x28], rax
0x45952d:	mov	qword ptr [r12 + 0x28], r10
0x459532:	jmp	0x459108
0x459537:	mov	rsi, qword ptr [rbx + 8]
0x45953b:	jmp	0x4593d7
0x459540:	cmp	cl, 4
0x459543:	jne	0x42d0a4
0x459549:	mov	edx, 0x10
0x45954e:	jmp	0x4594a7
0x459553:	test	cl, cl
0x459555:	je	0x459549
0x459557:	jmp	0x42d0a4
0x45955c:	nop	dword ptr [rax]
0x459560:	jmp	0x42d09f
0x459565:	mov	edx, 0xa
0x45956a:	jmp	0x4594a7
0x45956f:	mov	edx, 8
0x459574:	jmp	0x4594a7
0x459579:	jmp	0x42d0a4
0x45957e:	jmp	0x42d0a4
0x459583:	nop	word ptr cs:[rax + rax]
0x45958e:	nop	
0x459590:	push	r15
0x459592:	push	r14
0x459594:	push	r13
0x459596:	push	r12
0x459598:	mov	r12, rdi
0x45959b:	push	rbp
0x45959c:	push	rbx
0x45959d:	sub	rsp, 0x58
0x4595a1:	movzx	eax, byte ptr [rdi + 0x20]
0x4595a5:	mov	qword ptr [rsp + 8], rsi
0x4595aa:	test	al, 1
0x4595ac:	je	0x459628
0x4595ae:	mov	rbx, qword ptr [r12 + 0x18]
0x4595b3:	test	al, 4
0x4595b5:	jne	0x459770
0x4595bb:	movzx	eax, word ptr [r12 + 0x20]
0x4595c1:	test	ax, 0x7f8
0x4595c5:	jne	0x4596a0
0x4595cb:	mov	rcx, qword ptr [rbx + 8]
0x4595cf:	xor	esi, esi
0x4595d1:	nop	dword ptr [rax]
0x4595d8:	cmp	rcx, rsi
0x4595db:	jbe	0x459610
0x4595dd:	lea	rax, [rcx + rsi]
0x4595e1:	mov	rdi, qword ptr [rsp + 8]
0x4595e6:	shr	rax, 1
0x4595e9:	mov	r14, qword ptr [rbx + rax*8 + 0x10]
0x4595ee:	mov	rdx, qword ptr [r14 + 8]
0x4595f2:	cmp	rdi, rdx
0x4595f5:	jb	0x459910
0x4595fb:	add	rdx, qword ptr [r14 + 0x10]
0x4595ff:	cmp	rdi, rdx
0x459602:	jb	0x459613
0x459604:	lea	rsi, [rax + 1]
0x459608:	cmp	rcx, rsi
0x45960b:	ja	0x4595dd
0x45960d:	nop	dword ptr [rax]
0x459610:	xor	r14d, r14d
0x459613:	add	rsp, 0x58
0x459617:	mov	rax, r14
0x45961a:	pop	rbx
0x45961b:	pop	rbp
0x45961c:	pop	r12
0x45961e:	pop	r13
0x459620:	pop	r14
0x459622:	pop	r15
0x459624:	ret	
0x459625:	nop	dword ptr [rax]
0x459628:	mov	edx, dword ptr [rdi + 0x20]
0x45962b:	mov	ecx, edx
0x45962d:	shr	ecx, 0xb
0x459630:	mov	ebx, ecx
0x459632:	mov	qword ptr [rsp + 0x18], rbx
0x459637:	test	rbx, rbx
0x45963a:	jne	0x459958
0x459640:	mov	rbp, qword ptr [rdi + 0x18]
0x459644:	test	al, 2
0x459646:	je	0x459842
0x45964c:	mov	rsi, qword ptr [rbp]
0x459650:	test	rsi, rsi
0x459653:	jne	0x459676
0x459655:	jmp	0x459c65
0x45965a:	nop	word ptr [rax + rax]
0x459660:	mov	rsi, qword ptr [rbp + 8]
0x459664:	add	rbp, 8
0x459668:	add	qword ptr [rsp + 0x18], rax
0x45966d:	test	rsi, rsi
0x459670:	je	0x459859
0x459676:	mov	rdi, r12
0x459679:	call	0x458620
0x45967e:	cmp	rax, -1
0x459682:	jne	0x459660
0x459684:	mov	qword ptr [r12 + 0x20], 0x7f8
0x45968d:	lea	rax, [rip + 0x747b4]
0x459694:	mov	qword ptr [r12 + 0x18], rax
0x459699:	jmp	0x459890
0x45969e:	nop	
0x4596a0:	shr	ax, 3
0x4596a4:	movzx	edx, al
0x4596a7:	mov	dword ptr [rsp + 0x18], edx
0x4596ab:	cmp	al, 0xff
0x4596ad:	je	0x459943
0x4596b3:	mov	edx, eax
0x4596b5:	and	edx, 0x70
0x4596b8:	cmp	dl, 0x20
0x4596bb:	je	0x459c1e
0x4596c1:	jbe	0x45994b
0x4596c7:	cmp	dl, 0x30
0x4596ca:	jne	0x45993a
0x4596d0:	mov	r13, qword ptr [r12 + 0x10]
0x4596d5:	nop	dword ptr [rax]
0x4596d8:	mov	r15, qword ptr [rbx + 8]
0x4596dc:	test	r15, r15
0x4596df:	je	0x459610
0x4596e5:	and	eax, 0xf
0x4596e8:	xor	r12d, r12d
0x4596eb:	lea	rbp, [rsp + 0x40]
0x4596f0:	mov	dword ptr [rsp + 0x20], eax
0x4596f4:	lea	rax, [rsp + 0x38]
0x4596f9:	mov	qword ptr [rsp + 0x28], rax
0x4596fe:	jmp	0x45971b
0x459700:	add	rax, qword ptr [rsp + 0x40]
0x459705:	cmp	rax, rdi
0x459708:	ja	0x459613
0x45970e:	lea	r12, [r8 + 1]
0x459712:	cmp	r12, r15
0x459715:	jae	0x459610
0x45971b:	lea	r8, [r15 + r12]
0x45971f:	mov	rcx, qword ptr [rsp + 0x28]
0x459724:	mov	edi, dword ptr [rsp + 0x18]
0x459728:	mov	rsi, r13
0x45972b:	shr	r8, 1
0x45972e:	mov	r14, qword ptr [rbx + r8*8 + 0x10]
0x459733:	mov	qword ptr [rsp + 0x10], r8
0x459738:	lea	rdx, [r14 + 8]
0x45973c:	call	0x4583a0
0x459741:	mov	edi, dword ptr [rsp + 0x20]
0x459745:	xor	esi, esi
0x459747:	mov	rcx, rbp
0x45974a:	mov	rdx, rax
0x45974d:	call	0x4583a0
0x459752:	mov	rax, qword ptr [rsp + 0x38]
0x459757:	mov	rdi, qword ptr [rsp + 8]
0x45975c:	mov	r8, qword ptr [rsp + 0x10]
0x459761:	cmp	rax, rdi
0x459764:	jbe	0x459700
0x459766:	mov	r15, r8
0x459769:	jmp	0x459712
0x45976b:	nop	dword ptr [rax + rax]
0x459770:	mov	r13, qword ptr [rbx + 8]
0x459774:	test	r13, r13
0x459777:	je	0x459610
0x45977d:	mov	qword ptr [rsp + 0x10], 0
0x459786:	jmp	0x4597b2
0x459788:	nop	dword ptr [rax + rax]
0x459790:	add	rax, qword ptr [rsp + 0x40]
0x459795:	cmp	rcx, rax
0x459798:	jb	0x459613
0x45979e:	lea	rax, [rbp + 1]
0x4597a2:	mov	qword ptr [rsp + 0x10], rax
0x4597a7:	cmp	qword ptr [rsp + 0x10], r13
0x4597ac:	jae	0x459610
0x4597b2:	mov	rax, qword ptr [rsp + 0x10]
0x4597b7:	lea	rbp, [r13 + rax]
0x4597bc:	shr	rbp, 1
0x4597bf:	mov	r14, qword ptr [rbx + rbp*8 + 0x10]
0x4597c4:	movsxd	rax, dword ptr [r14 + 4]
0x4597c8:	lea	rdi, [r14 + 4]
0x4597cc:	sub	rdi, rax
0x4597cf:	call	0x4584f0
0x4597d4:	lea	rdx, [r14 + 8]
0x4597d8:	mov	r15d, eax
0x4597db:	movzx	edi, al
0x4597de:	cmp	al, 0xff
0x4597e0:	je	0x459908
0x4597e6:	and	eax, 0x70
0x4597e9:	cmp	al, 0x20
0x4597eb:	je	0x459930
0x4597f1:	jbe	0x459920
0x4597f7:	cmp	al, 0x30
0x4597f9:	jne	0x459900
0x4597ff:	mov	rsi, qword ptr [r12 + 0x10]
0x459804:	nop	dword ptr [rax]
0x459808:	lea	rcx, [rsp + 0x38]
0x45980d:	call	0x4583a0
0x459812:	mov	edi, r15d
0x459815:	lea	rcx, [rsp + 0x40]
0x45981a:	xor	esi, esi
0x45981c:	mov	rdx, rax
0x45981f:	and	edi, 0xf
0x459822:	call	0x4583a0
0x459827:	mov	rax, qword ptr [rsp + 0x38]
0x45982c:	mov	rcx, qword ptr [rsp + 8]
0x459831:	cmp	rcx, rax
0x459834:	jae	0x459790
0x45983a:	mov	r13, rbp
0x45983d:	jmp	0x4597a7
0x459842:	mov	rsi, rbp
0x459845:	call	0x458620
0x45984a:	mov	qword ptr [rsp + 0x18], rax
0x45984f:	cmp	rax, -1
0x459853:	je	0x459684
0x459859:	mov	rbx, qword ptr [rsp + 0x18]
0x45985e:	mov	rax, rbx
0x459861:	and	eax, 0x1fffff
0x459866:	cmp	rax, rbx
0x459869:	mov	edx, eax
0x45986b:	mov	eax, 0
0x459870:	cmovne	edx, eax
0x459873:	mov	eax, dword ptr [r12 + 0x20]
0x459878:	shl	edx, 0xb
0x45987b:	and	eax, 0x7ff
0x459880:	or	eax, edx
0x459882:	mov	dword ptr [r12 + 0x20], eax
0x459887:	test	rbx, rbx
0x45988a:	jne	0x459958
0x459890:	mov	rax, qword ptr [rsp + 8]
0x459895:	cmp	qword ptr [r12], rax
0x459899:	ja	0x459610
0x45989f:	movzx	eax, byte ptr [r12 + 0x20]
0x4598a5:	mov	rbp, qword ptr [r12 + 0x18]
0x4598aa:	test	al, 1
0x4598ac:	jne	0x4595ae
0x4598b2:	test	al, 2
0x4598b4:	je	0x459be8
0x4598ba:	mov	rsi, qword ptr [rbp]
0x4598be:	test	rsi, rsi
0x4598c1:	jne	0x4598e1
0x4598c3:	jmp	0x459610
0x4598c8:	nop	dword ptr [rax + rax]
0x4598d0:	mov	rsi, qword ptr [rbp + 8]
0x4598d4:	add	rbp, 8
0x4598d8:	test	rsi, rsi
0x4598db:	je	0x459610
0x4598e1:	mov	rdx, qword ptr [rsp + 8]
0x4598e6:	mov	rdi, r12
0x4598e9:	call	0x458cc0
0x4598ee:	mov	r14, rax
0x4598f1:	test	rax, rax
0x4598f4:	je	0x4598d0
0x4598f6:	jmp	0x459613
0x4598fb:	nop	dword ptr [rax + rax]
0x459900:	cmp	al, 0x50
0x459902:	jne	0x459c73
0x459908:	xor	esi, esi
0x45990a:	jmp	0x459808
0x45990f:	nop	
0x459910:	mov	rcx, rax
0x459913:	jmp	0x4595d8
0x459918:	nop	dword ptr [rax + rax]
0x459920:	test	r15b, 0x60
0x459924:	jne	0x42d0a9
0x45992a:	jmp	0x459908
0x45992c:	nop	dword ptr [rax]
0x459930:	mov	rsi, qword ptr [r12 + 8]
0x459935:	jmp	0x459808
0x45993a:	cmp	dl, 0x50
0x45993d:	jne	0x459c78
0x459943:	xor	r13d, r13d
0x459946:	jmp	0x4596d8
0x45994b:	test	al, 0x60
0x45994d:	jne	0x42d0a9
0x459953:	jmp	0x459943
0x459955:	nop	dword ptr [rax]
0x459958:	mov	rax, qword ptr [rsp + 0x18]
0x45995d:	lea	rbp, [rax*8 + 0x10]
0x459965:	mov	rdi, rbp
0x459968:	call	0x403ca0
0x45996d:	mov	qword ptr [rsp + 0x40], rax
0x459972:	mov	rbx, rax
0x459975:	test	rax, rax
0x459978:	je	0x459890
0x45997e:	mov	qword ptr [rax + 8], 0
0x459986:	mov	rdi, rbp
0x459989:	call	0x403ca0
0x45998e:	mov	qword ptr [rsp + 0x48], rax
0x459993:	mov	r13, rax
0x459996:	test	rax, rax
0x459999:	je	0x4599a3
0x45999b:	mov	qword ptr [rax + 8], 0
0x4599a3:	movzx	r14d, byte ptr [r12 + 0x20]
0x4599a9:	mov	r15, qword ptr [r12 + 0x18]
0x4599ae:	test	r14b, 2
0x4599b2:	je	0x459c06
0x4599b8:	mov	rdx, qword ptr [r15]
0x4599bb:	test	rdx, rdx
0x4599be:	je	0x42d0a9
0x4599c4:	lea	rbp, [rsp + 0x40]
0x4599c9:	nop	dword ptr [rax]
0x4599d0:	mov	rsi, rbp
0x4599d3:	mov	rdi, r12
0x4599d6:	add	r15, 8
0x4599da:	call	0x458a00
0x4599df:	mov	rdx, qword ptr [r15]
0x4599e2:	test	rdx, rdx
0x4599e5:	jne	0x4599d0
0x4599e7:	mov	rax, qword ptr [rbx + 8]
0x4599eb:	mov	rdx, qword ptr [rsp + 0x18]
0x4599f0:	mov	qword ptr [rsp + 0x20], rax
0x4599f5:	cmp	qword ptr [rsp + 0x20], rdx
0x4599fa:	jne	0x42d0a9
0x459a00:	and	r14d, 4
0x459a04:	lea	rbp, [rip - 0x113b]
0x459a0b:	jne	0x459a27
0x459a0d:	test	word ptr [r12 + 0x20], 0x7f8
0x459a15:	lea	rbp, [rip - 0x180c]
0x459a1c:	lea	rax, [rip - 0x1203]
0x459a23:	cmovne	rbp, rax
0x459a27:	test	r13, r13
0x459a2a:	je	0x459c28
0x459a30:	lea	rax, [rbx + 0x10]
0x459a34:	lea	r14, [rip + 0x8cbc5]
0x459a3b:	mov	qword ptr [rsp + 0x28], 0
0x459a44:	mov	qword ptr [rsp + 0x10], rax
0x459a49:	mov	r15, rax
0x459a4c:	nop	dword ptr [rax]
0x459a50:	mov	rax, qword ptr [rsp + 0x28]
0x459a55:	mov	qword ptr [r13 + rax*8 + 0x10], r14
0x459a5a:	add	rax, 1
0x459a5e:	mov	qword ptr [rsp + 0x28], rax
0x459a63:	cmp	rax, qword ptr [rsp + 0x20]
0x459a68:	je	0x459ab0
0x459a6a:	mov	r14, r15
0x459a6d:	jmp	0x459a9a
0x459a6f:	nop	
0x459a70:	mov	rax, r14
0x459a73:	sub	rax, qword ptr [rsp + 0x10]
0x459a78:	sar	rax, 3
0x459a7c:	add	rax, 2
0x459a80:	mov	r14, qword ptr [r13 + rax*8]
0x459a85:	mov	qword ptr [r13 + rax*8], 0
0x459a8e:	lea	rax, [rip + 0x8cb6b]
0x459a95:	cmp	r14, rax
0x459a98:	je	0x459aaa
0x459a9a:	mov	rsi, qword ptr [r15 + 8]
0x459a9e:	mov	rdx, qword ptr [r14]
0x459aa1:	mov	rdi, r12
0x459aa4:	call	rbp
0x459aa6:	test	eax, eax
0x459aa8:	js	0x459a70
0x459aaa:	add	r15, 8
0x459aae:	jmp	0x459a50
0x459ab0:	xor	esi, esi
0x459ab2:	xor	edx, edx
0x459ab4:	xor	eax, eax
0x459ab6:	jmp	0x459ad4
0x459ab8:	nop	dword ptr [rax + rax]
0x459ac0:	mov	qword ptr [rbx + rdx*8 + 0x10], rcx
0x459ac5:	add	rdx, 1
0x459ac9:	add	rax, 1
0x459acd:	cmp	rax, qword ptr [rsp + 0x20]
0x459ad2:	je	0x459af0
0x459ad4:	cmp	qword ptr [r13 + rax*8 + 0x10], 0
0x459ada:	mov	rcx, qword ptr [rbx + rax*8 + 0x10]
0x459adf:	jne	0x459ac0
0x459ae1:	mov	qword ptr [r13 + rsi*8 + 0x10], rcx
0x459ae6:	add	rsi, 1
0x459aea:	jmp	0x459ac9
0x459aec:	nop	dword ptr [rax]
0x459af0:	mov	qword ptr [rbx + 8], rdx
0x459af4:	add	rdx, rsi
0x459af7:	mov	qword ptr [r13 + 8], rsi
0x459afb:	cmp	rdx, qword ptr [rsp + 0x18]
0x459b00:	jne	0x42d0a9
0x459b06:	mov	rdx, r13
0x459b09:	mov	rsi, rbp
0x459b0c:	mov	rdi, r12
0x459b0f:	call	0x4582f0
0x459b14:	mov	rax, qword ptr [r13 + 8]
0x459b18:	test	rax, rax
0x459b1b:	je	0x459bc2
0x459b21:	mov	r15, qword ptr [rbx + 8]
0x459b25:	nop	dword ptr [rax]
0x459b28:	lea	rdx, [rax - 1]
0x459b2c:	mov	qword ptr [rsp + 0x20], rdx
0x459b31:	lea	rdx, [rax + 1]
0x459b35:	mov	rcx, qword ptr [r13 + rdx*8]
0x459b3a:	mov	qword ptr [rsp + 0x18], rcx
0x459b3f:	test	r15, r15
0x459b42:	je	0x459c38
0x459b48:	lea	r14, [rax + r15 - 1]
0x459b4d:	mov	rcx, r15
0x459b50:	jmp	0x459b6b
0x459b52:	nop	word ptr [rax + rax]
0x459b58:	mov	rax, qword ptr [rbx + rcx*8 + 0x10]
0x459b5d:	mov	qword ptr [rbx + r14*8 + 0x10], rax
0x459b62:	sub	r14, 1
0x459b66:	test	rcx, rcx
0x459b69:	je	0x459bb0
0x459b6b:	mov	r15, rcx
0x459b6e:	lea	rcx, [rcx - 1]
0x459b72:	mov	rdx, qword ptr [rsp + 0x18]
0x459b77:	mov	rdi, r12
0x459b7a:	mov	qword ptr [rsp + 0x10], rcx
0x459b7f:	mov	rsi, qword ptr [rbx + rcx*8 + 0x10]
0x459b84:	call	rbp
0x459b86:	mov	rcx, qword ptr [rsp + 0x10]
0x459b8b:	test	eax, eax
0x459b8d:	jg	0x459b58
0x459b8f:	mov	rax, qword ptr [rsp + 0x18]
0x459b94:	cmp	qword ptr [rsp + 0x20], 0
0x459b9a:	mov	qword ptr [rbx + r14*8 + 0x10], rax
0x459b9f:	je	0x459bba
0x459ba1:	mov	rax, qword ptr [rsp + 0x20]
0x459ba6:	jmp	0x459b28
0x459ba8:	nop	dword ptr [rax + rax]
0x459bb0:	mov	r14, qword ptr [rsp + 0x20]
0x459bb5:	xor	r15d, r15d
0x459bb8:	jmp	0x459b8f
0x459bba:	mov	rax, qword ptr [r13 + 8]
0x459bbe:	add	qword ptr [rbx + 8], rax
0x459bc2:	mov	rdi, r13
0x459bc5:	call	0x403830
0x459bca:	mov	rax, qword ptr [r12 + 0x18]
0x459bcf:	or	byte ptr [r12 + 0x20], 1
0x459bd5:	mov	qword ptr [r12 + 0x18], rbx
0x459bda:	mov	qword ptr [rbx], rax
0x459bdd:	jmp	0x459890
0x459be2:	nop	word ptr [rax + rax]
0x459be8:	mov	rdx, qword ptr [rsp + 8]
0x459bed:	add	rsp, 0x58
0x459bf1:	mov	rsi, rbp
0x459bf4:	mov	rdi, r12
0x459bf7:	pop	rbx
0x459bf8:	pop	rbp
0x459bf9:	pop	r12
0x459bfb:	pop	r13
0x459bfd:	pop	r14
0x459bff:	pop	r15
0x459c01:	jmp	0x458cc0
0x459c06:	lea	rbp, [rsp + 0x40]
0x459c0b:	mov	rdx, r15
0x459c0e:	mov	rdi, r12
0x459c11:	mov	rsi, rbp
0x459c14:	call	0x458a00
0x459c19:	jmp	0x4599e7
0x459c1e:	mov	r13, qword ptr [r12 + 8]
0x459c23:	jmp	0x4596d8
0x459c28:	mov	rdx, rbx
0x459c2b:	mov	rsi, rbp
0x459c2e:	mov	rdi, r12
0x459c31:	call	0x4582f0
0x459c36:	jmp	0x459bca
0x459c38:	mov	rcx, qword ptr [rsp + 0x18]
0x459c3d:	cmp	qword ptr [rsp + 0x20], 0
0x459c43:	mov	qword ptr [rbx + rdx*8], rcx
0x459c47:	je	0x459bba
0x459c4d:	lea	r14, [rax - 2]
0x459c51:	mov	rax, qword ptr [r13 + rax*8]
0x459c56:	mov	qword ptr [rsp + 0x20], r14
0x459c5b:	mov	qword ptr [rsp + 0x18], rax
0x459c60:	jmp	0x459b8f
0x459c65:	and	edx, 0x7ff
0x459c6b:	mov	dword ptr [rdi + 0x20], edx
0x459c6e:	jmp	0x459890
0x459c73:	jmp	0x42d0a9
0x459c78:	jmp	0x42d0a9
0x459c7d:	nop	dword ptr [rax]
0x459c80:	endbr64	
0x459c84:	test	rdi, rdi
0x459c87:	je	0x459d10
0x459c8d:	mov	r8d, dword ptr [rdi]
0x459c90:	test	r8d, r8d
0x459c93:	je	0x459d10
0x459c95:	push	rbp
0x459c96:	push	rbx
0x459c97:	mov	rbx, rsi
0x459c9a:	sub	rsp, 8
0x459c9e:	mov	rbp, qword ptr [rip + 0x8833b]
0x459ca5:	mov	qword ptr [rsi], 0xffffffffffffffff
0x459cac:	mov	qword ptr [rsi + 8], rdx
0x459cb0:	mov	qword ptr [rsi + 0x10], rcx
0x459cb4:	mov	qword ptr [rsi + 0x18], rdi
0x459cb8:	mov	qword ptr [rsi + 0x20], 0x7f8
0x459cc0:	test	rbp, rbp
0x459cc3:	je	0x459cd1
0x459cc5:	lea	rdi, [rip + 0x8cad4]
0x459ccc:	call	0x403f40
0x459cd1:	mov	rax, qword ptr [rip + 0x8cb00]
0x459cd8:	mov	qword ptr [rip + 0x8caf9], rbx
0x459cdf:	mov	qword ptr [rbx + 0x28], rax
0x459ce3:	mov	eax, dword ptr [rip + 0x8cadf]
0x459ce9:	test	eax, eax
0x459ceb:	je	0x459d18
0x459ced:	test	rbp, rbp
0x459cf0:	je	0x459d08
0x459cf2:	add	rsp, 8
0x459cf6:	lea	rdi, [rip + 0x8caa3]
0x459cfd:	pop	rbx
0x459cfe:	pop	rbp
0x459cff:	jmp	0x403c90
0x459d04:	nop	dword ptr [rax]
0x459d08:	add	rsp, 8
0x459d0c:	pop	rbx
0x459d0d:	pop	rbp
0x459d0e:	ret	
0x459d0f:	nop	
0x459d10:	ret	
0x459d11:	nop	dword ptr [rax]
0x459d18:	mov	dword ptr [rip + 0x8caa6], 1
0x459d22:	test	rbp, rbp
0x459d25:	jne	0x459cf2
0x459d27:	jmp	0x459d08
0x459d29:	nop	dword ptr [rax]
0x459d30:	endbr64	
0x459d34:	test	rdi, rdi
0x459d37:	je	0x459dd0
0x459d3d:	mov	edx, dword ptr [rdi]
0x459d3f:	test	edx, edx
0x459d41:	je	0x459dd0
0x459d47:	push	rbp
0x459d48:	push	rbx
0x459d49:	mov	rbx, rsi
0x459d4c:	sub	rsp, 8
0x459d50:	mov	rbp, qword ptr [rip + 0x88289]
0x459d57:	mov	qword ptr [rsi + 0x18], rdi
0x459d5b:	mov	qword ptr [rsi], 0xffffffffffffffff
0x459d62:	mov	qword ptr [rsi + 8], 0
0x459d6a:	mov	qword ptr [rsi + 0x10], 0
0x459d72:	mov	qword ptr [rsi + 0x20], 0x7f8
0x459d7a:	test	rbp, rbp
0x459d7d:	je	0x459d8b
0x459d7f:	lea	rdi, [rip + 0x8ca1a]
0x459d86:	call	0x403f40
0x459d8b:	mov	rax, qword ptr [rip + 0x8ca46]
0x459d92:	mov	qword ptr [rip + 0x8ca3f], rbx
0x459d99:	mov	qword ptr [rbx + 0x28], rax
0x459d9d:	mov	eax, dword ptr [rip + 0x8ca25]
0x459da3:	test	eax, eax
0x459da5:	je	0x459dd8
0x459da7:	test	rbp, rbp
0x459daa:	je	0x459dc0
0x459dac:	add	rsp, 8
0x459db0:	lea	rdi, [rip + 0x8c9e9]
0x459db7:	pop	rbx
0x459db8:	pop	rbp
0x459db9:	jmp	0x403c90
0x459dbe:	nop	
0x459dc0:	add	rsp, 8
0x459dc4:	pop	rbx
0x459dc5:	pop	rbp
0x459dc6:	ret	
0x459dc7:	nop	word ptr [rax + rax]
0x459dd0:	ret	
0x459dd1:	nop	dword ptr [rax]
0x459dd8:	mov	dword ptr [rip + 0x8c9e6], 1
0x459de2:	test	rbp, rbp
0x459de5:	jne	0x459dac
0x459de7:	jmp	0x459dc0
0x459de9:	nop	dword ptr [rax]
0x459df0:	endbr64	
0x459df4:	mov	eax, dword ptr [rdi]
0x459df6:	test	eax, eax
0x459df8:	jne	0x459e00
0x459dfa:	ret	
0x459dfb:	nop	dword ptr [rax + rax]
0x459e00:	push	rbp
0x459e01:	mov	rbp, rdi
0x459e04:	mov	edi, 0x30
0x459e09:	call	0x403ca0
0x459e0e:	mov	rdi, rbp
0x459e11:	xor	ecx, ecx
0x459e13:	xor	edx, edx
0x459e15:	mov	rsi, rax
0x459e18:	pop	rbp
0x459e19:	jmp	0x459c80
0x459e1e:	nop	
0x459e20:	endbr64	
0x459e24:	push	rbp
0x459e25:	push	rbx
0x459e26:	mov	rbx, rsi
0x459e29:	sub	rsp, 8
0x459e2d:	mov	rbp, qword ptr [rip + 0x881ac]
0x459e34:	mov	qword ptr [rsi], 0xffffffffffffffff
0x459e3b:	mov	qword ptr [rsi + 8], rdx
0x459e3f:	mov	qword ptr [rsi + 0x10], rcx
0x459e43:	mov	qword ptr [rsi + 0x18], rdi
0x459e47:	mov	qword ptr [rsi + 0x20], 0x7fa
0x459e4f:	test	rbp, rbp
0x459e52:	je	0x459e60
0x459e54:	lea	rdi, [rip + 0x8c945]
0x459e5b:	call	0x403f40
0x459e60:	mov	rax, qword ptr [rip + 0x8c971]
0x459e67:	mov	qword ptr [rip + 0x8c96a], rbx
0x459e6e:	mov	qword ptr [rbx + 0x28], rax
0x459e72:	mov	eax, dword ptr [rip + 0x8c950]
0x459e78:	test	eax, eax
0x459e7a:	je	0x459ea0
0x459e7c:	test	rbp, rbp
0x459e7f:	je	0x459e98
0x459e81:	add	rsp, 8
0x459e85:	lea	rdi, [rip + 0x8c914]
0x459e8c:	pop	rbx
0x459e8d:	pop	rbp
0x459e8e:	jmp	0x403c90
0x459e93:	nop	dword ptr [rax + rax]
0x459e98:	add	rsp, 8
0x459e9c:	pop	rbx
0x459e9d:	pop	rbp
0x459e9e:	ret	
0x459e9f:	nop	
0x459ea0:	mov	dword ptr [rip + 0x8c91e], 1
0x459eaa:	jmp	0x459e7c
0x459eac:	nop	dword ptr [rax]
0x459eb0:	endbr64	
0x459eb4:	push	rbp
0x459eb5:	push	rbx
0x459eb6:	mov	rbx, rsi
0x459eb9:	sub	rsp, 8
0x459ebd:	mov	rbp, qword ptr [rip + 0x8811c]
0x459ec4:	mov	qword ptr [rsi + 0x18], rdi
0x459ec8:	mov	qword ptr [rsi], 0xffffffffffffffff
0x459ecf:	mov	qword ptr [rsi + 8], 0
0x459ed7:	mov	qword ptr [rsi + 0x10], 0
0x459edf:	mov	qword ptr [rsi + 0x20], 0x7fa
0x459ee7:	test	rbp, rbp
0x459eea:	je	0x459ef8
0x459eec:	lea	rdi, [rip + 0x8c8ad]
0x459ef3:	call	0x403f40
0x459ef8:	mov	rax, qword ptr [rip + 0x8c8d9]
0x459eff:	mov	qword ptr [rip + 0x8c8d2], rbx
0x459f06:	mov	qword ptr [rbx + 0x28], rax
0x459f0a:	mov	eax, dword ptr [rip + 0x8c8b8]
0x459f10:	test	eax, eax
0x459f12:	je	0x459f40
0x459f14:	test	rbp, rbp
0x459f17:	je	0x459f30
0x459f19:	add	rsp, 8
0x459f1d:	lea	rdi, [rip + 0x8c87c]
0x459f24:	pop	rbx
0x459f25:	pop	rbp
0x459f26:	jmp	0x403c90
0x459f2b:	nop	dword ptr [rax + rax]
0x459f30:	add	rsp, 8
0x459f34:	pop	rbx
0x459f35:	pop	rbp
0x459f36:	ret	
0x459f37:	nop	word ptr [rax + rax]
0x459f40:	mov	dword ptr [rip + 0x8c87e], 1
0x459f4a:	jmp	0x459f14
0x459f4c:	nop	dword ptr [rax]
0x459f50:	endbr64	
0x459f54:	push	rbp
0x459f55:	mov	rbp, rdi
0x459f58:	mov	edi, 0x30
0x459f5d:	push	rbx
0x459f5e:	sub	rsp, 8
0x459f62:	call	0x403ca0
0x459f67:	mov	qword ptr [rax + 0x18], rbp
0x459f6b:	mov	rbp, qword ptr [rip + 0x8806e]
0x459f72:	mov	rbx, rax
0x459f75:	mov	qword ptr [rax], 0xffffffffffffffff
0x459f7c:	mov	qword ptr [rax + 8], 0
0x459f84:	mov	qword ptr [rax + 0x10], 0
0x459f8c:	mov	qword ptr [rax + 0x20], 0x7fa
0x459f94:	test	rbp, rbp
0x459f97:	je	0x459fa5
0x459f99:	lea	rdi, [rip + 0x8c800]
0x459fa0:	call	0x403f40
0x459fa5:	mov	rax, qword ptr [rip + 0x8c82c]
0x459fac:	mov	qword ptr [rip + 0x8c825], rbx
0x459fb3:	mov	qword ptr [rbx + 0x28], rax
0x459fb7:	mov	eax, dword ptr [rip + 0x8c80b]
0x459fbd:	test	eax, eax
0x459fbf:	je	0x459ff0
0x459fc1:	test	rbp, rbp
0x459fc4:	je	0x459fe0
0x459fc6:	add	rsp, 8
0x459fca:	lea	rdi, [rip + 0x8c7cf]
0x459fd1:	pop	rbx
0x459fd2:	pop	rbp
0x459fd3:	jmp	0x403c90
0x459fd8:	nop	dword ptr [rax + rax]
0x459fe0:	add	rsp, 8
0x459fe4:	pop	rbx
0x459fe5:	pop	rbp
0x459fe6:	ret	
0x459fe7:	nop	word ptr [rax + rax]
0x459ff0:	mov	dword ptr [rip + 0x8c7ce], 1
0x459ffa:	jmp	0x459fc1
0x459ffc:	nop	dword ptr [rax]
0x45a000:	endbr64	
0x45a004:	push	r12
0x45a006:	push	rbp
0x45a007:	push	rbx
0x45a008:	test	rdi, rdi
0x45a00b:	je	0x45a0e0
0x45a011:	mov	eax, dword ptr [rdi]
0x45a013:	mov	rbx, rdi
0x45a016:	test	eax, eax
0x45a018:	je	0x45a0e0
0x45a01e:	mov	rbp, qword ptr [rip + 0x87fbb]
0x45a025:	test	rbp, rbp
0x45a028:	je	0x45a036
0x45a02a:	lea	rdi, [rip + 0x8c76f]
0x45a031:	call	0x403f40
0x45a036:	mov	rax, qword ptr [rip + 0x8c79b]
0x45a03d:	test	rax, rax
0x45a040:	je	0x45a090
0x45a042:	lea	rcx, [rip + 0x8c78f]
0x45a049:	jmp	0x45a05a
0x45a04b:	nop	dword ptr [rax + rax]
0x45a050:	lea	rcx, [r12 + 0x28]
0x45a055:	test	rax, rax
0x45a058:	je	0x45a090
0x45a05a:	mov	rdx, qword ptr [rax + 0x18]
0x45a05e:	mov	r12, rax
0x45a061:	mov	rax, qword ptr [rax + 0x28]
0x45a065:	cmp	rbx, rdx
0x45a068:	jne	0x45a050
0x45a06a:	mov	qword ptr [rcx], rax
0x45a06d:	test	rbp, rbp
0x45a070:	je	0x45a07e
0x45a072:	lea	rdi, [rip + 0x8c727]
0x45a079:	call	0x403c90
0x45a07e:	mov	rax, r12
0x45a081:	pop	rbx
0x45a082:	pop	rbp
0x45a083:	pop	r12
0x45a085:	ret	
0x45a086:	nop	word ptr cs:[rax + rax]
0x45a090:	mov	r12, qword ptr [rip + 0x8c739]
0x45a097:	test	r12, r12
0x45a09a:	je	0x45a0f0
0x45a09c:	lea	rax, [rip + 0x8c72d]
0x45a0a3:	jmp	0x45a0bc
0x45a0a5:	nop	dword ptr [rax]
0x45a0a8:	cmp	rbx, qword ptr [rdi]
0x45a0ab:	je	0x45a110
0x45a0ad:	lea	rax, [r12 + 0x28]
0x45a0b2:	mov	r12, qword ptr [r12 + 0x28]
0x45a0b7:	test	r12, r12
0x45a0ba:	je	0x45a0f0
0x45a0bc:	mov	rdi, qword ptr [r12 + 0x18]
0x45a0c1:	test	byte ptr [r12 + 0x20], 1
0x45a0c7:	jne	0x45a0a8
0x45a0c9:	cmp	rbx, rdi
0x45a0cc:	jne	0x45a0ad
0x45a0ce:	mov	rdx, qword ptr [r12 + 0x28]
0x45a0d3:	mov	qword ptr [rax], rdx
0x45a0d6:	jmp	0x45a06d
0x45a0d8:	nop	dword ptr [rax + rax]
0x45a0e0:	xor	r12d, r12d
0x45a0e3:	pop	rbx
0x45a0e4:	pop	rbp
0x45a0e5:	mov	rax, r12
0x45a0e8:	pop	r12
0x45a0ea:	ret	
0x45a0eb:	nop	dword ptr [rax + rax]
0x45a0f0:	test	rbp, rbp
0x45a0f3:	je	0x45a101
0x45a0f5:	lea	rdi, [rip + 0x8c6a4]
0x45a0fc:	call	0x403c90
0x45a101:	call	0x403880
0x45a106:	nop	word ptr cs:[rax + rax]
0x45a110:	mov	rdx, qword ptr [r12 + 0x28]
0x45a115:	mov	qword ptr [rax], rdx
0x45a118:	call	0x403830
0x45a11d:	jmp	0x45a06d
0x45a122:	nop	word ptr cs:[rax + rax]
0x45a12d:	nop	dword ptr [rax]
0x45a130:	endbr64	
0x45a134:	jmp	0x45a000
0x45a139:	nop	dword ptr [rax]
0x45a140:	endbr64	
0x45a144:	mov	eax, dword ptr [rdi]
0x45a146:	test	eax, eax
0x45a148:	jne	0x45a150
0x45a14a:	ret	
0x45a14b:	nop	dword ptr [rax + rax]
0x45a150:	sub	rsp, 8
0x45a154:	call	0x45a000
0x45a159:	add	rsp, 8
0x45a15d:	mov	rdi, rax
0x45a160:	jmp	0x403830
0x45a165:	nop	word ptr cs:[rax + rax]
0x45a170:	endbr64	
0x45a174:	push	r15
0x45a176:	push	r14
0x45a178:	mov	r14, rdi
0x45a17b:	push	r13
0x45a17d:	push	r12
0x45a17f:	push	rbp
0x45a180:	mov	rbp, rsi
0x45a183:	push	rbx
0x45a184:	sub	rsp, 0x38
0x45a188:	mov	eax, dword ptr [rip + 0x8c63a]
0x45a18e:	test	eax, eax
0x45a190:	jne	0x45a210
0x45a192:	mov	rsi, rsp
0x45a195:	lea	rdi, [rip - 0x11bc]
0x45a19c:	mov	qword ptr [rsp], r14
0x45a1a0:	mov	qword ptr [rsp + 8], 0
0x45a1a9:	mov	qword ptr [rsp + 0x10], 0
0x45a1b2:	mov	qword ptr [rsp + 0x18], 0
0x45a1bb:	mov	qword ptr [rsp + 0x20], 0
0x45a1c4:	mov	dword ptr [rsp + 0x28], 1
0x45a1cc:	call	0x403810
0x45a1d1:	test	eax, eax
0x45a1d3:	js	0x45a370
0x45a1d9:	mov	r15, qword ptr [rsp + 0x20]
0x45a1de:	test	r15, r15
0x45a1e1:	je	0x45a1fe
0x45a1e3:	mov	rax, qword ptr [rsp + 8]
0x45a1e8:	mov	qword ptr [rbp], rax
0x45a1ec:	mov	rax, qword ptr [rsp + 0x10]
0x45a1f1:	mov	qword ptr [rbp + 8], rax
0x45a1f5:	mov	rax, qword ptr [rsp + 0x18]
0x45a1fa:	mov	qword ptr [rbp + 0x10], rax
0x45a1fe:	add	rsp, 0x38
0x45a202:	mov	rax, r15
0x45a205:	pop	rbx
0x45a206:	pop	rbp
0x45a207:	pop	r12
0x45a209:	pop	r13
0x45a20b:	pop	r14
0x45a20d:	pop	r15
0x45a20f:	ret	
0x45a210:	mov	r13, qword ptr [rip + 0x87dc9]
0x45a217:	test	r13, r13
0x45a21a:	je	0x45a228
0x45a21c:	lea	rdi, [rip + 0x8c57d]
0x45a223:	call	0x403f40
0x45a228:	mov	rbx, qword ptr [rip + 0x8c5a1]
0x45a22f:	test	rbx, rbx
0x45a232:	jne	0x45a24d
0x45a234:	jmp	0x45a2e0
0x45a239:	nop	dword ptr [rax]
0x45a240:	mov	rbx, qword ptr [rbx + 0x28]
0x45a244:	test	rbx, rbx
0x45a247:	je	0x45a2e0
0x45a24d:	cmp	r14, qword ptr [rbx]
0x45a250:	jb	0x45a240
0x45a252:	mov	rsi, r14
0x45a255:	mov	rdi, rbx
0x45a258:	call	0x459590
0x45a25d:	mov	r15, rax
0x45a260:	test	rax, rax
0x45a263:	je	0x45a2e0
0x45a265:	test	r13, r13
0x45a268:	jne	0x45a378
0x45a26e:	movzx	eax, word ptr [rbx + 0x20]
0x45a272:	mov	r13, qword ptr [rbx + 8]
0x45a276:	mov	r12, qword ptr [rbx + 0x10]
0x45a27a:	shr	ax, 3
0x45a27e:	mov	qword ptr [rbp], r13
0x45a282:	mov	qword ptr [rbp + 8], r12
0x45a286:	mov	edx, eax
0x45a288:	movzx	edi, al
0x45a28b:	test	byte ptr [rbx + 0x20], 4
0x45a28f:	jne	0x45a389
0x45a295:	lea	r8, [r15 + 8]
0x45a299:	cmp	dl, 0xff
0x45a29c:	je	0x45a35c
0x45a2a2:	mov	eax, edx
0x45a2a4:	and	eax, 0x70
0x45a2a7:	cmp	al, 0x20
0x45a2a9:	je	0x45a3a3
0x45a2af:	jbe	0x45a353
0x45a2b5:	mov	rsi, r12
0x45a2b8:	cmp	al, 0x30
0x45a2ba:	jne	0x45a363
0x45a2c0:	mov	rcx, rsp
0x45a2c3:	mov	rdx, r8
0x45a2c6:	call	0x4583a0
0x45a2cb:	mov	rax, qword ptr [rsp]
0x45a2cf:	mov	qword ptr [rbp + 0x10], rax
0x45a2d3:	jmp	0x45a1fe
0x45a2d8:	nop	dword ptr [rax + rax]
0x45a2e0:	lea	r12, [rip + 0x8c4e9]
0x45a2e7:	nop	word ptr [rax + rax]
0x45a2f0:	mov	rbx, qword ptr [rip + 0x8c4e1]
0x45a2f7:	test	rbx, rbx
0x45a2fa:	je	0x45a3ab
0x45a300:	mov	rax, qword ptr [rbx + 0x28]
0x45a304:	mov	rsi, r14
0x45a307:	mov	rdi, rbx
0x45a30a:	mov	qword ptr [rip + 0x8c4c7], rax
0x45a311:	call	0x459590
0x45a316:	mov	rdx, r12
0x45a319:	mov	r15, rax
0x45a31c:	mov	rax, qword ptr [rip + 0x8c4ad]
0x45a323:	test	rax, rax
0x45a326:	je	0x45a342
0x45a328:	mov	rcx, qword ptr [rbx]
0x45a32b:	jmp	0x45a33d
0x45a32d:	nop	dword ptr [rax]
0x45a330:	lea	rdx, [rax + 0x28]
0x45a334:	mov	rax, qword ptr [rax + 0x28]
0x45a338:	test	rax, rax
0x45a33b:	je	0x45a342
0x45a33d:	cmp	qword ptr [rax], rcx
0x45a340:	jae	0x45a330
0x45a342:	mov	qword ptr [rbx + 0x28], rax
0x45a346:	mov	qword ptr [rdx], rbx
0x45a349:	test	r15, r15
0x45a34c:	je	0x45a2f0
0x45a34e:	jmp	0x45a265
0x45a353:	and	edx, 0x60
0x45a356:	jne	0x42d0ae
0x45a35c:	xor	esi, esi
0x45a35e:	jmp	0x45a2c0
0x45a363:	cmp	al, 0x50
0x45a365:	je	0x45a35c
0x45a367:	jmp	0x42d0ae
0x45a36c:	nop	dword ptr [rax]
0x45a370:	xor	r15d, r15d
0x45a373:	jmp	0x45a1fe
0x45a378:	lea	rdi, [rip + 0x8c421]
0x45a37f:	call	0x403c90
0x45a384:	jmp	0x45a26e
0x45a389:	movsxd	rax, dword ptr [r15 + 4]
0x45a38d:	lea	rdi, [r15 + 4]
0x45a391:	sub	rdi, rax
0x45a394:	call	0x4584f0
0x45a399:	mov	edx, eax
0x45a39b:	movzx	edi, al
0x45a39e:	jmp	0x45a295
0x45a3a3:	mov	rsi, r13
0x45a3a6:	jmp	0x45a2c0
0x45a3ab:	test	r13, r13
0x45a3ae:	je	0x45a192
0x45a3b4:	lea	rdi, [rip + 0x8c3e5]
0x45a3bb:	call	0x403c90
0x45a3c0:	jmp	0x45a192
0x45a3c5:	nop	word ptr cs:[rax + rax]
0x45a3cf:	nop	
0x45a3d0:	endbr64	
0x45a3d4:	mov	rdx, qword ptr [rip + 0x8802d]
0x45a3db:	xor	esi, esi
0x45a3dd:	jmp	0x403e30

0x0 
0x0 _Znam
0x0 __libc_start_main
0x0 _ITM_deregisterTMCloneTable
0x0 __gmon_start__
0x0 _ITM_registerTMCloneTable
0x0 __cxa_finalize
0x0 
0x0 Scrt1.o
0x38c __abi_tag
0x0 crtstuff.c
0x1090 deregister_tm_clones
0x10c0 register_tm_clones
0x1100 __do_global_dtors_aux
0x4010 completed.0
0x3db0 __do_global_dtors_aux_fini_array_entry
0x1140 frame_dummy
0x3da8 __frame_dummy_init_array_entry
0x0 main.cpp
0x0 crtstuff.c
0x215c __FRAME_END__
0x0 
0x2004 __GNU_EH_FRAME_HDR
0x3db8 _DYNAMIC
0x3fb8 _GLOBAL_OFFSET_TABLE_
0x0 _Znam@GLIBCXX_3.4
0x4010 _edata
0x4000 data_start
0x2000 _IO_stdin_used
0x0 __cxa_finalize@GLIBC_2.2.5
0x1239 main
0x4008 __dso_handle
0x128c _fini
0x0 __libc_start_main@GLIBC_2.34
0x11eb _Z3fibi
0x117a _Z7foocallii
0x1060 _start
0x1149 _Z12functioncallii
0x1000 _init
0x4010 __TMC_END__
0x4000 __data_start
0x4018 _end
0x4010 __bss_start
0x0 _ITM_deregisterTMCloneTable
0x0 __gmon_start__
0x0 _ITM_registerTMCloneTable
0x1060:	endbr64	
0x1064:	xor	ebp, ebp
0x1066:	mov	r9, rdx
0x1069:	pop	rsi
0x106a:	mov	rdx, rsp
0x106d:	and	rsp, 0xfffffffffffffff0
0x1071:	push	rax
0x1072:	push	rsp
0x1073:	xor	r8d, r8d
0x1076:	xor	ecx, ecx
0x1078:	lea	rdi, [rip + 0x1ba]
0x107f:	call	qword ptr [rip + 0x2f5b]
0x1085:	hlt	
0x1086:	nop	word ptr cs:[rax + rax]
0x1090:	lea	rdi, [rip + 0x2f79]
0x1097:	lea	rax, [rip + 0x2f72]
0x109e:	cmp	rax, rdi
0x10a1:	je	0x10b8
0x10a3:	mov	rax, qword ptr [rip + 0x2f3e]
0x10aa:	test	rax, rax
0x10ad:	je	0x10b8
0x10af:	jmp	rax
0x10b1:	nop	dword ptr [rax]
0x10b8:	ret	
0x10b9:	nop	dword ptr [rax]
0x10c0:	lea	rdi, [rip + 0x2f49]
0x10c7:	lea	rsi, [rip + 0x2f42]
0x10ce:	sub	rsi, rdi
0x10d1:	mov	rax, rsi
0x10d4:	shr	rsi, 0x3f
0x10d8:	sar	rax, 3
0x10dc:	add	rsi, rax
0x10df:	sar	rsi, 1
0x10e2:	je	0x10f8
0x10e4:	mov	rax, qword ptr [rip + 0x2f0d]
0x10eb:	test	rax, rax
0x10ee:	je	0x10f8
0x10f0:	jmp	rax
0x10f2:	nop	word ptr [rax + rax]
0x10f8:	ret	
0x10f9:	nop	dword ptr [rax]
0x1100:	endbr64	
0x1104:	cmp	byte ptr [rip + 0x2f05], 0
0x110b:	jne	0x1138
0x110d:	push	rbp
0x110e:	cmp	qword ptr [rip + 0x2ec2], 0
0x1116:	mov	rbp, rsp
0x1119:	je	0x1127
0x111b:	mov	rdi, qword ptr [rip + 0x2ee6]
0x1122:	call	0x1040
0x1127:	call	0x1090
0x112c:	mov	byte ptr [rip + 0x2edd], 1
0x1133:	pop	rbp
0x1134:	ret	
0x1135:	nop	dword ptr [rax]
0x1138:	ret	
0x1139:	nop	dword ptr [rax]
0x1140:	endbr64	
0x1144:	jmp	0x10c0
0x1149:	endbr64	
0x114d:	push	rbp
0x114e:	mov	rbp, rsp
0x1151:	mov	dword ptr [rbp - 4], edi
0x1154:	mov	dword ptr [rbp - 8], esi
0x1157:	mov	dword ptr [rbp - 4], 0
0x115e:	jmp	0x116b
0x1160:	add	dword ptr [rbp - 8], 0x1c8
0x1167:	add	dword ptr [rbp - 4], 1
0x116b:	cmp	dword ptr [rbp - 4], 0xa
0x116f:	jle	0x1160
0x1171:	sub	dword ptr [rbp - 8], 0x37
0x1175:	mov	eax, dword ptr [rbp - 8]
0x1178:	pop	rbp
0x1179:	ret	
0x117a:	endbr64	
0x117e:	push	rbp
0x117f:	mov	rbp, rsp
0x1182:	sub	rsp, 0x20
0x1186:	mov	dword ptr [rbp - 0x14], edi
0x1189:	mov	dword ptr [rbp - 0x18], esi
0x118c:	mov	edi, 0x28
0x1191:	call	0x1050
0x1196:	mov	qword ptr [rbp - 8], rax
0x119a:	mov	dword ptr [rbp - 0xc], 0
0x11a1:	jmp	0x11c7
0x11a3:	add	dword ptr [rbp - 0x18], 0x1c8
0x11aa:	mov	eax, dword ptr [rbp - 0xc]
0x11ad:	cdqe	
0x11af:	lea	rdx, [rax*4]
0x11b7:	mov	rax, qword ptr [rbp - 8]
0x11bb:	add	rdx, rax
0x11be:	mov	eax, dword ptr [rbp - 0x18]
0x11c1:	mov	dword ptr [rdx], eax
0x11c3:	add	dword ptr [rbp - 0xc], 1
0x11c7:	cmp	dword ptr [rbp - 0xc], 0xa
0x11cb:	jle	0x11a3
0x11cd:	mov	rax, qword ptr [rbp - 8]
0x11d1:	add	rax, 0x14
0x11d5:	mov	eax, dword ptr [rax]
0x11d7:	mov	rdx, qword ptr [rbp - 8]
0x11db:	add	rdx, 0x1c
0x11df:	mov	edx, dword ptr [rdx]
0x11e1:	sub	eax, edx
0x11e3:	mov	dword ptr [rbp - 0x18], eax
0x11e6:	mov	eax, dword ptr [rbp - 0x18]
0x11e9:	leave	
0x11ea:	ret	
0x11eb:	endbr64	
0x11ef:	push	rbp
0x11f0:	mov	rbp, rsp
0x11f3:	push	rbx
0x11f4:	sub	rsp, 0x18
0x11f8:	mov	dword ptr [rbp - 0x14], edi
0x11fb:	cmp	dword ptr [rbp - 0x14], 1
0x11ff:	jne	0x1208
0x1201:	mov	eax, 1
0x1206:	jmp	0x1233
0x1208:	cmp	dword ptr [rbp - 0x14], 2
0x120c:	jne	0x1215
0x120e:	mov	eax, 1
0x1213:	jmp	0x1233
0x1215:	mov	eax, dword ptr [rbp - 0x14]
0x1218:	sub	eax, 1
0x121b:	mov	edi, eax
0x121d:	call	0x11eb
0x1222:	mov	ebx, eax
0x1224:	mov	eax, dword ptr [rbp - 0x14]
0x1227:	sub	eax, 2
0x122a:	mov	edi, eax
0x122c:	call	0x11eb
0x1231:	add	eax, ebx
0x1233:	mov	rbx, qword ptr [rbp - 8]
0x1237:	leave	
0x1238:	ret	
0x1239:	endbr64	
0x123d:	push	rbp
0x123e:	mov	rbp, rsp
0x1241:	sub	rsp, 0x20
0x1245:	mov	dword ptr [rbp - 0x14], edi
0x1248:	mov	qword ptr [rbp - 0x20], rsi
0x124c:	mov	dword ptr [rbp - 8], 1
0x1253:	mov	dword ptr [rbp - 4], 0
0x125a:	mov	edx, dword ptr [rbp - 4]
0x125d:	mov	eax, dword ptr [rbp - 8]
0x1260:	mov	esi, edx
0x1262:	mov	edi, eax
0x1264:	call	0x1149
0x1269:	mov	dword ptr [rbp - 4], eax
0x126c:	mov	edx, dword ptr [rbp - 4]
0x126f:	mov	eax, dword ptr [rbp - 8]
0x1272:	mov	esi, edx
0x1274:	mov	edi, eax
0x1276:	call	0x117a
0x127b:	mov	dword ptr [rbp - 4], eax
0x127e:	mov	edi, 0x14
0x1283:	call	0x11eb
0x1288:	nop	
0x1289:	leave	
0x128a:	ret	

[system]
description = "Simple test of channels and events, both sender and receiver in the same component."

[[components]]
name = "booter"
img  = "no_interface.llbooter"
implements = [{interface = "init"}, {interface = "addr"}]
deps = [{srv = "kernel", interface = "init", variant = "kernel"}]
constructor = "kernel"

[[components]]
name = "capmgr"
img  = "capmgr.simple"
deps = [{srv = "booter", interface = "init"}, {srv = "booter", interface = "addr"}]
implements = [{interface = "capmgr"}, {interface = "init"}, {interface = "memmgr"}, {interface = "capmgr_create"}]
constructor = "booter"

[[components]]
name = "sched"
img  = "sched.pfprr_quantum_static"
deps = [{srv = "capmgr", interface = "init"}, {srv = "capmgr", interface = "capmgr"}, {srv = "capmgr", interface = "memmgr"}]
implements = [{interface = "sched"}, {interface = "init"}]
constructor = "booter"

[[components]]
name = "chanmgr"
img  = "chanmgr.simple"
deps = [{srv = "sched", interface = "init"}, {srv = "sched", interface = "sched"}, {srv = "capmgr", interface = "capmgr_create"}, {srv = "capmgr", interface = "memmgr"}, {srv = "capmgr", interface = "capmgr"}]
implements = [{interface = "chanmgr"}, {interface = "chanmgr_evt"}]
constructor = "booter"

[[components]]
name = "evtmgr"
img  = "evt.evtmgr"
deps = [{srv = "sched", interface = "init"}, {srv = "sched", interface = "sched"}, {srv = "capmgr", interface = "capmgr_create"}]
implements = [{interface = "evt"}]
constructor = "booter"

[[components]]
name = "chanhi"
img  = "tests.unit_composer_chan_hi"
criticality_level = 1 
virt_res = [
    {vr_type = "chan", instances = [
        {chan_02 = {access = ["read","write"]  , name = "chan_out"  }}]}
]
deps = [{srv = "sched", interface = "sched"}, {srv = "sched", interface = "init"}, {srv = "capmgr", interface = "capmgr_create"}, {srv = "capmgr", interface = "memmgr"}, {srv = "chanmgr", interface = "chanmgr"}, {srv = "chanmgr", interface = "chanmgr_evt"}, {srv = "evtmgr", interface = "evt"}]
constructor = "booter"

[[components]]
name = "chanlo"
img  = "tests.unit_composer_chan_lo"
criticality_level = 0 
virt_res = [
    {vr_type = "chan", instances = [
        {chan_01 = {access = ["read","write"]  , name = "chan_in" , association = [{vr_type = "evt", instance = "evt_01"}] }}]}   
]
deps = [{srv = "sched", interface = "sched"}, {srv = "sched", interface = "init"}, {srv = "capmgr", interface = "capmgr_create"}, {srv = "capmgr", interface = "memmgr"}, {srv = "chanmgr", interface = "chanmgr"}, {srv = "chanmgr", interface = "chanmgr_evt"}, {srv = "evtmgr", interface = "evt"}]
constructor = "booter"

[[components]]
name = "shared_comp"
img  = "tests.unit_composer_shared"
criticality_level = 0 
virt_res = [
    {vr_type = "chan", instances = [
        {chan_01 = {access = ["read","write","blocking"]  , name = "chan_out" , association = [{vr_type = "evt", instance = "evt_01"}] }},
        {chan_02 = {access = ["read","write"]  , name = "chan_in"  }}]},
    {vr_type = "evt", can_dynamic_alloc = false, instances = [
        {evt_01 = {access = ["read","write", "blocking"]  , name = "evt_out" , association = [{vr_type = "evt_aggregate", instance = "evt_agg_01", data = "chan"}] }}]}    
]
deps = [{srv = "sched", interface = "sched"}, {srv = "sched", interface = "init"}, {srv = "capmgr", interface = "capmgr_create"}, {srv = "capmgr", interface = "memmgr"}, {srv = "chanmgr", interface = "chanmgr"}, {srv = "chanmgr", interface = "chanmgr_evt"}, {srv = "evtmgr", interface = "evt"}]
constructor = "booter"

[[virt_resources]]
vr_type = "chan"
server = "chanmgr"
resources = [
    {instance = "chan_01", param = { size_item = "8", num_slots = "16" }},
    {instance = "chan_02", param = { size_item = "8", num_slots = "16" }}
]

[[virt_resources]]
vr_type = "evt_aggregate"
server = "evtmgr"
resources = [
    {instance = "evt_agg_01", param = {contained_events = ["evt_01"]} }
]

[[virt_resources]]
vr_type = "evt"
server = "evtmgr"
resources = [
    {instance = "evt_01", param = {} }
]